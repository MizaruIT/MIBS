{
  "imports": {
    "class": "imports",
    "RBN-SMI": [
      "rbnMgmt"
    ],
    "RBN-TC": [
      "RbnCircuitHandle",
      "RbnSlot",
      "RbnPort"
    ],
    "SNMP-FRAMEWORK-MIB": [
      "SnmpAdminString"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE",
      "OBJECT-GROUP"
    ],
    "SNMPv2-SMI": [
      "MibIdentifier",
      "Counter64",
      "Bits",
      "IpAddress",
      "TimeTicks",
      "OBJECT-TYPE",
      "Counter32",
      "OBJECT-IDENTITY",
      "Integer32",
      "NOTIFICATION-TYPE",
      "iso",
      "Gauge32",
      "MODULE-IDENTITY",
      "Unsigned32"
    ],
    "SNMPv2-TC": [
      "TruthValue",
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "rbnBindMib": {
    "name": "rbnBindMib",
    "oid": "1.3.6.1.4.1.2352.2.17",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2003-10-13 17:00",
        "description": "Added new object rbnBindAuthDhcp. Added new MODULE-COMPLIANCE statement rbnBindCompliance2. Added new OBJECT-GROUP rbnBindConfigGroup2. Clarified DESCRIPTION clause for rbnBindName by adding multiIntfBind to the list of bind types where rbnBindName is applicable. Corrected misspelling of multiIntfBind in the DESCRIPTION clause of rbnBindAuthContext."
      },
      {
        "revision": "2003-03-07 17:00",
        "description": "Added 'sessionBind' as one of the bind types that are applicable to rbnBindMaxSessions object. Removed reference to non-existant platform in DESCRIPTION of rbnBindMaxSessions object."
      },
      {
        "revision": "2002-11-13 00:00",
        "description": "Updated to import RbnSlot and RbnPort from RBN-TC."
      },
      {
        "revision": "2002-07-25 17:00",
        "description": "Added support for the CLIPs bind type."
      },
      {
        "revision": "2002-01-07 17:00",
        "description": "Initial version."
      }
    ],
    "lastupdated": "200310131700Z",
    "organization": "Redback Networks, Inc.",
    "contactinfo": " RedBack Networks, Inc. Postal: 300 Holger Way San Jose, CA 95134-1362 USA Phone: +1 408 750 5000 Fax: +1 408 750 5599 E-mail: mib-info@redback.com",
    "description": "Defines the objects necessary to support binding circuits to interfaces."
  },
  "rbnBindMIBObjects": {
    "name": "rbnBindMIBObjects",
    "oid": "1.3.6.1.4.1.2352.2.17.1",
    "class": "objectidentity"
  },
  "rbnBindMIBConformance": {
    "name": "rbnBindMIBConformance",
    "oid": "1.3.6.1.4.1.2352.2.17.2",
    "class": "objectidentity"
  },
  "rbnBindMIBNotifications": {
    "name": "rbnBindMIBNotifications",
    "oid": "1.3.6.1.4.1.2352.2.17.3",
    "class": "objectidentity"
  },
  "RbnBindType": {
    "name": "RbnBindType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unbound": 1,
          "authBind": 2,
          "bypassBind": 3,
          "interfaceBind": 4,
          "subscriberBind": 5,
          "l2tptunnelBind": 6,
          "sessionBind": 7,
          "dot1qBind": 8,
          "multiIntfBind": 9,
          "multiSubBind": 10,
          "multiClipsBind": 11
        }
      }
    },
    "status": "current",
    "description": "The binding type. The comment after the enumeration label is the equivalent CLI command that would config the corresponding bind type."
  },
  "rbnBindTable": {
    "name": "rbnBindTable",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains the objects which identify and configure circuit bindings. With respect to creation and deletion of entries in this table, rows are created or deleted when a circuit is created or deleted - there is no explicit explicit creation or deletion of rows allowed or required."
  },
  "rbnBindEntry": {
    "name": "rbnBindEntry",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindCircuit",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A conceptual row in the rbnBindTable."
  },
  "rbnBindCircuit": {
    "name": "rbnBindCircuit",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RbnCircuitHandle",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A key identifying the circuit for which the binding applies. Note the implication: this key identifies an existing circuit. A basic tenent thus evolves: the circuit must exist before it can be bound. See the definition of the RbnCircuitHandle TEXTUAL-CONVENTION for the definition of this key."
  },
  "rbnBindType": {
    "name": "rbnBindType",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RbnBindType",
      "class": "type"
    },
    "maxaccess": "read-create",
    "reference": "Access Operating System (AOS) Command Reference Release 5.0",
    "status": "current",
    "description": "The type of the binding. See the definition of the RbnBindType TEXTUAL-CONVENTION for the possible types. The bind type must be appropriate to the type of circuit that it is being applied to. See the AOS Command Reference Manual for a complete exposition of what circuit types may be associated with which bindings. Note that when a circuit is created, an initial binding is established of type 'unbound'. So there is always some binding in effect for a circuit; there is no concept of explicitly creating or deleting a binding, there is merely setting it's type and supplying the applicable attributes for the bind type. In other words, with respect to entries in this table, when a circuit is created, a row in this table is also created. and when a circuit is deleted, the row in this table is also deleted. If you change the bind type to a new bind type for a circuit, the previous binding is removed and any active sessions are dropped. If an existing binding on the circuit is exactly the same as specified in the new binding, the existing binding is not removed. When changing the bind type to a new bind type, all objects mandatory for the new bind type must be included in the set operation. Thus, the bind type will determine which group of objects in a row of the rbnBindTable that will be applicable for that instance of a circuit. For example, if the bind type is 'subscriberBind', then the columns in the row that are applicable will be: rbnBindType rbnBindName rbnBindContext rbnBindPassword In a set operation, if additional columns are specified for some given bind type, that is, columnar objects which are not applicable to the given bind type, an INCONSISTENT VALUE error will be returned. The DESCRIPTION clause for each of the rbnBindTable objects specifies the bind types that are applicable for that object. For a complete specification of the various bind types and the applicable columns of the rbnBindTable, please see AOS Command Reference manual."
  },
  "rbnBindName": {
    "name": "rbnBindName",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 192
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "A name associated with the binding. This field is only applicable when the value of rbnBindType is: bypassBind interfaceBind subscriberBind l2tptunnelBind multiIntfBind multiSubBind sessionBind If the value of rbnBindType is not one of these bind types, then rbnBindName is not instantiated for this entry. The value of rbnBindName is dependent on the value specified in rbnBindType as described below: Bind Type Value of Name --------- ------------- bypassBind the name of an existing bypass to which the circuit is to be bound interfaceBind the name of an existing interface subscriberBind the name of a subscriber l2tptunnelBind the tunnel to which the circuit is to be bound multiIntfBind the name of an existing interface multiSubBind the name of a subscriber sessionBind the name of the peer or L2TP group to which the circuit is to be bound Don't think of rbnBindName as the name of the binding. Rather, it is the name of some other attribute associated with the binding."
  },
  "rbnBindPassword": {
    "name": "rbnBindPassword",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The AAA password. This field is only applicable when the value of rbnBindType is: subscriberBind If the value of rbnBindType is not this bind type, then rbnBindPassword is not instantiated for this entry."
  },
  "rbnBindContext": {
    "name": "rbnBindContext",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The name of the context associated with the binding. This field is applicable only when one of the following rbnBindType values is specified: Bind Type Value of Context --------- ---------------- bypassBind The name of the context where the bypass exists. interfaceBind The name of the context in which the specified interface exists. subscriberBind The name of the context used to locate the subscriber information. l2tptunnelBind The name of the context in which the tunnel is configured. sessionBind The name of the context for the peer. multiIntfBind The name of the context for the interface to which the IP over Ethernet portion of the circuit is to be bound. multiSubBind The name of the context for the interface to which the IP over Ethernet portion of the circuit is to be bound. multiClipsBind The name of the context for the interface to which the IP over Ethernet portion of the circuit is to be bound. If the value of rbnBindType is not one of these bind types, then rbnBindContext is not instantiated for this entry."
  },
  "rbnBindAuthContext": {
    "name": "rbnBindAuthContext",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The name of the authentication context associated with the binding. It is the name of the context to which PPP sessions on the circuits being bound are restricted. Specification of this column for a given entry is optional. When using this optional context name, all attempts to bind PPP sessions to contexts other than the one specified will fail. This object is applicable only when one of the following rbnBindType values is specified: authBind multiIntfBind multiSubBind If the value of rbnBindType is not one of these bind types, then rbnBindAuthContext is not instantiated for this entry."
  },
  "rbnBindServiceGrp": {
    "name": "rbnBindServiceGrp",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The name of the service access list associated with the binding. It is the name of the service access list that defines the services available to the PPP-encapsulated circuit. Specification of this column for a given entry is optional. When using this optional service access list, all attempts to authenticate to contexts or domains not permitted by the named service access list fail. This object is applicable only when one of the following rbnBindType values is specified: authBind multiIntfBind multiSubBind multiClipsBind If the value of rbnBindType is not one of these bind types, then rbnBindServiceGrp is not instantiated for this entry."
  },
  "rbnBindAcl": {
    "name": "rbnBindAcl",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The name of the bridge access control list associated with the binding. It is the name of the Access control list to be applied to the session. The access control list must already have been configured in the context of the session peer. This is typically used to filter packets so that only PPPoE traffic is allowed through an Ethernet L2TP tunnel. Specification of this column for a given entry is optional. This object is applicable only when one of the following rbnBindType values is specified: sessionBind If the value of rbnBindType is not one of these bind types, then rbnBindAcl is not instantiated for this entry."
  },
  "rbnBindAuthChap": {
    "name": "rbnBindAuthChap",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "If 'true', specifies that the PPP authentication protocol to be used is Challenge Handshake Authentication Protocol. This object is applicable only when one of the following rbnBindType values is specified: authBind multiIntfBind multiSubBind If the value of rbnBindType is not one of these bind types, then rbnBindAuthChap is not instantiated for this entry. When performing a set operation on a row which involves one of these bind types, either rbnBindAuthChap or rbnBindAuthPap or both must be specified. If both rbnBindAuthChap and rbnBindAuthPap are true, then either authentication protocol may be used."
  },
  "rbnBindAuthPap": {
    "name": "rbnBindAuthPap",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "If 'true', specifies that the PPP authentication protocol to be used is Password Authentication Protocol. This object is applicable only when one of the following rbnBindType values is specified: authBind multiIntfBind multiSubBind If the value of rbnBindType is not one of these bind types, then rbnBindAuthPap is not instantiated for this entry. When performing a set operation on a row which involves one of these bind types, either rbnBindAuthChap or rbnBindAuthPap or both must be specified. If both rbnBindAuthChap and rbnBindAuthPap are true, then either authentication protocol may be used."
  },
  "rbnBindAuthWait": {
    "name": "rbnBindAuthWait",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "If 'true', specifies that the inbound CHAP authentication is completed first. In other words, after the two sides have decided to use CHAP, the SMS waits for the inbound side to initiate athentication. If 'true', rbnBindAuthChap must also be specified. This object is applicable only when one of the following rbnBindType values is specified: authBind multiIntfBind multiSubBind If the value of rbnBindType is not one of these bind types, then rbnBindAuthWait is not instantiated for this entry. When performing a set operation on a row which involves this bind type, specification of this column is optional. If not specified, this object will not be instantiated."
  },
  "rbnBindAuthPapFirst": {
    "name": "rbnBindAuthPapFirst",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "If 'true', specifies that Password Authentication Protocol (PAP) shall be negotiated before Challenge Handshake Authentication Protocol (CHAP). IF 'false', then CHAP is negotiated before PAP. With SNMP get operations, both rbnBindAuthChap and rbnBindAuthPap must be true or this object is not instantiated. With SNMP set operations, if 'true', then both rbnBindAuthChap and rbnBindAuthPap must also be specified as 'true'. This object is applicable only when one of the following rbnBindType values is specified: authBind multiIntfBind multiSubBind If the value of rbnBindType is not one of these bind types, then rbnBindAuthPapFirst is not instantiated for this entry. When performing a set operation on a row which involves one of these bind types, specification of this column is optional. If not specified, this object will not be instantiated."
  },
  "rbnBindMaxSessions": {
    "name": "rbnBindMaxSessions",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The maximum number of concurrent sessions allowed on the circuit. Applicable only to circuits which have an encapsulation of type PPPoE. If the circuit is not of this type, then this entry is ignored. Specification of this column for a given row is optional. If not specified, this object will not be instantiated. This object is applicable only when one of the following rbnBindType values is specified: authBind sessionBind multiIntfBind multiSubBind multiClipsBind If the value of rbnBindType is not one of these bind types, then rbnBindMaxSessions is not instantiated for this entry. The maximum number of concurrent sessions allowed on the circuit depends on the platform as specified in the table below: Platform Sessions MemSize -------- -------- ------- SMS10000 65535 SMS1800/1000 10000 64MB FE SMS1800/1000 8000 48MB FE SMS1800/1000 4000 32MB FE SMS1800/1000 4000 16MB FE SMS1800/1000 4000 8MB FE SMS500 2000"
  },
  "rbnBindPvcSlot": {
    "name": "rbnBindPvcSlot",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RbnSlot",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The chassis slot number associated with this binding. Use of the 'dot1qBind' type is for binding an ATM or Frame Relay PVC to an Ethernet port using the specified VLAN ID in rbnBindVpn. This object is applicable only when one of the following rbnBindType values is specified: dot1qBind If the value of rbnBindType is not one of these bind types, then rbnBindPvcSlot is not instantiated for this entry."
  },
  "rbnBindPvcPort": {
    "name": "rbnBindPvcPort",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RbnPort",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The chassis port number associated with this binding. Use of the 'dot1qBind' type is for binding an ATM or Frame Relay PVC to an Ethernet port using the specified VLAN ID in rbnBindVpn. This object is applicable only when one of the following rbnBindType values is specified: dot1qBind If the value of rbnBindType is not one of these bind types, then rbnBindPvcPort is not instantiated for this entry."
  },
  "rbnBindVpn": {
    "name": "rbnBindVpn",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 2,
            "max": 4094
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The specific tag to which the PVC is mapped on the specified Ethernet port. Use of the 'dot1qBind' type is for binding an ATM or Frame Relay PVC to an Ethernet port using the specified VLAN ID in rbnBindVpn. This object is applicable only when one of the following rbnBindType values is specified: dot1qBind If the value of rbnBindType is not one of these bind types, then rbnBindVpn is not instantiated for this entry."
  },
  "rbnBindAuthDhcp": {
    "name": "rbnBindAuthDhcp",
    "oid": "1.3.6.1.4.1.2352.2.17.1.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "If 'true', specifies an authentication mechanism where the DHCP server makes a request to the authentication subsystem upon receipt of incoming DHCP discover packets. This object is applicable only when one of the following rbnBindType values is specified: multiIntfBind multiClipsBind If the value of rbnBindType is not one of these bind types, then rbnBindAuthDhcp is not instantiated for this entry. When performing a set operation on a row which involves one of these bind types, if either rbnBindAuthChap or rbnBindAuthPap or both are specified, then rbnBindAuthDhcp may not be specified."
  },
  "rbnBindCompliances": {
    "name": "rbnBindCompliances",
    "oid": "1.3.6.1.4.1.2352.2.17.2.1",
    "class": "objectidentity"
  },
  "rbnBindGroups": {
    "name": "rbnBindGroups",
    "oid": "1.3.6.1.4.1.2352.2.17.2.2",
    "class": "objectidentity"
  },
  "rbnBindCompliance": {
    "name": "rbnBindCompliance",
    "oid": "1.3.6.1.4.1.2352.2.17.2.1.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "rbnBindConfigGroup",
        "module": "RBN-BIND-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The compliance statement for SNMP entities which implement the RBN-BIND-MIB."
  },
  "rbnBindCompliance2": {
    "name": "rbnBindCompliance2",
    "oid": "1.3.6.1.4.1.2352.2.17.2.1.2",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "rbnBindConfigGroup2",
        "module": "RBN-BIND-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for SNMP entities which implement the RBN-BIND-MIB."
  },
  "rbnBindConfigGroup": {
    "name": "rbnBindConfigGroup",
    "oid": "1.3.6.1.4.1.2352.2.17.2.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindType"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindName"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindContext"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindPassword"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindAuthContext"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindServiceGrp"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindAcl"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindAuthChap"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindAuthPap"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindAuthWait"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindAuthPapFirst"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindMaxSessions"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindPvcSlot"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindPvcPort"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindVpn"
      }
    ],
    "status": "deprecated",
    "description": "The collection of all objects applicable for all values of rbnBindType."
  },
  "rbnBindConfigGroup2": {
    "name": "rbnBindConfigGroup2",
    "oid": "1.3.6.1.4.1.2352.2.17.2.2.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindType"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindName"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindContext"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindPassword"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindAuthContext"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindServiceGrp"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindAcl"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindAuthChap"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindAuthPap"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindAuthWait"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindAuthPapFirst"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindMaxSessions"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindPvcSlot"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindPvcPort"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindVpn"
      },
      {
        "module": "RBN-BIND-MIB",
        "object": "rbnBindAuthDhcp"
      }
    ],
    "status": "current",
    "description": "The collection of all objects applicable for all values of rbnBindType."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/RBN-BIND-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:40:46 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "RBN-BIND-MIB"
  }
}