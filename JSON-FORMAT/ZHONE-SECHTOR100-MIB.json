{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "IpAddress",
      "MibIdentifier",
      "OBJECT-IDENTITY",
      "Counter64",
      "OBJECT-TYPE",
      "Integer32",
      "TimeTicks",
      "NOTIFICATION-TYPE",
      "Gauge32",
      "MODULE-IDENTITY",
      "Unsigned32",
      "iso",
      "Bits",
      "Counter32"
    ],
    "SNMPv2-TC": [
      "MacAddress",
      "TEXTUAL-CONVENTION",
      "TruthValue",
      "DisplayString"
    ],
    "Zhone": [
      "zhoneShelfIndex",
      "zhoneSlotIndex",
      "sechtor100",
      "zhoneModules"
    ],
    "Zhone-TC": [
      "ZhoneRowStatus"
    ]
  },
  "zhoneSechtor100": {
    "name": "zhoneSechtor100",
    "oid": "1.3.6.1.4.1.5504.6.19",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2001-09-28 10:29",
        "description": "V01.01.00 Introduce sechtor100ConfigTable"
      },
      {
        "revision": "2000-12-27 11:17",
        "description": "V01.00.01 - Add Zhone keywording"
      },
      {
        "revision": "2000-12-21 17:00",
        "description": "V01.00.00 - Initial Release"
      }
    ],
    "lastupdated": "200109281029Z",
    "organization": "Zhone Technologies, Inc",
    "contactinfo": " Postal: Zhone Technologies, Inc. @ Zhone Way 7001 Oakport Street Oakland, CA 94621 USA Toll-Free: +1 877-ZHONE20 (+1 877-946-6320) Tel: +1-510-777-7000 Fax: +1-510-777-7001 E-mail: support@zhone.com",
    "description": "MIB module for elements specific to Sechtor 100 products."
  },
  "sechtor100Environment": {
    "name": "sechtor100Environment",
    "oid": "1.3.6.1.4.1.5504.2.4.1.1",
    "class": "objectidentity",
    "status": "deprecated",
    "description": "All the scalar objects under sechor100Environment are deprecated and replaced by their respective objects indexed by zhoneShelfIndex and zhoneSlotIndex. "
  },
  "s100FanOperationalStatus": {
    "name": "s100FanOperationalStatus",
    "oid": "1.3.6.1.4.1.5504.2.4.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "operational": 1,
          "fanFailure": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "This variable describes the working status of the four fans for the Sechtor 100. If any one of the four fans is not running correctly, this variable shows 'fanFailure'. When all the fans are working, the value of this variable is 'operational'. "
  },
  "s100ThermoAUpperThreshold": {
    "name": "s100ThermoAUpperThreshold",
    "oid": "1.3.6.1.4.1.5504.2.4.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 45,
            "max": 80
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "This variable specifies the upper threshold for thermometer A in degrees Celsius. When s100ThermoATemperature is above this value, s100ThermoAOperationalStatus would be 'overUpperThreshold' and a trap will be generated. Valid range is 45..80 degrees Celsius and the default is 65 degrees Celsius."
  },
  "s100ThermoBUpperThreshold": {
    "name": "s100ThermoBUpperThreshold",
    "oid": "1.3.6.1.4.1.5504.2.4.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 45,
            "max": 80
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "This variable specifies the upper threshold for thermometer B in degrees Celsius. When s100ThermoBTemperature is above this value, s100ThermoBOperationalStatus would be 'overUpperThreshold' and a trap will be generated. Valid range is 45..80 degrees Celsius and the default is 60 degrees Celsius."
  },
  "s10ThermoALowerThreshold": {
    "name": "s10ThermoALowerThreshold",
    "oid": "1.3.6.1.4.1.5504.2.4.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -10,
            "max": 5
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "This variable specifies the lower threshold for thermometer A in degrees Celsius. When s100ThermoATemperature is below this value, s100ThermoAOperationalStatus would be 'belowLowerThreshold' and a trap will be generated. Valid range is -10..5 degrees Celsius and the default is -5 degrees Celsius."
  },
  "s100ThermoBLowerThreshold": {
    "name": "s100ThermoBLowerThreshold",
    "oid": "1.3.6.1.4.1.5504.2.4.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -10,
            "max": 5
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "This variable specifies the lower threshold for thermometer B in degrees Celsius. When s100ThermoATemperature is below this value, s100ThermoBOperationalStatus would be 'belowLowerThreshold' and a trap will be generated. Valid range is -10..5 degrees Celsius and the default is -5 degrees Celsius."
  },
  "s100ThermoATemperature": {
    "name": "s100ThermoATemperature",
    "oid": "1.3.6.1.4.1.5504.2.4.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -55,
            "max": 125
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The temperature in degrees Celsius read by the IC thermometer sensor A on the PCB board. It is effectively the internal ambient temperature inside the enclosure where thermometer A is located. The valid temperature range for the thermometer is -55..125 degrees Celsius."
  },
  "s100ThermoBTemperature": {
    "name": "s100ThermoBTemperature",
    "oid": "1.3.6.1.4.1.5504.2.4.1.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -55,
            "max": 125
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The temperature in degrees Celsius read by the IC thermometer sensor B on the PCB board. It is effectively the internal ambient temperature inside the enclosure where thermometer B is located. The valid temperature range for the thermometer is -55..125 degrees Celsius."
  },
  "s100ThermoAOperationalStatus": {
    "name": "s100ThermoAOperationalStatus",
    "oid": "1.3.6.1.4.1.5504.2.4.1.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "withinOperationalRange": 1,
          "overUpperThreshold": 2,
          "belowLowerThreshold": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The operational status indicator for thermometer A. Valid values are: * withinOperationalRange - s100ThermoATemperature is within its lower and upper threshold range. * overUpperThreshold - s100ThermoATemperature is higher than its upper threshold. * belowLowerThreshold - s100ThermoATemperature is lower than its lower threshold."
  },
  "s100ThermoBOperationalStatus": {
    "name": "s100ThermoBOperationalStatus",
    "oid": "1.3.6.1.4.1.5504.2.4.1.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "withinOperationalRange": 1,
          "overUpperThreshold": 2,
          "belowLowerThreshold": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The operational status indicator for thermometer B. Valid values are: * withinOperationalRange - s100ThermoBTemperature is within its lower and upper threshold range. * overUpperThreshold - s100ThermoBTemperature is higher than its upper threshold. * belowLowerThreshold - s100ThermoBTemperature is lower than its lower threshold."
  },
  "sechtor100Traps": {
    "name": "sechtor100Traps",
    "oid": "1.3.6.1.4.1.5504.2.4.1.2",
    "class": "objectidentity",
    "status": "current",
    "description": "All Sechtor 100 MIB traps are defined under sechtor100Traps."
  },
  "sechtor100TrapsPrefix": {
    "name": "sechtor100TrapsPrefix",
    "oid": "1.3.6.1.4.1.5504.2.4.1.2.0",
    "class": "objectidentity",
    "status": "current",
    "description": "Prefix 0 for Sechtor 100 MIB traps as required by SNMPv2."
  },
  "s100FanStatusChange": {
    "name": "s100FanStatusChange",
    "oid": "1.3.6.1.4.1.5504.2.4.1.2.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "ZHONE-SECHTOR100-MIB",
        "object": "s100FanOperationalStatus"
      }
    ],
    "status": "deprecated",
    "description": "This trap is generated whenever the value of s100FanOperationalStatus changes. This trap is deprecated and is replaced by sechtor100FanStatusChange."
  },
  "s100ThermoStatusChange": {
    "name": "s100ThermoStatusChange",
    "oid": "1.3.6.1.4.1.5504.2.4.1.2.0.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "ZHONE-SECHTOR100-MIB",
        "object": "s100ThermoATemperature"
      },
      {
        "module": "ZHONE-SECHTOR100-MIB",
        "object": "s100ThermoBTemperature"
      },
      {
        "module": "ZHONE-SECHTOR100-MIB",
        "object": "s100ThermoAOperationalStatus"
      },
      {
        "module": "ZHONE-SECHTOR100-MIB",
        "object": "s100ThermoBOperationalStatus"
      }
    ],
    "status": "deprecated",
    "description": "This trap is generated whenever sechtor100ThermoAOperationalStatus or sechtor100ThermoBOperationalStatus changes its value. This trap is deprecated and is replaced by sechtor100ThermoStatusChange."
  },
  "sechtor100FanStatusChange": {
    "name": "sechtor100FanStatusChange",
    "oid": "1.3.6.1.4.1.5504.2.4.1.2.0.3",
    "class": "notificationtype",
    "objects": [
      {
        "module": "ZHONE-SECHTOR100-MIB",
        "object": "sechtor100FanOperationalStatus"
      }
    ],
    "status": "current",
    "description": "This trap is generated whenever the value of sechtor100FanOperationalStatus changes. The Sechtor 100 is identified by the shelf and slot number from instance OID's contained in the trap VarBind objects."
  },
  "sechtor100ThermoStatusChange": {
    "name": "sechtor100ThermoStatusChange",
    "oid": "1.3.6.1.4.1.5504.2.4.1.2.0.4",
    "class": "notificationtype",
    "objects": [
      {
        "module": "ZHONE-SECHTOR100-MIB",
        "object": "sechtor100ThermoATemperature"
      },
      {
        "module": "ZHONE-SECHTOR100-MIB",
        "object": "sechtor100ThermoBTemperature"
      },
      {
        "module": "ZHONE-SECHTOR100-MIB",
        "object": "sechtor100ThermoAOperationalStatus"
      },
      {
        "module": "ZHONE-SECHTOR100-MIB",
        "object": "sechtor100ThermoBOperationalStatus"
      }
    ],
    "status": "current",
    "description": "This trap is generated whenever sechtor100ThermoAOperationalStatus or sechtor100ThermoBOperationalStatus changes its value. The Sechtor 100 is identified by the shelf and slot number from instance OID's contained in the trap VarBind objects."
  },
  "sechtor100ConfigTable": {
    "name": "sechtor100ConfigTable",
    "oid": "1.3.6.1.4.1.5504.2.4.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains redundancy variables and environmental variables for monitoring fans and thermometers. For redundancy, the peer MAC address is maintained in this table. Also, one variable specifies whether redundancy is enabled or not. There are two thermometers on the Sechtor 100 board. In this MIB, thermometers 'A' and 'B' are used to differentiate these two thermometers: Thermometer A - the thermometer located near the 750 processor. It is expected that this thermometer have a higher temperature reading than thermometer B because of the heat generated by the processor. It is recommended that a higher upper threshold is set for this thermometer. Thermometer B - the thermometer located near the outlet on the right side of the Sechtor 100 board. The profile for this table will be auto-created as 1/1 with the sechtor100RedundancyEnable variable set to FALSE. This profile should not be deleted except for the following two cases: 1) When a unit operating in simplex mode is intended to be used in duplex mode as the slot 2 of the redundant system. The user needs to create a 1/2 profile. 2) The unit configured as slot 2 of a redundant system is intended to be used in simplex mode. Then the 1/2 profile should be deleted and replaced with a 1/1 profile."
  },
  "sechtor100ConfigEntry": {
    "name": "sechtor100ConfigEntry",
    "oid": "1.3.6.1.4.1.5504.2.4.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "Zhone",
        "object": "zhoneShelfIndex",
        "implied": 0
      },
      {
        "module": "Zhone",
        "object": "zhoneSlotIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the sechtor100ConfigTable."
  },
  "sechtor100PeerMacAddress": {
    "name": "sechtor100PeerMacAddress",
    "oid": "1.3.6.1.4.1.5504.2.4.1.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This is the Mac address of the peer s100 unit."
  },
  "sechtor100RedundancyEnable": {
    "name": "sechtor100RedundancyEnable",
    "oid": "1.3.6.1.4.1.5504.2.4.1.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Whether or not the redundancy functionality has been enabled. If this value is false, redundancy is not enable. "
  },
  "sechtor100FanOperationalStatus": {
    "name": "sechtor100FanOperationalStatus",
    "oid": "1.3.6.1.4.1.5504.2.4.1.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "operational": 1,
          "fanFailure": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This variable describes the working status of the four fans for the Sechtor 100. If any one of the four fans is not running correctly, this variable shows 'fanFailure'. When all the fans are working, the value of this variable is 'operational'."
  },
  "sechtor100ThermoAUpperThreshold": {
    "name": "sechtor100ThermoAUpperThreshold",
    "oid": "1.3.6.1.4.1.5504.2.4.1.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 45,
            "max": 80
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 65,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This variable specifies the upper threshold for thermometer A in degrees Celsius. When s100ThermoATemperature is above this value, s100ThermoAOperationalStatus would be 'overUpperThreshold' and a trap will be generated. Valid range is 45..80 degrees Celsius and the default is 65 degrees Celsius."
  },
  "sechtor100ThermoBUpperThreshold": {
    "name": "sechtor100ThermoBUpperThreshold",
    "oid": "1.3.6.1.4.1.5504.2.4.1.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 45,
            "max": 80
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 60,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This variable specifies the upper threshold for thermometer B in degrees Celsius. When s100ThermoBTemperature is above this value, s100ThermoBOperationalStatus would be 'overUpperThreshold' and a trap will be generated. Valid range is 45..80 degrees Celsius and the default is 60 degrees Celsius."
  },
  "sechtor100ThermoALowerThreshold": {
    "name": "sechtor100ThermoALowerThreshold",
    "oid": "1.3.6.1.4.1.5504.2.4.1.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -10,
            "max": 5
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": -5,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This variable specifies the lower threshold for thermometer A in degrees Celsius. When s100ThermoATemperature is below this value, s100ThermoAOperationalStatus would be 'belowLowerThreshold' and a trap will be generated. Valid range is -10..5 degrees Celsius and the default is -5 degrees Celsius."
  },
  "sechtor100ThermoBLowerThreshold": {
    "name": "sechtor100ThermoBLowerThreshold",
    "oid": "1.3.6.1.4.1.5504.2.4.1.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -10,
            "max": 5
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": -5,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This variable specifies the lower threshold for thermometer B in degrees Celsius. When s100ThermoATemperature is below this value, s100ThermoBOperationalStatus would be 'belowLowerThreshold' and a trap will be generated. Valid range is -10..5 degrees Celsius and the default is -5 degrees Celsius."
  },
  "sechtor100ThermoATemperature": {
    "name": "sechtor100ThermoATemperature",
    "oid": "1.3.6.1.4.1.5504.2.4.1.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -55,
            "max": 125
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The temperature in degrees Celsius read by the IC thermometer sensor A on the PCB board. It is effectively the internal ambient temperature inside the enclosure where thermometer A is located. The valid temperature range for the thermometer is -55..125 degrees Celsius."
  },
  "sechtor100ThermoBTemperature": {
    "name": "sechtor100ThermoBTemperature",
    "oid": "1.3.6.1.4.1.5504.2.4.1.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -55,
            "max": 125
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The temperature in degrees Celsius read by the IC thermometer sensor B on the PCB board. It is effectively the internal ambient temperature inside the enclosure where thermometer B is located. The valid temperature range for the thermometer is -55..125 degrees Celsius."
  },
  "sechtor100ThermoAOperationalStatus": {
    "name": "sechtor100ThermoAOperationalStatus",
    "oid": "1.3.6.1.4.1.5504.2.4.1.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "withinOperationalRange": 1,
          "overUpperThreshold": 2,
          "belowLowerThreshold": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The operational status indicator for thermometer A. Valid values are: * withinOperationalRange - s100ThermoATemperature is within its lower and upper threshold range. * overUpperThreshold - s100ThermoATemperature is higher than its upper threshold. * belowLowerThreshold - s100ThermoATemperature is lower than its lower threshold."
  },
  "sechtor100ThermoBOperationalStatus": {
    "name": "sechtor100ThermoBOperationalStatus",
    "oid": "1.3.6.1.4.1.5504.2.4.1.3.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "withinOperationalRange": 1,
          "overUpperThreshold": 2,
          "belowLowerThreshold": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The operational status indicator for thermometer B. Valid values are: * withinOperationalRange - s100ThermoBTemperature is within its lower and upper threshold range. * overUpperThreshold - s100ThermoBTemperature is higher than its upper threshold. * belowLowerThreshold - s100ThermoBTemperature is lower than its lower threshold."
  },
  "sechtor100RowStatus": {
    "name": "sechtor100RowStatus",
    "oid": "1.3.6.1.4.1.5504.2.4.1.3.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneRowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Used to control row creation and deletion. A row in this table is created using a single SNMP SET request with varbinds for: a) sechtor100RowStatus set to'CreateAndGo', b) the following READ-CREATE object(s): * If 'createAndGo' successfully created a new row, the RowStatus will be 'active'. Subsequent to successful row creation, the RowStatus can be retrieved via an SNMP GET and the returned RowStatus value is active. If the 'createAndGo' was unsuccessful an SNMP error will be returned and a subsequent GET on the non-existent row will also return an SNMP error of noSuchInstance. An SNMP SET with the RowStatus value of 'destroy' indicates that the agent should remove the row from service and then delete it."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/ZHONE-SECHTOR100-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 17:42:24 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "ZHONE-SECHTOR100-MIB"
  }
}