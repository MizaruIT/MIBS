{
  "imports": {
    "class": "imports",
    "CTRON-MIB-NAMES": [
      "ctPriorityExt"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "OBJECT-GROUP",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "MibIdentifier",
      "Integer32",
      "OBJECT-IDENTITY",
      "TimeTicks",
      "MODULE-IDENTITY",
      "Unsigned32",
      "Bits",
      "IpAddress",
      "OBJECT-TYPE",
      "Counter64",
      "NOTIFICATION-TYPE",
      "Gauge32",
      "Counter32",
      "iso"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "RowStatus",
      "DisplayString"
    ]
  },
  "ctPriClassify": {
    "name": "ctPriClassify",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6",
    "class": "moduleidentity",
    "lastupdated": "200203121855Z",
    "organization": "Cabletron Systems, Inc",
    "contactinfo": " Cabletron Systems, Inc. Postal: 35 Industrial Way, P.O. Box 5005 Rochester, NH 03867-0505 Phone: (603) 332-9400 Email: support@cabletron.com Web: http://www.cabletron.com",
    "description": "The Cabletron Priority Classify MIB module for controlling Cabletron specific priority classification criteria based on packet content."
  },
  "ctPriClassifyObjects": {
    "name": "ctPriClassifyObjects",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1",
    "class": "objectidentity"
  },
  "CtPriClassifyType": {
    "name": "CtPriClassifyType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "etherType": 1,
          "llcDsapSsap": 2,
          "ipTypeOfService": 3,
          "ipProtocolType": 4,
          "ipxClassOfService": 5,
          "ipxPacketType": 6,
          "ipAddressSource": 7,
          "ipAddressDestination": 8,
          "ipAddressBilateral": 9,
          "ipxNetworkSource": 10,
          "ipxNetworkDestination": 11,
          "ipxNetworkBilateral": 12,
          "ipUdpPortSource": 13,
          "ipUdpPortDestination": 14,
          "ipUdpPortBilateral": 15,
          "ipTcpPortSource": 16,
          "ipTcpPortDestination": 17,
          "ipTcpPortBilateral": 18,
          "ipxSocketSource": 19,
          "ipxSocketDestination": 20,
          "ipxSocketBilateral": 21,
          "macAddressSource": 22,
          "macAddressDestination": 23,
          "macAddressBilateral": 24,
          "ipFragments": 25
        }
      }
    },
    "status": "current",
    "description": "Each enumerated value represents a unique classification type. Different types have different rules regarding how data is interpreted during classification. These rules are spelled out in the comments preceding each type."
  },
  "PortList": {
    "name": "PortList",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "status": "current",
    "description": "Each octet within this value specifies a set of eight ports, with the first octet specifying ports 1 through 8, the second octet specifying ports 9 through 16, etc. Within each octet, the most significant bit represents the lowest numbered port, and the least significant bit represents the highest numbered port. Thus, each port of the bridge is represented by a single bit within the value of this object. If that bit has a value of '1' then that port is included in the set of ports; the port is not included if its bit has a value of '0'."
  },
  "ctPriClassifyStatus": {
    "name": "ctPriClassifyStatus",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enable": 1,
          "disable": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "disable",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Allows the Priority Classification feature to be globally enabled/disabled. A value of disable(2), functionally supersedes the RowStatus of individual entries in the ctPriClassifyTable, but does not change their actual RowStatus value."
  },
  "ctPriClassifyMaxEntries": {
    "name": "ctPriClassifyMaxEntries",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum number of entries allowed in the ctPriClassifyTable."
  },
  "ctPriClassifyNumEntries": {
    "name": "ctPriClassifyNumEntries",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The current number of entries in the ctPriClassifyTable."
  },
  "ctPriClassifyTable": {
    "name": "ctPriClassifyTable",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table containing configuration information for each Priority classification configured into the device by (local or network) management. All entries are permanent and will be restored after the device is reset."
  },
  "ctPriClassifyEntry": {
    "name": "ctPriClassifyEntry",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyPriority",
        "implied": 0
      },
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyDataMeaning",
        "implied": 0
      },
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyDataVal",
        "implied": 0
      },
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyDataMask",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Describes a particular entry of ctPriClassifyTable."
  },
  "ctPriClassifyPriority": {
    "name": "ctPriClassifyPriority",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 7
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The priority for this entry. Any packet meeting the classification criteria specified by this conceptual row will be given the priority indicated by this object."
  },
  "ctPriClassifyDataMeaning": {
    "name": "ctPriClassifyDataMeaning",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CtPriClassifyType",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The meaning of the ctPriClassifyDataVal leaf for this conceptual row. The ctPriClassifyDataVal specifies a particular value which, when compared to packet data, is used to classify that packet to a particular priority. The part of the packet (if any), to which this data comparison applies, is determined by this object. For example, the value ipAddressBilateral(8) means that the value ctPriClassifyDataVal for this entry is an IP address. It further means that the given IP address will be compared against both source and destination IP address fields in a packet. Such an entry obviously would not not match against any non-IP packets. Additionally, the value of this leaf will impose certain implicit ranges and interpretations of data contained within the ctPriClassifyDataVal leaf for this entry. The specific limitations of each type should be spelled out in the comments for that type."
  },
  "ctPriClassifyDataVal": {
    "name": "ctPriClassifyDataVal",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The data value associated with ctPriClassifyDataMeaning. The explicit range of this value is any unsigned 32-bit integer(0..4294967295). This range may vary, however, depending upon the value of ctPriClassifyDataMeaning. Illegal values should not be allowed."
  },
  "ctPriClassifyDataMask": {
    "name": "ctPriClassifyDataMask",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object is the one's complement of a 32-bit mask. This mask is applicable to the data comparison of ctPriClassifyDataVal. The mask is applied to the actual packet data under consideration through a logical bitwise AND operation. This result is then compared to the data. For example, we want to classify according to a bilateral IP address of 134.141.0.0 with a mask of 255.255.240.0. This would be reflected by the following values: ctPriClassifyDataMeaning: ipAddressBilateral(8) ctPriClassifyDataVal: 0x868d0000 ctPriClassifyDataMask: 0x00000fff Again there are contextual implications for this leaf depending upon the value of ctPriClassifyDataMeaning. Not all types will use the mask, and others will impose restrictions. This value should however be a true indication of the masking operation. In other words, data types that don't use a mask should only allow a value of zero, indicating that all data bits are significant in the comparison. The specific restrictions of each type should be spelled out in the comments for that type. Illegal values should not be allowed."
  },
  "ctPriClassifyIngressList": {
    "name": "ctPriClassifyIngressList",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PortList",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "0000",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The set of ports on which this classification rule applies. Classification occurs on ingress. An agent implementation should allow a set operation of this object to create a row if it does not exist."
  },
  "ctPriClassifyRowStatus": {
    "name": "ctPriClassifyRowStatus",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object provides both control and status for the associated conceptual row in the table. Rows can be created in two ways. createAndGo - The specified row will be created and activated if the instance is allowable. If not, an inconsistentValue exception will be returned and the row will not be created. This provides the most optimal method of creating an active row, but provides the user no explanation if the row cannot be created. createAndWait - The specified row will be created and put in the notInService state if the instance is allowable. A subsequent activation of this row will bring it into the active state. If the instance is not allowable, the row will be created and put in the notReady state. A subsequent activation of this row will fail. Since the inappropriate information is always contained in the indexing leaves, activation will never succeed and the row should be removed by the management station. When a row is in the notReady state, the ctPriClassifyRowInfo may be retrieved to obtain a plain English explanation of why this row cannot be activated. createAndWait is the preferred method for this reason. Both methods described above leave ctPriClassifyIngressList in it's default state, requiring an additional set operation in order to modify it. An even more optimal twist on the createAndWait method is to set the ctPriClassifyIngressList to it's desired value as a method for row creation. This will essentially cause an implicit createAndWait since it too will leave the row in either the notInService or notReady state. This leaves only activation or error analysis as the last step. Any rows left in the notReady or notInService state for more than 5 minutes should be automatically removed by the agent implementation."
  },
  "ctPriClassifyRowInfo": {
    "name": "ctPriClassifyRowInfo",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object provides info about this row in the form of an ASCII string, suitable for display purposes. The intended purpose of this object is to provide an 'agent-specific' explanation as to why the ctPriClassifyRowStatus for this conceptual row is in the 'notReady' state. A management station should read this object and display it to the user in this case. A conceptual row that does not fall into this category may simply return a single NULL, but may also provide any useful info of its choice. A management station may attempt to display such info if it so chooses, but is under no burden to do so."
  },
  "ctPriClassifyTOSStatus": {
    "name": "ctPriClassifyTOSStatus",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enable": 1,
          "disable": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object indicates whether an IP Type Of Service (TOS) value, defined by ctPriClassifyTOSValue, should be written into the TOS field of the IP header for any packet matching the classification specified by this conceptual row. This object may be set to enable only for the conceptual rows whose ctPriClassifyDataMeaning and ctPriClassifyDataVal have the following values: ctPriClassifyDataMeaning ctPriClassifyDataVal ------------------------ -------------------- etherType(1) 0x0800 (IP) llcDsapSsap(2) 0x0606 (IP) ipTypeOfService(3) any ipProtocolType(4) any ipAddressSource(7) any ipAddressDestination(8) any ipAddressBilateral(9) any ipUdpPortSource(13) any ipUdpPortDestination(14) any ipUdpPortBilateral(15) any ipTdpPortSource(16) any ipTdpPortDestination(17) any ipTdpPortBilateral(18) any ipFrag(25) not applicable A conceptual row that does not fall into these categories may be set to disable(2) and will return disable(2)."
  },
  "ctPriClassifyTOSValue": {
    "name": "ctPriClassifyTOSValue",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The value to be written into the IP TOS field of the IP header of any packet that matches the classification specified by the conceptual row."
  },
  "ctPriClassifyAbilityTable": {
    "name": "ctPriClassifyAbilityTable",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table containing information for each of the priority classification types. Types for which there is no corresponding row are not supported by this device."
  },
  "ctPriClassifyAbilityEntry": {
    "name": "ctPriClassifyAbilityEntry",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyAbility",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Describes a particular entry of ctPriClassifyAbilityTable."
  },
  "ctPriClassifyAbility": {
    "name": "ctPriClassifyAbility",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CtPriClassifyType",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The priority classification type associated with this entry."
  },
  "ctPriClassifyPorts": {
    "name": "ctPriClassifyPorts",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PortList",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The set of ports on which the classification type specified by ctPriClassifyAbility is supported."
  },
  "ctPriClassifyTableLastChange": {
    "name": "ctPriClassifyTableLastChange",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Indicates the sysUpTime at which the last change was made to the ctPriClassifyTable."
  },
  "ctPriClassifyConformance": {
    "name": "ctPriClassifyConformance",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.2",
    "class": "objectidentity"
  },
  "ctPriClassifyGroups": {
    "name": "ctPriClassifyGroups",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.2.1",
    "class": "objectidentity"
  },
  "ctPriClassifyCompliances": {
    "name": "ctPriClassifyCompliances",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.2.2",
    "class": "objectidentity"
  },
  "ctPriClassifyBaseGroup": {
    "name": "ctPriClassifyBaseGroup",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.2.1.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyStatus"
      },
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyMaxEntries"
      },
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyNumEntries"
      },
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyIngressList"
      },
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyRowStatus"
      },
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyRowInfo"
      },
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyTOSStatus"
      },
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyTOSValue"
      },
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyPorts"
      },
      {
        "module": "CTRON-PRIORITY-CLASSIFY-MIB",
        "object": "ctPriClassifyTableLastChange"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing device level control and status information for Priority classification."
  },
  "ctPriClassifyCompliance": {
    "name": "ctPriClassifyCompliance",
    "oid": "1.3.6.1.4.1.52.4.1.2.14.6.2.2.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ctPriClassifyBaseGroup",
        "module": "CTRON-PRIORITY-CLASSIFY-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for devices that support Priority classification."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/CTRON-PRIORITY-CLASSIFY-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 19:57:39 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "CTRON-PRIORITY-CLASSIFY-MIB"
  }
}