{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "Gauge32",
      "enterprises",
      "Counter64",
      "Unsigned32",
      "Counter32",
      "MibIdentifier",
      "MODULE-IDENTITY",
      "iso",
      "IpAddress",
      "TRAP-TYPE",
      "OBJECT-IDENTITY",
      "TimeTicks",
      "Integer32",
      "NOTIFICATION-TYPE",
      "Bits",
      "OBJECT-TYPE"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "tandem": {
    "name": "tandem",
    "oid": "1.3.6.1.4.1.169",
    "class": "objectidentity"
  },
  "serverNet": {
    "name": "serverNet",
    "oid": "1.3.6.1.4.1.169.8",
    "class": "objectidentity"
  },
  "serverNetSwitch": {
    "name": "serverNetSwitch",
    "oid": "1.3.6.1.4.1.169.8.3",
    "class": "objectidentity"
  },
  "snetSwitchNetworkData": {
    "name": "snetSwitchNetworkData",
    "oid": "1.3.6.1.4.1.169.8.3.1",
    "class": "objectidentity"
  },
  "snetSwitchTrapEnables": {
    "name": "snetSwitchTrapEnables",
    "oid": "1.3.6.1.4.1.169.8.3.1.7",
    "class": "objectidentity"
  },
  "snetSwitchInfo": {
    "name": "snetSwitchInfo",
    "oid": "1.3.6.1.4.1.169.8.3.2",
    "class": "objectidentity"
  },
  "snetSwitchConfigData": {
    "name": "snetSwitchConfigData",
    "oid": "1.3.6.1.4.1.169.8.3.2.1",
    "class": "objectidentity"
  },
  "snetSwitchPortData": {
    "name": "snetSwitchPortData",
    "oid": "1.3.6.1.4.1.169.8.3.2.2",
    "class": "objectidentity"
  },
  "snetSwitchRoutingData": {
    "name": "snetSwitchRoutingData",
    "oid": "1.3.6.1.4.1.169.8.3.2.3",
    "class": "objectidentity"
  },
  "snetSwitchPerformanceData": {
    "name": "snetSwitchPerformanceData",
    "oid": "1.3.6.1.4.1.169.8.3.2.4",
    "class": "objectidentity"
  },
  "snetSwitchErrorStatusData": {
    "name": "snetSwitchErrorStatusData",
    "oid": "1.3.6.1.4.1.169.8.3.2.5",
    "class": "objectidentity"
  },
  "snetSwitchTotal": {
    "name": "snetSwitchTotal",
    "oid": "1.3.6.1.4.1.169.8.3.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of ServerNet Switches (regardless of state) known in the network. X and Y fabric switches are considered separate switches in this Total count."
  },
  "snetSwitchRefreshTime": {
    "name": "snetSwitchRefreshTime",
    "oid": "1.3.6.1.4.1.169.8.3.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Specifies the minimum time in seconds between refreshes of Mib data. Mib data is refreshed each time it is requested unless the refresh interval time has not yet been reached. If the specified time interval has not elapsed, the mib data will be retrieved from cache. Minimum time is 5 seconds. Default is 60 seconds. Changing this to a low value can have a negative impact on performance. Changing this to a high value could allow mib data to become outdated."
  },
  "snetSwitchMibRevMajor": {
    "name": "snetSwitchMibRevMajor",
    "oid": "1.3.6.1.4.1.169.8.3.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Major Revision level of the Switch MIB. A change in the major revision level represents a major change in the architecture of the MIB. A change in the major revision level may indicate a significant change in the information supported and/or the meaning of the supported information. Correct interpretation of data may require a MIB document with the same major revision level."
  },
  "snetSwitchMibRevMinor": {
    "name": "snetSwitchMibRevMinor",
    "oid": "1.3.6.1.4.1.169.8.3.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Minor Revision level of the Switch MIB. A change in the minor revision level may represent some minor additional support, no changes to any pre-existing information has occurred."
  },
  "snetSwitchIDTable": {
    "name": "snetSwitchIDTable",
    "oid": "1.3.6.1.4.1.169.8.3.1.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Table containing the Switch IDs of all switches known in the network."
  },
  "snetSwitchIDEntry": {
    "name": "snetSwitchIDEntry",
    "oid": "1.3.6.1.4.1.169.8.3.1.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchIDIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Entry in switch table "
  },
  "snetSwitchIDIndex": {
    "name": "snetSwitchIDIndex",
    "oid": "1.3.6.1.4.1.169.8.3.1.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1000
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Index in Switch ServerNet ID Entry Table."
  },
  "snetSwitchID": {
    "name": "snetSwitchID",
    "oid": "1.3.6.1.4.1.169.8.3.1.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Switch ID. The switch id is displayed as a hexidecimal value. "
  },
  "snetSwitchType": {
    "name": "snetSwitchType",
    "oid": "1.3.6.1.4.1.169.8.3.1.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "sixport": 1,
          "twelveport": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the Switch type. Switch can be either a 6-port or 12-port switch. "
  },
  "snetSwitchSANMapTable": {
    "name": "snetSwitchSANMapTable",
    "oid": "1.3.6.1.4.1.169.8.3.1.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Table containing the System Area Network map information. This table has an entry for each switch in the network as indexed by the snetSwitchIDIndex from the snetSwitchIDtable. There is a separate entry for each port defined on the switch."
  },
  "snetSwitchSANMapEntry": {
    "name": "snetSwitchSANMapEntry",
    "oid": "1.3.6.1.4.1.169.8.3.1.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchIDIndex",
        "implied": 0
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchSANMapPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Entry in SAN Map table. "
  },
  "snetSwitchSANMapPortIndex": {
    "name": "snetSwitchSANMapPortIndex",
    "oid": "1.3.6.1.4.1.169.8.3.1.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 11
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the switch port number. "
  },
  "snetSwitchSANNodeType": {
    "name": "snetSwitchSANNodeType",
    "oid": "1.3.6.1.4.1.169.8.3.1.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "endNode": 2,
          "autoConfiguredIO": 3,
          "manualConfiguredIO": 4,
          "switch": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the type of the Node connected to the switch. Valid values are Unknown(1), End Node(2), Auto-Configured IO(3), Manual-Configured IO(4), Switch(5). "
  },
  "snetSwitchSANNodeState": {
    "name": "snetSwitchSANNodeState",
    "oid": "1.3.6.1.4.1.169.8.3.1.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unConfigured": 1,
          "configured": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the current state of the Node connected to the switch. Valid values are Unconfigured(1), Configured(2). "
  },
  "snetSwitchSANNodeDomain": {
    "name": "snetSwitchSANNodeDomain",
    "oid": "1.3.6.1.4.1.169.8.3.1.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the domain the node belongs to. If the port is not configured, Domain will be blank. "
  },
  "snetSwitchSANNodeID": {
    "name": "snetSwitchSANNodeID",
    "oid": "1.3.6.1.4.1.169.8.3.1.6.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "For end nodes, this is the Node ID. For switches, this is a Switch ID. If port is not configured, NodeID will be 0."
  },
  "snetSwitchSANNodeName": {
    "name": "snetSwitchSANNodeName",
    "oid": "1.3.6.1.4.1.169.8.3.1.6.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The ServerNet node name. If the port is not configured, NodeName will be blank. "
  },
  "snetSwitchSANNodeFabric": {
    "name": "snetSwitchSANNodeFabric",
    "oid": "1.3.6.1.4.1.169.8.3.1.6.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "xFabric": 1,
          "yFabric": 2,
          "bothFabrics": 3,
          "notDefined": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the X or Y Fabric this node connects to. X Fabric(1), Y Fabric(2), Both Fabrics(3), Not Defined(4). "
  },
  "snetSwitchSANNodeManufacturingID": {
    "name": "snetSwitchSANNodeManufacturingID",
    "oid": "1.3.6.1.4.1.169.8.3.1.6.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Manufacturing ID of connected switch or node. "
  },
  "snetSwitchSANNodePartNumber": {
    "name": "snetSwitchSANNodePartNumber",
    "oid": "1.3.6.1.4.1.169.8.3.1.6.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Part Number of connected switch or node. "
  },
  "snetSwitchSANNodeSerialNumber": {
    "name": "snetSwitchSANNodeSerialNumber",
    "oid": "1.3.6.1.4.1.169.8.3.1.6.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Serial Number of connected switch or node. "
  },
  "snetSwitchLinkAliveTrapEnable": {
    "name": "snetSwitchLinkAliveTrapEnable",
    "oid": "1.3.6.1.4.1.169.8.3.1.7.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Enables Link Alive Trap generation. Asynchronous events can be generated by the switch whenever a change in link alive is detected. Valid values are off(0), on(1) (default)."
  },
  "snetSwitchNeighborChgTrapEnable": {
    "name": "snetSwitchNeighborChgTrapEnable",
    "oid": "1.3.6.1.4.1.169.8.3.1.7.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Enables Neighbor Change Trap generation. Asynchronous events can be generated by the switch whenever a change in neighbor id is detected. Valid values are off(0), on(1) (default)."
  },
  "snetSwitchThresholdErrorTrapEnable": {
    "name": "snetSwitchThresholdErrorTrapEnable",
    "oid": "1.3.6.1.4.1.169.8.3.1.7.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Enables Link/Packet Error Trap generation. Asynchronous events can be generated by the switch whenever a link, packet, or IBC errors have exceeded a pre-defined threshold. Valid values are off(0), on(1) (default)."
  },
  "snetSwitchAccessViolationTrapEnable": {
    "name": "snetSwitchAccessViolationTrapEnable",
    "oid": "1.3.6.1.4.1.169.8.3.1.7.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Enables AccessViolation Trap generation. Asynchronous events can be generated by the switch whenever a packet is received from an unknown ServerNet ID. Valid values are off(0), on(1) (default)."
  },
  "snetSwitchTakeoverTrapEnable": {
    "name": "snetSwitchTakeoverTrapEnable",
    "oid": "1.3.6.1.4.1.169.8.3.1.7.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Enables notification of switch takeover Trap generation. Asynchronous events can be generated by the switch whenever the switch ownership changes. Valid values are off(0), on(1) (default)."
  },
  "snetSwitchSWFWTrapEnable": {
    "name": "snetSwitchSWFWTrapEnable",
    "oid": "1.3.6.1.4.1.169.8.3.1.7.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Enables generation of firmware upgrade traps. Asynchronous events can be generated by the administrative node whenever a firmware upgrade of the switch occurs. Valid values are off(0), on(1) (default)."
  },
  "snetSwitchPrimarySANManSNetID": {
    "name": "snetSwitchPrimarySANManSNetID",
    "oid": "1.3.6.1.4.1.169.8.3.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the ServerNet ID of the current primary administrative node in the ServerNet SAN. "
  },
  "snetSwitchBackupSANManSNetID": {
    "name": "snetSwitchBackupSANManSNetID",
    "oid": "1.3.6.1.4.1.169.8.3.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the ServerNet ID of the current backup administrative node in the ServerNet SAN. "
  },
  "snetSwitchFailoverEventType": {
    "name": "snetSwitchFailoverEventType",
    "oid": "1.3.6.1.4.1.169.8.3.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noFailoversDetected": 1,
          "backupNotReachable": 2,
          "backupTookOver": 3,
          "primaryNotReachable": 4,
          "primaryTookOver": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates the most recent failover event type. Valid values include NoFailoversDetected(1), BackupNotReachable(2), BackupTookOver(3), PrimaryNotReachable(4), PrimaryTookOver(5). "
  },
  "snetSwitchPrimarySANManName": {
    "name": "snetSwitchPrimarySANManName",
    "oid": "1.3.6.1.4.1.169.8.3.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Name of the current primary administrative node in the ServerNet SAN. "
  },
  "snetSwitchBackupSANManName": {
    "name": "snetSwitchBackupSANManName",
    "oid": "1.3.6.1.4.1.169.8.3.1.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Name of the current backup administrative node in the ServerNet SAN. "
  },
  "snetSwitchConfigTable": {
    "name": "snetSwitchConfigTable",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "ServerNet Switch Configuration data."
  },
  "snetSwitchConfigEntry": {
    "name": "snetSwitchConfigEntry",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchIDIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry containing ServerNet Switch configuration data."
  },
  "snetSwitchSnetID": {
    "name": "snetSwitchSnetID",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Switch Identifier. The switch id is displayed as a hexidecimal value. "
  },
  "snetSwitchManufacturingID": {
    "name": "snetSwitchManufacturingID",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Manufacturing ID "
  },
  "snetSwitchPartNumber": {
    "name": "snetSwitchPartNumber",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Switch Part Number "
  },
  "snetSwitchSerialNumber": {
    "name": "snetSwitchSerialNumber",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Switch Serial Number "
  },
  "snetSwitchHWMajorRev": {
    "name": "snetSwitchHWMajorRev",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Switch Hardware Major Revision "
  },
  "snetSwitchHWMinorRev": {
    "name": "snetSwitchHWMinorRev",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Switch Hardware Minor Revision"
  },
  "snetSwitchFWRelease": {
    "name": "snetSwitchFWRelease",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Switch Firmware Release"
  },
  "snetSwitchFWMajorRev": {
    "name": "snetSwitchFWMajorRev",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Switch Firmware Major Revision"
  },
  "snetSwitchFWMinorRev": {
    "name": "snetSwitchFWMinorRev",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Switch Firmware Minor Revision"
  },
  "snetSwitchSANManSNetID": {
    "name": "snetSwitchSANManSNetID",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "ServerNet ID of the primary administrative node. "
  },
  "snetSwitchState": {
    "name": "snetSwitchState",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unConfigured": 1,
          "configured": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the current state of the Switch. Unconfigured(1), Configured(2). "
  },
  "snetSwitchDomain": {
    "name": "snetSwitchDomain",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The domain the switch belongs to. If no domain is defined, the default is blank. "
  },
  "snetSwitchName": {
    "name": "snetSwitchName",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The switch name. If no name is defined, this field will be blank. "
  },
  "snetSwitchFabric": {
    "name": "snetSwitchFabric",
    "oid": "1.3.6.1.4.1.169.8.3.2.1.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "xFabric": 1,
          "yFabric": 2,
          "bothFabrics": 3,
          "notDefined": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the X or Y Fabric this node connects to. X Fabric(1), Y Fabric(2), Both Fabrics(3), Not Defined(4). "
  },
  "snetSwitchPortErrorStatusTable": {
    "name": "snetSwitchPortErrorStatusTable",
    "oid": "1.3.6.1.4.1.169.8.3.2.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Table containing error and status information for each of the configured ports."
  },
  "snetSwitchPortErrorStatusEntry": {
    "name": "snetSwitchPortErrorStatusEntry",
    "oid": "1.3.6.1.4.1.169.8.3.2.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchIDIndex",
        "implied": 0
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchPortErrorStatusIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table of per-port error and status data"
  },
  "snetSwitchPortErrorStatusIndex": {
    "name": "snetSwitchPortErrorStatusIndex",
    "oid": "1.3.6.1.4.1.169.8.3.2.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 11
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the switch port number. "
  },
  "snetSwitchLinkErrorCounter": {
    "name": "snetSwitchLinkErrorCounter",
    "oid": "1.3.6.1.4.1.169.8.3.2.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of link errors which have occurred on the selected port. "
  },
  "snetSwitchPacketErrorCounter": {
    "name": "snetSwitchPacketErrorCounter",
    "oid": "1.3.6.1.4.1.169.8.3.2.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of packet errors which have occurred on the selected port. "
  },
  "snetSwitchIBCErrorCounter": {
    "name": "snetSwitchIBCErrorCounter",
    "oid": "1.3.6.1.4.1.169.8.3.2.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of IBC errors which have occurred on the selected port. "
  },
  "snetSwitchPortStatus": {
    "name": "snetSwitchPortStatus",
    "oid": "1.3.6.1.4.1.169.8.3.2.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unavailable": 1,
          "uninstalled": 2,
          "noLinkAlive": 3,
          "alive": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Current state of the specified port. Valid values are Unavailable(1), Uninstalled(2), NoLinkAlive(3), Alive(4). "
  },
  "snetSwitchDaughterCardType": {
    "name": "snetSwitchDaughterCardType",
    "oid": "1.3.6.1.4.1.169.8.3.2.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "other": 2,
          "notPresent": 3,
          "lvds": 4,
          "fiberChannel": 5,
          "copperSerial": 6,
          "longHaulOptical": 7,
          "shortHaulOptical": 8,
          "ecl": 9
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Daughter card type installed on the specified port. Valid values are Unknown(1), (port can't be reached) Other (2), (daughter board installed but type not defined) Not Present(3), (no daughter board installed) LVDS(4), (Low Voltage Differential Signal) Fiber Channel(5), Copper Serial(6), Long Haul Optical (7), Short Haul Optical (8), ECL (9),(Emitter Coupled Logic). "
  },
  "snetSwitchDaughterCardStatus": {
    "name": "snetSwitchDaughterCardStatus",
    "oid": "1.3.6.1.4.1.169.8.3.2.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notProvided": 1,
          "cableConnected": 2,
          "cableNotTerminated": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Current status of the specified daughter card Valid values are Not Provided(1), (some daughter cards do not provide a status) Cable Connected (2), Cable Not Terminated(3). "
  },
  "snetSwitchRoutingTable": {
    "name": "snetSwitchRoutingTable",
    "oid": "1.3.6.1.4.1.169.8.3.2.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The routing table is 1024 entries "
  },
  "snetSwitchRoutingTableEntry": {
    "name": "snetSwitchRoutingTableEntry",
    "oid": "1.3.6.1.4.1.169.8.3.2.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchIDIndex",
        "implied": 0
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchRoutingTableIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The routing table entry has an index and a port address."
  },
  "snetSwitchRoutingTableIndex": {
    "name": "snetSwitchRoutingTableIndex",
    "oid": "1.3.6.1.4.1.169.8.3.2.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "ServerNet Switch Routing Table Index. An index into the routing table."
  },
  "snetSwitchDest": {
    "name": "snetSwitchDest",
    "oid": "1.3.6.1.4.1.169.8.3.2.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A port address."
  },
  "snetSwitchRoutingLeafTable": {
    "name": "snetSwitchRoutingLeafTable",
    "oid": "1.3.6.1.4.1.169.8.3.2.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The routing table is 64 entries "
  },
  "snetSwitchRoutingLeafTableEntry": {
    "name": "snetSwitchRoutingLeafTableEntry",
    "oid": "1.3.6.1.4.1.169.8.3.2.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchIDIndex",
        "implied": 0
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchRoutingLeafTableIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The routing table entry has an index and a port address."
  },
  "snetSwitchRoutingLeafTableIndex": {
    "name": "snetSwitchRoutingLeafTableIndex",
    "oid": "1.3.6.1.4.1.169.8.3.2.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "ServerNet Switch Routing Leaf Table Index. An index into the routing table."
  },
  "snetSwitchLeafDest": {
    "name": "snetSwitchLeafDest",
    "oid": "1.3.6.1.4.1.169.8.3.2.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A port address."
  },
  "snetSwitchPerfTable": {
    "name": "snetSwitchPerfTable",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The switch performance data. "
  },
  "snetSwitchPerfTableEntry": {
    "name": "snetSwitchPerfTableEntry",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchIDIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the performance table. Performance data is maintained per switch."
  },
  "snetSwitchPerfType1": {
    "name": "snetSwitchPerfType1",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 33
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Selects the type of performance count to be run in counter 1."
  },
  "snetSwitchPerfType2": {
    "name": "snetSwitchPerfType2",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 27
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Selects the type of performance count to be run in counter 2."
  },
  "snetSwitchPerfInPort1": {
    "name": "snetSwitchPerfInPort1",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 11
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Input port to be used for performance counts for Performance Counter 1."
  },
  "snetSwitchPerfOutPort1": {
    "name": "snetSwitchPerfOutPort1",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 11
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Output port to be used for performance counts for Performance Counter 1."
  },
  "snetSwitchPerfInPort2": {
    "name": "snetSwitchPerfInPort2",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 11
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Input port to be used for performance counts for Performance Counter 2."
  },
  "snetSwitchPerfOutPort2": {
    "name": "snetSwitchPerfOutPort2",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 11
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Output port to be used for performance counts for Performance Counter 2."
  },
  "snetSwitchPerfTimerSelect": {
    "name": "snetSwitchPerfTimerSelect",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Specifies the duration the performance count should run. 1= 16 nanoseconds per count, maximum 68.72 second timer 2= 256 nanoseconds per count, maximum 18.33 minute timer 3= 1.024 microseconds per count, maximum 73.30 minute timer 4= 8.129 microseconds per count, maximum 9.77 hour timer This value is automatically determined based on the Performance timer interval specified by the user."
  },
  "snetSwitchPerfTimerInterval": {
    "name": "snetSwitchPerfTimerInterval",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This is the amount of time the counter will run in milliseconds. The default is 0 and must be changed before a performance count will run. The maximum value is 35172000 milliseconds which is 9.77 hours."
  },
  "snetSwitchPerfStart": {
    "name": "snetSwitchPerfStart",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this variable to 1 causes the request to start the performance count to be sent. The Types, Inports, Outports, and TimerInterval should all be set prior to setting Start. If they are not set, default values will be used. At a minimum, the TimerInterval must be reset to a value other than zero before a performance count will run."
  },
  "snetSwitchPerfStatus": {
    "name": "snetSwitchPerfStatus",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "validData": 1,
          "countInProgress": 2,
          "counter1Overflow": 3,
          "counter2Overflow": 4,
          "timerOverflow": 5,
          "unknown": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "GETting this variable causes a request to be made to the switch to retrieve the latest values for the Performance count status (snetSwitchPerfStatus), Performance counters (snetSwitchPerfCounter1 and snetSwitchPerfCounter2) and time left (snetSwitchTimeLeft). Possible Values for Status: Data is valid(1), Counting is still in process(2), Counter 1 overflowed(3), Counter 2 overflowed(4), Timer overflowed(5), Unknown. Switch not reachable(6). "
  },
  "snetSwitchPerfElapsedTime": {
    "name": "snetSwitchPerfElapsedTime",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The amount of time elapsed on the current performance count in milliseconds. If this value is zero, the performance counters have completed."
  },
  "snetSwitchPerfCounter1": {
    "name": "snetSwitchPerfCounter1",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The result of the last performance count for counter 1. To check the validity and get the latest Counter1 value from the switch, first Get the snetSwitchPerfStatus."
  },
  "snetSwitchPerfCounter2": {
    "name": "snetSwitchPerfCounter2",
    "oid": "1.3.6.1.4.1.169.8.3.2.4.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The result of the last performance count for counter 2. To check the validity and get the latest Counter2 value from the switch, first Get the snetSwitchPerfStatus."
  },
  "snetSwitchErrorStatusTable": {
    "name": "snetSwitchErrorStatusTable",
    "oid": "1.3.6.1.4.1.169.8.3.2.5.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Table of switch error and status data."
  },
  "snetSwitchErrorStatusEntry": {
    "name": "snetSwitchErrorStatusEntry",
    "oid": "1.3.6.1.4.1.169.8.3.2.5.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchIDIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry containing status and error data for each switch."
  },
  "snetSwitchLinkErrorThreshold": {
    "name": "snetSwitchLinkErrorThreshold",
    "oid": "1.3.6.1.4.1.169.8.3.2.5.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Number of link errors which occur before an asynchronous event notification is generated by the switch. "
  },
  "snetSwitchPacketErrorThreshold": {
    "name": "snetSwitchPacketErrorThreshold",
    "oid": "1.3.6.1.4.1.169.8.3.2.5.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Number of packet errors which occur before an asynchronous event notification is generated by the switch. "
  },
  "snetSwitchIBCErrorThreshold": {
    "name": "snetSwitchIBCErrorThreshold",
    "oid": "1.3.6.1.4.1.169.8.3.2.5.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Number of packet errors which occur before an asynchronous event notification is generated by the switch. "
  },
  "snetSwitchNeighborID": {
    "name": "snetSwitchNeighborID",
    "oid": "1.3.6.1.4.1.169.8.3.2.5.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": " This field contains the latest value of the Neighbor ID which has changed. Whenever a change in a neighbor ID is detected by a switch, the switch generates an asynchronous event. The neighbor ID which was detected by the switch is saved here. It is valid only for the last event which occurred. If no neighbor ID changes have occurred, the value will be blank. "
  },
  "snetSwitchAccessViolationID": {
    "name": "snetSwitchAccessViolationID",
    "oid": "1.3.6.1.4.1.169.8.3.2.5.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": " This field contains the latest value for the invalid ID which was detected by the switch. Whenever an invalid id is detected by a switch, the switch generates an asynchronous event. The ID which was detected by the switch is saved here. It is valid only for the last event which occurred. If no invalid IDs have been detected, the value will be zero(0). "
  },
  "snetSwitchFWStatus": {
    "name": "snetSwitchFWStatus",
    "oid": "1.3.6.1.4.1.169.8.3.2.5.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "validStatusBlock": 1,
          "hwErrorDetected": 2,
          "unknownFirmwareErrorDetected": 3,
          "badProgramCheckSum": 4,
          "configFailedDefaultInUse": 5,
          "unknownFWStatus": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": " The Firmware Status for the Switch Firmware Status OK(1), Hardware Error Detected(2), Unknown Firmware Error Detected(3), Bad Program CheckSum(4), Current Configuration failed. Switch is using factory default configuration(5), Switch cannot be reached. Firmware status is unknown(6). "
  },
  "snetSwitchHWStatus": {
    "name": "snetSwitchHWStatus",
    "oid": "1.3.6.1.4.1.169.8.3.2.5.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noError": 1,
          "errSramFail": 2,
          "errFlashSector": 3,
          "errSeepromCheckSum": 4,
          "errSbusy": 5,
          "errFlashProgram": 6,
          "errUnknownHWStatus": 7,
          "errOtherHWError": 8
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": " The Hardware Status for the Switch Hardware Status OK(1), SRAM Memory test failed(2), Flash sector test failed(3), Bad SEEPROM checksum(4), SBUSY error(5), FLASH program error(6), Switch cannot be reached. Hardware status is unknown.(7), Other Hardware Error, such as fan failure may be indicated.(8) "
  },
  "snetSwitchStatus": {
    "name": "snetSwitchStatus",
    "oid": "1.3.6.1.4.1.169.8.3.2.5.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "ok": 2,
          "degraded": 3,
          "failed": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": " The Overall Status for the Switch. This is determined by a combination of port status values and configuration values. If a port is configured, it should detect Link Alive. If the port is not in LinkAlive state, the switch status will be degraded. If all configured ports are in LinkAlive state, the switch status will be ok. Hardware, Firmware and Fan status are also used to determine switch status as described below. This represents the overall condition of the specified switch. Other(1): Switch not installed or status unknown OK(2): All ports, Hardware, Firmware and Fan status are OK. Degraded(3): One or more ports are down. Hardware or Firmware status show an error condition. Failed(4): All ports are Failed, switch is not reachable, Fan status is failed. "
  },
  "snetSwitchFanStatus": {
    "name": "snetSwitchFanStatus",
    "oid": "1.3.6.1.4.1.169.8.3.2.5.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "ok": 2,
          "degraded": 3,
          "failed": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The status of the switch fans. Other(1): Unknown or not reported. This is the status if the switch cannot be reached. OK(2): OK is reported if both fans are working as designed Degraded(3): This status is not reported but is listed for consistency with other status fields Failed(4): One or more fans have failed. The power module should be replaced immediately to prevent damage to switch components. "
  },
  "snetSwitchLinkAliveChange": {
    "name": "snetSwitchLinkAliveChange",
    "oid": "1.3.6.1.4.1.169.80.100",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchSnetID"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchName"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchPortErrorStatusIndex"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchPortStatus"
      }
    ],
    "description": "The switch has detected a change in the status of a port. Possible Cause / Solution: If Port is nonfunctional, Disconnected, loose or defective SAN Cable: Reattach or replace cable. Distant switch or node powered off: apply power to switch or node. Distant daughter card defective: replace defective daughter card. If Port is functional, Port is now active: No action necessary. If Port is intermittent, Intermittent problems could be caused by a defective switch, cable or daughter card. Replace components until problem is isolated. "
  },
  "snetSwitchNeighborValidationFailed": {
    "name": "snetSwitchNeighborValidationFailed",
    "oid": "1.3.6.1.4.1.169.80.101",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchSnetID"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchName"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchPortErrorStatusIndex"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchNeighborID"
      }
    ],
    "description": "A ServerNet Switch failed neighbor validation on one of its ports. The offending node will not be able to receive or transmit ServerNet data packets until the situation is corrected. Possible Cause / Solution: Ports not configured: If a port is not configured or disabled, this event is generated whenever the topology is changed, or firmware is updated. The snetSwitchNeighborID will indicate that the link is down with LD. If the snetSwitchNeighborID is AF, this indicates the specified port is disabled and assumed failed. If the specified port is not configured, this event may be ignored. Bad Node: Run diagnostics to validate offending nodes. Incorrect cabling: verify cabling and correct if necessary. Incorrect configuration: switch configruation may be incorrect. Reconfigure switch. Node not added to SAN: Offending node may not have been added to the SAN. Run ServerNet II Administrative Utility to add node. Incorrect SAN installation: Offending node may not have been correctly added to SAN. Run Administrator GUI to verify status and add if necessary. To force the switch to rerun neighbor checks, the user may have to manually cycle the power on the offending node. "
  },
  "snetSwitchLinkLevelError": {
    "name": "snetSwitchLinkLevelError",
    "oid": "1.3.6.1.4.1.169.80.102",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchSnetID"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchName"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchPortErrorStatusIndex"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchLinkErrorCounter"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchPacketErrorCounter"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchIBCErrorCounter"
      }
    ],
    "description": "ServerNet Switch has detected link level errors. Possible Cause / Solution: Bad node: Run diagnostics to validate offending nodes are operating correctly. Loose cable: Check cable connections. Bad cable: Check for link error and replace cable. Incorrect configuration: Switch configuration may be incorrect. Check EFIFO register to make sure it is set correctly for cable type/length. Reconfigure switch if necessary. Blabbering Node: Run diagnostics to ensure that nodes at both ends of the cable are communicating properly. Replace if necessary. "
  },
  "snetSwitchPacketLevelError": {
    "name": "snetSwitchPacketLevelError",
    "oid": "1.3.6.1.4.1.169.80.103",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchSnetID"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchName"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchPortErrorStatusIndex"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchLinkErrorCounter"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchPacketErrorCounter"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchIBCErrorCounter"
      }
    ],
    "description": "ServerNet Switch has detected packet level errors. Possible Cause / Solution: Bad node: Run diagnostics to validate offending nodes are operating correctly. Loose cable: Check cable connections. Bad cable: Check for link error and replace cable. Incorrect configuration: Switch configuration may be incorrect. Check router table to make sure it is set. Reconfigure switch if necessary. Blabbering Node: Run diagnostics to ensure that nodes at both ends of the cable are communicating properly. Replace if necessary. Probing node: A node may be trying to break into the network. Isolate the node and verify SAN membership. "
  },
  "snetSwitchIBCError": {
    "name": "snetSwitchIBCError",
    "oid": "1.3.6.1.4.1.169.80.104",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchSnetID"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchName"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchPortErrorStatusIndex"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchLinkErrorCounter"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchPacketErrorCounter"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchIBCErrorCounter"
      }
    ],
    "description": "ServerNet Switch has detected IBC errors. Possible Cause / Solution: Firmware upgrade or Configuration change: This event can be safely ignored if preceding events indicate a firmware upgrade or configuration change caused the event to be generated. Bad node: Run diagnostics to validate offending nodes are operating correctly. Loose cable: Check cable connections. Bad cable: Check for link error and replace cable. Incompatible software version: Ensure that compatible versions of software and firmware are installed on the offending nodes. Blabbering node: Run diagnostics to ensure that nodes at both ends of the cable are communicating properly. Replace if necessary. Probing node: A node may be trying to break into the network. Isolate the node and verify SAN membership. Switch ownership may be incorrect: Check ownership; cycle power on the offending switch to cause ownership update."
  },
  "snetSwitchAccessViolation": {
    "name": "snetSwitchAccessViolation",
    "oid": "1.3.6.1.4.1.169.80.105",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchSnetID"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchName"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchPortErrorStatusIndex"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchAccessViolationID"
      }
    ],
    "description": "The switch has detected a request to or from an invalid id. Possible Cause / Solution: Blabbering node: Run diagnostics to ensure that nodes at both ends of the cable are communicating properly. Replace if necessary. Probing node: A node may be trying to break into the network. Isolate the node and verify SAN membership. Switch ownership may be incorrect: Check ownership; cycle power on the offending switch to cause ownership update. "
  },
  "snetSwitchOwnerChange": {
    "name": "snetSwitchOwnerChange",
    "oid": "1.3.6.1.4.1.169.80.106",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchSnetID"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchName"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchSANManSNetID"
      }
    ],
    "description": "ServerNet Switch Primary Administrative node change. Possible Cause / Solution: Primary node failed over: If this was by user request, this is a notification only and no action is needed. Refer to snetSwitchSANManFailover for other possibilities. Administrator changed primary Administrative node: Notification only. No action is necessary. "
  },
  "snetSwitchFirmwareUpgrade": {
    "name": "snetSwitchFirmwareUpgrade",
    "oid": "1.3.6.1.4.1.169.80.107",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchSANManSNetID"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchSnetID"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchName"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchFWRelease"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchFWMajorRev"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchFWMinorRev"
      }
    ],
    "description": "A firmware upgrade has been performed on the specified switch. Possible Cause / Solution: Switch firmware has been upgraded. Notification only. No action in needed. "
  },
  "snetSwitchSANManFailover": {
    "name": "snetSwitchSANManFailover",
    "oid": "1.3.6.1.4.1.169.80.108",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchPrimarySANManSNetID"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchPrimarySANManName"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchBackupSANManSNetID"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchBackupSANManName"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchFailoverEventType"
      }
    ],
    "description": "Administrative node failover has been detected. The type of failure detected is reflected in the event type. Possible Cause / Solution: Primary or backup administrative node has failed: if powered off, apply power. If hung, reboot node. If doing maintenance, this is a notification message only. Restart node when maintenance is complete. Backup administrative node not configured: use the ServerNet II Administrative Utility to define a backup. "
  },
  "snetSwitchTopologyConfigUpdate": {
    "name": "snetSwitchTopologyConfigUpdate",
    "oid": "1.3.6.1.4.1.169.80.109",
    "class": "notificationtype",
    "description": "Configuration of the ServerNet topology has changed. Possible Cause / Solution: Switch or end node configuration has been updated. Notification only, no action required. May also be generated when switch firmware is upgraded or new primary or backup nodes are designated."
  },
  "snetSwitchFanFailure": {
    "name": "snetSwitchFanFailure",
    "oid": "1.3.6.1.4.1.169.80.110",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchSnetID"
      },
      {
        "module": "SnetSwitch-MIB",
        "object": "snetSwitchName"
      }
    ],
    "description": "ServerNet Switch detected a fan failure. The power module should be replaced immediately to prevent switch component damage. Possible Cause / Solution: A switch fan has failed: replace switch power module to prevent switch component damage. "
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/switch.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 15:25:34 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "SnetSwitch-MIB"
  }
}