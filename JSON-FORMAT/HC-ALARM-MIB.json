{
  "imports": {
    "class": "imports",
    "HCNUM-TC": [
      "CounterBasedGauge64"
    ],
    "RMON-MIB": [
      "rmon",
      "rmonEventGroup",
      "OwnerString"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "OBJECT-GROUP",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "MibIdentifier",
      "Unsigned32",
      "Gauge32",
      "OBJECT-TYPE",
      "Counter64",
      "iso",
      "OBJECT-IDENTITY",
      "Bits",
      "IpAddress",
      "Counter32",
      "TimeTicks",
      "Integer32",
      "MODULE-IDENTITY",
      "NOTIFICATION-TYPE"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString",
      "VariablePointer",
      "StorageType",
      "RowStatus"
    ]
  },
  "hcAlarmMIB": {
    "name": "hcAlarmMIB",
    "oid": "1.3.6.1.2.1.16.29",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2002-12-16 00:00",
        "description": "Initial version of the High Capacity Alarm MIB module. This version published as RFC 3434."
      }
    ],
    "lastupdated": "200212160000Z",
    "organization": "IETF RMONMIB Working Group",
    "contactinfo": " Andy Bierman Cisco Systems, Inc. Tel: +1 408 527-3711 E-mail: abierman@cisco.com Postal: 170 West Tasman Drive San Jose, CA USA 95134 Keith McCloghrie Cisco Systems, Inc. Tel: +1 408 526-5260 E-mail: kzm@cisco.com Postal: 170 West Tasman Drive San Jose, CA USA 95134 Send comments to <rmonmib@ietf.org> Mailing list subscription info: http://www.ietf.org/mailman/listinfo/rmonmib ",
    "description": "This module defines Remote Monitoring MIB extensions for High Capacity Alarms. Copyright (C) The Internet Society (2002). This version of this MIB module is part of RFC 3434; see the RFC itself for full legal notices."
  },
  "hcAlarmObjects": {
    "name": "hcAlarmObjects",
    "oid": "1.3.6.1.2.1.16.29.1",
    "class": "objectidentity"
  },
  "hcAlarmNotifications": {
    "name": "hcAlarmNotifications",
    "oid": "1.3.6.1.2.1.16.29.2",
    "class": "objectidentity"
  },
  "hcAlarmConformance": {
    "name": "hcAlarmConformance",
    "oid": "1.3.6.1.2.1.16.29.3",
    "class": "objectidentity"
  },
  "hcAlarmControlObjects": {
    "name": "hcAlarmControlObjects",
    "oid": "1.3.6.1.2.1.16.29.1.1",
    "class": "objectidentity"
  },
  "hcAlarmCapabilitiesObjects": {
    "name": "hcAlarmCapabilitiesObjects",
    "oid": "1.3.6.1.2.1.16.29.1.2",
    "class": "objectidentity"
  },
  "HcValueStatus": {
    "name": "HcValueStatus",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valueNotAvailable": 1,
          "valuePositive": 2,
          "valueNegative": 3
        }
      }
    },
    "status": "current",
    "description": "This data type indicates the validity and sign of the data in associated object instances which represent the absolute value of a high capacity numeric quantity. Such an object may be represented with one or more object instances. An object of type HcValueStatus MUST be defined within the same structure as the object(s) representing the high capacity absolute value. If the associated object instance(s) representing the high capacity absolute value could not be accessed during the sampling interval, and is therefore invalid, then the associated HcValueStatus object will contain the value 'valueNotAvailable(1)'. If the associated object instance(s) representing the high capacity absolute value are valid and actual value of the sample is greater than or equal to zero, then the associated HcValueStatus object will contain the value 'valuePositive(2)'. If the associated object instance(s) representing the high capacity absolute value are valid and the actual value of the sample is less than zero, then the associated HcValueStatus object will contain the value 'valueNegative(3)'. The associated absolute value should be multiplied by -1 to obtain the true sample value."
  },
  "hcAlarmTable": {
    "name": "hcAlarmTable",
    "oid": "1.3.6.1.2.1.16.29.1.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of entries for the configuration of high capacity alarms."
  },
  "hcAlarmEntry": {
    "name": "hcAlarmEntry",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A conceptual row in the hcAlarmTable. Entries are usually created in this table by management application action, but may also be created by agent action as well."
  },
  "hcAlarmIndex": {
    "name": "hcAlarmIndex",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "An arbitrary integer index value used to uniquely identify this high capacity alarm entry."
  },
  "hcAlarmInterval": {
    "name": "hcAlarmInterval",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "units": "seconds",
    "maxaccess": "read-create",
    "status": "current",
    "description": "The interval in seconds over which the data is sampled and compared with the rising and falling thresholds. When setting this variable, care should be taken in the case of deltaValue sampling - the interval should be set short enough that the sampled variable is very unlikely to increase or decrease by more than 2^63 - 1 during a single sampling interval. This object may not be modified if the associated hcAlarmStatus object is equal to active(1)."
  },
  "hcAlarmVariable": {
    "name": "hcAlarmVariable",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariablePointer",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The object identifier of the particular variable to be sampled. Only variables that resolve to an ASN.1 primitive type of INTEGER (INTEGER, Integer32, Counter32, Counter64, Gauge, or TimeTicks) may be sampled. Because SNMP access control is articulated entirely in terms of the contents of MIB views, no access control mechanism exists that can restrict the value of this object to identify only those objects that exist in a particular MIB view. Because there is thus no acceptable means of restricting the read access that could be obtained through the alarm mechanism, the probe must only grant write access to this object in those views that have read access to all objects on the probe. This object may not be modified if the associated hcAlarmStatus object is equal to active(1)."
  },
  "hcAlarmSampleType": {
    "name": "hcAlarmSampleType",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "absoluteValue": 1,
          "deltaValue": 2
        }
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The method of sampling the selected variable and calculating the value to be compared against the thresholds. If the value of this object is absoluteValue(1), the value of the selected variable will be compared directly with the thresholds at the end of the sampling interval. If the value of this object is deltaValue(2), the value of the selected variable at the last sample will be subtracted from the current value, and the difference compared with the thresholds. If the associated hcAlarmVariable instance could not be obtained at the previous sample interval, then a delta sample is not possible, and the value of the associated hcAlarmValueStatus object for this interval will be valueNotAvailable(1). This object may not be modified if the associated hcAlarmStatus object is equal to active(1)."
  },
  "hcAlarmAbsValue": {
    "name": "hcAlarmAbsValue",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CounterBasedGauge64",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The absolute value (i.e., unsigned value) of the hcAlarmVariable statistic during the last sampling period. The value during the current sampling period is not made available until the period is completed. To obtain the true value for this sampling interval, the associated instance of hcAlarmValueStatus must be checked, and the value of this object adjusted as necessary. If the MIB instance could not be accessed during the sampling interval, then this object will have a value of zero and the associated instance of hcAlarmValueStatus will be set to 'valueNotAvailable(1)'."
  },
  "hcAlarmValueStatus": {
    "name": "hcAlarmValueStatus",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HcValueStatus",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the validity and sign of the data for the hcAlarmAbsValue object, as described in the HcValueStatus textual convention."
  },
  "hcAlarmStartupAlarm": {
    "name": "hcAlarmStartupAlarm",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "risingAlarm": 1,
          "fallingAlarm": 2,
          "risingOrFallingAlarm": 3
        }
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The alarm that may be sent when this entry is first set to active. If the first sample after this entry becomes active is greater than or equal to the rising threshold and this object is equal to risingAlarm(1) or risingOrFallingAlarm(3), then a single rising alarm will be generated. If the first sample after this entry becomes valid is less than or equal to the falling threshold and this object is equal to fallingAlarm(2) or risingOrFallingAlarm(3), then a single falling alarm will be generated. This object may not be modified if the associated hcAlarmStatus object is equal to active(1)."
  },
  "hcAlarmRisingThreshAbsValueLo": {
    "name": "hcAlarmRisingThreshAbsValueLo",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The lower 32 bits of the absolute value for threshold for the sampled statistic. The actual threshold value is determined by the associated instances of the hcAlarmRisingThreshAbsValueHi and hcAlarmRisingThresholdValStatus objects, as follows: ABS(threshold) = hcAlarmRisingThreshAbsValueLo + (hcAlarmRisingThreshAbsValueHi * 2^^32) The absolute value of the threshold is adjusted as required, as described in the HcValueStatus textual convention. These three object instances are conceptually combined to represent the rising threshold for this entry. When the current sampled value is greater than or equal to this threshold, and the value at the last sampling interval was less than this threshold, a single event will be generated. A single event will also be generated if the first sample after this entry becomes valid is greater than or equal to this threshold and the associated hcAlarmStartupAlarm is equal to risingAlarm(1) or risingOrFallingAlarm(3). After a rising event is generated, another such event will not be generated until the sampled value falls below this threshold and reaches the threshold identified by the hcAlarmFallingThreshAbsValueLo, hcAlarmFallingThreshAbsValueHi, and hcAlarmFallingThresholdValStatus objects. This object may not be modified if the associated hcAlarmStatus object is equal to active(1)."
  },
  "hcAlarmRisingThreshAbsValueHi": {
    "name": "hcAlarmRisingThreshAbsValueHi",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The upper 32 bits of the absolute value for threshold for the sampled statistic. The actual threshold value is determined by the associated instances of the hcAlarmRisingThreshAbsValueLo and hcAlarmRisingThresholdValStatus objects, as follows: ABS(threshold) = hcAlarmRisingThreshAbsValueLo + (hcAlarmRisingThreshAbsValueHi * 2^^32) The absolute value of the threshold is adjusted as required, as described in the HcValueStatus textual convention. These three object instances are conceptually combined to represent the rising threshold for this entry. When the current sampled value is greater than or equal to this threshold, and the value at the last sampling interval was less than this threshold, a single event will be generated. A single event will also be generated if the first sample after this entry becomes valid is greater than or equal to this threshold and the associated hcAlarmStartupAlarm is equal to risingAlarm(1) or risingOrFallingAlarm(3). After a rising event is generated, another such event will not be generated until the sampled value falls below this threshold and reaches the threshold identified by the hcAlarmFallingThreshAbsValueLo, hcAlarmFallingThreshAbsValueHi, and hcAlarmFallingThresholdValStatus objects. This object may not be modified if the associated hcAlarmStatus object is equal to active(1)."
  },
  "hcAlarmRisingThresholdValStatus": {
    "name": "hcAlarmRisingThresholdValStatus",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HcValueStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the sign of the data for the rising threshold, as defined by the hcAlarmRisingThresAbsValueLo and hcAlarmRisingThresAbsValueHi objects, as described in the HcValueStatus textual convention. The enumeration 'valueNotAvailable(1)' is not allowed, and the associated hcAlarmStatus object cannot be equal to 'active(1)' if this object is set to this value. This object may not be modified if the associated hcAlarmStatus object is equal to active(1)."
  },
  "hcAlarmFallingThreshAbsValueLo": {
    "name": "hcAlarmFallingThreshAbsValueLo",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The lower 32 bits of the absolute value for threshold for the sampled statistic. The actual threshold value is determined by the associated instances of the hcAlarmFallingThreshAbsValueHi and hcAlarmFallingThresholdValStatus objects, as follows: ABS(threshold) = hcAlarmFallingThreshAbsValueLo + (hcAlarmFallingThreshAbsValueHi * 2^^32) The absolute value of the threshold is adjusted as required, as described in the HcValueStatus textual convention. These three object instances are conceptually combined to represent the falling threshold for this entry. When the current sampled value is less than or equal to this threshold, and the value at the last sampling interval was greater than this threshold, a single event will be generated. A single event will also be generated if the first sample after this entry becomes valid is less than or equal to this threshold and the associated hcAlarmStartupAlarm is equal to fallingAlarm(2) or risingOrFallingAlarm(3). After a falling event is generated, another such event will not be generated until the sampled value rises above this threshold and reaches the threshold identified by the hcAlarmRisingThreshAbsValueLo, hcAlarmRisingThreshAbsValueHi, and hcAlarmRisingThresholdValStatus objects. This object may not be modified if the associated hcAlarmStatus object is equal to active(1)."
  },
  "hcAlarmFallingThreshAbsValueHi": {
    "name": "hcAlarmFallingThreshAbsValueHi",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The upper 32 bits of the absolute value for threshold for the sampled statistic. The actual threshold value is determined by the associated instances of the hcAlarmFallingThreshAbsValueLo and hcAlarmFallingThresholdValStatus objects, as follows: ABS(threshold) = hcAlarmFallingThreshAbsValueLo + (hcAlarmFallingThreshAbsValueHi * 2^^32) The absolute value of the threshold is adjusted as required, as described in the HcValueStatus textual convention. These three object instances are conceptually combined to represent the falling threshold for this entry. When the current sampled value is less than or equal to this threshold, and the value at the last sampling interval was greater than this threshold, a single event will be generated. A single event will also be generated if the first sample after this entry becomes valid is less than or equal to this threshold and the associated hcAlarmStartupAlarm is equal to fallingAlarm(2) or risingOrFallingAlarm(3). After a falling event is generated, another such event will not be generated until the sampled value rises above this threshold and reaches the threshold identified by the hcAlarmRisingThreshAbsValueLo, hcAlarmRisingThreshAbsValueHi, and hcAlarmRisingThresholdValStatus objects. This object may not be modified if the associated hcAlarmStatus object is equal to active(1)."
  },
  "hcAlarmFallingThresholdValStatus": {
    "name": "hcAlarmFallingThresholdValStatus",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HcValueStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the sign of the data for the falling threshold, as defined by the hcAlarmFallingThreshAbsValueLo and hcAlarmFallingThreshAbsValueHi objects, as described in the HcValueStatus textual convention. The enumeration 'valueNotAvailable(1)' is not allowed, and the associated hcAlarmStatus object cannot be equal to 'active(1)' if this object is set to this value. This object may not be modified if the associated hcAlarmStatus object is equal to active(1)."
  },
  "hcAlarmRisingEventIndex": {
    "name": "hcAlarmRisingEventIndex",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The index of the eventEntry that is used when a rising threshold is crossed. The eventEntry identified by a particular value of this index is the same as identified by the same value of the eventIndex object. If there is no corresponding entry in the eventTable, then no association exists. In particular, if this value is zero, no associated event will be generated, as zero is not a valid event index. This object may not be modified if the associated hcAlarmStatus object is equal to active(1)."
  },
  "hcAlarmFallingEventIndex": {
    "name": "hcAlarmFallingEventIndex",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The index of the eventEntry that is used when a falling threshold is crossed. The eventEntry identified by a particular value of this index is the same as identified by the same value of the eventIndex object. If there is no corresponding entry in the eventTable, then no association exists. In particular, if this value is zero, no associated event will be generated, as zero is not a valid event index. This object may not be modified if the associated hcAlarmStatus object is equal to active(1)."
  },
  "hcAlarmValueFailedAttempts": {
    "name": "hcAlarmValueFailedAttempts",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of times the associated hcAlarmVariable instance was polled on behalf of this hcAlarmEntry, (while in the active state) and the value was not available. This counter may experience a discontinuity if the agent restarts, indicated by the value of sysUpTime."
  },
  "hcAlarmOwner": {
    "name": "hcAlarmOwner",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OwnerString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The entity that configured this entry and is therefore using the resources assigned to it."
  },
  "hcAlarmStorageType": {
    "name": "hcAlarmStorageType",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The type of non-volatile storage configured for this entry. If this object is equal to 'permanent(4)', then the associated hcAlarmRisingEventIndex and hcAlarmFallingEventIndex objects must be writable."
  },
  "hcAlarmStatus": {
    "name": "hcAlarmStatus",
    "oid": "1.3.6.1.2.1.16.29.1.1.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status of this row. An entry MUST NOT exist in the active state unless all objects in the entry have an appropriate value, as described in the description clause for each writable object. The hcAlarmStatus object may be modified if the associated instance of this object is equal to active(1), notInService(2), or notReady(3). All other writable objects may be modified if the associated instance of this object is equal to notInService(2) or notReady(3)."
  },
  "hcAlarmCapabilities": {
    "name": "hcAlarmCapabilities",
    "oid": "1.3.6.1.2.1.16.29.1.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "hcAlarmCreation": 0,
        "hcAlarmNvStorage": 1
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "An indication of the high capacity alarm capabilities supported by this agent. If the 'hcAlarmCreation' BIT is set, then this agent allows NMS applications to create entries in the hcAlarmTable. If the 'hcAlarmNvStorage' BIT is set, then this agent allows entries in the hcAlarmTable which will be recreated after a system restart, as controlled by the hcAlarmStorageType object."
  },
  "hcAlarmNotifPrefix": {
    "name": "hcAlarmNotifPrefix",
    "oid": "1.3.6.1.2.1.16.29.2.0",
    "class": "objectidentity"
  },
  "hcRisingAlarm": {
    "name": "hcRisingAlarm",
    "oid": "1.3.6.1.2.1.16.29.2.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmVariable"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmSampleType"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmAbsValue"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmValueStatus"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmRisingThreshAbsValueLo"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmRisingThreshAbsValueHi"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmRisingThresholdValStatus"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmRisingEventIndex"
      }
    ],
    "status": "current",
    "description": "The SNMP notification that is generated when a high capacity alarm entry crosses its rising threshold and generates an event that is configured for sending SNMP traps. The hcAlarmEntry object instances identified in the OBJECTS clause are from the entry that causes this notification to be generated."
  },
  "hcFallingAlarm": {
    "name": "hcFallingAlarm",
    "oid": "1.3.6.1.2.1.16.29.2.0.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmVariable"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmSampleType"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmAbsValue"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmValueStatus"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmFallingThreshAbsValueLo"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmFallingThreshAbsValueHi"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmFallingThresholdValStatus"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmFallingEventIndex"
      }
    ],
    "status": "current",
    "description": "The SNMP notification that is generated when a high capacity alarm entry crosses its falling threshold and generates an event that is configured for sending SNMP traps. The hcAlarmEntry object instances identified in the OBJECTS clause are from the entry that causes this notification to be generated."
  },
  "hcAlarmCompliances": {
    "name": "hcAlarmCompliances",
    "oid": "1.3.6.1.2.1.16.29.3.1",
    "class": "objectidentity"
  },
  "hcAlarmGroups": {
    "name": "hcAlarmGroups",
    "oid": "1.3.6.1.2.1.16.29.3.2",
    "class": "objectidentity"
  },
  "hcAlarmCompliance": {
    "name": "hcAlarmCompliance",
    "oid": "1.3.6.1.2.1.16.29.3.1.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "hcAlarmControlGroup",
        "module": "HC-ALARM-MIB"
      },
      {
        "object": "hcAlarmCapabilitiesGroup",
        "module": "HC-ALARM-MIB"
      },
      {
        "object": "hcAlarmNotificationsGroup",
        "module": "HC-ALARM-MIB"
      },
      {
        "object": "rmonEventGroup",
        "module": "RMON-MIB"
      }
    ],
    "status": "current",
    "description": "Describes the requirements for conformance to the High Capacity Alarm MIB."
  },
  "hcAlarmControlGroup": {
    "name": "hcAlarmControlGroup",
    "oid": "1.3.6.1.2.1.16.29.3.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmInterval"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmVariable"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmSampleType"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmAbsValue"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmValueStatus"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmStartupAlarm"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmRisingThreshAbsValueLo"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmRisingThreshAbsValueHi"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmRisingThresholdValStatus"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmFallingThreshAbsValueLo"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmFallingThreshAbsValueHi"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmFallingThresholdValStatus"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmRisingEventIndex"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmFallingEventIndex"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmValueFailedAttempts"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmOwner"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmStorageType"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmStatus"
      }
    ],
    "status": "current",
    "description": "A collection of objects used to configure entries for high capacity alarm threshold monitoring purposes."
  },
  "hcAlarmCapabilitiesGroup": {
    "name": "hcAlarmCapabilitiesGroup",
    "oid": "1.3.6.1.2.1.16.29.3.2.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "HC-ALARM-MIB",
        "object": "hcAlarmCapabilities"
      }
    ],
    "status": "current",
    "description": "A collection of objects used to indicate an agent's high capacity alarm threshold monitoring capabilities."
  },
  "hcAlarmNotificationsGroup": {
    "name": "hcAlarmNotificationsGroup",
    "oid": "1.3.6.1.2.1.16.29.3.2.3",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "HC-ALARM-MIB",
        "object": "hcRisingAlarm"
      },
      {
        "module": "HC-ALARM-MIB",
        "object": "hcFallingAlarm"
      }
    ],
    "status": "current",
    "description": "A collection of notifications to deliver information related to a high capacity rising or falling threshold event to a management application."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/HC-ALARM-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:19:54 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "HC-ALARM-MIB"
  }
}