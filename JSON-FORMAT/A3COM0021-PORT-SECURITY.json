{
  "imports": {
    "class": "imports",
    "A3COM0004-GENERIC": [
      "securePort"
    ],
    "SNMP-REPEATER-MIB": [
      "rptrPortAdminStatus"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "Integer32",
      "OBJECT-TYPE",
      "Counter64",
      "MibIdentifier",
      "NOTIFICATION-TYPE",
      "MODULE-IDENTITY",
      "Unsigned32",
      "OBJECT-IDENTITY",
      "Counter32",
      "TRAP-TYPE",
      "iso",
      "TimeTicks",
      "IpAddress",
      "Bits",
      "Gauge32"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "securePortTable": {
    "name": "securePortTable",
    "oid": "1.3.6.1.4.1.43.10.22.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table defines the security status of each secure port. Each port can have a number of authorised MAC addresses, and these are stored in the secureAddressTable."
  },
  "securePortEntry": {
    "name": "securePortEntry",
    "oid": "1.3.6.1.4.1.43.10.22.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "A3COM0021-PORT-SECURITY",
        "object": "secureSlotIndex",
        "implied": 0
      },
      {
        "module": "A3COM0021-PORT-SECURITY",
        "object": "securePortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "There is a row in this table for each secure port, and allows repeater ports to be configured for security on a per port basis. It is indexed using the objects secureSlotIndex and securePortIndex."
  },
  "secureSlotIndex": {
    "name": "secureSlotIndex",
    "oid": "1.3.6.1.4.1.43.10.22.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot or unit number of the secure port. This is the first index into the securePortTable."
  },
  "securePortIndex": {
    "name": "securePortIndex",
    "oid": "1.3.6.1.4.1.43.10.22.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The port number of the secure port. This is the second index into the securePortTable."
  },
  "securePortMode": {
    "name": "securePortMode",
    "oid": "1.3.6.1.4.1.43.10.22.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noRestrictions": 1,
          "continuousLearning": 2,
          "autoLearn": 3,
          "secure": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Determines the learning and security modes of the port. See secureNeedToKnowMode and secureIntrusionAction to configure Need To Know and Intrusion Action on each port. (When in a learning mode, secureNumberAddresses determines the maximum number of addresses that can be learned on the port. This is set by the user.) noRestrictions(1) All learning and security are disabled. continuousLearning(2) Addresses are learned continually. If more addresses are learned than are permitted on the port, then one of the older entries will be aged out. Need To Know and Intrusion Action depends on secureNeedToKnowMode and secureIntrusionAction respectively. autoLearn(3) All addresses for this port are deleted, and then addresses are learned up to the number permitted. securePortMode is then set to secure. Need To Know and Intrusion Action depends on secureNeedToKnowMode and secureIntrusionAction respectively. secure(4) Learning is disabled. Need To Know and Intrusion Action depends on secureNeedToKnowMode and secureIntrusionAction respectively. The secureAddressLearned trap is sent whenever a station has been learned. The secureViolation trap is sent whenever a packet is received from an unauthorised station."
  },
  "secureNeedToKnowMode": {
    "name": "secureNeedToKnowMode",
    "oid": "1.3.6.1.4.1.43.10.22.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notAvailable": 1,
          "disabled": 2,
          "needToKnowOnly": 3,
          "needToKnowWithBroadcastsAllowed": 4,
          "needToKnowWithMulticastsAllowed": 5,
          "permanentNeedToKnowOnly": 6,
          "permanentNeedToKnowWithBroadcastsAllowed": 7,
          "permanentNeedToKnowWithMulticastsAllowed": 8
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Attribute to determine which frames are to be forwarded to this port intact. 1 - Need To Know is not available. 2 - All frames. 3 - Frames addressed to the authorised devices only. 4 - Frames addressed to the authorised devices, plus all broadcast frames. 5 - Frames addressed to the authorised devices, plus all broadcast and multicast frames. 6 - As 3 and cannot be changed. 7 - As 4 and cannot be changed. 8 - As 5 and cannot be changed. If this object returns 1,6,7 or 8, it means that the Need To Know configuration cannot be changed, and any attempt to write to this object will cause an error."
  },
  "secureIntrusionAction": {
    "name": "secureIntrusionAction",
    "oid": "1.3.6.1.4.1.43.10.22.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notAvailable": 1,
          "noAction": 2,
          "disablePort": 3,
          "disablePortTemporarily": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Attribute to determine the action if an unauthorised device tranmsits on this port."
  },
  "secureNumberAddresses": {
    "name": "secureNumberAddresses",
    "oid": "1.3.6.1.4.1.43.10.22.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The maximum number of addresses that the port can learn or store. Reducing this number may cause some addresses to be deleted. This value is set by the user and cannot be automatically changed by the agent. The following relationship must be preserved. secureNumberAddressesStored <= secureNumberAddresses <= secureMaximumAddresses "
  },
  "secureNumberAddressesStored": {
    "name": "secureNumberAddressesStored",
    "oid": "1.3.6.1.4.1.43.10.22.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of addresses that are currently in the AddressTable for this port. If this object has the same value as secureNumberAddresses, then no more addresses can be authorised on this port. The following relationship must allows be preserved. secureNumberAddressesStored <= secureNumberAddresses <= secureMaximumAddresses "
  },
  "secureMaximumAddresses": {
    "name": "secureMaximumAddresses",
    "oid": "1.3.6.1.4.1.43.10.22.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates the maximum value that secureNumberAddresses can be set to. It is dependent on the resources available so may change, eg. if resources are shared between ports, then this value can both increase and decrease. This object must be read before setting secureNumberAddresses. The following relationship must allows be preserved. secureNumberAddressesStored <= secureNumberAddresses <= secureMaximumAddresses "
  },
  "secureAddressTable": {
    "name": "secureAddressTable",
    "oid": "1.3.6.1.4.1.43.10.22.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table which stores the MAC addresses assigned to each port. Addresses will normally defined as authorised, and describe the devices which are permitted to transmit and receive on the corresponding port. This table can be written to by the agent as well as the management station."
  },
  "secureAddressEntry": {
    "name": "secureAddressEntry",
    "oid": "1.3.6.1.4.1.43.10.22.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "A3COM0021-PORT-SECURITY",
        "object": "secureAddrSlotIndex",
        "implied": 0
      },
      {
        "module": "A3COM0021-PORT-SECURITY",
        "object": "secureAddrPortIndex",
        "implied": 0
      },
      {
        "module": "A3COM0021-PORT-SECURITY",
        "object": "secureAddrMAC",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "This table allows multiple addresses to be assigned to each secure port. It is indexed using the objects secureAddrSlotIndex, secureAddrPortIndex and secureAddrMAC."
  },
  "secureAddrSlotIndex": {
    "name": "secureAddrSlotIndex",
    "oid": "1.3.6.1.4.1.43.10.22.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot or unit number of the secure port. This is the first index into the secureAddressTable."
  },
  "secureAddrPortIndex": {
    "name": "secureAddrPortIndex",
    "oid": "1.3.6.1.4.1.43.10.22.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The port number of the secure port. This is the second index into the secureAddressTable."
  },
  "secureAddrMAC": {
    "name": "secureAddrMAC",
    "oid": "1.3.6.1.4.1.43.10.22.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MAC address of a station assigned to this port. This is the third index into the secureAddressTable."
  },
  "secureAddrRowStatus": {
    "name": "secureAddrRowStatus",
    "oid": "1.3.6.1.4.1.43.10.22.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 1,
          "notInService": 2,
          "notReady": 3,
          "createAndGo": 4,
          "createAndWait": 5,
          "destroy": 6
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This manages the creation and deletion or rows, and shows the current status of the indexed MAC address. This object has the following values. 1 - The indexed MAC address is authorised on this port. 2 - The indexed MAC address is not authorised on this port. 3 - Not applicable. (This value indicates an incomplete row.) 4 - Assign a new MAC address to the port and authorise immediately. 5 - Assign a new MAC address to the port, but do not authorise until active(1) is written to this object. 6 - Delete this entry. When creating a new entry, index a new row and use createAndGo(4) or createAndWait(5). Some hardware will not allow the address to be unauthorised, and will automatically switch the row to active(1). When reading this object, only active(1) and notInService(2) will be returned. Only the values active(1) and destroy(6) will be allowed for an existing row, or createAndGo(4) and createAndWait(5) for a new row."
  },
  "secureStop": {
    "name": "secureStop",
    "oid": "1.3.6.1.4.1.43.10.22.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A MIB object to speed up access to the security tables. When performing a get-next through the table, this object is accessed as soon as the table is passed and allows the management to quickly determine the end of the table."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/A3COM0021-PORT-SECURITY.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:40:52 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "A3COM0021-PORT-SECURITY"
  }
}