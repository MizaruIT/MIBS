{
  "imports": {
    "class": "imports",
    "IF-INVERTED-STACK-MIB": [
      "ifInvStackGroup"
    ],
    "IF-MIB": [
      "ifStackGroup2",
      "ifStackHigherLayer",
      "ifStackLowerLayer"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "OBJECT-GROUP",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "MibIdentifier",
      "Counter64",
      "Bits",
      "MODULE-IDENTITY",
      "NOTIFICATION-TYPE",
      "Gauge32",
      "OBJECT-IDENTITY",
      "Counter32",
      "Unsigned32",
      "OBJECT-TYPE",
      "TimeTicks",
      "IpAddress",
      "Integer32",
      "mib-2",
      "iso"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "TruthValue",
      "DisplayString"
    ]
  },
  "ifCapStackMIB": {
    "name": "ifCapStackMIB",
    "oid": "1.3.6.1.2.1.166",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2007-11-07 00:00",
        "description": "Initial version, published as RFC 5066."
      }
    ],
    "lastupdated": "200711070000Z",
    "organization": "IETF Ethernet Interfaces and Hub MIB Working Group",
    "contactinfo": "WG charter: http://www.ietf.org/html.charters/OLD/hubmib-charter.html Mailing Lists: General Discussion: hubmib@ietf.org To Subscribe: hubmib-request@ietf.org In Body: subscribe your_email_address Chair: Bert Wijnen Postal: Alcatel-Lucent Schagen 33 3461 GL Linschoten Netherlands Phone: +31-348-407-775 EMail: bwijnen@alcatel-lucent.com Editor: Edward Beili Postal: Actelis Networks Inc. 25 Bazel St., P.O.B. 10173 Petach-Tikva 10173 Israel Phone: +972-3-924-3491 EMail: edward.beili@actelis.com",
    "description": "The objects in this MIB module are used to describe cross-connect capabilities of stacked (layered) interfaces, complementing ifStackTable and ifInvStackTable defined in IF-MIB and IF-INVERTED-STACK-MIB, respectively. Copyright (C) The IETF Trust (2007). This version of this MIB module is part of RFC 5066; see the RFC itself for full legal notices."
  },
  "ifCapStackObjects": {
    "name": "ifCapStackObjects",
    "oid": "1.3.6.1.2.1.166.1",
    "class": "objectidentity"
  },
  "ifCapStackConformance": {
    "name": "ifCapStackConformance",
    "oid": "1.3.6.1.2.1.166.2",
    "class": "objectidentity"
  },
  "ifCapStackTable": {
    "name": "ifCapStackTable",
    "oid": "1.3.6.1.2.1.166.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "IF-MIB, ifStackTable",
    "status": "current",
    "description": "This table, modeled after ifStackTable from IF-MIB, contains information on the possible 'on-top-of' relationships between the multiple sub-layers of network interfaces (as opposed to actual relationships described in ifStackTable). In particular, it contains information on which sub-layers MAY possibly run 'on top of' which other sub-layers, as determined by cross-connect capability of the device, where each sub-layer corresponds to a conceptual row in the ifTable. For example, when the sub-layer with ifIndex value x can be connected to run on top of the sub-layer with ifIndex value y, then this table contains: ifCapStackStatus.x.y=true The ifCapStackStatus.x.y row does not exist if it is impossible to connect between the sub-layers x and y. Note that for most stacked interfaces (e.g., 2BASE-TL) there's always at least one higher-level interface (e.g., PCS port) for each lower-level interface (e.g., PME) and at least one lower-level interface for each higher-level interface, that is, there is at least a single row with a 'true' status for any such existing value of x or y. This table is read-only as it describes device capabilities."
  },
  "ifCapStackEntry": {
    "name": "ifCapStackEntry",
    "oid": "1.3.6.1.2.1.166.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifStackHigherLayer",
        "implied": 0
      },
      {
        "module": "IF-MIB",
        "object": "ifStackLowerLayer",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Information on a particular relationship between two sub-layers, specifying that one sub-layer MAY possibly run on 'top' of the other sub-layer. Each sub-layer corresponds to a conceptual row in the ifTable (interface index for lower and higher layer, respectively)."
  },
  "ifCapStackStatus": {
    "name": "ifCapStackStatus",
    "oid": "1.3.6.1.2.1.166.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The status of the 'cross-connect capability' relationship between two sub-layers. The following values can be returned: true(1) - indicates that the sub-layer interface, identified by the ifStackLowerLayer MAY be connected to run 'below' the sub-layer interface, identified by the ifStackHigherLayer index. false(2) - the sub-layer interfaces cannot be connected temporarily due to unavailability of the interface(s), e.g., one of the interfaces is located on an absent pluggable module. Note that lower-layer interface availability per higher-layer, indicated by the value of 'true', can be constrained by other parameters, for example, by the aggregation capacity of a higher-layer interface or by the lower-layer interface in question being already connected to another higher-layer interface. In order to ensure that a particular sub-layer can be connected to another sub-layer, all respective objects (e.g., ifCapStackTable, ifStackTable, and efmCuPAFCapacity for EFMCu interfaces) SHALL be inspected. This object is read-only, unlike ifStackStatus, as it describes a cross-connect capability."
  },
  "ifInvCapStackTable": {
    "name": "ifInvCapStackTable",
    "oid": "1.3.6.1.2.1.166.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "IF-INVERTED-STACK-MIB, ifInvStackTable",
    "status": "current",
    "description": "A table containing information on the possible relationships between the multiple sub-layers of network interfaces. This table, modeled after ifInvStackTable from IF-INVERTED-STACK-MIB, is an inverse of the ifCapStackTable defined in this MIB module. In particular, this table contains information on which sub-layers MAY run 'underneath' which other sub-layers, where each sub-layer corresponds to a conceptual row in the ifTable. For example, when the sub-layer with ifIndex value x MAY be connected to run underneath the sub-layer with ifIndex value y, then this table contains: ifInvCapStackStatus.x.y=true This table contains exactly the same number of rows as the ifCapStackTable, but the rows appear in a different order. This table is read-only as it describes a cross-connect capability."
  },
  "ifInvCapStackEntry": {
    "name": "ifInvCapStackEntry",
    "oid": "1.3.6.1.2.1.166.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifStackLowerLayer",
        "implied": 0
      },
      {
        "module": "IF-MIB",
        "object": "ifStackHigherLayer",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Information on a particular relationship between two sub- layers, specifying that one sub-layer MAY run underneath the other sub-layer. Each sub-layer corresponds to a conceptual row in the ifTable."
  },
  "ifInvCapStackStatus": {
    "name": "ifInvCapStackStatus",
    "oid": "1.3.6.1.2.1.166.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ifCapStackStatus",
    "status": "current",
    "description": "The status of the possible 'cross-connect capability' relationship between two sub-layers. An instance of this object exists for each instance of the ifCapStackStatus object, and vice versa. For example, if the variable ifCapStackStatus.H.L exists, then the variable ifInvCapStackStatus.L.H must also exist, and vice versa. In addition, the two variables always have the same value. The ifInvCapStackStatus object is read-only, as it describes a cross-connect capability."
  },
  "ifCapStackGroups": {
    "name": "ifCapStackGroups",
    "oid": "1.3.6.1.2.1.166.2.1",
    "class": "objectidentity"
  },
  "ifCapStackCompliances": {
    "name": "ifCapStackCompliances",
    "oid": "1.3.6.1.2.1.166.2.2",
    "class": "objectidentity"
  },
  "ifCapStackGroup": {
    "name": "ifCapStackGroup",
    "oid": "1.3.6.1.2.1.166.2.1.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "IF-CAP-STACK-MIB",
        "object": "ifCapStackStatus"
      },
      {
        "module": "IF-CAP-STACK-MIB",
        "object": "ifInvCapStackStatus"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing information on the cross-connect capability of multi-layer (stacked) network interfaces."
  },
  "ifCapStackCompliance": {
    "name": "ifCapStackCompliance",
    "oid": "1.3.6.1.2.1.166.2.2.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ifCapStackGroup",
        "module": "IF-CAP-STACK-MIB"
      },
      {
        "object": "ifStackGroup2",
        "module": "IF-MIB"
      },
      {
        "object": "ifInvStackGroup",
        "module": "IF-INVERTED-STACK-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for SNMP entities, which provide information on the cross-connect capability of multi-layer (stacked) network interfaces, with flexible cross-connect between the sub-layers."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/IF-CAP-STACK-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 18:03:36 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "IF-CAP-STACK-MIB"
  }
}