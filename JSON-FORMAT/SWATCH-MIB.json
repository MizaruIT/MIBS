{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "MODULE-IDENTITY",
      "Gauge32",
      "Unsigned32",
      "TimeTicks",
      "Counter64",
      "enterprises",
      "IpAddress",
      "Counter32",
      "iso",
      "TRAP-TYPE",
      "Bits",
      "NOTIFICATION-TYPE",
      "OBJECT-IDENTITY",
      "MibIdentifier",
      "mgmt",
      "OBJECT-TYPE",
      "Integer32"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "PhysAddress": {
    "name": "PhysAddress",
    "class": "type",
    "type": {
      "type": "OCTET STRING",
      "class": "type"
    }
  },
  "RequestStatus": {
    "name": "RequestStatus",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 1,
          "inactive": 2,
          "notReady": 3,
          "createAndGo": 4,
          "createAndWait": 5,
          "remove": 6
        }
      }
    }
  },
  "dms": {
    "name": "dms",
    "oid": "1.3.6.1.4.1.1931",
    "class": "objectidentity"
  },
  "dmsMib": {
    "name": "dmsMib",
    "oid": "1.3.6.1.4.1.1931.1",
    "class": "objectidentity"
  },
  "isPerf": {
    "name": "isPerf",
    "oid": "1.3.6.1.4.1.1931.1.1",
    "class": "objectidentity"
  },
  "swatchSnmpAgent": {
    "name": "swatchSnmpAgent",
    "oid": "1.3.6.1.4.1.1931.250",
    "class": "objectidentity"
  },
  "hpux9": {
    "name": "hpux9",
    "oid": "1.3.6.1.4.1.1931.250.1",
    "class": "objectidentity"
  },
  "hpux10": {
    "name": "hpux10",
    "oid": "1.3.6.1.4.1.1931.250.6",
    "class": "objectidentity"
  },
  "sunos4": {
    "name": "sunos4",
    "oid": "1.3.6.1.4.1.1931.250.2",
    "class": "objectidentity"
  },
  "solaris": {
    "name": "solaris",
    "oid": "1.3.6.1.4.1.1931.250.3",
    "class": "objectidentity"
  },
  "osf": {
    "name": "osf",
    "oid": "1.3.6.1.4.1.1931.250.4",
    "class": "objectidentity"
  },
  "ultrix": {
    "name": "ultrix",
    "oid": "1.3.6.1.4.1.1931.250.5",
    "class": "objectidentity"
  },
  "netbsd1": {
    "name": "netbsd1",
    "oid": "1.3.6.1.4.1.1931.250.7",
    "class": "objectidentity"
  },
  "freebsd": {
    "name": "freebsd",
    "oid": "1.3.6.1.4.1.1931.250.8",
    "class": "objectidentity"
  },
  "irix": {
    "name": "irix",
    "oid": "1.3.6.1.4.1.1931.250.9",
    "class": "objectidentity"
  },
  "linux": {
    "name": "linux",
    "oid": "1.3.6.1.4.1.1931.250.10",
    "class": "objectidentity"
  },
  "bsdi": {
    "name": "bsdi",
    "oid": "1.3.6.1.4.1.1931.250.11",
    "class": "objectidentity"
  },
  "openbsd": {
    "name": "openbsd",
    "oid": "1.3.6.1.4.1.1931.250.12",
    "class": "objectidentity"
  },
  "win32": {
    "name": "win32",
    "oid": "1.3.6.1.4.1.1931.250.13",
    "class": "objectidentity"
  },
  "unknown": {
    "name": "unknown",
    "oid": "1.3.6.1.4.1.1931.250.255",
    "class": "objectidentity"
  },
  "isNumber": {
    "name": "isNumber",
    "oid": "1.3.6.1.4.1.1931.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of network servers currently monitored by this agent."
  },
  "isNextIndex": {
    "name": "isNextIndex",
    "oid": "1.3.6.1.4.1.1931.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The next available row index that can be used for the creation of a new ServiceWatch request. If there are no available rows, 0 is returned."
  },
  "isTable": {
    "name": "isTable",
    "oid": "1.3.6.1.4.1.1931.1.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The list of network servers and their status. The number of entries is given by the value of isNumber."
  },
  "isEntry": {
    "name": "isEntry",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SWATCH-MIB",
        "object": "isIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry for a network server containing objects describing the health and performance of the network server."
  },
  "isIndex": {
    "name": "isIndex",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each URL entry. Its value ranges between 1 and isNumber. Row/ index numbers start at row 1. around to 0, etc."
  },
  "isRequestName": {
    "name": "isRequestName",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The name of the ServiceWatch request."
  },
  "isStatus": {
    "name": "isStatus",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RequestStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "See 'RequestStatus' definition for possible values, except the value of isStatus will never be notReady(3): if this row exists, it will ALWAYS be ready. The notReady(3) value typically means the row exists, but was missing information. In this case, ServiceWatch automatically fill in defaults for any values that were missing, so notReady(3) will NEVER set here."
  },
  "isURL": {
    "name": "isURL",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The URL monitored. You can add new URLs to be monitored by setting a URL in isURL."
  },
  "isUsername": {
    "name": "isUsername",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The username to use for access to the network service. Currently used for web and ftp services only."
  },
  "isPassword": {
    "name": "isPassword",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A password to use for access to the network service. Currently used for web and ftp services only."
  },
  "isProxy": {
    "name": "isProxy",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The hostname of a web proxy server, if any. If an isProxy server is set to a web proxy server name, the request will be sent to the proxy server, instead of directly to the hostname specified in the URL."
  },
  "isServiceStatus": {
    "name": "isServiceStatus",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2,
          "unknown": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The current operational state of the server."
  },
  "isDescription": {
    "name": "isDescription",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A textual description of the server software."
  },
  "isResponseTime": {
    "name": "isResponseTime",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The response time, in seconds, for the server to complete the request. Note: A string containing a floating point number: real floating point values do not exist in the SNMP protocol, so a floating point string is used. For the response time as an integer, refer to 'isResponseTimeInteger.'"
  },
  "isResponseTimeInteger": {
    "name": "isResponseTimeInteger",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The response time, in seconds, for the server to complete the request. (An integer.)"
  },
  "isTimeExceeded": {
    "name": "isTimeExceeded",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2,
          "unknown": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time for the server to complete the request exceeded maximum amount of time allowed. (See the isMaxWait variable which is related to this variable.) The request to the server was consequently aborted It will be set to unknown(3) if the request is not active."
  },
  "isMaxWait": {
    "name": "isMaxWait",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The maximum amount of time to wait before timing out during an attempt to perform a query on the server."
  },
  "isLevel": {
    "name": "isLevel",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The error level to set when an event occurs for this URL. The type of error level can be determined by the user: For example 1-10, or 'low', 'medium', 'high', etc."
  },
  "isError": {
    "name": "isError",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "connection-timed-out": 2,
          "transmission-to-server-failed": 3,
          "receiving-from-server-failed": 4,
          "connect-to-server-failed": 5,
          "transfer-time-exceeded-maximum": 6,
          "web-retrieval-request-error": 7,
          "dns-warning-query-format-error": 8,
          "dns-warning-server-failure": 9,
          "dns-warning-name-error": 10,
          "dns-warning-has-not-implemented-this-kind-of-query": 11,
          "dns-warning-refused-to-perform-query": 12,
          "dns-warning-unknown-server-reply": 13,
          "dns-warning-incorrect-id-returned": 14,
          "dns-warning-response-not-in-correct-format": 15,
          "no-answer-from-server-after-connection": 16,
          "smtp-error-No-answer-after-connection": 17,
          "gopher-error-No-answer-after-request": 18,
          "smtp-error-Unexpected-response-maybe-wrong-port": 19,
          "unused": 20,
          "hostname-in-URL-not-found-via-name-service": 21,
          "bad-protocol-type-in-URL": 22,
          "unknown-monitoring-failure": 23,
          "child-poller-never-received-a-request": 24,
          "child-poller-died-unexpectedly": 25,
          "could-not-create-pipe-for-child": 26,
          "could-not-run-the-ServiceWatch-polling-program": 27,
          "could-not-fork-child-process": 28,
          "client-bootp-or-dhcp-port-used-by-another-process": 29,
          "telnet-error-appeared-to-not-be-a-telnet-server": 30,
          "telnet-error-server-could-not-accept-reply": 31,
          "ping-record-route-option-set-failed": 32,
          "unknown-error": 70,
          "could-not-exec-extensible-program": 35,
          "extensible-directory-missing-or-inaccessible": 36,
          "extensible-monitoring-filename-missing": 37,
          "extensible-file-open-failure": 38,
          "pipe-failure": 39,
          "protocol-specific-error": 40,
          "extend-program-sent-no-results": 41,
          "unknown-protocol-or-API-not-licensed": 42,
          "ssl-feature-not-enabled": 50,
          "ssl-connection-timed-out": 51,
          "ssl-connection-failed": 52,
          "snmp-no-such-objectid": 55,
          "snmp-no-such-name": 56,
          "snmp-error-response": 57,
          "could-not-create-socket": 59,
          "could-not-determine-our-enet-addr": 60,
          "invalid-server-response": 61
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The type of error that occurred (if any)."
  },
  "isBytesRead": {
    "name": "isBytesRead",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of data bytes read from the server on the last request."
  },
  "isThroughPut": {
    "name": "isThroughPut",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The rate of bytes per second read from the server on the last request."
  },
  "isPortNumber": {
    "name": "isPortNumber",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The TCP/IP or UDP/IP port number used to contact the network server. You specify the port number to use in isURL."
  },
  "isPortType": {
    "name": "isPortType",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "tcp": 1,
          "udp": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "For DNS, isPortType can be either TCP or UDP. For other protocols, it can be only TCP, since the other protocols speak only TCP."
  },
  "isOptions": {
    "name": "isOptions",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Options (bitstring) on how the server will be contacted. You can add these together to set more than one option: none(1): By defaut, a sample query to the server will be performed. noQuery(2): Do not attempt to do a query to the network server (it will only check the port to determine if there IS a server there. reResolve(4): Reresolve the hostname into an IP address immediately before EACH attempted contacted with the network server. proxyNocache(8): When using a proxy server, inform the proxy server to not use its cache. logAll(32): Log information from all poll requests to the log file. (Otherwise, only exceptions/traps will be logged.) notifyStateChange(64): Notify ONLY on a state change of a network service. For example, notify only if 1) A service has been down exactly NCFailsAlert times, OR: 2) A service has been down and then comes back up. Note: If NotifyStateChange is set, then only 1 notification will occur until/unless the network server comes up again. The KIND of notification done (trap and/or log to a file and/or run a program) is determined by the isEventType variable. allEprog(128): Run the program specified in isEprog after EACH poll attempt to the service (rather than only when there is an event, etc.). traceRoute(256): If an event occurs and email is sent (isEmail is set), then include a traceroute to the host that had the failed network service. disableAutoStart(512): Do not start this request during 'Start All Requests' or system reboots. sslWorkarounds(1024): Enable SSL bug workarounds."
  },
  "isNRequests": {
    "name": "isNRequests",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of times to perform the request."
  },
  "isInterval": {
    "name": "isInterval",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of seconds to wait, after the completion of the last request, before starting the next request."
  },
  "isRequestNumber": {
    "name": "isRequestNumber",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The request number (relates to isNRequests and isInterval."
  },
  "isEventType": {
    "name": "isEventType",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The type of notification that will be performed. Add all of the options you wish to use and set isEventType to the total of these options. For example, if you want logging to a file (2) and an snmp-trap to be sent (4), then set isEventType to 6 (2 + 4). The default is snmp-trap(4). The possible choices are: none(1): No logging is performed. If this bit is set, all other bits are then cleared in this variable. log(2): Logging to a file is performed. snmp-trap(4): Sending an SNMP trap is performed."
  },
  "isEprog": {
    "name": "isEprog",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 1023
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The filename of the program to run when an event occurs (or after every poll attempt if isOptions has allEprog set)."
  },
  "isEmail": {
    "name": "isEmail",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The email address to send email when an event occurs. If this variable is not null, then email will be sent to this email address when an event occurs."
  },
  "isEpager": {
    "name": "isEpager",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The email address of an alphanumeric pager to send email formatted for a pager when an event occurs. If this variable is not null, then email formatted for alphanumeric pagers will be sent to this email address when an event occurs."
  },
  "isNCFails": {
    "name": "isNCFails",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of CONSECUTIVE failures when attempting to complete the request to a network server."
  },
  "isNCFailsAlert": {
    "name": "isNCFailsAlert",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Report a failure when isNCFailsAlert consecutive failures have occurred. Failures are reported as defined by the isEventType variable. The default for isNCFailsAlert is 1: After 1 failure, report it."
  },
  "isResponseType": {
    "name": "isResponseType",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The response type as returned from the server. For example 200-299 means the request succeeded, 400-499 are bad requests, etc."
  },
  "isResponseReason": {
    "name": "isResponseReason",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A textual description of the server's response type, as returned from the server. (This response should contain the string describing the responseType byte.)"
  },
  "isLastAttempt": {
    "name": "isLastAttempt",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The last time that this agent attempted to contact the network server. The format returned: Thu Oct 3 13:18:50 1996 "
  },
  "isFirstFailed": {
    "name": "isFirstFailed",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The first time the network service failed this round of failures. The format returned: Tue Jan 4 23:08:21 2000"
  },
  "isFileType": {
    "name": "isFileType",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The retrieved file's type, such as text/html, image/gif etc. (Applies to web servers only, currently)."
  },
  "isIPAddr": {
    "name": "isIPAddr",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address to which this entry's monitoring information pertains."
  },
  "isData": {
    "name": "isData",
    "oid": "1.3.6.1.4.1.1931.1.1.3.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 516
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Additional information or data returned from the sample request."
  },
  "isTraps": {
    "name": "isTraps",
    "oid": "1.3.6.1.4.1.1931.1.2",
    "class": "objectidentity"
  },
  "serverFailed": {
    "name": "serverFailed",
    "oid": "1.3.6.1.4.1.1931.1.20.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SWATCH-MIB",
        "object": "isURL"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isUsername"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isProxy"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isServiceStatus"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isResponseTimeInteger"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isTimeExceeded"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isMaxWait"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isLevel"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isError"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isPortNumber"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isPortType"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isResponseType"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isResponseReason"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isRequestNumber"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isNCFails"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isNCFailsAlert"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isLastAttempt"
      }
    ],
    "description": "The network server failed to correctly reply to the request in the time allowed."
  },
  "serverUp": {
    "name": "serverUp",
    "oid": "1.3.6.1.4.1.1931.1.20.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SWATCH-MIB",
        "object": "isURL"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isUsername"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isProxy"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isServiceStatus"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isResponseTimeInteger"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isTimeExceeded"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isMaxWait"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isLevel"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isError"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isPortNumber"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isPortType"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isResponseType"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isResponseReason"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isRequestNumber"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isNCFails"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isNCFailsAlert"
      },
      {
        "module": "SWATCH-MIB",
        "object": "isLastAttempt"
      }
    ],
    "description": "If notifyStateChange is set in isOptions and the state of the network service changed from down to up, then a 'serverUp' trap is sent."
  },
  "dmsTraps": {
    "name": "dmsTraps",
    "oid": "1.3.6.1.4.1.1931.1.3",
    "class": "objectidentity"
  },
  "dmsStart": {
    "name": "dmsStart",
    "oid": "1.3.6.1.4.1.1931.1.30.1",
    "class": "notificationtype",
    "description": "This trap is sent when the ServiceWatch agent starts"
  },
  "dmsShutdown": {
    "name": "dmsShutdown",
    "oid": "1.3.6.1.4.1.1931.1.30.2",
    "class": "notificationtype",
    "description": "This trap is sent when the ServiceWatch agent terminates"
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/SWATCH-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 15:22:33 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "SWATCH-MIB"
  }
}