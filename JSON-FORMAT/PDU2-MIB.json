{
  "imports": {
    "class": "imports",
    "INET-ADDRESS-MIB": [
      "InetAddressType",
      "InetAddress",
      "InetPortNumber"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "OBJECT-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-MIB": [
      "sysName",
      "sysContact",
      "sysLocation"
    ],
    "SNMPv2-SMI": [
      "iso",
      "OBJECT-TYPE",
      "NOTIFICATION-TYPE",
      "IpAddress",
      "Counter32",
      "enterprises",
      "OBJECT-IDENTITY",
      "MODULE-IDENTITY",
      "TimeTicks",
      "Integer32",
      "Gauge32",
      "Unsigned32",
      "MibIdentifier",
      "Counter64",
      "Bits"
    ],
    "SNMPv2-TC": [
      "TruthValue",
      "TEXTUAL-CONVENTION",
      "DisplayString",
      "RowPointer",
      "MacAddress"
    ]
  },
  "raritan": {
    "name": "raritan",
    "oid": "1.3.6.1.4.1.13742",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2016-02-09 00:00",
        "description": "PX2 release 3.2.20: 1) Added the following: NetworkInterfaceTypeEnumeration, networkInterfaceType to unitConfigurationTable 2) Added AddressSourceEnumeration 3) Added activeDNS ServerCount to unitConfigurationTable 4) Added activeDNSServerTable "
      },
      {
        "revision": "2015-10-26 00:00",
        "description": "PX2 release 3.2.10: 1) Added to trapInformation: phoneNumber Added the following traps: smsMessageTransmissionFailure trap "
      },
      {
        "revision": "2015-09-30 00:00",
        "description": "PX2 release 3.2.1: - Support for PMC/BCM2 - Line and node information for component poles 1) SensorTypeEnumeration: Added reactivePower(29) displacementPowerFactor(35) 2) SensorUnitsEnumeration: Added var(23) 3) ProductTypeEnumeration: Added powerMeter(3) 4) Added the following enumerations: PanelLayoutEnumeration PanelNumberingEnumeration CircuitTypeEnumeration PhaseEnumeration LineEnumeration PowerMeterTypeEnumeration 5) Added the following tables: inletPoleConfigurationTable overCurrentProtectorPoleConfigurationTable outletPoleConfigurationTable transferSwitchPoleConfigurationTable powerMeterConfigurationTable circuitConfigurationTable circuitPoleConfigurationTable circuitSensorConfigurationTable circuitPoleSensorConfigurationTable circuitSensorLogTable circuitPoleSensorLogTable circuitSensorMeasurementsTable circuitPoleSensorMeasurementsTable circuitSensorControlTable 6) unitConfigurationTable: Added circuitCount 7) inletDeviceCapabilities: Added reactivePower(28) 8) inletPoleCapabilities: Added phaseAngle(23) reactivePower(28) displacementPowerFactor(34) 9) overCurrentProtectorConfigurationTable: Added overCurrentProtectorPoleCount 10) transferSwitchConfigurationTable: Added transferSwitchPoleCount 11) Added the following to trapInformation: circuitNumber circuitPoleNumber 12) Added the following traps: circuitSensorStateChange circuitPoleSensorStateChange circuitAdded circuitDeleted circuitModified circuitSensorReset powerMeterAdded powerMeterDeleted powerMeterModified 13) Revised the DESCRIPTION clauses of: pduCount pduId inletPoleCount "
      },
      {
        "revision": "2015-02-18 00:00",
        "description": "PX2 release 3.1.0: - Support absolute humidity sensors 1) SensorStateEnumeration: Added nonRedundant(30) 2) SensorTypeEnumeration: Added absoluteHumidity(28) 3) SensorUnitsEnumeration: Added grampercubicmeter(22) 4) Corrected the possible states for the rcmState, operatingState and activeInlet sensors 5) Documented that the unitSensorResetValue object in unitSensorControlTable applies only to multi-inlet PDUs 6) Deprecated inletRatedVA, inletRatedFrequency 7) inletDeviceCapabilities: Corrected bit values for residualCurrent(25) and rcmState(26) "
      },
      {
        "revision": "2014-06-04 00:00",
        "description": "PX2 release 3.0.0: - Support for signed sensor readings - Support for unit-level power and energy sensors - Send trap on peripheral device firmware update - Allow peripheral device auto management to be disabled - Allow front panel outlet switching to be enabled or disabled - Support DX-PIR occupancy sensor 1) Changed the SYNTAX from Integer32 to Unsigned32: measurementsUnitSensorValue 2) Added signed value, range and threshold columns to: unitSensorConfigurationTable unitSensorMeasurementsTable pduSensorStateChange inletSensorConfigurationTable inletSensorMeasurementsTable inletSensorLogTable inletSensorStateChange inletPoleSensorConfigurationTable inletPoleSensorMeasurementsTable inletPoleSensorLogTable inletPoleSensorStateChange overCurrentProtectorSensorConfigurationTable overCurrentProtectorSensorMeasurementsTable overCurrentProtectorSensorLogTable overCurrentProtectorSensorStateChange outletSensorConfigurationTable outletSensorMeasurementsTable outletSensorLogTable outletSensorStateChange outletPoleSensorConfigurationTable outletPoleSensorMeasurementsTable outletPoleSensorLogTable outletPoleSensorStateChange 3) Added unsigned value, range and threshold columns to: unitSensorLogTable transferSwitchSensorConfigurationTable transferSwitchSensorMeasurementsTable transferSwitchSensorLogTable transferSwitchSensorStateChange 4) Added UnitSensorControlTable 5) Added unitSensorReset and unitSensorStateChange traps 6) Deprecated pduSensorStateChange trap 7) Added to unitConfigurationTable: peripheralDevicesAutoManagement frontPanelOutletSwitching frontPanelRCMSelfTest frontPanelActuatorControl 8) Added to externalSensorConfigurationTable: externalSensorAlarmedToNormalDelay 9) Deprecated: wireCount in unitConfiguraionTable tables for wireSensors traps for wireSensors 10) SensorStateEnumeration: Added fail(14) 11) ProductTypeEnumeration: Renamed rackSts(2) to transferSwitch 12) Added: PeripheralDeviceFirmwareUpdateStateEnumeration peripheralDeviceFirmwareUpdateState peripheralDeviceFirmwareUpdate trap 13) Added userName to the following traps: bulkConfigurationSaved bulkConfigurationCopied lhxSupportChanged deviceSettingsSaved deviceSettingsRestored "
      },
      {
        "revision": "2014-01-09 00:00",
        "description": "PX2 release 2.6.0: - Support for PX3TS transfer switches 1) SensorTypeEnumeration: Removed: scrOpenStatus scrShortStatus Added: i1SmpsStatus(46) i2SmpsStatus(47) switchStatus(48) 2) SensorStateEnumeration: Removed: marginal fail Added: i1OpenFault(22) i1ShortFault(23) i2OpenFault(24) i2ShortFault(25) fault(26) warning(27) critical(28) 3) unitDeviceCapabilities: Added i1SmpsStatus(45) i2SmpsStatus(46) 4) transferSwitchCapabilities: Added switchStatus(47) 5) Added transferSwitchConfiguration table 6) unitSensorLogTable: Removed: logUnitSensorAvgValue logUnitSensorMaxValue logUnitSensorMinValue Added: logUnitSensorSignedAvgValue logUnitSensorSignedMaxValue logUnitSensorSignedMinValue "
      },
      {
        "revision": "2014-01-07 00:00",
        "description": "PX2 release 2.5.30: - Accumulating sensors (energy counters) can be reset - Sensor accuray and tolerance variables are deprecated 1) Added peripheralDevicePackagePosition and peripheralDevicePackageState 2) Added radiusError trap 3) Added serverReachabilityError trap 4) Deprecated the following: unitSensorConfigurationTable/unitSensorAccuracy unitSensorConfigurationTable/unitSensorTolerance inletSensorConfigurationTable/inletSensorAccuracy inletSensorConfigurationTable/inletSensorTolerance inletPoleSensorConfigurationTable/inletPoleSensorAccuracy inletPoleSensorConfigurationTable/inletPoleSensorTolerance outletSensorConfigurationTable/outetSensorAccuracy outletSensorConfigurationTable/outletSensorTolerance outletPoleSensorConfigurationTable/outetPoleSensorAccuracy outletPoleSensorConfigurationTable/outletPoleSensorTolerance overCurrentProtectorSensorConfigurationTable/overCurrentProtectorSensorAccuracy overCurrentProtectorSensorConfigurationTable/overCurrentProtectorSensorTolerance externalSensorConfigurationTable/externalSensorAccuracy externalSensorConfigurationTable/externalSensorTolerance wireSensorConfigurationTable/wireSensorAccuracy wireSensorConfigurationTable/wireSensorTolerance transferSwitchSensorConfigurationTable/transferSwitchSensorAccuracy transferSwitchSensorConfigurationTable/transferSwitchSensorTolerance 5) Added inletSensorReset and outletSensorReset traps 6) Added inletSensorControl and inletSensorControlTable 7) Added outletSensorControl and outletSensorControlTable 8) Added unknownPeripheralDeviceAttached trap "
      },
      {
        "revision": "2013-11-21 00:00",
        "description": "PX2 release 2.5.20: - Support for residual current monitors - Support for USB cascading with one IP address - Support for line-neutral voltage sensors 1) SensorTypeEnumeration: Added rmsVoltageLN(25) residualCurrent(26) rcmState(27) 2) SensorStateEnumeration: Added warning(27) critical(28) selfTest(29) 3) inletDeviceCapabilities: Added residualCurrent(26) rcmState(27) 4) Added rmsVoltageLN(24) to inletPoleCapabilities 5) Added inletRCMResidualOperatingCurrent to inletConfigurationTable 6) Added rcmControl under control 7) Added rcmSelfTestTable under rcmControl 8) Added DeviceCascadeTypeEnumeration 9) Added deviceCascadeType, deviceCascadePosition to unitConfigurationTable 10) Added agentInetPortNumber under trapInformation 11) Added agentInetPortNumber as a varbind to all traps 12) Added peripheralDevicePackageTable containing information on peripheral device packages "
      },
      {
        "revision": "2013-09-18 00:00",
        "description": " 1) Added serverConnectivityUnrecoverable trap "
      },
      {
        "revision": "2013-08-01 00:00",
        "description": " 1) Add RCBO OCP types "
      },
      {
        "revision": "2013-07-10 00:00",
        "description": " 1) Added externalSensorTypeDefaultThresholdsTable "
      },
      {
        "revision": "2013-07-02 00:00",
        "description": " 1) Added relayBehaviorOnPowerLoss to unitConfigurationTable "
      },
      {
        "revision": "2013-05-21 00:00",
        "description": " 1) Added inletEnableState to inletConfigurationTable 2) Added traps: inletEnabled and inletDisabled "
      },
      {
        "revision": "2013-04-26 00:00",
        "description": " 1) Added traps: webcamInserted and webcamRemoved 2) Added trapInformation parameters: webcamModel,webcamConnectionPort "
      },
      {
        "revision": "2013-03-27 00:00",
        "description": " 1) Changed outletSource to outletPowerSource in outletConfigurationTable 2) Changed transferSwitchSource1 and transferSwitchSource2 to transferSwitchPowerSource1 and transferSwitchPowerSource2 in transferSwitchConfigurationTable 3) Changed overCurrentProtectorSource to overCurrentProtectorPowerSource in overCurrentProtectorConfigurationTable 4) Changed wireSource to wirePowerSource in wireConfigurationTable "
      },
      {
        "revision": "2013-03-25 10:00",
        "description": " 1) Added comments showing the possible states for each sensor type. "
      },
      {
        "revision": "2013-03-25 00:00",
        "description": " 1) Added outletSource to outletConfigurationTable 2) Added transferSwitchSource1 and transferSwitchSource2 to transferSwitchConfigurationTable 3) Added overCurrentProtectorSource to overCurrentProtectorConfigurationTable 4) Added wireSource to wireConfigurationTable "
      },
      {
        "revision": "2013-03-18 00:00",
        "description": " 1) Added meteringControllerCount to the unitConfigurationTable 2) Added meteringController to BoardTypeEnumeration "
      },
      {
        "revision": "2013-02-25 00:00",
        "description": " 1) Added ProductTypeEnumeration 2) Added productType to unitConfigurationTable "
      },
      {
        "revision": "2013-02-04 00:00",
        "description": " 1) Added TransferSwitchTransferReasonEnumeration 2) Added transferSwitchLastTransferReason to transferSwitchControlTable 3) Added transferSwitchLastTransferReason to transferSwitchSensorStateChange trap "
      },
      {
        "revision": "2013-01-24 00:00",
        "description": "Added required sensor types and units "
      },
      {
        "revision": "2012-11-20 00:00",
        "description": "1) Added externalSensorIsActuator and externalSensorPosition to the externalSensorConfigurationTable 2) Added actuatorControlTable "
      },
      {
        "revision": "2012-11-15 00:00",
        "description": "1) Removed transferSwitchOutputCapabilities from transferSwitchConfigurationTable 2) Removed the following tables: transferSwitchOutputSensorConfigurationTable transferSwitchOutputSensorLogTable transferSwitchOutputSensorMeasurementsTable 3) Removed transferSwitchOutputSensorStateChange trap 4) Added transferSwitchControlTable 5) Removed the following entries from SensorTypeEnumeration: overTemperatureFault fans internalFault inletPhaseDeviationFault overloadFault 6) Added the following entries to SensorTypeEnumeration: overloadStatus overheatStatus scrOpenStatus scrShortStatus fanStatus inletPhaseSyncAngle inletPhaseSync 7) Added the following entries to SensorStateEnumeration: inSync, outOfSync 8) Renamed transferSwitchNoTransferIfPhaseDeviationFault to transferSwitchAutoReTransferRequiresPhaseSync "
      },
      {
        "revision": "2012-10-05 00:00",
        "description": "1) Modified the DESCRIPTION of the following. outletSwitchControlTable transferSwitchOutputSensorMeasurementsEntry overCurrentProtectorSensorMeasurementsEntry outletPoleSensorMeasurementsEntry transferSwitchOutputSensorLogEntry transferSwitchOutputSensorLogTable wireSensorLogEntry externalSensorNumber controllerConfigurationEntry SensorUnitsEnumeration measurementsGroup logGroup "
      },
      {
        "revision": "2012-10-04 00:00",
        "description": "1) In the transferSwitchConfigurationTable, replaced transferSwitchFrequencyDeviation with transferSwitchLowerMarginalFrequency and transferSwitchUpperMarginalFrequency "
      },
      {
        "revision": "2012-09-28 00:00",
        "description": "1) Modified the DESCRIPTION of the following. bulkConfigurationCopied, userModified, userSessionTimeout "
      },
      {
        "revision": "2012-09-21 00:00",
        "description": "1) Added the following traps: deviceSettingsSaved, deviceSettingsRestored "
      },
      {
        "revision": "2012-09-20 00:00",
        "description": "1) Added the following objects to the transferSwitchConfigurationTable: transferSwitchInternalFaultType 2) Added transferSwitchInternalFaultType to transferSwitchSensorStateChange trap 3) Added marginal to SensorStateEnumeration "
      },
      {
        "revision": "2012-09-17 00:00",
        "description": "Deprecated the following objects from the unitConfigurationTable pxInetAddressType, pxInetIPAddress, pxInetNetmask, pxInetGateway "
      },
      {
        "revision": "2012-09-04 00:00",
        "description": "Support for transfer Switch objects and sensors. 1. Added transferSwitchCount to unitConfigurationTable 2. Added the following tables: transferSwitchConfigurationTable, transferSwitchSensorConfigurationTable, transferSwitchSensorLogTable, transferSwitchSensorMeasurementsTable transferSwitchOutputSensorConfigurationTable, transferSwitchOutputSensorLogTable, transferSwitchOutputSensorMeasurementsTable 3. Added transferSwitchSensorStateChange trap transferSwitchOutputSensorStateChange trap "
      },
      {
        "revision": "2012-06-22 00:00",
        "description": " 1. Added surgeProtectorStatus to SensorTypeEnumeration 2. Added surgeProtectorStatus to inletDeviceCapabilities "
      },
      {
        "revision": "2012-06-18 00:00",
        "description": "Added a comment before the section listing the traps. The comment notes that the pxInetIPAddressType and pxInetIPAddress fields are not used for IPv6 traps "
      },
      {
        "revision": "2012-06-06 00:00",
        "description": "Support for wire objects and sensors. 1. Added wireCount to unitConfigurationTable 2. Added the following tables: wireConfigurationTable, wireSensorConfigurationTable, wireSensorLogTable, wireSensorMeasurementsTable 3. Added wireSensorStateChange trap "
      },
      {
        "revision": "2012-05-25 00:00",
        "description": "added userAccepted/DeclinedRestrictedServiceAgreement traps"
      },
      {
        "revision": "2012-05-15 00:00",
        "description": " 1. Added support for NTP servers. Added the following objects under info synchronizeWithNTPServer, useDHCPProvidedNTPServer, firstNTPServerAddressType, firstNTPServerAddress, secondNTPServerAddressType, secondNTPServerAddress "
      },
      {
        "revision": "2012-03-26 00:00",
        "description": "added lhxSupportChanged trap."
      },
      {
        "revision": "2011-12-13 00:00",
        "description": " 1. Added usbSlaveConnected, usbSlaveDisonnected traps "
      },
      {
        "revision": "2011-11-29 00:00",
        "description": " 1. Added cascadedDeviceConnected to UnitConfigurationEntryStruct "
      },
      {
        "revision": "2011-10-25 00:00",
        "description": " 1. Added DeviceIdentificationParameterEnumeration 2. Added deviceIdentificationChanged Trap 3. Added sysContact, sysName, sysLocation to all traps "
      },
      {
        "revision": "2011-06-16 00:00",
        "description": " 1. Changed DESCRIPTION of outletSequencingDelay "
      },
      {
        "revision": "2011-03-22 00:00",
        "description": " 1. Added rfCodeTagConnected, rfCodeTagDisconnected traps 2. Changed MAX-ACCESS for externalOnOffSensorSubtype to read-write "
      },
      {
        "revision": "2011-02-21 00:00",
        "description": " 1. Added rpm(19) to SensorUnitsEnumeration "
      },
      {
        "revision": "2011-02-14 00:00",
        "description": " 1. Changed 5WIRE IEC60309 enumerations from 250V to 208V "
      },
      {
        "revision": "2011-02-08 00:00",
        "description": " 1. Removed OnOffSensorSubtypeEnumeration 2. Changed SYNTAX of externalOnOffSensorSubtype to SensorTypeEnumeration 3. Added binary, contact, fanspeed, none to SensorTypeEnumeration 4. Changed outletPoleCapabilities to be the same as inletPoleCapabilities "
      },
      {
        "revision": "2011-02-03 00:00",
        "description": " 1. Added externalSensorSerialNumber,externalOnOffSensorSubtype, externalSensorChannelNumber to the externalSensorStateChange trap."
      },
      {
        "revision": "2011-01-31 00:00",
        "description": " 1. Modifed the DESCRIPTION of the powerControl trap "
      },
      {
        "revision": "2010-12-15 00:00",
        "description": " 1. Added dataLoggingEnableForAllSensors to logConfigurationTable "
      },
      {
        "revision": "2010-12-13 11:31",
        "description": " 1. Added inrushGuardDelay to unitConfigurationTable 2. Added outletSequenceDelay to outletConfigurationTable 3. Deprecated outletSequencingDelay "
      },
      {
        "revision": "2010-12-13 00:00",
        "description": "1. Added externalOnOffSensorSubtype to ExternalSensorConfigurationEntryStruct 2. Added OnOffSensorSubtypeEnumeration 3. Added alarmed to SensorStateEnumeration 4. Removed firmwareFileDiscarded trap 5. Removed securityViolation trap "
      },
      {
        "revision": "2010-12-07 00:00",
        "description": "1. changed DESCRIPTION of measurementPeriod to say that the value is fixed at 1 second. "
      },
      {
        "revision": "2010-10-07 00:00",
        "description": "1. added ocpFUSEPAIR(5) to OverCurrentProtectorTypeEnumeration 2. changed ocpFUSE1POLE(4) to ocpFUSE(4) in OverCurrentProtectorTypeEnumeration "
      },
      {
        "revision": "2010-10-04 00:00",
        "description": "1. added ocpFUSE2POLE(5) to OverCurrentProtectorTypeEnumeration 2. changed ocpFUSE(4) to ocpFUSE1POLE(4) in OverCurrentProtectorTypeEnumeration "
      },
      {
        "revision": "2010-09-01 00:00",
        "description": "1. Removed userName from serverNotReachable and serverReachable traps "
      },
      {
        "revision": "2010-08-05 00:00",
        "description": "1. Added reliabilityDataTableSequenceNumber 2. Changed SYNTAX of reliabilityErrorLogIndex to Integer32(1..2147483647)"
      },
      {
        "revision": "2010-07-23 00:00",
        "description": "1. Moved serverCount to unitConfigurationTable "
      },
      {
        "revision": "2010-07-22 00:00",
        "description": "1. Added support for the Reliability Tables 2. Added new group reliabilityGroup 3. Defined nodes reliability,reliabilityData,reliabilityErrorLog 4. Added reliabilityDataTable & reliabilityErrorLogTable"
      },
      {
        "revision": "2010-07-21 00:00",
        "description": "1. Added plug56PA320 to PlugTypeEnumeration 2. Added plug56P320F to PlugTypeEnumeration"
      },
      {
        "revision": "2010-07-14 00:00",
        "description": "1. Added the following traps: pingServerEnabled, pingServerDisabled, serverNotReachable, serverReachable 2. Added the serverReachabilityTable "
      },
      {
        "revision": "2010-07-06 00:00",
        "description": "1. Added externalSensorChannelNumber to externalSensorConfigurationTable "
      },
      {
        "revision": "2010-07-01 00:00",
        "description": "1. added outletSwitchingState to outletSwitchControlTable 2. added outletSwitchingTimeStamp to outletSwitchControlTable"
      },
      {
        "revision": "2010-06-30 00:00",
        "description": "1. added switchingOperation to the powerControl trap "
      },
      {
        "revision": "2010-06-21 00:00",
        "description": "1. added support for Load shedding 2. added loadShedding to the unitConfigurationTable. 3. added nonCritical to the outletConfigurationTable 4. added loadSheddingModeEntered & loadSheddingModeExited traps 5. modified description of inletPlug in inletConfigurationTable"
      },
      {
        "revision": "2010-06-03 00:00",
        "description": "1. added plugOTHER to PlugTypeEnumeration 2. added receptacleOTHER to ReceptacleTypeEnumeration 3. added inletPlugDescriptor to inletConfigurationTable 4. added outletReceptacleDescriptor to outletConfigurationTable "
      },
      {
        "revision": "2010-05-27 00:00",
        "description": "1. added INetAddressType and INetAddress to represent IP addresses 2. unitConfigurationTable: deprecated pxIpAddress 3. unitConfigurationTable: added pxInetAddressType,pxInetIPAddress,pxInetNetmask,pxInetGateway 2: added pxInetAddressType,pxInetIPAddress to all traps 3: defined new trap deviceUpdateFailed"
      },
      {
        "revision": "2010-05-24 00:00",
        "description": "Added typeOfSensor to externalSensorStateChange trap"
      },
      {
        "revision": "2010-04-19 00:00",
        "description": "modified the DESCRIPTION of the deviceUpdateCompleted trap"
      },
      {
        "revision": "2010-04-15 00:00",
        "description": "modified the DESCRIPTION of all SensorStateChangeDelay parameters"
      },
      {
        "revision": "2010-04-08 00:00",
        "description": "modified the DESCRIPTION of sensor parameters that do not apply to discrete sensors"
      },
      {
        "revision": "2010-03-29 00:00",
        "description": "added trap ldapError"
      },
      {
        "revision": "2010-03-25 00:00",
        "description": "changed the SYNTAX of the following objects from Integer32 to Unsigned32: logInletSensorMaxValue, logInletSensorMinValue, logInletSensorAvgValue, logInletPoleSensorMaxValue, logInletPoleSensorMinValue, logInletPoleSensorAvgValue, logOutletSensorMaxValue, logOutletSensorMinValue, logOutletSensorAvgValue, logOutletPoleSensorMaxValue, logOutlePoletSensorMinValue, logOutletPoleSensorAvgValue, logOverCurrentProtectorSensorMaxValue, logOverCurrentProtectorSensorMinValue, logOverCurrentProtectorSensorAvgValue, measurementsInletSensorValue, measurementsInletPoleSensorValue, measurementsOutletSensorValue, measurementsOutletPoleSensorValue, measurementsOverCurrentProtectorSensorValue"
      },
      {
        "revision": "2010-03-16 00:00",
        "description": "added trap smtpMessageTransmissionFailure"
      },
      {
        "revision": "2010-03-01 00:00",
        "description": "changed externalSensorsZCoordinateUnits to an Enumeration"
      },
      {
        "revision": "2010-01-29 00:00",
        "description": "The first version of the MIB."
      }
    ],
    "lastupdated": "201602090000Z",
    "organization": "Raritan",
    "contactinfo": " Author: Raritan Americas, Inc. postal: Raritan Americas, Inc. 400 Cottontail Lane Somerset, NJ 08873 email: tech@raritan.com phone: +1 732 764 8886 ",
    "description": "This MIB describes the SNMP functions of the Dominion PX G2 Power Distribution Unit by Raritan Computer."
  },
  "pdu2": {
    "name": "pdu2",
    "oid": "1.3.6.1.4.1.13742.6",
    "class": "objectidentity"
  },
  "traps": {
    "name": "traps",
    "oid": "1.3.6.1.4.1.13742.6.0",
    "class": "objectidentity"
  },
  "trapInformation": {
    "name": "trapInformation",
    "oid": "1.3.6.1.4.1.13742.6.0.0",
    "class": "objectidentity"
  },
  "board": {
    "name": "board",
    "oid": "1.3.6.1.4.1.13742.6.1",
    "class": "objectidentity"
  },
  "environmental": {
    "name": "environmental",
    "oid": "1.3.6.1.4.1.13742.6.2",
    "class": "objectidentity"
  },
  "configuration": {
    "name": "configuration",
    "oid": "1.3.6.1.4.1.13742.6.3",
    "class": "objectidentity"
  },
  "control": {
    "name": "control",
    "oid": "1.3.6.1.4.1.13742.6.4",
    "class": "objectidentity"
  },
  "measurements": {
    "name": "measurements",
    "oid": "1.3.6.1.4.1.13742.6.5",
    "class": "objectidentity"
  },
  "log": {
    "name": "log",
    "oid": "1.3.6.1.4.1.13742.6.6",
    "class": "objectidentity"
  },
  "conformance": {
    "name": "conformance",
    "oid": "1.3.6.1.4.1.13742.6.9",
    "class": "objectidentity"
  },
  "reliability": {
    "name": "reliability",
    "oid": "1.3.6.1.4.1.13742.6.10",
    "class": "objectidentity"
  },
  "unit": {
    "name": "unit",
    "oid": "1.3.6.1.4.1.13742.6.3.2",
    "class": "objectidentity"
  },
  "inlets": {
    "name": "inlets",
    "oid": "1.3.6.1.4.1.13742.6.3.3",
    "class": "objectidentity"
  },
  "overCurrentProtector": {
    "name": "overCurrentProtector",
    "oid": "1.3.6.1.4.1.13742.6.3.4",
    "class": "objectidentity"
  },
  "outlets": {
    "name": "outlets",
    "oid": "1.3.6.1.4.1.13742.6.3.5",
    "class": "objectidentity"
  },
  "externalSensors": {
    "name": "externalSensors",
    "oid": "1.3.6.1.4.1.13742.6.3.6",
    "class": "objectidentity"
  },
  "serverReachability": {
    "name": "serverReachability",
    "oid": "1.3.6.1.4.1.13742.6.3.7",
    "class": "objectidentity"
  },
  "wires": {
    "name": "wires",
    "oid": "1.3.6.1.4.1.13742.6.3.8",
    "class": "objectidentity"
  },
  "transferSwitch": {
    "name": "transferSwitch",
    "oid": "1.3.6.1.4.1.13742.6.3.9",
    "class": "objectidentity"
  },
  "powerMeter": {
    "name": "powerMeter",
    "oid": "1.3.6.1.4.1.13742.6.3.10",
    "class": "objectidentity"
  },
  "circuit": {
    "name": "circuit",
    "oid": "1.3.6.1.4.1.13742.6.3.11",
    "class": "objectidentity"
  },
  "outletControl": {
    "name": "outletControl",
    "oid": "1.3.6.1.4.1.13742.6.4.1",
    "class": "objectidentity"
  },
  "externalSensorControl": {
    "name": "externalSensorControl",
    "oid": "1.3.6.1.4.1.13742.6.4.2",
    "class": "objectidentity"
  },
  "transferSwitchControl": {
    "name": "transferSwitchControl",
    "oid": "1.3.6.1.4.1.13742.6.4.3",
    "class": "objectidentity"
  },
  "actuatorControl": {
    "name": "actuatorControl",
    "oid": "1.3.6.1.4.1.13742.6.4.4",
    "class": "objectidentity"
  },
  "rcmControl": {
    "name": "rcmControl",
    "oid": "1.3.6.1.4.1.13742.6.4.5",
    "class": "objectidentity"
  },
  "inletSensorControl": {
    "name": "inletSensorControl",
    "oid": "1.3.6.1.4.1.13742.6.4.6",
    "class": "objectidentity"
  },
  "outletSensorControl": {
    "name": "outletSensorControl",
    "oid": "1.3.6.1.4.1.13742.6.4.7",
    "class": "objectidentity"
  },
  "unitSensorControl": {
    "name": "unitSensorControl",
    "oid": "1.3.6.1.4.1.13742.6.4.8",
    "class": "objectidentity"
  },
  "circuitSensorControl": {
    "name": "circuitSensorControl",
    "oid": "1.3.6.1.4.1.13742.6.4.9",
    "class": "objectidentity"
  },
  "measurementsUnit": {
    "name": "measurementsUnit",
    "oid": "1.3.6.1.4.1.13742.6.5.1",
    "class": "objectidentity"
  },
  "measurementsInlet": {
    "name": "measurementsInlet",
    "oid": "1.3.6.1.4.1.13742.6.5.2",
    "class": "objectidentity"
  },
  "measurementsOverCurrentProtector": {
    "name": "measurementsOverCurrentProtector",
    "oid": "1.3.6.1.4.1.13742.6.5.3",
    "class": "objectidentity"
  },
  "measurementsOutlet": {
    "name": "measurementsOutlet",
    "oid": "1.3.6.1.4.1.13742.6.5.4",
    "class": "objectidentity"
  },
  "measurementsExternalSensor": {
    "name": "measurementsExternalSensor",
    "oid": "1.3.6.1.4.1.13742.6.5.5",
    "class": "objectidentity"
  },
  "measurementsWire": {
    "name": "measurementsWire",
    "oid": "1.3.6.1.4.1.13742.6.5.6",
    "class": "objectidentity"
  },
  "measurementsTransferSwitch": {
    "name": "measurementsTransferSwitch",
    "oid": "1.3.6.1.4.1.13742.6.5.7",
    "class": "objectidentity"
  },
  "measurementsCircuit": {
    "name": "measurementsCircuit",
    "oid": "1.3.6.1.4.1.13742.6.5.8",
    "class": "objectidentity"
  },
  "logUnit": {
    "name": "logUnit",
    "oid": "1.3.6.1.4.1.13742.6.6.1",
    "class": "objectidentity"
  },
  "logInlet": {
    "name": "logInlet",
    "oid": "1.3.6.1.4.1.13742.6.6.2",
    "class": "objectidentity"
  },
  "logOverCurrentProtector": {
    "name": "logOverCurrentProtector",
    "oid": "1.3.6.1.4.1.13742.6.6.3",
    "class": "objectidentity"
  },
  "logOutlet": {
    "name": "logOutlet",
    "oid": "1.3.6.1.4.1.13742.6.6.4",
    "class": "objectidentity"
  },
  "logExternalSensor": {
    "name": "logExternalSensor",
    "oid": "1.3.6.1.4.1.13742.6.6.5",
    "class": "objectidentity"
  },
  "logWire": {
    "name": "logWire",
    "oid": "1.3.6.1.4.1.13742.6.6.6",
    "class": "objectidentity"
  },
  "logTransferSwitch": {
    "name": "logTransferSwitch",
    "oid": "1.3.6.1.4.1.13742.6.6.7",
    "class": "objectidentity"
  },
  "logCircuit": {
    "name": "logCircuit",
    "oid": "1.3.6.1.4.1.13742.6.6.8",
    "class": "objectidentity"
  },
  "reliabilityData": {
    "name": "reliabilityData",
    "oid": "1.3.6.1.4.1.13742.6.10.1",
    "class": "objectidentity"
  },
  "reliabilityErrorLog": {
    "name": "reliabilityErrorLog",
    "oid": "1.3.6.1.4.1.13742.6.10.2",
    "class": "objectidentity"
  },
  "compliances": {
    "name": "compliances",
    "oid": "1.3.6.1.4.1.13742.6.9.1",
    "class": "objectidentity"
  },
  "groups": {
    "name": "groups",
    "oid": "1.3.6.1.4.1.13742.6.9.2",
    "class": "objectidentity"
  },
  "complianceRev2": {
    "name": "complianceRev2",
    "oid": "1.3.6.1.4.1.13742.6.9.1.2",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "configGroup",
        "module": "PDU2-MIB"
      },
      {
        "object": "logGroup",
        "module": "PDU2-MIB"
      },
      {
        "object": "measurementsGroup",
        "module": "PDU2-MIB"
      },
      {
        "object": "controlGroup",
        "module": "PDU2-MIB"
      },
      {
        "object": "trapInformationGroup",
        "module": "PDU2-MIB"
      },
      {
        "object": "trapsGroup",
        "module": "PDU2-MIB"
      },
      {
        "object": "reliabilityGroup",
        "module": "PDU2-MIB"
      }
    ],
    "status": "current",
    "description": "The requirements for conformance to the PDU2-MIB."
  },
  "complianceRev1": {
    "name": "complianceRev1",
    "oid": "1.3.6.1.4.1.13742.6.9.1.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ipAddressGroup",
        "module": "PDU2-MIB"
      },
      {
        "object": "oldConfigGroup",
        "module": "PDU2-MIB"
      },
      {
        "object": "oldLogGroup",
        "module": "PDU2-MIB"
      },
      {
        "object": "oldMeasurementsGroup",
        "module": "PDU2-MIB"
      },
      {
        "object": "oldTrapsGroup",
        "module": "PDU2-MIB"
      }
    ],
    "status": "deprecated",
    "description": "The requirements for conformance to the PDU2-MIB."
  },
  "configGroup": {
    "name": "configGroup",
    "oid": "1.3.6.1.4.1.13742.6.9.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduManufacturer"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduModel"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduSerialNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduRatedVoltage"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduRatedCurrent"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduRatedFrequency"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduRatedVA"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduImage"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "productType"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletControllerCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletControllerCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "meteringControllerCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxMACAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "utcOffset"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "boardVersion"
      },
      {
        "module": "PDU2-MIB",
        "object": "boardFirmwareVersion"
      },
      {
        "module": "PDU2-MIB",
        "object": "boardFirmwareTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorLogAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorUnits"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorDecimalDigits"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorResolution"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorHysteresis"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorStateChangeDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorEnabledThresholds"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorSignedMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorSignedMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorSignedLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorSignedLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorSignedUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorSignedUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletName"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPlug"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletRatedVoltage"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletRatedCurrent"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletDeviceCapabilities"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleCapabilities"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPlugDescriptor"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletEnableState"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleLine"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleNode"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorLogAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorUnits"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorDecimalDigits"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorResolution"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorHysteresis"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorStateChangeDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorEnabledThresholds"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorSignedMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorSignedMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorSignedLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorSignedLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorSignedUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorSignedUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorLogAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorUnits"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorDecimalDigits"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorResolution"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorHysteresis"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorStateChangeDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorEnabledThresholds"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorSignedMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorSignedMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorSignedLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorSignedLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorSignedUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorSignedUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletRCMResidualOperatingCurrent"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorName"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorType"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorRatedCurrent"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorCapabilities"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorPoleCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorPoleLine"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorPoleInNode"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorPoleOutNode"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorLogAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorUnits"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorDecimalDigits"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorResolution"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorHysteresis"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorStateChangeDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorEnabledThresholds"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorSignedMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorSignedMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorSignedLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorSignedLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorSignedUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorSignedUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorPowerSource"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletName"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletReceptacle"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletRatedVoltage"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletRatedCurrent"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletRatedVA"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletDeviceCapabilities"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleCapabilities"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPowerCyclingPowerOffPeriod"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletStateOnStartup"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletUseGlobalPowerCyclingPowerOffPeriod"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSwitchable"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletReceptacleDescriptor"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletNonCritical"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSequenceDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleLine"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleNode"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorLogAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorUnits"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorDecimalDigits"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorResolution"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorHysteresis"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorStateChangeDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorEnabledThresholds"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorSignedMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorSignedMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorSignedLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorSignedLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorSignedUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorSignedUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorLogAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorUnits"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorDecimalDigits"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorResolution"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorHysteresis"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorStateChangeDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorEnabledThresholds"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorSignedMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorSignedMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorSignedLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorSignedLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorSignedUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorSignedUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPowerSource"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorType"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorSerialNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorName"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorDescription"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorXCoordinate"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorYCoordinate"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorZCoordinate"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorChannelNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalOnOffSensorSubtype"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorLogAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorUnits"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorDecimalDigits"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorResolution"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorHysteresis"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorStateChangeDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorEnabledThresholds"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorsZCoordinateUnits"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorIsActuator"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorPosition"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorUseDefaultThresholds"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorTypeDefaultHysteresis"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorTypeDefaultStateChangeDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorTypeDefaultLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorTypeDefaultLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorTypeDefaultUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorTypeDefaultUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorTypeDefaultEnabledThresholds"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementPeriod"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsPerLogEntry"
      },
      {
        "module": "PDU2-MIB",
        "object": "logSize"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitDeviceCapabilities"
      },
      {
        "module": "PDU2-MIB",
        "object": "globalOutletPowerCyclingPowerOffPeriod"
      },
      {
        "module": "PDU2-MIB",
        "object": "globalOutletStateOnStartup"
      },
      {
        "module": "PDU2-MIB",
        "object": "relayBehaviorOnPowerLoss"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduPowerCyclingPowerOffPeriod"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduDaisychainMemberType"
      },
      {
        "module": "PDU2-MIB",
        "object": "managedExternalSensorCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPowerupSequence"
      },
      {
        "module": "PDU2-MIB",
        "object": "loadShedding"
      },
      {
        "module": "PDU2-MIB",
        "object": "serverCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "serverIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "serverPingEnabled"
      },
      {
        "module": "PDU2-MIB",
        "object": "inrushGuardDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "cascadedDeviceConnected"
      },
      {
        "module": "PDU2-MIB",
        "object": "synchronizeWithNTPServer"
      },
      {
        "module": "PDU2-MIB",
        "object": "useDHCPProvidedNTPServer"
      },
      {
        "module": "PDU2-MIB",
        "object": "firstNTPServerAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "firstNTPServerAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "secondNTPServerAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "secondNTPServerAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchName"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchPreferredInlet"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchPoleCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchAutoReTransferEnabled"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchAutoReTransferWaitTime"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchAutoReTransferRequiresPhaseSync"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchFrontPanelManualTransferButtonEnabled"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchCapabilities"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchPoleLine"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchPoleIn1Node"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchPoleIn2Node"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchPoleOutNode"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorLogAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorUnits"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorDecimalDigits"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorResolution"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorHysteresis"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorStateChangeDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorEnabledThresholds"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorSignedMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorSignedMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorSignedLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorSignedLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorSignedUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorSignedUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchPowerSource1"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchPowerSource2"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDevicePackageSerialNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDevicePackageModel"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDevicePackageFirmwareVersion"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDevicePackageMinFirmwareVersion"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDevicePackageFirmwareTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDevicePackagePosition"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDevicePackageState"
      },
      {
        "module": "PDU2-MIB",
        "object": "deviceCascadeType"
      },
      {
        "module": "PDU2-MIB",
        "object": "deviceCascadePosition"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDevicesAutoManagement"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorAlarmedToNormalDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "frontPanelOutletSwitching"
      },
      {
        "module": "PDU2-MIB",
        "object": "frontPanelRCMSelfTest"
      },
      {
        "module": "PDU2-MIB",
        "object": "frontPanelActuatorControl"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterPanelPositions"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterPanelLayout"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterPanelNumbering"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterPhaseCTRating"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterNeutralCTRating"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterEarthCTRating"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterBranchCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterType"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitName"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitType"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitRatedCurrent"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitCTRating"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitCapabilities"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleCapabilities"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPowerSource"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPolePanelPosition"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleCTNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPolePhase"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorLogAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorUnits"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorDecimalDigits"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorResolution"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorHysteresis"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorStateChangeDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorEnabledThresholds"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorSignedMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorSignedMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorSignedLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorSignedLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorSignedUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorSignedUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorLogAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorUnits"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorDecimalDigits"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorResolution"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorHysteresis"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorStateChangeDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorEnabledThresholds"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorSignedMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorSignedMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorSignedLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorSignedLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorSignedUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorSignedUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "networkInterfaceType"
      },
      {
        "module": "PDU2-MIB",
        "object": "activeDNSServerAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "activeDNSServerAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "activeDNSServerAddressSource"
      },
      {
        "module": "PDU2-MIB",
        "object": "activeDNSServerCount"
      }
    ],
    "status": "current",
    "description": "A collection of objects representing configuration data."
  },
  "ipAddressGroup": {
    "name": "ipAddressGroup",
    "oid": "1.3.6.1.4.1.13742.6.9.2.12",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "netmask"
      },
      {
        "module": "PDU2-MIB",
        "object": "gateway"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetNetmask"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetGateway"
      }
    ],
    "status": "deprecated",
    "description": "A collection of objects representing configuration data."
  },
  "oldConfigGroup": {
    "name": "oldConfigGroup",
    "oid": "1.3.6.1.4.1.13742.6.9.2.13",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "outletSequencingDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorAccuracy"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorTolerance"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorAccuracy"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorTolerance"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorAccuracy"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorTolerance"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorAccuracy"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorTolerance"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorAccuracy"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorTolerance"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorAccuracy"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorTolerance"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorAccuracy"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorTolerance"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorAccuracy"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorTolerance"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorAccuracy"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorTolerance"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireCount"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireCapabilities"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorLogAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorUnits"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorDecimalDigits"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorResolution"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorMaximum"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorMinimum"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorHysteresis"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorStateChangeDelay"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorLowerCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorLowerWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorUpperCriticalThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorUpperWarningThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireSensorEnabledThresholds"
      },
      {
        "module": "PDU2-MIB",
        "object": "wirePowerSource"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletRatedFrequency"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletRatedVA"
      }
    ],
    "status": "deprecated",
    "description": "A collection of objects representing old (deprecated) configuration data."
  },
  "logGroup": {
    "name": "logGroup",
    "oid": "1.3.6.1.4.1.13742.6.9.2.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "dataLogging"
      },
      {
        "module": "PDU2-MIB",
        "object": "oldestLogID"
      },
      {
        "module": "PDU2-MIB",
        "object": "newestLogID"
      },
      {
        "module": "PDU2-MIB",
        "object": "logTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "dataLoggingEnableForAllSensors"
      },
      {
        "module": "PDU2-MIB",
        "object": "logUnitSensorDataAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "logUnitSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "logUnitSensorAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logUnitSensorMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logUnitSensorMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logUnitSensorSignedAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logUnitSensorSignedMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logUnitSensorSignedMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletSensorDataAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletSensorAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletSensorMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletSensorMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletSensorSignedAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletSensorSignedMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletSensorSignedMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletPoleSensorDataAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletPoleSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletPoleSensorAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletPoleSensorMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletPoleSensorMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletPoleSensorSignedAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletPoleSensorSignedMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logInletPoleSensorSignedMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletSensorDataAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletSensorAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletSensorMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletSensorMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletSensorSignedAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletSensorSignedMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletSensorSignedMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletPoleSensorDataAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletPoleSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletPoleSensorAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletPoleSensorMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletPoleSensorMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletPoleSensorSignedAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletPoleSensorSignedMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOutletPoleSensorSignedMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOverCurrentProtectorSensorDataAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOverCurrentProtectorSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOverCurrentProtectorSensorAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOverCurrentProtectorSensorMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOverCurrentProtectorSensorMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOverCurrentProtectorSensorSignedAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOverCurrentProtectorSensorSignedMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logOverCurrentProtectorSensorSignedMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logExternalSensorDataAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "logExternalSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "logExternalSensorAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logExternalSensorMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logExternalSensorMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logTransferSwitchSensorDataAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "logTransferSwitchSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "logTransferSwitchSensorAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logTransferSwitchSensorMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logTransferSwitchSensorMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logTransferSwitchSensorSignedAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logTransferSwitchSensorSignedMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logTransferSwitchSensorSignedMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitSensorDataAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitSensorAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitSensorMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitSensorMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitSensorSignedAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitSensorSignedMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitSensorSignedMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitPoleSensorDataAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitPoleSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitPoleSensorAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitPoleSensorMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitPoleSensorMinValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitPoleSensorSignedAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitPoleSensorSignedMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logCircuitPoleSensorSignedMinValue"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing logging (history of readings) capabilities about the PDU."
  },
  "oldLogGroup": {
    "name": "oldLogGroup",
    "oid": "1.3.6.1.4.1.13742.6.9.2.14",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "logWireSensorDataAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "logWireSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "logWireSensorAvgValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logWireSensorMaxValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "logWireSensorMinValue"
      }
    ],
    "status": "deprecated",
    "description": "A collection of objects representing old (deprecated) logging data."
  },
  "measurementsGroup": {
    "name": "measurementsGroup",
    "oid": "1.3.6.1.4.1.13742.6.9.2.3",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "measurementsUnitSensorIsAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsUnitSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsUnitSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsUnitSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsUnitSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletSensorIsAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletPoleSensorIsAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletPoleSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletPoleSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletPoleSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletPoleSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletSensorIsAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletPoleSensorIsAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletPoleSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletPoleSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletPoleSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletPoleSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOverCurrentProtectorSensorIsAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOverCurrentProtectorSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOverCurrentProtectorSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOverCurrentProtectorSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOverCurrentProtectorSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsExternalSensorIsAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsExternalSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsExternalSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsExternalSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsTransferSwitchSensorIsAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsTransferSwitchSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsTransferSwitchSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsTransferSwitchSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsTransferSwitchSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitSensorIsAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitPoleSensorIsAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitPoleSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitPoleSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitPoleSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitPoleSensorSignedValue"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing measurements (most recent data) capabilities. about the PDU."
  },
  "oldMeasurementsGroup": {
    "name": "oldMeasurementsGroup",
    "oid": "1.3.6.1.4.1.13742.6.9.2.15",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "measurementsWireSensorIsAvailable"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsWireSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsWireSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsWireSensorTimeStamp"
      }
    ],
    "status": "deprecated",
    "description": "A collection of objects representing old (deprecated) measurement data."
  },
  "controlGroup": {
    "name": "controlGroup",
    "oid": "1.3.6.1.4.1.13742.6.9.2.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "switchingOperation"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSwitchingState"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSwitchingTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchActiveInlet"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchTransferToInlet"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchAlarmOverride"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchLastTransferReason"
      },
      {
        "module": "PDU2-MIB",
        "object": "actuatorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "rcmState"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorResetValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorResetValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorResetValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorResetValue"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing the ability to control various components of a PDU."
  },
  "trapInformationGroup": {
    "name": "trapInformationGroup",
    "oid": "1.3.6.1.4.1.13742.6.9.2.5",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "targetUser"
      },
      {
        "module": "PDU2-MIB",
        "object": "imageVersion"
      },
      {
        "module": "PDU2-MIB",
        "object": "roleName"
      },
      {
        "module": "PDU2-MIB",
        "object": "oldSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "PDU2-MIB",
        "object": "smtpMessageRecipients"
      },
      {
        "module": "PDU2-MIB",
        "object": "smtpServer"
      },
      {
        "module": "PDU2-MIB",
        "object": "errorDescription"
      },
      {
        "module": "PDU2-MIB",
        "object": "deviceChangedParameter"
      },
      {
        "module": "PDU2-MIB",
        "object": "changedParameterNewValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "lhxSupportEnabled"
      },
      {
        "module": "PDU2-MIB",
        "object": "webcamModel"
      },
      {
        "module": "PDU2-MIB",
        "object": "webcamConnectionPort"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDeviceRomcode"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDeviceFirmwareUpdateState"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "phoneNumber"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing information in the traps."
  },
  "trapsGroup": {
    "name": "trapsGroup",
    "oid": "1.3.6.1.4.1.13742.6.9.2.9",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "systemStarted"
      },
      {
        "module": "PDU2-MIB",
        "object": "systemReset"
      },
      {
        "module": "PDU2-MIB",
        "object": "userLogin"
      },
      {
        "module": "PDU2-MIB",
        "object": "userLogout"
      },
      {
        "module": "PDU2-MIB",
        "object": "userAuthenticationFailure"
      },
      {
        "module": "PDU2-MIB",
        "object": "userSessionTimeout"
      },
      {
        "module": "PDU2-MIB",
        "object": "userAdded"
      },
      {
        "module": "PDU2-MIB",
        "object": "userModified"
      },
      {
        "module": "PDU2-MIB",
        "object": "userDeleted"
      },
      {
        "module": "PDU2-MIB",
        "object": "roleAdded"
      },
      {
        "module": "PDU2-MIB",
        "object": "roleModified"
      },
      {
        "module": "PDU2-MIB",
        "object": "roleDeleted"
      },
      {
        "module": "PDU2-MIB",
        "object": "deviceUpdateStarted"
      },
      {
        "module": "PDU2-MIB",
        "object": "deviceUpdateCompleted"
      },
      {
        "module": "PDU2-MIB",
        "object": "userBlocked"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerControl"
      },
      {
        "module": "PDU2-MIB",
        "object": "userPasswordChanged"
      },
      {
        "module": "PDU2-MIB",
        "object": "passwordSettingsChanged"
      },
      {
        "module": "PDU2-MIB",
        "object": "firmwareValidationFailed"
      },
      {
        "module": "PDU2-MIB",
        "object": "logFileCleared"
      },
      {
        "module": "PDU2-MIB",
        "object": "bulkConfigurationSaved"
      },
      {
        "module": "PDU2-MIB",
        "object": "bulkConfigurationCopied"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorStateChange"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleSensorStateChange"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorStateChange"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleSensorStateChange"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorSensorStateChange"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorStateChange"
      },
      {
        "module": "PDU2-MIB",
        "object": "smtpMessageTransmissionFailure"
      },
      {
        "module": "PDU2-MIB",
        "object": "ldapError"
      },
      {
        "module": "PDU2-MIB",
        "object": "deviceUpdateFailed"
      },
      {
        "module": "PDU2-MIB",
        "object": "loadSheddingModeEntered"
      },
      {
        "module": "PDU2-MIB",
        "object": "loadSheddingModeExited"
      },
      {
        "module": "PDU2-MIB",
        "object": "pingServerEnabled"
      },
      {
        "module": "PDU2-MIB",
        "object": "pingServerDisabled"
      },
      {
        "module": "PDU2-MIB",
        "object": "serverNotReachable"
      },
      {
        "module": "PDU2-MIB",
        "object": "serverReachable"
      },
      {
        "module": "PDU2-MIB",
        "object": "rfCodeTagConnected"
      },
      {
        "module": "PDU2-MIB",
        "object": "rfCodeTagDisconnected"
      },
      {
        "module": "PDU2-MIB",
        "object": "deviceIdentificationChanged"
      },
      {
        "module": "PDU2-MIB",
        "object": "usbSlaveConnected"
      },
      {
        "module": "PDU2-MIB",
        "object": "usbSlaveDisconnected"
      },
      {
        "module": "PDU2-MIB",
        "object": "lhxSupportChanged"
      },
      {
        "module": "PDU2-MIB",
        "object": "userAcceptedRestrictedServiceAgreement"
      },
      {
        "module": "PDU2-MIB",
        "object": "userDeclinedRestrictedServiceAgreement"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchSensorStateChange"
      },
      {
        "module": "PDU2-MIB",
        "object": "deviceSettingsSaved"
      },
      {
        "module": "PDU2-MIB",
        "object": "deviceSettingsRestored"
      },
      {
        "module": "PDU2-MIB",
        "object": "webcamInserted"
      },
      {
        "module": "PDU2-MIB",
        "object": "webcamRemoved"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletEnabled"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletDisabled"
      },
      {
        "module": "PDU2-MIB",
        "object": "serverConnectivityUnrecoverable"
      },
      {
        "module": "PDU2-MIB",
        "object": "radiusError"
      },
      {
        "module": "PDU2-MIB",
        "object": "serverReachabilityError"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletSensorReset"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletSensorReset"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorReset"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorReset"
      },
      {
        "module": "PDU2-MIB",
        "object": "unknownPeripheralDeviceAttached"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDeviceFirmwareUpdate"
      },
      {
        "module": "PDU2-MIB",
        "object": "unitSensorStateChange"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitSensorStateChange"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleSensorStateChange"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitAdded"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitDeleted"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitModified"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterAdded"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterDeleted"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterModified"
      },
      {
        "module": "PDU2-MIB",
        "object": "smsMessageTransmissionFailure"
      }
    ],
    "status": "current",
    "description": "A collection of traps."
  },
  "oldTrapsGroup": {
    "name": "oldTrapsGroup",
    "oid": "1.3.6.1.4.1.13742.6.9.2.16",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "wireSensorStateChange"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduSensorStateChange"
      }
    ],
    "status": "deprecated",
    "description": "A collection of objects representing old (deprecated) traps."
  },
  "reliabilityGroup": {
    "name": "reliabilityGroup",
    "oid": "1.3.6.1.4.1.13742.6.9.2.10",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "reliabilityId"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityDataValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityDataMaxPossible"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityDataWorstValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityDataThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityDataRawUpperBytes"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityDataRawLowerBytes"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityDataFlags"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityErrorLogId"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityErrorLogValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityErrorLogThreshold"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityErrorLogRawUpperBytes"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityErrorLogRawLowerBytes"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityErrorLogPOH"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityErrorLogTime"
      },
      {
        "module": "PDU2-MIB",
        "object": "reliabilityDataTableSequenceNumber"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing reliability data."
  },
  "SensorTypeEnumeration": {
    "name": "SensorTypeEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "rmsCurrent": 1,
          "peakCurrent": 2,
          "unbalancedCurrent": 3,
          "rmsVoltage": 4,
          "activePower": 5,
          "apparentPower": 6,
          "powerFactor": 7,
          "activeEnergy": 8,
          "apparentEnergy": 9,
          "temperature": 10,
          "humidity": 11,
          "airFlow": 12,
          "airPressure": 13,
          "onOff": 14,
          "trip": 15,
          "vibration": 16,
          "waterDetection": 17,
          "smokeDetection": 18,
          "binary": 19,
          "contact": 20,
          "fanSpeed": 21,
          "surgeProtectorStatus": 22,
          "frequency": 23,
          "phaseAngle": 24,
          "rmsVoltageLN": 25,
          "residualCurrent": 26,
          "rcmState": 27,
          "absoluteHumidity": 28,
          "reactivePower": 29,
          "other": 30,
          "none": 31,
          "powerQuality": 32,
          "overloadStatus": 33,
          "overheatStatus": 34,
          "displacementPowerFactor": 35,
          "fanStatus": 37,
          "inletPhaseSyncAngle": 38,
          "inletPhaseSync": 39,
          "operatingState": 40,
          "activeInlet": 41,
          "illuminance": 42,
          "doorContact": 43,
          "tamperDetection": 44,
          "motionDetection": 45,
          "i1smpsStatus": 46,
          "i2smpsStatus": 47,
          "switchStatus": 48
        }
      }
    },
    "status": "current",
    "description": "The types a sensor can be."
  },
  "SensorStateEnumeration": {
    "name": "SensorStateEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unavailable": -1,
          "open": 0,
          "closed": 1,
          "belowLowerCritical": 2,
          "belowLowerWarning": 3,
          "normal": 4,
          "aboveUpperWarning": 5,
          "aboveUpperCritical": 6,
          "on": 7,
          "off": 8,
          "detected": 9,
          "notDetected": 10,
          "alarmed": 11,
          "ok": 12,
          "fail": 14,
          "yes": 15,
          "no": 16,
          "standby": 17,
          "one": 18,
          "two": 19,
          "inSync": 20,
          "outOfSync": 21,
          "i1OpenFault": 22,
          "i1ShortFault": 23,
          "i2OpenFault": 24,
          "i2ShortFault": 25,
          "fault": 26,
          "warning": 27,
          "critical": 28,
          "selfTest": 29,
          "nonRedundant": 30
        }
      }
    },
    "status": "current",
    "description": "The states a sensor can be in."
  },
  "PlugTypeEnumeration": {
    "name": "PlugTypeEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "plugOTHER": -1,
          "plugNONE": 0,
          "plug56P320": 1,
          "plug56P520": 2,
          "plug56P532": 3,
          "plugCS8365C": 4,
          "plugIEC320C14": 5,
          "plugIEC320C20": 6,
          "plugIEC603093WIRE250V16A": 7,
          "plugIEC603093WIRE250V20A": 8,
          "plugIEC603093WIRE250V30A": 9,
          "plugIEC603093WIRE250V32A": 10,
          "plugIEC603093WIRE250V60A": 11,
          "plugIEC603093WIRE250V63A": 12,
          "plugIEC603093WIRE250V100A": 13,
          "plugIEC603093WIRE250V125A": 14,
          "plugIEC603094WIRE250V20A": 15,
          "plugIEC603094WIRE250V30A": 16,
          "plugIEC603094WIRE250V60A": 17,
          "plugIEC603094WIRE250V100A": 18,
          "plugIEC603095WIRE208V20A": 23,
          "plugIEC603095WIRE208V30A": 24,
          "plugIEC603095WIRE208V60A": 25,
          "plugIEC603095WIRE208V100A": 26,
          "plugIEC603095WIRE415V16A": 27,
          "plugIEC603095WIRE415V32A": 28,
          "plugIEC603095WIRE415V63A": 29,
          "plugIEC603095WIRE415V125A": 30,
          "plugIEC603095WIRE480V20A": 31,
          "plugIEC603095WIRE480V30A": 32,
          "plugIEC603095WIRE480V60A": 33,
          "plugIEC603095WIRE480V100A": 34,
          "plugNEMA515P": 35,
          "plugNEMAL515P": 36,
          "plugNEMA520P": 37,
          "plugNEMAL520P": 38,
          "plugNEMAL530P": 39,
          "plugNEMAL615P": 40,
          "plugNEMAL620P": 41,
          "plugNEMAL630P": 42,
          "plugNEMAL1520P": 43,
          "plugNEMAL1530P": 44,
          "plugNEMAL2120P": 45,
          "plugNEMAL2130P": 46,
          "plugNEMAL2230P": 47,
          "plug56P320F": 48,
          "plug56PA320": 49
        }
      }
    },
    "status": "current",
    "description": "The types of inlet plug."
  },
  "ReceptacleTypeEnumeration": {
    "name": "ReceptacleTypeEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "receptacleOTHER": -1,
          "receptacleNONE": 0,
          "receptacleBS1363": 1,
          "receptacle56P532": 3,
          "receptacleCS8364C": 4,
          "receptacleIEC320C13": 5,
          "receptacleIEC320C19": 6,
          "receptacleIEC603093WIRE250V16A": 7,
          "receptacleIEC603093WIRE250V20A": 8,
          "receptacleIEC603093WIRE250V30A": 9,
          "receptacleIEC603093WIRE250V32A": 10,
          "receptacleIEC603093WIRE250V60A": 11,
          "receptacleIEC603093WIRE250V63A": 12,
          "receptacleIEC603093WIRE250V100A": 13,
          "receptacleIEC603093WIRE250V125A": 14,
          "receptacleIEC603094WIRE250V20A": 15,
          "receptacleIEC603094WIRE250V30A": 16,
          "receptacleIEC603094WIRE250V60A": 17,
          "receptacleIEC603094WIRE250V100A": 18,
          "receptacleIEC603095WIRE208V20A": 23,
          "receptacleIEC603095WIRE208V30A": 24,
          "receptacleIEC603095WIRE208V60A": 25,
          "receptacleIEC603095WIRE208V100A": 26,
          "receptacleIEC603095WIRE415V16A": 27,
          "receptacleIEC603095WIRE415V32A": 28,
          "receptacleIEC603095WIRE415V63A": 29,
          "receptacleIEC603095WIRE415V125A": 30,
          "receptacleIEC603095WIRE480V20A": 31,
          "receptacleIEC603095WIRE480V30A": 32,
          "receptacleIEC603095WIRE480V60A": 33,
          "receptacleIEC603095WIRE480V100A": 34,
          "receptacleNEMA515R": 35,
          "receptacleNEMAL515R": 36,
          "receptacleNEMA520R": 37,
          "receptacleNEMAL520R": 38,
          "receptacleNEMAL530R": 39,
          "receptacleNEMAL615R": 40,
          "receptacleNEMAL620R": 41,
          "receptacleNEMAL630R": 42,
          "receptacleNEMAL1520R": 43,
          "receptacleNEMAL1530R": 44,
          "receptacleNEMAL2120RP": 45,
          "receptacleNEMAL2130R": 46,
          "receptacleSCHUKOTYPEE": 47,
          "receptacleSCHUKOTYPEF": 48
        }
      }
    },
    "status": "current",
    "description": "The types of outlet receptacle."
  },
  "OverCurrentProtectorTypeEnumeration": {
    "name": "OverCurrentProtectorTypeEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ocpBREAKER1POLE": 1,
          "ocpBREAKER2POLE": 2,
          "ocpBREAKER3POLE": 3,
          "ocpFUSE": 4,
          "ocpFUSEPAIR": 5,
          "ocpRCBO2POLE": 6,
          "ocpRCBO3POLE": 7,
          "ocpRCBO4POLE": 8
        }
      }
    },
    "status": "current",
    "description": "The types of overcurrent protectors."
  },
  "BoardTypeEnumeration": {
    "name": "BoardTypeEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mainController": 1,
          "inletController": 2,
          "outletController": 3,
          "meteringController": 4
        }
      }
    },
    "status": "current",
    "description": "The types of boards."
  },
  "OutletSwitchingOperationsEnumeration": {
    "name": "OutletSwitchingOperationsEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 0,
          "on": 1,
          "cycle": 2
        }
      }
    },
    "status": "current",
    "description": "The switching operations on an outlet."
  },
  "SensorUnitsEnumeration": {
    "name": "SensorUnitsEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": -1,
          "other": 0,
          "volt": 1,
          "amp": 2,
          "watt": 3,
          "voltamp": 4,
          "wattHour": 5,
          "voltampHour": 6,
          "degreeC": 7,
          "hertz": 8,
          "percent": 9,
          "meterpersec": 10,
          "pascal": 11,
          "psi": 12,
          "g": 13,
          "degreeF": 14,
          "feet": 15,
          "inches": 16,
          "cm": 17,
          "meters": 18,
          "rpm": 19,
          "degrees": 20,
          "lux": 21,
          "grampercubicmeter": 22,
          "var": 23
        }
      }
    },
    "status": "current",
    "description": "The sensor units."
  },
  "DaisychainMemberTypeEnumeration": {
    "name": "DaisychainMemberTypeEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "standalone": 0,
          "master": 1,
          "slave": 2
        }
      }
    },
    "status": "current",
    "description": "The daisy chain member type."
  },
  "URL": {
    "name": "URL",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "displayhint": "255a",
    "status": "current",
    "description": "A Uniform Resource Locator (URL), as defined in RFC1738."
  },
  "GlobalOutletStateOnStartupEnumeration": {
    "name": "GlobalOutletStateOnStartupEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 0,
          "on": 1,
          "lastKnownState": 2
        }
      }
    },
    "status": "current",
    "description": "The global outlet state on device start up; can be overridden per outlet."
  },
  "OutletStateOnStartupEnumeration": {
    "name": "OutletStateOnStartupEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 0,
          "on": 1,
          "lastKnownState": 2,
          "globalOutletStateOnStartup": 3
        }
      }
    },
    "status": "current",
    "description": "The outlet state on device start up; this overrides the global value."
  },
  "ExternalSensorsZCoordinateUnitsEnumeration": {
    "name": "ExternalSensorsZCoordinateUnitsEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "rackUnits": 0,
          "text": 1
        }
      }
    },
    "status": "current",
    "description": "The units of the external Sensor Z Coordinate. rackUnits implies that the Z Coordinate for all external sensors is in rack Units (U) text implies that the Z Coordinate for all external sensors is a text string (label) "
  },
  "HundredthsOfAPercentage": {
    "name": "HundredthsOfAPercentage",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "Data type for reporting values in hundredths of percentage, i.e. 0.01 %."
  },
  "DeviceIdentificationParameterEnumeration": {
    "name": "DeviceIdentificationParameterEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "pduName": 0,
          "sysContact": 1,
          "sysName": 2,
          "sysLocation": 3
        }
      }
    },
    "status": "current",
    "description": "The configurable parameters."
  },
  "TransferSwitchTransferReasonEnumeration": {
    "name": "TransferSwitchTransferReasonEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 0,
          "startup": 1,
          "manualTransfer": 2,
          "automaticReTransfer": 3,
          "powerFailure": 4,
          "powerQuality": 5,
          "overloadAlarm": 6,
          "overheatAlarm": 7,
          "internalFailure": 8
        }
      }
    },
    "status": "current",
    "description": "Transfer Switch Transfer Reason"
  },
  "ProductTypeEnumeration": {
    "name": "ProductTypeEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "rackPdu": 0,
          "bcm": 1,
          "transferSwitch": 2,
          "powerMeter": 3
        }
      }
    },
    "status": "current",
    "description": "The product types."
  },
  "RelayPowerLossBehaviorEnumeration": {
    "name": "RelayPowerLossBehaviorEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "nonLatching": 0,
          "latching": 1
        }
      }
    },
    "status": "current",
    "description": "The type of relay behavior on power loss."
  },
  "DeviceCascadeTypeEnumeration": {
    "name": "DeviceCascadeTypeEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "bridging": 0,
          "portForwarding": 1
        }
      }
    },
    "status": "current",
    "description": "The type of configured cascading on this device."
  },
  "PeripheralDeviceFirmwareUpdateStateEnumeration": {
    "name": "PeripheralDeviceFirmwareUpdateStateEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "started": 1,
          "successful": 2,
          "failed": 3
        }
      }
    },
    "status": "current",
    "description": "The state of an peripheral device firmware update."
  },
  "PanelLayoutEnumeration": {
    "name": "PanelLayoutEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "invalid": -1,
          "oneColumn": 1,
          "twoColumns": 2
        }
      }
    },
    "status": "current",
    "description": "The panel circuit position layout."
  },
  "PanelNumberingEnumeration": {
    "name": "PanelNumberingEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "invalid": -1,
          "oddEven": 1,
          "sequential": 2
        }
      }
    },
    "status": "current",
    "description": "The panel circuit position numbering scheme."
  },
  "CircuitTypeEnumeration": {
    "name": "CircuitTypeEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "onePhaseLL": 1,
          "onePhaseLN": 2,
          "onePhaseLLN": 3,
          "threePhase": 4
        }
      }
    },
    "status": "current",
    "description": "The panel circuit types."
  },
  "PhaseEnumeration": {
    "name": "PhaseEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "phaseA": 1,
          "phaseB": 2,
          "phaseC": 3,
          "neutral": 4,
          "earth": 5
        }
      }
    },
    "status": "current",
    "description": "The power phase."
  },
  "LineEnumeration": {
    "name": "LineEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "lineL1": 1,
          "lineL2": 2,
          "lineL3": 3,
          "lineNeutral": 4
        }
      }
    },
    "status": "current",
    "description": "The Lines: L1, L2, L3, N."
  },
  "PowerMeterTypeEnumeration": {
    "name": "PowerMeterTypeEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "singlePhase": 1,
          "splitPhase": 2,
          "threePhase": 3
        }
      }
    },
    "status": "current",
    "description": "The power meter types"
  },
  "NetworkInterfaceTypeEnumeration": {
    "name": "NetworkInterfaceTypeEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "wired": 0,
          "wireless": 1
        }
      }
    },
    "status": "current",
    "description": "The type of network interface."
  },
  "AddressSourceEnumeration": {
    "name": "AddressSourceEnumeration",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "static": 1,
          "dhcp": 2,
          "dhcpv6": 3
        }
      }
    },
    "status": "current",
    "description": "How was the address obtained?"
  },
  "pduCount": {
    "name": "pduCount",
    "oid": "1.3.6.1.4.1.13742.6.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "For a PX2/3 and transfer switch, pduCount = 1 For a BCM2, pduCount = number of power meters + 1 (for the main controller) "
  },
  "nameplateTable": {
    "name": "nameplateTable",
    "oid": "1.3.6.1.4.1.13742.6.3.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of PDU nameplate entries. The number of entries is given by the value of pduCount."
  },
  "nameplateEntry": {
    "name": "nameplateEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry providing PDU nameplate information."
  },
  "pduId": {
    "name": "pduId",
    "oid": "1.3.6.1.4.1.13742.6.3.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each PDU/Power meter. PX2/3 and transfer switch: pduiId = 1 BCM2: main controller: pduId = 0 power meter: pduId = rotary switch setting for the power meter It is the same as the MeterID in the GUI Example: a power meter, rotary switch setting = 5, pduId = 5 a panel (power meter + branch metering), rotary switch setting = 23, pduId = 23 "
  },
  "pduManufacturer": {
    "name": "pduManufacturer",
    "oid": "1.3.6.1.4.1.13742.6.3.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PDU manaufacturer."
  },
  "pduModel": {
    "name": "pduModel",
    "oid": "1.3.6.1.4.1.13742.6.3.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PDU model."
  },
  "pduSerialNumber": {
    "name": "pduSerialNumber",
    "oid": "1.3.6.1.4.1.13742.6.3.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PDU serial Number."
  },
  "pduRatedVoltage": {
    "name": "pduRatedVoltage",
    "oid": "1.3.6.1.4.1.13742.6.3.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PDU voltage rating."
  },
  "pduRatedCurrent": {
    "name": "pduRatedCurrent",
    "oid": "1.3.6.1.4.1.13742.6.3.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PDU current rating."
  },
  "pduRatedFrequency": {
    "name": "pduRatedFrequency",
    "oid": "1.3.6.1.4.1.13742.6.3.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PDU frequency rating."
  },
  "pduRatedVA": {
    "name": "pduRatedVA",
    "oid": "1.3.6.1.4.1.13742.6.3.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PDU VA (VoltAmps) rating."
  },
  "pduImage": {
    "name": "pduImage",
    "oid": "1.3.6.1.4.1.13742.6.3.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "URL",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The URL of the wiring diagram for this PDU."
  },
  "unitConfigurationTable": {
    "name": "unitConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of PDU configuration entries. The number of entries is given by the value of pduCount."
  },
  "unitConfigurationEntry": {
    "name": "unitConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing configuration objects for a particular PDU."
  },
  "inletCount": {
    "name": "inletCount",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of inlets."
  },
  "overCurrentProtectorCount": {
    "name": "overCurrentProtectorCount",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of overcurrent protectors."
  },
  "outletCount": {
    "name": "outletCount",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of outlets."
  },
  "inletControllerCount": {
    "name": "inletControllerCount",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of inlet controllers."
  },
  "outletControllerCount": {
    "name": "outletControllerCount",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of outlet controllers."
  },
  "externalSensorCount": {
    "name": "externalSensorCount",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of external sensors."
  },
  "pxIPAddress": {
    "name": "pxIPAddress",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The current IP address. A value of 0.0.0.0 indicates an error or an unset option."
  },
  "netmask": {
    "name": "netmask",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The current netmask. A value of 0.0.0.0 indicates an error or an unset option."
  },
  "gateway": {
    "name": "gateway",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The current gateway. A value of 0.0.0.0 indicates an error or an unset option."
  },
  "pxMACAddress": {
    "name": "pxMACAddress",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The current MAC address."
  },
  "utcOffset": {
    "name": "utcOffset",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The current UTC offset."
  },
  "pduName": {
    "name": "pduName",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The user-defined name for the PDU."
  },
  "networkInterfaceType": {
    "name": "networkInterfaceType",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "NetworkInterfaceTypeEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The network interface type: wired or wireless."
  },
  "externalSensorsZCoordinateUnits": {
    "name": "externalSensorsZCoordinateUnits",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ExternalSensorsZCoordinateUnitsEnumeration",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "External Sensor Z Coordinate units: Freeform Text or Rack Units (U) Default is U."
  },
  "unitDeviceCapabilities": {
    "name": "unitDeviceCapabilities",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "i1smpsStatus": 45,
        "i2smpsStatus": 46
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bit string which indicates which unit sensors are available."
  },
  "outletSequencingDelay": {
    "name": "outletSequencingDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "It is deprecated. This is an alias for inrushGuardDelay "
  },
  "globalOutletPowerCyclingPowerOffPeriod": {
    "name": "globalOutletPowerCyclingPowerOffPeriod",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The power-off period when an outlet is cycled; applies to all outlets unless overridden at the outlet level; specified in seconds; 0 <= value <= 3600 seconds."
  },
  "globalOutletStateOnStartup": {
    "name": "globalOutletStateOnStartup",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GlobalOutletStateOnStartupEnumeration",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The outlet state on device startup; applies to all outlets unless overridden at the outlet level. Note that this value is ignored if relayBehaviorOnPowerLoss is set to latching."
  },
  "outletPowerupSequence": {
    "name": "outletPowerupSequence",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.39",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The sequence in which will the outlets will be switched on under the following conditions. 1) Switch all outlets on operation is executed 2) Power to the PDU is cycled String must consist of a comma separated sequence of the outlet numbers and all outlet numbers must be included. The numbers entered must be a permutation of the numbers 1,2,3,-outletnumber. Example for a 12 outlet PDU: 1,12,3,5,6,7,10,2,4,11,9,8. The per outlet sequence delays are defined as outletSequenceDelay in the outletConfigurationTable "
  },
  "pduPowerCyclingPowerOffPeriod": {
    "name": "pduPowerCyclingPowerOffPeriod",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.40",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "When power to the PX is cycled (either manually or because of a temporary power loss), this number determines how many seconds the PX will wait before it provides power to the outlets. specified in seconds: 0 <= value <= 3600 seconds. Note that this value is ignored if relayBehaviorOnPowerLoss is set to latching."
  },
  "pduDaisychainMemberType": {
    "name": "pduDaisychainMemberType",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.41",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DaisychainMemberTypeEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The daisy chain member type."
  },
  "managedExternalSensorCount": {
    "name": "managedExternalSensorCount",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.42",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of managed external sensors "
  },
  "pxInetAddressType": {
    "name": "pxInetAddressType",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.50",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The type of address format This object is deprecated in favor of ipAddressTable from the IP-MIB (rfc4293)."
  },
  "pxInetIPAddress": {
    "name": "pxInetIPAddress",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.51",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The current IP address. A value of 0.0.0.0 indicates an error or an unset option. This object is deprecated in favor of ipAddressTable from the IP-MIB (rfc4293). For IPv6, its value is 0.0.0.0 "
  },
  "pxInetNetmask": {
    "name": "pxInetNetmask",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.52",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The current netmask. A value of 0.0.0.0 indicates an error or an unset option. This object is deprecated in favor of ipAddressTable from the IP-MIB (rfc4293). For IPv6, its value is 0.0.0.0 "
  },
  "pxInetGateway": {
    "name": "pxInetGateway",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.53",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The current gateway. A value of 0.0.0.0 indicates an error or an unset option. This object is deprecated in favor of ipAddressTable from the IP-MIB (rfc4293). For IPv6, its value is 0.0.0.0 "
  },
  "loadShedding": {
    "name": "loadShedding",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.55",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Enter/Exit Load Shedding Mode"
  },
  "serverCount": {
    "name": "serverCount",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.56",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of servers"
  },
  "inrushGuardDelay": {
    "name": "inrushGuardDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.57",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The time interval between switching on two outlets; specified in milliseconds; 100 <= value <= 100000 milliseconds."
  },
  "cascadedDeviceConnected": {
    "name": "cascadedDeviceConnected",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.58",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Indicates whether another PX2 is connected using an USB cable to the USB-A port of this PX2 in a cascaded configuration. true: Connected false: Not Connected"
  },
  "synchronizeWithNTPServer": {
    "name": "synchronizeWithNTPServer",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.59",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Will time be obtained using NTP? true: time will be obtained using NTP servers false: time will not be obtained using NTP servers Deafault is false."
  },
  "useDHCPProvidedNTPServer": {
    "name": "useDHCPProvidedNTPServer",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.60",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Will the NTP server addresses be provided by DHCP/BOOTP? This is used only if synchronizeWithNTPServer is enabled Default is enabled, i.e. DHCP provided NTP servers will be used "
  },
  "firstNTPServerAddressType": {
    "name": "firstNTPServerAddressType",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.61",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ipv4",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Represents the type of the corresponding instance of firstNTPServerAddress object."
  },
  "firstNTPServerAddress": {
    "name": "firstNTPServerAddress",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.62",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The address of the primary ntp server."
  },
  "secondNTPServerAddressType": {
    "name": "secondNTPServerAddressType",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.63",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Represents the type of the corresponding instance of secondNTPServerAddress object. Default is ipv4"
  },
  "secondNTPServerAddress": {
    "name": "secondNTPServerAddress",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.64",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The address of the second ntp server."
  },
  "wireCount": {
    "name": "wireCount",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.65",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The number of wires."
  },
  "transferSwitchCount": {
    "name": "transferSwitchCount",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.66",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of transfer switches."
  },
  "productType": {
    "name": "productType",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.67",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ProductTypeEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The product type. Is this product a PDU, STS, BCM,...? "
  },
  "meteringControllerCount": {
    "name": "meteringControllerCount",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.68",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of metering controllers."
  },
  "relayBehaviorOnPowerLoss": {
    "name": "relayBehaviorOnPowerLoss",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.69",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RelayPowerLossBehaviorEnumeration",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The relay behavior on power loss."
  },
  "deviceCascadeType": {
    "name": "deviceCascadeType",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.70",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DeviceCascadeTypeEnumeration",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The configured type of cascading: default is bridging. This can be set only if the unit is the master."
  },
  "deviceCascadePosition": {
    "name": "deviceCascadePosition",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.71",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 99
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The position of the device in the cascaded chain. 0: master >= 1: slaves "
  },
  "peripheralDevicesAutoManagement": {
    "name": "peripheralDevicesAutoManagement",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.72",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Auto-management enabled state for peripheral devices."
  },
  "frontPanelOutletSwitching": {
    "name": "frontPanelOutletSwitching",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.73",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Enables/disables switching of outlets using the PDU front panel."
  },
  "frontPanelRCMSelfTest": {
    "name": "frontPanelRCMSelfTest",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.74",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Enables/disables front panel RCM self-test."
  },
  "frontPanelActuatorControl": {
    "name": "frontPanelActuatorControl",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.75",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Enables/disables front panel peripheral actuator control."
  },
  "circuitCount": {
    "name": "circuitCount",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.76",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of user configured circuits in the panel."
  },
  "activeDNSServerCount": {
    "name": "activeDNSServerCount",
    "oid": "1.3.6.1.4.1.13742.6.3.2.2.1.77",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of active DNS Servers "
  },
  "activeDNSServerTable": {
    "name": "activeDNSServerTable",
    "oid": "1.3.6.1.4.1.13742.6.3.2.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of active DNS server entries. The number of rows in the table is given by the value of activeDNSServerCount (from unitConfigurationTable). If activeDNSServerCount = 0, then the table is empty. "
  },
  "activeDNSServerEntry": {
    "name": "activeDNSServerEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.2.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "activeDNSServerIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing the active DNS servers for a particular PDU."
  },
  "activeDNSServerIndex": {
    "name": "activeDNSServerIndex",
    "oid": "1.3.6.1.4.1.13742.6.3.2.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for a dns Server. Its value ranges between 1 and activeDNSServerCount."
  },
  "activeDNSServerAddressType": {
    "name": "activeDNSServerAddressType",
    "oid": "1.3.6.1.4.1.13742.6.3.2.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Represents the type of the corresponding instance of activeDNSServerAddress object. "
  },
  "activeDNSServerAddress": {
    "name": "activeDNSServerAddress",
    "oid": "1.3.6.1.4.1.13742.6.3.2.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The address of the dns server. "
  },
  "activeDNSServerAddressSource": {
    "name": "activeDNSServerAddressSource",
    "oid": "1.3.6.1.4.1.13742.6.3.2.6.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AddressSourceEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "How was the address obtained: static, dhcp, dhcpv6? "
  },
  "controllerConfigurationTable": {
    "name": "controllerConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of entries for the boards in each PDU. The number of entries is given by the value of inletControllerCount + outletControllerCount + 1 (for main controller board)."
  },
  "controllerConfigurationEntry": {
    "name": "controllerConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "boardType",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "boardIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing objects for a controller."
  },
  "boardType": {
    "name": "boardType",
    "oid": "1.3.6.1.4.1.13742.6.3.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "BoardTypeEnumeration",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The type of board."
  },
  "boardIndex": {
    "name": "boardIndex",
    "oid": "1.3.6.1.4.1.13742.6.3.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each controller. Its value ranges between 1 and the value of inletControllerCount + outletControllerCount + 1."
  },
  "boardVersion": {
    "name": "boardVersion",
    "oid": "1.3.6.1.4.1.13742.6.3.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The board hardware version."
  },
  "boardFirmwareVersion": {
    "name": "boardFirmwareVersion",
    "oid": "1.3.6.1.4.1.13742.6.3.2.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The firmware version."
  },
  "boardFirmwareTimeStamp": {
    "name": "boardFirmwareTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.3.2.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The time when the board firmware was updated in UNIX(epoch)time. It is measured in seconds relative to January 1, 1970 (midnight UTC/GMT), i.e a value of 0 indicates January 1, 1970 (midnight UTC/GMT)."
  },
  "logConfigurationTable": {
    "name": "logConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of parameters for the data logging feature. The number of entries is given by the value of pduCount."
  },
  "logConfigurationEntry": {
    "name": "logConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing data logging parameters for a particular PDU."
  },
  "dataLogging": {
    "name": "dataLogging",
    "oid": "1.3.6.1.4.1.13742.6.3.2.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Data Retrieval: enabled/disabled."
  },
  "measurementPeriod": {
    "name": "measurementPeriod",
    "oid": "1.3.6.1.4.1.13742.6.3.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Data Collection periodicity. This is the periodicity of the data collected by the PX. This value is fixed at 1 second."
  },
  "measurementsPerLogEntry": {
    "name": "measurementsPerLogEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.2.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The number of measurements used for each entry in the log."
  },
  "logSize": {
    "name": "logSize",
    "oid": "1.3.6.1.4.1.13742.6.3.2.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of entries in the log."
  },
  "dataLoggingEnableForAllSensors": {
    "name": "dataLoggingEnableForAllSensors",
    "oid": "1.3.6.1.4.1.13742.6.3.2.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Operation to control data logging for all sensors. If this OID is set to true, then all xxxSensorLogAvailable are set to true If this OID is set to false, then all xxxSensorLogAvailable are set to false "
  },
  "trapInformationTable": {
    "name": "trapInformationTable",
    "oid": "1.3.6.1.4.1.13742.6.0.0.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of Trap Information entries. The number of entries is given by the value of pduCount."
  },
  "trapInformationEntry": {
    "name": "trapInformationEntry",
    "oid": "1.3.6.1.4.1.13742.6.0.0.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing objects used in traps."
  },
  "userName": {
    "name": "userName",
    "oid": "1.3.6.1.4.1.13742.6.0.0.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The user currently logged in."
  },
  "targetUser": {
    "name": "targetUser",
    "oid": "1.3.6.1.4.1.13742.6.0.0.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The user added, deleted, or modified."
  },
  "imageVersion": {
    "name": "imageVersion",
    "oid": "1.3.6.1.4.1.13742.6.0.0.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The version of the upgrade image."
  },
  "roleName": {
    "name": "roleName",
    "oid": "1.3.6.1.4.1.13742.6.0.0.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The role added, deleted, or modified."
  },
  "smtpMessageRecipients": {
    "name": "smtpMessageRecipients",
    "oid": "1.3.6.1.4.1.13742.6.0.0.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Comma separated list of SMTP Message recipients"
  },
  "smtpServer": {
    "name": "smtpServer",
    "oid": "1.3.6.1.4.1.13742.6.0.0.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The IP address/host name of the SMTP server"
  },
  "oldSensorState": {
    "name": "oldSensorState",
    "oid": "1.3.6.1.4.1.13742.6.0.0.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The old sensor state used in Sensor State Transition traps."
  },
  "pduNumber": {
    "name": "pduNumber",
    "oid": "1.3.6.1.4.1.13742.6.0.0.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "A unique value for each PDU. Its value ranges between 1 and the value of pduCount."
  },
  "inletPoleNumber": {
    "name": "inletPoleNumber",
    "oid": "1.3.6.1.4.1.13742.6.0.0.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "A unique value for each inlet Pole. Its value ranges between 1 and the value of inletPoleCount."
  },
  "outletPoleNumber": {
    "name": "outletPoleNumber",
    "oid": "1.3.6.1.4.1.13742.6.0.0.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "A unique value for each outlet Pole. Its value ranges between 1 and the value of outletPoleCount."
  },
  "externalSensorNumber": {
    "name": "externalSensorNumber",
    "oid": "1.3.6.1.4.1.13742.6.0.0.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "A unique value for each external sensor. Its value ranges between 1 and the value of externalSensorCount."
  },
  "typeOfSensor": {
    "name": "typeOfSensor",
    "oid": "1.3.6.1.4.1.13742.6.0.0.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SensorTypeEnumeration",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The type of sensor."
  },
  "errorDescription": {
    "name": "errorDescription",
    "oid": "1.3.6.1.4.1.13742.6.0.0.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "Description of the Error"
  },
  "deviceChangedParameter": {
    "name": "deviceChangedParameter",
    "oid": "1.3.6.1.4.1.13742.6.0.0.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DeviceIdentificationParameterEnumeration",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "Description of the parameter(s) that changed. "
  },
  "changedParameterNewValue": {
    "name": "changedParameterNewValue",
    "oid": "1.3.6.1.4.1.13742.6.0.0.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The new value of the changed parameter "
  },
  "lhxSupportEnabled": {
    "name": "lhxSupportEnabled",
    "oid": "1.3.6.1.4.1.13742.6.0.0.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The new enabled state for Schroff LHX Support."
  },
  "webcamModel": {
    "name": "webcamModel",
    "oid": "1.3.6.1.4.1.13742.6.0.0.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The model of the Webcam "
  },
  "webcamConnectionPort": {
    "name": "webcamConnectionPort",
    "oid": "1.3.6.1.4.1.13742.6.0.0.16",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The port to which the Webcam is connected "
  },
  "agentInetPortNumber": {
    "name": "agentInetPortNumber",
    "oid": "1.3.6.1.4.1.13742.6.0.0.18",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetPortNumber",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The UDP port number used for accessing the SNMP agent on the device. Examples: If deviceCascadeType is portForwarding, then master: 50500 slave 1:50501 slave 2: 50502 ...... If cascading mode is not portForwarding and default (Standard) ports are being used, then port: 161 "
  },
  "peripheralDeviceRomcode": {
    "name": "peripheralDeviceRomcode",
    "oid": "1.3.6.1.4.1.13742.6.0.0.19",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The Romcode of an peripheral device"
  },
  "peripheralDeviceFirmwareUpdateState": {
    "name": "peripheralDeviceFirmwareUpdateState",
    "oid": "1.3.6.1.4.1.13742.6.0.0.20",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "PeripheralDeviceFirmwareUpdateStateEnumeration",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The firmware update state of an peripheral device"
  },
  "circuitNumber": {
    "name": "circuitNumber",
    "oid": "1.3.6.1.4.1.13742.6.0.0.21",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 33000
          }
        ]
      }
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "A unique value for each circuit. circuitId is defined as follows. circuitID = 1000*(panelId) + circuitPosition Examples: 1045 is the the circuit on panel 1 with lowest circuit position equal to 45 4067 is the the circuit on panel 4 with lowest circuit position equal to 67. "
  },
  "circuitPoleNumber": {
    "name": "circuitPoleNumber",
    "oid": "1.3.6.1.4.1.13742.6.0.0.22",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "A unique value for each circuit Pole. "
  },
  "phoneNumber": {
    "name": "phoneNumber",
    "oid": "1.3.6.1.4.1.13742.6.0.0.23",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The phone number of e.g. an SMS receiver."
  },
  "unitSensorConfigurationTable": {
    "name": "unitSensorConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of unit level sensors for a PDU."
  },
  "unitSensorConfigurationEntry": {
    "name": "unitSensorConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing unit sensor parameters."
  },
  "sensorType": {
    "name": "sensorType",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorTypeEnumeration",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The type of sensor."
  },
  "unitSensorLogAvailable": {
    "name": "unitSensorLogAvailable",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Is logging enabled for the sensor?"
  },
  "unitSensorUnits": {
    "name": "unitSensorUnits",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorUnitsEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The units in which the sensor data is reported. "
  },
  "unitSensorDecimalDigits": {
    "name": "unitSensorDecimalDigits",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of digits displayed to the right of the decimal point."
  },
  "unitSensorAccuracy": {
    "name": "unitSensorAccuracy",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HundredthsOfAPercentage",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The accuracy: how close (in percent) the measurement is to the actual value."
  },
  "unitSensorResolution": {
    "name": "unitSensorResolution",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The resolution: the minimum difference between any two measured values The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01."
  },
  "unitSensorTolerance": {
    "name": "unitSensorTolerance",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The resolution: the difference between a sensor value and the actual value The value of this OID variable should be scaled by (unitSensorDecimalDigits + 1). For example, if the value is 50 and unitSensorDecimalDigits is 2, then actual value is 0.05."
  },
  "unitSensorMaximum": {
    "name": "unitSensorMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as an unsigned integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled maximum exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "unitSensorMinimum": {
    "name": "unitSensorMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as an unsigned integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "unitSensorHysteresis": {
    "name": "unitSensorHysteresis",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The hysteresis used for deassertions The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading."
  },
  "unitSensorStateChangeDelay": {
    "name": "unitSensorStateChangeDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The delay measured in samples before a state is asserted. If the value is zero, then the state is asserted as soon as it is detected; if it is non-zero, say n, then the assertion condition must exist for n+1 consecutive samples before the corresponding assertion event is reported. This parameter does not apply to sensors without numerical reading."
  },
  "unitSensorLowerCriticalThreshold": {
    "name": "unitSensorLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as an unsigned integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "unitSensorLowerWarningThreshold": {
    "name": "unitSensorLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as an unsigned integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "unitSensorUpperCriticalThreshold": {
    "name": "unitSensorUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as an unsigned integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "unitSensorUpperWarningThreshold": {
    "name": "unitSensorUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as an unsigned integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "unitSensorEnabledThresholds": {
    "name": "unitSensorEnabledThresholds",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "lowerCritical": 0,
        "lowerWarning": 1,
        "upperWarning": 2,
        "upperCritical": 3
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A bit string which indicates which thresholds are enabled. This parameter does not apply to sensors without numerical reading."
  },
  "unitSensorSignedMaximum": {
    "name": "unitSensorSignedMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as a signed integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "unitSensorSignedMinimum": {
    "name": "unitSensorSignedMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as a signed integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. This value determines whether to use the signed or unsigned threshold and value columns: If the minimum is below zero the sensor can have negative readings and the signed columns should be used. This parameter does not apply to sensors without numerical reading."
  },
  "unitSensorSignedLowerCriticalThreshold": {
    "name": "unitSensorSignedLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as a signed integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "unitSensorSignedLowerWarningThreshold": {
    "name": "unitSensorSignedLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as a signed integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "unitSensorSignedUpperCriticalThreshold": {
    "name": "unitSensorSignedUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as a signed integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "unitSensorSignedUpperWarningThreshold": {
    "name": "unitSensorSignedUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.2.5.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as a signed integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "inletConfigurationTable": {
    "name": "inletConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of inlet configuration entries. The number of entries is given by the value of inletCount for the PDU."
  },
  "inletConfigurationEntry": {
    "name": "inletConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "inletId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing parametersfor a particular inlet."
  },
  "inletId": {
    "name": "inletId",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each inlet. Its value ranges between 1 and the value of inletCount."
  },
  "inletLabel": {
    "name": "inletLabel",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The label on the PDU identifying the inlet."
  },
  "inletName": {
    "name": "inletName",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The user-defined name."
  },
  "inletPlug": {
    "name": "inletPlug",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PlugTypeEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The type of plug/receptacle wired to the inlet."
  },
  "inletPoleCount": {
    "name": "inletPoleCount",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 2,
            "max": 5
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of poles. PDU: 2 for 1-phase circuits 3 for 3-phase DELTA wired models; 4 for 3-phase WYE wired models; Pole 4 is neutral; Note that sensors are not supported for neutral poles; Power Meter: 5: Pole 1 is Phase A Pole 2 is Phase B Pole 3 is Phase C Pole 4 is Neutral Pole 5 is Earth "
  },
  "inletRatedVoltage": {
    "name": "inletRatedVoltage",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The inlet voltage rating."
  },
  "inletRatedCurrent": {
    "name": "inletRatedCurrent",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The inlet current rating."
  },
  "inletRatedFrequency": {
    "name": "inletRatedFrequency",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The inlet frequency rating. Deprecated: use pduRatedFrequency for unit nameplate information."
  },
  "inletRatedVA": {
    "name": "inletRatedVA",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The inlet VA (VoltAmps) rating. Deprecated: use pduRatedVA for unit nameplate information."
  },
  "inletDeviceCapabilities": {
    "name": "inletDeviceCapabilities",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "rmsCurrent": 0,
        "peakCurrent": 1,
        "unbalancedCurrent": 2,
        "rmsVoltage": 3,
        "activePower": 4,
        "apparentPower": 5,
        "powerFactor": 6,
        "activeEnergy": 7,
        "apparentEnergy": 8,
        "surgeProtectorStatus": 21,
        "frequency": 22,
        "phaseAngle": 23,
        "residualCurrent": 25,
        "rcmState": 26,
        "reactivePower": 28,
        "powerQuality": 31
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bit string which indicates which inlet sensors are available."
  },
  "inletPoleCapabilities": {
    "name": "inletPoleCapabilities",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "rmsCurrent": 0,
        "peakCurrent": 1,
        "rmsVoltage": 3,
        "activePower": 4,
        "apparentPower": 5,
        "powerFactor": 6,
        "activeEnergy": 7,
        "apparentEnergy": 8,
        "phaseAngle": 23,
        "rmsVoltageLN": 24,
        "reactivePower": 28,
        "displacementPowerFactor": 34
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bit string which indicates which inletpole sensors are available."
  },
  "inletPlugDescriptor": {
    "name": "inletPlugDescriptor",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Description of the Plug"
  },
  "inletEnableState": {
    "name": "inletEnableState",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Is this PDU operation is enabled for this inlet? When PDU operation is disabled the sensors for this inlet and all children will no longer be updated, and outlet switching is no longer allowed. This is only meaningful for multi-inlet units if one inlet is temporarily expected to be powered down. Disabling the inlet of a single-inlet unit is forbidden and any attempt to do so will result in an error."
  },
  "inletRCMResidualOperatingCurrent": {
    "name": "inletRCMResidualOperatingCurrent",
    "oid": "1.3.6.1.4.1.13742.6.3.3.3.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Residual Operating Current (Threshold) for the RCM State sensor. For inlets without an RCM, any attempt to access this OID will return NoSuchInstance error. The value of this OID is in milliamps. "
  },
  "inletPoleConfigurationTable": {
    "name": "inletPoleConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.3.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of inlet pole configuration entries. The number of entries is given by the value of inletPoleCount for the PDU."
  },
  "inletPoleConfigurationEntry": {
    "name": "inletPoleConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.3.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "inletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing parametersfor a particular inlet pole."
  },
  "inletPoleLine": {
    "name": "inletPoleLine",
    "oid": "1.3.6.1.4.1.13742.6.3.3.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LineEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The Phase for this inlet Pole. "
  },
  "inletPoleNode": {
    "name": "inletPoleNode",
    "oid": "1.3.6.1.4.1.13742.6.3.3.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The node to which this inlet pole is connected"
  },
  "inletSensorConfigurationTable": {
    "name": "inletSensorConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of configuration entries for an inlet sensor."
  },
  "inletSensorConfigurationEntry": {
    "name": "inletSensorConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "inletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing objects for configuring an inlet sensor."
  },
  "inletSensorLogAvailable": {
    "name": "inletSensorLogAvailable",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Is logging enabled for the sensor?"
  },
  "inletSensorUnits": {
    "name": "inletSensorUnits",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorUnitsEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The base units. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorDecimalDigits": {
    "name": "inletSensorDecimalDigits",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of digits displayed to the right of the decimal point. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorAccuracy": {
    "name": "inletSensorAccuracy",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HundredthsOfAPercentage",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The accuracy: how close (in percent) the measurement is to the actual value. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorResolution": {
    "name": "inletSensorResolution",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The resolution: the minimum difference between any two measured values The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorTolerance": {
    "name": "inletSensorTolerance",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The resolution: the difference between a sensor value and the actual value The value of this OID variable should be scaled by (inletSensorDecimalDigits + 1). For example, if the value is 50 and inletSensorDecimalDigits is 2, then actual value is 0.05. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorMaximum": {
    "name": "inletSensorMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled maximum exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorMinimum": {
    "name": "inletSensorMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorHysteresis": {
    "name": "inletSensorHysteresis",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The hysteresis used for deassertions The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorStateChangeDelay": {
    "name": "inletSensorStateChangeDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The delay measured in samples before a state is asserted. If the value is zero, then the state is asserted as soon as it is detected; if it is non-zero, say n, then the assertion condition must exist for n+1 consecutive samples before the corresponding assertion event is reported. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorLowerCriticalThreshold": {
    "name": "inletSensorLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorLowerWarningThreshold": {
    "name": "inletSensorLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorUpperCriticalThreshold": {
    "name": "inletSensorUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorUpperWarningThreshold": {
    "name": "inletSensorUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorEnabledThresholds": {
    "name": "inletSensorEnabledThresholds",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "lowerCritical": 0,
        "lowerWarning": 1,
        "upperWarning": 2,
        "upperCritical": 3
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A bit string which indicates which thresholds are enabled. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorSignedMaximum": {
    "name": "inletSensorSignedMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorSignedMinimum": {
    "name": "inletSensorSignedMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value determines whether to use the signed or unsigned threshold and value columns: If the minimum is below zero the sensor can have negative readings and the signed columns should be used. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorSignedLowerCriticalThreshold": {
    "name": "inletSensorSignedLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorSignedLowerWarningThreshold": {
    "name": "inletSensorSignedLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorSignedUpperCriticalThreshold": {
    "name": "inletSensorSignedUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletSensorSignedUpperWarningThreshold": {
    "name": "inletSensorSignedUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.4.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletPoleSensorConfigurationTable": {
    "name": "inletPoleSensorConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of configuration entries for an inlet pole sensor."
  },
  "inletPoleSensorConfigurationEntry": {
    "name": "inletPoleSensorConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "inletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleIndex",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing objects for configuring an inlet pole sensor."
  },
  "inletPoleIndex": {
    "name": "inletPoleIndex",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each inlet Pole. Its value ranges between 1 and the value of inletPoleCount."
  },
  "inletPoleSensorLogAvailable": {
    "name": "inletPoleSensorLogAvailable",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Is logging enabled for the sensor?"
  },
  "inletPoleSensorUnits": {
    "name": "inletPoleSensorUnits",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorUnitsEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The base units. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorDecimalDigits": {
    "name": "inletPoleSensorDecimalDigits",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of digits displayed to the right of the decimal point. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorAccuracy": {
    "name": "inletPoleSensorAccuracy",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HundredthsOfAPercentage",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The accuracy: how close (in percent) the measurement is to the actual value. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorResolution": {
    "name": "inletPoleSensorResolution",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The resolution: the minimum difference between any two measured values The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorTolerance": {
    "name": "inletPoleSensorTolerance",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The resolution: the difference between a sensor value and the actual value The value of this OID variable should be scaled by (inletPoleSensorDecimalDigits + 1). For example, if the value is 50 and inletPoleSensorDecimalDigits is 2, then actual value is 0.05. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorMaximum": {
    "name": "inletPoleSensorMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled maximum exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorMinimum": {
    "name": "inletPoleSensorMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorHysteresis": {
    "name": "inletPoleSensorHysteresis",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The hysteresis used for deassertions The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorStateChangeDelay": {
    "name": "inletPoleSensorStateChangeDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The delay measured in samples before a state is asserted. If the value is zero, then the state is asserted as soon as it is detected; if it is non-zero, say n, then the assertion condition must exist for n+1 consecutive samples before the corresponding assertion event is reported. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorLowerCriticalThreshold": {
    "name": "inletPoleSensorLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorLowerWarningThreshold": {
    "name": "inletPoleSensorLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorUpperCriticalThreshold": {
    "name": "inletPoleSensorUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorUpperWarningThreshold": {
    "name": "inletPoleSensorUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorEnabledThresholds": {
    "name": "inletPoleSensorEnabledThresholds",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "lowerCritical": 0,
        "lowerWarning": 1,
        "upperWarning": 2,
        "upperCritical": 3
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A bit string which indicates which thresholds are enabled. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorSignedMaximum": {
    "name": "inletPoleSensorSignedMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorSignedMinimum": {
    "name": "inletPoleSensorSignedMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value determines whether to use the signed or unsigned threshold and value columns: If the minimum is below zero the sensor can have negative readings and the signed columns should be used. This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorSignedLowerCriticalThreshold": {
    "name": "inletPoleSensorSignedLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorSignedLowerWarningThreshold": {
    "name": "inletPoleSensorSignedLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorSignedUpperCriticalThreshold": {
    "name": "inletPoleSensorSignedUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "inletPoleSensorSignedUpperWarningThreshold": {
    "name": "inletPoleSensorSignedUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.3.6.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "overCurrentProtectorConfigurationTable": {
    "name": "overCurrentProtectorConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.4.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of overCurrentProtector configuration entries. The number of entries is given by the value of overCurrentProtectorCount for the PDU."
  },
  "overCurrentProtectorConfigurationEntry": {
    "name": "overCurrentProtectorConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.4.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing objects for a particular overCurrentProtector."
  },
  "overCurrentProtectorIndex": {
    "name": "overCurrentProtectorIndex",
    "oid": "1.3.6.1.4.1.13742.6.3.4.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each overcurrent protector. Its value ranges between 1 and the value of overCurrentProtectorCount."
  },
  "overCurrentProtectorLabel": {
    "name": "overCurrentProtectorLabel",
    "oid": "1.3.6.1.4.1.13742.6.3.4.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The label on the PDU identifying the overcurrent protector."
  },
  "overCurrentProtectorName": {
    "name": "overCurrentProtectorName",
    "oid": "1.3.6.1.4.1.13742.6.3.4.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The user-defined name."
  },
  "overCurrentProtectorType": {
    "name": "overCurrentProtectorType",
    "oid": "1.3.6.1.4.1.13742.6.3.4.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OverCurrentProtectorTypeEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The type of overcurrent protector."
  },
  "overCurrentProtectorRatedCurrent": {
    "name": "overCurrentProtectorRatedCurrent",
    "oid": "1.3.6.1.4.1.13742.6.3.4.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The current rating."
  },
  "overCurrentProtectorPoleCount": {
    "name": "overCurrentProtectorPoleCount",
    "oid": "1.3.6.1.4.1.13742.6.3.4.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 3
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of overCurrentProtector poles. "
  },
  "overCurrentProtectorCapabilities": {
    "name": "overCurrentProtectorCapabilities",
    "oid": "1.3.6.1.4.1.13742.6.3.4.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "rmsCurrent": 0,
        "peakCurrent": 1,
        "trip": 14
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bit string which indicates which overcurrent protector sensors are available."
  },
  "overCurrentProtectorPowerSource": {
    "name": "overCurrentProtectorPowerSource",
    "oid": "1.3.6.1.4.1.13742.6.3.4.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowPointer",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object allows discovery of how the PDU is wired. It indicates the overCurrentProtector's power source which can one of the following: overCurrentProtector transfer switch inlet If the power source is an OverCurrentProtector, it contains the OID of an overCurrentProtectorLabel in the overCurrentProtectorConfiguration Table. The index of the OID can then be used to reference other objects in the overCurrentProtectorConfigurationTable. If the power source is an inlet, it contains the OID of an inletLabel in the inletConfigurationTable. The index of the OID can then be used to reference other objects in the inletConfigurationTable. If the power source is a transferSwitch, it contains the OID of a transferSwitchLabel in the transferSwitchConfiguration Table. The index of the OID can then be used to reference other objects in the transferSwitchConfigurationTable. "
  },
  "overCurrentProtectorPoleConfigurationTable": {
    "name": "overCurrentProtectorPoleConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.4.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of overCurrentProtector pole configuration entries. The number of entries is given by the value of overCurrentProtectorPoleCount for the PDU."
  },
  "overCurrentProtectorPoleConfigurationEntry": {
    "name": "overCurrentProtectorPoleConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.4.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorIndex",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorPoleIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing parametersfor a particular overCurrentProtector pole."
  },
  "overCurrentProtectorPoleIndex": {
    "name": "overCurrentProtectorPoleIndex",
    "oid": "1.3.6.1.4.1.13742.6.3.4.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each overCurrentProtector Pole. Its value ranges between 1 and the value of overCurrentProtectorPoleCount."
  },
  "overCurrentProtectorPoleLine": {
    "name": "overCurrentProtectorPoleLine",
    "oid": "1.3.6.1.4.1.13742.6.3.4.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LineEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The Phase for this overCurrentProtector Pole. "
  },
  "overCurrentProtectorPoleInNode": {
    "name": "overCurrentProtectorPoleInNode",
    "oid": "1.3.6.1.4.1.13742.6.3.4.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The node to which this overCurrentProtector pole input is connected"
  },
  "overCurrentProtectorPoleOutNode": {
    "name": "overCurrentProtectorPoleOutNode",
    "oid": "1.3.6.1.4.1.13742.6.3.4.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The node to which this overCurrentProtector pole output is connected"
  },
  "overCurrentProtectorSensorConfigurationTable": {
    "name": "overCurrentProtectorSensorConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of overCurrentProtectorSensor configuration entries."
  },
  "overCurrentProtectorSensorConfigurationEntry": {
    "name": "overCurrentProtectorSensorConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorIndex",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An overCurrentProtectorSensor entry containing objects for a particular overCurrentProtector Sensor."
  },
  "overCurrentProtectorSensorLogAvailable": {
    "name": "overCurrentProtectorSensorLogAvailable",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Is logging available for this sensor?"
  },
  "overCurrentProtectorSensorUnits": {
    "name": "overCurrentProtectorSensorUnits",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorUnitsEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The base units This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorDecimalDigits": {
    "name": "overCurrentProtectorSensorDecimalDigits",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of digits displayed to the right of the decimal point. This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorAccuracy": {
    "name": "overCurrentProtectorSensorAccuracy",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HundredthsOfAPercentage",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The accuracy: how close (in percent) the measurement is to the actual value This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorResolution": {
    "name": "overCurrentProtectorSensorResolution",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The resolution: the minimum difference between any two measured values The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorTolerance": {
    "name": "overCurrentProtectorSensorTolerance",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The resolution: the difference between a sensor value and the actual value The value of this OID variable should be scaled by (overCurrentProtectorSensorDecimalDigits + 1). For example, if the value is 50 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.05. This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorMaximum": {
    "name": "overCurrentProtectorSensorMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as an unsigned integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled maximum exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorMinimum": {
    "name": "overCurrentProtectorSensorMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as an unsigned integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorHysteresis": {
    "name": "overCurrentProtectorSensorHysteresis",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The hysteresis used for deassertions The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorStateChangeDelay": {
    "name": "overCurrentProtectorSensorStateChangeDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The delay measured in samples before a state is asserted. If the value is zero, then the state is asserted as soon as it is detected; if it is non-zero, say n, then the assertion condition must exist for n+1 consecutive samples before the corresponding assertion event is reported. This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorLowerCriticalThreshold": {
    "name": "overCurrentProtectorSensorLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as an unsigned integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorLowerWarningThreshold": {
    "name": "overCurrentProtectorSensorLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as an unsigned integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorUpperCriticalThreshold": {
    "name": "overCurrentProtectorSensorUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as an unsigned integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorUpperWarningThreshold": {
    "name": "overCurrentProtectorSensorUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as an unsigned integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorEnabledThresholds": {
    "name": "overCurrentProtectorSensorEnabledThresholds",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "lowerCritical": 0,
        "lowerWarning": 1,
        "upperWarning": 2,
        "upperCritical": 3
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A bit string which indicates which thresholds are enabled. This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorSignedMaximum": {
    "name": "overCurrentProtectorSensorSignedMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as a signed integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorSignedMinimum": {
    "name": "overCurrentProtectorSensorSignedMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as a signed integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. This value determines whether to use the signed or unsigned threshold and value columns: If the minimum is below zero the sensor can have negative readings and the signed columns should be used. This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorSignedLowerCriticalThreshold": {
    "name": "overCurrentProtectorSensorSignedLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as a signed integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorSignedLowerWarningThreshold": {
    "name": "overCurrentProtectorSensorSignedLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as a signed integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorSignedUpperCriticalThreshold": {
    "name": "overCurrentProtectorSensorSignedUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as a signed integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "overCurrentProtectorSensorSignedUpperWarningThreshold": {
    "name": "overCurrentProtectorSensorSignedUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.4.4.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as a signed integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "outletConfigurationTable": {
    "name": "outletConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of outlet configuration entries. The number of entries is given by the value of outletCount for the PDU."
  },
  "outletConfigurationEntry": {
    "name": "outletConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "outletId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An outlet entry containing parameters for a particular outlet."
  },
  "outletId": {
    "name": "outletId",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each outlet. Its value ranges between 1 and the value of outletCount."
  },
  "outletLabel": {
    "name": "outletLabel",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The label on the PDU identifying the outlet."
  },
  "outletName": {
    "name": "outletName",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The user-defined name."
  },
  "outletReceptacle": {
    "name": "outletReceptacle",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ReceptacleTypeEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The plug."
  },
  "outletPoleCount": {
    "name": "outletPoleCount",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 2,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of poles."
  },
  "outletRatedVoltage": {
    "name": "outletRatedVoltage",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The outlet voltage rating."
  },
  "outletRatedCurrent": {
    "name": "outletRatedCurrent",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The outlet current rating."
  },
  "outletRatedVA": {
    "name": "outletRatedVA",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The outlet VA (VoltAmps) rating."
  },
  "outletDeviceCapabilities": {
    "name": "outletDeviceCapabilities",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "rmsCurrent": 0,
        "peakCurrent": 1,
        "unbalancedCurrent": 2,
        "rmsVoltage": 3,
        "activePower": 4,
        "apparentPower": 5,
        "powerFactor": 6,
        "activeEnergy": 7,
        "apparentEnergy": 8,
        "onOff": 13,
        "frequency": 22,
        "phaseAngle": 23
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bit string which indicates which outlet sensors are available."
  },
  "outletPoleCapabilities": {
    "name": "outletPoleCapabilities",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "rmsCurrent": 0,
        "peakCurrent": 1,
        "rmsVoltage": 3,
        "activePower": 4,
        "apparentPower": 5,
        "powerFactor": 6,
        "activeEnergy": 7,
        "apparentEnergy": 8,
        "rmsVoltageLN": 24
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bit string which indicates which outlet pole sensors are available."
  },
  "outletPowerCyclingPowerOffPeriod": {
    "name": "outletPowerCyclingPowerOffPeriod",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The power-off period when an outlet is cycled; overrides the global value; specified in seconds; 0 <= value <= 3600 seconds."
  },
  "outletStateOnStartup": {
    "name": "outletStateOnStartup",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OutletStateOnStartupEnumeration",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The outlet state on device startup; overrides the global value. Note that this value is ignored if relayBehaviorOnPowerLoss is set to latching."
  },
  "outletUseGlobalPowerCyclingPowerOffPeriod": {
    "name": "outletUseGlobalPowerCyclingPowerOffPeriod",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "If this true, then use globalOutletPowerCyclingPowerOffPeriod."
  },
  "outletSwitchable": {
    "name": "outletSwitchable",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is this outlet switchable?"
  },
  "outletReceptacleDescriptor": {
    "name": "outletReceptacleDescriptor",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Description of the Receptacle"
  },
  "outletNonCritical": {
    "name": "outletNonCritical",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Is this outlet non-critical?"
  },
  "outletSequenceDelay": {
    "name": "outletSequenceDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The time interval between switching on this outlet and the next outlet in the outlet sequence. This applies to the following operations. 1) Switch all outlets on operation is executed 2) Power to the PDU is cycledThis applies only when all outlets are being switched on or cycled. It is specified in seconds; 1 <= value <= 3600 seconds. The actual time interval used can never be less than the inrushGuardDelay defined in the unitConfigurationTable. Examples: 1) inrush Guard Delay is 2 seconds and outletSequenceDelay is 5 seconds. The time interval will be 5 seconds 2) inrush Guard Delay is 5 seconds and outletSequenceDelay is 2 seconds. The time interval will be 5 seconds "
  },
  "outletPowerSource": {
    "name": "outletPowerSource",
    "oid": "1.3.6.1.4.1.13742.6.3.5.3.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowPointer",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object allows discovery of how the PDU is wired. It indicates the outlet's power source which can one of the following: overCurrentProtector transfer switch inlet If the power source is an OverCurrentProtector, it contains the OID of an overCurrentProtectorLabel in the overCurrentProtectorConfiguration Table. The index of the OID can then be used to reference other objects in the overCurrentProtectorConfigurationTable. If the power source is an inlet, it contains the OID of an inletLabel in the inletConfigurationTable. The index of the OID can then be used to reference other objects in the inletConfigurationTable. If the power source is a transferSwitch, it contains the OID of a transferSwitchLabel in the transferSwitchConfiguration Table. The index of the OID can then be used to reference other objects in the transferSwitchConfigurationTable. "
  },
  "outletPoleConfigurationTable": {
    "name": "outletPoleConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.5.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of outlet pole configuration entries. The number of entries is given by the value of outletPoleCount for the PDU."
  },
  "outletPoleConfigurationEntry": {
    "name": "outletPoleConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.5.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "outletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing parametersfor a particular outlet pole."
  },
  "outletPoleLine": {
    "name": "outletPoleLine",
    "oid": "1.3.6.1.4.1.13742.6.3.5.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LineEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The Phase for this inlet Pole. "
  },
  "outletPoleNode": {
    "name": "outletPoleNode",
    "oid": "1.3.6.1.4.1.13742.6.3.5.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The node to which this outlet pole is connected"
  },
  "outletSensorConfigurationTable": {
    "name": "outletSensorConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of outlet configuration entries. The number of entries is given by the value of outletCount for the PDU."
  },
  "outletSensorConfigurationEntry": {
    "name": "outletSensorConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "outletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing parameters for an outlet sensor."
  },
  "outletSensorLogAvailable": {
    "name": "outletSensorLogAvailable",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Is logging available for this sensor?"
  },
  "outletSensorUnits": {
    "name": "outletSensorUnits",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorUnitsEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The base units. This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorDecimalDigits": {
    "name": "outletSensorDecimalDigits",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of digits displayed to the right of the decimal point This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorAccuracy": {
    "name": "outletSensorAccuracy",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HundredthsOfAPercentage",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The accuracy: how close (in percent) the measurement is to the actual value This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorResolution": {
    "name": "outletSensorResolution",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The resolution: the minimum difference between any two measured values The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorTolerance": {
    "name": "outletSensorTolerance",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The resolution: the difference between a sensor value and the actual value The value of this OID variable should be scaled by (outletSensorDecimalDigits + 1). For example, if the value is 50 and outletSensorDecimalDigits is 2, then actual value is 0.05. This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorMaximum": {
    "name": "outletSensorMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as an unsigned integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled maximum exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorMinimum": {
    "name": "outletSensorMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as an unsigned integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorHysteresis": {
    "name": "outletSensorHysteresis",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The hysteresis used for deassertions The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorStateChangeDelay": {
    "name": "outletSensorStateChangeDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The delay measured in samples before a state is asserted. If the value is zero, then the state is asserted as soon as it is detected; if it is non-zero, say n, then the assertion condition must exist for n+1 consecutive samples before the corresponding assertion event is reported. This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorLowerCriticalThreshold": {
    "name": "outletSensorLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as an unsigned integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorLowerWarningThreshold": {
    "name": "outletSensorLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as an unsigned integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorUpperCriticalThreshold": {
    "name": "outletSensorUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as an unsigned integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorUpperWarningThreshold": {
    "name": "outletSensorUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as an unsigned integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorEnabledThresholds": {
    "name": "outletSensorEnabledThresholds",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "lowerCritical": 0,
        "lowerWarning": 1,
        "upperWarning": 2,
        "upperCritical": 3
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A bit string which indicates which thresholds are enabled. This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorSignedMaximum": {
    "name": "outletSensorSignedMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as a signed integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorSignedMinimum": {
    "name": "outletSensorSignedMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as a signed integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. This value determines whether to use the signed or unsigned threshold and value columns: If the minimum is below zero the sensor can have negative readings and the signed columns should be used. This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorSignedLowerCriticalThreshold": {
    "name": "outletSensorSignedLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as a signed integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorSignedLowerWarningThreshold": {
    "name": "outletSensorSignedLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as a signed integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorSignedUpperCriticalThreshold": {
    "name": "outletSensorSignedUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as a signed integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletSensorSignedUpperWarningThreshold": {
    "name": "outletSensorSignedUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.4.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as a signed integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletPoleSensorConfigurationTable": {
    "name": "outletPoleSensorConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of outlet pole sensor configuration entries. The number of entries is given by the value of outletPoleCount."
  },
  "outletPoleSensorConfigurationEntry": {
    "name": "outletPoleSensorConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "outletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleIndex",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing objects for configuring an outlet pole sensor."
  },
  "outletPoleIndex": {
    "name": "outletPoleIndex",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each outlet Pole. Its value ranges between 1 and the value of outletPoleCount."
  },
  "outletPoleSensorLogAvailable": {
    "name": "outletPoleSensorLogAvailable",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Is logging enabled for the sensor?"
  },
  "outletPoleSensorUnits": {
    "name": "outletPoleSensorUnits",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorUnitsEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The base units. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorDecimalDigits": {
    "name": "outletPoleSensorDecimalDigits",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of digits displayed to the right of the decimal point. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorAccuracy": {
    "name": "outletPoleSensorAccuracy",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HundredthsOfAPercentage",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The accuracy: how close (in percent) the measurement is to the actual value. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorResolution": {
    "name": "outletPoleSensorResolution",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The resolution: the minimum difference between any two measured values The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 50 and outletPoleSensorDecimalDigits is 2, then actual value is 0.05. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorTolerance": {
    "name": "outletPoleSensorTolerance",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The resolution: the difference between a sensor value and the actual value The value of this OID variable should be scaled by (outletPoleSensorDecimalDigits + 1). For example, if the value is 50 and outletPoleSensorDecimalDigits is 2, then actual value is 0.05. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorMaximum": {
    "name": "outletPoleSensorMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as an unsigned integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled maximum exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorMinimum": {
    "name": "outletPoleSensorMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as an unsigned integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorHysteresis": {
    "name": "outletPoleSensorHysteresis",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The hysteresis used for deassertions The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorStateChangeDelay": {
    "name": "outletPoleSensorStateChangeDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The delay measured in samples before a state is asserted. If the value is zero, then the state is asserted as soon as it is detected; if it is non-zero, say n, then the assertion condition must exist for n+1 consecutive samples before the corresponding assertion event is reported. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorLowerCriticalThreshold": {
    "name": "outletPoleSensorLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as an unsigned integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorLowerWarningThreshold": {
    "name": "outletPoleSensorLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as an unsigned integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorUpperCriticalThreshold": {
    "name": "outletPoleSensorUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as an unsigned integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorUpperWarningThreshold": {
    "name": "outletPoleSensorUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as an unsigned integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorEnabledThresholds": {
    "name": "outletPoleSensorEnabledThresholds",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "lowerCritical": 0,
        "lowerWarning": 1,
        "upperWarning": 2,
        "upperCritical": 3
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A bit string which indicates which thresholds are enabled. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorSignedMaximum": {
    "name": "outletPoleSensorSignedMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as a signed integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorSignedMinimum": {
    "name": "outletPoleSensorSignedMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as a signed integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value determines whether to use the signed or unsigned threshold and value columns: If the minimum is below zero the sensor can have negative readings and the signed columns should be used. This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorSignedLowerCriticalThreshold": {
    "name": "outletPoleSensorSignedLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as a signed integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorSignedLowerWarningThreshold": {
    "name": "outletPoleSensorSignedLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as a signed integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorSignedUpperCriticalThreshold": {
    "name": "outletPoleSensorSignedUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as a signed integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "outletPoleSensorSignedUpperWarningThreshold": {
    "name": "outletPoleSensorSignedUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.5.6.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as a signed integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "externalSensorConfigurationTable": {
    "name": "externalSensorConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of externalSensor configuration entries. The number of entries is given by the value of externalSensorCount for the PDU."
  },
  "externalSensorConfigurationEntry": {
    "name": "externalSensorConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorID",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing parameters for an external sensor."
  },
  "sensorID": {
    "name": "sensorID",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each sensor. Its value ranges between 1 and the value of externalSensorCount."
  },
  "externalSensorType": {
    "name": "externalSensorType",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorTypeEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The type of sensor."
  },
  "externalSensorSerialNumber": {
    "name": "externalSensorSerialNumber",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor serial number."
  },
  "externalSensorName": {
    "name": "externalSensorName",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The user-defined name."
  },
  "externalSensorDescription": {
    "name": "externalSensorDescription",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The user-defined description."
  },
  "externalSensorXCoordinate": {
    "name": "externalSensorXCoordinate",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The X coordinate."
  },
  "externalSensorYCoordinate": {
    "name": "externalSensorYCoordinate",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Y coordinate."
  },
  "externalSensorZCoordinate": {
    "name": "externalSensorZCoordinate",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Z coordinate."
  },
  "externalSensorChannelNumber": {
    "name": "externalSensorChannelNumber",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The channel number, applies only to contact sensors; -1 for other sensors"
  },
  "externalOnOffSensorSubtype": {
    "name": "externalOnOffSensorSubtype",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorTypeEnumeration",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The subtype of the binary sensor"
  },
  "externalSensorLogAvailable": {
    "name": "externalSensorLogAvailable",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Is logging available for this sensor?"
  },
  "externalSensorUnits": {
    "name": "externalSensorUnits",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorUnitsEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The base units This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors. "
  },
  "externalSensorDecimalDigits": {
    "name": "externalSensorDecimalDigits",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of digits displayed to the right of the decimal point This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorAccuracy": {
    "name": "externalSensorAccuracy",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HundredthsOfAPercentage",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The accuracy: how close (in percent) the measurement is to the actual value This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorResolution": {
    "name": "externalSensorResolution",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The resolution: the minimum difference between any two measured values The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorTolerance": {
    "name": "externalSensorTolerance",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The resolution: the difference between a sensor value and the actual value The value of this OID variable should be scaled by (externalSensorDecimalDigits + 1). For example, if the value is 50 and externalSensorDecimalDigits is 2, then actual value is 0.05. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorMaximum": {
    "name": "externalSensorMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible value The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorMinimum": {
    "name": "externalSensorMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible value The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorHysteresis": {
    "name": "externalSensorHysteresis",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The hysteresis used for deassertions The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorStateChangeDelay": {
    "name": "externalSensorStateChangeDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The delay measured in samples before a state is asserted. If the value is zero, then the state is asserted as soon as it is detected; if it is non-zero, say n, then the assertion condition must exist for n+1 consecutive samples before the corresponding assertion event is reported. At present, this value cannot be written (set)"
  },
  "externalSensorLowerCriticalThreshold": {
    "name": "externalSensorLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorLowerWarningThreshold": {
    "name": "externalSensorLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower non-critical (warning) threshold The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorUpperCriticalThreshold": {
    "name": "externalSensorUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorUpperWarningThreshold": {
    "name": "externalSensorUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper non-critical (warning) threshold The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorEnabledThresholds": {
    "name": "externalSensorEnabledThresholds",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "lowerCritical": 0,
        "lowerWarning": 1,
        "upperWarning": 2,
        "upperCritical": 3
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A bit string which indicates which thresholds are enabled. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors "
  },
  "externalSensorIsActuator": {
    "name": "externalSensorIsActuator",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is this an actuator? True: It is an actuator False: It is not an actuator"
  },
  "externalSensorPosition": {
    "name": "externalSensorPosition",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The position of the sensor. The format is a semicolon separated list of Keyword:value pairs - Keyword1:Value1;Keyword2:value2;... Keyword can be one of the following: ONBOARD, DEVICE-1WIREPORT, HUBPORT, CHAIN-POSITION Examples 1) Onboard Sensor ONBOARD:CC1 2) Old sensor connected to device 1-wire port DEVICE-1WIREPORT:2 3) New style sensor connected to device 1-wire port DEVICE-1WIREPORT:2;CHAIN-POSITION:3 4) New style sensor connected to hub port 3 DEVICE-1WIREPORT:2;CHAIN-POSITION:1;HUBPORT:3;CHAIN-POSITION:1 5) Old style sensor connected to end of new style sensor chain DEVICE-1WIREPORT:2; "
  },
  "externalSensorUseDefaultThresholds": {
    "name": "externalSensorUseDefaultThresholds",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Use default thresholds for this sensor? True: Use Default thresholds for this sensor False: Do not Use Default thresholds for this sensor"
  },
  "externalSensorAlarmedToNormalDelay": {
    "name": "externalSensorAlarmedToNormalDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.6.3.1.39",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The delay in seconds for transitions from the alarmed state to the normal state. If the sensor type is motionDetection, then it can set to a value greater >= 0 For all other sensor types, the value is 0 and cannot be set to any other value. "
  },
  "externalSensorTypeDefaultThresholdsTable": {
    "name": "externalSensorTypeDefaultThresholdsTable",
    "oid": "1.3.6.1.4.1.13742.6.3.6.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of entries listing the default thresholds for each sensor type. "
  },
  "externalSensorTypeDefaultThresholdsEntry": {
    "name": "externalSensorTypeDefaultThresholdsEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.6.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing default thresholds for a sensor type."
  },
  "externalSensorTypeDefaultHysteresis": {
    "name": "externalSensorTypeDefaultHysteresis",
    "oid": "1.3.6.1.4.1.13742.6.3.6.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The hysteresis used for deassertions The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorTypeDefaultStateChangeDelay": {
    "name": "externalSensorTypeDefaultStateChangeDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.6.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The delay measured in samples before a state is asserted. If the value is zero, then the state is asserted as soon as it is detected; if it is non-zero, say n, then the assertion condition must exist for n+1 consecutive samples before the corresponding assertion event is reported. At present, this value cannot be written (set)"
  },
  "externalSensorTypeDefaultLowerCriticalThreshold": {
    "name": "externalSensorTypeDefaultLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.6.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorTypeDefaultLowerWarningThreshold": {
    "name": "externalSensorTypeDefaultLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.6.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower non-critical (warning) threshold The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorTypeDefaultUpperCriticalThreshold": {
    "name": "externalSensorTypeDefaultUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.6.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorTypeDefaultUpperWarningThreshold": {
    "name": "externalSensorTypeDefaultUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.6.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper non-critical (warning) threshold The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors."
  },
  "externalSensorTypeDefaultEnabledThresholds": {
    "name": "externalSensorTypeDefaultEnabledThresholds",
    "oid": "1.3.6.1.4.1.13742.6.3.6.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "lowerCritical": 0,
        "lowerWarning": 1,
        "upperWarning": 2,
        "upperCritical": 3
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A bit string which indicates which thresholds are enabled. This parameter does not apply to onOff, trip, vibration, waterDetection, smokeDetection sensors "
  },
  "serverReachabilityTable": {
    "name": "serverReachabilityTable",
    "oid": "1.3.6.1.4.1.13742.6.3.7.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of server entries. The number of entries is given by the value of serverCount for the PDU."
  },
  "serverReachabilityEntry": {
    "name": "serverReachabilityEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.7.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "serverID",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing parameters for a server."
  },
  "serverID": {
    "name": "serverID",
    "oid": "1.3.6.1.4.1.13742.6.3.7.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each server. Its value ranges between 1 and the value of serverCount for that PDU"
  },
  "serverIPAddress": {
    "name": "serverIPAddress",
    "oid": "1.3.6.1.4.1.13742.6.3.7.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The IP Address/host name of the server"
  },
  "serverPingEnabled": {
    "name": "serverPingEnabled",
    "oid": "1.3.6.1.4.1.13742.6.3.7.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Is ping enabled for this server?"
  },
  "wireConfigurationTable": {
    "name": "wireConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.8.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "deprecated",
    "description": "A list of wire configuration entries. The number of entries is given by the value of wireCount for the PDU."
  },
  "wireConfigurationEntry": {
    "name": "wireConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.8.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "wireId",
        "implied": 0
      }
    ],
    "status": "deprecated",
    "description": "An entry containing objects for a particular wire."
  },
  "wireId": {
    "name": "wireId",
    "oid": "1.3.6.1.4.1.13742.6.3.8.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "deprecated",
    "description": "A unique value for each wire. Its value ranges between 1 and the value of wireCount."
  },
  "wireLabel": {
    "name": "wireLabel",
    "oid": "1.3.6.1.4.1.13742.6.3.8.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The label on the PDU identifying the wire."
  },
  "wireCapabilities": {
    "name": "wireCapabilities",
    "oid": "1.3.6.1.4.1.13742.6.3.8.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "rmsCurrent": 0,
        "peakCurrent": 1,
        "unbalancedCurrent": 2,
        "rmsVoltage": 3,
        "activePower": 4,
        "apparentPower": 5,
        "powerFactor": 6,
        "activeEnergy": 7,
        "apparentEnergy": 8
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "A bit string which indicates which wire sensors are available."
  },
  "wirePowerSource": {
    "name": "wirePowerSource",
    "oid": "1.3.6.1.4.1.13742.6.3.8.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowPointer",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "This object allows discovery of how the PDU is wired. It indicates the wire's power source which can one of the following: overCurrentProtector transfer switch inlet If the power source is an OverCurrentProtector, it contains the OID of an overCurrentProtectorLabel in the overCurrentProtectorConfiguration Table. The index of the OID can then be used to reference other objects in the overCurrentProtectorConfigurationTable. If the power source is an inlet, it contains the OID of an inletLabel in the inletConfigurationTable. The index of the OID can then be used to reference other objects in the inletConfigurationTable. If the power source is a transferSwitch, it contains the OID of a transferSwitchLabel in the transferSwitchConfiguration Table. The index of the OID can then be used to reference other objects in the transferSwitchConfigurationTable. "
  },
  "wireSensorConfigurationTable": {
    "name": "wireSensorConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "deprecated",
    "description": "A list of wireSensor configuration entries."
  },
  "wireSensorConfigurationEntry": {
    "name": "wireSensorConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "wireId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "deprecated",
    "description": "An wireSensor entry containing objects for a particular wire Sensor."
  },
  "wireSensorLogAvailable": {
    "name": "wireSensorLogAvailable",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "Is logging available for this sensor?"
  },
  "wireSensorUnits": {
    "name": "wireSensorUnits",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorUnitsEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The base units"
  },
  "wireSensorDecimalDigits": {
    "name": "wireSensorDecimalDigits",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The number of digits displayed to the right of the decimal point."
  },
  "wireSensorAccuracy": {
    "name": "wireSensorAccuracy",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HundredthsOfAPercentage",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The accuracy: how close (in percent) the measurement is to the actual value"
  },
  "wireSensorResolution": {
    "name": "wireSensorResolution",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The resolution: the minimum difference between any two measured values The value of this OID variable should be scaled by wireSensorDecimalDigits. For example, if the value is 1 and wireSensorDecimalDigits is 2, then actual value is 0.01."
  },
  "wireSensorTolerance": {
    "name": "wireSensorTolerance",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The resolution: the difference between a sensor value and the actual value The value of this OID variable should be scaled by (wireSensorDecimalDigits + 1). For example, if the value is 50 and wireSensorDecimalDigits is 2, then actual value is 0.05."
  },
  "wireSensorMaximum": {
    "name": "wireSensorMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The largest possible value The value of this OID variable should be scaled by wireSensorDecimalDigits. For example, if the value is 1 and wireSensorDecimalDigits is 2, then actual value is 0.01."
  },
  "wireSensorMinimum": {
    "name": "wireSensorMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The smallest possible value The value of this OID variable should be scaled by wireSensorDecimalDigits. For example, if the value is 1 and wireSensorDecimalDigits is 2, then actual value is 0.01."
  },
  "wireSensorHysteresis": {
    "name": "wireSensorHysteresis",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "The hysteresis used for deassertions The value of this OID variable should be scaled by wireSensorDecimalDigits. For example, if the value is 1 and wireSensorDecimalDigits is 2, then actual value is 0.01."
  },
  "wireSensorStateChangeDelay": {
    "name": "wireSensorStateChangeDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "The delay measured in samples before a state is asserted. If the value is zero, then the state is asserted as soon as it is detected; if it is non-zero, say n, then the assertion condition must exist for n+1 consecutive samples before the corresponding assertion event is reported. At present, this value cannot be written (set)"
  },
  "wireSensorLowerCriticalThreshold": {
    "name": "wireSensorLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "The lower critical threshold The value of this OID variable should be scaled by wireSensorDecimalDigits. For example, if the value is 1 and wireSensorDecimalDigits is 2, then actual value is 0.01."
  },
  "wireSensorLowerWarningThreshold": {
    "name": "wireSensorLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "The lower non-critical (warning) threshold The value of this OID variable should be scaled by wireSensorDecimalDigits. For example, if the value is 1 and wireSensorDecimalDigits is 2, then actual value is 0.01."
  },
  "wireSensorUpperCriticalThreshold": {
    "name": "wireSensorUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "The upper critical threshold The value of this OID variable should be scaled by wireSensorDecimalDigits. For example, if the value is 1 and wireSensorDecimalDigits is 2, then actual value is 0.01."
  },
  "wireSensorUpperWarningThreshold": {
    "name": "wireSensorUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "The upper non-critical (warning) threshold The value of this OID variable should be scaled by wireSensorDecimalDigits. For example, if the value is 1 and wireSensorDecimalDigits is 2, then actual value is 0.01."
  },
  "wireSensorEnabledThresholds": {
    "name": "wireSensorEnabledThresholds",
    "oid": "1.3.6.1.4.1.13742.6.3.8.4.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "lowerCritical": 0,
        "lowerWarning": 1,
        "upperWarning": 2,
        "upperCritical": 3
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "A bit string which indicates which thresholds are enabled."
  },
  "transferSwitchConfigurationTable": {
    "name": "transferSwitchConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.9.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of transfer switch configuration entries. The number of entries is given by the value of transferSwitchCount."
  },
  "transferSwitchConfigurationEntry": {
    "name": "transferSwitchConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.9.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing objects for a particular transferSwitch."
  },
  "transferSwitchId": {
    "name": "transferSwitchId",
    "oid": "1.3.6.1.4.1.13742.6.3.9.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each transfer switch. Its value ranges between 1 and the value of transferSwitchCount."
  },
  "transferSwitchLabel": {
    "name": "transferSwitchLabel",
    "oid": "1.3.6.1.4.1.13742.6.3.9.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The label on the PDU identifying the TS."
  },
  "transferSwitchName": {
    "name": "transferSwitchName",
    "oid": "1.3.6.1.4.1.13742.6.3.9.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The user-defined name of the transferSwitch."
  },
  "transferSwitchPreferredInlet": {
    "name": "transferSwitchPreferredInlet",
    "oid": "1.3.6.1.4.1.13742.6.3.9.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The preferred Inlet. The TS powers the outlet from the preferred inlet when acceptable power is available from the preferred inlet. "
  },
  "transferSwitchPoleCount": {
    "name": "transferSwitchPoleCount",
    "oid": "1.3.6.1.4.1.13742.6.3.9.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 2,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of poles."
  },
  "transferSwitchAutoReTransferEnabled": {
    "name": "transferSwitchAutoReTransferEnabled",
    "oid": "1.3.6.1.4.1.13742.6.3.9.3.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The TS can be configured to automatically retransfer back to the preferred inlet when power is restored. Re-transfer only occurs if this variable is true."
  },
  "transferSwitchAutoReTransferWaitTime": {
    "name": "transferSwitchAutoReTransferWaitTime",
    "oid": "1.3.6.1.4.1.13742.6.3.9.3.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Auto Re-Transfer Wait Time. Re-transfer occurs this many seconds after the condition causing the original transfer has been corrected."
  },
  "transferSwitchAutoReTransferRequiresPhaseSync": {
    "name": "transferSwitchAutoReTransferRequiresPhaseSync",
    "oid": "1.3.6.1.4.1.13742.6.3.9.3.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "If this parameter is False, then do not retransfer if there is a PHASE_SYNC_FAULT in effect. A PHASE_SYNC_FAULT occurs when the phase difference between the inlets is too high."
  },
  "transferSwitchFrontPanelManualTransferButtonEnabled": {
    "name": "transferSwitchFrontPanelManualTransferButtonEnabled",
    "oid": "1.3.6.1.4.1.13742.6.3.9.3.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "If this parameter is false, then manual transfers caused by pressing the front panel switch are disabled. "
  },
  "transferSwitchCapabilities": {
    "name": "transferSwitchCapabilities",
    "oid": "1.3.6.1.4.1.13742.6.3.9.3.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "overloadStatus": 32,
        "inletPhaseSyncAngle": 37,
        "inletPhaseSync": 38,
        "operatingState": 39,
        "activeInlet": 40,
        "switchStatus": 47
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bit string which indicates which sensors are available for the transfer switch."
  },
  "transferSwitchPowerSource1": {
    "name": "transferSwitchPowerSource1",
    "oid": "1.3.6.1.4.1.13742.6.3.9.3.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowPointer",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object allows discovery of how the PDU is wired. It indicates the transferSwitch's first power source which can one of the following: overCurrentProtector transfer switch inlet If the power source is an OverCurrentProtector, it contains the OID of an overCurrentProtectorLabel in the overCurrentProtectorConfiguration Table. The index of the OID can then be used to reference other objects in the overCurrentProtectorConfigurationTable. If the power source is an inlet, it contains the OID of an inletLabel in the inletConfigurationTable. The index of the OID can then be used to reference other objects in the inletConfigurationTable. If the power source is a transferSwitch, it contains the OID of a transferSwitchLabel in the transferSwitchConfiguration Table. The index of the OID can then be used to reference other objects in the transferSwitchConfigurationTable. "
  },
  "transferSwitchPowerSource2": {
    "name": "transferSwitchPowerSource2",
    "oid": "1.3.6.1.4.1.13742.6.3.9.3.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowPointer",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object allows discovery of how the PDU is wired. It indicates the transferSwitch's second power source which can one of the following: overCurrentProtector transfer switch inlet If the power source is an OverCurrentProtector, it contains the OID of an overCurrentProtectorLabel in the overCurrentProtectorConfiguration Table. The index of the OID can then be used to reference other objects in the overCurrentProtectorConfigurationTable. If the power source is an inlet, it contains the OID of an inletLabel in the inletConfigurationTable. The index of the OID can then be used to reference other objects in the inletConfigurationTable. If the power source is a transferSwitch, it contains the OID of a transferSwitchLabel in the transferSwitchConfiguration Table. The index of the OID can then be used to reference other objects in the transferSwitchConfigurationTable "
  },
  "transferSwitchPoleConfigurationTable": {
    "name": "transferSwitchPoleConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.9.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of transferSwitch pole configuration entries. The number of entries is given by the value of transferSwitchPoleCount."
  },
  "transferSwitchPoleConfigurationEntry": {
    "name": "transferSwitchPoleConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.9.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchPoleIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing parametersfor a particular outlet pole."
  },
  "transferSwitchPoleIndex": {
    "name": "transferSwitchPoleIndex",
    "oid": "1.3.6.1.4.1.13742.6.3.9.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each transferSwitch Pole. Its value ranges between 1 and the value of transferSwitchPoleCount."
  },
  "transferSwitchPoleLine": {
    "name": "transferSwitchPoleLine",
    "oid": "1.3.6.1.4.1.13742.6.3.9.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LineEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The Phase for this transferSwitch Pole. "
  },
  "transferSwitchPoleIn1Node": {
    "name": "transferSwitchPoleIn1Node",
    "oid": "1.3.6.1.4.1.13742.6.3.9.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The node to which this transferSwitch pole Input 1 is connected"
  },
  "transferSwitchPoleIn2Node": {
    "name": "transferSwitchPoleIn2Node",
    "oid": "1.3.6.1.4.1.13742.6.3.9.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The node to which this transferSwitch pole Input 2 is connected"
  },
  "transferSwitchPoleOutNode": {
    "name": "transferSwitchPoleOutNode",
    "oid": "1.3.6.1.4.1.13742.6.3.9.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The node to which this transferSwitch pole Output is connected"
  },
  "transferSwitchSensorConfigurationTable": {
    "name": "transferSwitchSensorConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of transfer switch sensor configuration entries. "
  },
  "transferSwitchSensorConfigurationEntry": {
    "name": "transferSwitchSensorConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing parameters for a transfer switch sensor."
  },
  "transferSwitchSensorLogAvailable": {
    "name": "transferSwitchSensorLogAvailable",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Is logging available for this sensor?"
  },
  "transferSwitchSensorUnits": {
    "name": "transferSwitchSensorUnits",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorUnitsEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The base units. This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorDecimalDigits": {
    "name": "transferSwitchSensorDecimalDigits",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of digits displayed to the right of the decimal point This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorAccuracy": {
    "name": "transferSwitchSensorAccuracy",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HundredthsOfAPercentage",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The accuracy: how close (in percent) the measurement is to the actual value This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorResolution": {
    "name": "transferSwitchSensorResolution",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The resolution: the minimum difference between any two measured values The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorTolerance": {
    "name": "transferSwitchSensorTolerance",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The resolution: the difference between a sensor value and the actual value The value of this OID variable should be scaled by (transferSwitchSensorDecimalDigits + 1). For example, if the value is 50 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.05. This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorMaximum": {
    "name": "transferSwitchSensorMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as an unsigned integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled maximum exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorMinimum": {
    "name": "transferSwitchSensorMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as an unsigned integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorHysteresis": {
    "name": "transferSwitchSensorHysteresis",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The hysteresis used for deassertions The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorStateChangeDelay": {
    "name": "transferSwitchSensorStateChangeDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The delay measured in samples before a state is asserted. If the value is zero, then the state is asserted as soon as it is detected; if it is non-zero, say n, then the assertion condition must exist for n+1 consecutive samples before the corresponding assertion event is reported. This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorLowerCriticalThreshold": {
    "name": "transferSwitchSensorLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as an unsigned integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorLowerWarningThreshold": {
    "name": "transferSwitchSensorLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as an unsigned integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorUpperCriticalThreshold": {
    "name": "transferSwitchSensorUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as an unsigned integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorUpperWarningThreshold": {
    "name": "transferSwitchSensorUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as an unsigned integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorEnabledThresholds": {
    "name": "transferSwitchSensorEnabledThresholds",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "lowerCritical": 0,
        "lowerWarning": 1,
        "upperWarning": 2,
        "upperCritical": 3
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A bit string which indicates which thresholds are enabled. This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorSignedMaximum": {
    "name": "transferSwitchSensorSignedMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as a signed integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorSignedMinimum": {
    "name": "transferSwitchSensorSignedMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as a signed integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. This value determines whether to use the signed or unsigned threshold and value columns: If the minimum is below zero the sensor can have negative readings and the signed columns should be used. This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorSignedLowerCriticalThreshold": {
    "name": "transferSwitchSensorSignedLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as a signed integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorSignedLowerWarningThreshold": {
    "name": "transferSwitchSensorSignedLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as a signed integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorSignedUpperCriticalThreshold": {
    "name": "transferSwitchSensorSignedUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as a signed integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "transferSwitchSensorSignedUpperWarningThreshold": {
    "name": "transferSwitchSensorSignedUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.9.4.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as a signed integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "powerMeterConfigurationTable": {
    "name": "powerMeterConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.10.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of power meter and panel configuration entries."
  },
  "powerMeterConfigurationEntry": {
    "name": "powerMeterConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.10.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing configuration objects for power meters and panels."
  },
  "powerMeterPhaseCTRating": {
    "name": "powerMeterPhaseCTRating",
    "oid": "1.3.6.1.4.1.13742.6.3.10.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The rating of the Phase CT in A, or 0 if the CT is disabled. At present, read-only access; see MIN-ACCESS in MODULE-COMPLIANCE ModulecomplianceRev2"
  },
  "powerMeterNeutralCTRating": {
    "name": "powerMeterNeutralCTRating",
    "oid": "1.3.6.1.4.1.13742.6.3.10.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The rating of the Neutral CT in A, or 0 if the CT is disabled. At present, read-only access; see MIN-ACCESS in MODULE-COMPLIANCE ModulecomplianceRev2"
  },
  "powerMeterEarthCTRating": {
    "name": "powerMeterEarthCTRating",
    "oid": "1.3.6.1.4.1.13742.6.3.10.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The rating of the Earth CT in A, or 0 if the CT is disabled. At present, read-only access; see MIN-ACCESS in MODULE-COMPLIANCE ModulecomplianceRev2"
  },
  "powerMeterBranchCount": {
    "name": "powerMeterBranchCount",
    "oid": "1.3.6.1.4.1.13742.6.3.10.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": " The maximum number of circuits supported by the panel. (The number of user configured circuits is in unitConfigurationTable(pduId).circuitCount.) It can be used to distinguish between power meters and panels. If value > 0, then panel (BCM) else power meter "
  },
  "powerMeterPanelPositions": {
    "name": "powerMeterPanelPositions",
    "oid": "1.3.6.1.4.1.13742.6.3.10.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of circuit positions in the panel. Its value is specified by the user when configuring a panel "
  },
  "powerMeterPanelLayout": {
    "name": "powerMeterPanelLayout",
    "oid": "1.3.6.1.4.1.13742.6.3.10.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PanelLayoutEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": " valid only for panels (powerMeterCircuitPositionCount > 0); invalid for power meters (powerMeterCircuitPositionCount = 0): value returned is invalid(-1). The panel circuit position layout: single column, two columns."
  },
  "powerMeterPanelNumbering": {
    "name": "powerMeterPanelNumbering",
    "oid": "1.3.6.1.4.1.13742.6.3.10.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PanelNumberingEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": " valid only for panels (powerMeterCircuitPositionCount > 0); invalid for power meters (powerMeterCircuitPositionCount = 0): value returned is invalid(-1). The panel circuit position numbering scheme: odd/even, sequential. "
  },
  "powerMeterType": {
    "name": "powerMeterType",
    "oid": "1.3.6.1.4.1.13742.6.3.10.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PowerMeterTypeEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The power meter type: 3-phase, single-phase, split-phase. "
  },
  "circuitConfigurationTable": {
    "name": "circuitConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.11.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of circuit configuration entries. The number of entries is given by the value of panelCircuitPositionCount."
  },
  "circuitConfigurationEntry": {
    "name": "circuitConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.11.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing configuration objects for the circuit."
  },
  "circuitId": {
    "name": "circuitId",
    "oid": "1.3.6.1.4.1.13742.6.3.11.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each circuit. circuitId is defined as follows. It is the circuit position in the panel "
  },
  "circuitPoleCount": {
    "name": "circuitPoleCount",
    "oid": "1.3.6.1.4.1.13742.6.3.11.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of circuit positions (poles) in the circuit."
  },
  "circuitName": {
    "name": "circuitName",
    "oid": "1.3.6.1.4.1.13742.6.3.11.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The user-defined name for the circuit. At present, read-only access; see MIN-ACCESS in MODULE-COMPLIANCE ModulecomplianceRev2"
  },
  "circuitType": {
    "name": "circuitType",
    "oid": "1.3.6.1.4.1.13742.6.3.11.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CircuitTypeEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The type of circuit: singlePhaseL_L, singlePhaseL_N, twoPhase,threePhase"
  },
  "circuitRatedCurrent": {
    "name": "circuitRatedCurrent",
    "oid": "1.3.6.1.4.1.13742.6.3.11.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The rating of the breaker for the circuit in A. At present, read-only access; see MIN-ACCESS in MODULE-COMPLIANCE ModulecomplianceRev2"
  },
  "circuitCTRating": {
    "name": "circuitCTRating",
    "oid": "1.3.6.1.4.1.13742.6.3.11.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The rating of the CTs metering this circuit in A. At present, read-only access; see MIN-ACCESS in MODULE-COMPLIANCE ModulecomplianceRev2"
  },
  "circuitCapabilities": {
    "name": "circuitCapabilities",
    "oid": "1.3.6.1.4.1.13742.6.3.11.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "rmsCurrent": 0,
        "peakCurrent": 1,
        "unbalancedCurrent": 2,
        "rmsVoltage": 3,
        "activePower": 4,
        "apparentPower": 5,
        "powerFactor": 6,
        "activeEnergy": 7,
        "apparentEnergy": 8,
        "surgeProtectorStatus": 21,
        "frequency": 22,
        "phaseAngle": 23,
        "residualCurrent": 25,
        "rcmState": 26,
        "reactivePower": 28,
        "powerQuality": 31,
        "displacementPowerFactor": 34
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bit string which indicates which sensors are available for the circuit."
  },
  "circuitPoleCapabilities": {
    "name": "circuitPoleCapabilities",
    "oid": "1.3.6.1.4.1.13742.6.3.11.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "rmsCurrent": 0,
        "peakCurrent": 1,
        "rmsVoltage": 3,
        "activePower": 4,
        "apparentPower": 5,
        "powerFactor": 6,
        "activeEnergy": 7,
        "apparentEnergy": 8,
        "phaseAngle": 23,
        "rmsVoltageLN": 24,
        "reactivePower": 28,
        "displacementPowerFactor": 34
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bit string which indicates which sensors are available for the circuit pole."
  },
  "circuitPowerSource": {
    "name": "circuitPowerSource",
    "oid": "1.3.6.1.4.1.13742.6.3.11.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowPointer",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object allows discovery of how the circuit is wired. It indicates the circuit's power source which can one of the following: Inlet It contains the OID of an inletLabel in the inletConfigurationTable. The index of the OID can then be used to reference other objects in the inletConfigurationTable. "
  },
  "circuitPoleConfigurationTable": {
    "name": "circuitPoleConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.11.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of Panel Circuit Pole configuration entries. The number of entries is given by the value of circuitPoleCount for the circuit."
  },
  "circuitPoleConfigurationEntry": {
    "name": "circuitPoleConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.11.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing configuration objects for the circuit poles."
  },
  "circuitPoleId": {
    "name": "circuitPoleId",
    "oid": "1.3.6.1.4.1.13742.6.3.11.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each circuit Pole. Its value ranges between 1 and the value of circuitPoleCount."
  },
  "circuitPolePanelPosition": {
    "name": "circuitPolePanelPosition",
    "oid": "1.3.6.1.4.1.13742.6.3.11.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The circuit position for this pole."
  },
  "circuitPoleCTNumber": {
    "name": "circuitPoleCTNumber",
    "oid": "1.3.6.1.4.1.13742.6.3.11.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The CT Number for this circuit Pole, or 0 if no CT is present. At present, read-only access; see MIN-ACCESS in MODULE-COMPLIANCE ModulecomplianceRev2"
  },
  "circuitPolePhase": {
    "name": "circuitPolePhase",
    "oid": "1.3.6.1.4.1.13742.6.3.11.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhaseEnumeration",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Phase for this circuit Pole. At present, read-only access; see MIN-ACCESS in MODULE-COMPLIANCE ModulecomplianceRev2"
  },
  "circuitSensorConfigurationTable": {
    "name": "circuitSensorConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of configuration entries for an inlet sensor."
  },
  "circuitSensorConfigurationEntry": {
    "name": "circuitSensorConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing objects for configuring an inlet sensor."
  },
  "circuitSensorLogAvailable": {
    "name": "circuitSensorLogAvailable",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Is logging enabled for the sensor?"
  },
  "circuitSensorUnits": {
    "name": "circuitSensorUnits",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorUnitsEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The base units. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorDecimalDigits": {
    "name": "circuitSensorDecimalDigits",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of digits displayed to the right of the decimal point. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorResolution": {
    "name": "circuitSensorResolution",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The resolution: the minimum difference between any two measured values The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorMaximum": {
    "name": "circuitSensorMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled maximum exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorMinimum": {
    "name": "circuitSensorMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorHysteresis": {
    "name": "circuitSensorHysteresis",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The hysteresis used for deassertions The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorStateChangeDelay": {
    "name": "circuitSensorStateChangeDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The delay measured in samples before a state is asserted. If the value is zero, then the state is asserted as soon as it is detected; if it is non-zero, say n, then the assertion condition must exist for n+1 consecutive samples before the corresponding assertion event is reported. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorLowerCriticalThreshold": {
    "name": "circuitSensorLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorLowerWarningThreshold": {
    "name": "circuitSensorLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorUpperCriticalThreshold": {
    "name": "circuitSensorUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorUpperWarningThreshold": {
    "name": "circuitSensorUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorEnabledThresholds": {
    "name": "circuitSensorEnabledThresholds",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "lowerCritical": 0,
        "lowerWarning": 1,
        "upperWarning": 2,
        "upperCritical": 3
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A bit string which indicates which thresholds are enabled. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorSignedMaximum": {
    "name": "circuitSensorSignedMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorSignedMinimum": {
    "name": "circuitSensorSignedMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value determines whether to use the signed or unsigned threshold and value columns: If the minimum is below zero the sensor can have negative readings and the signed columns should be used. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorSignedLowerCriticalThreshold": {
    "name": "circuitSensorSignedLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorSignedLowerWarningThreshold": {
    "name": "circuitSensorSignedLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorSignedUpperCriticalThreshold": {
    "name": "circuitSensorSignedUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitSensorSignedUpperWarningThreshold": {
    "name": "circuitSensorSignedUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.4.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitPoleSensorConfigurationTable": {
    "name": "circuitPoleSensorConfigurationTable",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of configuration entries for a circuit's pole sensors."
  },
  "circuitPoleSensorConfigurationEntry": {
    "name": "circuitPoleSensorConfigurationEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing objects for configuring an inlet pole sensor."
  },
  "circuitPoleSensorLogAvailable": {
    "name": "circuitPoleSensorLogAvailable",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Is logging enabled for the sensor?"
  },
  "circuitPoleSensorUnits": {
    "name": "circuitPoleSensorUnits",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorUnitsEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The base units. This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorDecimalDigits": {
    "name": "circuitPoleSensorDecimalDigits",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of digits displayed to the right of the decimal point. This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorResolution": {
    "name": "circuitPoleSensorResolution",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The resolution: the minimum difference between any two measured values The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorMaximum": {
    "name": "circuitPoleSensorMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled maximum exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorMinimum": {
    "name": "circuitPoleSensorMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorHysteresis": {
    "name": "circuitPoleSensorHysteresis",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The hysteresis used for deassertions The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorStateChangeDelay": {
    "name": "circuitPoleSensorStateChangeDelay",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The delay measured in samples before a state is asserted. If the value is zero, then the state is asserted as soon as it is detected; if it is non-zero, say n, then the assertion condition must exist for n+1 consecutive samples before the corresponding assertion event is reported. This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorLowerCriticalThreshold": {
    "name": "circuitPoleSensorLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorLowerWarningThreshold": {
    "name": "circuitPoleSensorLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorUpperCriticalThreshold": {
    "name": "circuitPoleSensorUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorUpperWarningThreshold": {
    "name": "circuitPoleSensorUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is clamped if the scaled threshold exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorEnabledThresholds": {
    "name": "circuitPoleSensorEnabledThresholds",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "lowerCritical": 0,
        "lowerWarning": 1,
        "upperWarning": 2,
        "upperCritical": 3
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A bit string which indicates which thresholds are enabled. This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorSignedMaximum": {
    "name": "circuitPoleSensorSignedMaximum",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The largest possible reading as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorSignedMinimum": {
    "name": "circuitPoleSensorSignedMinimum",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The smallest possible reading as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value determines whether to use the signed or unsigned threshold and value columns: If the minimum is below zero the sensor can have negative readings and the signed columns should be used. This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorSignedLowerCriticalThreshold": {
    "name": "circuitPoleSensorSignedLowerCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower critical threshold as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorSignedLowerWarningThreshold": {
    "name": "circuitPoleSensorSignedLowerWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The lower warning threshold as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorSignedUpperCriticalThreshold": {
    "name": "circuitPoleSensorSignedUpperCriticalThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper critical threshold as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "circuitPoleSensorSignedUpperWarningThreshold": {
    "name": "circuitPoleSensorSignedUpperWarningThreshold",
    "oid": "1.3.6.1.4.1.13742.6.3.11.6.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The upper warning threshold as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. The value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "peripheralDevicePackageTable": {
    "name": "peripheralDevicePackageTable",
    "oid": "1.3.6.1.4.1.13742.6.3.6.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of entries for the peripheral Device Packages connected to each PDU. The number of entries is given by the value of peripheralDevicePackagesCount."
  },
  "peripheralDevicePackageEntry": {
    "name": "peripheralDevicePackageEntry",
    "oid": "1.3.6.1.4.1.13742.6.3.6.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDevicePackageId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing objects for a controller."
  },
  "peripheralDevicePackageId": {
    "name": "peripheralDevicePackageId",
    "oid": "1.3.6.1.4.1.13742.6.3.6.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each peripheral device package."
  },
  "peripheralDevicePackageSerialNumber": {
    "name": "peripheralDevicePackageSerialNumber",
    "oid": "1.3.6.1.4.1.13742.6.3.6.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The peripheral device package serial number."
  },
  "peripheralDevicePackageModel": {
    "name": "peripheralDevicePackageModel",
    "oid": "1.3.6.1.4.1.13742.6.3.6.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The peripheral device package model. Examples are DX-D2C6, DPX2-T1, DPX2-T1H1, DPX2-T2H1, DPX2-T3H1"
  },
  "peripheralDevicePackageFirmwareVersion": {
    "name": "peripheralDevicePackageFirmwareVersion",
    "oid": "1.3.6.1.4.1.13742.6.3.6.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The peripheral device package firmware version."
  },
  "peripheralDevicePackageMinFirmwareVersion": {
    "name": "peripheralDevicePackageMinFirmwareVersion",
    "oid": "1.3.6.1.4.1.13742.6.3.6.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The peripheral device package minimum firmware version. This field may be empty. If it is not empty, then it shall not be possible to downgrade the peripheral device firmware to a version < minimum firmware version number."
  },
  "peripheralDevicePackageFirmwareTimeStamp": {
    "name": "peripheralDevicePackageFirmwareTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.3.6.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The time when the peripheralDevicePackage firmware was updated in UNIX(epoch)time. It is measured in seconds relative to January 1, 1970 (midnight UTC/GMT), i.e a value of 0 indicates January 1, 1970 (midnight UTC/GMT)."
  },
  "peripheralDevicePackagePosition": {
    "name": "peripheralDevicePackagePosition",
    "oid": "1.3.6.1.4.1.13742.6.3.6.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The position of the package. The format is a semicolon separated list of Keyword:value pairs - Keyword1:Value1;Keyword2:value2;... Keyword can be one of the following: ONBOARD, DEVICE-1WIREPORT, HUBPORT, CHAIN-POSITION Examples 1) Onboard Sensor ONBOARD:CC1 2) Old sensor connected to device 1-wire port DEVICE-1WIREPORT:2 3) New style sensor connected to device 1-wire port DEVICE-1WIREPORT:2;CHAIN-POSITION:3 4) New style sensor connected to hub port 3 DEVICE-1WIREPORT:2;CHAIN-POSITION:1;HUBPORT:3;CHAIN-POSITION:1 5) Old style sensor connected to end of new style sensor chain DEVICE-1WIREPORT:2; "
  },
  "peripheralDevicePackageState": {
    "name": "peripheralDevicePackageState",
    "oid": "1.3.6.1.4.1.13742.6.3.6.5.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The state of the package."
  },
  "logIndexTable": {
    "name": "logIndexTable",
    "oid": "1.3.6.1.4.1.13742.6.6.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of log entries."
  },
  "logIndexEntry": {
    "name": "logIndexEntry",
    "oid": "1.3.6.1.4.1.13742.6.6.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the log containing sensor data."
  },
  "oldestLogID": {
    "name": "oldestLogID",
    "oid": "1.3.6.1.4.1.13742.6.6.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The index of the oldest data in the buffer for this PDU."
  },
  "newestLogID": {
    "name": "newestLogID",
    "oid": "1.3.6.1.4.1.13742.6.6.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The index of the newest data in the buffer for this PDU."
  },
  "logTimeStampTable": {
    "name": "logTimeStampTable",
    "oid": "1.3.6.1.4.1.13742.6.6.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of entries containing the timestamps of the entries in the log."
  },
  "logTimeStampEntry": {
    "name": "logTimeStampEntry",
    "oid": "1.3.6.1.4.1.13742.6.6.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "logIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing the timestamp for log entries."
  },
  "logIndex": {
    "name": "logIndex",
    "oid": "1.3.6.1.4.1.13742.6.6.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A unique value for each entry in the log. Its value ranges between 1 and the value of logSize."
  },
  "logTimeStamp": {
    "name": "logTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.6.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The time when the data was collected. It is measured in seconds relative to January 1, 1970 (midnight UTC/GMT), i.e a value of 0 indicates January 1, 1970 (midnight UTC/GMT)."
  },
  "unitSensorLogTable": {
    "name": "unitSensorLogTable",
    "oid": "1.3.6.1.4.1.13742.6.6.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of unit sensor entries in the log."
  },
  "unitSensorLogEntry": {
    "name": "unitSensorLogEntry",
    "oid": "1.3.6.1.4.1.13742.6.6.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "logIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing log objects for an unit sensor."
  },
  "logUnitSensorDataAvailable": {
    "name": "logUnitSensorDataAvailable",
    "oid": "1.3.6.1.4.1.13742.6.6.1.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is data available for this sensor during this measurement period?"
  },
  "logUnitSensorState": {
    "name": "logUnitSensorState",
    "oid": "1.3.6.1.4.1.13742.6.6.1.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "logUnitSensorAvgValue": {
    "name": "logUnitSensorAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.1.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logUnitSensorMaxValue": {
    "name": "logUnitSensorMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.1.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logUnitSensorMinValue": {
    "name": "logUnitSensorMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.1.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logUnitSensorSignedAvgValue": {
    "name": "logUnitSensorSignedAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.1.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logUnitSensorSignedMaxValue": {
    "name": "logUnitSensorSignedMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.1.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logUnitSensorSignedMinValue": {
    "name": "logUnitSensorSignedMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.1.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "inletSensorLogTable": {
    "name": "inletSensorLogTable",
    "oid": "1.3.6.1.4.1.13742.6.6.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of inlet sensor entries. The number of entries is given by the value of inletCount for the PDU."
  },
  "inletSensorLogEntry": {
    "name": "inletSensorLogEntry",
    "oid": "1.3.6.1.4.1.13742.6.6.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "inletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "logIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing log objects for an inlet sensor."
  },
  "logInletSensorDataAvailable": {
    "name": "logInletSensorDataAvailable",
    "oid": "1.3.6.1.4.1.13742.6.6.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is data available for this sensor during this measurement period?"
  },
  "logInletSensorState": {
    "name": "logInletSensorState",
    "oid": "1.3.6.1.4.1.13742.6.6.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "logInletSensorAvgValue": {
    "name": "logInletSensorAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logInletSensorMaxValue": {
    "name": "logInletSensorMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.2.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logInletSensorMinValue": {
    "name": "logInletSensorMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.2.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logInletSensorSignedAvgValue": {
    "name": "logInletSensorSignedAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.2.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logInletSensorSignedMaxValue": {
    "name": "logInletSensorSignedMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.2.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logInletSensorSignedMinValue": {
    "name": "logInletSensorSignedMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.2.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "inletPoleSensorLogTable": {
    "name": "inletPoleSensorLogTable",
    "oid": "1.3.6.1.4.1.13742.6.6.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of inletPole sensor entries. The number of entries is given by the value of inletPoleCount for the inlet."
  },
  "inletPoleSensorLogEntry": {
    "name": "inletPoleSensorLogEntry",
    "oid": "1.3.6.1.4.1.13742.6.6.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "inletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleIndex",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "logIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing log objects for an inletPole sensor."
  },
  "logInletPoleSensorDataAvailable": {
    "name": "logInletPoleSensorDataAvailable",
    "oid": "1.3.6.1.4.1.13742.6.6.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is data available for this sensor during this measurement period?"
  },
  "logInletPoleSensorState": {
    "name": "logInletPoleSensorState",
    "oid": "1.3.6.1.4.1.13742.6.6.2.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "logInletPoleSensorAvgValue": {
    "name": "logInletPoleSensorAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.2.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logInletPoleSensorMaxValue": {
    "name": "logInletPoleSensorMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.2.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logInletPoleSensorMinValue": {
    "name": "logInletPoleSensorMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.2.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logInletPoleSensorSignedAvgValue": {
    "name": "logInletPoleSensorSignedAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.2.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logInletPoleSensorSignedMaxValue": {
    "name": "logInletPoleSensorSignedMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.2.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logInletPoleSensorSignedMinValue": {
    "name": "logInletPoleSensorSignedMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.2.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "outletSensorLogTable": {
    "name": "outletSensorLogTable",
    "oid": "1.3.6.1.4.1.13742.6.6.4.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of outlet sensor entries. The number of entries is given by the value of outletCount for the PDU."
  },
  "outletSensorLogEntry": {
    "name": "outletSensorLogEntry",
    "oid": "1.3.6.1.4.1.13742.6.6.4.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "outletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "logIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing log objects for an outlet sensor."
  },
  "logOutletSensorDataAvailable": {
    "name": "logOutletSensorDataAvailable",
    "oid": "1.3.6.1.4.1.13742.6.6.4.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is data available for this sensor during this measurement period?"
  },
  "logOutletSensorState": {
    "name": "logOutletSensorState",
    "oid": "1.3.6.1.4.1.13742.6.6.4.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "logOutletSensorAvgValue": {
    "name": "logOutletSensorAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.4.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logOutletSensorMaxValue": {
    "name": "logOutletSensorMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.4.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logOutletSensorMinValue": {
    "name": "logOutletSensorMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.4.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logOutletSensorSignedAvgValue": {
    "name": "logOutletSensorSignedAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.4.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logOutletSensorSignedMaxValue": {
    "name": "logOutletSensorSignedMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.4.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logOutletSensorSignedMinValue": {
    "name": "logOutletSensorSignedMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.4.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "outletPoleSensorLogTable": {
    "name": "outletPoleSensorLogTable",
    "oid": "1.3.6.1.4.1.13742.6.6.4.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of outletPole sensor entries. The number of entries is given by the value of outletPoleCount for the outlet."
  },
  "outletPoleSensorLogEntry": {
    "name": "outletPoleSensorLogEntry",
    "oid": "1.3.6.1.4.1.13742.6.6.4.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "outletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleIndex",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "logIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing log objects for an outletPole sensor."
  },
  "logOutletPoleSensorDataAvailable": {
    "name": "logOutletPoleSensorDataAvailable",
    "oid": "1.3.6.1.4.1.13742.6.6.4.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is data available for this sensor during this measurement period?"
  },
  "logOutletPoleSensorState": {
    "name": "logOutletPoleSensorState",
    "oid": "1.3.6.1.4.1.13742.6.6.4.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "logOutletPoleSensorAvgValue": {
    "name": "logOutletPoleSensorAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.4.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logOutletPoleSensorMaxValue": {
    "name": "logOutletPoleSensorMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.4.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logOutletPoleSensorMinValue": {
    "name": "logOutletPoleSensorMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.4.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logOutletPoleSensorSignedAvgValue": {
    "name": "logOutletPoleSensorSignedAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.4.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logOutletPoleSensorSignedMaxValue": {
    "name": "logOutletPoleSensorSignedMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.4.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logOutletPoleSensorSignedMinValue": {
    "name": "logOutletPoleSensorSignedMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.4.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 1 and outletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "overCurrentProtectorSensorLogTable": {
    "name": "overCurrentProtectorSensorLogTable",
    "oid": "1.3.6.1.4.1.13742.6.6.3.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of overCurrentProtector sensor entries. The number of entries is given by the value of overCurrentProtectorCount for the PDU."
  },
  "overCurrentProtectorSensorLogEntry": {
    "name": "overCurrentProtectorSensorLogEntry",
    "oid": "1.3.6.1.4.1.13742.6.6.3.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorIndex",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "logIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing log objects for an overCurrentProtector sensor."
  },
  "logOverCurrentProtectorSensorDataAvailable": {
    "name": "logOverCurrentProtectorSensorDataAvailable",
    "oid": "1.3.6.1.4.1.13742.6.6.3.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is data available for this sensor during this measurement period?"
  },
  "logOverCurrentProtectorSensorState": {
    "name": "logOverCurrentProtectorSensorState",
    "oid": "1.3.6.1.4.1.13742.6.6.3.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "logOverCurrentProtectorSensorAvgValue": {
    "name": "logOverCurrentProtectorSensorAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.3.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logOverCurrentProtectorSensorMaxValue": {
    "name": "logOverCurrentProtectorSensorMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.3.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logOverCurrentProtectorSensorMinValue": {
    "name": "logOverCurrentProtectorSensorMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.3.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logOverCurrentProtectorSensorSignedAvgValue": {
    "name": "logOverCurrentProtectorSensorSignedAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.3.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logOverCurrentProtectorSensorSignedMaxValue": {
    "name": "logOverCurrentProtectorSensorSignedMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.3.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logOverCurrentProtectorSensorSignedMinValue": {
    "name": "logOverCurrentProtectorSensorSignedMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.3.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "externalSensorLogTable": {
    "name": "externalSensorLogTable",
    "oid": "1.3.6.1.4.1.13742.6.6.5.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of external sensor entries. The number of entries is given by the value of externalSensorCount for the PDU."
  },
  "externalSensorLogEntry": {
    "name": "externalSensorLogEntry",
    "oid": "1.3.6.1.4.1.13742.6.6.5.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorID",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "logIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing log objects for an external sensor."
  },
  "logExternalSensorDataAvailable": {
    "name": "logExternalSensorDataAvailable",
    "oid": "1.3.6.1.4.1.13742.6.6.5.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is data available for this sensor during this measurement period?"
  },
  "logExternalSensorState": {
    "name": "logExternalSensorState",
    "oid": "1.3.6.1.4.1.13742.6.6.5.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "logExternalSensorAvgValue": {
    "name": "logExternalSensorAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.5.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading average value. The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01."
  },
  "logExternalSensorMaxValue": {
    "name": "logExternalSensorMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.5.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading maximum value. The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01."
  },
  "logExternalSensorMinValue": {
    "name": "logExternalSensorMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.5.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading minimum value. The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01."
  },
  "wireSensorLogTable": {
    "name": "wireSensorLogTable",
    "oid": "1.3.6.1.4.1.13742.6.6.6.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "deprecated",
    "description": "A list of wire sensor entries. The number of entries is given by the value of wireCount for the PDU."
  },
  "wireSensorLogEntry": {
    "name": "wireSensorLogEntry",
    "oid": "1.3.6.1.4.1.13742.6.6.6.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "wireId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "logIndex",
        "implied": 0
      }
    ],
    "status": "deprecated",
    "description": "An entry containing log objects for a wire sensor."
  },
  "logWireSensorDataAvailable": {
    "name": "logWireSensorDataAvailable",
    "oid": "1.3.6.1.4.1.13742.6.6.6.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "Is data available for this sensor during this measurement period?"
  },
  "logWireSensorState": {
    "name": "logWireSensorState",
    "oid": "1.3.6.1.4.1.13742.6.6.6.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The sensor state."
  },
  "logWireSensorAvgValue": {
    "name": "logWireSensorAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.6.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The sensor reading average value. The value of this OID variable should be scaled by wireSensorDecimalDigits. For example, if the value is 1 and wireSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the value exceeds 4294967295"
  },
  "logWireSensorMaxValue": {
    "name": "logWireSensorMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.6.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The sensor reading maximum value. The value of this OID variable should be scaled by wireSensorDecimalDigits. For example, if the value is 1 and wireSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the value exceeds 4294967295"
  },
  "logWireSensorMinValue": {
    "name": "logWireSensorMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.6.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The sensor reading minimum value. The value of this OID variable should be scaled by wireSensorDecimalDigits. For example, if the value is 1 and wireSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the value exceeds 4294967295."
  },
  "transferSwitchSensorLogTable": {
    "name": "transferSwitchSensorLogTable",
    "oid": "1.3.6.1.4.1.13742.6.6.7.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of Transfer Switch sensor entries. The number of entries is given by the value of transferSwitchCount for the PDU."
  },
  "transferSwitchSensorLogEntry": {
    "name": "transferSwitchSensorLogEntry",
    "oid": "1.3.6.1.4.1.13742.6.6.7.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "logIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing log objects for a transfer switch sensor."
  },
  "logTransferSwitchSensorDataAvailable": {
    "name": "logTransferSwitchSensorDataAvailable",
    "oid": "1.3.6.1.4.1.13742.6.6.7.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is data available for this sensor during this measurement period?"
  },
  "logTransferSwitchSensorState": {
    "name": "logTransferSwitchSensorState",
    "oid": "1.3.6.1.4.1.13742.6.6.7.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "logTransferSwitchSensorAvgValue": {
    "name": "logTransferSwitchSensorAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.7.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logTransferSwitchSensorMaxValue": {
    "name": "logTransferSwitchSensorMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.7.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logTransferSwitchSensorMinValue": {
    "name": "logTransferSwitchSensorMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.7.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logTransferSwitchSensorSignedAvgValue": {
    "name": "logTransferSwitchSensorSignedAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.7.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logTransferSwitchSensorSignedMaxValue": {
    "name": "logTransferSwitchSensorSignedMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.7.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logTransferSwitchSensorSignedMinValue": {
    "name": "logTransferSwitchSensorSignedMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.7.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "circuitSensorLogTable": {
    "name": "circuitSensorLogTable",
    "oid": "1.3.6.1.4.1.13742.6.6.8.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of Circuit sensor log entries. The number of entries is given by the value of panelinletCount for the Floor PDU."
  },
  "circuitSensorLogEntry": {
    "name": "circuitSensorLogEntry",
    "oid": "1.3.6.1.4.1.13742.6.6.8.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "logIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing log objects for a circuit sensor."
  },
  "logCircuitSensorDataAvailable": {
    "name": "logCircuitSensorDataAvailable",
    "oid": "1.3.6.1.4.1.13742.6.6.8.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is data available for this sensor during this measurement period?"
  },
  "logCircuitSensorState": {
    "name": "logCircuitSensorState",
    "oid": "1.3.6.1.4.1.13742.6.6.8.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "logCircuitSensorAvgValue": {
    "name": "logCircuitSensorAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.8.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logCircuitSensorMaxValue": {
    "name": "logCircuitSensorMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.8.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logCircuitSensorMinValue": {
    "name": "logCircuitSensorMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.8.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logCircuitSensorSignedAvgValue": {
    "name": "logCircuitSensorSignedAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.8.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logCircuitSensorSignedMaxValue": {
    "name": "logCircuitSensorSignedMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.8.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logCircuitSensorSignedMinValue": {
    "name": "logCircuitSensorSignedMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.8.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "circuitPoleSensorLogTable": {
    "name": "circuitPoleSensorLogTable",
    "oid": "1.3.6.1.4.1.13742.6.6.8.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of circuit pole sensor log entries. The number of entries is given by the value of panelCircuitPoleCount for the circut."
  },
  "circuitPoleSensorLogEntry": {
    "name": "circuitPoleSensorLogEntry",
    "oid": "1.3.6.1.4.1.13742.6.6.8.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "logIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing log objects for a circuit pole sensor."
  },
  "logCircuitPoleSensorDataAvailable": {
    "name": "logCircuitPoleSensorDataAvailable",
    "oid": "1.3.6.1.4.1.13742.6.6.8.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is data available for this sensor during this measurement period?"
  },
  "logCircuitPoleSensorState": {
    "name": "logCircuitPoleSensorState",
    "oid": "1.3.6.1.4.1.13742.6.6.8.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "logCircuitPoleSensorAvgValue": {
    "name": "logCircuitPoleSensorAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.8.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logCircuitPoleSensorMaxValue": {
    "name": "logCircuitPoleSensorMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.8.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logCircuitPoleSensorMinValue": {
    "name": "logCircuitPoleSensorMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.8.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings."
  },
  "logCircuitPoleSensorSignedAvgValue": {
    "name": "logCircuitPoleSensorSignedAvgValue",
    "oid": "1.3.6.1.4.1.13742.6.6.8.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The average sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logCircuitPoleSensorSignedMaxValue": {
    "name": "logCircuitPoleSensorSignedMaxValue",
    "oid": "1.3.6.1.4.1.13742.6.6.8.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "logCircuitPoleSensorSignedMinValue": {
    "name": "logCircuitPoleSensorSignedMinValue",
    "oid": "1.3.6.1.4.1.13742.6.6.8.5.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum sensor reading for the log period as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647)."
  },
  "unitSensorMeasurementsTable": {
    "name": "unitSensorMeasurementsTable",
    "oid": "1.3.6.1.4.1.13742.6.5.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of unit sensor entries."
  },
  "unitSensorMeasurementsEntry": {
    "name": "unitSensorMeasurementsEntry",
    "oid": "1.3.6.1.4.1.13742.6.5.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing measurement objects for an unit sensor."
  },
  "measurementsUnitSensorIsAvailable": {
    "name": "measurementsUnitSensorIsAvailable",
    "oid": "1.3.6.1.4.1.13742.6.5.1.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is the sensor available?"
  },
  "measurementsUnitSensorState": {
    "name": "measurementsUnitSensorState",
    "oid": "1.3.6.1.4.1.13742.6.5.1.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "measurementsUnitSensorValue": {
    "name": "measurementsUnitSensorValue",
    "oid": "1.3.6.1.4.1.13742.6.5.1.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as an unsigned integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. power supply status sensors."
  },
  "measurementsUnitSensorTimeStamp": {
    "name": "measurementsUnitSensorTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.5.1.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The timestamp."
  },
  "measurementsUnitSensorSignedValue": {
    "name": "measurementsUnitSensorSignedValue",
    "oid": "1.3.6.1.4.1.13742.6.5.1.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as a signed integer. The value of this OID variable should be scaled by unitSensorDecimalDigits. For example, if the value is 1 and unitSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. power supply status sensors."
  },
  "inletSensorMeasurementsTable": {
    "name": "inletSensorMeasurementsTable",
    "oid": "1.3.6.1.4.1.13742.6.5.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of inlet sensor entries. The number of entries is given by the value of inletCount for the PDU."
  },
  "inletSensorMeasurementsEntry": {
    "name": "inletSensorMeasurementsEntry",
    "oid": "1.3.6.1.4.1.13742.6.5.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "inletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing measurement objects for an inlet sensor."
  },
  "measurementsInletSensorIsAvailable": {
    "name": "measurementsInletSensorIsAvailable",
    "oid": "1.3.6.1.4.1.13742.6.5.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is the sensor available?"
  },
  "measurementsInletSensorState": {
    "name": "measurementsInletSensorState",
    "oid": "1.3.6.1.4.1.13742.6.5.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "measurementsInletSensorValue": {
    "name": "measurementsInletSensorValue",
    "oid": "1.3.6.1.4.1.13742.6.5.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "measurementsInletSensorTimeStamp": {
    "name": "measurementsInletSensorTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.5.2.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The timestamp."
  },
  "measurementsInletSensorSignedValue": {
    "name": "measurementsInletSensorSignedValue",
    "oid": "1.3.6.1.4.1.13742.6.5.2.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "inletPoleSensorMeasurementsTable": {
    "name": "inletPoleSensorMeasurementsTable",
    "oid": "1.3.6.1.4.1.13742.6.5.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of inletPole sensor entries. The number of entries is given by the value of inletPoleCount for the inlet."
  },
  "inletPoleSensorMeasurementsEntry": {
    "name": "inletPoleSensorMeasurementsEntry",
    "oid": "1.3.6.1.4.1.13742.6.5.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "inletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleIndex",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing measurement objects for an inletPole sensor."
  },
  "measurementsInletPoleSensorIsAvailable": {
    "name": "measurementsInletPoleSensorIsAvailable",
    "oid": "1.3.6.1.4.1.13742.6.5.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is the sensor available?"
  },
  "measurementsInletPoleSensorState": {
    "name": "measurementsInletPoleSensorState",
    "oid": "1.3.6.1.4.1.13742.6.5.2.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "measurementsInletPoleSensorValue": {
    "name": "measurementsInletPoleSensorValue",
    "oid": "1.3.6.1.4.1.13742.6.5.2.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as an unsigned integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "measurementsInletPoleSensorTimeStamp": {
    "name": "measurementsInletPoleSensorTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.5.2.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The timestamp."
  },
  "measurementsInletPoleSensorSignedValue": {
    "name": "measurementsInletPoleSensorSignedValue",
    "oid": "1.3.6.1.4.1.13742.6.5.2.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as a signed integer. The value of this OID variable should be scaled by inletPoleSensorDecimalDigits. For example, if the value is 1 and inletPoleSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "outletSensorMeasurementsTable": {
    "name": "outletSensorMeasurementsTable",
    "oid": "1.3.6.1.4.1.13742.6.5.4.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of outlet sensor entries. The number of entries is given by the value of outletCount for the PDU."
  },
  "outletSensorMeasurementsEntry": {
    "name": "outletSensorMeasurementsEntry",
    "oid": "1.3.6.1.4.1.13742.6.5.4.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "outletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing measurement objects for an outlet sensor."
  },
  "measurementsOutletSensorIsAvailable": {
    "name": "measurementsOutletSensorIsAvailable",
    "oid": "1.3.6.1.4.1.13742.6.5.4.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is the sensor available?"
  },
  "measurementsOutletSensorState": {
    "name": "measurementsOutletSensorState",
    "oid": "1.3.6.1.4.1.13742.6.5.4.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "measurementsOutletSensorValue": {
    "name": "measurementsOutletSensorValue",
    "oid": "1.3.6.1.4.1.13742.6.5.4.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as an unsigned integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "measurementsOutletSensorTimeStamp": {
    "name": "measurementsOutletSensorTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.5.4.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The timestamp."
  },
  "measurementsOutletSensorSignedValue": {
    "name": "measurementsOutletSensorSignedValue",
    "oid": "1.3.6.1.4.1.13742.6.5.4.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as a signed integer. The value of this OID variable should be scaled by outletSensorDecimalDigits. For example, if the value is 1 and outletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. outlet state sensors."
  },
  "outletPoleSensorMeasurementsTable": {
    "name": "outletPoleSensorMeasurementsTable",
    "oid": "1.3.6.1.4.1.13742.6.5.4.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of outletPole sensor entries. The number of entries is given by the value of outletPoletCount for the outlet."
  },
  "outletPoleSensorMeasurementsEntry": {
    "name": "outletPoleSensorMeasurementsEntry",
    "oid": "1.3.6.1.4.1.13742.6.5.4.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "outletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleIndex",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing measurement objects for an outletPole sensor."
  },
  "measurementsOutletPoleSensorIsAvailable": {
    "name": "measurementsOutletPoleSensorIsAvailable",
    "oid": "1.3.6.1.4.1.13742.6.5.4.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is the sensor available?"
  },
  "measurementsOutletPoleSensorState": {
    "name": "measurementsOutletPoleSensorState",
    "oid": "1.3.6.1.4.1.13742.6.5.4.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "measurementsOutletPoleSensorValue": {
    "name": "measurementsOutletPoleSensorValue",
    "oid": "1.3.6.1.4.1.13742.6.5.4.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as an unsigned integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 50 and outletPoleSensorDecimalDigits is 2, then actual value is 0.05. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading."
  },
  "measurementsOutletPoleSensorTimeStamp": {
    "name": "measurementsOutletPoleSensorTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.5.4.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The timestamp."
  },
  "measurementsOutletPoleSensorSignedValue": {
    "name": "measurementsOutletPoleSensorSignedValue",
    "oid": "1.3.6.1.4.1.13742.6.5.4.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as a signed integer. The value of this OID variable should be scaled by outletPoleSensorDecimalDigits. For example, if the value is 50 and outletPoleSensorDecimalDigits is 2, then actual value is 0.05. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading."
  },
  "overCurrentProtectorSensorMeasurementsTable": {
    "name": "overCurrentProtectorSensorMeasurementsTable",
    "oid": "1.3.6.1.4.1.13742.6.5.3.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of overCurrentProtector sensor entries. The number of entries is given by the value of overCurrentProtectorCount for the PDU."
  },
  "overCurrentProtectorSensorMeasurementsEntry": {
    "name": "overCurrentProtectorSensorMeasurementsEntry",
    "oid": "1.3.6.1.4.1.13742.6.5.3.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorIndex",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing measurement objects for an overCurrentProtector."
  },
  "measurementsOverCurrentProtectorSensorIsAvailable": {
    "name": "measurementsOverCurrentProtectorSensorIsAvailable",
    "oid": "1.3.6.1.4.1.13742.6.5.3.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is the sensor available?"
  },
  "measurementsOverCurrentProtectorSensorState": {
    "name": "measurementsOverCurrentProtectorSensorState",
    "oid": "1.3.6.1.4.1.13742.6.5.3.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "measurementsOverCurrentProtectorSensorValue": {
    "name": "measurementsOverCurrentProtectorSensorValue",
    "oid": "1.3.6.1.4.1.13742.6.5.3.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as an unsigned integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "measurementsOverCurrentProtectorSensorTimeStamp": {
    "name": "measurementsOverCurrentProtectorSensorTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.5.3.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The timestamp."
  },
  "measurementsOverCurrentProtectorSensorSignedValue": {
    "name": "measurementsOverCurrentProtectorSensorSignedValue",
    "oid": "1.3.6.1.4.1.13742.6.5.3.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as a signed integer. The value of this OID variable should be scaled by overCurrentProtectorSensorDecimalDigits. For example, if the value is 1 and overCurrentProtectorSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. trip sensors."
  },
  "externalSensorMeasurementsTable": {
    "name": "externalSensorMeasurementsTable",
    "oid": "1.3.6.1.4.1.13742.6.5.5.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of external sensor entries. The number of entries is given by the value of externalSensorCount for the PDU."
  },
  "externalSensorMeasurementsEntry": {
    "name": "externalSensorMeasurementsEntry",
    "oid": "1.3.6.1.4.1.13742.6.5.5.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorID",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing measurement objects for an external sensor."
  },
  "measurementsExternalSensorIsAvailable": {
    "name": "measurementsExternalSensorIsAvailable",
    "oid": "1.3.6.1.4.1.13742.6.5.5.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is the sensor available?"
  },
  "measurementsExternalSensorState": {
    "name": "measurementsExternalSensorState",
    "oid": "1.3.6.1.4.1.13742.6.5.5.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "measurementsExternalSensorValue": {
    "name": "measurementsExternalSensorValue",
    "oid": "1.3.6.1.4.1.13742.6.5.5.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as a signed integer. The value of this OID variable should be scaled by externalSensorDecimalDigits. For example, if the value is 1 and externalSensorDecimalDigits is 2, then actual value is 0.01. This parameter does not apply to sensors without numerical reading, e.g. contact closure or smoke detection sensors."
  },
  "measurementsExternalSensorTimeStamp": {
    "name": "measurementsExternalSensorTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.5.5.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading timestamp."
  },
  "wireSensorMeasurementsTable": {
    "name": "wireSensorMeasurementsTable",
    "oid": "1.3.6.1.4.1.13742.6.5.6.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "deprecated",
    "description": "A list of wire sensor entries. The number of entries is given by the value of wireCount for the PDU."
  },
  "wireSensorMeasurementsEntry": {
    "name": "wireSensorMeasurementsEntry",
    "oid": "1.3.6.1.4.1.13742.6.5.6.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "wireId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "deprecated",
    "description": "An entry containing measurement objects for a wire."
  },
  "measurementsWireSensorIsAvailable": {
    "name": "measurementsWireSensorIsAvailable",
    "oid": "1.3.6.1.4.1.13742.6.5.6.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "Is the sensor available?"
  },
  "measurementsWireSensorState": {
    "name": "measurementsWireSensorState",
    "oid": "1.3.6.1.4.1.13742.6.5.6.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The sensor state."
  },
  "measurementsWireSensorValue": {
    "name": "measurementsWireSensorValue",
    "oid": "1.3.6.1.4.1.13742.6.5.6.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The sensor value. The value of this OID variable should be scaled by wireSensorDecimalDigits. For example, if the value is 1 and wireSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the value exceeds 4294967295 This parameter does not apply to sensors without numerical reading."
  },
  "measurementsWireSensorTimeStamp": {
    "name": "measurementsWireSensorTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.5.6.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The timestamp."
  },
  "transferSwitchSensorMeasurementsTable": {
    "name": "transferSwitchSensorMeasurementsTable",
    "oid": "1.3.6.1.4.1.13742.6.5.7.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of transfer switch sensor entries. The number of entries is given by the value of transferSwitchCount for the PDU."
  },
  "transferSwitchSensorMeasurementsEntry": {
    "name": "transferSwitchSensorMeasurementsEntry",
    "oid": "1.3.6.1.4.1.13742.6.5.7.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing measurement objects for a transfer switch."
  },
  "measurementsTransferSwitchSensorIsAvailable": {
    "name": "measurementsTransferSwitchSensorIsAvailable",
    "oid": "1.3.6.1.4.1.13742.6.5.7.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is the sensor available?"
  },
  "measurementsTransferSwitchSensorState": {
    "name": "measurementsTransferSwitchSensorState",
    "oid": "1.3.6.1.4.1.13742.6.5.7.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "measurementsTransferSwitchSensorValue": {
    "name": "measurementsTransferSwitchSensorValue",
    "oid": "1.3.6.1.4.1.13742.6.5.7.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as an unsigned integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "measurementsTransferSwitchSensorTimeStamp": {
    "name": "measurementsTransferSwitchSensorTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.5.7.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The timestamp."
  },
  "measurementsTransferSwitchSensorSignedValue": {
    "name": "measurementsTransferSwitchSensorSignedValue",
    "oid": "1.3.6.1.4.1.13742.6.5.7.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as a signed integer. The value of this OID variable should be scaled by transferSwitchSensorDecimalDigits. For example, if the value is 1 and transferSwitchSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. operational state or switch fault sensors."
  },
  "circuitSensorMeasurementsTable": {
    "name": "circuitSensorMeasurementsTable",
    "oid": "1.3.6.1.4.1.13742.6.5.8.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of circuit sensor entries. "
  },
  "circuitSensorMeasurementsEntry": {
    "name": "circuitSensorMeasurementsEntry",
    "oid": "1.3.6.1.4.1.13742.6.5.8.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing measurement objects for circuit sensor."
  },
  "measurementsCircuitSensorIsAvailable": {
    "name": "measurementsCircuitSensorIsAvailable",
    "oid": "1.3.6.1.4.1.13742.6.5.8.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is the sensor available?"
  },
  "measurementsCircuitSensorState": {
    "name": "measurementsCircuitSensorState",
    "oid": "1.3.6.1.4.1.13742.6.5.8.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "measurementsCircuitSensorValue": {
    "name": "measurementsCircuitSensorValue",
    "oid": "1.3.6.1.4.1.13742.6.5.8.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "measurementsCircuitSensorTimeStamp": {
    "name": "measurementsCircuitSensorTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.5.8.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The timestamp."
  },
  "measurementsCircuitSensorSignedValue": {
    "name": "measurementsCircuitSensorSignedValue",
    "oid": "1.3.6.1.4.1.13742.6.5.8.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "circuitPoleSensorMeasurementsTable": {
    "name": "circuitPoleSensorMeasurementsTable",
    "oid": "1.3.6.1.4.1.13742.6.5.8.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of panel circuit pole sensor entries. The number of entries is given by the value of inletCount for the PDU."
  },
  "circuitPoleSensorMeasurementsEntry": {
    "name": "circuitPoleSensorMeasurementsEntry",
    "oid": "1.3.6.1.4.1.13742.6.5.8.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing measurement objects for a circuit pole sensor."
  },
  "measurementsCircuitPoleSensorIsAvailable": {
    "name": "measurementsCircuitPoleSensorIsAvailable",
    "oid": "1.3.6.1.4.1.13742.6.5.8.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Is the sensor available?"
  },
  "measurementsCircuitPoleSensorState": {
    "name": "measurementsCircuitPoleSensorState",
    "oid": "1.3.6.1.4.1.13742.6.5.8.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor state."
  },
  "measurementsCircuitPoleSensorValue": {
    "name": "measurementsCircuitPoleSensorValue",
    "oid": "1.3.6.1.4.1.13742.6.5.8.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as an unsigned integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value will wrap around if the scaled sensor reading exceeds 4294967295. It is undefined for sensors which can have negative readings. This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "measurementsCircuitPoleSensorTimeStamp": {
    "name": "measurementsCircuitPoleSensorTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.5.8.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The timestamp."
  },
  "measurementsCircuitPoleSensorSignedValue": {
    "name": "measurementsCircuitPoleSensorSignedValue",
    "oid": "1.3.6.1.4.1.13742.6.5.8.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sensor reading as a signed integer. The value of this OID variable should be scaled by inletSensorDecimalDigits. For example, if the value is 1 and inletSensorDecimalDigits is 2, then actual value is 0.01. This value is undefined for sensors whose range exceeds the Integer32 range (-2147483648 .. 2147483647). This parameter does not apply to sensors without numerical reading, e.g. surge protector status sensors."
  },
  "outletSwitchControlTable": {
    "name": "outletSwitchControlTable",
    "oid": "1.3.6.1.4.1.13742.6.4.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of outlets for a PDU. The number of entries is given by the value of outletCount."
  },
  "outletSwitchControlEntry": {
    "name": "outletSwitchControlEntry",
    "oid": "1.3.6.1.4.1.13742.6.4.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "outletId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry for implementing switching operations on an outlet."
  },
  "switchingOperation": {
    "name": "switchingOperation",
    "oid": "1.3.6.1.4.1.13742.6.4.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OutletSwitchingOperationsEnumeration",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The switching operation."
  },
  "outletSwitchingState": {
    "name": "outletSwitchingState",
    "oid": "1.3.6.1.4.1.13742.6.4.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The outlet state at present"
  },
  "outletSwitchingTimeStamp": {
    "name": "outletSwitchingTimeStamp",
    "oid": "1.3.6.1.4.1.13742.6.4.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The timestamp indicating when the outlet was last switched"
  },
  "transferSwitchControlTable": {
    "name": "transferSwitchControlTable",
    "oid": "1.3.6.1.4.1.13742.6.4.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of transfer switches for a PDU. The number of entries is given by the value of transferSwitchCount."
  },
  "transferSwitchControlEntry": {
    "name": "transferSwitchControlEntry",
    "oid": "1.3.6.1.4.1.13742.6.4.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry for implementing switching operations on a transfer switch."
  },
  "transferSwitchActiveInlet": {
    "name": "transferSwitchActiveInlet",
    "oid": "1.3.6.1.4.1.13742.6.4.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The index of the currently active inlet."
  },
  "transferSwitchTransferToInlet": {
    "name": "transferSwitchTransferToInlet",
    "oid": "1.3.6.1.4.1.13742.6.4.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Select the active inlet. If the new inlet is available, it will become both active and preferred, otherwise an inconsistentValue error will be returned. By default the switching operation will fail if the phase difference between the inlets is too large. In this case the switch can be forced by writing transferSwitchAlarmOverride as True in the same request. This variable will always read as 0."
  },
  "transferSwitchAlarmOverride": {
    "name": "transferSwitchAlarmOverride",
    "oid": "1.3.6.1.4.1.13742.6.4.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Force transfer even if the phase difference between the inlets is too large. This may only be written together with transferSwitchTransferToInlet, otherwise an inconsistentValue error will be returned. Always reads as false."
  },
  "transferSwitchLastTransferReason": {
    "name": "transferSwitchLastTransferReason",
    "oid": "1.3.6.1.4.1.13742.6.4.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TransferSwitchTransferReasonEnumeration",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The reason for the most recent transfer"
  },
  "actuatorControlTable": {
    "name": "actuatorControlTable",
    "oid": "1.3.6.1.4.1.13742.6.4.4.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of actuators for a PDU. "
  },
  "actuatorControlEntry": {
    "name": "actuatorControlEntry",
    "oid": "1.3.6.1.4.1.13742.6.4.4.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorID",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry for implementing user-initiated state changes for an actuator."
  },
  "actuatorState": {
    "name": "actuatorState",
    "oid": "1.3.6.1.4.1.13742.6.4.4.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The actuator state. A Get operation retrieves the state of the actuator. A Set operation changes the stae of the sensor. The valid states for set operations are on and Off. Attempting to set the state to any other value will generate an error. "
  },
  "rcmSelfTestTable": {
    "name": "rcmSelfTestTable",
    "oid": "1.3.6.1.4.1.13742.6.4.5.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of RCMs. "
  },
  "rcmSelfTestEntry": {
    "name": "rcmSelfTestEntry",
    "oid": "1.3.6.1.4.1.13742.6.4.5.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "inletId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry for implementing self test of an RCM."
  },
  "rcmState": {
    "name": "rcmState",
    "oid": "1.3.6.1.4.1.13742.6.4.5.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SensorStateEnumeration",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The rcm state. A Get operation retrieves the state of the RCM State Sensor. A Set operation changes the state of the sensor. The valid state for set operations is selfTest. When rcmState is set to selfTest, self test of the RCM starts. Attempting to set the state to any other value will generate an error. If the current state is selfTest, then an attempt to set the value to selfTest will be ignored. "
  },
  "inletSensorControlTable": {
    "name": "inletSensorControlTable",
    "oid": "1.3.6.1.4.1.13742.6.4.6.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of control entries for the inlet sensors of a PDU. The set of valid indexes is defined by the value of inletCount and the inletDeviceCapabilities entry for the selected inlet."
  },
  "inletSensorControlEntry": {
    "name": "inletSensorControlEntry",
    "oid": "1.3.6.1.4.1.13742.6.4.6.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "inletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry used for controlling an inlet sensor."
  },
  "inletSensorResetValue": {
    "name": "inletSensorResetValue",
    "oid": "1.3.6.1.4.1.13742.6.4.6.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Writing to this variable sets a new value for the addressed sensor. Only accumulating sensors (e.g. energy counters) can be reset, and currently the only supported value is 0. Writing any other value returns an error. This variable will always read as 0."
  },
  "outletSensorControlTable": {
    "name": "outletSensorControlTable",
    "oid": "1.3.6.1.4.1.13742.6.4.7.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of control entries for the outlet sensors of a PDU. The set of valid indexes is defined by the value of outletCount and the outletDeviceCapabilities entry for the selected outlet."
  },
  "outletSensorControlEntry": {
    "name": "outletSensorControlEntry",
    "oid": "1.3.6.1.4.1.13742.6.4.7.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "outletId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry used for controlling an outlet sensor."
  },
  "outletSensorResetValue": {
    "name": "outletSensorResetValue",
    "oid": "1.3.6.1.4.1.13742.6.4.7.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Writing to this variable sets a new value for the addressed sensor. Only accumulating sensors (e.g. energy counters) can be reset, and currently the only supported value is 0. Writing any other value returns an error. This variable will always read as 0."
  },
  "unitSensorControlTable": {
    "name": "unitSensorControlTable",
    "oid": "1.3.6.1.4.1.13742.6.4.8.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of control entries for the global sensors of a PDU. The set of valid indexes is defined by the value of pduCount and the pduDeviceCapabilities entry."
  },
  "unitSensorControlEntry": {
    "name": "unitSensorControlEntry",
    "oid": "1.3.6.1.4.1.13742.6.4.8.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry used for controlling an global sensor."
  },
  "unitSensorResetValue": {
    "name": "unitSensorResetValue",
    "oid": "1.3.6.1.4.1.13742.6.4.8.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Writing to this variable sets a new value for the addressed sensor. Only accumulating sensors (e.g. energy counters) can be reset, and currently the only supported value is 0. Writing any other value returns an error. This variable will always read as 0. This object applies only to multi-inlet PDUs."
  },
  "circuitSensorControlTable": {
    "name": "circuitSensorControlTable",
    "oid": "1.3.6.1.4.1.13742.6.4.9.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of control entries for the circuit sensors of a BCM2. The maximum number of entries is given by the value of panelCircuitPositionCount."
  },
  "circuitSensorControlEntry": {
    "name": "circuitSensorControlEntry",
    "oid": "1.3.6.1.4.1.13742.6.4.9.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "pduId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitId",
        "implied": 0
      },
      {
        "module": "PDU2-MIB",
        "object": "sensorType",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry used for controlling an circuit sensor."
  },
  "circuitSensorResetValue": {
    "name": "circuitSensorResetValue",
    "oid": "1.3.6.1.4.1.13742.6.4.9.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Writing to this variable sets a new value for the addressed sensor. Only accumulating sensors (e.g. energy counters) can be reset, and currently the only supported value is 0. Writing any other value returns an error. This variable will always read as 0."
  },
  "reliabilityDataTableSequenceNumber": {
    "name": "reliabilityDataTableSequenceNumber",
    "oid": "1.3.6.1.4.1.13742.6.10.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The sequence number for updates to the reliability data table"
  },
  "reliabilityDataTable": {
    "name": "reliabilityDataTable",
    "oid": "1.3.6.1.4.1.13742.6.10.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of PDU reliability data entries."
  },
  "reliabilityDataEntry": {
    "name": "reliabilityDataEntry",
    "oid": "1.3.6.1.4.1.13742.6.10.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "reliabilityIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing reliability data for a particular PDU."
  },
  "reliabilityIndex": {
    "name": "reliabilityIndex",
    "oid": "1.3.6.1.4.1.13742.6.10.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Index of the entry in the table."
  },
  "reliabilityId": {
    "name": "reliabilityId",
    "oid": "1.3.6.1.4.1.13742.6.10.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Unique ID of the entry. POH Power on hours. CB.<label>.TRIPCNT Trip count of circuit breaker with label <label>. CTRL.<serial>.<addr>.MASTER.CSUMERRLASTHOUR Number of checksum errors in slave (controller board) to master (CPU board) communication in the last hour on controller with serial number <serial> and bus address <addr>. CTRL.<serial>.<addr>.SLAVE.CSUMERRLASTHOUR Number of checksum errors in master (CPU board) to slave (controller board) communication in the last hour on controller with serial number <serial> and bus address <addr>. CTRL.<serial>.<addr>.TOUTLASTHOUR Number of communication timeouts to controller with serial number <serial> and bus address <addr> in the last hour. CTRL.<serial>.<addr>.RLY.<num>.CYCLECNT Number of cycles the relay <num> on the controller board with serial number <serial> and bus address <addr> has made. A cycle is an off->on followed by an on->off event later. The count is increased on the off->on transition. CTRL.<serial>.<addr>.RLY.<num>.FAILLASTHOUR Number of failed switching operations on relay <num> on the controller board with serial number <serial> and bus address <addr> in the last hour. It depends on the specific controller board hardware and what error conditions are detected. "
  },
  "reliabilityDataValue": {
    "name": "reliabilityDataValue",
    "oid": "1.3.6.1.4.1.13742.6.10.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The normalized value"
  },
  "reliabilityDataMaxPossible": {
    "name": "reliabilityDataMaxPossible",
    "oid": "1.3.6.1.4.1.13742.6.10.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum possible normalized value"
  },
  "reliabilityDataWorstValue": {
    "name": "reliabilityDataWorstValue",
    "oid": "1.3.6.1.4.1.13742.6.10.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The worst normalized value seen so far"
  },
  "reliabilityDataThreshold": {
    "name": "reliabilityDataThreshold",
    "oid": "1.3.6.1.4.1.13742.6.10.1.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The normalized Threshold value "
  },
  "reliabilityDataRawUpperBytes": {
    "name": "reliabilityDataRawUpperBytes",
    "oid": "1.3.6.1.4.1.13742.6.10.1.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The Upper 4 bytes of the raw ( not normalized) data. reliabilityDataRawUpperBytes and reliabilityDataRawLowerBytes should be combined and interpreted as a signed 64-bit value"
  },
  "reliabilityDataRawLowerBytes": {
    "name": "reliabilityDataRawLowerBytes",
    "oid": "1.3.6.1.4.1.13742.6.10.1.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The lower 4 bytes of the raw ( not normalized) data. reliabilityDataRawUpperBytes and reliabilityDataRawLowerBytes should be combined and interpreted as a signed 64-bit value"
  },
  "reliabilityDataFlags": {
    "name": "reliabilityDataFlags",
    "oid": "1.3.6.1.4.1.13742.6.10.1.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "invalidFlag": 0,
        "oldValue": 1,
        "criticalEntry": 2
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Flags"
  },
  "reliabilityErrorLogTable": {
    "name": "reliabilityErrorLogTable",
    "oid": "1.3.6.1.4.1.13742.6.10.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of PDU reliability ErrorLog entries. "
  },
  "reliabilityErrorLogEntry": {
    "name": "reliabilityErrorLogEntry",
    "oid": "1.3.6.1.4.1.13742.6.10.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PDU2-MIB",
        "object": "reliabilityErrorLogIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing reliability ErrorLog data for a particular PDU."
  },
  "reliabilityErrorLogIndex": {
    "name": "reliabilityErrorLogIndex",
    "oid": "1.3.6.1.4.1.13742.6.10.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Index of the entry in the table."
  },
  "reliabilityErrorLogId": {
    "name": "reliabilityErrorLogId",
    "oid": "1.3.6.1.4.1.13742.6.10.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Unique ID of the entry. POH Power on hours. CB.<label>.TRIPCNT Trip count of circuit breaker with label <label>. CTRL.<serial>.<addr>.MASTER.CSUMERRLASTHOUR Number of checksum errors in slave (controller board) to master (CPU board) communication in the last hour on controller with serial number <serial> and bus address <addr>. CTRL.<serial>.<addr>.SLAVE.CSUMERRLASTHOUR Number of checksum errors in master (CPU board) to slave (controller board) communication in the last hour on controller with serial number <serial> and bus address <addr>. CTRL.<serial>.<addr>.TOUTLASTHOUR Number of communication timeouts to controller with serial number <serial> and bus address <addr> in the last hour. CTRL.<serial>.<addr>.RLY.<num>.CYCLECNT Number of cycles the relay <num> on the controller board with serial number <serial> and bus address <addr> has made. A cycle is an off->on followed by an on->off event later. The count is increased on the off->on transition. CTRL.<serial>.<addr>.RLY.<num>.FAILLASTHOUR Number of failed switching operations on relay <num> on the controller board with serial number <serial> and bus address <addr> in the last hour. It depends on the specific controller board hardware and what error conditions are detected. "
  },
  "reliabilityErrorLogValue": {
    "name": "reliabilityErrorLogValue",
    "oid": "1.3.6.1.4.1.13742.6.10.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The normalized value"
  },
  "reliabilityErrorLogThreshold": {
    "name": "reliabilityErrorLogThreshold",
    "oid": "1.3.6.1.4.1.13742.6.10.2.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The normalized Threshold value "
  },
  "reliabilityErrorLogRawUpperBytes": {
    "name": "reliabilityErrorLogRawUpperBytes",
    "oid": "1.3.6.1.4.1.13742.6.10.2.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The Upper 4 bytes of the raw ( not normalized) data. reliabilityDataRawUpperBytes and reliabilityDataRawLowerBytes should be combined and interpreted as a signed 64-bit value"
  },
  "reliabilityErrorLogRawLowerBytes": {
    "name": "reliabilityErrorLogRawLowerBytes",
    "oid": "1.3.6.1.4.1.13742.6.10.2.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The lower 4 bytes of the raw ( not normalized) data. reliabilityDataRawUpperBytes and reliabilityDataRawLowerBytes should be combined and interpreted as a signed 64-bit value"
  },
  "reliabilityErrorLogPOH": {
    "name": "reliabilityErrorLogPOH",
    "oid": "1.3.6.1.4.1.13742.6.10.2.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The time of occurrence of the event measured from the last time the PDU was powered on"
  },
  "reliabilityErrorLogTime": {
    "name": "reliabilityErrorLogTime",
    "oid": "1.3.6.1.4.1.13742.6.10.2.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The UTC time of occurrence of the event "
  },
  "systemStarted": {
    "name": "systemStarted",
    "oid": "1.3.6.1.4.1.13742.6.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The system has started. "
  },
  "systemReset": {
    "name": "systemReset",
    "oid": "1.3.6.1.4.1.13742.6.0.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The system was reset. The conditions under which this trap is sent include, but are not limited to, the following. using the GUI - Maintenance->Reset Unit using the CLI - reset pdu unit"
  },
  "userLogin": {
    "name": "userLogin",
    "oid": "1.3.6.1.4.1.13742.6.0.3",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A user logged in."
  },
  "userLogout": {
    "name": "userLogout",
    "oid": "1.3.6.1.4.1.13742.6.0.4",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A user logged out."
  },
  "userAuthenticationFailure": {
    "name": "userAuthenticationFailure",
    "oid": "1.3.6.1.4.1.13742.6.0.5",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A user authentication attempt failed."
  },
  "userSessionTimeout": {
    "name": "userSessionTimeout",
    "oid": "1.3.6.1.4.1.13742.6.0.8",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A user session timed out."
  },
  "userAdded": {
    "name": "userAdded",
    "oid": "1.3.6.1.4.1.13742.6.0.11",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "targetUser"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A user was added to the system."
  },
  "userModified": {
    "name": "userModified",
    "oid": "1.3.6.1.4.1.13742.6.0.12",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "targetUser"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A user was modified."
  },
  "userDeleted": {
    "name": "userDeleted",
    "oid": "1.3.6.1.4.1.13742.6.0.13",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "targetUser"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A user was deleted from the system."
  },
  "roleAdded": {
    "name": "roleAdded",
    "oid": "1.3.6.1.4.1.13742.6.0.14",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "roleName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A role was added to the system."
  },
  "roleModified": {
    "name": "roleModified",
    "oid": "1.3.6.1.4.1.13742.6.0.15",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "roleName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A role was modified."
  },
  "roleDeleted": {
    "name": "roleDeleted",
    "oid": "1.3.6.1.4.1.13742.6.0.16",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "roleName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A role was deleted from the system."
  },
  "deviceUpdateStarted": {
    "name": "deviceUpdateStarted",
    "oid": "1.3.6.1.4.1.13742.6.0.20",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "imageVersion"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The device update has started."
  },
  "deviceUpdateCompleted": {
    "name": "deviceUpdateCompleted",
    "oid": "1.3.6.1.4.1.13742.6.0.21",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "imageVersion"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The device update has completed."
  },
  "userBlocked": {
    "name": "userBlocked",
    "oid": "1.3.6.1.4.1.13742.6.0.22",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A blocked user tried to log in."
  },
  "powerControl": {
    "name": "powerControl",
    "oid": "1.3.6.1.4.1.13742.6.0.23",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "switchingOperation"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "An outlet switching operation has been performed. Note that measurementsOutletSensorState represents the state of the outlet at the time the trap was sent. This may be different from the final state of the outlet. For instance, if the outlet is cycled and the outlet cycle delay is 20 seconds, this variable will indicate OFF although the final state of the outlet will be ON. The final state of the outlet will be indicated in the outletSensorStateChange trap for the outlet onOff sensor."
  },
  "userPasswordChanged": {
    "name": "userPasswordChanged",
    "oid": "1.3.6.1.4.1.13742.6.0.24",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "targetUser"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "User password was changed."
  },
  "passwordSettingsChanged": {
    "name": "passwordSettingsChanged",
    "oid": "1.3.6.1.4.1.13742.6.0.28",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Strong password settings changed."
  },
  "firmwareValidationFailed": {
    "name": "firmwareValidationFailed",
    "oid": "1.3.6.1.4.1.13742.6.0.38",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Firmware validation failed."
  },
  "logFileCleared": {
    "name": "logFileCleared",
    "oid": "1.3.6.1.4.1.13742.6.0.41",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The log file has been cleared."
  },
  "bulkConfigurationSaved": {
    "name": "bulkConfigurationSaved",
    "oid": "1.3.6.1.4.1.13742.6.0.53",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Bulk Configuration saved."
  },
  "bulkConfigurationCopied": {
    "name": "bulkConfigurationCopied",
    "oid": "1.3.6.1.4.1.13742.6.0.54",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Bulk Configuration copied to the device."
  },
  "pduSensorStateChange": {
    "name": "pduSensorStateChange",
    "oid": "1.3.6.1.4.1.13742.6.0.60",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsUnitSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsUnitSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsUnitSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsUnitSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "oldSensorState"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "deprecated",
    "description": "PDU Sensor State Change. Which value field to use depends on the metadata of the sensor. measurementsUnitSensorValue is undefined for sensors which can have negative readings, measurementsUnitSensorSignedValue is undefined for sensors whose range exceeds the Integer32 range. Both fields do not apply to sensors without numerical readings."
  },
  "inletSensorStateChange": {
    "name": "inletSensorStateChange",
    "oid": "1.3.6.1.4.1.13742.6.0.61",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "oldSensorState"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Inlet Sensor State Change. Which value field to use depends on the metadata of the sensor. measurementsInletSensorValue is undefined for sensors which can have negative readings, measurementsInletSensorSignedValue is undefined for sensors whose range exceeds the Integer32 range. Both fields do not apply to sensors without numerical readings. For an rcmState sensor transitioning to the fail state, the value is the residual current just before the sensor transitioned to the fail state i.e. if typeOfSensor = rcmState and measurementsInletSensorState = fail, then measurementsInletSensorValue = the residual current just before the sensor transitioned to the fail state "
  },
  "inletPoleSensorStateChange": {
    "name": "inletPoleSensorStateChange",
    "oid": "1.3.6.1.4.1.13742.6.0.62",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletPoleNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletPoleSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletPoleSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletPoleSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsInletPoleSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "oldSensorState"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Inlet Pole Sensor State Change. Which value field to use depends on the metadata of the sensor. measurementsInletPoleSensorValue is undefined for sensors which can have negative readings, measurementsInletPoleSensorSignedValue is undefined for sensors whose range exceeds the Integer32 range. Both fields do not apply to sensors without numerical readings."
  },
  "outletSensorStateChange": {
    "name": "outletSensorStateChange",
    "oid": "1.3.6.1.4.1.13742.6.0.63",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "oldSensorState"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Outlet Sensor State Change. Which value field to use depends on the metadata of the sensor. measurementsOutletSensorValue is undefined for sensors which can have negative readings, measurementsOutletSensorSignedValue is undefined for sensors whose range exceeds the Integer32 range. Both fields do not apply to sensors without numerical readings."
  },
  "outletPoleSensorStateChange": {
    "name": "outletPoleSensorStateChange",
    "oid": "1.3.6.1.4.1.13742.6.0.64",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletPoleNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletPoleSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletPoleSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletPoleSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOutletPoleSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "oldSensorState"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Outlet Pole Sensor State Change. Which value field to use depends on the metadata of the sensor. measurementsOutletPoleSensorValue is undefined for sensors which can have negative readings, measurementsOutletPoleSensorSignedValue is undefined for sensors whose range exceeds the Integer32 range. Both fields do not apply to sensors without numerical readings."
  },
  "overCurrentProtectorSensorStateChange": {
    "name": "overCurrentProtectorSensorStateChange",
    "oid": "1.3.6.1.4.1.13742.6.0.65",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "overCurrentProtectorLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOverCurrentProtectorSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOverCurrentProtectorSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOverCurrentProtectorSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsOverCurrentProtectorSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "oldSensorState"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Overcurrent Protector Sensor State Change. Which value field to use depends on the metadata of the sensor. measurementsOverCurrentProtectorSensorValue is undefined for sensors which can have negative readings, measurementsOverCurrentProtectorSensorSignedValue is undefined for sensors whose range exceeds the Integer32 range. Both fields do not apply to sensors without numerical readings."
  },
  "externalSensorStateChange": {
    "name": "externalSensorStateChange",
    "oid": "1.3.6.1.4.1.13742.6.0.66",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsExternalSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsExternalSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsExternalSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "oldSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorSerialNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalOnOffSensorSubtype"
      },
      {
        "module": "PDU2-MIB",
        "object": "externalSensorChannelNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "External Sensor State Change."
  },
  "smtpMessageTransmissionFailure": {
    "name": "smtpMessageTransmissionFailure",
    "oid": "1.3.6.1.4.1.13742.6.0.67",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "smtpMessageRecipients"
      },
      {
        "module": "PDU2-MIB",
        "object": "smtpServer"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "SMTP message transmission failure"
  },
  "ldapError": {
    "name": "ldapError",
    "oid": "1.3.6.1.4.1.13742.6.0.68",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "errorDescription"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "LDAP Error occurred; errorDescription describes the error"
  },
  "deviceUpdateFailed": {
    "name": "deviceUpdateFailed",
    "oid": "1.3.6.1.4.1.13742.6.0.70",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "imageVersion"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The device update has failed."
  },
  "loadSheddingModeEntered": {
    "name": "loadSheddingModeEntered",
    "oid": "1.3.6.1.4.1.13742.6.0.71",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The PX has enetered Load Shedding Mode"
  },
  "loadSheddingModeExited": {
    "name": "loadSheddingModeExited",
    "oid": "1.3.6.1.4.1.13742.6.0.72",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The PX has exited Load Shedding Mode"
  },
  "pingServerEnabled": {
    "name": "pingServerEnabled",
    "oid": "1.3.6.1.4.1.13742.6.0.73",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "serverIPAddress"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The ping feature has been enabled"
  },
  "pingServerDisabled": {
    "name": "pingServerDisabled",
    "oid": "1.3.6.1.4.1.13742.6.0.74",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "serverIPAddress"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The ping feature has been disabled"
  },
  "serverNotReachable": {
    "name": "serverNotReachable",
    "oid": "1.3.6.1.4.1.13742.6.0.75",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "serverIPAddress"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The server is not reachable"
  },
  "serverReachable": {
    "name": "serverReachable",
    "oid": "1.3.6.1.4.1.13742.6.0.76",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "serverIPAddress"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The server is reachable"
  },
  "rfCodeTagConnected": {
    "name": "rfCodeTagConnected",
    "oid": "1.3.6.1.4.1.13742.6.0.77",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The RF Code Tag is Connected"
  },
  "rfCodeTagDisconnected": {
    "name": "rfCodeTagDisconnected",
    "oid": "1.3.6.1.4.1.13742.6.0.78",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The RF Code Tag is Disconnected"
  },
  "deviceIdentificationChanged": {
    "name": "deviceIdentificationChanged",
    "oid": "1.3.6.1.4.1.13742.6.0.79",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "deviceChangedParameter"
      },
      {
        "module": "PDU2-MIB",
        "object": "changedParameterNewValue"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Device identification has changed"
  },
  "usbSlaveConnected": {
    "name": "usbSlaveConnected",
    "oid": "1.3.6.1.4.1.13742.6.0.80",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "USB Connectivity to slave has been established"
  },
  "usbSlaveDisconnected": {
    "name": "usbSlaveDisconnected",
    "oid": "1.3.6.1.4.1.13742.6.0.81",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "USB Connectivity to slave has been lost"
  },
  "lhxSupportChanged": {
    "name": "lhxSupportChanged",
    "oid": "1.3.6.1.4.1.13742.6.0.82",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      },
      {
        "module": "PDU2-MIB",
        "object": "lhxSupportEnabled"
      }
    ],
    "status": "current",
    "description": "The Schroff LHX Support has been either enabled or disabled."
  },
  "userAcceptedRestrictedServiceAgreement": {
    "name": "userAcceptedRestrictedServiceAgreement",
    "oid": "1.3.6.1.4.1.13742.6.0.83",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The user accepted the Restricted Service Agreement."
  },
  "userDeclinedRestrictedServiceAgreement": {
    "name": "userDeclinedRestrictedServiceAgreement",
    "oid": "1.3.6.1.4.1.13742.6.0.84",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The user declined the Restricted Service Agreement."
  },
  "wireSensorStateChange": {
    "name": "wireSensorStateChange",
    "oid": "1.3.6.1.4.1.13742.6.0.85",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "wireLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsWireSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsWireSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsWireSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "oldSensorState"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "deprecated",
    "description": "Wire Sensor State Change."
  },
  "transferSwitchSensorStateChange": {
    "name": "transferSwitchSensorStateChange",
    "oid": "1.3.6.1.4.1.13742.6.0.86",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsTransferSwitchSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsTransferSwitchSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsTransferSwitchSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsTransferSwitchSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "oldSensorState"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      },
      {
        "module": "PDU2-MIB",
        "object": "transferSwitchLastTransferReason"
      }
    ],
    "status": "current",
    "description": "Transfer Switch Sensor State Change. Which value field to use depends on the metadata of the sensor. measurementsTransferSwitchSensorValue is undefined for sensors which can have negative readings, measurementsTransferSwitchSensorSignedValue is undefined for sensors whose range exceeds the Integer32 range. Both fields do not apply to sensors without numerical readings."
  },
  "deviceSettingsSaved": {
    "name": "deviceSettingsSaved",
    "oid": "1.3.6.1.4.1.13742.6.0.88",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Device Settings have been saved."
  },
  "deviceSettingsRestored": {
    "name": "deviceSettingsRestored",
    "oid": "1.3.6.1.4.1.13742.6.0.89",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Device Settings have been restored."
  },
  "webcamInserted": {
    "name": "webcamInserted",
    "oid": "1.3.6.1.4.1.13742.6.0.90",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "webcamModel"
      },
      {
        "module": "PDU2-MIB",
        "object": "webcamConnectionPort"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A webcam has been inserted"
  },
  "webcamRemoved": {
    "name": "webcamRemoved",
    "oid": "1.3.6.1.4.1.13742.6.0.91",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "webcamModel"
      },
      {
        "module": "PDU2-MIB",
        "object": "webcamConnectionPort"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A webcam has been removed"
  },
  "inletEnabled": {
    "name": "inletEnabled",
    "oid": "1.3.6.1.4.1.13742.6.0.92",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletLabel"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "PDU operation has been enabled for an inlet"
  },
  "inletDisabled": {
    "name": "inletDisabled",
    "oid": "1.3.6.1.4.1.13742.6.0.93",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletLabel"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "PDU operation has been disabled for an inlet"
  },
  "serverConnectivityUnrecoverable": {
    "name": "serverConnectivityUnrecoverable",
    "oid": "1.3.6.1.4.1.13742.6.0.94",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "serverIPAddress"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The connection to the server could not be recovered"
  },
  "radiusError": {
    "name": "radiusError",
    "oid": "1.3.6.1.4.1.13742.6.0.95",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "errorDescription"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "LDAP Error occurred; errorDescription describes the error"
  },
  "serverReachabilityError": {
    "name": "serverReachabilityError",
    "oid": "1.3.6.1.4.1.13742.6.0.96",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "serverIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "errorDescription"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Server Reachability Error occurred; errorDescription describes the error. This trap is sent when the Error state is entered. Reasons for transitioning to the Error state include the following: Unable to resolve the server hostname. "
  },
  "inletSensorReset": {
    "name": "inletSensorReset",
    "oid": "1.3.6.1.4.1.13742.6.0.97",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "inletLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "An inlet sensor was reset."
  },
  "outletSensorReset": {
    "name": "outletSensorReset",
    "oid": "1.3.6.1.4.1.13742.6.0.98",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "outletLabel"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "An outlet sensor was reset."
  },
  "unknownPeripheralDeviceAttached": {
    "name": "unknownPeripheralDeviceAttached",
    "oid": "1.3.6.1.4.1.13742.6.0.99",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDeviceRomcode"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDevicePackagePosition"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "An unknown peripheral device was attached."
  },
  "peripheralDeviceFirmwareUpdate": {
    "name": "peripheralDeviceFirmwareUpdate",
    "oid": "1.3.6.1.4.1.13742.6.0.100",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDevicePackageSerialNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDeviceFirmwareUpdateState"
      },
      {
        "module": "PDU2-MIB",
        "object": "peripheralDevicePackageFirmwareVersion"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "The firmware update state of a peripheral device changed while performing update to peripheralDevicePackageFirmwareVersion."
  },
  "unitSensorReset": {
    "name": "unitSensorReset",
    "oid": "1.3.6.1.4.1.13742.6.0.101",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A global sensor was reset."
  },
  "unitSensorStateChange": {
    "name": "unitSensorStateChange",
    "oid": "1.3.6.1.4.1.13742.6.0.102",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsUnitSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsUnitSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsUnitSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsUnitSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "oldSensorState"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Unit Sensor State Change. Which value field to use depends on the metadata of the sensor. measurementsUnitSensorValue is undefined for sensors which can have negative readings, measurementsUnitSensorSignedValue is undefined for sensors whose range exceeds the Integer32 range. Both fields do not apply to sensors without numerical readings."
  },
  "circuitSensorStateChange": {
    "name": "circuitSensorStateChange",
    "oid": "1.3.6.1.4.1.13742.6.0.103",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "oldSensorState"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "circuit Sensor State Change. Which value field to use depends on the metadata of the sensor. measurementsOutletSensorValue is undefined for sensors which can have negative readings, measurementsCircuitSensorSignedValue is undefined for sensors whose range exceeds the Integer32 range. Both fields do not apply to sensors without numerical readings."
  },
  "circuitPoleSensorStateChange": {
    "name": "circuitPoleSensorStateChange",
    "oid": "1.3.6.1.4.1.13742.6.0.104",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitPoleNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitPoleSensorTimeStamp"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitPoleSensorValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitPoleSensorState"
      },
      {
        "module": "PDU2-MIB",
        "object": "measurementsCircuitPoleSensorSignedValue"
      },
      {
        "module": "PDU2-MIB",
        "object": "oldSensorState"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Circuit Pole Sensor State Change. Which value field to use depends on the metadata of the sensor. measurementsOutletPoleSensorValue is undefined for sensors which can have negative readings, measurementsCircuitPoleSensorSignedValue is undefined for sensors whose range exceeds the Integer32 range. Both fields do not apply to sensors without numerical readings."
  },
  "circuitAdded": {
    "name": "circuitAdded",
    "oid": "1.3.6.1.4.1.13742.6.0.105",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitName"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitType"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitRatedCurrent"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitCTRating"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A Circuit has been added"
  },
  "circuitDeleted": {
    "name": "circuitDeleted",
    "oid": "1.3.6.1.4.1.13742.6.0.106",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitName"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitType"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A Circuit has been deleted"
  },
  "circuitModified": {
    "name": "circuitModified",
    "oid": "1.3.6.1.4.1.13742.6.0.107",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitName"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitType"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitRatedCurrent"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitCTRating"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A Circuit has been modified"
  },
  "circuitSensorReset": {
    "name": "circuitSensorReset",
    "oid": "1.3.6.1.4.1.13742.6.0.108",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "circuitNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "typeOfSensor"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "An ciruit sensor was reset."
  },
  "powerMeterAdded": {
    "name": "powerMeterAdded",
    "oid": "1.3.6.1.4.1.13742.6.0.109",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterPhaseCTRating"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterNeutralCTRating"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterEarthCTRating"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterPanelPositions"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterPanelLayout"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterPanelNumbering"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterType"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A Power Meter has been added"
  },
  "powerMeterDeleted": {
    "name": "powerMeterDeleted",
    "oid": "1.3.6.1.4.1.13742.6.0.110",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterType"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A Power Meter has been deleted"
  },
  "powerMeterModified": {
    "name": "powerMeterModified",
    "oid": "1.3.6.1.4.1.13742.6.0.111",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pduNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "userName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterPhaseCTRating"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterNeutralCTRating"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterEarthCTRating"
      },
      {
        "module": "PDU2-MIB",
        "object": "powerMeterType"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "A Power Meter has been modified"
  },
  "smsMessageTransmissionFailure": {
    "name": "smsMessageTransmissionFailure",
    "oid": "1.3.6.1.4.1.13742.6.0.112",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PDU2-MIB",
        "object": "pduName"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetAddressType"
      },
      {
        "module": "PDU2-MIB",
        "object": "pxInetIPAddress"
      },
      {
        "module": "PDU2-MIB",
        "object": "agentInetPortNumber"
      },
      {
        "module": "PDU2-MIB",
        "object": "phoneNumber"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysContact"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "SNMPv2-MIB",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Sending an SMS message failed."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/PDU2-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 19:41:56 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "PDU2-MIB"
  }
}