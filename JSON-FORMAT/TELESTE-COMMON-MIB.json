{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "Bits",
      "TimeTicks",
      "MibIdentifier",
      "Counter32",
      "IpAddress",
      "OBJECT-TYPE",
      "iso",
      "NOTIFICATION-TYPE",
      "Gauge32",
      "OBJECT-IDENTITY",
      "Unsigned32",
      "Counter64",
      "Integer32",
      "MODULE-IDENTITY"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ],
    "TELESTE-ROOT-MIB": [
      "DateAndTime",
      "TPhysAddress",
      "common",
      "Uint16"
    ]
  },
  "element": {
    "name": "element",
    "oid": "1.3.6.1.4.1.3715.99.1",
    "class": "objectidentity"
  },
  "elementInformation": {
    "name": "elementInformation",
    "oid": "1.3.6.1.4.1.3715.99.1.1",
    "class": "objectidentity"
  },
  "elementName": {
    "name": "elementName",
    "oid": "1.3.6.1.4.1.3715.99.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This is the logical name of the controlling module of the network element. The name may or may not be the same as the module's name in the moduleTable."
  },
  "elementStructure": {
    "name": "elementStructure",
    "oid": "1.3.6.1.4.1.3715.99.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "compact": 2,
          "modular": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object tells whether the device is a single compact device or a modular device."
  },
  "elementConfigChangeCode": {
    "name": "elementConfigChangeCode",
    "oid": "1.3.6.1.4.1.3715.99.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "This object is an indicator about changes in the network element configuration. How the value is formed is device dependent. It can be a counter, a checksum of the device configuration parameters, a DateAndTime type variable or even SysUptime, if no other information is available. DateAndTime is the recommended value. This object is intended to permit a management application to maintain configuration (including moduleTable) syncronization with the agent."
  },
  "elementResetCount": {
    "name": "elementResetCount",
    "oid": "1.3.6.1.4.1.3715.99.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "Total number of software resets during the device's life time."
  },
  "elementTotalUpTime": {
    "name": "elementTotalUpTime",
    "oid": "1.3.6.1.4.1.3715.99.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total uptime the device (software) has been running. Unit 1 day."
  },
  "elementLatitude": {
    "name": "elementLatitude",
    "oid": "1.3.6.1.4.1.3715.99.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Device latitude coordinate. Unit 0.00001 degrees."
  },
  "elementLongitude": {
    "name": "elementLongitude",
    "oid": "1.3.6.1.4.1.3715.99.1.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Device longitude coordinate. Unit 0.00001 degrees."
  },
  "elementAltitude": {
    "name": "elementAltitude",
    "oid": "1.3.6.1.4.1.3715.99.1.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Device altitude coordinate. Unit 1 metre."
  },
  "elementStatus": {
    "name": "elementStatus",
    "oid": "1.3.6.1.4.1.3715.99.1.2",
    "class": "objectidentity"
  },
  "statusGeneral": {
    "name": "statusGeneral",
    "oid": "1.3.6.1.4.1.3715.99.1.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "notification": 2,
          "warning": 3,
          "alarm": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A number stating the general status of the element. Values: 1 = Normal 2 = At least one Notification is active 3 = At least one Warning is active 4 = At least one Alarm is active If the element has more than one state active, then the state with the highest value is returned."
  },
  "statusBusMaster": {
    "name": "statusBusMaster",
    "oid": "1.3.6.1.4.1.3715.99.1.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "slaveOnly": 1,
          "configuredSlave": 2,
          "currentlySlave": 3,
          "currentlyMaster": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "A number stating the Bus Master status of the NE. Values: 1 = The NE is a slave-only device 2 = The NE is configured as slave 3 = The NE is configured as master but is currently slave because a stronger master is on the bus 4 = The NE is currently the bus master"
  },
  "statusLmt": {
    "name": "statusLmt",
    "oid": "1.3.6.1.4.1.3715.99.1.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noLmtInterface": 1,
          "stateUnknown": 2,
          "notConnected": 3,
          "connected": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "A number telling if the Local Management Terminal (LMT) is connected to the element. Values: 1 = The element does not have an LMT interface 2 = The element can not detect if an LMT is connected 3 = The element has not detected a connected LMT 4 = The element has detected a connected LMT Note! Applies only to fysically point-to-point connected LMT's to device, not via bus ot other shared medias."
  },
  "statusLid": {
    "name": "statusLid",
    "oid": "1.3.6.1.4.1.3715.99.1.2.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noLid": 1,
          "closed": 2,
          "open": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "Element lid status: 1 = no lid (no lid sensor is available) 2 = lid is closed 3 = lid is open"
  },
  "statusTemperature": {
    "name": "statusTemperature",
    "oid": "1.3.6.1.4.1.3715.99.1.2.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "tempNormal": 1,
          "tempHIHI": 2,
          "tempHi": 3,
          "tempLo": 4,
          "tempLOLO": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "Element temperature status: 1 = normal 2 = HIHI 3 = Hi 4 = Lo 5 = LOLO "
  },
  "statusFan": {
    "name": "statusFan",
    "oid": "1.3.6.1.4.1.3715.99.1.2.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fanNormal": 1,
          "fanFailure": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A common status object for all fans in the device. fanNormal(1) = all fans operate normally fanFailure(2) = at least one fan has a failure"
  },
  "statusHardware": {
    "name": "statusHardware",
    "oid": "1.3.6.1.4.1.3715.99.1.2.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "hwNormal": 1,
          "hwFailure": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Device hardware status: hwNormal(1) = the hardware operates normally hwFailure(2) = a hardware failure is detected"
  },
  "statusSoftware": {
    "name": "statusSoftware",
    "oid": "1.3.6.1.4.1.3715.99.1.2.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "swNormal": 1,
          "swFailure": 2,
          "swMissing": 3,
          "swInitialising": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Device software status: swNormal(1) = the software operates normally swFailure(2) = a software failure is detected swMissing(3) = the software or firmware is missing sw(Initialising(4) = the software is initialising"
  },
  "statusSettings": {
    "name": "statusSettings",
    "oid": "1.3.6.1.4.1.3715.99.1.2.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "settingsStable": 1,
          "settingsChanged": 2,
          "settingsNotAvailable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of device settings: settingsStable(1) = settings are stable settingsChanged(2) = settings have been (recently) changed settingsNotAvailable(3) = settings status is not available The value should stay in value 2 only a predefined time, e.g. 60 seconds or the time it takes until the settings are written into non-volatile memory. "
  },
  "elementControl": {
    "name": "elementControl",
    "oid": "1.3.6.1.4.1.3715.99.1.3",
    "class": "objectidentity"
  },
  "controlResetElement": {
    "name": "controlResetElement",
    "oid": "1.3.6.1.4.1.3715.99.1.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noReset": 1,
          "hardReset": 2,
          "softReset": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "On write requests this object commands the module to reset itself. If softReset(3) or hardReset(2) can not be performed, then BAD VALUE error is returned. On read requests value noReset(1) is returned."
  },
  "controlBusMasterAdminState": {
    "name": "controlBusMasterAdminState",
    "oid": "1.3.6.1.4.1.3715.99.1.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "master": 1,
          "slave": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "This object tells whether the element is configured as a bus master or not. Only relevant for bus master type of elements. Others return no(2)."
  },
  "controlAlarmDetection": {
    "name": "controlAlarmDetection",
    "oid": "1.3.6.1.4.1.3715.99.1.3.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 1,
          "enabled": 2,
          "restart": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable is used to disable or enable the element alarm checking. When disabled(1), the element will not check any alarms (or send traps). Default value is enabled(2). Note: This variable must be consistent with commonAlarmDetectionControl in SCTE-HMS-COMMON-MIB, if that is implemented."
  },
  "controlMaxNumberTrapReceivers": {
    "name": "controlMaxNumberTrapReceivers",
    "oid": "1.3.6.1.4.1.3715.99.1.3.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of entries in the elementTrapReceiverTable. At least one trap entry must be supported."
  },
  "controlTrapReceiverTable": {
    "name": "controlTrapReceiverTable",
    "oid": "1.3.6.1.4.1.3715.99.1.3.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "optional",
    "description": "A table of manager trap receiver addresses, ports and communities. Total number of entries can not exceed elementNumberTrapReceivers. An entry is deleted from this table by setting its IP address to '0.0.0.0'. Note: one of the community strings must match to commonTrapCommunityString in SCTE-HMS-COMMON-MIB, if that is implemented."
  },
  "controlTrapReceiverEntry": {
    "name": "controlTrapReceiverEntry",
    "oid": "1.3.6.1.4.1.3715.99.1.3.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "receiverEntryId",
        "implied": 0
      }
    ],
    "status": "optional"
  },
  "receiverEntryId": {
    "name": "receiverEntryId",
    "oid": "1.3.6.1.4.1.3715.99.1.3.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Unique table index. Makes possible to have several ip-address of 0.0.0.0 entries so that no mechanism for row manipulation of table is needed."
  },
  "receiverAddress": {
    "name": "receiverAddress",
    "oid": "1.3.6.1.4.1.3715.99.1.3.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Ip address of the manager receiving Traps."
  },
  "receiverPort": {
    "name": "receiverPort",
    "oid": "1.3.6.1.4.1.3715.99.1.3.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Trap UDP port number. Default port is the standard trap port 162."
  },
  "receiverCommunity": {
    "name": "receiverCommunity",
    "oid": "1.3.6.1.4.1.3715.99.1.3.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Community string for the trap receiver. The agent is allowed to limit the length of the string. Minimum length of eight characters must be supported. Note: one of the community strings must match to commonTrapCommunityString in SCTE-HMS-COMMON-MIB, if that is implemented."
  },
  "controlTrapSending": {
    "name": "controlTrapSending",
    "oid": "1.3.6.1.4.1.3715.99.1.3.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Enables/disables trap sending. 1 = traps enabled 2 = traps disabled"
  },
  "controlTrapInterval": {
    "name": "controlTrapInterval",
    "oid": "1.3.6.1.4.1.3715.99.1.3.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "The minimum interval between traps. - Unit 10 milliseconds - Minimum value 0 (send as fast as possible) - Maximum value 1000 (10 seconds) - Default value is 100 (1 second)"
  },
  "controlTrapLifeTime": {
    "name": "controlTrapLifeTime",
    "oid": "1.3.6.1.4.1.3715.99.1.3.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "The maximum time a trap stays in the trap queue waiting for sending. - Unit 1 second. - Minimum value 10 - Maximum value 300 - Default value 60"
  },
  "controlAlarmOnDelay": {
    "name": "controlAlarmOnDelay",
    "oid": "1.3.6.1.4.1.3715.99.1.3.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "The minimum time an object's alarm/warning condition must exist before it is recorded as an alarm/warning. Common to all alarms/warnings - Unit 10 ms - Minimum value 10 (100 ms) - Maximum value 6000 (60 seconds) - Default value 100 (1 second)"
  },
  "controlAlarmOffDelay": {
    "name": "controlAlarmOffDelay",
    "oid": "1.3.6.1.4.1.3715.99.1.3.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "The minimum time an alarm/warning entry stays active after the object has reached it's normal condition. Common to all alarms/warnings. - Unit 10 ms - Minimum value 10 (100 ms) - Maximum value 6000 (60 seconds) - default value 100 (1 second)"
  },
  "controlTrapDelay": {
    "name": "controlTrapDelay",
    "oid": "1.3.6.1.4.1.3715.99.1.3.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "The time before a trap is sent after an alarm is detected. - Unit 10 ms - Minimum value 10 (100 ms) - Maximum value 6000 (60 seconds) - Default value 500 (5 seconds) This parameter can be used to control alarm storms e.g. in an amplifier cascade by using a different value in each amplifier."
  },
  "elementProductKey": {
    "name": "elementProductKey",
    "oid": "1.3.6.1.4.1.3715.99.1.4",
    "class": "objectidentity"
  },
  "productKeyNumberOfKeys": {
    "name": "productKeyNumberOfKeys",
    "oid": "1.3.6.1.4.1.3715.99.1.4.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "Number of product keys supported by the device."
  },
  "productKeyTable": {
    "name": "productKeyTable",
    "oid": "1.3.6.1.4.1.3715.99.1.4.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory"
  },
  "productKeyEntry": {
    "name": "productKeyEntry",
    "oid": "1.3.6.1.4.1.3715.99.1.4.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "productKeyIndex",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "productKeyIndex": {
    "name": "productKeyIndex",
    "oid": "1.3.6.1.4.1.3715.99.1.4.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Product key index."
  },
  "productKeyValue": {
    "name": "productKeyValue",
    "oid": "1.3.6.1.4.1.3715.99.1.4.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Product key value."
  },
  "productKeyMask": {
    "name": "productKeyMask",
    "oid": "1.3.6.1.4.1.3715.99.1.4.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Product key mask."
  },
  "productKeyStatus": {
    "name": "productKeyStatus",
    "oid": "1.3.6.1.4.1.3715.99.1.4.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "keyInvalid": 1,
          "keyValid": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Product key status: 1(keyInvalid) = the key is invalid or missing 2(keyValid) = the key is valid"
  },
  "productKeyCipher": {
    "name": "productKeyCipher",
    "oid": "1.3.6.1.4.1.3715.99.1.4.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "cipherOther": 1,
          "cipherBlowFish": 2,
          "cipherXXTEA": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Cipher method supported by this key: 1(cipherOther) = other ciphering is used 2(cipherBlowFish) = BlowFish ciphering is used 3(cipherXXTEA) = XXTEA ciphering is used"
  },
  "productKeyNumberOfFeatures": {
    "name": "productKeyNumberOfFeatures",
    "oid": "1.3.6.1.4.1.3715.99.1.4.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of features available with this key."
  },
  "productKeyFeatureTable": {
    "name": "productKeyFeatureTable",
    "oid": "1.3.6.1.4.1.3715.99.1.4.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory"
  },
  "productKeyFeatureEntry": {
    "name": "productKeyFeatureEntry",
    "oid": "1.3.6.1.4.1.3715.99.1.4.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "productKeyIndex",
        "implied": 0
      },
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "productKeyFeatureIndex",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "productKeyFeatureIndex": {
    "name": "productKeyFeatureIndex",
    "oid": "1.3.6.1.4.1.3715.99.1.4.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Feature index (second index)."
  },
  "productKeyFeatureName": {
    "name": "productKeyFeatureName",
    "oid": "1.3.6.1.4.1.3715.99.1.4.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A human-readable description of the feature."
  },
  "productKeyFeatureEnable": {
    "name": "productKeyFeatureEnable",
    "oid": "1.3.6.1.4.1.3715.99.1.4.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "featureDisable": 1,
          "featureEnable": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of the feature: 1(featureDisable) = the feature si disabled in this device 2(featureEnable) = the feature is enabled in this devices"
  },
  "productKeyFeatureExpirationTime": {
    "name": "productKeyFeatureExpirationTime",
    "oid": "1.3.6.1.4.1.3715.99.1.4.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of days left before the feature expires. A zero value means infinite validity time. This object has a meaning only if the feature is enabled (productKeyFeatureEnable = 2(featureEnable))."
  },
  "module": {
    "name": "module",
    "oid": "1.3.6.1.4.1.3715.99.2",
    "class": "objectidentity"
  },
  "moduleInformation": {
    "name": "moduleInformation",
    "oid": "1.3.6.1.4.1.3715.99.2.1",
    "class": "objectidentity"
  },
  "moduleTable": {
    "name": "moduleTable",
    "oid": "1.3.6.1.4.1.3715.99.2.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table lists basic module identification and configuration data of modules installed inside the managed element. The first row in the table list information about the element itself. If the element is not modular, only the first row exists in the table. Object moduleId is used for indexing the modules in all module section tables."
  },
  "moduleEntry": {
    "name": "moduleEntry",
    "oid": "1.3.6.1.4.1.3715.99.2.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "moduleId",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "moduleId": {
    "name": "moduleId",
    "oid": "1.3.6.1.4.1.3715.99.2.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An unique module index identifying the (physical) modules inside the network element. The exact conjunction between the index and the physical modules depends on the element structural principle. For network elements containing plug-in modules the index should follow module slot numbering. This index should be used in all subsequent module tables."
  },
  "moduleName": {
    "name": "moduleName",
    "oid": "1.3.6.1.4.1.3715.99.2.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "The identification name ('aliasname') of the module."
  },
  "moduleHwType": {
    "name": "moduleHwType",
    "oid": "1.3.6.1.4.1.3715.99.2.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hardware type name of the module."
  },
  "moduleRackNo": {
    "name": "moduleRackNo",
    "oid": "1.3.6.1.4.1.3715.99.2.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Rack number of the module. This can be used to identify the physical position of the module in the case where the agent manages modules that are in several racks."
  },
  "moduleSlotNo": {
    "name": "moduleSlotNo",
    "oid": "1.3.6.1.4.1.3715.99.2.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Slot number of the module (within rack)."
  },
  "moduleDetailTable": {
    "name": "moduleDetailTable",
    "oid": "1.3.6.1.4.1.3715.99.2.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table lists detailed module data of modules installed inside the element. The first row in the table list information about the element itself. If the element is not modular, only the first row exists in the table."
  },
  "moduleDetailEntry": {
    "name": "moduleDetailEntry",
    "oid": "1.3.6.1.4.1.3715.99.2.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "moduleId",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "moduleMacAddress": {
    "name": "moduleMacAddress",
    "oid": "1.3.6.1.4.1.3715.99.2.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TPhysAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "Module MAC address. If the MAC address is unknown '00.00.00.00.00.00' is returned."
  },
  "moduleBusAddress": {
    "name": "moduleBusAddress",
    "oid": "1.3.6.1.4.1.3715.99.2.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "Module bus address."
  },
  "moduleAppDate": {
    "name": "moduleAppDate",
    "oid": "1.3.6.1.4.1.3715.99.2.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Module application software date."
  },
  "moduleAppVersion": {
    "name": "moduleAppVersion",
    "oid": "1.3.6.1.4.1.3715.99.2.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Module application software version. If software version is undefined, then zero length string is returned."
  },
  "moduleBiosDate": {
    "name": "moduleBiosDate",
    "oid": "1.3.6.1.4.1.3715.99.2.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Module BIOS date."
  },
  "moduleBiosVersion": {
    "name": "moduleBiosVersion",
    "oid": "1.3.6.1.4.1.3715.99.2.1.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Module BIOS version. If bios version is undefined, a zero length string is returned."
  },
  "moduleHwSerialNumber": {
    "name": "moduleHwSerialNumber",
    "oid": "1.3.6.1.4.1.3715.99.2.1.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Module serial number."
  },
  "moduleHwVersion": {
    "name": "moduleHwVersion",
    "oid": "1.3.6.1.4.1.3715.99.2.1.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Module hardware version."
  },
  "moduleStatus": {
    "name": "moduleStatus",
    "oid": "1.3.6.1.4.1.3715.99.2.2",
    "class": "objectidentity"
  },
  "moduleStatusTable": {
    "name": "moduleStatusTable",
    "oid": "1.3.6.1.4.1.3715.99.2.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table contains status objects for modules inside the network element.The first row in the table lists information about the host module. If the element is not modular, only the first row exists in the table."
  },
  "moduleStatusEntry": {
    "name": "moduleStatusEntry",
    "oid": "1.3.6.1.4.1.3715.99.2.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "moduleId",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Row in moduleStatusTable. The index is moduleId from the moduleTable. Row in this table exist only if there is a row with the same moduleId in the moduleTable."
  },
  "statusResetCause": {
    "name": "statusResetCause",
    "oid": "1.3.6.1.4.1.3715.99.2.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "selfReset": 2,
          "powerReset": 3,
          "commandedReset": 4,
          "softdownloadReset": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Reason for the last reset. If the reason is unknown, the value is reasonUnknown(1). If the device makes self reset and it can detect it, then value is reasonSelfReset(2). If the reset was made by the user from the power switch and it can be sensed, then the value is reasonPowerReset(3). If the reason is an external command from the user interface or from the network message (e.g. commonReset), then the reason is reasonCommandedReset(4)."
  },
  "statusRunningSwImage": {
    "name": "statusRunningSwImage",
    "oid": "1.3.6.1.4.1.3715.99.2.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Currently running software image number. Bios is 0, applications are numbered from 1..n, where n is the maximum image number."
  },
  "statusInternalTemperature": {
    "name": "statusInternalTemperature",
    "oid": "1.3.6.1.4.1.3715.99.2.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -600,
            "max": 1300
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Device temperature, unit 0.1 deg C. Value is zero (0), if temperature is not available."
  },
  "statusLidStatus": {
    "name": "statusLidStatus",
    "oid": "1.3.6.1.4.1.3715.99.2.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noLid": 1,
          "closed": 2,
          "open": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "Current lid status detected by the device. May or may not be the same variable as the elementLidStatus."
  },
  "statusRestartCounter": {
    "name": "statusRestartCounter",
    "oid": "1.3.6.1.4.1.3715.99.2.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "This objects counts the number of restarts of the module. A start can be a cold start or a warm start."
  },
  "moduleControl": {
    "name": "moduleControl",
    "oid": "1.3.6.1.4.1.3715.99.2.3",
    "class": "objectidentity"
  },
  "moduleControlTable": {
    "name": "moduleControlTable",
    "oid": "1.3.6.1.4.1.3715.99.2.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "optional",
    "description": "This table contains common control commands for all the modules inside the element."
  },
  "moduleControlEntry": {
    "name": "moduleControlEntry",
    "oid": "1.3.6.1.4.1.3715.99.2.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "moduleId",
        "implied": 0
      }
    ],
    "status": "optional"
  },
  "controlLedUsage": {
    "name": "controlLedUsage",
    "oid": "1.3.6.1.4.1.3715.99.2.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notSupported": 1,
          "alwaysOn": 2,
          "offWhenLidClosed": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "A variable to instruct how device LED's behave when the lid is closed."
  },
  "controlMarkState": {
    "name": "controlMarkState",
    "oid": "1.3.6.1.4.1.3715.99.2.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notSupported": 1,
          "on": 2,
          "off": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "A variable to instruct the device to start and stop showing mark (blinking module LED). On read requests returns the current mark state."
  },
  "controlReset": {
    "name": "controlReset",
    "oid": "1.3.6.1.4.1.3715.99.2.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noReset": 1,
          "hardReset": 2,
          "softReset": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "On write requests this object commands the module to reset itself. If softReset(3) or hardReset(2) can not be performed, then BAD VALUE error is returned. On read requests value noReset(1) is returned."
  },
  "controlTempLimitHiHi": {
    "name": "controlTempLimitHiHi",
    "oid": "1.3.6.1.4.1.3715.99.2.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Module temperature HiHi (high alarm) limit in 0.1 degC."
  },
  "controlTempLimitHi": {
    "name": "controlTempLimitHi",
    "oid": "1.3.6.1.4.1.3715.99.2.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Module temperature Hi (high warning) limit in 0.1 degC."
  },
  "controlTempLimitLo": {
    "name": "controlTempLimitLo",
    "oid": "1.3.6.1.4.1.3715.99.2.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Module temperature Lo (low warning) limit in 0.1 degC."
  },
  "controlTempLimitLoLo": {
    "name": "controlTempLimitLoLo",
    "oid": "1.3.6.1.4.1.3715.99.2.3.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Module temperature LoLo (low alarm) limit in 0.1 degC."
  },
  "controlTempDeadBand": {
    "name": "controlTempDeadBand",
    "oid": "1.3.6.1.4.1.3715.99.2.3.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Module temperature alarm/warning deadband in 0.1 degC. Common to all limit values (LoLo, Lo, Hi, HiHi). The deadband defines the difference between the 'ON' limit and the 'OFF' limit of the corresponding alarm. Example: The Hi limit is 65 degC and the deadband is 5 degC. The high warning is activated when the temperature exceeds 65 degC and deactivated only after it falls below 60 degC."
  },
  "controlInternalAppAccess": {
    "name": "controlInternalAppAccess",
    "oid": "1.3.6.1.4.1.3715.99.2.3.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "allowIntControl": 1,
          "denyIntControl": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "This object defines whether the internal controller application is able to access the module parameters. This corresponds to the BXX module setting 'Allow Functions'. 1 = allow internal control 2 = deny internal control (remote control is possible)"
  },
  "controlLocalAccess": {
    "name": "controlLocalAccess",
    "oid": "1.3.6.1.4.1.3715.99.2.3.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 1,
          "enabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "This object defines whether the local user interface (buttons, knobs etc.) is enabled or disabled. Values: 1 = disabled, local UI is locked 2 = enabled, local UI is active For modules/devices with no local UI this objects should return value 'disabled (1)."
  },
  "moduleSWUpdateTable": {
    "name": "moduleSWUpdateTable",
    "oid": "1.3.6.1.4.1.3715.99.2.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "optional",
    "description": "A table of software update control objects."
  },
  "moduleSWUpdateEntry": {
    "name": "moduleSWUpdateEntry",
    "oid": "1.3.6.1.4.1.3715.99.2.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "moduleId",
        "implied": 0
      }
    ],
    "status": "optional"
  },
  "sWUpdateControl": {
    "name": "sWUpdateControl",
    "oid": "1.3.6.1.4.1.3715.99.2.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "updateIdle": 1,
          "updateRunning": 2,
          "updateFailed": 3,
          "updateStart": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Writing value updateStart(4) commands the module to run a software update. The software image location and file name are specified in sWUpdateURL and sWUpdateFilename. Writing a updateIdle(1) when the update is running will terminate the update process immediately. Writing any value when no update is runnign has no effect. Reading this object returns either updateIdle(1), updateRunning(2) or updateFailed(3) depending on the status of the (last) software update. "
  },
  "swUpdateURL": {
    "name": "swUpdateURL",
    "oid": "1.3.6.1.4.1.3715.99.2.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "The URL where the software image can be downloaded. Format e.g. TFTP:\\\\downloads\\swupdate\\."
  },
  "sWUpdateFileName": {
    "name": "sWUpdateFileName",
    "oid": "1.3.6.1.4.1.3715.99.2.3.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "File name of the software image file to be downloaded."
  },
  "sWUpdateStatus": {
    "name": "sWUpdateStatus",
    "oid": "1.3.6.1.4.1.3715.99.2.3.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "Description of the software update result. After successful update this object should return a string 'Software updated successfully on <date and time>'. If the update failed the returned value should be 'Software update failed'. "
  },
  "moduleRegistry": {
    "name": "moduleRegistry",
    "oid": "1.3.6.1.4.1.3715.99.2.4",
    "class": "objectidentity"
  },
  "moduleSizeOfTable": {
    "name": "moduleSizeOfTable",
    "oid": "1.3.6.1.4.1.3715.99.2.4.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "optional",
    "description": "This table defines maximum number of entries in the registry tables. All the registry tables have fixed size defined in this table."
  },
  "moduleSizeOfEntry": {
    "name": "moduleSizeOfEntry",
    "oid": "1.3.6.1.4.1.3715.99.2.4.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "moduleId",
        "implied": 0
      }
    ],
    "status": "optional"
  },
  "sizeOfRegistry": {
    "name": "sizeOfRegistry",
    "oid": "1.3.6.1.4.1.3715.99.2.4.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Max number of entries in the registryTable. The entries in the registryTable are numbered from 1..sizeofRegistry."
  },
  "sizeOfRepairlog": {
    "name": "sizeOfRepairlog",
    "oid": "1.3.6.1.4.1.3715.99.2.4.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "Max number of entries in the repairlogTable. First entry (oldest entry) is deleted, when a new entry is added and the table is full."
  },
  "sizeOfNotebook": {
    "name": "sizeOfNotebook",
    "oid": "1.3.6.1.4.1.3715.99.2.4.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "Max number of entries in the notebookTable. The lines in the notebookTable are numbered from 1..sizeofNotebook."
  },
  "moduleRegistryTable": {
    "name": "moduleRegistryTable",
    "oid": "1.3.6.1.4.1.3715.99.2.4.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "optional",
    "description": "This table lists user data for all modules installed inside the element. Table is indexed by the moduleId and regIndex. regIndex can have values 1..sizeofRegistry. A registryEntry is 'deleted' by setting its name to an empty string."
  },
  "moduleRegistryEntry": {
    "name": "moduleRegistryEntry",
    "oid": "1.3.6.1.4.1.3715.99.2.4.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "moduleId",
        "implied": 0
      },
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "regIndex",
        "implied": 0
      }
    ],
    "status": "optional"
  },
  "regIndex": {
    "name": "regIndex",
    "oid": "1.3.6.1.4.1.3715.99.2.4.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "A second index to registryTable. Can have values 1..sizeofRegistryTable."
  },
  "regName": {
    "name": "regName",
    "oid": "1.3.6.1.4.1.3715.99.2.4.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Descriptive name for the parameter. The agent is allowed to limit the length of the name. Minimum length of eight characters must be supported. Writing empty string to this object removes it from the registryTable."
  },
  "regValue": {
    "name": "regValue",
    "oid": "1.3.6.1.4.1.3715.99.2.4.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Textual information describing the parameter information. The agent is allowed to limit the length of the name. Minimum length of eight characters must be supported."
  },
  "moduleRepairLogTable": {
    "name": "moduleRepairLogTable",
    "oid": "1.3.6.1.4.1.3715.99.2.4.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "optional",
    "description": "This table contains repair history entries for modules in the element. The table is indexed with moduleId and repairLogDate. The table can have sizeofRepairlog number of entries. If this number is exceeded when writing a new entry, the oldest entry is deleted and and a new entry is added."
  },
  "moduleRepairLogEntry": {
    "name": "moduleRepairLogEntry",
    "oid": "1.3.6.1.4.1.3715.99.2.4.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "moduleId",
        "implied": 0
      },
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "repairIndex",
        "implied": 0
      }
    ],
    "status": "optional",
    "description": "Row entry in RepairLogTable. Note that it uses double index: moduleId repairIndex. that uniquely identify each log entry. Rows for particular module exist only if there is row, that represents this module in the moduleTable. A row is 'deleted' by giving a date 0000-00-00."
  },
  "repairIndex": {
    "name": "repairIndex",
    "oid": "1.3.6.1.4.1.3715.99.2.4.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 32767
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "Row number of the Repairlog entry. Can have values between 1..sizeOfRepairlog. This field is a second index to moduleRepairLogTable."
  },
  "repairDate": {
    "name": "repairDate",
    "oid": "1.3.6.1.4.1.3715.99.2.4.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Date of this repair entry formatted as CCYY-MM-DD."
  },
  "repairReasonCode": {
    "name": "repairReasonCode",
    "oid": "1.3.6.1.4.1.3715.99.2.4.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Repair code for this entry."
  },
  "repairNameCode": {
    "name": "repairNameCode",
    "oid": "1.3.6.1.4.1.3715.99.2.4.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Repairer name code (initials) for this entry."
  },
  "repairComment": {
    "name": "repairComment",
    "oid": "1.3.6.1.4.1.3715.99.2.4.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Comment of the repair event. The agent is allowed to truncate the length of the comment, if it is too long to internal storage."
  },
  "moduleNotebookTable": {
    "name": "moduleNotebookTable",
    "oid": "1.3.6.1.4.1.3715.99.2.4.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "optional",
    "description": "Notebook is a free text area for manager or serviceman notes. It is divided into 50 character long character blocks or lines. Each line is an entry in the notebookTable. Indices are moduleName and lineNumber. A new line with the same lineNumber overwrites the old line."
  },
  "moduleNotebookEntry": {
    "name": "moduleNotebookEntry",
    "oid": "1.3.6.1.4.1.3715.99.2.4.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "moduleId",
        "implied": 0
      },
      {
        "module": "TELESTE-COMMON-MIB",
        "object": "notebookLineNumber",
        "implied": 0
      }
    ],
    "status": "optional"
  },
  "notebookLineNumber": {
    "name": "notebookLineNumber",
    "oid": "1.3.6.1.4.1.3715.99.2.4.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "optional",
    "description": "The line number of the notebookTextLine. The number must be in between 1..sizeofNotebook. inclusive. Numbers should be used consecutively."
  },
  "notebookLineText": {
    "name": "notebookLineText",
    "oid": "1.3.6.1.4.1.3715.99.2.4.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 50
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "optional",
    "description": "Text field for storing notes about the module."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/TELESTE-COMMON-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 19:10:04 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "TELESTE-COMMON-MIB"
  }
}