{
  "imports": {
    "class": "imports",
    "IF-MIB": [
      "InterfaceIndex"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP",
      "OBJECT-GROUP"
    ],
    "SNMPv2-SMI": [
      "TimeTicks",
      "Gauge32",
      "Counter32",
      "Integer32",
      "Counter64",
      "OBJECT-IDENTITY",
      "enterprises",
      "MODULE-IDENTITY",
      "IpAddress",
      "MibIdentifier",
      "OBJECT-TYPE",
      "NOTIFICATION-TYPE",
      "Bits",
      "iso",
      "Unsigned32"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION",
      "RowStatus"
    ]
  },
  "atmfCES": {
    "name": "atmfCES",
    "oid": "1.3.6.1.4.1.353.5.2.2",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "1995-02-03 00:00",
        "description": "The MIB Module to describe the DS1/E1Circuit Emulation Interworking Function (Version 1.0) Note: The new Version 2 CES MIB replaces this earlier Version 1 CES MIB which exists as the (deprecated) first branch from the overall atmfCESmib object."
      }
    ],
    "lastupdated": "9611050000Z",
    "organization": "ATM Forum Circuit Emulation Working Group",
    "contactinfo": "The ATM Forum 2570 West El Camino Real, Suite 304 Mountain View, CA 94040-1313 USA Phone: +1 415-949-6700 Fax: +1 415-949-6705 info@atmforum.com",
    "description": "The MIB module used to describe the Circuit Emulation Interworking Function (Version 2.0)"
  },
  "atmForum": {
    "name": "atmForum",
    "oid": "1.3.6.1.4.1.353",
    "class": "objectidentity"
  },
  "atmForumNetworkManagement": {
    "name": "atmForumNetworkManagement",
    "oid": "1.3.6.1.4.1.353.5",
    "class": "objectidentity"
  },
  "atmfCESmib": {
    "name": "atmfCESmib",
    "oid": "1.3.6.1.4.1.353.5.2",
    "class": "objectidentity"
  },
  "VpiInteger": {
    "name": "VpiInteger",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "status": "current",
    "description": "An integer large enough to hold a VPI"
  },
  "VciInteger": {
    "name": "VciInteger",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "status": "current",
    "description": "An integer large enough to hold a VCI"
  },
  "CESConnectionPort": {
    "name": "CESConnectionPort",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": "Indicates the port associated with a Circuit Emulation connection. Objects of this type are always defined as part of a set that includes fooPort CESConnectionPort fooVpi VpiInteger fooVci VciInteger The interpretation of these objects is as follows: 1. If no connection exists, 'fooPort' has a value of 0. Because Interface table entries always have 'ifIndex' values greater than 0, 'fooPort' reliably serves as a 'connection exists' flag. If no connection exists, 'fooVpi' and 'fooVci' are not relevant and have a value of 0. 2. If a PVC or SVC exists, 'fooPort' is defined to have the value of the MIB-II/RFC1573 'ifIndex' of the ATM interface associated with the VCC. The ifType associated with such an ifIndex value is either atm(37) or atmLogical(80). 'fooVpi' and 'fooVci' will contain its VPI/VCI. AXD301 comment: The value of an object of this type will always be greater than zero, i.e. INTEGER (1..2147483647). The ifType of the associated interface always has the value atm(37). There is no 'connection exists' flag characteristics implemented for attributes having this datatype. An attribute object instance having this datatype will receive its value at creation and maintain the value irrespective of the state of any ATM connection."
  },
  "AtmAddr": {
    "name": "AtmAddr",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 8,
            "max": 8
          },
          {
            "min": 20,
            "max": 20
          }
        ]
      }
    },
    "displayhint": "1x",
    "status": "current",
    "description": "The ATM address used by the network entity. The address types are: no address (0 octets), E.164 (8 octets), and NSAP-encoded ATM Endsystem Address (20 octets). Note: The E.164 address is encoded in BCD format."
  },
  "AtmfCESCbrService": {
    "name": "AtmfCESCbrService",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unstructured": 1,
          "structured": 2
        }
      }
    }
  },
  "AtmfCESCbrClockMode": {
    "name": "AtmfCESCbrClockMode",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "synchronous": 1,
          "srts": 2,
          "adaptive": 3
        }
      }
    }
  },
  "AtmfCESCas": {
    "name": "AtmfCESCas",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "basic": 1,
          "e1Cas": 2,
          "ds1SfCas": 3,
          "ds1EsfCas": 4,
          "j2Cas": 5
        }
      }
    }
  },
  "AtmfCESCellLossIntegrationPeriod": {
    "name": "AtmfCESCellLossIntegrationPeriod",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1000,
            "max": 65535
          }
        ]
      }
    }
  },
  "AtmfCESConnType": {
    "name": "AtmfCESConnType",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "pvc": 2,
          "activeSvc": 3,
          "passiveSvc": 4
        }
      }
    }
  },
  "AtmfCESAdminStatus": {
    "name": "AtmfCESAdminStatus",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    }
  },
  "AtmfCESOperStatus": {
    "name": "AtmfCESOperStatus",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2,
          "unknown": 3
        }
      }
    }
  },
  "atmfCESObjects": {
    "name": "atmfCESObjects",
    "oid": "1.3.6.1.4.1.353.5.2.2.1",
    "class": "objectidentity"
  },
  "atmfCESConfTable": {
    "name": "atmfCESConfTable",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The CES configuration table used to manage interworking between CBR interfaces or channels and ATM Virtual Channel Links (VCLs). The reverse mapping is shown in the atmfCESMappingTable."
  },
  "atmfCESConfEntry": {
    "name": "atmfCESConfEntry",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESCbrIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the CES configuration table. There is one entry in the table per CES entity, mapping one CBR interface, channel, or bundle to an ATM VCL. Creation of a row in this table with a non-zero atmfCESAtmIndex causes a corresponding entry in the atmVclTable of the ATM-MIB (RFC1695) to be created. AXD301 comment: atmVclTable of the ATM-MIB (RFC1695) is not supported. There is one entry in the table for each structured or unstructured CES created from the operator's MIB interface. A structured CES is created and deleted in the 'cesExtTable' (see Axd301CesExt-SWS.mib). An entry is then automatically created or deleted in the 'atmfCESConfTable' using the corresponding CES ifIndex (partial key to the corresponding entry in the 'cesExtTable') as key. An unstructured CES is created and deleted directly in this table, using the corresponding CE Link's ifIndex as key to the entry. An unstructured CES has no representation in the 'cesExtTable' and no new object instance is created for it in the ifTable. Parameter configuration after create in the table can only be done when the attribute atmfCESAdminStatus is set to blocked. Only attributes that are allowed to change will be accepted, other attributes will be rejected even if they do not change the value."
  },
  "atmfCESCbrIndex": {
    "name": "atmfCESCbrIndex",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndex",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The value of this object is equal to MIB II's ifIndex value of the CBR interface, channel, or bundle that is being cross-connected to an ATM VCL. AXD301 comment: Structured CESes will have the ifType ds0Bundle(82) in the ifTable. Unstructured CESes will use the same ifIndex, with its respective ifType, as the corresponding CE Link, e.g. an unstructured CES defined for an E1 CE Link on a 2 Mbps LIB will have the ifType ds1(18)."
  },
  "atmfCESAtmIndex": {
    "name": "atmfCESAtmIndex",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CESConnectionPort",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The value of this object is equal to MIB II's ifIndex value of the ATM Port interface mapped through this CES IWF to a CBR interface. This value is overwritten whenever an active or passive SVC is established. The distinguished value zero indicates that no ATM interface has been specified. AXD301 comment: The value will never be zero and it will never be overwritten."
  },
  "atmfCESAtmVpi": {
    "name": "atmfCESAtmVpi",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VpiInteger",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The value of this object is equal to the VPI used by the ATM VCL mapped through this CES IWF to a CBR interface. This value is overwritten whenever an active or passive SVC is established. The value is not relevant if no ATM interface has been specified (i.e., atmfCESAtmIndex is set to zero). AXD301 comment: The value will never be zero and it will never be overwritten."
  },
  "atmfCESAtmVci": {
    "name": "atmfCESAtmVci",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VciInteger",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The value of this object is equal to the VCI used by the ATM VCL mapped through this CES IWF to a CBR interface. This value is overwritten whenever an active or passive SVC is established. The distinguished value zero indicates that no ATM VCL has been specified. AXD301 comment: The value will never be zero and it will never be overwritten."
  },
  "atmfCESCbrService": {
    "name": "atmfCESCbrService",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmfCESCbrService",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Define if DSx/Ex service is structured or unstructured. A structured(2) interface is some nx64kbKbps. An unstructured (1) interface is 1.544Mbps, 2.048Mbps, 6.312Mbps, 44.736 Mbps, or 34.368 Mbps. unstructured(1) passes all bits through the ATM network. structured(2) passes data bits through the ATM network, and may also pass signalling bits At this time, only unstructured mode is defined for the 44.736 Mbps and 34.368 Mbps services. AXD301 comment: Structured service is supported only for 2.048 Mbps CE Links. Unstructured service is supported only for 2.048 Mbps CE Links and 44.736 Mbps CE Links. The value can not be changed after the object has been created."
  },
  "atmfCESCbrClockMode": {
    "name": "atmfCESCbrClockMode",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmfCESCbrClockMode",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "synchronous",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Define if DSx/Ex service clocking mode. This maps into transmit clock source of CBR interface. For structured modes this value, if present, must be set to synchronous(1). AXD301 comment: Only synchronous(1) is supported for 2.048 Mbps CE Links. For 44.736 Mbps CE Links, synchronous(1) and srts(2) are supported."
  },
  "atmfCESCas": {
    "name": "atmfCESCas",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmfCESCas",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "basic",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This parameter selects which AAL1 Format should be used: Basic does not carry CAS bits, and uses a single 125 usec frame. e1Cas, ds1SfCas, dS1EsfCas and j2Cas carry CAS bits in a multiframe structure for E1, DS1 SF, DS1 ESF and J2 respectively. This applies to structured interfaces only. Default is basic (1). For unstructured interfaces this value, if present, must be set to the default of basic (1). AXD301 comment: Only support for basic(1)."
  },
  "atmfCESPartialFill": {
    "name": "atmfCESPartialFill",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 46
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "If partial cell fill is used, the number of user octets per cell must be set with this parameter. Setting this parameter to zero disables partial cell fill, and causes all cells to be completely filled before they are sent. AXD301 comment: Possible partial fill level in HW is 0 or 4-46 user octets. Setting this parameter to zero disables partial cell fill, and causes all cells to be completely filled before they are sent. This column can only be set when the CES is administratively blocked or during create."
  },
  "atmfCESBufMaxSize": {
    "name": "atmfCESBufMaxSize",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65536
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 128,
        "format": "decimal"
      }
    },
    "units": "10 usec",
    "maxaccess": "read-create",
    "status": "current",
    "description": "Define maximum size in 10 microsecond increments of the reassembly buffer. Some implementations may want allow the maximum buffer size to be programmed to a size less than the physical limit to reduce the maximum delay through a circuit. AXD301 comment: The buffer max size is not relevant in the AXD301 implementation because it does not affect the maximum delay. The value can be set to any value but it is ignored. When read, 65535 is returned."
  },
  "atmfCESCdvRxT": {
    "name": "atmfCESCdvRxT",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 800
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 100,
        "format": "decimal"
      }
    },
    "units": "10 usec",
    "maxaccess": "read-create",
    "status": "current",
    "description": "The maximum cell arrival jitter in 10 usec increments that the reassembly process will tolerate in the cell stream without producing errors on the CBR service interface. AXD301 comment: The minimum value of this attribute is 1. For a CES using an E1 CE Link the maximum value for this attribute is 800, which means that CDV of up to 8 ms peak-to-peak can be tolerated. For a CES using a DS3 CE Links the maximum value for this attribute is 290, which means that CDV of up to 2.90 ms peak-to-peak can be tolerated. This column can only be set when the CES is administratively blocked or during create."
  },
  "atmfCESCellLossIntegrationPeriod": {
    "name": "atmfCESCellLossIntegrationPeriod",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmfCESCellLossIntegrationPeriod",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 2500,
        "format": "decimal"
      }
    },
    "units": "msec",
    "maxaccess": "read-create",
    "status": "current",
    "description": "The time in milliseconds for the cell loss integration period. If cells are continuously lost for this period of time, atmfCESCellLossStatus is set to loss (2). The default definition is 2500. AXD301 comment: Any value will be reduced to the nearest lower multiple of 500. This column can only be set when the CES is administratively blocked or during create."
  },
  "atmfCESConnType": {
    "name": "atmfCESConnType",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmfCESConnType",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The type of ATM connectivity between associated CES IWF's. Valid values are: other - none of the types specified below pvc - supporting connectivity is a permanent virtual connection activeSvc - attempt calls whenever none established passiveSvc - accept calls AXD301 comment: Only support for pvc(2)."
  },
  "atmfCESLocalAddr": {
    "name": "atmfCESLocalAddr",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmAddr",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The ATM address of the local CES IWF process. This address may be used by the automatic SVC establishment procedures to identify the intended recipient CES IWF of an incoming automatic SVC call request. Optionally, the MAX-ACCESS of this object may be read-only, for those implementations where it is not desired to manually configure this address. AXD301 comment: This is not used, the value will always be no address (0 octets), any other value will be ignored."
  },
  "atmfCESAdminStatus": {
    "name": "atmfCESAdminStatus",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmfCESAdminStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The desired administrative status of the CES interworking function. The up and down states indicate that the traffic flow is enabled or disabled respectively across the CES interworking function."
  },
  "atmfCESOperStatus": {
    "name": "atmfCESOperStatus",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmfCESOperStatus",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The operational status of the CES interworking function. The up and down states indicate that the traffic flow is enabled or disabled respectively across the CES interworking function. The unknown state indicates that the state of the CES interworking function cannot be determined. The state will be down or unknown if the supporting CBR or ATM interfaces are down or unknown, respectively. AXD301 comment: The CES's operStatus will become down when the corresponding Line Interface Board (LIB) is disabled. The corresponding CE Link's operState will not affect the CES's operState."
  },
  "atmfCESConfRowStatus": {
    "name": "atmfCESConfRowStatus",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object is used to create new rows in this table, modify existing rows, and to delete existing rows. AXD301 comment: The following values are supported for structured and unstructured CESes respectively: For unstructured CESes ====================== - createAndGo(4) - active(1) - destroy(6) For structured CESes ==================== - active(1)"
  },
  "atmfCESMappingTable": {
    "name": "atmfCESMappingTable",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The CES mapping table used to show the mapping from ATM VCLs to CBR interfaces or channels. The mapping and interworking functions are configured in the atmfCESConfTable."
  },
  "atmfCESMappingEntry": {
    "name": "atmfCESMappingEntry",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESAtmIndex",
        "implied": 0
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESAtmVpi",
        "implied": 0
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESAtmVci",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the CES mapping table. There is one entry in the table corresponding to each active row in the atmfCESConfTable for which there is a non-zero atmfCESAtmIndex."
  },
  "atmfCESMappingCbrIndex": {
    "name": "atmfCESMappingCbrIndex",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The value of this object is equal to MIB II's ifIndex value of the CBR interface, channel, or bundle that is being cross-connected to an ATM VCL. Examples of the ifType value for the CBR entity are ds1(18), ds3(30), ds0(81), or ds0bundle(82). AXD301 comment: The ifType value is ds0Bundle(82) for a structured CES. For an unstructured CES the ifType is the same as for the CE Link."
  },
  "AtmfCESCellLossStatus": {
    "name": "AtmfCESCellLossStatus",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noLoss": 1,
          "loss": 2
        }
      }
    }
  },
  "atmfCESStatsTable": {
    "name": "atmfCESStatsTable",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The CES AAL1 statistical data table."
  },
  "atmfCESStatsEntry": {
    "name": "atmfCESStatsEntry",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "augmention": {
      "name": "atmfCESStatsEntry",
      "module": "Axd301Ces-SWS",
      "object": "atmfCESConfEntry"
    },
    "status": "current",
    "description": "An entry in the CES AAL1 Stats table. There is one entry in this table corresponding to each entry in the atmfCESConfTable."
  },
  "atmfCESReassCells": {
    "name": "atmfCESReassCells",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This count gives the number of cells played out to the CES Service Interface. It excludes cells that were discarded for any reason, including cells that were not used due to being declared misinserted, or discarded while the reassembler was waiting to achieve synchronization. AXD301 comment: This count is not supported."
  },
  "atmfCESHdrErrors": {
    "name": "atmfCESHdrErrors",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The count of the number of AAL1 header errors detected, including those corrected. Header errors include correctable and uncorrectable CRC, plus bad parity. AXD301 comment: No correction of AAL1 header errors implemented. Cells found with AAL1 header errors are dropped."
  },
  "atmfCESPointerReframes": {
    "name": "atmfCESPointerReframes",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This records the count of the number of events in which the AAL1 reassembler found that an SDT pointer is not where it is expected, and the pointer must be reacquired. This count is only meaningful for structured CES modes, as unstructured CES modes do not use pointers. For unstructured CES modes, this count, if present, should indicate zero."
  },
  "atmfCESPointerParityErrors": {
    "name": "atmfCESPointerParityErrors",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This records the count of the number of events in which the AAL1 reassembler detects a parity check failure at the point where a structured data pointer is expected. This count is only meaningful for structured CES modes, as unstructured CES modes do not use pointers. For unstructured CES modes, this count, if present, should indicate zero."
  },
  "atmfCESAal1SeqErrors": {
    "name": "atmfCESAal1SeqErrors",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of times that the sequence number of an incoming AAL1 Type 1 SAR-PDU causes a transition from the 'sync' state to the 'out of sequence' state, as defined by ITU-T I.363.1."
  },
  "atmfCESLostCells": {
    "name": "atmfCESLostCells",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of lost cells, as detected by the AAL1 sequence number processing, for example. This records the count of the number of cells detected as lost in the network prior to the destination CES IWF AAL1 layer processing."
  },
  "atmfCESMisinsertedCells": {
    "name": "atmfCESMisinsertedCells",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of AAL1 sequence violations which the AAL Convergence sublayer interprets as a misinserted cell, as defined by ITU-T I.363.1."
  },
  "atmfCESBufUnderflows": {
    "name": "atmfCESBufUnderflows",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of buffer underflows. This records the count of the number of times the CES reassembly buffer underflows. In the case of a continuous underflow caused by a loss of ATM cell flow, a single buffer underflow should be counted. If the CES IWF is implemented with multiple buffers (such as a cell level buffer and a bit level buffer), then either buffer underflow will cause this count to be incremented."
  },
  "atmfCESBufOverflows": {
    "name": "atmfCESBufOverflows",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of buffer overflows. This records the count of the number of times the CES reassembly buffer overflows. If the CES IWF is implemented with multiple buffers (such as a cell level buffer and a bit level buffer, then either buffer overflow will cause this count to be incremented."
  },
  "atmfCESCellLossStatus": {
    "name": "atmfCESCellLossStatus",
    "oid": "1.3.6.1.4.1.353.5.2.2.1.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmfCESCellLossStatus",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "When cells are continuously lost for the number of milliseconds specified by atmfCESCellLossIntegrationPeriod, the value is set to loss (2). When cells are no longer lost, the value is set to noLoss (1)."
  },
  "atmfCESConformance": {
    "name": "atmfCESConformance",
    "oid": "1.3.6.1.4.1.353.5.2.2.2",
    "class": "objectidentity"
  },
  "atmfCESGroups": {
    "name": "atmfCESGroups",
    "oid": "1.3.6.1.4.1.353.5.2.2.2.1",
    "class": "objectidentity"
  },
  "atmfCESCompliances": {
    "name": "atmfCESCompliances",
    "oid": "1.3.6.1.4.1.353.5.2.2.2.2",
    "class": "objectidentity"
  },
  "atmfCESCompliance": {
    "name": "atmfCESCompliance",
    "oid": "1.3.6.1.4.1.353.5.2.2.2.2.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "atmfCESBasicConfigGroup",
        "module": "Axd301Ces-SWS"
      },
      {
        "object": "atmfCESBasicStatsGroup",
        "module": "Axd301Ces-SWS"
      },
      {
        "object": "atmfCESStructConfigGroup",
        "module": "Axd301Ces-SWS"
      },
      {
        "object": "atmfCESStructStatsGroup",
        "module": "Axd301Ces-SWS"
      }
    ],
    "status": "current",
    "description": "The compliance statement for SNMP entities which support the ATM Forum Circuit Emulation Services."
  },
  "atmfCESBasicConfigGroup": {
    "name": "atmfCESBasicConfigGroup",
    "oid": "1.3.6.1.4.1.353.5.2.2.2.1.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESAtmIndex"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESAtmVpi"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESAtmVci"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESCbrService"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESCbrClockMode"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESBufMaxSize"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESCdvRxT"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESCellLossIntegrationPeriod"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESConnType"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESLocalAddr"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESConfRowStatus"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing configuration information for generic Circuit Emulation Service IWFs."
  },
  "atmfCESOptionalConfigGroup": {
    "name": "atmfCESOptionalConfigGroup",
    "oid": "1.3.6.1.4.1.353.5.2.2.2.1.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESAdminStatus"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESOperStatus"
      }
    ],
    "status": "current",
    "description": "A collection of optional objects providing configuration information for generic Circuit Emulation Service IWFs."
  },
  "atmfCESBasicStatsGroup": {
    "name": "atmfCESBasicStatsGroup",
    "oid": "1.3.6.1.4.1.353.5.2.2.2.1.3",
    "class": "objectgroup",
    "objects": [
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESReassCells"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESHdrErrors"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESBufUnderflows"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESBufOverflows"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESCellLossStatus"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing statistics information for generic Circuit Emulation Service IWFs."
  },
  "atmfCESOptionalStatsGroup": {
    "name": "atmfCESOptionalStatsGroup",
    "oid": "1.3.6.1.4.1.353.5.2.2.2.1.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESAal1SeqErrors"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESLostCells"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESMisinsertedCells"
      }
    ],
    "status": "current",
    "description": "A collection of optional objects providing statistics information for generic Circuit Emulation Service IWFs."
  },
  "atmfCESStructConfigGroup": {
    "name": "atmfCESStructConfigGroup",
    "oid": "1.3.6.1.4.1.353.5.2.2.2.1.5",
    "class": "objectgroup",
    "objects": [
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESCas"
      },
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESPartialFill"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing configuration information for Structured DS1, E1 or J2 Nx64 kbit/s Service IWFs."
  },
  "atmfCESStructStatsGroup": {
    "name": "atmfCESStructStatsGroup",
    "oid": "1.3.6.1.4.1.353.5.2.2.2.1.6",
    "class": "objectgroup",
    "objects": [
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESPointerReframes"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing statistics information for Structured DS1, E1 or J2 Nx64 kbit/s Service IWFs."
  },
  "atmfCESOptionalStructStatsGroup": {
    "name": "atmfCESOptionalStructStatsGroup",
    "oid": "1.3.6.1.4.1.353.5.2.2.2.1.7",
    "class": "objectgroup",
    "objects": [
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESPointerParityErrors"
      }
    ],
    "status": "current",
    "description": "A collection of optional objects providing statistics information for Structured DS1, E1 or J2 Nx64 kbit/s Service IWFs."
  },
  "atmfCESMappingGroup": {
    "name": "atmfCESMappingGroup",
    "oid": "1.3.6.1.4.1.353.5.2.2.2.1.8",
    "class": "objectgroup",
    "objects": [
      {
        "module": "Axd301Ces-SWS",
        "object": "atmfCESMappingCbrIndex"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing information about the mapping from ATM VCLs to CBR interfaces or channels."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/Axd301Ces-SWS.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:15:44 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "Axd301Ces-SWS"
  }
}