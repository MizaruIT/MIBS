{
  "imports": {
    "class": "imports",
    "IANA-MALLOC-MIB": [
      "IANAscopeSource",
      "IANAmallocRangeSource"
    ],
    "INET-ADDRESS-MIB": [
      "InetAddressType",
      "InetAddress"
    ],
    "IPMROUTE-STD-MIB": [
      "LanguageTag"
    ],
    "SNMP-FRAMEWORK-MIB": [
      "SnmpAdminString"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP",
      "OBJECT-GROUP"
    ],
    "SNMPv2-SMI": [
      "Counter32",
      "TimeTicks",
      "Gauge32",
      "mib-2",
      "OBJECT-IDENTITY",
      "Integer32",
      "Bits",
      "MODULE-IDENTITY",
      "Counter64",
      "NOTIFICATION-TYPE",
      "IpAddress",
      "iso",
      "Unsigned32",
      "MibIdentifier",
      "OBJECT-TYPE"
    ],
    "SNMPv2-TC": [
      "TruthValue",
      "TEXTUAL-CONVENTION",
      "DisplayString",
      "StorageType",
      "RowStatus"
    ]
  },
  "mallocMIB": {
    "name": "mallocMIB",
    "oid": "1.3.6.1.2.1.101",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2003-06-09 00:00",
        "description": "Initial version, published as RFC 3559."
      }
    ],
    "lastupdated": "200306090000Z",
    "organization": "IETF MALLOC Working Group",
    "contactinfo": " WG-EMail: malloc@catarina.usc.edu Subscribe: malloc-request@catarina.usc.edu Archive: catarina.usc.edu/pub/multicast/malloc/ Co-chair/editor: Dave Thaler Microsoft Corporation One Microsoft Way Redmond, WA 98052 EMail: dthaler@microsoft.com Co-chair: Steve Hanna Sun Microsystems, Inc. One Network Drive Burlington, MA 01803 EMail: steve.hanna@sun.com",
    "description": "The MIB module for management of multicast address allocation. Copyright (C) The Internet Society (2003). This version of this MIB module is part of RFC 3559; see the RFC itself for full legal notices."
  },
  "mallocMIBObjects": {
    "name": "mallocMIBObjects",
    "oid": "1.3.6.1.2.1.101.1",
    "class": "objectidentity"
  },
  "malloc": {
    "name": "malloc",
    "oid": "1.3.6.1.2.1.101.1.1",
    "class": "objectidentity"
  },
  "madcap": {
    "name": "madcap",
    "oid": "1.3.6.1.2.1.101.1.2",
    "class": "objectidentity"
  },
  "mallocCapabilities": {
    "name": "mallocCapabilities",
    "oid": "1.3.6.1.2.1.101.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "startTime": 0,
        "serverMobility": 1,
        "retryAfter": 2
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object describes the capabilities which a client or server supports. The startTime bit indicates that allocations with a future start time are supported. The serverMobility bit indicates that allocations can be renewed or released from a server other than the one granting the original allocation. The retryAfter bit indicates support for a waiting state where the client may check back at a later time to get the status of its request."
  },
  "mallocScopeTable": {
    "name": "mallocScopeTable",
    "oid": "1.3.6.1.2.1.101.1.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The (conceptual) table containing information on multicast scopes from which addresses may be allocated. Entries in this table may be dynamically discovered via some other protocol, such as MZAP, or may be statically configured, such as in an isolated network environment. Each scope is associated with a range of multicast addresses, and ranges for different rows must be disjoint."
  },
  "mallocScopeEntry": {
    "name": "mallocScopeEntry",
    "oid": "1.3.6.1.2.1.101.1.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeAddressType",
        "implied": 0
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeFirstAddress",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry (conceptual row) containing the information on a particular multicast scope."
  },
  "mallocScopeAddressType": {
    "name": "mallocScopeAddressType",
    "oid": "1.3.6.1.2.1.101.1.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The type of the addresses in the multicast scope range. Legal values correspond to the subset of address families for which multicast address allocation is supported."
  },
  "mallocScopeFirstAddress": {
    "name": "mallocScopeFirstAddress",
    "oid": "1.3.6.1.2.1.101.1.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The first address in the multicast scope range. The type of this address is determined by the value of the mallocScopeAddressType object."
  },
  "mallocScopeLastAddress": {
    "name": "mallocScopeLastAddress",
    "oid": "1.3.6.1.2.1.101.1.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The last address in the multicast scope range. The type of this address is determined by the value of the mallocScopeAddressType object."
  },
  "mallocScopeHopLimit": {
    "name": "mallocScopeHopLimit",
    "oid": "1.3.6.1.2.1.101.1.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 255,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The default IPv4 TTL or IPv6 hop limit which applications should use for groups within the scope."
  },
  "mallocScopeStatus": {
    "name": "mallocScopeStatus",
    "oid": "1.3.6.1.2.1.101.1.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status of this row, by which new entries may be created, or old entries deleted from this table. If write access is supported, the other writable objects in this table may be modified even while the status is `active'."
  },
  "mallocScopeSource": {
    "name": "mallocScopeSource",
    "oid": "1.3.6.1.2.1.101.1.1.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IANAscopeSource",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The method by which this entry was learned."
  },
  "mallocScopeDivisible": {
    "name": "mallocScopeDivisible",
    "oid": "1.3.6.1.2.1.101.1.1.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "If false, the server may allocate addresses out of the entire range. If true, the server must not allocate addresses out of the entire range, but may only allocate addresses out of a subrange learned via another method. Creating or deleting a scope which is not divisible has the side effect of creating or deleting the corresponding entry in the mallocAllocRangeTable. Deleting a scope which is divisible has the side effect of deleting any corresponding entries in the mallocAllocRangeTable, and the mallocRequestTable."
  },
  "mallocScopeServerAddressType": {
    "name": "mallocScopeServerAddressType",
    "oid": "1.3.6.1.2.1.101.1.1.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "unknown",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The type of the address of a multicast address allocation server to which a request may be sent."
  },
  "mallocScopeServerAddress": {
    "name": "mallocScopeServerAddress",
    "oid": "1.3.6.1.2.1.101.1.1.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The address of a multicast address allocation server to which a request may be sent. The default value is an zero- length address, indicating that no server is known. The type of this address is determined by the value of the mallocScopeServerAddressType object."
  },
  "mallocScopeSSM": {
    "name": "mallocScopeSSM",
    "oid": "1.3.6.1.2.1.101.1.1.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Indicates whether the scope is a Source-Specific Multicast (SSM) range."
  },
  "mallocScopeStorage": {
    "name": "mallocScopeStorage",
    "oid": "1.3.6.1.2.1.101.1.1.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "nonVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The storage type for this conceptual row. Conceptual rows having the value 'permanent' need not allow write-access to any columnar objects in the row."
  },
  "mallocScopeNameTable": {
    "name": "mallocScopeNameTable",
    "oid": "1.3.6.1.2.1.101.1.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The (conceptual) table containing information on multicast scope names. Entries in this table may be dynamically discovered via some other protocol, such as MZAP, or may be statically configured, such as in an isolated network environment."
  },
  "mallocScopeNameEntry": {
    "name": "mallocScopeNameEntry",
    "oid": "1.3.6.1.2.1.101.1.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeAddressType",
        "implied": 0
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeFirstAddress",
        "implied": 0
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeNameLangName",
        "implied": 1
      }
    ],
    "status": "current",
    "description": "An entry (conceptual row) containing the information on a particular multicast scope name."
  },
  "mallocScopeNameLangName": {
    "name": "mallocScopeNameLangName",
    "oid": "1.3.6.1.2.1.101.1.1.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LanguageTag",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 94
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The RFC 3066 language tag for the language of the scope name."
  },
  "mallocScopeNameScopeName": {
    "name": "mallocScopeNameScopeName",
    "oid": "1.3.6.1.2.1.101.1.1.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The textual name associated with the multicast scope. The value of this object should be suitable for displaying to end-users, such as when allocating a multicast address in this scope. If the scope is an IPv4 scope, and no name is specified, the default value of this object should be the string 239.x.x.x/y with x and y replaced appropriately to describe the address and mask length associated with the scope. If the scope is an IPv6 scope, and no name is specified, the default value of this object should generically describe the scope level (e.g., site)."
  },
  "mallocScopeNameDefault": {
    "name": "mallocScopeNameDefault",
    "oid": "1.3.6.1.2.1.101.1.1.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "If true, indicates a preference that the name in the associated language should be used by applications if no name is available in a desired language."
  },
  "mallocScopeNameStatus": {
    "name": "mallocScopeNameStatus",
    "oid": "1.3.6.1.2.1.101.1.1.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status of this row, by which new entries may be created, or old entries deleted from this table. If write access is supported, the other writable objects in this table may be modified even while the status is `active'."
  },
  "mallocScopeNameStorage": {
    "name": "mallocScopeNameStorage",
    "oid": "1.3.6.1.2.1.101.1.1.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "nonVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The storage type for this conceptual row. Conceptual rows having the value 'permanent' need not allow write-access to any columnar objects in the row."
  },
  "mallocAllocRangeTable": {
    "name": "mallocAllocRangeTable",
    "oid": "1.3.6.1.2.1.101.1.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The (conceptual) table containing information on subranges of addresses from which the device may allocate addresses, if it is a MAAS. If the device is a Prefix Coordinator, any ranges which the device is advertising to MAAS's will be in this table. Note that the device may be both a MAAS and a Prefix Coordinator. Address ranges for different rows must be disjoint, and must be contained with the address range of the corresponding row of the mallocScopeTable. Deleting an allocation range has the side effect of deleting any entries within that range from the mallocAddressTable."
  },
  "mallocAllocRangeEntry": {
    "name": "mallocAllocRangeEntry",
    "oid": "1.3.6.1.2.1.101.1.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeAddressType",
        "implied": 0
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeFirstAddress",
        "implied": 0
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeFirstAddress",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry (conceptual row) containing the information on a particular allocation range."
  },
  "mallocAllocRangeFirstAddress": {
    "name": "mallocAllocRangeFirstAddress",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The first address in the allocation range. The type of this address is determined by the value of the mallocScopeAddressType object."
  },
  "mallocAllocRangeLastAddress": {
    "name": "mallocAllocRangeLastAddress",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The last address in the allocation range. The type of this address is determined by the value of the mallocScopeAddressType object."
  },
  "mallocAllocRangeStatus": {
    "name": "mallocAllocRangeStatus",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status of this row, by which new entries may be created, or old entries deleted from this table. If write access is supported, the other writable objects in this table may be modified even while the status is `active'."
  },
  "mallocAllocRangeSource": {
    "name": "mallocAllocRangeSource",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IANAmallocRangeSource",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The means by which this entry was learned."
  },
  "mallocAllocRangeLifetime": {
    "name": "mallocAllocRangeLifetime",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-create",
    "status": "current",
    "description": "The number of seconds remaining in the lifetime of the (sub)range out of which addresses are being allocated. A value of 0 indicates that the range is not subject to aging."
  },
  "mallocAllocRangeMaxLeaseAddrs": {
    "name": "mallocAllocRangeMaxLeaseAddrs",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The maximum number of addresses which the server is willing to grant for each future request in this range. A value of 0 means that no specific limit is enforced, as long as the server has valid addresses to allocate."
  },
  "mallocAllocRangeMaxLeaseTime": {
    "name": "mallocAllocRangeMaxLeaseTime",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-create",
    "status": "current",
    "description": "The maximum lifetime which the server will grant for future requests in this range. A value of 0 means that no additional limit is enforced beyond that of mallocAllocRangeLifetime."
  },
  "mallocAllocRangeNumAllocatedAddrs": {
    "name": "mallocAllocRangeNumAllocatedAddrs",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of addresses in the range which have been allocated. This value can be used to determine the current address space utilization within the scoped range. This should match the total number of addresses for this scope covered by entries in the mallocAddressTable."
  },
  "mallocAllocRangeNumOfferedAddrs": {
    "name": "mallocAllocRangeNumOfferedAddrs",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of addresses in the range which have been offered. This number should match the sum of mallocRequestNumAddrs for all entries in the mallocRequestTable in the offered state. Together with mallocAllocRangeNumAllocatedAddrs and mallocAllocRangeNumTryingAddrs, this can be used to determine the address space utilization within the scoped range in the immediate future."
  },
  "mallocAllocRangeNumWaitingAddrs": {
    "name": "mallocAllocRangeNumWaitingAddrs",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of addresses in the range which have been requested, but whose state is waiting, while the server attempts to acquire more address space."
  },
  "mallocAllocRangeNumTryingAddrs": {
    "name": "mallocAllocRangeNumTryingAddrs",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of addresses in the scope covered by entries in the mallocRequestTable in the trying state."
  },
  "mallocAllocRangeAdvertisable": {
    "name": "mallocAllocRangeAdvertisable",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The value of this object is true if the range is eligible to be advertised to other MAASs. When the row is first created, the default value of this object is true if the scope is divisible, and is false otherwise."
  },
  "mallocAllocRangeTotalAllocatedAddrs": {
    "name": "mallocAllocRangeTotalAllocatedAddrs",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The approximate number of addresses in the range which have been allocated by any MAAS, as determined by a Prefix Coordinator. This object need only be present if mallocAllocRangeAdvertisable is true. If the number is unknown, a value of 0 may be reported."
  },
  "mallocAllocRangeTotalRequestedAddrs": {
    "name": "mallocAllocRangeTotalRequestedAddrs",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The approximate number of addresses in the range for which there is potential demand among MAASs, as determined by a Prefix Coordinator. This object need only be present if mallocAllocRangeAdvertisable is true. If the number is unknown, a value of 0 may be reported."
  },
  "mallocAllocRangeStorage": {
    "name": "mallocAllocRangeStorage",
    "oid": "1.3.6.1.2.1.101.1.1.4.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "nonVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The storage type for this conceptual row. Conceptual rows having the value 'permanent' need not allow write-access to any columnar objects in the row."
  },
  "mallocRequestTable": {
    "name": "mallocRequestTable",
    "oid": "1.3.6.1.2.1.101.1.1.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The (conceptual) table containing information on allocation requests, whether allocated or in progress. This table may also be used to determine which clients are responsible for high address space utilization within a given scope. Entries in this table reflect requests dynamically received by an address allocation protocol."
  },
  "mallocRequestEntry": {
    "name": "mallocRequestEntry",
    "oid": "1.3.6.1.2.1.101.1.1.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MALLOC-MIB",
        "object": "mallocRequestId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry (conceptual row) containing the information on a particular allocation request."
  },
  "mallocRequestId": {
    "name": "mallocRequestId",
    "oid": "1.3.6.1.2.1.101.1.1.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "An arbitrary value identifying this row."
  },
  "mallocRequestScopeAddressType": {
    "name": "mallocRequestScopeAddressType",
    "oid": "1.3.6.1.2.1.101.1.1.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The type of the first address of the scope to which the request applies. Legal values correspond to the subset of address families for which multicast address allocation is supported."
  },
  "mallocRequestScopeFirstAddress": {
    "name": "mallocRequestScopeFirstAddress",
    "oid": "1.3.6.1.2.1.101.1.1.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The first address of the scope to which the request applies. This must match mallocScopeFirstAddress for some row in the mallocScopeTable. The type of this address is determined by the value of the mallocRequestScopeAddressType object."
  },
  "mallocRequestStartTime": {
    "name": "mallocRequestStartTime",
    "oid": "1.3.6.1.2.1.101.1.1.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of seconds remaining before the start time of the request. A value of 0 means that the allocation is currently in effect."
  },
  "mallocRequestEndTime": {
    "name": "mallocRequestEndTime",
    "oid": "1.3.6.1.2.1.101.1.1.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of seconds remaining before the end time of the request."
  },
  "mallocRequestNumAddrs": {
    "name": "mallocRequestNumAddrs",
    "oid": "1.3.6.1.2.1.101.1.1.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of addresses requested. If the addresses have been allocated, this number should match the total number of addresses for this request covered by entries in the mallocAddressTable."
  },
  "mallocRequestState": {
    "name": "mallocRequestState",
    "oid": "1.3.6.1.2.1.101.1.1.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "allocated": 1,
          "offered": 2,
          "waiting": 3,
          "trying": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The state of the request. A value of allocated(1) indicates that one or more entries for this request are present in the mallocAddressTable. A value of offered(2) indicates that addresses have been offered to the client (e.g. via a MADCAP OFFER message), but the allocation has not been committed. A value of waiting(3) indicates that the allocation is blocked while the server attempts to acquire more space from which it can allocate addresses. A value of trying(4) means that no addresses have been offered to the client, but that an attempt to allocate is in progress."
  },
  "mallocRequestClientAddressType": {
    "name": "mallocRequestClientAddressType",
    "oid": "1.3.6.1.2.1.101.1.1.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The type of the address of the client that (last) requested this allocation."
  },
  "mallocRequestClientAddress": {
    "name": "mallocRequestClientAddress",
    "oid": "1.3.6.1.2.1.101.1.1.5.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The address of the client that (last) requested this allocation. The type of this address is determined by the value of the mallocRequestClientAddressType object."
  },
  "mallocRequestServerAddressType": {
    "name": "mallocRequestServerAddressType",
    "oid": "1.3.6.1.2.1.101.1.1.5.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The type of the address of the server to which the request was (last) sent."
  },
  "mallocRequestServerAddress": {
    "name": "mallocRequestServerAddress",
    "oid": "1.3.6.1.2.1.101.1.1.5.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The address of the server to which the request was (last) sent. The type of this address is determined by the value of the mallocRequestServerAddressType object."
  },
  "mallocRequestLeaseIdentifier": {
    "name": "mallocRequestLeaseIdentifier",
    "oid": "1.3.6.1.2.1.101.1.1.5.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The Lease Identifier of this request. If the allocation mechanism in use does not use Lease Identifiers, then the value is a 0-length string."
  },
  "mallocAddressTable": {
    "name": "mallocAddressTable",
    "oid": "1.3.6.1.2.1.101.1.1.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The (conceptual) table containing information on blocks of allocated addresses. This table may be used to map a given multicast group address to the associated request."
  },
  "mallocAddressEntry": {
    "name": "mallocAddressEntry",
    "oid": "1.3.6.1.2.1.101.1.1.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MALLOC-MIB",
        "object": "mallocAddressAddressType",
        "implied": 0
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAddressFirstAddress",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry (conceptual row) containing the information on a particular block of allocated addresses. The block of addresses covered by each entry in this table must fall within a range corresponding to an entry in the mallocAllocRangeTable."
  },
  "mallocAddressAddressType": {
    "name": "mallocAddressAddressType",
    "oid": "1.3.6.1.2.1.101.1.1.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The type of the first address in the allocated block. Legal values correspond to the subset of address families for which multicast address allocation is supported."
  },
  "mallocAddressFirstAddress": {
    "name": "mallocAddressFirstAddress",
    "oid": "1.3.6.1.2.1.101.1.1.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The first address in the allocated block. The type of this address is determined by the value of the mallocAddressAddressType object."
  },
  "mallocAddressNumAddrs": {
    "name": "mallocAddressNumAddrs",
    "oid": "1.3.6.1.2.1.101.1.1.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of addresses in the allocated block."
  },
  "mallocAddressRequestId": {
    "name": "mallocAddressRequestId",
    "oid": "1.3.6.1.2.1.101.1.1.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The index of the request which caused this block of addresses to be allocated. This value must match the value of mallocRequestId for some entry in the mallocRequestTable."
  },
  "madcapConfig": {
    "name": "madcapConfig",
    "oid": "1.3.6.1.2.1.101.1.2.1",
    "class": "objectidentity",
    "status": "current",
    "description": "Group of objects that count various MADCAP events."
  },
  "madcapConfigExtraAllocationTime": {
    "name": "madcapConfigExtraAllocationTime",
    "oid": "1.3.6.1.2.1.101.1.2.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The amount of extra time on either side of a lease which the MADCAP server allocates to allow for clock skew among clients."
  },
  "madcapConfigNoResponseDelay": {
    "name": "madcapConfigNoResponseDelay",
    "oid": "1.3.6.1.2.1.101.1.2.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The amount of time the MADCAP client allows for receiving a response from a MADCAP server."
  },
  "madcapConfigOfferHold": {
    "name": "madcapConfigOfferHold",
    "oid": "1.3.6.1.2.1.101.1.2.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The amount of time the MADCAP server will reserve an address for after sending an OFFER message in anticipation of receiving a REQUEST message."
  },
  "madcapConfigResponseCacheInterval": {
    "name": "madcapConfigResponseCacheInterval",
    "oid": "1.3.6.1.2.1.101.1.2.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 300
          }
        ]
      }
    },
    "units": "seconds",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The amount of time the MADCAP server uses to detect duplicate messages."
  },
  "madcapConfigClockSkewAllowance": {
    "name": "madcapConfigClockSkewAllowance",
    "oid": "1.3.6.1.2.1.101.1.2.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The clock skew threshold used by the MADCAP server to generate Excessive Clock Skew errors."
  },
  "madcapCounters": {
    "name": "madcapCounters",
    "oid": "1.3.6.1.2.1.101.1.2.2",
    "class": "objectidentity",
    "status": "current",
    "description": "A group of objects that count various MADCAP events."
  },
  "madcapTotalErrors": {
    "name": "madcapTotalErrors",
    "oid": "1.3.6.1.2.1.101.1.2.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The total number of transactions for which the MADCAP server has detected an error of any type, regardless of whether the server ignored the request or generated a NAK."
  },
  "madcapRequestsDenied": {
    "name": "madcapRequestsDenied",
    "oid": "1.3.6.1.2.1.101.1.2.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of valid requests for which the MADCAP server could not complete an allocation, regardless of whether NAKs were sent. This corresponds to the Valid Request Could Not Be Completed error code in MADCAP."
  },
  "madcapInvalidRequests": {
    "name": "madcapInvalidRequests",
    "oid": "1.3.6.1.2.1.101.1.2.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of invalid requests received by the MADCAP server, regardless of whether NAKs were sent. This corresponds to the Invalid Request error code in MADCAP."
  },
  "madcapExcessiveClockSkews": {
    "name": "madcapExcessiveClockSkews",
    "oid": "1.3.6.1.2.1.101.1.2.2.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of requests received by the MADCAP server with an excessive clock skew, regardless of whether NAKs were sent. This corresponds to the Excessive Clock Skew error code in MADCAP."
  },
  "madcapBadLeaseIds": {
    "name": "madcapBadLeaseIds",
    "oid": "1.3.6.1.2.1.101.1.2.2.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of requests received by the MADCAP server with an unrecognized Lease Identifier, regardless of whether NAKs were sent. This corresponds to the Lease Identifier Not Recognized error code in MADCAP."
  },
  "madcapDiscovers": {
    "name": "madcapDiscovers",
    "oid": "1.3.6.1.2.1.101.1.2.2.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of DISCOVER messages received by the MADCAP server."
  },
  "madcapInforms": {
    "name": "madcapInforms",
    "oid": "1.3.6.1.2.1.101.1.2.2.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of INFORM messages received by the MADCAP server."
  },
  "madcapRequests": {
    "name": "madcapRequests",
    "oid": "1.3.6.1.2.1.101.1.2.2.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of REQUEST messages received by the MADCAP server."
  },
  "madcapRenews": {
    "name": "madcapRenews",
    "oid": "1.3.6.1.2.1.101.1.2.2.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of RENEW messages received by the MADCAP server."
  },
  "madcapReleases": {
    "name": "madcapReleases",
    "oid": "1.3.6.1.2.1.101.1.2.2.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of RELEASE messages received by the MADCAP server."
  },
  "mallocConformance": {
    "name": "mallocConformance",
    "oid": "1.3.6.1.2.1.101.2",
    "class": "objectidentity"
  },
  "mallocCompliances": {
    "name": "mallocCompliances",
    "oid": "1.3.6.1.2.1.101.2.1",
    "class": "objectidentity"
  },
  "mallocGroups": {
    "name": "mallocGroups",
    "oid": "1.3.6.1.2.1.101.2.2",
    "class": "objectidentity"
  },
  "mallocServerReadOnlyCompliance": {
    "name": "mallocServerReadOnlyCompliance",
    "oid": "1.3.6.1.2.1.101.2.1.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "mallocBasicGroup",
        "module": "MALLOC-MIB"
      },
      {
        "object": "mallocServerGroup",
        "module": "MALLOC-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for multicast address allocation servers implementing the MALLOC MIB without support for read-create (i.e., in read-only mode). Such a server can then be monitored but can not be configured with this MIB."
  },
  "mallocClientReadOnlyCompliance": {
    "name": "mallocClientReadOnlyCompliance",
    "oid": "1.3.6.1.2.1.101.2.1.2",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "mallocBasicGroup",
        "module": "MALLOC-MIB"
      },
      {
        "object": "mallocClientGroup",
        "module": "MALLOC-MIB"
      },
      {
        "object": "mallocClientScopeGroup",
        "module": "MALLOC-MIB"
      },
      {
        "object": "madcapClientGroup",
        "module": "MALLOC-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for clients implementing the MALLOC MIB without support for read-create (i.e., in read- only mode). Such clients can then be monitored but can not be configured with this MIB."
  },
  "mallocPrefixCoordinatorReadOnlyCompliance": {
    "name": "mallocPrefixCoordinatorReadOnlyCompliance",
    "oid": "1.3.6.1.2.1.101.2.1.3",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "mallocBasicGroup",
        "module": "MALLOC-MIB"
      },
      {
        "object": "mallocPrefixCoordinatorGroup",
        "module": "MALLOC-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for prefix coordinators implementing the MALLOC MIB without support for read-create (i.e., in read-only mode). Such devices can then be monitored but can not be configured with this MIB."
  },
  "mallocServerFullCompliance": {
    "name": "mallocServerFullCompliance",
    "oid": "1.3.6.1.2.1.101.2.1.4",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "mallocBasicGroup",
        "module": "MALLOC-MIB"
      },
      {
        "object": "mallocServerGroup",
        "module": "MALLOC-MIB"
      },
      {
        "object": "madcapServerGroup",
        "module": "MALLOC-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for multicast address allocation servers implementing the MALLOC MIB with support for read- create. Such servers can then be both monitored and configured with this MIB."
  },
  "mallocClientFullCompliance": {
    "name": "mallocClientFullCompliance",
    "oid": "1.3.6.1.2.1.101.2.1.5",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "mallocBasicGroup",
        "module": "MALLOC-MIB"
      },
      {
        "object": "mallocClientGroup",
        "module": "MALLOC-MIB"
      },
      {
        "object": "mallocClientScopeGroup",
        "module": "MALLOC-MIB"
      },
      {
        "object": "madcapClientGroup",
        "module": "MALLOC-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for hosts implementing the MALLOC MIB with support for read-create. Such clients can then be both monitored and configured with this MIB."
  },
  "mallocPrefixCoordinatorFullCompliance": {
    "name": "mallocPrefixCoordinatorFullCompliance",
    "oid": "1.3.6.1.2.1.101.2.1.6",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "mallocBasicGroup",
        "module": "MALLOC-MIB"
      },
      {
        "object": "mallocPrefixCoordinatorGroup",
        "module": "MALLOC-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for prefix coordinators implementing the MALLOC MIB with support for read-create. Such devices can then be both monitored and configured with this MIB."
  },
  "mallocBasicGroup": {
    "name": "mallocBasicGroup",
    "oid": "1.3.6.1.2.1.101.2.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MALLOC-MIB",
        "object": "mallocCapabilities"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocRequestScopeAddressType"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocRequestScopeFirstAddress"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocRequestStartTime"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocRequestEndTime"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocRequestNumAddrs"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocRequestState"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAddressNumAddrs"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAddressRequestId"
      }
    ],
    "status": "current",
    "description": "The basic collection of objects providing management of IP multicast address allocation."
  },
  "mallocServerGroup": {
    "name": "mallocServerGroup",
    "oid": "1.3.6.1.2.1.101.2.2.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeLastAddress"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeHopLimit"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeSSM"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeStatus"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeStorage"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeLastAddress"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeLifetime"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeNumAllocatedAddrs"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeNumOfferedAddrs"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeNumWaitingAddrs"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeNumTryingAddrs"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeMaxLeaseAddrs"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeMaxLeaseTime"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeSource"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeStatus"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeStorage"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeDivisible"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeSource"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeNameScopeName"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeNameDefault"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeNameStatus"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeNameStorage"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocRequestClientAddressType"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocRequestClientAddress"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing management of multicast address allocation in servers."
  },
  "mallocClientGroup": {
    "name": "mallocClientGroup",
    "oid": "1.3.6.1.2.1.101.2.2.3",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MALLOC-MIB",
        "object": "mallocRequestServerAddressType"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocRequestServerAddress"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing management of multicast address allocation in clients."
  },
  "madcapServerGroup": {
    "name": "madcapServerGroup",
    "oid": "1.3.6.1.2.1.101.2.2.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MALLOC-MIB",
        "object": "madcapConfigClockSkewAllowance"
      },
      {
        "module": "MALLOC-MIB",
        "object": "madcapConfigExtraAllocationTime"
      },
      {
        "module": "MALLOC-MIB",
        "object": "madcapConfigOfferHold"
      },
      {
        "module": "MALLOC-MIB",
        "object": "madcapConfigResponseCacheInterval"
      },
      {
        "module": "MALLOC-MIB",
        "object": "madcapTotalErrors"
      },
      {
        "module": "MALLOC-MIB",
        "object": "madcapRequestsDenied"
      },
      {
        "module": "MALLOC-MIB",
        "object": "madcapInvalidRequests"
      },
      {
        "module": "MALLOC-MIB",
        "object": "madcapBadLeaseIds"
      },
      {
        "module": "MALLOC-MIB",
        "object": "madcapExcessiveClockSkews"
      },
      {
        "module": "MALLOC-MIB",
        "object": "madcapDiscovers"
      },
      {
        "module": "MALLOC-MIB",
        "object": "madcapInforms"
      },
      {
        "module": "MALLOC-MIB",
        "object": "madcapRequests"
      },
      {
        "module": "MALLOC-MIB",
        "object": "madcapRenews"
      },
      {
        "module": "MALLOC-MIB",
        "object": "madcapReleases"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing management of MADCAP servers."
  },
  "madcapClientGroup": {
    "name": "madcapClientGroup",
    "oid": "1.3.6.1.2.1.101.2.2.5",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MALLOC-MIB",
        "object": "mallocRequestLeaseIdentifier"
      },
      {
        "module": "MALLOC-MIB",
        "object": "madcapConfigNoResponseDelay"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing management of MADCAP clients."
  },
  "mallocClientScopeGroup": {
    "name": "mallocClientScopeGroup",
    "oid": "1.3.6.1.2.1.101.2.2.6",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeLastAddress"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeHopLimit"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeStatus"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeStorage"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeSource"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeServerAddressType"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeServerAddress"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeSSM"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeNameScopeName"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeNameDefault"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeNameStatus"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeNameStorage"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing management of multicast scope information in clients."
  },
  "mallocPrefixCoordinatorGroup": {
    "name": "mallocPrefixCoordinatorGroup",
    "oid": "1.3.6.1.2.1.101.2.2.7",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeLastAddress"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeLifetime"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeStatus"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeStorage"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeSource"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeTotalAllocatedAddrs"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeTotalRequestedAddrs"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocAllocRangeAdvertisable"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeLastAddress"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeDivisible"
      },
      {
        "module": "MALLOC-MIB",
        "object": "mallocScopeSource"
      }
    ],
    "status": "current",
    "description": "A collection of objects for managing Prefix Coordinators."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/MALLOC-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 15:55:50 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "MALLOC-MIB"
  }
}