{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "OBJECT-TYPE",
      "TimeTicks",
      "IpAddress",
      "NOTIFICATION-TYPE",
      "OBJECT-IDENTITY",
      "Integer32",
      "Gauge32",
      "Bits",
      "iso",
      "Counter64",
      "MibIdentifier",
      "Counter32",
      "Unsigned32",
      "MODULE-IDENTITY"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ],
    "TPT-TPAMIBS-MIB": [
      "tpt-tpa-objs"
    ]
  },
  "tpt_health_objs": {
    "name": "tpt_health_objs",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2016-05-25 18:54",
        "description": "Updated copyright information. Minor MIB syntax fixes."
      }
    ],
    "lastupdated": "201605251854Z",
    "organization": "Trend Micro, Inc.",
    "contactinfo": "www.trendmicro.com",
    "description": "Health information: temperatures, fan speeds, and voltage levels. Copyright (C) 2016 Trend Micro Incorporated. All Rights Reserved. Trend Micro makes no warranty of any kind with regard to this material, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose. Trend Micro shall not be liable for errors contained herein or for incidental or consequential damages in connection with the furnishing, performance, or use of this material. This document contains proprietary information, which is protected by copyright. No part of this document may be photocopied, reproduced, or translated into another language without the prior written consent of Trend Micro. The information is provided 'as is' without warranty of any kind and is subject to change without notice. The only warranties for Trend Micro products and services are set forth in the express warranty statements accompanying such products and services. Nothing herein should be construed as constituting an additional warranty. Trend Micro shall not be liable for technical or editorial errors or omissions contained herein. TippingPoint(R), the TippingPoint logo, and Digital Vaccine(R) are registered trademarks of Trend Micro. All other company and product names may be trademarks of their respective holders. All rights reserved. This document contains confidential information, trade secrets or both, which are the property of Trend Micro. No part of this documentation may be reproduced in any form or by any means or used to make any derivative work (such as translation, transformation, or adaptation) without written permission from Trend Micro or one of its subsidiaries. All other company and product names may be trademarks of their respective holders. "
  },
  "HealthSeverity": {
    "name": "HealthSeverity",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 0,
          "info": 1,
          "minor": 2,
          "major": 3,
          "critical": 4
        }
      }
    },
    "status": "current",
    "description": "A qualitative description of the state of a health value."
  },
  "HealthThresholdType": {
    "name": "HealthThresholdType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "minimum": 1,
          "range": 2,
          "maximum": 3
        }
      }
    },
    "status": "current",
    "description": "How to apply thresholds to see if a value is operating correctly: - minimum: value should not go below thresholds. - range: value should be within nominal plus or minus thresholds. - maximum: value should not go above thresholds."
  },
  "healthTempTable": {
    "name": "healthTempTable",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Table of temperatures at various places inside the device."
  },
  "healthTempEntry": {
    "name": "healthTempEntry",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TPT-HEALTH-MIB",
        "object": "healthTempIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the temperature table. Rows cannot be created or deleted."
  },
  "healthTempIndex": {
    "name": "healthTempIndex",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Index into the temperature table, starting with 1."
  },
  "healthTempChannel": {
    "name": "healthTempChannel",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "String description of the location of this temperature sensor."
  },
  "healthTempValue": {
    "name": "healthTempValue",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The temperature in degrees centigrade at this sensor."
  },
  "healthTempSeverity": {
    "name": "healthTempSeverity",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HealthSeverity",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Whether this temperature is normal or too hot."
  },
  "healthTempThresholdType": {
    "name": "healthTempThresholdType",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HealthThresholdType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "How to apply thresholds to see if this value is within operating range."
  },
  "healthTempMajor": {
    "name": "healthTempMajor",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The major threshold temperature (degrees C)."
  },
  "healthTempCritical": {
    "name": "healthTempCritical",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The critical threshold temperature (degrees C)."
  },
  "healthFanTable": {
    "name": "healthFanTable",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Table of fans for the device."
  },
  "healthFanEntry": {
    "name": "healthFanEntry",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TPT-HEALTH-MIB",
        "object": "healthFanIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the fan table. Rows cannot be created or deleted."
  },
  "healthFanIndex": {
    "name": "healthFanIndex",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Index into the fan table, starting with 1."
  },
  "healthFanChannel": {
    "name": "healthFanChannel",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Identifier of this fan."
  },
  "healthFanValue": {
    "name": "healthFanValue",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The speed of this fan in RPM."
  },
  "healthFanSeverity": {
    "name": "healthFanSeverity",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HealthSeverity",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Whether this fan speed is normal or too slow."
  },
  "healthFanThresholdType": {
    "name": "healthFanThresholdType",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HealthThresholdType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "How to apply thresholds to see if this value is within operating range."
  },
  "healthFanMajor": {
    "name": "healthFanMajor",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The major threshold fan speed (RPM)."
  },
  "healthFanCritical": {
    "name": "healthFanCritical",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The critical threshold fan speed (RPM)."
  },
  "healthVoltageTable": {
    "name": "healthVoltageTable",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Table of voltages at various places inside the device."
  },
  "healthVoltageEntry": {
    "name": "healthVoltageEntry",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TPT-HEALTH-MIB",
        "object": "healthVoltageIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the voltage table. Rows cannot be created or deleted."
  },
  "healthVoltageIndex": {
    "name": "healthVoltageIndex",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Index into the voltage table, starting with 1."
  },
  "healthVoltageChannel": {
    "name": "healthVoltageChannel",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "String description of the location of this voltage sensor."
  },
  "healthVoltageValue": {
    "name": "healthVoltageValue",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The voltage reading in millivolts at this sensor."
  },
  "healthVoltageSeverity": {
    "name": "healthVoltageSeverity",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HealthSeverity",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Whether this voltage is within the normal operating range or not."
  },
  "healthVoltageThresholdType": {
    "name": "healthVoltageThresholdType",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HealthThresholdType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "How to apply thresholds to see if this value is within operating range."
  },
  "healthVoltageMajor": {
    "name": "healthVoltageMajor",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The major threshold voltage (mV) delta (above or below nominal)."
  },
  "healthVoltageCritical": {
    "name": "healthVoltageCritical",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The critical threshold voltage (mV) delta (above or below nominal)."
  },
  "healthVoltageNominal": {
    "name": "healthVoltageNominal",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "What the voltage (mV) reading at this sensor should be."
  },
  "healthI2CTable": {
    "name": "healthI2CTable",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Table of I2C bus timsouts."
  },
  "healthI2CEntry": {
    "name": "healthI2CEntry",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "TPT-HEALTH-MIB",
        "object": "healthI2CIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the I2C bus table. Rows cannot be created or deleted."
  },
  "healthI2CIndex": {
    "name": "healthI2CIndex",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Index into the I2C bus table, starting with 1."
  },
  "healthI2CChannel": {
    "name": "healthI2CChannel",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "String description of this I2C bus."
  },
  "healthI2CValue": {
    "name": "healthI2CValue",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of timeouts on this I2C bus since boot."
  },
  "healthI2CSeverity": {
    "name": "healthI2CSeverity",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HealthSeverity",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Whether this number of I2C bus timeouts is acceptable or excessive."
  },
  "healthI2CThresholdType": {
    "name": "healthI2CThresholdType",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HealthThresholdType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "How to apply thresholds to see if this value is within operating range."
  },
  "healthI2CMajor": {
    "name": "healthI2CMajor",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The major threshold number of I2C bus timeouts."
  },
  "healthI2CCritical": {
    "name": "healthI2CCritical",
    "oid": "1.3.6.1.4.1.10734.3.3.2.13.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The critical threshold number of I2C bus timeouts."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/TPT-HEALTH-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 17:12:07 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "TPT-HEALTH-MIB"
  }
}