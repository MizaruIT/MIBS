{
  "imports": {
    "class": "imports",
    "CISCO-SMI": [
      "ciscoMgmt"
    ],
    "ENTITY-MIB": [
      "entPhysicalIndex",
      "PhysicalIndex"
    ],
    "SNMP-FRAMEWORK-MIB": [
      "SnmpAdminString"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "OBJECT-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "MODULE-IDENTITY",
      "MibIdentifier",
      "OBJECT-IDENTITY",
      "iso",
      "Counter64",
      "Counter32",
      "Bits",
      "Unsigned32",
      "OBJECT-TYPE",
      "TimeTicks",
      "Gauge32",
      "Integer32",
      "IpAddress",
      "NOTIFICATION-TYPE"
    ],
    "SNMPv2-TC": [
      "StorageType",
      "TruthValue",
      "RowStatus",
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "ciscoErmMIB": {
    "name": "ciscoErmMIB",
    "oid": "1.3.6.1.4.1.9.9.510",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2006-02-11 00:00",
        "description": "Initial version of Cisco ERM MIB module."
      }
    ],
    "lastupdated": "200602110000Z",
    "organization": "Cisco Systems, Inc.",
    "contactinfo": "Cisco Systems Customer Service Postal: 170 West Tasman Drive San Jose, California 95134-1706 E-mail: cs-erm@cisco.com",
    "description": "Cisco Embedded Resource Manager (ERM) MIB. The Embedded Resource Manager (ERM) is a framework which helps in effectively managing resources such as cpu, memory, buffers, etc. There are two important scenarios where the ERM framework would be useful: 1. Resource Depletion - how to gracefully handle a situation where the system runs out of a finite resource. 2. Resource Separation - how to share resources fairly between different entities in the system such that activity of one entity does not adversely affect others. The ERM framework has the following entities: 1. Resource Owner Resource Owner (RO) provides resources to one or more resource users. Example: cpu, memory and buffer. The resource owner doesn't mean the physical resource. For example, 'memory' resource owner would actually mean the memory manager rather than the physical memory. 2. Resource User Type Resource User Type (RUT) is a template which defines a set of resource owners from where resources can be obtained by any of the resource users instantiated from the resource user type. 3. Resource User Resource User (RU) is a logical entity or application that consumes one or more resources. Resource users are instantiated from the Resource User Type. Resource user can also be called as 'instance of a resource user type'. A resource user registers with a resource user type and thus it is indirectly registered with all resource owners defined by the resource user type. 4. Resource User Group Resource User Group (RG) is a logical entity which contains group of resource users. It would hence forth be referred as Resource Group. In some cases (for example, multiple users with same name), user may want to set threshold value for sum of resource utilized by a group of resource users. In such case, those resource users can be grouped/added under a resource group. Then, user can apply a resource policy to the resource group. 5. Resource Usage Monitor This is also called as Resource Monitor (RM). The resource monitor is a logical entity or application that monitors resource owner, resource user, resource policy and resource owner <-> resource user relationship. When any applied resource policy is violated, all resource monitors monitoring the resource policy will be notified and the resource monitor can take appropriate action based on the resource owner and resource user attributes. The ERM framework allows three types of thresholding: 1) System Global Thresholding When total utilization of a resource exceeds the applied global rising threshold value, all resource users which consume resources from the concerned resource owner are notified to take appropriate action. The notification order is determined by priority of the resource users. Resource users with a lower priority are notified first, so as to enable lower priority resource users to reduce its resource consumption prior to any higher priority resource users. This order prevents higher priority resource users to start freeing up their resource, thereby not affecting their performance. 2) User Local Thresholding When utilization of a resource by a specific resource user exceeds the applied user local rising threshold value, a notification is sent *only* to the concerned resource user. The user local thresholding method can be used to prevent a resource user from monopolizing any available resources. 3) Per User Global Thresholding When total utilization of a resource exceeds the applied per user global rising threshold value, a notification is sent *only* to the concerned resource user. Each resource user can have its own per user global threshold value (per resource owner). Per User Global Thresholding is similar to System Global Thresholding, except that notification for Per User Global Threshold violation is sent only to the corresponding resource user. The main purpose of the Per User Global Thresholding is that a resource user can take preventive actions based on the global resource utilization of a resource. The Embedded Resource Manager (ERM) framework allows applying and monitoring threshold limit for usage of resources such as cpu, memory, buffer, etc. Exceeding any applied rising threshold value will trigger an 'up' notification to relevant resource user(s) and resource monitor(s) based on the type of violated resource policy. After the 'up' notification, if the utilization goes below the falling threshold value, a 'down' notification will be sent to the resource user(s) and resource monitor(s). The 'up' and 'down' notifications do not mean the SNMP notifications/traps. Rising threshold value and falling threshold value should be different to avoid flapping. The ERM framework enables configuration of resource policy in which rising/falling threshold values for a set of resource owners can be specified. There are two types of resource policies which can be configured. 1) Global Resource Policy There can be only one global resource policy applied in the system at any point of time, though multiple global resource policies can be configured. On violation of a applied global resource policy, all resource users (which consume resources from the concerned resource owner) and resource monitors (which watch the concerned resource owner) will be notified to take appropriate action. 2) Local Resource Policy The local resource policy is configured for a specific resource user type. This policy can be applied for a resource user (or group) of the same resource user type. A local resource policy can be applied for more than one resource users (or groups). Both user local thresholding and per user global thresholding can be configured under a local resource policy. On violation of any local resource policy, only those resource users on which the violated resource policy was applied, will be notified in order to take appropriate action. Whenever a resource is consumed, current utilization of the resource will be compared against the applied rising threshold value. The ERM framework provides a mechanism to send notifications to resource user(s) and resource monitor(s) whenever resource utilization exceeds any applied rising threshold value or falls below any applied falling threshold value. In such situations, the resource user(s) can take appropriate corrective action (for example, limiting or avoiding resource consumption). Thus, the ERM framework helps in preventing catastrophic system failures caused by high levels of resource depletion. The ERM framework can be extended to all kinds of resources (for example, incoming control plane packets) that need to be managed. The ERM MIB module facilitates the following operations: 1. Getting information about all the above mentioned ERM entities available in a managed system. 2. Creating/modifying/removing a resource policy. 3. Creating/modifying/removing a threshold configuration for a particular resource policy. 4. Creating/removing a resource group. 5. Adding/removing a resource user to/from a particular resource group. 6. Applying global resource policy. 7. Applying local resource policy for a resource user or resource group."
  },
  "ciscoErmMIBNotifs": {
    "name": "ciscoErmMIBNotifs",
    "oid": "1.3.6.1.4.1.9.9.510.0",
    "class": "objectidentity"
  },
  "ciscoErmMIBObjects": {
    "name": "ciscoErmMIBObjects",
    "oid": "1.3.6.1.4.1.9.9.510.1",
    "class": "objectidentity"
  },
  "ciscoErmMIBConform": {
    "name": "ciscoErmMIBConform",
    "oid": "1.3.6.1.4.1.9.9.510.2",
    "class": "objectidentity"
  },
  "cermScalars": {
    "name": "cermScalars",
    "oid": "1.3.6.1.4.1.9.9.510.1.1",
    "class": "objectidentity"
  },
  "cermStats": {
    "name": "cermStats",
    "oid": "1.3.6.1.4.1.9.9.510.1.2",
    "class": "objectidentity"
  },
  "cermConfig": {
    "name": "cermConfig",
    "oid": "1.3.6.1.4.1.9.9.510.1.3",
    "class": "objectidentity"
  },
  "cermNotifObjects": {
    "name": "cermNotifObjects",
    "oid": "1.3.6.1.4.1.9.9.510.1.4",
    "class": "objectidentity"
  },
  "cermNotifControlObjects": {
    "name": "cermNotifControlObjects",
    "oid": "1.3.6.1.4.1.9.9.510.1.5",
    "class": "objectidentity"
  },
  "CermSubEntityId": {
    "name": "CermSubEntityId",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "status": "current",
    "description": "This indicates the sub-entity identifier. If a physical entity has multiple logical processing entities and these entities have its own set of resources, we use sub-entities to uniquely identiy these logical processing entities. For example, if each process in the system has separate memory address space (i.e. memory address space is not shared between processes), then each process can be considered as a separate logical processing entity. In such cases, the sub-entity identifier can be used to distinguish an ERM entity in one logical processing entity from others. Each sub-entity (i.e. logical processing entity) might have its own set of resources owners, resource user types, resource users, resource groups and resource monitors. If the system doesn't have more than one logical processing entities, then sub-entity identifier may have zero value."
  },
  "CermUserTypeId": {
    "name": "CermUserTypeId",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "status": "current",
    "description": "This indicates the resource user type identifier. The resource user type identifier is used to uniquely identify a resource user type in the system."
  },
  "CermUserTypeIdOrZero": {
    "name": "CermUserTypeIdOrZero",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "status": "current",
    "description": "This textual convention is an extension of the CermUserTypeId convention. The latter defines a greater than zero value used to identify a resource user type in the managed system. This extension permits the additional value of zero. The value zero is object specific and must therefore be defined as part of the description of any object which uses this syntax."
  },
  "CermUserId": {
    "name": "CermUserId",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "status": "current",
    "description": "This indicates the resource user identifier. The resource user identifier represents a resource user instantiated from a resource user type. This identifier is used to uniquely identify a resource user in a resource user type."
  },
  "CermUserIdOrZero": {
    "name": "CermUserIdOrZero",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "status": "current",
    "description": "This textual convention is an extension of the CermUserId convention. The latter defines a greater than zero value used to identify a resource user in the managed system. This extension permits the additional value of zero. The value zero is object specific and must therefore be defined as part of the description of any object which uses this syntax."
  },
  "CermGroupId": {
    "name": "CermGroupId",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "status": "current",
    "description": "This indicates the resource group identifier. This identifier is used to uniquely identify a resource group in a resource user type."
  },
  "CermOwnerId": {
    "name": "CermOwnerId",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "status": "current",
    "description": "This indicates the resource owner identifier. The resource owner identifier is used to uniquely identify a resource owner in the system."
  },
  "CermOwnerIdOrZero": {
    "name": "CermOwnerIdOrZero",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "status": "current",
    "description": "This textual convention is an extension of the CermOwnerId convention. The latter defines a greater than zero value used to identify a resource owner in the managed system. This extension permits the additional value of zero. The value zero is object specific and must therefore be defined as part of the description of any object which uses this syntax."
  },
  "CermMonitorId": {
    "name": "CermMonitorId",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "status": "current",
    "description": "This indicates the resource monitor identifier. The resource monitor identifier is used to uniquely identify a resource monitor in the system."
  },
  "CermUserOrGroup": {
    "name": "CermUserOrGroup",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "group": 1,
          "user": 2
        }
      }
    },
    "status": "current",
    "description": "This indicates one of the following: 1. group - resource group. 2. user - resource user."
  },
  "CermResUsagePct": {
    "name": "CermResUsagePct",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type"
    },
    "status": "current",
    "description": "This indicates the resource utilization value, in percentage. That means the percentage of resources utilized from a resource owner."
  },
  "CermThreshold": {
    "name": "CermThreshold",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "status": "current",
    "description": "This indicates the threshold value for resource utilization, in percentage."
  },
  "CermThresholdOrZero": {
    "name": "CermThresholdOrZero",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "status": "current",
    "description": "This textual convention is an extension of the CermThreshold convention. The latter defines a greater than zero value used to indicate a resource utilization threshold value in percentage. This extension permits the additional value of zero. The value zero is object specific and must therefore be defined as part of the description of any object which uses this syntax."
  },
  "CermDampenInterval": {
    "name": "CermDampenInterval",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2592000
          }
        ]
      }
    },
    "status": "current",
    "description": "This indicates the dampening or observation interval time during which the variations in the resource utilization are not notified to any relevant resource user(s) or resource monitor(s). The interval is set to avoid unnecessary and unwanted notifications."
  },
  "CermThresholdSeverity": {
    "name": "CermThresholdSeverity",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "minor": 1,
          "major": 2,
          "critical": 3
        }
      }
    },
    "status": "current",
    "description": "This indicates the severity of thresholds. The threshold severity is used to reflect the severity of resource utilization related problem in the system. There are three thresholding severity levels defined in the ERM: 1. Minor Violation of 'minor' thresholding indicates a minor problem (related to resource utilization) in the system. 2. Major Violation of 'major' thresholding indicates a major problem (related to resource utilization) in the system. 3. Critical Violation of 'critical' thresholding indicates a critical problem (related to resource utilization) in the system."
  },
  "CermNotificationSeverity": {
    "name": "CermNotificationSeverity",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "minor": 2,
          "major": 3,
          "critical": 4
        }
      }
    },
    "status": "current",
    "description": "This indicates the severity of ERM notification that reflects the severity of resource utilization related problem. The following notification severites are defined in the ERM: 1. None This indicates that the system is running without violating any applied resource utilization threshold values. 2. Minor This indicates that a 'minor' severity level threshold has been violated in the system. 3. Major This indicates that a 'major' severity level threshold has been violated in the system. 4. Critical This indicates that a 'critical' severity level threshold has been violated in the system."
  },
  "CermNotificationDirection": {
    "name": "CermNotificationDirection",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    },
    "status": "current",
    "description": "This indicates the direction/cause of the ERM notifications. There are two ERM notification directions defined in the ERM: 1. Up Notification The 'up' notification would be triggered by a resource owner when utilization of the corresponding resource exceeds an applied rising threshold value for the resource owner. The 'up' notification indicates that utilization for a resource owner has gone above an applied rising threshold. 2. Down Notification The 'down' notification would be triggered by a resource owner when resource utilization of the resource owner falls below (after exceeding an applied rising threshold value) any applied falling threshold value for the resource owner. The 'down' notification indicates that utilization for a resource owner has come down to normal state after exceeding an applied rising threshold."
  },
  "cermScalarsGlobalPolicyName": {
    "name": "cermScalarsGlobalPolicyName",
    "oid": "1.3.6.1.4.1.9.9.510.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This is a textual string containing name of the global resource policy applied in the system. If global resource policy is not applied in the system, then this scalar object will contain zero-length string. A global resource policy can be applied to the system by setting this scalar object to any global resource policy name (i.e. cermPolicyName) present in the cermConfigPolicyTable. Setting this object to zero-length string, will undo any applied global resource policy in the system."
  },
  "cermResOwnerTable": {
    "name": "cermResOwnerTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information about each resource owner in the system. Each resource owner maintains a list of resource users and performs the following: a) Accounting and Thresholding Accounting and thresholding involves accounting of resources allocated to each resource user and using threshold limits for notifying resource user(s) and resource usage monitor(s) about violations. Accounting is done by each resource owner. The ERM framework allows user to configure thresholding values for each resource owner. When resource utilization of a resource owner exceeds an applied threshold value, the resource owner will send notification to relevant resource user(s). b) Notifications Sent and Actions Taken In case of system global thresholding, whenever total resource utilization of a resource owner exceeds an applied rising threshold value, the resource owner will send an 'up' notification to the ERM framework. Whenever total resource utilization of the same resource owner falls below the corresponding falling threshold value (after crossing the rising threshold value), the resource owner will sent a 'down' notification to the ERM framework. On receiving the 'up' notification, resource user(s) is(are) expected to take appropriate action by freeing the resource or limiting the resource consumption. The resource owner may restrain from allocating resource to the resource user(s) in case of the resource user(s) not taking any action."
  },
  "cermResOwnerEntry": {
    "name": "cermResOwnerEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ENTITY-MIB",
        "object": "entPhysicalIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubEntityId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing information about a particular resource owner. This entry includes resource owner name, measurement units for the resource owner, flag indicating whether thresholding for the resource owner is configurable by the user, number of resource users and number of resource groups for the resource owner. Whenever a resource owner registers with the ERM framework (normally this happens during system initialization), an entry for the resource owner will be included in this table. Likewise, whenever a resource owner is unregistered itself from the ERM framework, the corresponding entry in this table will be removed. Resource owners are created by the system; not by the user. The entPhysicalIndex represents the physical entity to which the resource owner belongs. Only 'module' class physical entities which run operating system with the ERM framework, are applicable here."
  },
  "cermResOwnerSubEntityId": {
    "name": "cermResOwnerSubEntityId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermSubEntityId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object indicates the sub-entity (i.e. logical processing entity in a physical entity) in which the resource owner is present."
  },
  "cermResOwnerId": {
    "name": "cermResOwnerId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermOwnerId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object indicates the resource owner identifier. This object value is unique in a sub-entity."
  },
  "cermResOwnerName": {
    "name": "cermResOwnerName",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This is a textual string containing name of the resource owner. For example: cpu, memory."
  },
  "cermResOwnerMeasurementUnit": {
    "name": "cermResOwnerMeasurementUnit",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This is a textual string containing unit of measurement for the resource owner. For example, utilization of 'memory' and 'cpu' resource owners can be specified in terms of 'bytes' and 'percentage' respectively. In that case, this object value would be 'bytes' for the 'memory' resource owner and 'percentage' for the 'cpu' resource owner."
  },
  "cermResOwnerThreshIsConfigurable": {
    "name": "cermResOwnerThreshIsConfigurable",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This is a flag indicating whether thresholding is configurable for the resource owner by users or not. Some resource owners may not allow users to configure resource utilization threshold values. This object value will be 'false' for such resource owners."
  },
  "cermResOwnerResUserCount": {
    "name": "cermResOwnerResUserCount",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the number of resource users which consume resources from the resource owner."
  },
  "cermResOwnerResGroupCount": {
    "name": "cermResOwnerResGroupCount",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the number of resource groups which consume resources from the resource owner."
  },
  "cermResOwnerSubTypeTable": {
    "name": "cermResOwnerSubTypeTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information about each sub-type for each resource owner in the cermResOwnerTable. For example, lets consider that the 'memory' resource owner has two sub-types called 'processor' and 'io' in the system. Then, two entries (one is for 'processor' memory and another one is for 'io' memory) will be present in this table for the 'memory' resource owner. If a resource owner does not have any sub-types, then this table will have an entry with the zero value for the cermResOwnerSubTypeId and zero-length string value for the cermResOwnerSubTypeName, for the corresponding resource owner."
  },
  "cermResOwnerSubTypeEntry": {
    "name": "cermResOwnerSubTypeEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ENTITY-MIB",
        "object": "entPhysicalIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubEntityId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing information about a resource owner sub-type. This entry includes resource owner sub-type name, utilization in percentage, utilization in its own measurement unit, maximum utilization in its own measurement unit and current global notification severity level for the resource owner sub-type. Whenever a resource owner is registered with the ERM framework (normally this happens during system initialization), a new entry will be included in the cermResOwnerTable for the resource owner. At the sametime, one new entry will be included in this table for each sub-type of the resource owner. Likewise, whenever a resource owner is unregistered from the ERM framework, the resource owner entry will be removed from the cermResOwnerTable and the corresponding resource owner sub-types entries will be removed from this table. The entPhysicalIndex represents the physical entity to which the resource owner belongs. Only 'module' class physical entities which run operating system with the ERM framework, are applicable here."
  },
  "cermResOwnerSubTypeId": {
    "name": "cermResOwnerSubTypeId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object indicates the resource owner sub-type identifier. If the resource owner does not have any sub-types, this object value for the resource owner will be zero. Otherwise, it will have a non-zero value."
  },
  "cermResOwnerSubTypeName": {
    "name": "cermResOwnerSubTypeName",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This is a textual string indicating name of the resource owner sub-type. For example, 'processor' memory and 'io' memory are two sub-types in the 'memory' resource owner. If the resource owner does not have any sub-types, this object value for the resource owner will be a zero-length string."
  },
  "cermResOwnerSubTypeUsagePct": {
    "name": "cermResOwnerSubTypeUsagePct",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermResUsagePct",
      "class": "type"
    },
    "units": "percentage",
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the percentage of resource utilized for the resource owner sub-type."
  },
  "cermResOwnerSubTypeUsage": {
    "name": "cermResOwnerSubTypeUsage",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the resource utilization, in the unit of measurement specified by the object cermResOwnerMeasurementUnit, for the corresponding resource owner sub-type."
  },
  "cermResOwnerSubTypeMaxUsage": {
    "name": "cermResOwnerSubTypeMaxUsage",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the maximum resource utilization since the system has been up, in the measurement unit specified by the object cermResOwnerMeasurementUnit, for the corresponding resource owner sub-type. For example, if maximum utilization for the 'io' memory resource owner is 15000000 bytes since the system has been up, this object value for the 'io' memory resource owner would be 15000000. If this object is not implemented for the resource owner sub-type, then value of this object would be zero."
  },
  "cermResOwnerSubTypeGlobNotifSeverity": {
    "name": "cermResOwnerSubTypeGlobNotifSeverity",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermNotificationSeverity",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the current global notification severity level for the resource owner sub-type."
  },
  "cermResOwnerSubTypeThresholdTable": {
    "name": "cermResOwnerSubTypeThresholdTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information about each applied global threshold configuration for each resource owner sub-type in the system."
  },
  "cermResOwnerSubTypeThresholdEntry": {
    "name": "cermResOwnerSubTypeThresholdEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ENTITY-MIB",
        "object": "entPhysicalIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubEntityId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeThreshSeverity",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing an applied global threshold configuration details for a resource owner sub-type. This entry includes threshold severity level, rising threshold value, rising interval time, falling threshold value and falling interval time for the threshold configuration. One or more entries will be included in this table when a global resource policy is applied. If the system has internally applied any threshold values, those threshold configurations will also be present in this table. For example, if the applied global resource policy has 'major' and 'critical' severity threshold configurations for 'processor' memory sub-type of the 'memory' resource owner, then two entries will be included in this table for the 'processor' memory sub-type. All threshold configuration entries included via applying the global resource policy, will be removed when the applied global resource policy is unapplied/unconfigured. Note: Global resource policy is applied by setting the scalar object cermScalarsGlobalPolicyName to an existing global resource policy in the cermConfigPolicyTable. Global resource policy is unapplied by setting the cermScalarsGlobalPolicyName to zero-length string. Apart from threshold configurations in the applied global resource policy (those are configured and applied by the user), the system may have some internally applied global threshold configurations for some resource owners for which the user is not allowed to configure thresholding. The entPhysicalIndex represents the physical entity to which the resource owner belongs. Only 'module' class physical entities which run operating system with the ERM framework, are applicable here."
  },
  "cermResOwnerSubTypeThreshSeverity": {
    "name": "cermResOwnerSubTypeThreshSeverity",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermThresholdSeverity",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object identifies the threshold severity of an applied threshold configuration, for a resource owner sub-type."
  },
  "cermResOwnerSubTypeRisingThresh": {
    "name": "cermResOwnerSubTypeRisingThresh",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermThreshold",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the applied global rising threshold value for the resource owner sub-type. When total resource utilization of the resource owner sub-type exceeds the rising threshold value set for it, the resource owner sends an 'up' notification to the ERM framework. If the ERM framework did not receive any 'down' notification from the same resource owner sub-type till the rising interval time (represented by cermResOwnerSubTypeRisingInterval) is elapsed, the 'up' notification will be sent to all resource users which consume resources from the resource owner. The order of sending the 'up' notification will be based on priority of those resource users. Lowest priority resource user will get the 'up' notification first. Upon receiving the 'up' notification, the resource users can take appropriate action (for example, limiting consumption of the concerned resource)."
  },
  "cermResOwnerSubTypeRisingInterval": {
    "name": "cermResOwnerSubTypeRisingInterval",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermDampenInterval",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the dampening interval time for the global rising threshold, specified in the applied threshold configuration for the resource owner sub-type. Whenever the ERM framework gets an 'up' notification from the resource owner sub-type, it will wait till the rising interval time (represented by this object) is elapsed. If the ERM framework did not receive any 'down' notification from the same resource owner sub-type before the rising interval time is elapsed, it will send the 'up' notification to all resource users which consume resources from the resource owner. Otherwise, the 'up' notification will be dropped by the ERM framework. If the global rising threshold is configured but the rising interval time is not configured in the applied threshold configuration for the resource owner sub-type, then default value would be taken. The default value is specific to the resource owner sub-type."
  },
  "cermResOwnerSubTypeFallingThresh": {
    "name": "cermResOwnerSubTypeFallingThresh",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermThreshold",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the applied global falling threshold value for the resource owner sub-type. The global falling threshold value will be applicable only after an 'up' notification is sent by the resource owner. When resource utilization of the resource owner sub-type falls below the applied global falling threshold value (after crossing the corresponding global rising threshold value), the resource owner sub-type sends a 'down' notification to the ERM framework. If the ERM framework did not receive any 'up' notification from the same resource owner sub-type till the falling interval time (represented by the object cermResOwnerSubTypeFallingInterval) is elapsed, the 'down' notification will be sent to all resource users which consume resources from the concerned resource owner sub-type. The order of sending the 'down' notification will be based on priority of those resource users. Highest priority resource user will get the 'down' notification first. Upon receiving the 'down' notification, the resource users can start consuming the concerned resource as usual. If the global rising threshold value is configured but the global falling threshold value is not configured in the applied threshold configuration for the resource owner sub-type, then default value would be taken. The default value is specific to the resource owner sub-type and may depend on the rising threshold value."
  },
  "cermResOwnerSubTypeFallingInterval": {
    "name": "cermResOwnerSubTypeFallingInterval",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermDampenInterval",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the dampening interval time for the global falling threshold, specified in the applied threshold configuration for the resource owner sub-type. Whenever the ERM framework gets a 'down' notification from the resource owner sub-type, it will wait till the falling interval time (represented by this object) is elapsed. If the ERM framework did not receive any 'up' notification from the same resource owner sub-type before the falling interval time is elapsed, it will send the 'down' notification to all resource users which consume resources from the concerned resource owner sub-type. Otherwise, the 'down' notification will be dropped by the ERM framework. If the global rising threshold is configured but the falling interval time is not configured in the applied threshold configuration for the resource owner sub-type, then default value would be taken. The default value is specific to the resource owner sub-type."
  },
  "cermResUserTypeTable": {
    "name": "cermResUserTypeTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information about each resource user type in the system. This table will have one entry for each resource user type in the system."
  },
  "cermResUserTypeEntry": {
    "name": "cermResUserTypeEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ENTITY-MIB",
        "object": "entPhysicalIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeSubEntityId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing information about a particular resource user type in the system. This entry includes the resource user type name, number of resource owners present in the resource user type, number of resource users and resource groups instantiated from the resource user type. Whenever a new resource user type is registered with the ERM framework (normally this happens during system initialization), an entry will be included in this table for the resource user type. Likewise, whenever a resource user type is unregistered from the ERM framework, the corresponding resource user type entry in this table will be removed. The entPhysicalIndex represents the physical entity to which the resource user type belongs. Only 'module' class physical entities which run operating system with the ERM framework, are applicable here."
  },
  "cermResUserTypeSubEntityId": {
    "name": "cermResUserTypeSubEntityId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermSubEntityId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object indicates the sub-entity (i.e. logical processing entity in a physical entity) in which the resource user type is present."
  },
  "cermResUserTypeId": {
    "name": "cermResUserTypeId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermUserTypeId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object indicates the resource user type identifier. This uniquely identifies a resource user type in a sub-entity."
  },
  "cermResUserTypeName": {
    "name": "cermResUserTypeName",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This is a textual string containing name of the resource user type."
  },
  "cermResUserTypeResOwnerCount": {
    "name": "cermResUserTypeResOwnerCount",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the number of resource owners in the resource user type."
  },
  "cermResUserTypeResUserCount": {
    "name": "cermResUserTypeResUserCount",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the number of resource users instantiated from the resource user type. This object value will be equal to the number of resource user entries present in the cermResUserTable for the resource user type."
  },
  "cermResUserTypeResGroupCount": {
    "name": "cermResUserTypeResGroupCount",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the number of resource groups in the resource user type. This object value will be equal to the number of resource group entries present in the cermResGroupTable for the resource user type."
  },
  "cermResUserTable": {
    "name": "cermResUserTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table which contains information about each resource user in the system. This table will have one entry for each resource user in the system."
  },
  "cermResUserEntry": {
    "name": "cermResUserEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ENTITY-MIB",
        "object": "entPhysicalIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeSubEntityId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing information about a particular resource user in the system. This entry includes the resource user name and priority of the resource user. Whenever a new resource user is registered with the ERM framework (normally this happens when the resource user is created in the system), an entry will be included in this table for the resource user. Likewise, whenever a resource user is unregistered from the ERM framework, the corresponding resource user entry in this table will be removed. The entPhysicalIndex represents the physical entity to which the resource user belongs. Only 'module' class physical entities which run operating system with the ERM framework, are applicable here."
  },
  "cermResUserId": {
    "name": "cermResUserId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermUserId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object indicates the resource user identifier. This uniquely identifies a resource user in a resource user type."
  },
  "cermResUserName": {
    "name": "cermResUserName",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is a textual string containing name of the resource user. For example: 'IP Input' process."
  },
  "cermResUserPriority": {
    "name": "cermResUserPriority",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates priority of the resource user. High value for this object indicates that corresponding resource user has *low* priority and vice versa. The global ERM notification will be sent to the resource user in the order based on its priority. Lowest priority resource user (i.e. resource user which has highest value for this object) will get the global 'up' notification first and 'down' notification last."
  },
  "cermResUserResGroupId": {
    "name": "cermResUserResGroupId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermGroupId",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the resource group in which the resource user is present. If the resource user does not belong to any resource group, then the value of this object will be zero. Otherwise, this object will contain value of the object cermResGroupId corresponding to the resource group entry in the cermResGroupTable."
  },
  "cermResGroupTable": {
    "name": "cermResGroupTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information about each resource group in the system. This table will have one entry for each resource group in the system."
  },
  "cermResGroupEntry": {
    "name": "cermResGroupEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ENTITY-MIB",
        "object": "entPhysicalIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeSubEntityId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResGroupId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing information about a particular resource group in the system. This entry includes the resource group name and number of resource users in the resource group. Whenever a new resource group is configured, an entry will be included in this table for the resource group. Likewise, whenever a resource group is unconfigured, the corresponding resource group entry in this table will be removed. Resource groups can be created/deleted by the user using the table cermConfigResGroupTable. Resource groups will also be created internally if multiple instances of same resource user (i.e. more than one resource users with the same name) are present in the system. The entPhysicalIndex represents the physical entity to which the resource group belongs. Only 'module' class physical entities which run operating system with the ERM framework, are applicable here."
  },
  "cermResGroupId": {
    "name": "cermResGroupId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermGroupId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object indicates the resource group identifier. This uniquely identifies a resource group in a resource user type."
  },
  "cermResGroupName": {
    "name": "cermResGroupName",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is a textual string containing name of the resource group. If the resource group has been configured by the user, this object will contain value of the cermConfigResGroupName corresponding to the configured resource group in the cermConfigResGroupTable."
  },
  "cermResGroupUserInstanceCount": {
    "name": "cermResGroupUserInstanceCount",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the number of resource user instances present in the resource group."
  },
  "cermResGroupResUserTable": {
    "name": "cermResGroupResUserTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table has list of resource users present in each resource group."
  },
  "cermResGroupResUserEntry": {
    "name": "cermResGroupResUserEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.7.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ENTITY-MIB",
        "object": "entPhysicalIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeSubEntityId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResGroupId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResGroupResUserId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing a resource group identifier and one of the resource users identifier in the resource group. Whenever a new resource user is added into a resource group, an entry will be included in this table. Likewise, whenever a resource user is removed from a resource group, the corresponding entry in this table will be removed. The entPhysicalIndex represents the physical entity to which the resource group and resource user belong. Only 'module' class physical entities which run operating system with the ERM framework, are applicable here."
  },
  "cermResGroupResUserId": {
    "name": "cermResGroupResUserId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.7.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermUserId",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object identifies one of the resource users in a particular resource group. This object will contain value of the cermResUserId, in the cermResUserTable, corresponding to one of resource users in the resource group."
  },
  "cermResOwnerResUserOrGroupTable": {
    "name": "cermResOwnerResUserOrGroupTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.8",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information about each resource owner sub-type and resource user/group relationship."
  },
  "cermResOwnerResUserOrGroupEntry": {
    "name": "cermResOwnerResUserOrGroupEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.8.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ENTITY-MIB",
        "object": "entPhysicalIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubEntityId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerResUserTypeId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerResUserOrGroupId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing information about a resource owner sub-type and resource user/group relationship. Whenever a resource user/group is registered with the ERM framework, one or more number of entries will be created in this table. The number of entries that will be created, depends upon the number of resource owners in the resource user type from which the resource user was instantiated and the number of sub-types in each resource owner. Even if the resource owner does not have any sub-types, there will be one entry per resource user/group for the resource owner. The entPhysicalIndex represents the physical entity to which the resource owner and resource user belong. Only 'module' class physical entities which run operating system with the ERM framework, are applicable here."
  },
  "cermResOwnerResUserTypeId": {
    "name": "cermResOwnerResUserTypeId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.8.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermUserTypeId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object identifies the resource user type corresponding to the resource user/group which is part of the resource owner <-> resource user/group relationship. This object will contain value of the cermResUserTypeId in the cermResUserTypeTable, corresponding to the resource user type."
  },
  "cermResOwnerResUserOrGroupId": {
    "name": "cermResOwnerResUserOrGroupId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.8.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermUserId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object identifies the resource group/user which is part of the resource owner sub-type <-> resource group/user relationship. If the cermResUserOrGroupFlag is 'user', this object will contain value of the cermResUserId for one of the resource user entry in the cermResUserTable. If the cermResUserOrGroupFlag is 'group', this object will contain value of the cermResGroupId for one of the resource group entry in the cermResGroupTable."
  },
  "cermResUserOrGroupFlag": {
    "name": "cermResUserOrGroupFlag",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.8.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermUserOrGroup",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This is a flag indicating whether corresponding entry belongs to a resource group or resource user. If this object value is 'user', this entry belongs to a resource owner sub-type <-> resource user relationship. If this object value is 'group', this entry belongs to a resource owner sub-type <-> resource group relationship."
  },
  "cermResUserOrGroupUsagePct": {
    "name": "cermResUserOrGroupUsagePct",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.8.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermResUsagePct",
      "class": "type"
    },
    "units": "percentage",
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates percentage of resources utilized from the resource owner sub-type by the resource user (if the cermResUserOrGroupFlag is 'user') or resource group (if the cermResUserOrGroupFlag is 'group'). For example, if 1 MB out of 50 MB 'processor' memory has been utilized by the resource user 'RU-1', then value of this object would be 2 in the entry corresponding to the 'processor' memory <-> 'RU-1' relationship."
  },
  "cermResUserOrGroupUsage": {
    "name": "cermResUserOrGroupUsage",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.8.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the amount of resources utilized from the resource owner sub-type by the resource user (if the cermResUserOrGroupFlag is 'user') or resource group (if the cermResUserOrGroupFlag is 'group'), in the unit of measurement indicated by the object cermResOwnerMeasurementUnit for the corresponding resource owner. For example, if 1 MB (i.e. 1048576 bytes) of 'processor' memory has been utilized by the resource user 'RU-1', then value of this object would be 1048576 in the entry corresponding to the 'processor' memory <-> 'RU-1' relationship."
  },
  "cermResUserOrGroupMaxUsage": {
    "name": "cermResUserOrGroupMaxUsage",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.8.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the maximum amount of resource utilized from the resource owner sub-type by the resource user (if the cermResUserOrGroupFlag is 'user') or resource group (if the cermResUserOrGroupFlag is 'group') since the system has been up, in the unit of measurement specified by the object cermResOwnerMeasurementUnit for the corresponding resource owner. If this object is not implemented by the resource owner sub-type, then value of this object would be zero."
  },
  "cermResUserOrGroupNotifSeverity": {
    "name": "cermResUserOrGroupNotifSeverity",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.8.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermNotificationSeverity",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the user local current notification severity for the resource owner sub-type and resource user/group relationship. For example, lets assume that the resource user 'RU-1' has utilized the 'processor' memory more than the applied *minor* severity user local rising threshold value (and its utilization is still above the corresponding falling threshold value), then current user local notification severity for the 'processor' memory <-> 'RU-1' relationship would be 'minor'."
  },
  "cermResUserOrGroupGlobNotifSeverity": {
    "name": "cermResUserOrGroupGlobNotifSeverity",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.8.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermNotificationSeverity",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates per user global current notification severity for the resource owner sub-type and resource user/group relationship. For example, lets assume that total utilization of the 'processor' memory resource owner has exceeded the applied per user global rising threshold value for *minor* severity (and its utilization is still above the corresponding falling threshold value), then current per user global notification severity for the 'processor' memory and 'RU-1' relationship would be 'minor'."
  },
  "cermResOwnerResUserOrGroupThresholdTable": {
    "name": "cermResOwnerResUserOrGroupThresholdTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.9",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information about each applied threshold configuration for each resource owner sub-type <-> resource user/group relationship. This table will have an entry for each threshold configuration for each resource owner sub-type <-> resource user/group relationship for which a rising threshold value is set. If rising threshold value is not set for a resource owner sub-type <-> resource user/group relationship, then an entry will not be present in this table for the relationship."
  },
  "cermResOwnerResUserOrGroupThresholdEntry": {
    "name": "cermResOwnerResUserOrGroupThresholdEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.9.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ENTITY-MIB",
        "object": "entPhysicalIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubEntityId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerResUserTypeId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerResUserOrGroupId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserOrGroupThreshIsUserGlob",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserOrGroupThreshSeverity",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing information about a applied threshold configuration for a resource owner sub-type <-> resource user/group relationship. Whenever a local resource policy is applied for a resource user/group, one or more number of entries will be included in this table. The number of entries that will be created, depends upon the number of threshold configurations present in the local resource policy. The entPhysicalIndex represents the physical entity to which the resource owner and resource user belong. Only 'module' class physical entities which run operating system with the ERM framework, are applicable here."
  },
  "cermResUserOrGroupThreshIsUserGlob": {
    "name": "cermResUserOrGroupThreshIsUserGlob",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.9.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A flag which indicates whether the threshold configuration is about user local thresholding or per user global thresholding. The value of this object would be 'true' for the per user global threshold configuration."
  },
  "cermResUserOrGroupThreshSeverity": {
    "name": "cermResUserOrGroupThreshSeverity",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.9.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermThresholdSeverity",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object indicates the threshold severity for the threshold configuration entry. The value of this object can be 'minor', 'major' and 'critical'."
  },
  "cermResUserOrGroupThreshFlag": {
    "name": "cermResUserOrGroupThreshFlag",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.9.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermUserOrGroup",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This is a flag indicating whether corresponding entry belongs to a resource group or resource user. If this object value is 'user', this entry belongs to a resource owner sub-type <-> resource user relationship. If this object value is 'group', this entry belongs to a resource owner sub-type <-> resource group relationship."
  },
  "cermResUserOrGroupRisingThresh": {
    "name": "cermResUserOrGroupRisingThresh",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.9.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermThreshold",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the rising threshold value set for the thereshold configuration for the resource owner sub-type <-> resource user/group relationship. If the rising threshold value is not set for the resource owner sub-type <-> resource user/group relationship, then this table will not have any entry for the relationship."
  },
  "cermResUserOrGroupRisingInterval": {
    "name": "cermResUserOrGroupRisingInterval",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.9.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermDampenInterval",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates dampening interval time set for the rising threshold for the threshold configuration entry in this table. If the rising threshold value is configured but the rising interval time is not configured for the resource owner sub-type <-> resource user/group relationship, then default value would be taken. The default value is specific to the resource owner sub-type."
  },
  "cermResUserOrGroupFallingThresh": {
    "name": "cermResUserOrGroupFallingThresh",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.9.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermThreshold",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the falling threshold value set for the threshold configuration for the resource owner sub-type <-> resource user/group relationship. If the rising threshold value is configured but the falling threshold value is not configured for the resource owner sub-type <-> resource user/group relationship, then default value would be taken. The default value is specific to the resource owner sub-type."
  },
  "cermResUserOrGroupFallingInterval": {
    "name": "cermResUserOrGroupFallingInterval",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.9.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermDampenInterval",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the dampening interval time set for the falling threshold for the threshold configuration entry in this table. If the rising threshold value is configured but the falling interval value is not configured for the resource owner sub-type <-> resource user/group relationship, then default value would be taken. The default value is specific to the resource owner sub-type."
  },
  "cermResUserTypeResOwnerTable": {
    "name": "cermResUserTypeResOwnerTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.10",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains an entry for each resource user type and resource owner relationship in the system. This table would be useful in getting list of resource owners in a particular resource user type and vice versa."
  },
  "cermResUserTypeResOwnerEntry": {
    "name": "cermResUserTypeResOwnerEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.10.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ENTITY-MIB",
        "object": "entPhysicalIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeSubEntityId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeResOwnerId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing a resource user type identifier and one of it's resource owners. Whenever a resource user type is registered with the ERM framework, <N> number of entries will be included in this table for the resource user type. Where, <N> is equal to the number of resource owners in the resource user type. Likewise, whenever a resource user type is unregistered from the ERM framework, then all entries corresponding to the resource user type will be removed from this table. The entPhysicalIndex represents the physical entity to which the resource user type and resource owner belong. Only 'module' class physical entities which run operating system with the ERM framework, are applicable here."
  },
  "cermResUserTypeResOwnerId": {
    "name": "cermResUserTypeResOwnerId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.10.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermOwnerId",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A unique identifier representing one of the resource owner in the resource user type. This object contains value of the cermResOwnerId in one of the entries in the cermResOwnerTable."
  },
  "cermResMonitorTable": {
    "name": "cermResMonitorTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.11",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information about each resource monitor in the system."
  },
  "cermResMonitorEntry": {
    "name": "cermResMonitorEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.11.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ENTITY-MIB",
        "object": "entPhysicalIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResMonitorSubEntityId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResMonitorId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing information about a resource monitor in the system. Whenever a new resource monitor is registered with the ERM framework, an entry will be included in this table for the resource monitor. Likewise, whenever a resource monitor is unregistered from the ERM framework, the corresponding resource monitor entry will be removed from this table. The entPhysicalIndex represents the physical entity to which the resource monitor belongs. Only 'module' class physical entities which run operating system with the ERM framework, are applicable here."
  },
  "cermResMonitorSubEntityId": {
    "name": "cermResMonitorSubEntityId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.11.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermSubEntityId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object indicates the sub-entity (i.e. logical processing entity in a physical entity) in which the resource monitor is present."
  },
  "cermResMonitorId": {
    "name": "cermResMonitorId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.11.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermMonitorId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object indicates the resource monitor identifier."
  },
  "cermResMonitorName": {
    "name": "cermResMonitorName",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.11.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This is a textual string containing name of the resource monitor."
  },
  "cermResMonitorResOwnerResUserTable": {
    "name": "cermResMonitorResOwnerResUserTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.12",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains the following information: 1) resource owners being watched by each resource monitor. 2) resource users being watched by each resource monitor. 3) resource owner and resource user relationships being watched by each resource monitor."
  },
  "cermResMonitorResOwnerResUserEntry": {
    "name": "cermResMonitorResOwnerResUserEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.12.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ENTITY-MIB",
        "object": "entPhysicalIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResMonitorSubEntityId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResMonitorId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResMonitorResOwnerId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResMonitorResUserTypeId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResMonitorResUserId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing any of the following information: 1) one of the resource owners being watched by a resource monitor. 2) one of the resource users being watched by a resource monitor. 3) one of the resource owner and resource user relationships being watched by a resource monitor. Whenever a resource monitor starts watching a resource owner or resource user or resource owner <-> resource user relationship, an entry will be included in this table for the resource monitor. The entPhysicalIndex represents the physical entity to which the resource monitor belongs. Only 'module' class physical entities which run operating system with the ERM framework, are applicable here."
  },
  "cermResMonitorResOwnerId": {
    "name": "cermResMonitorResOwnerId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.12.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermOwnerIdOrZero",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object identifies the resource owner which is being monitored by the resource monitor. The value of this object would be 0 in the entry where only the resource user (not the resource owner and resource user relationship) being watched by the resource monitor. In case of non-zero value, this object indicates the cermResOwnerId object value for one of the resource owner entry in the cermResOwnerTable."
  },
  "cermResMonitorResUserTypeId": {
    "name": "cermResMonitorResUserTypeId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.12.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermUserTypeIdOrZero",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object identifies the resource user type of the resource user which is being monitored by the resource monitor. The value of this object would be 0 in the entry where only the resource owner (not the resource owner and resource user relationship) being watched by the resource monitor. In case of non-zero value, this object indicates the cermResUserTypeId object value for one of the resource user type entry in the cermResUserTypeTable."
  },
  "cermResMonitorResUserId": {
    "name": "cermResMonitorResUserId",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.12.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermUserIdOrZero",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object identifies the resource user which is being monitored by the resource monitor. The value of this object would be 0 in the entry where only the resource owner (not the resource owner and resource user relationship) being watched by the resource monitor. In case of non-zero value, this object indicates the cermResUserId object value for one of the resource user entry in the cermResUserTable."
  },
  "cermResMonitorResPolicyName": {
    "name": "cermResMonitorResPolicyName",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.12.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the policy name corresponding to the resource owner <-> resource user relationship being watched by the resource monitor. If there is no corresponding applied resource policy for the resource owner and resource user in the entry, then this object will contain zero-length string. This object indicates the cermPolicyName object value in one of the resource policy entry in the cermConfigPolicyTable."
  },
  "cermResMonitorPolicyTable": {
    "name": "cermResMonitorPolicyTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.13",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains an entry for each resource policy being watched by each resource monitor in the system. This table will be useful to get the name of all the resource policies being watched by a particular resource monitor. If a resource monitor doesn't watch any resource policy, then this table will not have any entry for the resource monitor."
  },
  "cermResMonitorPolicyEntry": {
    "name": "cermResMonitorPolicyEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.13.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ENTITY-MIB",
        "object": "entPhysicalIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResMonitorSubEntityId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResMonitorId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResMonitorPolicyName",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing one of the resource policies being watched by a particular resource monitor. Whenever a resource monitor starts watching a resource policy, an entry will be added into this table, for the resource monitor <-> resource policy relationship. The entPhysicalIndex represents the physical entity to which the resource monitor belongs. Only 'module' class physical entities which run operating system with the ERM framework, are applicable here."
  },
  "cermResMonitorPolicyName": {
    "name": "cermResMonitorPolicyName",
    "oid": "1.3.6.1.4.1.9.9.510.1.2.13.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This is a textual string indicating name of a resource policy being watched by the resource monitor. This object will contain the cermPolicyName object value in one of the resource policy entry in the cermConfigPolicyTable."
  },
  "cermConfigPolicyTable": {
    "name": "cermConfigPolicyTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information about each resource policy configured in the system. Resource Policy will contain threshold configurations for a set of resource owners. Each threshold configuration must specify the threshold severity and the rising threshold value which are mandatory. The rising interval time, falling threshold value and falling interval time are optional for the threshold configuration. Only one local resource policy can be applied for a resource user or resource group, at any point in time. The global resource policy cannot be applied for a resource user or resource group. Whenever a resource policy is applied to a resource user instance, each threshold configuration in the resource policy will be applied to all relevant resource owner and resource user relationships."
  },
  "cermConfigPolicyEntry": {
    "name": "cermConfigPolicyEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyName",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing information about a resource policy. Whenever a new resource policy is configured in the system, an entry will be added in this table for the resource policy. Likewise, whenever a resource policy is unconfigured, corresponding entry for the resource policy will be removed from this table."
  },
  "cermPolicyName": {
    "name": "cermPolicyName",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This is textual string containing name of the resource policy. The resource policy name should be unique for each resource policy configured in the system."
  },
  "cermPolicyIsGlobal": {
    "name": "cermPolicyIsGlobal",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This is a flag indicating whether the resource policy is a global resource policy or not. For global resource policies, this object value would be 'true'. This object value cannot be changed after creating the resource policy."
  },
  "cermPolicyUserTypeName": {
    "name": "cermPolicyUserTypeName",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This is a textual string indicating the resource user type name for the resource policy. For a global resource policy, this object will have zero-length string. For a local resource policy, this object will contain name of the resource user type for the resource policy. The resource user type name for a resource policy, cannot be changed after creating the resource policy."
  },
  "cermPolicyLoggingEnabled": {
    "name": "cermPolicyLoggingEnabled",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "true",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This is a flag indicating whether syslog is enabled for the resource policy or not."
  },
  "cermPolicySnmpNotifEnabled": {
    "name": "cermPolicySnmpNotifEnabled",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "true",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This is a flag indicating whether SNMP notifications are enabled for the resource policy or not. If this object value is set to 'true', all notifications related to the resource policy will be sent to all remote hosts which are configured to get SNMP notifications from the managed device."
  },
  "cermPolicyStorageType": {
    "name": "cermPolicyStorageType",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "nonVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the storage type of this conceptual row. If it is set to 'nonVolatile', this entry can be saved into non-volatile memory."
  },
  "cermPolicyRowStatus": {
    "name": "cermPolicyRowStatus",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the status of the conceptual row in the cermConfigPolicyTable. To create a new entry (i.e. creating a new resource policy) in the cermConfigPolicyTable, this object has to be set to 'createAndGo' after setting all mandatory columnar objects for the corresponding entry. Setting the status to 'createAndGo' will fail if any of the columnar objects in the same row does not have acceptable value. If it succeeds, status of this row will be set to 'active'. To delete an existing resource policy, this object has to be set to 'destroy'. Deletion may fail if the resource policy is being configured by any other user or the resource policy has been associated with any resource user instance."
  },
  "cermConfigPolicyResOwnerThreshTable": {
    "name": "cermConfigPolicyResOwnerThreshTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information about each threshold configuration in each resource policy in the cermConfigPolicyTable. This table can be used to configure threshold details (i.e. threshold severity, rising threshold value, falling threshold value, rising interval time and falling interval time) for a resource policy in the cermConfigPolicyTable."
  },
  "cermConfigPolicyResOwnerThreshEntry": {
    "name": "cermConfigPolicyResOwnerThreshEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyName",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyPhysicalIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyResOwnerSubEntityId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyResOwnerId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyResOwnerSubTypeId",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyIsUserGlobal",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyThresholdSeverity",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing threshold configuration details for a resource owner sub-type, for a particular resource policy. Whenever a new threshold configuration is added in the resource policy, an entry wil be created in this table for the threshold configuration for the resource policy. Likewise, whenever a threshold configuration is removed from the resource policy, the corresponding entry will be removed from this table. The cermPolicyPhysicalIndex represents the physical entity to which the resource owner belongs. Only 'module' class physical entities which run operating system with the ERM framework, are applicable here."
  },
  "cermPolicyPhysicalIndex": {
    "name": "cermPolicyPhysicalIndex",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysicalIndex",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object uniquely identifies the physical entity to which the threshold configuration belongs. This objects indicates the entPhysicalIndex value (in the entPhysicalTable) for the corresponding physical entity."
  },
  "cermPolicyResOwnerSubEntityId": {
    "name": "cermPolicyResOwnerSubEntityId",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermSubEntityId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object indicates the sub-entity (i.e. logical processing entity in a physical entity) in which the resource owner is present. This object indicates the cermResOwnerSubEntityId value (in the cermResOwnerTable) for the resource owner."
  },
  "cermPolicyResOwnerId": {
    "name": "cermPolicyResOwnerId",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermOwnerId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object identifies the resource owner for which the threshold is configured. This object indicates the cermResOwnerId value (in the cermResOwnerTable) for the corresponding resource owner."
  },
  "cermPolicyResOwnerSubTypeId": {
    "name": "cermPolicyResOwnerSubTypeId",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object identifies the resource owner sub-type for which threshold is configured. For example, 'processor' and 'io' are sub-types of the 'memory' resource owner. Each resource owner sub-type may have different threshold configuration. If the resource owner does not have any sub-type, then value of this object would be zero. This object indicates the 'cermResOwnerSubTypeId' value (in the cermResOwnerSubTypeTable) for the corresponding resource owner sub-type."
  },
  "cermPolicyIsUserGlobal": {
    "name": "cermPolicyIsUserGlobal",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This is a flag indicating whether the threshold configuration is for per user global thresholding or user local thresholding. For per user global threshold configuration, value of this object would be 'true'. For system global and user local threshold configuration, value of this object would be 'false'."
  },
  "cermPolicyThresholdSeverity": {
    "name": "cermPolicyThresholdSeverity",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermThresholdSeverity",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object identifies the threshold severity set for the threshold configuration. For a minor threshold configuration, value of this object would be 'minor'. For major threshold configuration, value of this object would be 'major'. For critical threshold configuration, value of this object would be 'critical'."
  },
  "cermPolicyRisingThreshold": {
    "name": "cermPolicyRisingThreshold",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermThreshold",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the rising threshold value set for the threshold configuration entry. Lets assume that system global threshold value (in percentage) for 'io' memory resource owner is set to 60% as minor rising threshold value, 70% as major rising threshold value and 90% as critical rising threshold value. When the total 'io' memory utilization exceeds the 60% threshold limit, a minor 'up' notification will be sent to relevant resource user(s). When the total 'io' memory utilization exceeds the 70% threshold limit, a major 'up' notification will be sent to relevant resource user(s). When it exceeds the 90% threshold limit, a critical 'up' notification will be sent to relevant resource user(s). The rising threshold value is mandatory for any threshold configuration entry in the cermConfigPolicyResOwnerThreshTable."
  },
  "cermPolicyRisingInterval": {
    "name": "cermPolicyRisingInterval",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermDampenInterval",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the dampening interval for the rising threshold, for the threshold configuration. That means, an interval during which variations in the rising and falling threshold values are not notified to any resource user(s). If the dampening interval for the rising threshold is not configured, it will contain zero."
  },
  "cermPolicyFallingThreshold": {
    "name": "cermPolicyFallingThreshold",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermThresholdOrZero",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the falling threshold value set for the threshold configuration. Lets assume that system global threshold value (in percentage) for 'io' memory resource owner is set to 10% as minor falling threshold value, 20% as major falling threshold value and 30% as critical falling threshold value. When the total 'io' memory utilization falls below 10%, a minor 'down' notification will be sent to relevant resource user(s). When the total 'io' memory utilization falls below 20%, a major 'down' notification will be sent to relevant resource user(s). When it falls below 30%, a critical 'down' notification will be sent to relevant resource user(s). The 'down' notification will be sent only if corresponding 'up' notification has already been sent to relevant resource user(s). Zero value for this object indicates that the falling threshold value is not configured."
  },
  "cermPolicyFallingInterval": {
    "name": "cermPolicyFallingInterval",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermDampenInterval",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the dampening interval for the falling threshold for the threshold configuration. That means, an interval during which variations in the rising and falling threshold values are not notified to the resource user(s). If the dampening interval for the falling threshold is not configured, it will contain zero."
  },
  "cermPolicyResOwnerThreshStorageType": {
    "name": "cermPolicyResOwnerThreshStorageType",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "nonVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the storage type of this conceptual row. If it is set to 'nonVolatile', this entry can be saved into non-volatile memory."
  },
  "cermPolicyResOwnerThreshRowStatus": {
    "name": "cermPolicyResOwnerThreshRowStatus",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the status of the conceptual row in the cermConfigPolicyResOwnerThreshTable. To create a new entry (i.e. adding a new threshold configuration for the resource policy) in the cermConfigPolicyResOwnerThreshTable, this object has to be set to 'createAndGo'. Setting the status to 'createAndGo' will fail if any columnar object in the same row does not have acceptable value. If it succeeds, status of this row will be set to 'active'. To delete an existing threshold configuration in the resource policy, this object value to be set to 'destroy'."
  },
  "cermConfigResGroupTable": {
    "name": "cermConfigResGroupTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information about each resource group created by the user in the system. This table is used to create or delete a resource group in the system."
  },
  "cermConfigResGroupEntry": {
    "name": "cermConfigResGroupEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermConfigResGroupName",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing a resource group name and its resource user type name. Whenever a new resource group is configured by the user, an entry will be created for the resource group in this table. Likewise, whenever a resource group is unconfigured by the user, the corresponding resource group entry will be removed from this table."
  },
  "cermConfigResGroupName": {
    "name": "cermConfigResGroupName",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 48
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This is a textual string containing name of the resource group. The name is unique for each resource group available in the system."
  },
  "cermConfigResGroupUserTypeName": {
    "name": "cermConfigResGroupUserTypeName",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This is a textual string containing name of the resource user type to which the resource group belongs. Only the resource user instance of the same resource user type, can be added into the resource group."
  },
  "cermConfigResGroupStorageType": {
    "name": "cermConfigResGroupStorageType",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "nonVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the storage type of this conceptual row. If it is set to 'nonVolatile', this entry can be saved into non-volatile memory."
  },
  "cermConfigResGroupRowStatus": {
    "name": "cermConfigResGroupRowStatus",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the status of the conceptual row in the cermConfigResGroupTable. To create a new row (i.e. creating a new resource group) in this table, this object has to be set to 'createAndGo'. If it succeeds, status of the row will be set to 'active'. To delete an existing resource group, this object has to be set to 'destroy'."
  },
  "cermConfigResGroupUserTable": {
    "name": "cermConfigResGroupUserTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table has list of resource user instances added into each resource group."
  },
  "cermConfigResGroupUserEntry": {
    "name": "cermConfigResGroupUserEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermConfigResGroupName",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermConfigResGroupUserName",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing a resource group name and one of it's resource user instance name. Whenever a resource user instance is added into the resource group by the user, an entry will be created in this table. Likewise, whenever a resource user instance is removed from the resource group, the corresponding entry in this table will be removed."
  },
  "cermConfigResGroupUserName": {
    "name": "cermConfigResGroupUserName",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This is a textual string containing name of the resource user instance in the resource group. The resource user instance need not exist in the system when the resource group is configured."
  },
  "cermConfigResGroupUserStorageType": {
    "name": "cermConfigResGroupUserStorageType",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "nonVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the storage type of this conceptual row. If it is set to 'nonVolatile', this entry can be saved into non-volatile memory."
  },
  "cermConfigResGroupUserRowStatus": {
    "name": "cermConfigResGroupUserRowStatus",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the status of the conceptual row in the cermConfigResGroupUserTable. To create a new row (i.e. adding a new resource user instance) in the cermConfigResGroupUserTable, this object has to be set to 'createAndGo'. Setting the status to 'createAndGo' will fail if the given resource group is not yet created (i.e. not available in the cermConfigResGroupTable) or given resource user instance index is already exist. If it succeeds, status of the row will be set to 'active'. To delete an resource user instance from the resource group, this object has to be set to 'destroy'."
  },
  "cermConfigPolicyApplyTable": {
    "name": "cermConfigPolicyApplyTable",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table has a list of resource users (or groups) for which local resource policies are applied in the system. The main purpose of this table is to apply a local resource policy for a resource user or resource group."
  },
  "cermConfigPolicyApplyEntry": {
    "name": "cermConfigPolicyApplyEntry",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyApplyUserOrGroupName",
        "implied": 0
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyApplyUserOrGroupFlag",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing a resource user (or group) name and a local resource policy name applied to the resource user (or group). Whenever a policy is applied to a resource user (or group), an entry will be created in this table. Likewise, whenever a policy applied to a resource user (or group) is removed, the corresponding entry will be removed."
  },
  "cermPolicyApplyUserOrGroupName": {
    "name": "cermPolicyApplyUserOrGroupName",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This is a textual string containing name of the resource user (or resource group) for which the resource policy is applied. A resource user (or group) cannot be associated with more than one resource policies. In other words, more than one resource polices cannot be applied to a resource user (or group) at any point in time."
  },
  "cermPolicyApplyUserOrGroupFlag": {
    "name": "cermPolicyApplyUserOrGroupFlag",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CermUserOrGroup",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This is a flag indicating whether the cermPolicyApplyUserOrGroupName is a resource user name or resource group name. For resource group name, this object has to be set to 'group'."
  },
  "cermPolicyApplyPolicyName": {
    "name": "cermPolicyApplyPolicyName",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "A textual string indicating name of the resource policy which is applied for the resource user (or resource group). This object indicates the cermPolicyName, in the cermConfigPolicyTable, applied to the resource user (or group) name."
  },
  "cermPolicyApplyStorageType": {
    "name": "cermPolicyApplyStorageType",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "nonVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the storage type of this conceptual row. If it is set to 'nonVolatile', this entry can be saved into non-volatile memory."
  },
  "cermPolicyApplyRowStatus": {
    "name": "cermPolicyApplyRowStatus",
    "oid": "1.3.6.1.4.1.9.9.510.1.3.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the status of the row in the cermConfigPolicyApplyTable. To create a new entry (i.e. applying a resource policy to a resource group or resource user) in the cermConfigPolicyApplyTable, this object has to be set to 'createAndGo'. Setting the status to 'createAndGo' will fail if any columnar object in the same row does not have acceptable value (for example, the specified resource policy name does not exist in the cermConfigPolicyTable). If it succeeds, status of the row will be set to 'active'. To delete a row in the table (i.e. unconfiguring a policy for a resource group/user), this object has to be set to 'destroy'."
  },
  "cermNotifsEnabled": {
    "name": "cermNotifsEnabled",
    "oid": "1.3.6.1.4.1.9.9.510.1.5.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object indicates whether generation of traps for ERM policy violation notifications are allowed or not. When this object is set to 'true', it allows generation of traps for the ERM policy violation related notifications ciscoErmGlobalPolicyViolation and ciscoErmLocalPolicyViolation."
  },
  "cermNotifsThresholdSeverity": {
    "name": "cermNotifsThresholdSeverity",
    "oid": "1.3.6.1.4.1.9.9.510.1.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "CermThresholdSeverity",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the severity of the threshold configuration."
  },
  "cermNotifsThresholdIsUserGlob": {
    "name": "cermNotifsThresholdIsUserGlob",
    "oid": "1.3.6.1.4.1.9.9.510.1.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates whether the threshold configuration is per user global thresholding or not."
  },
  "cermNotifsThresholdValue": {
    "name": "cermNotifsThresholdValue",
    "oid": "1.3.6.1.4.1.9.9.510.1.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "CermThreshold",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the rising (or falling) threshold value."
  },
  "cermNotifsDirection": {
    "name": "cermNotifsDirection",
    "oid": "1.3.6.1.4.1.9.9.510.1.4.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "CermNotificationDirection",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the direction of the ERM notification."
  },
  "cermNotifsPolicyName": {
    "name": "cermNotifsPolicyName",
    "oid": "1.3.6.1.4.1.9.9.510.1.4.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the name of the resource policy."
  },
  "ciscoErmGlobalPolicyViolation": {
    "name": "ciscoErmGlobalPolicyViolation",
    "oid": "1.3.6.1.4.1.9.9.510.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsThresholdSeverity"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsThresholdValue"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsDirection"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsPolicyName"
      }
    ],
    "status": "current",
    "description": "This notification event will be generated whenever system global resource policy is violated i.e. total resource utilization exceeds the applied global threshold limit for any resource owner sub-type. Also, this notificatioin will be generated when resource utilization of the affected resource owner sub-type falls below the corresponding falling threshold value. The cermResOwnerName and cermResOwnerSubTypeName objects indicates the resource owner name and resource owner sub-type name for which an applied global threshold value got violated. The cermNotifsThresholdSeverity object indicates the configured threshold severity which got violated. This object contains value of the cermResOwnerSubTypeThreshSeverity corresponding to the global threshold configuration which got violated. The cermNotifsThresholdValue object indicates the configured threshold limit which got violated. This object contains value of either cermResOwnerSubTypeRisingThresh or cermResOwnerSubTypeFallingThresh based on the ERM notification direction indicated by the object cermNotifsDirection. If the cermNotifsDirection object value is 'up', the cermNotifsThresholdValue object would contain the value of the object cermResOwnerSubTypeRisingThresh. If the cermNotifsDirection object value is 'down', the cermNotifsThresholdValue object would contain the value of the object cermResOwnerSubTypeFallingThresh. The cermNotifsDirection object indicates whether it is an 'up' notification or a 'down' notification. The cermNotifsPolicyName object indicates name of the global resource policy which got violated. This object contains value of the cermPolicyName for the violated resource policy, in the cermConfigPolicyTable. If there is no associated resource policy name for the notification, then this object will contain zero-length string."
  },
  "ciscoErmLocalPolicyViolation": {
    "name": "ciscoErmLocalPolicyViolation",
    "oid": "1.3.6.1.4.1.9.9.510.0.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserOrGroupThreshFlag"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsThresholdIsUserGlob"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsThresholdSeverity"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsThresholdValue"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsDirection"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsPolicyName"
      }
    ],
    "status": "current",
    "description": "This notification event will be generated whenever a local resource policy is violated i.e. resource utilization exceeds the applied user local or per user global threshold limit for any resource owner sub-type <-> resource user relationship. The cermResOwnerName and cermResOwnerSubTypeName objects indicates the resource owner name and resource owner sub-type name for which an applied per user global or user local threshold value got violated. The cermResUserOrGroupThreshFlag object indicates whether the ERM notification is because of *resource user* threshold violation or *resource group* threshold violation. The cermNotifsThresholdIsUserGlob object indicates whether the notification belongs to Per User Global threshold violation or User Local threshold violation. This object contains the value of cermResUserOrGroupThreshIsUserGlob corresponding to the threshold configuration which got violated. The cermNotifsThresholdValue object indicates the configured threshold limit which got violated. This object contains value of either cermResUserOrGroupRisingThresh or cermResUserOrGroupFallingThresh based on the ERM notification direction indicated by the object cermNotifsDirection. For the 'up' notification, this object would contain value of the object cermResUserOrGroupRisingThresh. For the 'down' notification, it would contain value of the object cermResUserOrGroupFallingThresh. The cermNotifsThresholdSeverity object indicates the configured threshold severity which got violated. This object contains value of the object cermResUserOrGroupThreshSeverity corresponding to the resource owner sub-type and resource user relationship. The cermNotifsDirection object indicates whether it is an 'up' notification or a 'down' notification. The cermNotifsPolicyName object indicates name of the local resource policy which got violated. If there is no associated policy name for the notification, then this object will contain zero-length string."
  },
  "ciscoErmMIBCompliances": {
    "name": "ciscoErmMIBCompliances",
    "oid": "1.3.6.1.4.1.9.9.510.2.1",
    "class": "objectidentity"
  },
  "ciscoErmMIBGroups": {
    "name": "ciscoErmMIBGroups",
    "oid": "1.3.6.1.4.1.9.9.510.2.2",
    "class": "objectidentity"
  },
  "ciscoErmMIBCompliance": {
    "name": "ciscoErmMIBCompliance",
    "oid": "1.3.6.1.4.1.9.9.510.2.1.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ciscoErmResOwnerGroup",
        "module": "CISCO-ERM-MIB"
      },
      {
        "object": "ciscoErmResUserTypeGroup",
        "module": "CISCO-ERM-MIB"
      },
      {
        "object": "ciscoErmResUserGroup",
        "module": "CISCO-ERM-MIB"
      },
      {
        "object": "ciscoErmResGroupGroup",
        "module": "CISCO-ERM-MIB"
      },
      {
        "object": "ciscoErmResOwnerResUserOrGroupRelationGroup",
        "module": "CISCO-ERM-MIB"
      },
      {
        "object": "ciscoErmResMonitorGroup",
        "module": "CISCO-ERM-MIB"
      },
      {
        "object": "ciscoErmPolicyConfigGroup",
        "module": "CISCO-ERM-MIB"
      },
      {
        "object": "ciscoErmResGroupConfigGroup",
        "module": "CISCO-ERM-MIB"
      },
      {
        "object": "ciscoErmNotifObjectsGroup",
        "module": "CISCO-ERM-MIB"
      },
      {
        "object": "ciscoErmNotifControlObjectsGroup",
        "module": "CISCO-ERM-MIB"
      },
      {
        "object": "ciscoErmPolicyViolationNotifGroup",
        "module": "CISCO-ERM-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for the ERM MIB module."
  },
  "ciscoErmResOwnerGroup": {
    "name": "ciscoErmResOwnerGroup",
    "oid": "1.3.6.1.4.1.9.9.510.2.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerMeasurementUnit"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerThreshIsConfigurable"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerResUserCount"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerResGroupCount"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeUsagePct"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeUsage"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeMaxUsage"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeGlobNotifSeverity"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeRisingThresh"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeRisingInterval"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeFallingThresh"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResOwnerSubTypeFallingInterval"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing information relevant to resource owner entity in the ERM framework."
  },
  "ciscoErmResUserTypeGroup": {
    "name": "ciscoErmResUserTypeGroup",
    "oid": "1.3.6.1.4.1.9.9.510.2.2.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeResOwnerCount"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeResUserCount"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeResGroupCount"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserTypeResOwnerId"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing information relevant to resource user type entity in the ERM framework."
  },
  "ciscoErmResUserGroup": {
    "name": "ciscoErmResUserGroup",
    "oid": "1.3.6.1.4.1.9.9.510.2.2.3",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserPriority"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserResGroupId"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing information relevant to resource user entity in the ERM framework."
  },
  "ciscoErmResGroupGroup": {
    "name": "ciscoErmResGroupGroup",
    "oid": "1.3.6.1.4.1.9.9.510.2.2.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResGroupName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResGroupUserInstanceCount"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResGroupResUserId"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing information relevant to resource group entity in the ERM framework."
  },
  "ciscoErmResOwnerResUserOrGroupRelationGroup": {
    "name": "ciscoErmResOwnerResUserOrGroupRelationGroup",
    "oid": "1.3.6.1.4.1.9.9.510.2.2.5",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserOrGroupFlag"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserOrGroupUsagePct"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserOrGroupUsage"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserOrGroupMaxUsage"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserOrGroupNotifSeverity"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserOrGroupGlobNotifSeverity"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserOrGroupThreshFlag"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserOrGroupRisingThresh"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserOrGroupRisingInterval"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserOrGroupFallingThresh"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResUserOrGroupFallingInterval"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing information relevant to resource owner sub-type <-> resource user/group relationship."
  },
  "ciscoErmResMonitorGroup": {
    "name": "ciscoErmResMonitorGroup",
    "oid": "1.3.6.1.4.1.9.9.510.2.2.6",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResMonitorName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResMonitorResPolicyName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermResMonitorPolicyName"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing information relevant to resource monitor entity in the ERM framework."
  },
  "ciscoErmPolicyConfigGroup": {
    "name": "ciscoErmPolicyConfigGroup",
    "oid": "1.3.6.1.4.1.9.9.510.2.2.7",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermScalarsGlobalPolicyName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyIsGlobal"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyUserTypeName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyLoggingEnabled"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicySnmpNotifEnabled"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyStorageType"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyRowStatus"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyRisingThreshold"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyRisingInterval"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyFallingThreshold"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyFallingInterval"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyResOwnerThreshStorageType"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyResOwnerThreshRowStatus"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyApplyPolicyName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyApplyStorageType"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermPolicyApplyRowStatus"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing the ability to configure a resource policy and applying the resource policy to a resource group or resource user."
  },
  "ciscoErmResGroupConfigGroup": {
    "name": "ciscoErmResGroupConfigGroup",
    "oid": "1.3.6.1.4.1.9.9.510.2.2.8",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermConfigResGroupUserTypeName"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermConfigResGroupStorageType"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermConfigResGroupRowStatus"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermConfigResGroupUserStorageType"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermConfigResGroupUserRowStatus"
      }
    ],
    "status": "current",
    "description": "A collection of objects providing the ability to configure a resource group."
  },
  "ciscoErmNotifControlObjectsGroup": {
    "name": "ciscoErmNotifControlObjectsGroup",
    "oid": "1.3.6.1.4.1.9.9.510.2.2.9",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsEnabled"
      }
    ],
    "status": "current",
    "description": "A collection of notification control objects."
  },
  "ciscoErmNotifObjectsGroup": {
    "name": "ciscoErmNotifObjectsGroup",
    "oid": "1.3.6.1.4.1.9.9.510.2.2.10",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsThresholdSeverity"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsThresholdIsUserGlob"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsThresholdValue"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsDirection"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "cermNotifsPolicyName"
      }
    ],
    "status": "current",
    "description": "A collection of notification related objects."
  },
  "ciscoErmPolicyViolationNotifGroup": {
    "name": "ciscoErmPolicyViolationNotifGroup",
    "oid": "1.3.6.1.4.1.9.9.510.2.2.11",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "CISCO-ERM-MIB",
        "object": "ciscoErmGlobalPolicyViolation"
      },
      {
        "module": "CISCO-ERM-MIB",
        "object": "ciscoErmLocalPolicyViolation"
      }
    ],
    "status": "current",
    "description": "A collection of notifications relevant to policy violation."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/CISCO-ERM-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 18:16:11 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "CISCO-ERM-MIB"
  }
}