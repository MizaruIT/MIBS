{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "Bits",
      "enterprises",
      "iso",
      "NOTIFICATION-TYPE",
      "OBJECT-TYPE",
      "MibIdentifier",
      "TimeTicks",
      "Counter64",
      "OBJECT-IDENTITY",
      "Unsigned32",
      "IpAddress",
      "Counter32",
      "MODULE-IDENTITY",
      "Gauge32",
      "Integer32"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "DisplayString": {
    "name": "DisplayString",
    "class": "type",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    }
  },
  "nec": {
    "name": "nec",
    "oid": "1.3.6.1.4.1.119",
    "class": "objectidentity"
  },
  "nec_mib": {
    "name": "nec_mib",
    "oid": "1.3.6.1.4.1.119.2",
    "class": "objectidentity"
  },
  "necProductDepend": {
    "name": "necProductDepend",
    "oid": "1.3.6.1.4.1.119.2.3",
    "class": "objectidentity"
  },
  "atomis_mib": {
    "name": "atomis_mib",
    "oid": "1.3.6.1.4.1.119.2.3.14",
    "class": "objectidentity"
  },
  "m5core_mib": {
    "name": "m5core_mib",
    "oid": "1.3.6.1.4.1.119.2.3.14.3",
    "class": "objectidentity"
  },
  "node": {
    "name": "node",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1",
    "class": "objectidentity"
  },
  "linf": {
    "name": "linf",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.2",
    "class": "objectidentity"
  },
  "conn": {
    "name": "conn",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3",
    "class": "objectidentity"
  },
  "perf": {
    "name": "perf",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4",
    "class": "objectidentity"
  },
  "nodeOperStatus": {
    "name": "nodeOperStatus",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "down": 1,
          "active": 2,
          "offLine": 3,
          "testing": 4,
          "initializing": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Operational status of the LS100."
  },
  "nodeIfConfTable": {
    "name": "nodeIfConfTable",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The configuration of the line cards."
  },
  "nodeIfConfEntry": {
    "name": "nodeIfConfEntry",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LS100-MIB",
        "object": "nodeIfConfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The configuration of a line card."
  },
  "nodeIfConfIndex": {
    "name": "nodeIfConfIndex",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of the table. Same as ifIndex."
  },
  "nodeIfConfPhysType": {
    "name": "nodeIfConfPhysType",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "sar": 2,
          "taxi100M": 3,
          "oc3cSMF": 4,
          "oc3cMMF": 5,
          "ds3PlcpScramble": 6,
          "ds3PlcpNoScramble": 7,
          "relay6Mcell": 8,
          "ds3Scramble": 9,
          "ds3NoScramble": 10,
          "e3PlcpScramble": 11,
          "e3PlcpNoScramble": 12,
          "e3Scramble": 13,
          "e3NoScramble": 14,
          "utp5": 15,
          "leasedLine3M": 16,
          "leasedLine4M": 17,
          "leasedLine6M": 18,
          "utp5classB": 19,
          "oc3cSmfShaper": 20,
          "taxi140M": 21,
          "notInstalled": 99
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The PMD/physical layer format of the line card."
  },
  "nodeIfConfRev": {
    "name": "nodeIfConfRev",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The revision of the line cards."
  },
  "nodeIfConfStatus": {
    "name": "nodeIfConfStatus",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "inService": 2,
          "outOfService": 3,
          "testing": 4,
          "localLoopBack": 5,
          "remoteLoopBack": 6,
          "notInstalled": 99
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Operational status of the line card."
  },
  "nodeFanStatus": {
    "name": "nodeFanStatus",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Operational status of the Fan."
  },
  "nodeUpcWindowSize": {
    "name": "nodeUpcWindowSize",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 120
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "UPC window size. Integer Wi represents Wi X 512 cell time. Wi=1 correspond to 1.4msec. Wi=120 correspond to 168msec. It is not allowed to change window size when any PVC exists."
  },
  "nodeBestEffortBufferSize": {
    "name": "nodeBestEffortBufferSize",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Input buffer capacity for Best Effort traffic(Bb). The number of cells stored in the buffer is Bb X 128. The default value is 8. The sum of the buffer capacity is 2047 cells."
  },
  "nodeGuaranteedBufferSize": {
    "name": "nodeGuaranteedBufferSize",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Input buffer capacity for Guaranteed traffic(Bg). The number of cells stored in the buffer is Bg X 128. The default value is 0. The sum of the buffer capacity is 2047 cells."
  },
  "nodeBestEffortBufferThreshold": {
    "name": "nodeBestEffortBufferThreshold",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Threshold buffer capacity for Best Effort traffic. If the number of cells stored in the buffer exceeds this threshold, cells with CLP=1 and traffic defined as UBR will be discarded."
  },
  "nodeGuaranteedBufferThreshold": {
    "name": "nodeGuaranteedBufferThreshold",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Threshold buffer capacity for Guaranteed traffic. If the number of cells stored in the buffer exceeds this threshold, cells with CLP=1 and traffic defined as VBR will be discarded."
  },
  "nodeSaveConf": {
    "name": "nodeSaveConf",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "save": 1,
          "noOperation": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Save system configuration information including the PVC table to the non-volatile memory. Writing a value of save(1) saves the configiration data. Writing the value noOperation(2) has no effect. When read, this object always has the value noOperation(2)."
  },
  "nodeSaveResult": {
    "name": "nodeSaveResult",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "temporaryFailure": 1,
          "notReady": 2,
          "ready": 3,
          "success": 4,
          "nearend": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates the result of the save command issued from NMS. The result is either success/temporary failure/notReady."
  },
  "nodeReset": {
    "name": "nodeReset",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "reset": 1,
          "noOperation": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Writing the value reset(1) resets the system. Writing the value noOperation(2) has no effect. When read, this object always has the value noOperation(2)."
  },
  "linfStatusTable": {
    "name": "linfStatusTable",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Status of the line cards including ATM specific information."
  },
  "linfStatusEntry": {
    "name": "linfStatusEntry",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LS100-MIB",
        "object": "linfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status of a line card including ATM specific information."
  },
  "linfIndex": {
    "name": "linfIndex",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Same as ifIndex"
  },
  "linfStatus": {
    "name": "linfStatus",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "los": 2,
          "lof": 3,
          "loc": 4,
          "ais": 5,
          "yellowLine": 6,
          "yellowPath": 7,
          "lop": 8,
          "idle": 9,
          "yellowAlarm": 10,
          "plcpLOF": 11,
          "plcpYellow": 12,
          "maFERF": 13,
          "rai": 14,
          "payloadAllOnes": 15,
          "notInstalled": 99
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of line interface"
  },
  "linfConf": {
    "name": "linfConf",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "publicUNI": 1,
          "privateUNI": 2,
          "privateNNI": 3,
          "others": 99
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Line card type."
  },
  "linfFwdAvailableBandWidth": {
    "name": "linfFwdAvailableBandWidth",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The amount of bandwidth (Mbps) available/unallocated in the forward (incoming) direction."
  },
  "linfBkwdAvailableBandWidth": {
    "name": "linfBkwdAvailableBandWidth",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The amount of bandwidth (Mbps) available/unallocated in the backward (outgoing) direction."
  },
  "connPvcIndexNext": {
    "name": "connPvcIndexNext",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 8191
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The next available index for a row of the connPvcTable."
  },
  "connPvcIndexEnable": {
    "name": "connPvcIndexEnable",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 8191
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "When read, this object is the current minimum value of an index in the connPvcTable. Writing this value has no effect."
  },
  "connPvcTable": {
    "name": "connPvcTable",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The table containing information on current PVC/SVCs. Currently, only PVCs are represented in this table. The table is also used to establish and delete PVCs. 1. PVC establishment procedure (1) Read connPvcIndexNext. This value is used as the value of connPvcIndex for the new connection. (2) Determine the value of connPvcHighIfIndex. When creating a new point-to-multipoint connection, connPvcHighIfIndex must identify the first leaf. When creating a new point-to-point connection, connPvcHighIfIndex normally identifies the interface with the higher value of ifIndex. (3) Set connPvcRowStatus to 'createAndWait' using the values of connPvcIndex and connPvcHighIfIndex as indexes. This causes the switch to create the new row with some objects being set to default values. The parameters for which there is no reasonable default are set to 0xffffffff. Object Default connPvcTopology bidirectionalVCC(2) connPvcTrafficType trafficUBR(4) connPvcLowIfIndex 0xffffffff connPvcLowVPI 0xffffffff connPvcLowVCI 0xffffffff connPvcLowUpcParam 512 connPvcLowUpc pass(1) connPvcLowThroughput 0 connPvcHighVPI 0xffffffff connPvcHighVCI 0xffffffff connPvcHighUpcParam 512 connPvcHighUpc pass(1) connPvcHighThroughput 0 The switch then sets the value of connPvcRowStatus to 'notReady'. The default values can be read by the NMS. (4) The values of the above objects which are set to 0xffffffff must be modified, and the values of any other objects can be changed. When establishing a VP connection, connPvcLowVCI and connPvcHighVCI should be set to 0. When connPvcTrafficType is set to trafficUBR, the values of connPvcLowThroughput and connPvcHighThroughput are ignored. When all parameters have acceptable values, the switch sets connPvcRowStatus to 'notInService'. (5) When the NMS sets connPvcRowStatus to 'active', the switch validates each parameter's value, and tries to establish the connection. If this operation fails, the the cause of the failure is indicated by the value of connPvcCause. At present, the switch allows connPvcRowStatus to have a value of notReady or notInService for only one row at a time. 2. Adding a new leaf to an existing pt-to-mpt connection (1) Determine the value of connPvcIndex for the existing point-to-multipoint connection to which a new leaf is to be added. (2) Determine the value of connPvcHighIfIndex as the ifIndex value of the interface to be used for the new leaf. (3) Set connPvcRowStatus to 'createAndWait' using the values of connPvcIndex and connPvcHighIfIndex as indexes. This causes the switch to create the new leaf with some objects being set to default values. The parameters for which there is no reasonable default are set to 0xffffffff. Object Default connPvcHighVPI 0xffffffff connPvcHighVCI 0xffffffff connPvcHighUpcParam 512 connPvcHighUpc pass(1) connPvcHighThroughput 0 The switch then sets the value of connPvcRowStatus to 'notReady'. The default values can be read by the NMS. (4) The NMS must modify the values of connPvcHighVPI and connPvcHighVCI, and can modify the values of connPvcHighUpc, connPvcHighUpcParam and connPvcHighThroughput. When establishing a VP connection, connPvcHighVCI should be set to 0. The NMS should not change the values of the following objects: connPvcTopology connPvcTrafficType connPvcLowIfIndex connPvcLowVPI connPvcLowVCI connPvcLowUpcParam connPvcLowUpc connPvcLowThroughput When all parameters have acceptable values, the switch sets connPvcRowStatus to 'notInService'. (5) When the NMS sets connPvcRowStatus to 'active', the switch validates each parameter's value, and tries to add the new leaf to the original connection. If this operation fails, the cause of the failure is indicated by the value of connPvcCause. 3. PVC deletion procedure (1) Set the connPvcRowStatus to 'destroy'. If the row exists but is impossible to delete, the cause of the failure is indicated by the value of connPvcCause. If the deletion is successful, the row is deleted (including the instance of connPvcCause for that row). Notes: - a row representing a terminating VP will not have instances of the following objects: connPvcLowUpc, connPvcLowUpcParam, connPvcLowThroughput, connPvcHighUpc, connPvcHighUpcParam, connPvcHighThroughput, connPvcLowOutCells, connPvcHighInCells, connPvcHighUpcViolatedCells, connPvcLowInCells, connPvcHighOutCells, and connPvcLowUpcViolatedCells. - a row representing a connection between the gateway-PAD (the switch's internal port) and a line interface will not have instances of the following objects: connPvcLowUpc, connPvcLowUpcParam, connPvcLowThroughput, connPvcHighUpc, connPvcHighUpcParam, connPvcHighThroughput, connPvcHighOutCells, connPvcHighInCells, and connPvcHighUpcViolatedCells."
  },
  "connPvcEntry": {
    "name": "connPvcEntry",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LS100-MIB",
        "object": "connPvcIndex",
        "implied": 0
      },
      {
        "module": "LS100-MIB",
        "object": "connPvcHighIfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A row in the table is used to show the current PVC/SVCs."
  },
  "connPvcIndex": {
    "name": "connPvcIndex",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 8191
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value to identify this point-to-point or point-to-multipoint connection. A point-to-multipoint connection has multiple rows in this table, one for each leaf, each one having the same value of this object."
  },
  "connPvcTopology": {
    "name": "connPvcTopology",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "uniDirectionalVCC": 1,
          "biDirectionalVCC": 2,
          "uniDirectionalVPC": 3,
          "biDirectionalVPC": 4,
          "broadcastVPC": 5,
          "broadcastVCC": 6,
          "gateway": 7,
          "vpterm": 8
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Topology of the connection."
  },
  "connPvcTrafficType": {
    "name": "connPvcTrafficType",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "trafficCBR": 1,
          "trafficVBR": 2,
          "trafficUBR": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Traffic Type."
  },
  "connPvcLowIfIndex": {
    "name": "connPvcLowIfIndex",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The line interface number (ifIndex) of the low port. Normally, the low port has a lower ifIndex value than the high port. However, for point-to-multipoint connections, the root is always the low port, regardless of whether it is greater or smaller than the port numbers of individual leaves."
  },
  "connPvcLowVPI": {
    "name": "connPvcLowVPI",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "VPI value of the connection on the low port."
  },
  "connPvcLowVCI": {
    "name": "connPvcLowVCI",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "VCI value of the connection on the low port."
  },
  "connPvcLowUpcParam": {
    "name": "connPvcLowUpcParam",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 512
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Number of cells allowed to be sent in the unit cell time (512 cell times)."
  },
  "connPvcLowUpc": {
    "name": "connPvcLowUpc",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "pass": 1,
          "discard": 2,
          "tagging": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The action to take on a UPC violation for this connection on the low port. The tagging action is not supported by current hardware."
  },
  "connPvcLowThroughput": {
    "name": "connPvcLowThroughput",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 622
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Average rate of the connection (Mbps). Direction is from the low port to high port. This parameter is valid for the connection whose traffic type is CBR or VBR."
  },
  "connPvcHighIfIndex": {
    "name": "connPvcHighIfIndex",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 17
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The line interface number (ifIndex) of the high port. Normally, the high port has a higher ifIndex value than the low port. However, for point-to-multipoint connections, the root is always the low port, regardless of whether it is greater or smaller than the port numbers of individual leaves. Line interface number 17 corresponds to gateway (the switch's internal port)."
  },
  "connPvcHighVPI": {
    "name": "connPvcHighVPI",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The VPI value of the connection on the high port."
  },
  "connPvcHighVCI": {
    "name": "connPvcHighVCI",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The VCI value of the connection on the high port."
  },
  "connPvcHighUpcParam": {
    "name": "connPvcHighUpcParam",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 512
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Number of cells allowed to be sent in the unit cell time (512 cell times)."
  },
  "connPvcHighUpc": {
    "name": "connPvcHighUpc",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "pass": 1,
          "discard": 2,
          "tagging": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The action to take on a UPC violation for this connection on the high port. The tagging action is not supported by current hardware."
  },
  "connPvcHighThroughput": {
    "name": "connPvcHighThroughput",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 622
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Average rate of the connection (Mbps). Direction is from the high port to low port. This parameter is valid for the connection whose traffic type is CBR or VBR."
  },
  "connPvcLowInCells": {
    "name": "connPvcLowInCells",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of incoming cells on this connection on low port."
  },
  "connPvcHighOutCells": {
    "name": "connPvcHighOutCells",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of outgoing cells on this connection on the high port."
  },
  "connPvcHighInCells": {
    "name": "connPvcHighInCells",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of incoming cells on this connection on high port. (Valid for bi-direction connections only)."
  },
  "connPvcLowOutCells": {
    "name": "connPvcLowOutCells",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of outgoing cells on this connection on the low. port. (Valid for bi-direction connections only)."
  },
  "connPvcLowUpcViolatedCells": {
    "name": "connPvcLowUpcViolatedCells",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of UPC violation cells incoming from the low port."
  },
  "connPvcHighUpcViolatedCells": {
    "name": "connPvcHighUpcViolatedCells",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of UPC violation cells incoming from the high port. (Valid for bi-direction connections only)."
  },
  "connPvcRowStatus": {
    "name": "connPvcRowStatus",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 1,
          "notInService": 2,
          "notReady": 3,
          "createAndWait": 5,
          "destroy": 6
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of this row. 'active' indicates that the connection is in use. 'notInService' indicates that the row exists but the connection is not established. 'notReady' indicates that the row exists in the agent, but is missing information necessary in order to be established. 'createAndWait' supplied by a management station wishing to create a new row. 'destroy' supplied by a management station wishing to delete the row."
  },
  "connPvcCause": {
    "name": "connPvcCause",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "existing": 1,
          "vpivciBusy": 2,
          "vpivciOutOfRange": 3,
          "rateOverFlow": 4,
          "upvpOutOfRange": 5,
          "broadcastTableFull": 6,
          "inconsistentVPVC": 7,
          "lineDiagnosis": 8
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The result of the PVC establishment/deletion."
  },
  "connPvcKind": {
    "name": "connPvcKind",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.3.3.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "pvc": 1,
          "svc": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object identifies the connection is SVC or PVC."
  },
  "perfTrapEnable": {
    "name": "perfTrapEnable",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enable": 1,
          "disable": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of performance monitoring traps. Its value does not affect other traps, such as coldStart."
  },
  "perfIfTable": {
    "name": "perfIfTable",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Table of performance monitoring information."
  },
  "perfIfEntry": {
    "name": "perfIfEntry",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LS100-MIB",
        "object": "perfIfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Performance monitoring information for a specific line."
  },
  "perfIfIndex": {
    "name": "perfIfIndex",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Line interface number. Same as ifIndex."
  },
  "perfIfLcvs": {
    "name": "perfIfLcvs",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Line Code Violation. This object is valid only for DS3/E3."
  },
  "perfIfParitySections": {
    "name": "perfIfParitySections",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of B1 (BIP) errors(OC-3c, UTP-5), Number of C-bit parity violation(DS3), Number of CRC-6 violation(DS1)."
  },
  "perfIfParityLines": {
    "name": "perfIfParityLines",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of B2 (BIP) errors(OC-3c, UTP-5), Number of P-bit parity violation(DS3)."
  },
  "perfIfParityPaths": {
    "name": "perfIfParityPaths",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of B3 (BIP) errors(OC-3c, UTP-5), Number of PLCP BIP violation(DS3)."
  },
  "perfIfHecErrors": {
    "name": "perfIfHecErrors",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of HEC errors detected."
  },
  "perfIfMisDelivdCells": {
    "name": "perfIfMisDelivdCells",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of misdelivered cells."
  },
  "perfIfOverFlowCells": {
    "name": "perfIfOverFlowCells",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of cells discarded due to buffer overflow."
  },
  "perfIfInCBRCells": {
    "name": "perfIfInCBRCells",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of received CBR cells."
  },
  "perfIfOutCBRCells": {
    "name": "perfIfOutCBRCells",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of transmitted CBR cells."
  },
  "perfIfInVBRCells": {
    "name": "perfIfInVBRCells",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of received VBR cells."
  },
  "perfIfOutVBRCells": {
    "name": "perfIfOutVBRCells",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of transmitted VBR cells."
  },
  "perfIfInUBRCells": {
    "name": "perfIfInUBRCells",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of received UBR cells."
  },
  "perfIfOutUBRCells": {
    "name": "perfIfOutUBRCells",
    "oid": "1.3.6.1.4.1.119.2.3.14.3.4.2.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of transmitted UBR cells."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/LS100-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:21:56 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "LS100-MIB"
  }
}