{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "iso",
      "enterprises",
      "Integer32",
      "Counter32",
      "Bits",
      "IpAddress",
      "Counter64",
      "Unsigned32",
      "OBJECT-IDENTITY",
      "MODULE-IDENTITY",
      "Gauge32",
      "NOTIFICATION-TYPE",
      "MibIdentifier",
      "OBJECT-TYPE",
      "TimeTicks",
      "TRAP-TYPE"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "DisplayString": {
    "name": "DisplayString",
    "class": "type",
    "type": {
      "type": "OCTET STRING",
      "class": "type"
    }
  },
  "PhysAddress": {
    "name": "PhysAddress",
    "class": "type",
    "type": {
      "type": "OCTET STRING",
      "class": "type"
    }
  },
  "SnpxBackplaneType": {
    "name": "SnpxBackplaneType",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "eth": 2,
          "ethTok": 3,
          "ethFddi": 4,
          "ethTokFddi": 5,
          "ethTokRed": 6,
          "ethTokFddiRed": 7,
          "tok": 8
        }
      }
    }
  },
  "SnpxChassisType": {
    "name": "SnpxChassisType",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "m3000": 2,
          "m3030": 3,
          "m2310": 4,
          "m2810": 5,
          "m2912": 6,
          "m2914": 7,
          "m271x": 8,
          "m2813": 9,
          "m2814": 10,
          "m2915": 11,
          "m5000": 12,
          "m2813SA": 13,
          "m2814SA": 14,
          "m810M": 15,
          "m1032x": 16,
          "m5005": 17,
          "mAlcatelEthConc": 18,
          "m2715SA": 20,
          "m2486": 21
        }
      }
    }
  },
  "S3ModuleType": {
    "name": "S3ModuleType",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "empty": 1,
          "other": 2,
          "m3302": 3,
          "m3304-ST": 4,
          "m3305": 5,
          "m3308": 6,
          "m3313": 7,
          "m3313M": 8,
          "m3314-ST": 9,
          "m3314M-ST": 10,
          "m3323": 11,
          "m3324-ST": 12,
          "m3502": 13,
          "m3532": 14,
          "m3552": 15,
          "m3301": 16,
          "m3307": 17,
          "m3356": 18,
          "m3512": 19,
          "m3514": 20,
          "m3505": 21,
          "m3554": 22,
          "m3534": 23,
          "m3383": 24,
          "m3384": 25,
          "m331x": 26,
          "m351x": 27,
          "m3502-A": 28,
          "m3902": 29,
          "m3904": 30,
          "m3910S": 31,
          "m3386": 32,
          "m3394": 33,
          "m3395": 34,
          "m3323S": 35,
          "m3324S-ST": 36,
          "m3307A": 37,
          "m3308A": 38,
          "m3505A": 39,
          "m3513": 40,
          "m3333": 41,
          "m3334-ST": 42,
          "m3040": 43,
          "m3100R": 44,
          "notUsed45": 45,
          "notUsed46": 46,
          "m2810-hm": 47,
          "m2810-nmm": 48,
          "m3313S": 49,
          "m3314S": 50,
          "m3368": 51,
          "m3512S": 52,
          "m3513S": 53,
          "m3514S": 54,
          "m3522": 55,
          "m2912": 56,
          "m2914": 57,
          "notUsed58": 58,
          "m3301-75": 59,
          "m3301-93": 60,
          "m271x-nmm": 61,
          "m2705-hm": 62,
          "m2715-hm": 63,
          "m2813-nmm": 64,
          "m2814-nmm": 65,
          "m2813-hm": 66,
          "m2814-hm": 67,
          "m2803-hm": 68,
          "m2804-hm": 69,
          "m3395A": 70,
          "m3040S": 71,
          "m3502B": 72,
          "m3505B": 73,
          "m2715-F-hm": 74,
          "m2712-hm": 75,
          "m2712-F-hm": 76,
          "m2702-hm": 77,
          "m2702-C-hm": 78,
          "m2705-F-hm": 79,
          "m2702-F-hm": 80,
          "m2705-C-hm": 81,
          "m3902A": 82,
          "m2912A": 83,
          "m3313A": 84,
          "m3314A": 85,
          "m3307HD": 86,
          "m3328": 87,
          "m3904-2SM": 88,
          "m3910S-SM": 89,
          "m3800": 90,
          "m3910S-SD": 91,
          "m3904-4SM": 92,
          "m2915": 93,
          "m3910SA": 94,
          "m3910SA-SM": 95,
          "m3905": 96,
          "m2715B-hm": 97,
          "m2705B-hm": 98,
          "m2715B-F-hm": 99,
          "m2712B-hm": 100,
          "m2712B-F-hm": 101,
          "m2702B-C-hm": 102,
          "m3304A": 103,
          "m3486": 104,
          "m3308B": 105,
          "m2813SA-nmm": 106,
          "m2814SA-nmm": 107,
          "m3517SA": 108,
          "m810M": 109,
          "m3313SA": 110,
          "m3314SA": 111,
          "m3522A": 112,
          "m3504-ST": 113,
          "m3513SA": 114,
          "mAlcatel-Eth-nmm": 115,
          "mAlcatel-Eth-hm1": 116,
          "mAlcatel-Eth-hm": 117,
          "m2486-nmm": 118,
          "m2486-hm": 119,
          "m3174": 120,
          "m271xSA-nmm": 121,
          "m3299C": 122,
          "m3299U": 123,
          "m3299F": 124
        }
      }
    }
  },
  "S3PsType": {
    "name": "S3PsType",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "low": 2,
          "medium": 3,
          "high": 4,
          "redundantCapable": 5,
          "empty": 6
        }
      }
    }
  },
  "IpxAddress": {
    "name": "IpxAddress",
    "class": "type",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 10,
            "max": 10
          }
        ]
      }
    }
  },
  "synoptics": {
    "name": "synoptics",
    "oid": "1.3.6.1.4.1.45",
    "class": "objectidentity"
  },
  "products": {
    "name": "products",
    "oid": "1.3.6.1.4.1.45.1",
    "class": "objectidentity"
  },
  "s3SnmpAgent": {
    "name": "s3SnmpAgent",
    "oid": "1.3.6.1.4.1.45.1.2",
    "class": "objectidentity"
  },
  "s3AgentSw": {
    "name": "s3AgentSw",
    "oid": "1.3.6.1.4.1.45.1.2.1",
    "class": "objectidentity"
  },
  "s3AgentNetProtocol": {
    "name": "s3AgentNetProtocol",
    "oid": "1.3.6.1.4.1.45.1.2.2",
    "class": "objectidentity"
  },
  "s3AgentIpProtocol": {
    "name": "s3AgentIpProtocol",
    "oid": "1.3.6.1.4.1.45.1.2.2.1",
    "class": "objectidentity"
  },
  "s3AgentIpxProtocol": {
    "name": "s3AgentIpxProtocol",
    "oid": "1.3.6.1.4.1.45.1.2.2.2",
    "class": "objectidentity"
  },
  "s3AgentHw": {
    "name": "s3AgentHw",
    "oid": "1.3.6.1.4.1.45.1.2.4",
    "class": "objectidentity"
  },
  "s3AgentLocImage": {
    "name": "s3AgentLocImage",
    "oid": "1.3.6.1.4.1.45.1.2.6",
    "class": "objectidentity"
  },
  "series3000": {
    "name": "series3000",
    "oid": "1.3.6.1.4.1.45.1.3",
    "class": "objectidentity"
  },
  "s3000Chassis": {
    "name": "s3000Chassis",
    "oid": "1.3.6.1.4.1.45.1.3.1",
    "class": "objectidentity"
  },
  "s3000RedundantPs": {
    "name": "s3000RedundantPs",
    "oid": "1.3.6.1.4.1.45.1.3.1.10",
    "class": "objectidentity"
  },
  "s3000Ethernet": {
    "name": "s3000Ethernet",
    "oid": "1.3.6.1.4.1.45.1.3.2",
    "class": "objectidentity"
  },
  "s3000EnetConcentrator": {
    "name": "s3000EnetConcentrator",
    "oid": "1.3.6.1.4.1.45.1.3.2.1",
    "class": "objectidentity"
  },
  "s3000EnetBoard": {
    "name": "s3000EnetBoard",
    "oid": "1.3.6.1.4.1.45.1.3.2.2",
    "class": "objectidentity"
  },
  "s3000EnetLocBridge": {
    "name": "s3000EnetLocBridge",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2",
    "class": "objectidentity"
  },
  "s3000EnetRemBridge": {
    "name": "s3000EnetRemBridge",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3",
    "class": "objectidentity"
  },
  "s3000EnetRouter": {
    "name": "s3000EnetRouter",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.4",
    "class": "objectidentity"
  },
  "s3000EnetPort": {
    "name": "s3000EnetPort",
    "oid": "1.3.6.1.4.1.45.1.3.2.3",
    "class": "objectidentity"
  },
  "s3000EnetPlusStatistics": {
    "name": "s3000EnetPlusStatistics",
    "oid": "1.3.6.1.4.1.45.1.3.2.10",
    "class": "objectidentity"
  },
  "s3000EnetPlusConc": {
    "name": "s3000EnetPlusConc",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.3",
    "class": "objectidentity"
  },
  "s3000TokenRing": {
    "name": "s3000TokenRing",
    "oid": "1.3.6.1.4.1.45.1.3.3",
    "class": "objectidentity"
  },
  "s3000TrBoard": {
    "name": "s3000TrBoard",
    "oid": "1.3.6.1.4.1.45.1.3.3.2",
    "class": "objectidentity"
  },
  "s3000TrPort": {
    "name": "s3000TrPort",
    "oid": "1.3.6.1.4.1.45.1.3.3.3",
    "class": "objectidentity"
  },
  "s3000TrNmm": {
    "name": "s3000TrNmm",
    "oid": "1.3.6.1.4.1.45.1.3.3.4",
    "class": "objectidentity"
  },
  "s3000TrNode": {
    "name": "s3000TrNode",
    "oid": "1.3.6.1.4.1.45.1.3.3.5",
    "class": "objectidentity"
  },
  "s3000TrRing": {
    "name": "s3000TrRing",
    "oid": "1.3.6.1.4.1.45.1.3.3.7",
    "class": "objectidentity"
  },
  "s3TrRingStats": {
    "name": "s3TrRingStats",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1",
    "class": "objectidentity"
  },
  "temporary": {
    "name": "temporary",
    "oid": "1.3.6.1.4.1.45.2",
    "class": "objectidentity"
  },
  "ieee8023": {
    "name": "ieee8023",
    "oid": "1.3.6.1.4.1.45.2.1",
    "class": "objectidentity"
  },
  "registration": {
    "name": "registration",
    "oid": "1.3.6.1.4.1.45.3",
    "class": "objectidentity"
  },
  "s3reg_3000": {
    "name": "s3reg_3000",
    "oid": "1.3.6.1.4.1.45.3.2",
    "class": "objectidentity"
  },
  "s3reg_3000_enetNMM": {
    "name": "s3reg_3000_enetNMM",
    "oid": "1.3.6.1.4.1.45.3.2.1",
    "class": "objectidentity"
  },
  "s3reg_3000_trNMM": {
    "name": "s3reg_3000_trNMM",
    "oid": "1.3.6.1.4.1.45.3.2.2",
    "class": "objectidentity"
  },
  "s3reg_3030": {
    "name": "s3reg_3030",
    "oid": "1.3.6.1.4.1.45.3.3",
    "class": "objectidentity"
  },
  "s3reg_3030_enetNMM": {
    "name": "s3reg_3030_enetNMM",
    "oid": "1.3.6.1.4.1.45.3.3.1",
    "class": "objectidentity"
  },
  "s3reg_3030_trNMM": {
    "name": "s3reg_3030_trNMM",
    "oid": "1.3.6.1.4.1.45.3.3.2",
    "class": "objectidentity"
  },
  "s3reg_2715": {
    "name": "s3reg_2715",
    "oid": "1.3.6.1.4.1.45.3.9",
    "class": "objectidentity"
  },
  "s3reg_2715_trNMM": {
    "name": "s3reg_2715_trNMM",
    "oid": "1.3.6.1.4.1.45.3.9.1",
    "class": "objectidentity"
  },
  "s3reg_281X": {
    "name": "s3reg_281X",
    "oid": "1.3.6.1.4.1.45.3.12",
    "class": "objectidentity"
  },
  "s3reg_281X_enetNMM": {
    "name": "s3reg_281X_enetNMM",
    "oid": "1.3.6.1.4.1.45.3.12.1",
    "class": "objectidentity"
  },
  "s3AgentType": {
    "name": "s3AgentType",
    "oid": "1.3.6.1.4.1.45.1.2.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "m3313": 2,
          "m3313M": 3,
          "m3314-ST": 4,
          "m3314M-ST": 5,
          "m2310": 6,
          "m3512": 7,
          "m3514": 8,
          "m332x": 9,
          "m3356": 10,
          "m332xS": 11,
          "m3910S": 12,
          "m3395": 13,
          "m3394": 14,
          "m3513": 15,
          "m331xS": 16,
          "m291x": 17,
          "m271x": 18,
          "m281x": 19,
          "m331xA": 20,
          "m3522": 21,
          "m2722": 22,
          "m281xSA": 23,
          "m810M": 24,
          "m351xSA": 25,
          "m331xSA": 26,
          "m271xSA": 27,
          "m2486": 28
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The 3000 series agent's Module type."
  },
  "s3AgentFwVer": {
    "name": "s3AgentFwVer",
    "oid": "1.3.6.1.4.1.45.1.2.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The agent's module firmware version 0=Rev A,1=Rev B,etc."
  },
  "s3AgentSwMajorVer": {
    "name": "s3AgentSwMajorVer",
    "oid": "1.3.6.1.4.1.45.1.2.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The agent major software version number. (version is specified as major.minor.maint or 3.0.1). Object is in decimal."
  },
  "s3AgentSwMinorVer": {
    "name": "s3AgentSwMinorVer",
    "oid": "1.3.6.1.4.1.45.1.2.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The agent minor software version number (version is specified as major.minor.maint or 3.0.1). Object is in decimal."
  },
  "s3AgentBootProtocol": {
    "name": "s3AgentBootProtocol",
    "oid": "1.3.6.1.4.1.45.1.2.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "bootp-tftp": 2,
          "tftp-only": 3,
          "ieee802-1e": 4,
          "proprietary": 5,
          "dll-download": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Boot protocol used to load the module with its software. On Agents with the Local Load option the value return by this object is valid only if the MIB object s3LocImageLoadMode is remoteBoot(2) or localAsBackup(4)."
  },
  "s3AgentBootFile": {
    "name": "s3AgentBootFile",
    "oid": "1.3.6.1.4.1.45.1.2.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The name of the boot file that is sent to the file server during boot time. The actual boot protocol used to retrieve the file is determined by s3AgentBootProtocol. This parameter will not take effect until written into EEPROM (s3AgentWriteEeprom) and a reset (s3AgentReset) is issued. This parameter is used only if the s3AgentBootMode is set to use EEPROM."
  },
  "s3AgentAuthTrap": {
    "name": "s3AgentAuthTrap",
    "oid": "1.3.6.1.4.1.45.1.2.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disable": 1,
          "enable": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "Enable or disable the use of authentication error trap generation. This parameter will take effect only after a restart (s3AgentRestart) is issued. This parameter will not survive a reset (s3AgentReset) unless the specific NMM configuration file is updated to reflect the change. This object is now deprecated. Managers should use the snmpEnableAuthenTraps object in MIB-II instead. This object is aliased to snmpEnableAuthenTraps. Changing either variable will change the other accordingly."
  },
  "s3AgentLocation": {
    "name": "s3AgentLocation",
    "oid": "1.3.6.1.4.1.45.1.2.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "This is a informational string that could be used to show the physical location (i.e. area) of the NMM or concentrator. This parameter will take effect only after a restart (s3AgentRestart) is issued. This parameter will not survive a reset (s3AgentReset) unless the specific NMM configuration file is updated to reflect the change. This object is now deprecated. Managers should use the sysLocation object in MIB-II instead."
  },
  "s3AgentMibLevel": {
    "name": "s3AgentMibLevel",
    "oid": "1.3.6.1.4.1.45.1.2.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Used to determine current MIB release supported by agent. The encoding of this object is of the following form: xyy, where x is the major version number and yy is the minor version number. Thus, version 3.0 would be represented as 300, version 3.01 would be 301 and 3.1 would be 310. Object is in decimal. Values that correspond to each agent type and version are specified in the other SynOptics documentation."
  },
  "s3AgentFeatureLevel": {
    "name": "s3AgentFeatureLevel",
    "oid": "1.3.6.1.4.1.45.1.2.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "Used to determine feature level of the agent. The encoding of this object is of the following form: xyy, where x is the major version number and yy is the minor version number. Thus, feature level version 1.0 would be represented as 100, version 1.01 would be 101 and 1.1 would be 110. Object is in decimal. The current values are the following: 100 - 331x V3.x - Basic Agent 100 - 351x - Basic Agent 100 - 271x V3.x - Basic Agent 101 - 281x V5.0 - Basic Agent - Dual Stack 102 - 331x V4.2.0 - Basic Agent - Non Segmentable Chassis - Ethernet Common board table - Ethernet Command port table - redundant power supply group 103 - 331xA V4.2.0 - Basic Agent - Segmentable chassis - Ethernet Common board table - Ethernet Common port table - redundant power supply group - Ethernet plus statistics, 104 - 331xA V4.2.0 - Basic Agent - Non-Segmentable chassis - Ethernet Common board table - Ethernet Common port table - redundant power supply group - Ethernet plus statistics, 109 - 331x V4.2.0 - Basic Agent - Segmentable Chassis - Ethernet Common board table - Ethernet Common port table - redundant power supply group 112 - 281x V5.1.0 - Basic Agent - Dual Stack - Network to MAC address mapping 113 - 331x V5.1.0 - Basic Agent - Segmentable chassis - Full Truffle Support - Dual Stack - Network to MAC address mapping 114 - 331x V5.1.0 - Basic Agent - Non-Segmentable chassis - Full Truffle Support - Dual Stack - Network to MAC address mapping 115 - 331xA V5.1.0 - Basic Agent - Segmentable chassis - Dual Stack - Full Truffle Support - Network to MAC address mapping 116 - 331xA V5.1.0 - Basic Agent - Non-Segmentable chassis - Dual Stack - Full Truffle Support - Network to MAC address mapping 200 - 331x V4.0 & V4.0.1 - Advanced Agent 200 - 271x V4.x - Advanced Agent 200 - 351x V4.x - Advanced Agent 200 - all FDDI Agents 201 - 331x V4.1.0, V4.1.1 - Advanced Agent - redundant power supply group 202 - 331xS V4.1.0, V4.1.1 - Advanced Agent - redundant power supply group - DS/SD traffic tables, - Ethernet plus statistics, - frame type distribution table - frame length distribution table 203 - 281x V4.2.0 - Advanced Agent - Dual Stack 204 - 331x V4.2.0 - Advanced Agent - Non-Segmentable chassis - Ethernet Common board table - Ethernet Common port table - redundant power supply group 205 - 331xS V4.2.0 - Advanced Agent - Segmentable chassis - Ethernet Common board table - Ethernet Common port table - redundant power supply group - DS/SD traffic tables, - Ethernet plus statistics, - frame type distribution table - frame length distribution table 206 - 331xS V4.2.0 - Advanced Agent - Non-Segmentable chassis - Ethernet Common board table - Ethernet Common port table - redundant power supply group - DS/SD traffic tables, - Ethernet plus statistics, - frame type distribution table - frame length distribution table 207 - 331xA V4.2.0 - Advanced agent - Segmentable chassis - Ethernet Common board table - Ethernet Common port table - redundant power supply group - Ethernet plus statistics, 208 - 331xA V4.2.0 - Advanced agent - Non-Segmentable chassis - Ethernet Common board table - Ethernet Common port table - redundant power supply group - Ethernet plus statistics, 209 - 331x V4.2.0 - Advanced agent - Segmentable chassis - Ethernet Common board table - Ethernet Command port table - redundant power supply group 212 - 331x V5.1.0 - Advanced Agent - Dual Stack - Network to MAC address mapping - RMON Ether Stats, History, Alarm, Event Groups 213 - 281x V5.1.0 - Advanced Agent - Segmentable chassis - Full Truffle Support - Dual Stack - Network to MAC address mapping - RMON Ether Stats, History, Alarm, Event Groups 214 - 331x V5.1.0 - Advanced Agent - Non-Segmentable chassis - Full Truffle Support - Dual Stack - Network to MAC address mapping - RMON Ether Stats, History, Alarm, Event Groups 215 - 331xA V5.1.0 - Advanced Agent - Segmentable chassis - RMON Ether Stats, History, Alarm, Event Groups - Dual Stack - Full Truffle Support - Network to MAC address mapping 216 - 331xA V5.1.0 - Advanced Agent - Non-Segmentable chassis - Full Truffle Support - Dual Stack - Network to MAC address mapping - RMON Ether Stats, History, Alarm, Event Groups 217 - 331xS V5.1.0 - Advanced Agent - Segmentable chassis - Full Truffle Support - Dual Stack - Network to MAC address mapping - RMON Ether Stats, History, Alarm, Event Groups - Bulk table retrieval for traffic matrix 218 - 331xS V5.1.0 - Advanced Agent - Non-Segmentable chassis - Full Truffle Support - Dual Stack - Network to MAC address mapping - RMON Ether Stats, History, Alarm, Event Groups - Bulk table retrieval for traffic matrix"
  },
  "s3AgentMySlotId": {
    "name": "s3AgentMySlotId",
    "oid": "1.3.6.1.4.1.45.1.2.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Slot where this agent currently resides. If hardware is unable to determine then a 0 should be returned."
  },
  "s3AgentUnAuthIp": {
    "name": "s3AgentUnAuthIp",
    "oid": "1.3.6.1.4.1.45.1.2.1.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object contains the IP address of the last station that tried to access this agent with an invalid community string. This object is used as a VarBind in an Authentication Trap PDU. A get request will return the last value used, and will return the null address 0.0.0.0 if no authentication traps have been sent."
  },
  "s3AgentUnAuthComm": {
    "name": "s3AgentUnAuthComm",
    "oid": "1.3.6.1.4.1.45.1.2.1.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object contains the community string of the last unauthenticated attempt to access this agent. This object is used as a VarBind in an Authentication Trap PDU. A get request will return the last value used, and will return the null string (length 0) if no authentication traps have been sent."
  },
  "s3AgentSwLicenseCode": {
    "name": "s3AgentSwLicenseCode",
    "oid": "1.3.6.1.4.1.45.1.2.1.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The software license code assigned to this agent. This code is required for initializing the agent. The code consists of exactly eight printable characters."
  },
  "s3AgentPerformance": {
    "name": "s3AgentPerformance",
    "oid": "1.3.6.1.4.1.45.1.2.1.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This counts the CPU idle time of the agent in units of 10 microseconds."
  },
  "s3AgentSwMaintVer": {
    "name": "s3AgentSwMaintVer",
    "oid": "1.3.6.1.4.1.45.1.2.1.16",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The agent software maintenance version number (version is specified as major.minor.maint or 3.0.1). Object is in decimal."
  },
  "s3AgentConfigLoadMode": {
    "name": "s3AgentConfigLoadMode",
    "oid": "1.3.6.1.4.1.45.1.2.1.17",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "remoteConfig": 2,
          "localConfig": 3,
          "localAsBackup": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates whether the agent should get configuration data from the network, use the local configuration data, or try the network first and then fall back to local configuration if the network load fails. This object applies only to agents with boot prom support for agent configuration load options. This parameter will not take effect until written into EEPROM (s3AgentWriteEeprom) and a reset (s3AgentReset) is issued. ***ACCESS VARIATION - changed access from read-write"
  },
  "s3AgentConfigActualSource": {
    "name": "s3AgentConfigActualSource",
    "oid": "1.3.6.1.4.1.45.1.2.1.18",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "remoteConfig": 2,
          "localConfig": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates whether the agent loaded configuration data from the network or used the local configuration data."
  },
  "s3AgentMgmtProtoMode": {
    "name": "s3AgentMgmtProtoMode",
    "oid": "1.3.6.1.4.1.45.1.2.1.19",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "ip": 2,
          "ipx": 3,
          "ipAndIpx": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This indicates from which network transports over which the agent will accept SNMP requests. This object only applies to agents with IP and IPX dual stack support. This parameter will not take effect until written into EEPROM (s3AgentWriteEeprom) and a reset (s3AgentReset) or a restart (s3AgentRestart) is issued."
  },
  "s3AgentActualMgmtProtocol": {
    "name": "s3AgentActualMgmtProtocol",
    "oid": "1.3.6.1.4.1.45.1.2.1.20",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "ip": 2,
          "ipx": 3,
          "ipAndIpx": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates which network transports over which the agent will currently accept SNMP requests."
  },
  "s3AgentIpAddr": {
    "name": "s3AgentIpAddr",
    "oid": "1.3.6.1.4.1.45.1.2.2.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The Agent's administrative IP address. The current operational IP address can be obtained by the ipAdEntAddr entry in the ipAddrTable. This parameter will take effect only after a restart (s3AgentRestart) is issued. This parameter will not survive a reset (s3AgentReset) unless it is written into EEPROM (s3AgentWriteEeprom). This parameter is used only if the s3AgentBootMode is set to use EEPROM."
  },
  "s3AgentNetMask": {
    "name": "s3AgentNetMask",
    "oid": "1.3.6.1.4.1.45.1.2.2.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The Agent's administrative subnet mask. The current operational subnet mask can be obtained by the ipAdEntNetMask entry in the ipAddrTable. This parameter will take effect only after a restart (s3AgentRestart) is issued. This parameter will not survive a reset (s3AgentReset) unless it is written into EEPROM (s3AgentWriteEeprom). This parameter is used only if the agentBootMode is set to use EEPROM. NOTE: The Model 331x (3313, 3313M, 3314-ST, 3314M-ST) Ethernet NMM agents do not store this parameter in EEPROM, so for these agents the subnet mask configuration must be downloaded in the configuration file."
  },
  "s3AgentDefaultGateway": {
    "name": "s3AgentDefaultGateway",
    "oid": "1.3.6.1.4.1.45.1.2.2.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The Agent's administrative default gateway IP address. The current operational default gateway's IP address can be obtained from the ipRoutingTable. This parameter will take effect only after a restart (s3AgentRestart) is issued. This parameter will not survive a reset (s3AgentReset) unless it is written into EEPROM (s3AgentWriteEeprom). This parameter is used only if the agentBootMode is set to use EEPROM."
  },
  "s3AgentBootServerAddr": {
    "name": "s3AgentBootServerAddr",
    "oid": "1.3.6.1.4.1.45.1.2.2.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP address to which the requests for boot files are sent. The protocol used to retrieve the boot files is determined by object s3AgentBootProtocol. This parameter will not take effect until until written into EEPROM (s3AgentWriteEeprom) and a reset (s3AgentReset) is issued. This parameter is used only if the s3AgentBootMode is set to use EEPROM."
  },
  "s3AgentSecDefaultGateway": {
    "name": "s3AgentSecDefaultGateway",
    "oid": "1.3.6.1.4.1.45.1.2.2.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The agent's administrative secondary default gateway IP address. This default gateway's IP address will be used when the primary default gateway (s3AgentDefaultGateway) is determined unreachable. This parameter will not survive a reset (s3AgentReset) unless it is written into EEPROM (s3AgentWriteEeprom)."
  },
  "s3AgentPingDefaultRtrSwitch": {
    "name": "s3AgentPingDefaultRtrSwitch",
    "oid": "1.3.6.1.4.1.45.1.2.2.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "on": 2,
          "off": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Controls whether the agent will periodically send out the icmp echos (pings) to the default router(s). The values are: other(1)...unknown or other on(2)......agent will periodically send out pings to the default router(s). off(3).....agent won't send out the pings to the default router(s)."
  },
  "s3AgentPingDefaultRtrTime": {
    "name": "s3AgentPingDefaultRtrTime",
    "oid": "1.3.6.1.4.1.45.1.2.2.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The time interval that the agent uses to send out the pings periodically to the default router(s) to check if the router(s) are still reachable."
  },
  "s3AgentBootRouter": {
    "name": "s3AgentBootRouter",
    "oid": "1.3.6.1.4.1.45.1.2.2.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The default route IP address used at boot time to download the NMM's agent configuration and image files from the TFTP server. This parameter will not survive a reset (s3AgentReset) unless it is written into EEPROM (s3AgentWriteEeprom)."
  },
  "s3AgentIpxAddr": {
    "name": "s3AgentIpxAddr",
    "oid": "1.3.6.1.4.1.45.1.2.2.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpxAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The current IPX address used by this agent."
  },
  "s3AgentUnAuthIpx": {
    "name": "s3AgentUnAuthIpx",
    "oid": "1.3.6.1.4.1.45.1.2.2.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpxAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object contains the IPX address of the last station that tried to access this agent with an invalid community string. This object is used as a VarBind in an authentication trap PDU. A GET request will return the last value used, and will return an address of zeros if no IPX authentication trap has been sent."
  },
  "s3AgentTrapReceiverTable": {
    "name": "s3AgentTrapReceiverTable",
    "oid": "1.3.6.1.4.1.45.1.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Table containing list of NMS's that are to receive traps generated by this NMM."
  },
  "s3AgentTrapReceiverEntry": {
    "name": "s3AgentTrapReceiverEntry",
    "oid": "1.3.6.1.4.1.45.1.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3AgentTrapRcvrNetAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A destination address and community string to a particular trap server, along with a trap filter and entry aging capability."
  },
  "s3AgentTrapRcvrStatus": {
    "name": "s3AgentTrapRcvrStatus",
    "oid": "1.3.6.1.4.1.45.1.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "valid": 2,
          "invalid": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this object to the value invalid(3) has the effect of invalidating the corresponding entry in the s3AgentTrapReceiverTable. That is, it effectively disassociates the address identified with the entry by removing the entry from the table. On a read the value of valid(2) should be returned if the entry contains a valid record, or invalid(3) should be returned if the entry contains an invalid record."
  },
  "s3AgentTrapRcvrNetAddress": {
    "name": "s3AgentTrapRcvrNetAddress",
    "oid": "1.3.6.1.4.1.45.1.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "IP address for trap server that is to receive the trap."
  },
  "s3AgentTrapRcvrComm": {
    "name": "s3AgentTrapRcvrComm",
    "oid": "1.3.6.1.4.1.45.1.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Community string used for traps sent to this trap receiver."
  },
  "s3AgentTrapRcvrAgeTime": {
    "name": "s3AgentTrapRcvrAgeTime",
    "oid": "1.3.6.1.4.1.45.1.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This is the time interval used to age entries out of the trap receiver table. The default value if not specified will be 0, or infinite, never to be aged out."
  },
  "s3AgentStatus": {
    "name": "s3AgentStatus",
    "oid": "1.3.6.1.4.1.45.1.2.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "offline": 1,
          "online": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This indicates whether the NMM is online(2) and operating, or offline(1) (ie: not connected to the concentrator backplane). ***ACCESS VARIATION - changed access from read-only"
  },
  "s3AgentMdaHwVer": {
    "name": "s3AgentMdaHwVer",
    "oid": "1.3.6.1.4.1.45.1.2.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The network management module's MDA hardware version number (0=Rev. A, 1=Rev. B, etc.)."
  },
  "s3AgentMode": {
    "name": "s3AgentMode",
    "oid": "1.3.6.1.4.1.45.1.2.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "primary": 1,
          "secondary": 2,
          "other": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates whether the NMM is operating in primary(1) or secondary(2) mode. ***ACCESS VARIATION - changed access from read-write"
  },
  "s3AgentReset": {
    "name": "s3AgentReset",
    "oid": "1.3.6.1.4.1.45.1.2.4.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noReset": 1,
          "reset": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Network management module reset status. Writing a reset(2) to this object will reset the NMM and perform a download and restart."
  },
  "s3AgentRestart": {
    "name": "s3AgentRestart",
    "oid": "1.3.6.1.4.1.45.1.2.4.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noRestart": 1,
          "restart": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Network management module restart status. Writing a restart(2) to this object will restart the NMM. This initializes all the counters, re-reads the EEPROM data structure and starts executing from the beginning of the code."
  },
  "s3AgentBootMode": {
    "name": "s3AgentBootMode",
    "oid": "1.3.6.1.4.1.45.1.2.4.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "eeprom": 1,
          "net": 2,
          "otherCase": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The method for obtaining boot parameter information. The possible values are: eeprom(1)......get boot info from eeprom net(2).........get boot info from remote server otherCase(3)...not eeprom or net This parameter will not take effect until written into EEPROM (s3AgentWriteEeprom) and a reset (s3AgentReset) is issued. Note: In previous versions of this MIB the name associated with the value '2' was 'other', which implied the same meaning as it does now. Thus to prevent confusion, the name for value '3' was chosen to be 'otherCase'."
  },
  "s3AgentWriteEeprom": {
    "name": "s3AgentWriteEeprom",
    "oid": "1.3.6.1.4.1.45.1.2.4.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noWriteEeprom": 1,
          "writeEeprom": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Network management module EEPROM write status. Writing a (2) to this object will write the contents of current EEPROM data structure in the EEPROM."
  },
  "s3AgentBaudRate": {
    "name": "s3AgentBaudRate",
    "oid": "1.3.6.1.4.1.45.1.2.4.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Specifies the baud rate in bits per second of either the internal modem or the RS-232 port. This parameter will take effect only after a restart (s3AgentRestart) is issued. This parameter will not survive a reset (s3AgentReset) unless the specific NMM configuration file is updated to reflect the change."
  },
  "s3AgentInitString": {
    "name": "s3AgentInitString",
    "oid": "1.3.6.1.4.1.45.1.2.4.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This is the initialization string used to establish the out-of-band connection. (i.e. could contain the string ATDT,415-960-1100 for an internal or external modem). This is used as a hint for the network manager since this string is not used by the agent to initiate a connection to a management station. This parameter will take effect only after a restart (s3AgentRestart) is issued. This parameter will not survive a reset (s3AgentReset) unless the specific NMM configuration file is updated to reflect the change."
  },
  "s3AgentEepromSize": {
    "name": "s3AgentEepromSize",
    "oid": "1.3.6.1.4.1.45.1.2.4.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The size of the EEPROM of the agent in units of bytes."
  },
  "s3AgentEpromSize": {
    "name": "s3AgentEpromSize",
    "oid": "1.3.6.1.4.1.45.1.2.4.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The size of the EPROM of the agent in units of bytes."
  },
  "s3AgentDramSize": {
    "name": "s3AgentDramSize",
    "oid": "1.3.6.1.4.1.45.1.2.4.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The size of the DRAM of the agent in units of bytes."
  },
  "s3AgentHexDisplay": {
    "name": "s3AgentHexDisplay",
    "oid": "1.3.6.1.4.1.45.1.2.4.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The current 4 ASCII character display of the agent. Agents with no hex display hardware should return a zero length string."
  },
  "s3AgentFlashStatus": {
    "name": "s3AgentFlashStatus",
    "oid": "1.3.6.1.4.1.45.1.2.4.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "ok": 2,
          "fail": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates the operational status of the flash device of the agent. A fail(3) indicates that either the flash device configuration on board is not valid or the flash EEPROMs on the board have failed."
  },
  "s3LocImageValid": {
    "name": "s3LocImageValid",
    "oid": "1.3.6.1.4.1.45.1.2.6.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "localImageValid": 2,
          "localImageInvalid": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates whether the agent has a valid local code image on board. An EPROM checksum failure would cause the agent to return localImageInvalid(3)."
  },
  "s3LocImageMajorVersion": {
    "name": "s3LocImageMajorVersion",
    "oid": "1.3.6.1.4.1.45.1.2.6.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The major software version number of the locally-stored image. This object applies only to agents with valid local image. Other agents should return zero."
  },
  "s3LocImageMinorVersion": {
    "name": "s3LocImageMinorVersion",
    "oid": "1.3.6.1.4.1.45.1.2.6.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The minor software version number of the locally-stored image. This object applies only to agents with valid local image. Other agents should return zero."
  },
  "s3LocImageLoadMode": {
    "name": "s3LocImageLoadMode",
    "oid": "1.3.6.1.4.1.45.1.2.6.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "remoteBoot": 2,
          "localBoot": 3,
          "localAsBackup": 4,
          "remoteNoUpdate": 5,
          "remoteNewUpdate": 6,
          "localAutoUpdate": 7
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This indicates whether the agent should get code from the network, use a local image, or try the network first and then fall back to local image if the network boot fails. The localBoot(3) and localAsBackup(4) values apply only to agents with local load option. Note: on agents that have no local storage, either remoteBoot(2), or remoteNoUpdate(5) may be specified, however the value remoteBoot(2) is prefered due to backwards compatibility "
  },
  "s3LocImageActualSource": {
    "name": "s3LocImageActualSource",
    "oid": "1.3.6.1.4.1.45.1.2.6.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "remoteImage": 2,
          "localImage": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates whether the agent loaded code from the network or used a local image. When the the ImageLoadMode is localAsBackup, this variable indicates whether the network load was successful."
  },
  "s3LocImageMaintVersion": {
    "name": "s3LocImageMaintVersion",
    "oid": "1.3.6.1.4.1.45.1.2.6.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The maintenance software version number of the locally-stored image. This object applies only to agents with valid local image. Other agents should return zero."
  },
  "s3AgentIpxTrapReceiverTable": {
    "name": "s3AgentIpxTrapReceiverTable",
    "oid": "1.3.6.1.4.1.45.1.2.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Table containing list of NMS's that are to receive traps generated by this NMM sent over IPX."
  },
  "s3AgentIpxTrapReceiverEntry": {
    "name": "s3AgentIpxTrapReceiverEntry",
    "oid": "1.3.6.1.4.1.45.1.2.7.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3AgentIpxTrapRcvrNetAddress",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "s3AgentIpxTrapRcvrStatus": {
    "name": "s3AgentIpxTrapRcvrStatus",
    "oid": "1.3.6.1.4.1.45.1.2.7.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "valid": 2,
          "invalid": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Action/status for the row. The values that can be written are: valid(2).....create row invalid(3)...delete row The values that can be read are: other(1).....some unknown case valid(2).....row is valid invalid(3)...row is invalid Setting this object to the value invalid(3) has the effect of invalidating the corresponding entry in the s3AgentIpxTrapReceiverTable. That is, it effectively disassociates the address identified with the entry by removing the entry from the table On a read the value of valid(2) should be returned if the entry contains a valid record, or invalid(3) should be returned if the entry contains an invalid record."
  },
  "s3AgentIpxTrapRcvrNetAddress": {
    "name": "s3AgentIpxTrapRcvrNetAddress",
    "oid": "1.3.6.1.4.1.45.1.2.7.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpxAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "IPX address for trap server that is to receive the trap. The value may only be written when the row is created."
  },
  "s3AgentIpxTrapRcvrComm": {
    "name": "s3AgentIpxTrapRcvrComm",
    "oid": "1.3.6.1.4.1.45.1.2.7.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Community string used for traps sent to this trap receiver."
  },
  "s3AgentIpxTrapRcvrAgeTime": {
    "name": "s3AgentIpxTrapRcvrAgeTime",
    "oid": "1.3.6.1.4.1.45.1.2.7.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This is the time interval used to age entries out of the trap receiver table. The default value if not specified will be 0, or infinite, never to be aged out."
  },
  "s3ChassisType": {
    "name": "s3ChassisType",
    "oid": "1.3.6.1.4.1.45.1.3.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SnpxChassisType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The chassis type."
  },
  "s3ChassisBkplType": {
    "name": "s3ChassisBkplType",
    "oid": "1.3.6.1.4.1.45.1.3.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SnpxBackplaneType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The chassis backplane type."
  },
  "s3ChassisBkplRev": {
    "name": "s3ChassisBkplRev",
    "oid": "1.3.6.1.4.1.45.1.3.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The chassis backplane revision."
  },
  "s3ChassisPsType": {
    "name": "s3ChassisPsType",
    "oid": "1.3.6.1.4.1.45.1.3.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "S3PsType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The chassis power supply type. This value is valid only when the backplane type is not other(1). If the chassis has a redundant backplane, the agent returns redundantCapable(5), even if only one power supply is installed. The objects s3RedPsPrimaryConfig and s3RedPsSecondaryConfig should be consulted to determine the installed power supply type(s) with redundant backplanes."
  },
  "s3ChassisPsStatus": {
    "name": "s3ChassisPsStatus",
    "oid": "1.3.6.1.4.1.45.1.3.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ok": 1,
          "primaryFail": 2,
          "secondaryFail": 3,
          "bothFail": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The chassis power supply status."
  },
  "s3ChassisFanStatus": {
    "name": "s3ChassisFanStatus",
    "oid": "1.3.6.1.4.1.45.1.3.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ok": 1,
          "fail": 2,
          "other": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The status of the chassis cooling fan."
  },
  "s3SlotConfigTable": {
    "name": "s3SlotConfigTable",
    "oid": "1.3.6.1.4.1.45.1.3.1.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The chassis slot configuration table."
  },
  "s3SlotConfigEntry": {
    "name": "s3SlotConfigEntry",
    "oid": "1.3.6.1.4.1.45.1.3.1.7.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3SlotNumber",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "What type of module is in each slot of the chassis."
  },
  "s3SlotNumber": {
    "name": "s3SlotNumber",
    "oid": "1.3.6.1.4.1.45.1.3.1.7.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The 3000 Chassis slot number. Valid entries are 1-12."
  },
  "s3SlotModuleId": {
    "name": "s3SlotModuleId",
    "oid": "1.3.6.1.4.1.45.1.3.1.7.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "ID for the module. Values are specified in SynOptics technical documents."
  },
  "s3SlotModuleType": {
    "name": "s3SlotModuleType",
    "oid": "1.3.6.1.4.1.45.1.3.1.7.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "S3ModuleType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The type of module this entry represents. Values are specified in SynOptics technical documents."
  },
  "s3SlotModuleDescr": {
    "name": "s3SlotModuleDescr",
    "oid": "1.3.6.1.4.1.45.1.3.1.7.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Module description. Values are specified in SynOptics technical documents."
  },
  "s3SlotModuleLed": {
    "name": "s3SlotModuleLed",
    "oid": "1.3.6.1.4.1.45.1.3.1.7.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of the module LEDs. Format is specified in SynOptics technical documents. NOTE: the 291x FDDI workgroup concentrators actually return a string with size of 10."
  },
  "s3SlotModuleMdaId": {
    "name": "s3SlotModuleMdaId",
    "oid": "1.3.6.1.4.1.45.1.3.1.7.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "ID of the medium-dependent part of the board. The value is board dependent. Values are specified in SynOptics technical documents."
  },
  "s3CommonBoardTable": {
    "name": "s3CommonBoardTable",
    "oid": "1.3.6.1.4.1.45.1.3.1.8",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table containing information about the boards currently plugged into the 3000 Chassis. This board table contains an entry for each non-empty slot in the s3SlotConfigTable, EXCEPT for those slots containing Retiming Modules. All of the information in this board table is retrievable using the NMI commands that are common to all boards integrated into the SynOptics Series 3000 Concentrators."
  },
  "s3CommonBoardEntry": {
    "name": "s3CommonBoardEntry",
    "oid": "1.3.6.1.4.1.45.1.3.1.8.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3CommonBoardIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table entry containing information about a single Board currently plugged into the 3000 Chassis. These values can be retrieved using the common board NMI commands."
  },
  "s3CommonBoardIndex": {
    "name": "s3CommonBoardIndex",
    "oid": "1.3.6.1.4.1.45.1.3.1.8.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each board. Its value ranges between 1 and 12. The value for each board must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
  },
  "s3CommonBoardId": {
    "name": "s3CommonBoardId",
    "oid": "1.3.6.1.4.1.45.1.3.1.8.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "m331x": 1,
          "m3302": 2,
          "m332x": 3,
          "m3304ST": 4,
          "m3305": 5,
          "m333x": 6,
          "m3307": 7,
          "m3308": 8,
          "m3301": 9,
          "m3904": 10,
          "m3902": 11,
          "m3910S": 12,
          "m331xS": 14,
          "m3100R": 15,
          "m3502": 16,
          "m3502A": 17,
          "m353x": 18,
          "m3040": 19,
          "m3505": 20,
          "m3505A": 21,
          "m355x": 22,
          "m3040S": 23,
          "m351x": 24,
          "m332xS": 25,
          "m338x": 26,
          "m3328": 27,
          "m3395": 28,
          "m3394": 29,
          "m3522": 30,
          "m3395A": 31,
          "m3800": 32,
          "m3368": 36,
          "m3308A": 38,
          "m2810nmm": 39,
          "m2810hm": 40,
          "m3301ohms75": 41,
          "m3301ohms93": 42,
          "m2912": 43,
          "m2914": 44,
          "m3502B": 45,
          "m3505B": 46,
          "m3307HD": 47,
          "m2702Fhm": 48,
          "m2712Fhm": 49,
          "m2712hm": 50,
          "m2702hm": 51,
          "m2813nmm": 52,
          "m2813hm": 53,
          "m2814hm": 54,
          "m2803hm": 55,
          "m3356": 56,
          "m2814nmm": 57,
          "m2804hm": 58,
          "m2702Chm": 59,
          "m2715Fhm": 60,
          "m2705Fhm": 61,
          "m2705Chm": 62,
          "m3902A": 63,
          "m2912A": 64,
          "m271xnmm": 65,
          "m2715hm": 66,
          "m3910SSD": 67,
          "m3313A": 68,
          "m3314A": 69,
          "m3304A": 70,
          "m3910SA": 71,
          "m2705hm": 72,
          "m3905": 73,
          "m2915": 74,
          "m2715Bhm": 75,
          "m2705Bhm": 76,
          "m2715BFhm": 77,
          "m2712Bhm": 78,
          "m2712BFhm": 79,
          "m2702BChm": 80,
          "m3486": 82,
          "m810m": 88,
          "m3517SA": 101,
          "m3308B": 102,
          "m2813SAnmm": 103,
          "m2814SAnmm": 104,
          "m3313SA": 105,
          "m3314SA": 106,
          "m3174": 107,
          "m3522A": 108,
          "m3513SA": 109,
          "m271xSAnmm": 110,
          "m3299C": 116,
          "m3299U": 117,
          "m3299F": 119,
          "mAlcatelEthConcnmm": 250,
          "mAlcatelEthConchm": 251
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This is the ID of the board, which is 'hard-coded' in the board, and identifies the board's basic functionality. Some boards have the capability to change aspects of their functionality, such as media type, interface types, or power supply wattages, by plugging in different daughter cards. Other boards may identify the type of cable plugged into them. The boards that have these capabilities use different values for the object s3SlotModuleMda to identify the changable portion of the functionality currently used. Boards that do not support these capabilities typically set the object s3SlotModuleMda to 255 or zero. The combination of the value of this object and the s3SlotModuleMda object are then mapped by software to determine the type of module (i.e., s3SlotModuleType). Notes: 1.) The object s3SlotModuleType is marked as deprecated. 2.) Agents do not implement a complete mapping of s3CommonBoardId and s3SlotModuleMda to s3SlotModuleType. The mapping that is performed pertains to the media type of the agent. The possible values for this object are: m331x(1)...................331x Ethernet NMM m3302(2)...................3302 Ethernet STP Host m332x(3)...................332x Ethernet Local Bridge m3304ST(4).................3304 Ethernet FOIRL-ST Host m3305(5)...................3305 Ethernet UTP Host m333x(6)...................333x Ethernet Repeater/Retiming m3307(7)...................3307 Ethernet 50 Pin UTP Host m3308(8)...................3308 10BaseT UTP Host m3301(9)...................3301 10Base2 Thin Net Host m3904(10)..................3904 FDDI Multimode Fiber Host m3902(11)..................3902 FDDI STP Host m3910S(12).................3910S FDDI NMM m331xS(14).................331xS Ethernet NMM m3100R(15).................3100R Power Supply Summing m3502(16)..................3502 Token Ring Passive STP Host m3502A(17).................3502A Token Ring Passive STP/UTP Host m353x(18)..................353x Token Ring RI/RO Repeater m3040(19)..................3040 Network Control Engine (NCE) m3505(20)..................3505 Token Ring Active UTP Host m3505A(21).................3505A Token Ring Active UTP Host m355x(22)..................355x Token Ring FOIRL RI/RO Repeater m3040S(23).................3040S Network Control Engine m351x(24)..................351x Token Ring NMM m332xS(25).................332xS Ethernet High Speed Local Bridge m338x(26)..................338x Ethernet Remote Router m3328(27)..................3328 Ethernet Switching Engine (ESE) m3395(28)..................3395 Terminal Server m3394(29)..................3394 LattisTalk Router/Repeater m3522(30)..................3522 Token Ring Local Bridge m3395A(31).................3395A Terminal Server m3800(32)..................3800 Multimedia Router m3368(36)..................3368 Ethernet LattisSecure Host m3308A(38).................3308A 10BaseT Host m2810nmm(39)...............2810 Ethernet NMM m2810hm(40)................2810 Ethernet Host m3301ohms75(41)............3301-75 Ethernet Thin Net Host (75-ohm) m3301ohms93(42)............3301-93 Ethernet Thin Net Host (93-ohm) m2912(43)..................2912 FDDI STP Concentrator m2914(44)..................2914 FDDI Fiber Concentrator m3502B(45).................3502B Token Ring Passive STP/UTP Host m3505B(46).................3505B Token Ring Active STP/UTP Host m3307HD(47)................3307HD Ethernet 100 Pin UTP Host m2702Fhm(48)...............2702F Token Ring Passive Host m2712Fhm(49)...............2712F Token Ring Passive Host m2712hm(50)................2712 Token Ring Passive Host m2702hm(51)................2702 Token Ring Passive Host m2813nmm(52)...............2813 Ethernet NMM m2813hm(53)................2813 Ethernet Host m2814hm(54)................2814 Ethernet Host m2803hm(55)................2803 Ethernet Host m3356(56)..................3356 Ethernet Remote Bridge m2814nmm(57)...............2814 Ethernet NMM m2804hm(58)................2804 Ethernet Host m2702Chm(59)...............2702C Token Ring Passive Host m2715Fhm(60)...............2715F Token Ring Active Host m2705Fhm(61)...............2705F Token Ring Active Host m2705Chm(62)...............2705C Token Ring Active Host m3902A(63).................3902A FDDI STP Host m2912A(64).................2912A FDDI STP Concentrator m271xnmm(65)...............271x Token Ring NMM m2715hm(66)................2715 Token Ring Active Host m3910SSD(67)...............3910S-SD FDDI NMM m3313A(68).................3313A Ethernet NMM m3314A(69).................3314A Ethernet NMM m3304A(70).................3304A Ethernet 10BaseF Host m3910SA(71)................3910SA FDDI NMM m2705hm(72)................2705 Token Ring Active Host m3905(73)..................3905 FDDI UTP Host m2915(74)..................2915 FDDI UTP Concentrator m2715Bhm(75)...............2715B Token Ring Active Host m2705Bhm(76)...............2505B Token Ring Active Host m2715BFhm(77)..............2715B-F Token Ring Active Host m2712Bhm(78)...............2712B Token Ring Passive Host m2712BFhm(79)..............2712B-F Token Ring Passive Host m2702BChm(80)..............2702B-C Token Ring Passive Host m3486(82)..................3486 LattisEngine/486 m810m(88)..................810M Ethernet Concentrator m3517SA(101)...............3517SA Token Ring NMM m3308B(102)................3308B 10BaseT Host m2813SAnmm(103)............2813SA Ethernet NMM m2814SAnmm(104)............2814SA Ethernet NMM m3313SA(105)...............3313SA Ethernet NMM m3314SA(106)...............3314SA Ethernet NMM m3174(107).................3174 Workstation Controller m3522A(108)................3522A Token Ring Local Bridge m3513SA(109)...............3513SA Token Ring NMM m271xSAnmm(110)............271xSA Token Ring NMM m3299C(116)................3299-C Terminal Multiplexor Adapter m3299U(117)................3299-U TTP Terminal Multiplexor Adapter m3299F(119)................3299-F Fiber Optic Terminal Adapter mAlcatelEthConcnmm(250)....Alcatel Ethernet NMM mAlcatelEthConchm(251).....Alcatel Ethernet Host"
  },
  "s3CommonBoardHwVer": {
    "name": "s3CommonBoardHwVer",
    "oid": "1.3.6.1.4.1.45.1.3.1.8.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hardware revision of the board. 0=Rev. A, 1=Rev. B, etc."
  },
  "s3CommonBoardStatus": {
    "name": "s3CommonBoardStatus",
    "oid": "1.3.6.1.4.1.45.1.3.1.8.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ok": 1,
          "fail": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates the operational status of the board."
  },
  "s3CommonBoardReset": {
    "name": "s3CommonBoardReset",
    "oid": "1.3.6.1.4.1.45.1.3.1.8.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noReset": 1,
          "reset": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This indicates the reset state of the board. Writing with the value reset (2) will reset the board."
  },
  "s3CommonBoardPartStatus": {
    "name": "s3CommonBoardPartStatus",
    "oid": "1.3.6.1.4.1.45.1.3.1.8.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "partition": 2,
          "timedPartition": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Tells whether the board is partitioned or enabled. Writing with the value partition(2) will partition the board indefinitely and writing with the value enabled(1) will enable the board. If a timed partition is desired, then this object must be written with timedPartition(3) and in the same PDU a partition duration must be supplied in s3CommonBoardPartTime. Timed partitions will not survive across a reset. In this case the port will go to the partition(2) state. Boards cannot be partitioned in the 2810 concentrator and other workgroup concentrators. These agents will implement this object as read-only."
  },
  "s3CommonBoardNmCntlStatus": {
    "name": "s3CommonBoardNmCntlStatus",
    "oid": "1.3.6.1.4.1.45.1.3.1.8.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notNmControl": 1,
          "nmControl": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Tells whether the board is under network management control. The value nmControl(2) indicates that the board or one or more ports are being controlled by network management. This means that the board or one or more ports are partitioned via a network manager."
  },
  "s3CommonBoardPsStatus": {
    "name": "s3CommonBoardPsStatus",
    "oid": "1.3.6.1.4.1.45.1.3.1.8.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ok": 1,
          "fail": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates the operational status of the board power supply. A fail(2) indicates that one of the power supplies on the board has failed."
  },
  "s3CommonBoardPartTime": {
    "name": "s3CommonBoardPartTime",
    "oid": "1.3.6.1.4.1.45.1.3.1.8.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When partitioning the board for a specified time, s3CommonBoardPartStatus must be set with timedPartition(3) and this object must be supplied with the duration value. If a PDU sets s3CommonBoardPartStatus and not this object, the board will not be partitioned. This value is decremented while the board is partitioned until the value reaches zero at which time the board is enabled."
  },
  "s3SlotConfigOctetString": {
    "name": "s3SlotConfigOctetString",
    "oid": "1.3.6.1.4.1.45.1.3.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 12,
            "max": 144
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Packed octet string for the slot configuration table. Format is specified in SynOptics technical documents. NOTE: the 291x FDDI workgroup concentrators actually return a string with size a multiple of 14."
  },
  "s3RedPsPlus5vCurrent": {
    "name": "s3RedPsPlus5vCurrent",
    "oid": "1.3.6.1.4.1.45.1.3.1.10.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This gauge is measured in amperes."
  },
  "s3RedPsPlus12vCurrent": {
    "name": "s3RedPsPlus12vCurrent",
    "oid": "1.3.6.1.4.1.45.1.3.1.10.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This gauge is measured in amperes."
  },
  "s3RedPsAmbientTempStatus": {
    "name": "s3RedPsAmbientTempStatus",
    "oid": "1.3.6.1.4.1.45.1.3.1.10.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "normalTemperature": 2,
          "aboveNormalTemp": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This status indicates whether the ambient temperature is normal, i.e., below 40 degree C."
  },
  "s3RedPsAmbientTemperature": {
    "name": "s3RedPsAmbientTemperature",
    "oid": "1.3.6.1.4.1.45.1.3.1.10.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This gauge is measured in Celsius."
  },
  "s3RedPsPrimaryConfig": {
    "name": "s3RedPsPrimaryConfig",
    "oid": "1.3.6.1.4.1.45.1.3.1.10.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "S3PsType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates the primary power supply type (PS 1). Note that value redundantCapable(5) should not be returned for this object."
  },
  "s3RedPsSecondaryConfig": {
    "name": "s3RedPsSecondaryConfig",
    "oid": "1.3.6.1.4.1.45.1.3.1.10.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "S3PsType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates the secondary power supply type (PS 2). Note that value redundantCapable(5) should not be returned for this object."
  },
  "s3RedPsDiodeStatus": {
    "name": "s3RedPsDiodeStatus",
    "oid": "1.3.6.1.4.1.45.1.3.1.10.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "bothOk": 2,
          "primaryFail": 3,
          "secondaryFail": 4,
          "bothFail": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This gives the status of the summing diode on the 3100R associated with the indicated power supply."
  },
  "s3RedPsPowerAlarm": {
    "name": "s3RedPsPowerAlarm",
    "oid": "1.3.6.1.4.1.45.1.3.1.10.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "bothOk": 2,
          "primaryFail": 3,
          "secondaryFail": 4,
          "bothFail": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This tells whether the indicated power supply is sensing voltage on the backplane."
  },
  "s3ChassisBkPlEthChanDiv": {
    "name": "s3ChassisBkPlEthChanDiv",
    "oid": "1.3.6.1.4.1.45.1.3.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A value that describes the divisions of the segmentable ethernet channel. For those devices that do not implement a backplane with this feature, they still need to implement this object and return a value (i.e., zero) to indicate that no divisions are enabled. The value is a sum (i.e., integer bit string). This value initially takes the value of zero, then for each division that is enabled on the channel, 2 raised to a power is added to the sum. The powers are according to the following table: Division between Power Slots 4 and 5 0 Slots 6 and 7 1 Slots 8 and 9 2 For example, a channel with no divisions enabled (i.e., not segmented) would have a value of 0. A channel with divisions between slots 6 and 7, and slots 8 and 9 enabled (i.e., having three segments) would have a value of 6 (2**1 + 2**2)."
  },
  "s3ChassisEnetChannelAType": {
    "name": "s3ChassisEnetChannelAType",
    "oid": "1.3.6.1.4.1.45.1.3.1.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "aSegmentable": 2,
          "aNotSegmentable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The agent will return aSegmentable(2) for the 3000N, 3000NT, 3000S, 3000SR, and any other backplanes in which Ethernet channel A can be divided into multiple segments. The value aNotSegmentable(3) indicates that the Ethernet backplane channel A cannot be segmented. For Token Ring or FDDI workgroup concentrators, or other devices in which there is no Ethernet channel, the agent will return other(1)."
  },
  "s3EnetConcRetimingStatus": {
    "name": "s3EnetConcRetimingStatus",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 1,
          "on": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Does this concentrator have retiming turned on. Writing a 1 will turn off retiming and writing a 2 will turn on retiming. This will change the active state of retiming but will change the value in EEPROM only when agentWriteEeprom is set.The factory default of this state is on. Retiming cannot be disabled in the 2810 concentrator. The 2810 agent will implement this object as read-only."
  },
  "s3EnetConcFrmsRxOk": {
    "name": "s3EnetConcFrmsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames that are successfully received by the concentrator. This does not include frames received with a frame-too-long, runt, FCS, or alignment errors. This counter includes broadcast and multicast frames that are received."
  },
  "s3EnetConcOctetsRxOk": {
    "name": "s3EnetConcOctetsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Contains a count of data and padding octets in frames that are successfully received by the concentrator. This does not include frames received with a frame-too-long, runt, FCS, or alignment errors. This counter includes octets in broadcast and multicast frames that are received. This counter does not include the octets in the CRC field. The octets in the address and length/type fields are counted."
  },
  "s3EnetConcMcastFrmsRxOk": {
    "name": "s3EnetConcMcastFrmsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames that are successfully received by the concentrator and are directed to an active non-broadcast group address. This does not include frames received with a frame-too-long, runt, FCS, or alignment errors. Only frames that are for a multicast address that this interface is receiving are counted. Broadcast packets are not included."
  },
  "s3EnetConcBcastFrmsRxOk": {
    "name": "s3EnetConcBcastFrmsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames that are successfully received by the concentrator and are directed to the broadcast group address. This does not include frames received with a frame-too-long, runt, FCS, or alignment errors. Multicast packets are not included."
  },
  "s3EnetConcColls": {
    "name": "s3EnetConcColls",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of the collisions at the concentrator level. For NMM+ this is a true counter. For other NMMs this is a summation of all the port level collision 'flags' for all ports."
  },
  "s3EnetConcTooLongErrors": {
    "name": "s3EnetConcTooLongErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames that are received by the concentrator and exceed the maximum permitted frame size. This counter is incremented when the frameTooLong error is detected."
  },
  "s3EnetConcRuntErrors": {
    "name": "s3EnetConcRuntErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames received by the concentrator that are less than the minimum permitted frame size and have a good FCS."
  },
  "s3EnetConcFragErrors": {
    "name": "s3EnetConcFragErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames received by the concentrator that are less than the minimum permitted frame size and have a bad FCS or alignment error."
  },
  "s3EnetConcAlignErrors": {
    "name": "s3EnetConcAlignErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames received by the concentrator that are not an integral number of octets in length and do not pass the FCS check. This counter is incremented when the alignment Error status is detected."
  },
  "s3EnetConcFcsErrors": {
    "name": "s3EnetConcFcsErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames received by the concentrator that are an integral number of octets in length that do not pass the FCS check. This counter is incremented when the frame Check Error status is detected."
  },
  "s3EnetConcLateCollErrors": {
    "name": "s3EnetConcLateCollErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a total concentrator count of the late collisions. For NMM+ this is a true counter. For other NMMs this is a summation of all the port level late collision 'flags' for all ports."
  },
  "s3EnetConcSecureStatus": {
    "name": "s3EnetConcSecureStatus",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "concSecureOn": 2,
          "portCheckOn": 3,
          "slotCheckOn": 4,
          "concSecureOff": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This s3EnetConcSecureStatus object indicates whether the security features (both allowed nodes and LattisSecure) for the concentrator are active or inactive. If security is active, this object also indicates whether the allowed nodes feature is controlled at the concentrator, board, or port level. LattisSecure features are always controlled at the port level. (See the Authorized Nodes tables for more information about how the allowed nodes and LattisSecure receive security features are configured.) If this object is set to concSecureOn(2), then the allowed nodes feature is controlled at the concentrator level and activated for every non-LattisSecure Ethernet port in the concentrator. If an authorized node violation occurs on any port, the action specified in s3EnetConcAuthAction is taken. If this object is set to portCheckOn(3), then allowed nodes is controlled at the port level by the s3EnetPortSecureStatus object for that port. The port's s3EnetPortAuthAction determines the action taken when authorized nodes violations occur on that port. If this object is set to slotCheckOn(4), then allowed nodes is controlled at the board level by the s3EnetBoardSecureStatus object for that board. The board's s3EnetBoardAuthAction determines the action taken when authorized nodes violations occur on that board's ports. If this object is set to concentratorOff(5), then all security features, including LattisSecure, are deactivated for the entire concentrator. No matter what the status of this object, the board and port level SecureStatus and AuthAction are not lost even if they are not currently being used. Thus, the user can change a port's status even if this object is slotCheckOn(4). If this object is then changed to portCheckOn(3), then the change will take effect. The agent must support download of this object in the CFG file. In release 4.0, this object was called s3EnetConcAuthStatus."
  },
  "s3EnetConcAuthAction": {
    "name": "s3EnetConcAuthAction",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "noAction": 2,
          "sendTrap": 3,
          "partition": 4,
          "sendTrapPartition": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If s3EnetConcSecureStatus is concSecureOn(2) and a violation occurs, then the action specified by this object will take place. On a partition, only the port that the violation occurs on will be partitioned. This object does not apply to LattisSecure ports. The agent must support download of this object in the CFG file."
  },
  "s3EnetConcSecurityLock": {
    "name": "s3EnetConcSecurityLock",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "locked": 2,
          "notLocked": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "If s3EnetConcSecurityLock is locked(2), the agent will refuse all requests to modify the 'security configuration' (defined below) by returning a BadValue return value. If s3EnetConcSecurityLock is notLocked(3), requests to modify security configuration will be handled in the usual manner. SetRequests for objects not included in the security configuration are not affected by the state of this object. Objects that are part of the security configuration are s3EnetConcAuthStatus, s3EnetConcAuthAction, s3EnetBoardAuthStatus, s3EnetBoardAuthAction, s3EnetPortAuthStatus, s3EnetPortAuthAction, s3EnetPortAddrLearnMode, s3EnetPortTxSecurity, and all of the objects in the s3EnetAuthNodesTable."
  },
  "s3EnetConcEnetChan": {
    "name": "s3EnetConcEnetChan",
    "oid": "1.3.6.1.4.1.45.1.3.2.1.16",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "enetA": 2,
          "enetB": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the channel to which this NMM is currently monitoring."
  },
  "s3EnetBoardTable": {
    "name": "s3EnetBoardTable",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of board-related objects. The number of entries is given by the number of Ethernet host module and network management module boards that are contained in same backplane Ethernet segment as the reporting NMM."
  },
  "s3EnetBoardEntry": {
    "name": "s3EnetBoardEntry",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetBoardIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table containing objects about Ethernet boards which are currently plugged into the 3000 chassis."
  },
  "s3EnetBoardIndex": {
    "name": "s3EnetBoardIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each board. Its value ranges between 1 and 12. The value for each board must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
  },
  "s3EnetBoardFrmsRxOk": {
    "name": "s3EnetBoardFrmsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames that are successfully received by the board. This does not include frames received with a frame-too-long, runt, FCS, or alignment errors. This counter includes broadcast and multicast frames that are received."
  },
  "s3EnetBoardOctetsRxOk": {
    "name": "s3EnetBoardOctetsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Contains a count of data and padding octets in frames that are successfully received by the board. This does not include frames received with a frame-too-long, runt, FCS, or alignment errors. This counter includes octets in broadcast and multicast frames that are received. This counter does not include the octets in the CRC field. The octets in the address and length/type fields are counted."
  },
  "s3EnetBoardMcastFrmsRxOk": {
    "name": "s3EnetBoardMcastFrmsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames that are successfully received by the board and are directed to an active non-broadcast group address. This does not include frames received with a frame-too-long, runt, FCS, or alignment errors. Only frames that are for a multicast address that this interface is receiving are counted. Broadcast packets are not included."
  },
  "s3EnetBoardBcastFrmsRxOk": {
    "name": "s3EnetBoardBcastFrmsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames that are successfully received by the board and are directed to the broadcast group address. This does not include frames received with a frame-too-long, runt, FCS, or alignment errors. Multicast packets are not included."
  },
  "s3EnetBoardColls": {
    "name": "s3EnetBoardColls",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a board level count of collisions. For NMM+ this is a true counter. For other NMMs this is a summation of all the port level collision 'flags' for this board."
  },
  "s3EnetBoardTooLongErrors": {
    "name": "s3EnetBoardTooLongErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames that are received by the board and exceed the maximum permitted frame size. This counter is incremented when the frameTooLong error is detected."
  },
  "s3EnetBoardRuntErrors": {
    "name": "s3EnetBoardRuntErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames received by the board that are less than the minimum permitted frame size and have a good FCS."
  },
  "s3EnetBoardAlignErrors": {
    "name": "s3EnetBoardAlignErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames received by the board that are not an integral number of octets in length and do not pass the FCS check. This counter is incremented when the alignmentError status is detected."
  },
  "s3EnetBoardFcsErrors": {
    "name": "s3EnetBoardFcsErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames received by the board that are an integral number of octets in length that do not pass the FCS check. This counter is incremented when the frameCheckError status is detected."
  },
  "s3EnetBoardLateCollErrors": {
    "name": "s3EnetBoardLateCollErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of the board level late collisions. For NMM+ this is a true counter. For other NMMs this is a summation of all the port level late collision 'flags' for this board."
  },
  "s3EnetBoardAuthStatus": {
    "name": "s3EnetBoardAuthStatus",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "on": 2,
          "off": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object is only used if s3EnetConcSecureStatus is set to slotCheckOn(4). In this case, turning this object on(2) means that any node that is heard on this board which is not allowed on this board (i.e., not in AuthNode table with the slotIndex equal to this board or 0 for all boards) will cause the action specified in s3EnetBoardAuthAction to take place. If s3EnetConcSecureStatus is set to slotCheckOn(4) but this object is set to off(3), then the authorized nodes feature for this board is deactivated. If s3EnetConcSecureStatus is not set to slotCheckOn(4), then this object will not be used but will maintain its settings unless explicitly changed. This object does not affect the configuration or functioning of security features on LattisSecure Host Modules."
  },
  "s3EnetBoardAuthAction": {
    "name": "s3EnetBoardAuthAction",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "noAction": 2,
          "sendTrap": 3,
          "partition": 4,
          "sendTrapPartition": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If s3EnetConcSecureStatus is slotCheckOn(4) and s3EnetBoardAuthStatus is on(2) and an authorized nodes violation occurs on the board, then the action specified by this object will take place. On a partition, only the port that the violation occurs on will be partitioned. This object does not apply to LattisSecure ports."
  },
  "s3EnetBoardUpStamp": {
    "name": "s3EnetBoardUpStamp",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time ( in hundredths of a second) that the board was first seen as a member of this NMM's segment."
  },
  "s3EnetLocBridgeSlotTable": {
    "name": "s3EnetLocBridgeSlotTable",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of Local Bridge Board entries. The number of entries is determined by the Concentrator Slot Configuration Table. Only those entries that are Ethernet local bridges will have entries in this list."
  },
  "s3EnetLocBridgeEntry": {
    "name": "s3EnetLocBridgeEntry",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetLocBridgeIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table containing objects about Boards which are local bridges that are currently plugged into the 3000 chassis."
  },
  "s3EnetLocBridgeIndex": {
    "name": "s3EnetLocBridgeIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each board. Its value ranges between 1 and 12. The value for each board must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
  },
  "s3EnetLocBridgeDescr": {
    "name": "s3EnetLocBridgeDescr",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Description of the local bridge board."
  },
  "s3EnetLocBridgePortCount": {
    "name": "s3EnetLocBridgePortCount",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of ports that are on the local bridge board."
  },
  "s3EnetLocBridgeDiagSts": {
    "name": "s3EnetLocBridgeDiagSts",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Latest Diagnostic LED Status that has been recorded."
  },
  "s3EnetLocBridgeBootSts": {
    "name": "s3EnetLocBridgeBootSts",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "reqstToBoot": 2,
          "notReqstToBoot": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The current status of the board as it relates to rebooting."
  },
  "s3EnetLocBridgeStandbySts": {
    "name": "s3EnetLocBridgeStandbySts",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "standby": 2,
          "notStandby": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This status says whether the local bridge is active or in standby mode."
  },
  "s3EnetLocBridgePortTable": {
    "name": "s3EnetLocBridgePortTable",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of Port entries that are part of a local bridge. The number of entries is determined by knowing the number of local bridge boards that are installed by looking at s3ChassisSlotConfigTable and by knowing how many ports are on a local bridge board by looking at s3EnetLocBridgePortCount."
  },
  "s3EnetLocBridgePortEntry": {
    "name": "s3EnetLocBridgePortEntry",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetLocBridgePortSlotIndex",
        "implied": 0
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetLocBridgePortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table containing objects about the ports of the local bridges that are currently plugged into the 3000 chassis."
  },
  "s3EnetLocBridgePortSlotIndex": {
    "name": "s3EnetLocBridgePortSlotIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each board. Its value ranges between 1 and 12. The value for each board must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
  },
  "s3EnetLocBridgePortIndex": {
    "name": "s3EnetLocBridgePortIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each port. Its value ranges between 1 and 12. The value for each port must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
  },
  "s3EnetLocBridgePortMdaId": {
    "name": "s3EnetLocBridgePortMdaId",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Medium dependent ID for the port. See s3SlotModuleMdaId in the SynOptics Common MIB."
  },
  "s3EnetLocBridgePortIf": {
    "name": "s3EnetLocBridgePortIf",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "etherEther": 2,
          "etherTokenRing": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Bridge interface types."
  },
  "s3EnetLocBridgePortDescr": {
    "name": "s3EnetLocBridgePortDescr",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A text description of the port."
  },
  "s3EnetLocBridgePortOpSts": {
    "name": "s3EnetLocBridgePortOpSts",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.2.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "standby": 2,
          "notStandby": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Operating status of the port."
  },
  "s3EnetRemBridgeSlotTable": {
    "name": "s3EnetRemBridgeSlotTable",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of Remote Bridge Board entries. The number of entries is determined by the Concentrator Slot Configuration Table. Only those entries that are Ethernet remote bridges will have entries in this list."
  },
  "s3EnetRemBridgeEntry": {
    "name": "s3EnetRemBridgeEntry",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRemBridgeIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table containing objects about Boards which are remote bridges that are currently plugged into the 3000 chassis."
  },
  "s3EnetRemBridgeIndex": {
    "name": "s3EnetRemBridgeIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each board. Its value ranges between 1 and 12. The value for each board must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
  },
  "s3EnetRemBridgeDescr": {
    "name": "s3EnetRemBridgeDescr",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Description of the board."
  },
  "s3EnetRemBridgePortCount": {
    "name": "s3EnetRemBridgePortCount",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of ports that are on the board."
  },
  "s3EnetRemBridgeDiagSts": {
    "name": "s3EnetRemBridgeDiagSts",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Latest Diagnostic LED Status that has been recorded."
  },
  "s3EnetRemBridgeBootSts": {
    "name": "s3EnetRemBridgeBootSts",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "reqstToBoot": 2,
          "notReqstToBoot": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The current status of the board as it relates to rebooting."
  },
  "s3EnetRemBridgeStandbySts": {
    "name": "s3EnetRemBridgeStandbySts",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "standby": 2,
          "notStandby": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This status says whether the remote bridge is active or in standby mode."
  },
  "s3EnetRemBridgePortTable": {
    "name": "s3EnetRemBridgePortTable",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of Port entries that are part of a remote bridge. The number of entries is determined by knowing the number of remote bridge boards that are installed by looking at s3ChassisSlotConfigTable and by knowing how many ports are on a remote bridge board by looking at s3EnetRemBridgePortCount."
  },
  "s3EnetRemBridgePortEntry": {
    "name": "s3EnetRemBridgePortEntry",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRemBridgePortSlotIndex",
        "implied": 0
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRemBridgePortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table containing objects about the ports of the remote bridges that are currently plugged into the 3000 chassis."
  },
  "s3EnetRemBridgePortSlotIndex": {
    "name": "s3EnetRemBridgePortSlotIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each board. Its value ranges between 1 and 12. The value for each board must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
  },
  "s3EnetRemBridgePortIndex": {
    "name": "s3EnetRemBridgePortIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each port. Its value ranges between 1 and 12. The value for each port must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
  },
  "s3EnetRemBridgePortMdaId": {
    "name": "s3EnetRemBridgePortMdaId",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "ethernet": 2,
          "x21Barrier": 3,
          "x21Unbarrier": 4,
          "rs232": 5,
          "rs449": 6,
          "v35": 7,
          "g703": 8,
          "t1": 9
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Medium dependent ID for the port."
  },
  "s3EnetRemBridgePortDescr": {
    "name": "s3EnetRemBridgePortDescr",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A text description of the port."
  },
  "s3EnetRemBridgePortOpSts": {
    "name": "s3EnetRemBridgePortOpSts",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "standby": 2,
          "operational": 3,
          "noLink": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Operating status of the port."
  },
  "s3EnetRemBridgePortRdySnd": {
    "name": "s3EnetRemBridgePortRdySnd",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "rdySnd": 2,
          "notRdySnd": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Ready to send status of the port."
  },
  "s3EnetRemBridgePortClrSnd": {
    "name": "s3EnetRemBridgePortClrSnd",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "clrSnd": 2,
          "notClrSnd": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Clear to send status of the port."
  },
  "s3EnetRemBridgePortCarDt": {
    "name": "s3EnetRemBridgePortCarDt",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.3.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "carDt": 2,
          "noCarDt": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Carrier detect status of the port."
  },
  "s3EnetRouterSlotTable": {
    "name": "s3EnetRouterSlotTable",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.4.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of Router Board entries. The number of entries is determined by the Concentrator Slot Configuration Table. Only those entries that are Ethernet routers will have entries in this list."
  },
  "s3EnetRouterEntry": {
    "name": "s3EnetRouterEntry",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.4.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRouterIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table containing objects about Boards which are routers that are currently plugged into the 3000 chassis."
  },
  "s3EnetRouterIndex": {
    "name": "s3EnetRouterIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.4.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each board. Its value ranges between 1 and 12. The value for each board must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
  },
  "s3EnetRouterDescr": {
    "name": "s3EnetRouterDescr",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.4.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Description of the router board."
  },
  "s3EnetRouterDiagSts": {
    "name": "s3EnetRouterDiagSts",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.4.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Latest Diagnostic LED Status that has been recorded."
  },
  "s3EnetRouterStandbySts": {
    "name": "s3EnetRouterStandbySts",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.4.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "standby": 2,
          "notStandby": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This status says whether the router is active or in standby mode."
  },
  "s3EnetCommonBoardTable": {
    "name": "s3EnetCommonBoardTable",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Information maintained for each Ethernet board. The information can be retrieved for any Ethernet board, even if the board is not on the same backplane Ethernet segment as this NMM. The instance is the slot number of the concentrator that the board occupies."
  },
  "s3EnetCommonBoardEntry": {
    "name": "s3EnetCommonBoardEntry",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetCommonBoardIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "There is one entry per Ethernet board in this table."
  },
  "s3EnetCommonBoardIndex": {
    "name": "s3EnetCommonBoardIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each board. Its value ranges between 1 and 12. The value for each board must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
  },
  "s3EnetCommonBoardEnetAB": {
    "name": "s3EnetCommonBoardEnetAB",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "enetA": 2,
          "enetB": 3,
          "enetAandEnetB": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The channel to which the board is connected. The primary use of this object is for providing realtime switching of boards between channel A and channel B. It is also returned in the enetChannelChange trap, in which case it indicates a board is switched from one channel to the other. The write capability of this object can only apply to those modules with channel switching function. Any attempt to write this object for a non-switchable board, the agent will return badValue."
  },
  "s3EnetCommonBoardChanSwitch": {
    "name": "s3EnetCommonBoardChanSwitch",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "switchCapable": 2,
          "notSwitchCapable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The agent will return switchCapable(2) for any Ethernet host board which can be switched between Ethernet channels. The value notSwitchCapable(3) indicates that the Ethernet board can not be switched to another channel."
  },
  "s3EnetCommonBoardRedund": {
    "name": "s3EnetCommonBoardRedund",
    "oid": "1.3.6.1.4.1.45.1.3.2.2.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "redundCapable": 2,
          "notRedundCapable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The agent will return redundCapable(2) for any Ethernet host board which can provide hardware and/or software controlled redundancy on the port level. The value notRedundCapable(3) indicates that the Ethernet board can not support port redundancy."
  },
  "s3EnetPortTable": {
    "name": "s3EnetPortTable",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of port entries. The number of entries is given by learning the type of board from the information in the s3ChassisSlotConfigTable."
  },
  "s3EnetPortEntry": {
    "name": "s3EnetPortEntry",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetPortBoardIndex",
        "implied": 0
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table containing objects about the Ports of each board plugged into the 3000 chassis which are on the same backplane Ethernet segment as the reporting NMM."
  },
  "s3EnetPortBoardIndex": {
    "name": "s3EnetPortBoardIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each board. Its value ranges between 1 and 12. The value for each board must remain constant at least from one reinitialization of the entity's network management system to the next reinitialization."
  },
  "s3EnetPortIndex": {
    "name": "s3EnetPortIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each port. Its value is dependent on the board type. The value for each port must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
  },
  "s3EnetPortLinkStatus": {
    "name": "s3EnetPortLinkStatus",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 1,
          "on": 2,
          "other": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "Tells whether the port is receiving link status."
  },
  "s3EnetPortPartStatus": {
    "name": "s3EnetPortPartStatus",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "partition": 2,
          "autoPartition": 3,
          "timedPartition": 4,
          "latSecPartition": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "This indicates the operational status of the Port. Writing a partition(2) will partition the port indefinitely and enabled(1) will enable the port. If a timed partition is desired, then writing timedPartition(4) to this object at the same time that a time value is supplied in s3EnetPortPartTime is required. Timed partitions will not survive across a reset. In this case the port will go to the partition(2) state. The value latSecPartition(5) is returned when the port has been automatically partitioned by the LattisSecure Host Module because of a security violation. The value autoPartition(3) is returned when the port has been automatically partitioned by the repeater using the 802.3 repeater auto-partition function. The agent will not allow this object to be set to autoPartition(3) or latSecPartition(5) using an SNMP request."
  },
  "s3EnetPortJabberStatus": {
    "name": "s3EnetPortJabberStatus",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ok": 1,
          "jabbering": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Tells whether the DTE connected to the Port is jabbering or not."
  },
  "s3EnetPortFrmsRxOk": {
    "name": "s3EnetPortFrmsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames that are successfully received by the port. This does not include frames received with a frame-too-long, runt, FCS, or alignment errors. This counter includes broadcast and multicast frames that are received."
  },
  "s3EnetPortOctetsRxOk": {
    "name": "s3EnetPortOctetsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Contains a count of data and padding octets in frames that are successfully received by the port. This does not include frames received with a frame-too-long, runt, FCS, or alignment errors. This counter includes octets in broadcast and multicast frames that are received. This counter does not include the octets in the CRC field. The octets in the address and length/type fields are counted."
  },
  "s3EnetPortMcastFrmsRxOk": {
    "name": "s3EnetPortMcastFrmsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames that are successfully received by the port and are directed to an active non-broadcast group address. This does not include frames received with a frame-too-long, runt, FCS, or alignment errors. Only frames that are for a multicast address that this interface is receiving are counted. Broadcast packets are not included."
  },
  "s3EnetPortBcastFrmsRxOk": {
    "name": "s3EnetPortBcastFrmsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames that are successfully received by the port and are directed to the broadcast group address. This does not include frames received with a frame-too-long, runt, FCS, or alignment errors. Multicast packets are not included."
  },
  "s3EnetPortColls": {
    "name": "s3EnetPortColls",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of collisions. For NMM+ this is a true counter. For other NMMs this is a count of the collision flags."
  },
  "s3EnetPortTooLongErrors": {
    "name": "s3EnetPortTooLongErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames that are received by the port and exceed the maximum permitted frame size. This counter is incremented when the frameTooLong error is detected."
  },
  "s3EnetPortRuntErrors": {
    "name": "s3EnetPortRuntErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames received by the port that are less than the minimum permitted frame size and have a good FCS."
  },
  "s3EnetPortAlignErrors": {
    "name": "s3EnetPortAlignErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames received by the port that are not an integral number of octets in length and do not pass the FCS check. This counter is incremented when the alignmentError status is detected."
  },
  "s3EnetPortFcsErrors": {
    "name": "s3EnetPortFcsErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of frames received the port that are an integral number of octets in length that do not pass the FCS check. This counter is incremented when the frameCheckError status is detected."
  },
  "s3EnetPortLateCollErrors": {
    "name": "s3EnetPortLateCollErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of late collisions. For NMM+ this is a true counter. For other NMMs this is a count of the late collision flags."
  },
  "s3EnetPortAuthStatus": {
    "name": "s3EnetPortAuthStatus",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "on": 2,
          "off": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object is only used if s3EnetConcSecureStatus is set to portCheckOn(3) or if the port is on a LattisSecure Host Module. In this case, turning this object on(2) means that any node that heard on this port which is not allowed on this port will cause the action specified in s3EnetPortAuthAction to take place. This object does not affect the LattisSecure transmit security feature for the port. It is incompatible with LattisSecure continuous learning mode. If the value of s3EnetPortAddrLearnMode for a LattisSecure port is continuousLearn(3), turning this object to on(2) for that port will not have any affect. If s3EnetConcSecureStatus is set to portCheckOn(3) but this object is set to off(3), then all authorized nodes or LattisSecure receive security features for this port are deactivated. If s3EnetConcSecureStatus is not set to portCheckOn(3), then this object will not be used for allowed nodes, but will be used for LattisSecure."
  },
  "s3EnetPortAuthAction": {
    "name": "s3EnetPortAuthAction",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "noAction": 2,
          "sendTrap": 3,
          "partition": 4,
          "sendTrapPartition": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If s3EnetConcSecureStatus is portCheckOn(3) or this port is on a LattisSecure Host Module, and s3EnetPortAuthStatus is on(2) and an authorized nodes violation occurs on this port, then the action specified by this object will take place on this port. If the port is a LattisSecure port, the authorized nodes security will be implemented by the LattisSecure Host Module."
  },
  "s3EnetPortPartTime": {
    "name": "s3EnetPortPartTime",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "When partitioning the port for a specified time, s3EnetPortPartStatus must be set with timedpartition(4) and this object must be supplied with the duration value. If a PDU sets s3EnetPortPartStatus and not this object, the port will not be partitioned."
  },
  "s3EnetPortType": {
    "name": "s3EnetPortType",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "tenBaseT": 2,
          "tenBaseTMdi": 3,
          "aui": 4,
          "bnc": 5,
          "foirl": 6,
          "tenBaseFL": 7,
          "switch": 8,
          "switchMdi": 9,
          "tenBaseFLRedund": 10
        }
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The media connection type for this port. Note that this object was called s3EnetPortMDIXSwitch in the Ethernet 3.3 and 4.0 MIBs."
  },
  "s3EnetPortInterconStatus": {
    "name": "s3EnetPortInterconStatus",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "interconnect": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object tells whether the port is connected to a host or to an interconnect (defined to be another NMM that is sending hello messages). The NMM agent will assign this object the value other(1) on initialization. If it sees hello messages coming in on the port, it will change the InterconStatus to be interconnect(2)."
  },
  "s3EnetPortAddrCollect": {
    "name": "s3EnetPortAddrCollect",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "default": 1,
          "neverCollect": 2,
          "alwaysCollect": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object tells whether the NMM should collect node address information from this port for the Find Nodes, Show Nodes, and Traffic Matrix (NMM+ only) tables. By default, the node addresses are collected only from ports that are not identified as interconnect ports. In addition, allowed nodes checking is done only on ports that are not interconnect ports. This object provides a means of overriding the default for collection and checking of node addresses. Setting this variable to default(1) tells the NMM to collect and check addresses if and only the port has not been identified as an interconnect port. To disable node address collection and checking on a port, set this object to neverCollect(2). To collect and check node addresses for an interconnect port, set this object to alwaysCollect(3). This object and its default setting has no affect on LattisSecure receive or transmit security features. To restore the 'natural' value for the port, set this object to default(1)."
  },
  "s3EnetPortAddrLearnMode": {
    "name": "s3EnetPortAddrLearnMode",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "noAutoLearn": 2,
          "continuousLearn": 3,
          "oneShotLearn": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object indicates whether the port should automatically learn the port address by reading the source address on the incoming packets. This object applies only to ports on a LattisSecure Host Module. For other ports, the agent returns the value other. A Get will return the current learning mode of the port. Setting to noAutoLearn(2) can be used to turn off continuousLearn (3) or oneShotLearn(4). The value of this object is in effect regardless of the value of s3EnetConcSecureStatus or s3EnetPortAuthStatus. Continuous learning is not compatible with LattisSecure receive security, thus s3EnetPortAddrLearnMode should not be set to continuousLearn(3) when s3EnetPortAuthStatus is on(2). If this combination is set, the receive security will not function. If this object is set to oneShotLearn(4), the agent will store the address (when it is learned) into the allowed nodes tables. This can cause the current address to be written over. Because continuous learning is not compatible with receive security, addresses learned while the port is in continuous learning mode will not be stored in the allowed nodes tables. Attempts to set the value to other(1) on a LattisSecure port will be rejected by the agent. Likewise, attempts to set the value to noAutoLearn(2), continuousLearn(3), or oneShotLearn(4) on a non-LattisSecure port will be rejected."
  },
  "s3EnetPortTxSecurity": {
    "name": "s3EnetPortTxSecurity",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.1.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "on": 2,
          "off": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This value of this object is meaningful only when s3EnetConcSecureStatus is not set to concSecureOff(5) (i.e., if security features are activated on the concentrator). This object applies only to ports on LattisSecure Host Modules. For other ports, the agent will return other(1) in response to a get request. The value off(3) indicates that LattisSecure transmit security is disabled on this LattisSecure port. The value on(2) indicates that LattisSecure transmit security is enabled on this LattisSecure port. Attempts to set the value to other(1) on a LattisSecure port will be rejected by the agent. Likewise, attempts to set the value to on(2) or off(3) on a non-LattisSecure port will be rejected."
  },
  "s3EnetCommonPortTable": {
    "name": "s3EnetCommonPortTable",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table provides a list of port entries. The number of entries is given for any Ethernet board in the concentrator, even if the board is not on the same Ethernet segment as this NMM."
  },
  "s3EnetCommonPortEntry": {
    "name": "s3EnetCommonPortEntry",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetCommonPortBoardIndex",
        "implied": 0
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetCommonPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table containing objects about the ports of each Ethernet board plugged into the 3000-series chassis."
  },
  "s3EnetCommonPortBoardIndex": {
    "name": "s3EnetCommonPortBoardIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each board. Its value ranges between 1 and 12. The value for each board must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
  },
  "s3EnetCommonPortIndex": {
    "name": "s3EnetCommonPortIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each port. Its value is dependent on the board type."
  },
  "s3EnetCommonPortLinkStatus": {
    "name": "s3EnetCommonPortLinkStatus",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 1,
          "on": 2,
          "other": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Tells whether the port is receiving link status."
  },
  "s3EnetCommonPortPartStatus": {
    "name": "s3EnetCommonPortPartStatus",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "partition": 2,
          "autoPartition": 3,
          "timedPartition": 4,
          "latSecPartition": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This indicates the operational status of the Port. Writing a partition(2) will partition the port indefinitely and enabled(1) will enable the port. If a timed partition is desired, then writing timedPartition(4) to this object at the same time that a time value is supplied in s3EnetCommonPortPartTime is required. Timed partitions will not survive across a reset. In this case the port will go to the partition(2) state. The value latSecPartition(5) is returned when the port has been automatically partitioned by the LattisSecure Host Module because of a security violation. The value autoPartition(3) is returned when the port has been automatically partitioned by the repeater using the 802.3 repeater auto-partition function. The agent will not allow this object to be set to autoPartition(3) or latSecPartition(5) using an SNMP request. Note that the value timedPartition(4) is returned only when the board is timed partitioned by this NMM."
  },
  "s3EnetCommonPortType": {
    "name": "s3EnetCommonPortType",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "tenBaseT": 2,
          "tenBaseTMdi": 3,
          "aui": 4,
          "bnc": 5,
          "foirl": 6,
          "tenBaseFL": 7,
          "switch": 8,
          "switchMdi": 9,
          "tenBaseFLRedund": 10
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The media connnection type for this port. Note that this object was called s3EnetPortMDIXSwitch in the Ethernet 3.3 and 4.0 MIBs."
  },
  "s3EnetCommonPortPartTime": {
    "name": "s3EnetCommonPortPartTime",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When partitioning the port for a specified time, s3EnetCommonPortPartStatus must be set with timedPartition(4) and this object must be supplied with the duration value. If a PDU sets s3EnetCommonPortPartStatus and not this object, the port will not be partitioned."
  },
  "s3EnetRedPortTable": {
    "name": "s3EnetRedPortTable",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of ports for each 10BASE-FL board with redundancy capability. The number of boards is determined by checking s3EnetCommonBoardRedund having a value of redundCapable(2) for each board in table s3EnetCommonBoardTable."
  },
  "s3EnetRedPortEntry": {
    "name": "s3EnetRedPortEntry",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRedPortBoardIndex",
        "implied": 0
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRedPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the table of ports on boards with redundancy capability."
  },
  "s3EnetRedPortBoardIndex": {
    "name": "s3EnetRedPortBoardIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of the slot containing the board. The value for each board must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
  },
  "s3EnetRedPortIndex": {
    "name": "s3EnetRedPortIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of the port on the module."
  },
  "s3EnetRedPortRedundMode": {
    "name": "s3EnetRedPortRedundMode",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "standAlone": 1,
          "hwActive": 2,
          "hwStandby": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object indicates the port's redundancy mode. A value of standAlone(1) indicates that the port is not set for hardware redundancy. A value of hwActive(2) indicates that the port is the active one of a hardware redundant pair. A value of hwStandby(3) indicates that the port is the standby one of a hardware redundant pair"
  },
  "s3EnetRedPortOperStatus": {
    "name": "s3EnetRedPortOperStatus",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "ok": 2,
          "localFault": 3,
          "remoteFault": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object indicates port's redundancy status. This value is valid only when the redundant mode is not standAlone(1). The values are: other(1).........none of the following ok(2)............no fault localFault(3)....the port had a Local Fault condition remoteFault(4)...the port is receiving Remote Fault signal Either a localFault(3) or remoteFault(4) condition should cause a redundant port pair to switchover."
  },
  "s3EnetRedPortRemoteOperStatus": {
    "name": "s3EnetRedPortRemoteOperStatus",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "snpxFLRemFltCpblPortUp": 1,
          "snpxFLFBRemFltCpblPortUp": 2,
          "tenBaseFLPortUp": 3,
          "tenBaseFBPortUp": 4,
          "snpxRemFltCpblPortFault": 5,
          "tenBaseFBPortFault": 6,
          "unknown": 7
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object reflects the real time status of the received data from the remote port. A value of snpxFLRemFltCpblPortUp(1) indicates that the remote port is capable of 10BASE-FL signaling, as well as SynOptics proprietary remote fault signaling. A remote fault on such a port is indicated by snpxRemFltCpblPortFault(5). A value of snpxFLFBRemFltCpblPortUp(2) indicates that the remote port is capable of 10BASE-FL, 10BASE-FB and SynOptics proprietary remote fault signaling. A remote fault on such a port is indicated by snpxRemFltCpblPortFault(5). A value of tenBaseFLPortUp(3) indicates that the remote port uses regular idle 10BASE-FL signaling, and is incapable of remote fault signaling. A value of tenBaseFBPortUp(4) indicates that the remote port uses 10BASE-FB synchronous signaling. A remote fault on such a port is indicated by tenBaseFBPortFault(6). A value of unknown(7) indicates that the remote signal received is none of the above."
  },
  "s3EnetRedPortCompanionSlotNo": {
    "name": "s3EnetRedPortCompanionSlotNo",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot number of the other port which is in the redundant pair. In the case of a standalone port, a value of 0 will be returned."
  },
  "s3EnetRedPortCompanionPortNo": {
    "name": "s3EnetRedPortCompanionPortNo",
    "oid": "1.3.6.1.4.1.45.1.3.2.3.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The port number of the other port which is in the redundant pair. In the case of a standalone port, a value of 0 will be returned."
  },
  "s3EnetPlusPortTable": {
    "name": "s3EnetPlusPortTable",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table provides a list of entries, each entry providing information related to frame MAC level error conditions per port. This table is conceptually an extension to the s3EnetPortTable and is only implemented by the 3313S and 3314S NMMs."
  },
  "s3EnetPlusPortEntry": {
    "name": "s3EnetPlusPortEntry",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetPlusPortBoardIndex",
        "implied": 0
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetPlusPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the Plus Port table."
  },
  "s3EnetPlusPortBoardIndex": {
    "name": "s3EnetPlusPortBoardIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each board. Its value ranges between 1 and 12. (This is the slot number.)"
  },
  "s3EnetPlusPortIndex": {
    "name": "s3EnetPlusPortIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each port. Its value typically ranges between 1 and 12."
  },
  "s3EnetPortFragments": {
    "name": "s3EnetPortFragments",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of fragments received by the board between 80-512 bits (64 bytes), inclusively, with invalid FCS or alignment errors. (These commonly represent collision fragments, and are not errors. Collision fragments were called FragErrors in the rev 3.x MIB, and were counted only on a per-board basis.)"
  },
  "s3EnetPortShortEvents": {
    "name": "s3EnetPortShortEvents",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of fragments received by the port shorter than 80 bits."
  },
  "s3EnetPortAutoPartitions": {
    "name": "s3EnetPortAutoPartitions",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of times the ports on the board have autopartitioned due to excessive collisions (more than 32 consecutive collisions). This count is an approximation and may be less than the total count."
  },
  "s3EnetPortRateMismatches": {
    "name": "s3EnetPortRateMismatches",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of the occurrences of out of spec bit rates. This indicates the number of times FIFO buffer over-runs or underruns due to transmission rate errors."
  },
  "s3EnetPortJabbers": {
    "name": "s3EnetPortJabbers",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of the times that MAU jabber lockup protection (MJLP) was invoked because transmission of data from this port exceeded 5 msec in duration. This information can be useful in identifying faulty stations."
  },
  "s3EnetPortLastSrcAddr": {
    "name": "s3EnetPortLastSrcAddr",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This is the source address of the last packet received through this port."
  },
  "s3EnetPortSrcAddrChanges": {
    "name": "s3EnetPortSrcAddrChanges",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This is the number of times that the s3EnetPortLastSrcAddr object for this has changed."
  },
  "s3EnetPlusBoardTable": {
    "name": "s3EnetPlusBoardTable",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table provides a list of entries, each entry providing information related to frame MAC level error conditions per board. This table is conceptually an extension to the s3EnetboardTable and is only implemented by the 3313S and 3314S NMMs."
  },
  "s3EnetPlusBoardEntry": {
    "name": "s3EnetPlusBoardEntry",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetPlusBoardIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the Plus Board table."
  },
  "s3EnetPlusBoardIndex": {
    "name": "s3EnetPlusBoardIndex",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The board number part of an index."
  },
  "s3EnetBoardFragments": {
    "name": "s3EnetBoardFragments",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of fragments received by the board between 80-512 bits (64 bytes), inclusively, with invalid FCS or alignment errors. (These commonly represent collision fragments, and are not errors. Collision fragments were called FragErrors in the rev 3.x MIB, and were counted only on a per-concentrator basis.)"
  },
  "s3EnetBoardShortEvents": {
    "name": "s3EnetBoardShortEvents",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of fragments received by the board shorter than 80 bits."
  },
  "s3EnetBoardAutoPartitions": {
    "name": "s3EnetBoardAutoPartitions",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of times the ports on this board have been autopartitioned due to excessive collisions (more than 32 consecutive collisions). This count is an approximation and may be less than the total count."
  },
  "s3EnetBoardRateMismatches": {
    "name": "s3EnetBoardRateMismatches",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of the occurrences of out of spec bit rates. This indicates the number of times FIFO buffer over-runs or underruns due to transmission rate errors."
  },
  "s3EnetBoardJabbers": {
    "name": "s3EnetBoardJabbers",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of the times that MAU jabber lockup protection (MJLP) was invoked because transmission of data from a port on this board exceeded 5 msec in duration. This information can be useful in identifying faulty stations."
  },
  "s3EnetConcShortEvents": {
    "name": "s3EnetConcShortEvents",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of fragments received by the concentrator shorter than 80 bits."
  },
  "s3EnetConcAutoPartitions": {
    "name": "s3EnetConcAutoPartitions",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of times the ports on this concentrator have been autopartitioned due to excessive collisions (more than 32 consecutive collisions). This count is based on a one-bit counter (flag) per port in the host modules, and will not always represent the total count."
  },
  "s3EnetConcRateMismatches": {
    "name": "s3EnetConcRateMismatches",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.3.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of the occurrences of out of spec bit rates. This indicates the number of times FIFO buffer over-runs or underruns due to transmission rate errors."
  },
  "s3EnetConcJabbers": {
    "name": "s3EnetConcJabbers",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.3.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a count of the times that MAU jabber lockup protection (MJLP) was invoked because transmission of data from a port on this concentrator exceeded 5 msec in duration. This information can be useful in identifying faulty stations."
  },
  "s3EnetConcCollBackoffErrors": {
    "name": "s3EnetConcCollBackoffErrors",
    "oid": "1.3.6.1.4.1.45.1.3.2.10.3.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains a total concentrator count of the collision events that occur during the normal collision window (i.e., the collisions is not a late collision) and do not have a runt error."
  },
  "s3TrCommonBoardTable": {
    "name": "s3TrCommonBoardTable",
    "oid": "1.3.6.1.4.1.45.1.3.3.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Information maintained for each token ring board. The information can be retrieved for any token ring board, even if the board is not on the same backplane ring as this NMM. The instance is the slot number of the concentrator that the board occupies."
  },
  "s3TrCommonBoardEntry": {
    "name": "s3TrCommonBoardEntry",
    "oid": "1.3.6.1.4.1.45.1.3.3.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3TrCommonBoardIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "There is one entry per board in this table."
  },
  "s3TrCommonBoardIndex": {
    "name": "s3TrCommonBoardIndex",
    "oid": "1.3.6.1.4.1.45.1.3.3.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each board. Its value ranges between 1 and 12. The value for each board must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization. If a board is inserted or reinserted in a concentrator then the NMM has to be reinitialized."
  },
  "s3TrCommonBoardRing1or2": {
    "name": "s3TrCommonBoardRing1or2",
    "oid": "1.3.6.1.4.1.45.1.3.3.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "ring1": 2,
          "ring2": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Determines which ring the board is currently using on the concentrator backplane."
  },
  "s3TrCommonBoardRingSpeed": {
    "name": "s3TrCommonBoardRingSpeed",
    "oid": "1.3.6.1.4.1.45.1.3.3.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "speed1M": 2,
          "speed4M": 3,
          "speed16M": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Token Ring speed of the ring that this board is connected to."
  },
  "s3TrPortTable": {
    "name": "s3TrPortTable",
    "oid": "1.3.6.1.4.1.45.1.3.3.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table containing information about each port of a LattisNet concentrator. The number of entries is given by knowing the number of occupied slots in s3ChassisSlotConfigTable whose s3SlotModuleType is of a token ring type and is on the same backplane ring as the agent NMM."
  },
  "s3TrPortEntry": {
    "name": "s3TrPortEntry",
    "oid": "1.3.6.1.4.1.45.1.3.3.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3TrPortBoardIndex",
        "implied": 0
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3TrPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A port entry containing objects at the port level for a particular port."
  },
  "s3TrPortBoardIndex": {
    "name": "s3TrPortBoardIndex",
    "oid": "1.3.6.1.4.1.45.1.3.3.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each board. Its value ranges between 1 and 12. The value for each board must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization. If a board is inserted or reinserted in a concentrator then the NMM has to be reinitialized."
  },
  "s3TrPortIndex": {
    "name": "s3TrPortIndex",
    "oid": "1.3.6.1.4.1.45.1.3.3.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each port. Its value ranges between 1 and 12. The value for each port must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization. If the board is an NMM board it will only have 2 ports, with Port 1 being for Ring In and Port 2 being for Ring Out."
  },
  "s3TrPortWrap": {
    "name": "s3TrPortWrap",
    "oid": "1.3.6.1.4.1.45.1.3.3.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "wrap": 2,
          "connect": 3,
          "timedWrap": 4,
          "beaconWrap": 5,
          "wrongSpeedWrap": 6,
          "permBeaconWrap": 7,
          "securityViolationWrap": 8
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Status of the port. Setting wrap(2) disconnects the port from the ring and setting this object to connect(3) connects the port to the ring. If a timed wrap is desired, then writing timedWrap(4) to this object at the same time that a time value is supplied in s3TrPortPartTime is required. Timed wraps will not survive across a reset. In this case the port will go to the wrap(2) state. BeaconWrap(5) indicates that the port is temporary wrapped by the agent due to the station of the port which was beaconing. The wrapped port will be unwrapped by the agent when the station is deinserted from the ring. WrongSpeedWrap(6) indicates that the port is wrapped by the host module. This is due to the wrong speed of a new station which was inserted to the ring. PermBeaconWrap(7) indicates that the port is wrapped by the agent permanently. This is caused by the beaconing station of the port attempting to deinsert/insert to the ring for more than 2 times within 1 minute. The wrapped port will not be unwrapped by the agent. SecurityViolationWrap(8) indicates that the port is wrapped by the agent due to the station not being allowed to insert in the port. The values beaconWrap(5), wrongSpeedWap(6), permanentBeaconwrap(7) and securityViolationWrap(8) can not be written. Note: The securityViolationWrap feature is implemented only in version 4.3 and subsequent agents."
  },
  "s3TrPortTestLatch": {
    "name": "s3TrPortTestLatch",
    "oid": "1.3.6.1.4.1.45.1.3.3.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "on": 2,
          "off": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Status of the test latch which is used to set the channel decoder used to monitor the health of the communication path between the NMM and the module channel."
  },
  "s3TrPortRelayStatus": {
    "name": "s3TrPortRelayStatus",
    "oid": "1.3.6.1.4.1.45.1.3.3.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "on": 2,
          "off": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of the channel's present relay mode. On(2) means the channel is in the ring and off(3) means the channel is bypassed."
  },
  "s3TrPortPhantomStatus": {
    "name": "s3TrPortPhantomStatus",
    "oid": "1.3.6.1.4.1.45.1.3.3.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "on": 2,
          "off": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of the ring access request signal."
  },
  "s3TrPortPhantomChangeFlag": {
    "name": "s3TrPortPhantomChangeFlag",
    "oid": "1.3.6.1.4.1.45.1.3.3.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "noChange": 2,
          "change": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Change(3) indicates that port phantom has been changed from OFF to ON. After inquiry by NMS, it will be cleared to noChange(2). Port phantom changing from ON to OFF has no impact on this object."
  },
  "s3TrPortChgSyn2IBM": {
    "name": "s3TrPortChgSyn2IBM",
    "oid": "1.3.6.1.4.1.45.1.3.3.3.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notSupported": 1,
          "synoptics": 2,
          "ibm": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If the port is on a ring in/ring out module this object changes the strap state depending on the jumper setting retrieved as s3TrPortStrap. If the strap is set for SynOptics phantom option, this object can be changed to ibm(3). If the strap is set for non-SynOptics option, this object can not be changed. Non ring in/ring out modules or fiber ring in/ring out modules must take on the value of notSupported(1)."
  },
  "s3TrPortStrap": {
    "name": "s3TrPortStrap",
    "oid": "1.3.6.1.4.1.45.1.3.3.3.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notSupported": 1,
          "synoptics": 2,
          "ibm": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "If the port is on a ring in/ring out module this object signifies whether the hardware jumper is in synoptics(2) mode or ibm(3) mode. This information is retrieved using a NMI command. For ports on fiber ring in/ring out modules, and those ports not on ring in/ring out modules, the agent always returns notSupported(1)."
  },
  "s3TrNmmFnNum": {
    "name": "s3TrNmmFnNum",
    "oid": "1.3.6.1.4.1.45.1.3.3.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Defines the flat network number that this NMM is part of."
  },
  "s3TrNmmRingNum": {
    "name": "s3TrNmmRingNum",
    "oid": "1.3.6.1.4.1.45.1.3.3.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Defines the segment number that this NMM is connected to. ***ACCESS VARIATION - changed access from read-only"
  },
  "s3TrNmmSlotNum": {
    "name": "s3TrNmmSlotNum",
    "oid": "1.3.6.1.4.1.45.1.3.3.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "Defines the slot number that this NMM is connected to. New NMS implementations should use the object s3AgentMySlotId defined in the common MIB. This object will be deleted from a future version of the Token Ring MIB."
  },
  "s3TrNmmFpuIdRev": {
    "name": "s3TrNmmFpuIdRev",
    "oid": "1.3.6.1.4.1.45.1.3.3.4.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The revision of the Front-end Frame Processing unit. 0=Rev. A, 1=Rev. B, etc."
  },
  "s3TrNmmFpuStatus": {
    "name": "s3TrNmmFpuStatus",
    "oid": "1.3.6.1.4.1.45.1.3.3.4.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notPresent": 1,
          "notOperational": 2,
          "operational": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The status of the Front-end Frame Processing Unit."
  },
  "s3TrNmmDramSize": {
    "name": "s3TrNmmDramSize",
    "oid": "1.3.6.1.4.1.45.1.3.3.4.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "k512": 2,
          "oneMeg": 3,
          "twoMeg": 4,
          "threeMeg": 5,
          "fourMeg": 6,
          "fiveMeg": 7,
          "sixMeg": 8,
          "sevenMeg": 9,
          "eightMeg": 10,
          "nineMeg": 11,
          "tenMeg": 12,
          "elevenMeg": 13,
          "twelveMeg": 14,
          "thirteenMeg": 15,
          "fourteenMeg": 16,
          "fifteenMeg": 17,
          "sixteenMeg": 18
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The highest address of the DRAM in the NMM memory map. The possible values are: other(1).........Unknown size k512(2)..........512K memory oneMeg(3)........1M memory . . . sixteenMeg(18)...16M memory"
  },
  "s3TrNmmEepromSize": {
    "name": "s3TrNmmEepromSize",
    "oid": "1.3.6.1.4.1.45.1.3.3.4.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "size2kBytes": 2,
          "size8kBytes": 3,
          "size16kBytes": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The size of the EEPROM in the NMM memory map. The possible values are: other(1)..........Unknown size size2kBytes(4)....2K by 8 size8kBytes(4)....8K by 8 size16kBytes(4)...16K by 8"
  },
  "s3TrNmmGrpAddrFrmsRxOk": {
    "name": "s3TrNmmGrpAddrFrmsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.3.4.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of Group Address frames received without error by this NMM. Note: The NMM counts only Group Address frames that are addressed to its own Group Address(es)."
  },
  "s3TrNmmRing1or2": {
    "name": "s3TrNmmRing1or2",
    "oid": "1.3.6.1.4.1.45.1.3.3.4.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "ring1": 2,
          "ring2": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Determines which ring the NMM is currently using on the concentrator backplane."
  },
  "s3TrNmmRingSpeed": {
    "name": "s3TrNmmRingSpeed",
    "oid": "1.3.6.1.4.1.45.1.3.3.4.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "speed1M": 2,
          "speed4M": 3,
          "speed16M": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Token Ring speed."
  },
  "s3TrNmmHexDisplay": {
    "name": "s3TrNmmHexDisplay",
    "oid": "1.3.6.1.4.1.45.1.3.3.4.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "4 octet hex display string that is displayed on the NMM control panel."
  },
  "s3TrNmmEpromSize": {
    "name": "s3TrNmmEpromSize",
    "oid": "1.3.6.1.4.1.45.1.3.3.4.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "k2kby8": 2,
          "k8kby8": 3,
          "k16kby8": 4,
          "k32kby8": 5,
          "k64kby8": 6,
          "k128kby8": 7,
          "k256kby8": 8
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The size of the EPROM in the NMM memory map."
  },
  "s3TrNodeTable": {
    "name": "s3TrNodeTable",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Table containing station specific information."
  },
  "s3TrNodeEntry": {
    "name": "s3TrNodeEntry",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3TrNodeEntMacAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Entry in the table containing counters and profiling information for each node detected on the local token ring."
  },
  "s3TrNodeEntMacAddress": {
    "name": "s3TrNodeEntMacAddress",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "MAC address of node that this entry in the table is for."
  },
  "s3TrNodeEntStatus": {
    "name": "s3TrNodeEntStatus",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "beaconing": 1,
          "notBeaconing": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Tells whether the station is currently beaconing or not."
  },
  "s3TrNodeEntNodeStatus": {
    "name": "s3TrNodeEntNodeStatus",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Node status as defined in 802.5 specification (section 3.3.2.18)."
  },
  "s3TrNodeLineErrs": {
    "name": "s3TrNodeLineErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of line errors. Section 3.8.1 of IEEE 802.5 specification."
  },
  "s3TrNodeBurstErrs": {
    "name": "s3TrNodeBurstErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of burst errors. Section 3.8.3 of IEEE 802.5 specification."
  },
  "s3TrNodeAriFciErrs": {
    "name": "s3TrNodeAriFciErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of ARI FCI errors. See AC errors, Section 3.8.4 of IEEE 802.5 specification."
  },
  "s3TrNodeLostFrames": {
    "name": "s3TrNodeLostFrames",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of frames lost. Section 3.8.6 of IEEE 802.5 specification."
  },
  "s3TrNodeRcvCongestErrs": {
    "name": "s3TrNodeRcvCongestErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of receive congestion errors. Section 3.8.7 of IEEE 802.5 specification."
  },
  "s3TrNodeFrmCopyErrs": {
    "name": "s3TrNodeFrmCopyErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of frame copy errors. Section 3.8.8 of IEEE 802.5 specification."
  },
  "s3TrNodeTokenErrs": {
    "name": "s3TrNodeTokenErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of token errors. Section 3.8.10 of IEEE 802.5 specification."
  },
  "s3TrNodeInternalErrs": {
    "name": "s3TrNodeInternalErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of internal errors. Section 3.8.2 of IEEE 802.5 specification."
  },
  "s3TrNodeAbortTransErrs": {
    "name": "s3TrNodeAbortTransErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of abort delimiter transmitted errors. Section 3.8.5 of IEEE 802.5 specification."
  },
  "s3TrNodeFrequencyErrs": {
    "name": "s3TrNodeFrequencyErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of frequency errors. Section 3.8.9 of IEEE 802.5 specification."
  },
  "s3TrNodeEntProductId": {
    "name": "s3TrNodeEntProductId",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 18,
            "max": 18
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A brief string describing the product specified by the vendor. Section 3.3.2.14 of IEEE 802.5 specification. The characters in the string are represented in EBCDIC for IBM products, in ASCII for others."
  },
  "s3TrNodeEntUna": {
    "name": "s3TrNodeEntUna",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Upstream Neighbor Address. Section 3.3.2.15 of IEEE 802.5 specification."
  },
  "s3TrNodeEntNodeVersion": {
    "name": "s3TrNodeEntNodeVersion",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 10,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "String that represents the version of the station software. Section 3.3.2.17 of IEEE 802.5 specification. The characters in the string are represented in EBCDIC for IBM products, in ASCII for others."
  },
  "s3TrNodeEntPhysDrop": {
    "name": "s3TrNodeEntPhysDrop",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This reports the physical location of this node on the ring. Section 3.3.2.13 of IEEE 802.5 specification."
  },
  "s3TrNodeEntFuncAddr": {
    "name": "s3TrNodeEntFuncAddr",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Specifies the functional addresses used by this station. Section 3.3.2.8 of IEEE 802.5 specification."
  },
  "s3TrNodeEntAuthFuncClass": {
    "name": "s3TrNodeEntAuthFuncClass",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 2,
            "max": 2
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This specifies the functional classes that are allowed to be active in the station. Section 3.3.2.3 of IEEE 802.5 specification."
  },
  "s3TrNodeEntAuthAccPriority": {
    "name": "s3TrNodeEntAuthAccPriority",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 2,
            "max": 2
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The maximum priority this station is allowed to use. Section 3.3.2.2 of IEEE 802.5 specification."
  },
  "s3TrNodeEntGrpAddr": {
    "name": "s3TrNodeEntGrpAddr",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This contains the group address of this station. Section 3.3.2.9 of IEEE 802.5 specification."
  },
  "s3TrNodeEntStationId": {
    "name": "s3TrNodeEntStationId",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This string is used to uniquely identify the station. It may be equal to the station's MAC address. Section 3.3.2.21 of IEEE 802.5 specification."
  },
  "s3TrNodeEntBeaconType": {
    "name": "s3TrNodeEntBeaconType",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "reconfiguration": 1,
          "signalLoss": 2,
          "bitStreaming": 3,
          "contentionStreaming": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This specifies the type of beacon frame seen. Section 3.3.2.4 of IEEE 802.5 specification."
  },
  "s3TrNodeBeaconCnt": {
    "name": "s3TrNodeBeaconCnt",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of beacon frames that have been sent by this station."
  },
  "s3TrNodeLastBeaconTime": {
    "name": "s3TrNodeLastBeaconTime",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time of the last beacon frame sent by this station."
  },
  "s3TrNodeLastInsertTime": {
    "name": "s3TrNodeLastInsertTime",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time of the last ring insertion by this station. Time is relative from the system uptime."
  },
  "s3TrNodeFirstInsertTime": {
    "name": "s3TrNodeFirstInsertTime",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time of the first ring insertion by this station. Time is relative from the system uptime."
  },
  "s3TrNodeLastDeinsertTime": {
    "name": "s3TrNodeLastDeinsertTime",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time of the last ring deinsertion by this station. Time is relative from the system uptime."
  },
  "s3TrNodeRemoveStation": {
    "name": "s3TrNodeRemoveStation",
    "oid": "1.3.6.1.4.1.45.1.3.3.5.1.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "remove": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Removes the MAC address associated with this entry from the ring by sending a REMOVE MAC frame if this object is written to with remove(2)."
  },
  "s3TrRingStatus": {
    "name": "s3TrRingStatus",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "beaconing": 1,
          "notbeaconing": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The status of the ring."
  },
  "s3TrRingFrmsRxOk": {
    "name": "s3TrRingFrmsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of frames received successfully by the NMM."
  },
  "s3TrRingOctetsRxOk": {
    "name": "s3TrRingOctetsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of octets received successfully by the NMM."
  },
  "s3TrRingBcastFrmsRxOk": {
    "name": "s3TrRingBcastFrmsRxOk",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of broadcast frames received successfully by the NMM."
  },
  "s3TrRingLineErrs": {
    "name": "s3TrRingLineErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of line errors. Section 3.8.1 of IEEE 802.5 specification."
  },
  "s3TrRingBurstErrs": {
    "name": "s3TrRingBurstErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of burst errors. Section 3.8.3 of IEEE 802.5 specification."
  },
  "s3TrRingAriFciErrs": {
    "name": "s3TrRingAriFciErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of ARI FCI errors. See AC errors, Section 3.8.4 of IEEE 802.5 specification."
  },
  "s3TrRingLostFrames": {
    "name": "s3TrRingLostFrames",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of frames lost. Section 3.8.6 of IEEE 802.5 specification."
  },
  "s3TrRingRcvCongestErrs": {
    "name": "s3TrRingRcvCongestErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of receive congestion errors. Section 3.8.7 of IEEE 802.5 specification."
  },
  "s3TrRingFrmCopyErrs": {
    "name": "s3TrRingFrmCopyErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of frame copy errors. Section 3.8.8 of IEEE 802.5 specification."
  },
  "s3TrRingTokenErrs": {
    "name": "s3TrRingTokenErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of token errors. Section 3.8.10 of IEEE 802.5 specification."
  },
  "s3TrRingInternalErrs": {
    "name": "s3TrRingInternalErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of internal errors. Section 3.8.2 of IEEE 802.5 specification."
  },
  "s3TrRingAbortTransErrs": {
    "name": "s3TrRingAbortTransErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of abort delimiter transmitted errors. Section 3.8.5 of IEEE 802.5 specification."
  },
  "s3TrRingFrequencyErrs": {
    "name": "s3TrRingFrequencyErrs",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of frequency errors. Section 3.8.9 of IEEE 802.5 specification."
  },
  "s3TrRingBeaconCnt": {
    "name": "s3TrRingBeaconCnt",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of beacon frames that have been seen."
  },
  "s3TrRingBeaconType": {
    "name": "s3TrRingBeaconType",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.16",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "reconfiguration": 1,
          "signalLoss": 2,
          "bitStreaming": 3,
          "contentionStreaming": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This specifies the type of beacon frame seen. Section 3.3.2.4 of IEEE 802.5 Specification."
  },
  "s3TrRingLastBeaconTime": {
    "name": "s3TrRingLastBeaconTime",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.17",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time of the last beacon frame sent on the ring. Time is relative from the system uptime."
  },
  "s3TrRingBeaconStation": {
    "name": "s3TrRingBeaconStation",
    "oid": "1.3.6.1.4.1.45.1.3.3.7.1.18",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MAC address of station last beaconing."
  },
  "ieee8023IfTable": {
    "name": "ieee8023IfTable",
    "oid": "1.3.6.1.4.1.45.2.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Statistics for a list of interface entries. There is one entry per IEEE 802.3 like 'interface.'"
  },
  "ieee8023IfEntry": {
    "name": "ieee8023IfEntry",
    "oid": "1.3.6.1.4.1.45.2.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "ieee8023IfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ieee8023IfIndex": {
    "name": "ieee8023IfIndex",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Index of the interface. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex."
  },
  "ieee8023FrmsTxOk": {
    "name": "ieee8023FrmsTxOk",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that are successfully transmitted. This counter is incremented when a frame is successfully transmitted, even if one of the collision counters (following two objects) is also counted. In other words, this count includes transmissions that succeeded after some number of collisions. This count includes multicast and broadcast frames."
  },
  "ieee8023SingleCollFrms": {
    "name": "ieee8023SingleCollFrms",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that are involved in a single collision, and are subsequently transmitted successfully. If this counter is incremented, then the ieee8023FrmsTxOK count will also be incremented AND ieee8023MultipleCollFrms will NOT be incremented."
  },
  "ieee8023MultipleCollFrms": {
    "name": "ieee8023MultipleCollFrms",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that are involved in more than one collision and are subsequently transmitted successfully. If this counter is incremented, then the ieee8023FrmsTxOK count will also be incremented AND ieee8023SingleCollFrms will NOT be incremented."
  },
  "ieee8023OctetsTxOk": {
    "name": "ieee8023OctetsTxOk",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The amount of data AND PADDING octets of frames that are successfully transmitted. This counter includes octets in broadcast and multicast frames that are transmitted. This count does not include the address fields, length/type field, and CRC field of the frame. According to Ethernet terminology, it is purely the data field (IP header, etc.)."
  },
  "ieee8023DefTx": {
    "name": "ieee8023DefTx",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames whose transmission was delayed on its first attempt because the medium was busy. Frames involved in collisions are NOT included in this count."
  },
  "ieee8023McastFrmsTxOk": {
    "name": "ieee8023McastFrmsTxOk",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames successfully transmitted to a multicast address. This counter does not include frames sent to the broadcast address."
  },
  "ieee8023BcastFrmsTxOk": {
    "name": "ieee8023BcastFrmsTxOk",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames successfully transmitted to the broadcast address. This counter does not include frames sent to a multicast address."
  },
  "ieee8023LateColls": {
    "name": "ieee8023LateColls",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that a collision has been detected later than 512 bit times into the transmission of a packet. 512 bit times is 51.2 micro secs. This type of collision is counted twice-both as a late collision and as a regular, ordinary collision."
  },
  "ieee8023ExcessColls": {
    "name": "ieee8023ExcessColls",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that are not transmitted because of excessive collisions."
  },
  "ieee8023IntlMacTxError": {
    "name": "ieee8023IntlMacTxError",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that would otherwise be transmitted by the station, but could not be sent because of an internal MAC sublayer transmit error. If this counter is incremented, then none of the other counters in this section are incremented. The exact meaning and mechanism for incrementing this counter is implementation dependent. In short, this is the count of errors for which there are no specific counters."
  },
  "ieee8023CsErrors": {
    "name": "ieee8023CsErrors",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that carrier sense was lost or never appeared when attempting to transmit a packet. This counter is incremented ONCE per transmission attempt, even if Carrier Sense fluctuates."
  },
  "ieee8023ExcessDef": {
    "name": "ieee8023ExcessDef",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that deferred for an excessive period of time."
  },
  "ieee8023FrmsRxOk": {
    "name": "ieee8023FrmsRxOk",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that are successfully received. This counter does not include frames received with frame-too-long, FCS, length, or alignment errors, or frames lost because of internal MAC sublayer error. This counter includes broadcast and multicast frames that are received."
  },
  "ieee8023OctetsRxOk": {
    "name": "ieee8023OctetsRxOk",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number entry of data and padding octets in frames that are successfully received. This counter does not include frames received with frame-too-long, FCS, length, or alignment errors, or frames lost because of internal MAC sublayer error. This counter includes octets in broadcast and multicast frames that are received. This counter does not include the octets in the address, length/type, and CRC fields."
  },
  "ieee8023McastFrmsRxOk": {
    "name": "ieee8023McastFrmsRxOk",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that are successfully received and are directed to an active non-broadcast group address. This counter does not include frames received with frame-too-long, FCS, length, or alignment errors, or frames lost because of internal MAC sublayer error. Only frames for a multicast address that this interface is receiving are counted. Broadcast packets are not included."
  },
  "ieee8023BcastFrmsRxOk": {
    "name": "ieee8023BcastFrmsRxOk",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that are successfully received and are directed to the broadcast group address. This counter does not include frames received with frame-too-long, FCS, length, or alignment errors, or frames lost because of internal MAC sublayer error. Multicast packets are not included."
  },
  "ieee8023TooLongErrors": {
    "name": "ieee8023TooLongErrors",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that are received and exceed the maximum permitted frame size. This counter is incremented when the frameTooLong error is returned."
  },
  "ieee8023AlignErrors": {
    "name": "ieee8023AlignErrors",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that are not an integral number of octets in length and do not pass the FCS check. This counter is incremented when the alignmentError status is returned to the LLC."
  },
  "ieee8023FcsErrors": {
    "name": "ieee8023FcsErrors",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that are an integral number of octets in length and do not pass the FCS check. This counter is incremented when the frameCheckError status is returned to the LLC."
  },
  "ieee8023IrLengthErrors": {
    "name": "ieee8023IrLengthErrors",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames with a length field value between the minimum unpadded LLC data size and the maximum allowed LLC data size inclusive, and which do not match the number of LLC data octets received. The counter also contains frames with a length field value less than the minimum unpadded LLC data size."
  },
  "ieee8023OorLengthFields": {
    "name": "ieee8023OorLengthFields",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames with a length field value greater than the maximum allowed LLC data size. If true 802.3 is followed for layer management, then this counter will be incremented for every IP or ARP frame received that uses the Ethernet encapsulation method. Both IP and ARP use type field values that will cause this counter to be incremented, showing a high error rate."
  },
  "ieee8023IntlMacRxErrors": {
    "name": "ieee8023IntlMacRxErrors",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that would otherwise be received by the station, but could not be accepted because of an internal MAC sublayer receive error. If this counter is incremented, then none of the other counters in this section are incremented. The exact meaning and mechanism for incrementing this counter is implementation dependent. This is the count of other errors."
  },
  "ieee8023InitMac": {
    "name": "ieee8023InitMac",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "initialize": 1,
          "uninitialize": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Reinitializes the MAC and PLS (physical layer signaling). All MIB counters are set to 0. The states of the status variables (described below) are as follows: - The receive and transmit Layer Management state variables (receiveEnabled and transmitEnabled) are set to enable reception and transmission of frames. - The promiscuous receive function is disabled. - Multicast reception is disabled."
  },
  "ieee8023PromRxStatus": {
    "name": "ieee8023PromRxStatus",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable combines the enable ieee8023PromRx, disable ieee8023PromRx, and read ieee8023PromStatus MAC actions. Setting this variable to enabled causes the interface to accept frames regardless of their destination address. When enabled, all received frames increment all counters as though those frames were directed to this station. Frames can be promiscuously received only if the ieee8023MacSubLayerStatus variable is also set to enabled(1)."
  },
  "ieee8023MacSubLayerStatus": {
    "name": "ieee8023MacSubLayerStatus",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable causes the MAC sublayer to enter the normal operational state at idle. The PLS is reset by this operation. It is accomplished by setting receiveEnabled and transmitEnabled to true. Setting this variable to enabled(1) enables the MAC sublayer to both receive and transmit frames. Setting this variable to enabled(1) will also set the ieee8023TransmitStatus variable to enabled(1). Similarly, setting this variable to disabled(2) will also set ieee8023TransmitStatus to disabled(2). Modifying this variable does not change the state of any other variables. If the variable is set to disabled(2), then any current transmission/reception is completed before the transmission/reception process is disabled. The value returned when this variable is read is the logical and of the receiveEnabled and transmitEnabled MAC internal state variables. If both are in the enabled state, then enabled(1) is returned; otherwise disabled(2) is returned."
  },
  "ieee8023TxStatus": {
    "name": "ieee8023TxStatus",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable enables the MAC sublayer to be explicitly enabled/disabled for transmitting frames. If a frame is being transmitted when this variable is set to disabled(2), that transmission is completed. Note that ieee8023MACSubLayerStatus has an effect on this variable."
  },
  "ieee8023McastRxStatus": {
    "name": "ieee8023McastRxStatus",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enables/disables reception of multicast frames. To actually receive multicasts, both this variable AND ieee8023MacSubLayerStatus must be set to enabled."
  },
  "ieee8023MacAddress": {
    "name": "ieee8023MacAddress",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object contains the MAC station address (i.e., the Ethernet address)."
  },
  "ieee8023SqeTestErrors": {
    "name": "ieee8023SqeTestErrors",
    "oid": "1.3.6.1.4.1.45.2.1.1.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that the SQE TEST ERROR status was received."
  },
  "ieee8023CollTable": {
    "name": "ieee8023CollTable",
    "oid": "1.3.6.1.4.1.45.2.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table containing information on collision activity."
  },
  "ieee8023CollEntry": {
    "name": "ieee8023CollEntry",
    "oid": "1.3.6.1.4.1.45.2.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "ieee8023CollRetrans",
        "implied": 0
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "ieee8023CollIndex",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ieee8023CollRetrans": {
    "name": "ieee8023CollRetrans",
    "oid": "1.3.6.1.4.1.45.2.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The entry corresponding to the number of attempts made before a frame was successfully transmitted. The range is from 1 to 15."
  },
  "ieee8023CollIndex": {
    "name": "ieee8023CollIndex",
    "oid": "1.3.6.1.4.1.45.2.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index value that uniquely identifies the interface to which this entry is applicable. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex."
  },
  "ieee8023Collisions": {
    "name": "ieee8023Collisions",
    "oid": "1.3.6.1.4.1.45.2.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that were retransmitted a specific number of times."
  },
  "ieee8023GroupTable": {
    "name": "ieee8023GroupTable",
    "oid": "1.3.6.1.4.1.45.2.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table containing information on group addresses. There are five entries in the table."
  },
  "ieee8023GroupEntry": {
    "name": "ieee8023GroupEntry",
    "oid": "1.3.6.1.4.1.45.2.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "ieee8023GroupIndex",
        "implied": 0
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "ieee8023GroupAddress",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ieee8023GroupIndex": {
    "name": "ieee8023GroupIndex",
    "oid": "1.3.6.1.4.1.45.2.1.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index value that uniquely identifies the interface to which this entry is applicable. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex."
  },
  "ieee8023GroupAddress": {
    "name": "ieee8023GroupAddress",
    "oid": "1.3.6.1.4.1.45.2.1.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A group address to which this Ethernet-like interface responds. ***ACCESS VARIATION - changed access from read-only"
  },
  "ieee8023GroupType": {
    "name": "ieee8023GroupType",
    "oid": "1.3.6.1.4.1.45.2.1.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "invalid": 2,
          "flatnet": 3,
          "segmentnet": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Type of group address. Setting this object to the value invalid(2) invalidates the corresponding entry in the ieee8023GroupTable. That is, it effectively disassociates the interface identified with said entry from the group address identified with said entry. Whether the agent removes an invalidated entry from the table is an implementation-specific matter. Accordingly, management stations must be prepared to receive tabular information from agents that corresponds to entries not currently in use. Proper interpretation of such entries requires examination of the relevant ieee8023GroupType object. A value of flatnet(3) indicates a multicast address for Synoptics autotopology flat net hello messages. A value of segmentnet(4) indicates a multicast address for Synoptics autotopology segment net hello messages."
  },
  "chassisPowerSupplyFailure": {
    "name": "chassisPowerSupplyFailure",
    "oid": "1.3.6.1.4.1.450.0",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3ChassisPsStatus"
      }
    ],
    "description": "Concentrator power supply failure."
  },
  "chassisFanFailure": {
    "name": "chassisFanFailure",
    "oid": "1.3.6.1.4.1.450.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3ChassisFanStatus"
      }
    ],
    "description": "Concentrator fan failure."
  },
  "portAutoPartition": {
    "name": "portAutoPartition",
    "oid": "1.3.6.1.4.1.450.4",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetPortPartStatus"
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetPortJabberStatus"
      }
    ],
    "description": "Port auto partitions (wraps)."
  },
  "portDTEJabbering": {
    "name": "portDTEJabbering",
    "oid": "1.3.6.1.4.1.450.5",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetPortJabberStatus"
      }
    ],
    "description": "Ethernet DTE jabbering detected."
  },
  "localBridgeDiagnostic": {
    "name": "localBridgeDiagnostic",
    "oid": "1.3.6.1.4.1.450.8",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetLocBridgeDiagSts"
      }
    ],
    "description": "NMM detects bridge failure."
  },
  "remoteBridgePortOperationChanged": {
    "name": "remoteBridgePortOperationChanged",
    "oid": "1.3.6.1.4.1.450.9",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRemBridgePortOpSts"
      }
    ],
    "description": "Bridge changes from standby <-> operation."
  },
  "remoteBridgeDiagnostic": {
    "name": "remoteBridgeDiagnostic",
    "oid": "1.3.6.1.4.1.450.10",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRemBridgeDiagSts"
      }
    ],
    "description": "NMM detects remote bridge failure."
  },
  "boardLEDFailure": {
    "name": "boardLEDFailure",
    "oid": "1.3.6.1.4.1.450.11",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3CommonBoardStatus"
      }
    ],
    "description": "Board is on but LED is off."
  },
  "boardPowerSupplyFailure": {
    "name": "boardPowerSupplyFailure",
    "oid": "1.3.6.1.4.1.450.27",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3CommonBoardPsStatus"
      }
    ],
    "description": "Board power supply failure."
  },
  "localBridgeOperationChanged": {
    "name": "localBridgeOperationChanged",
    "oid": "1.3.6.1.4.1.450.30",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetLocBridgeStandbySts"
      }
    ],
    "description": "Bridge changes from standby <-> operation."
  },
  "remoteBridgeOperationChanged": {
    "name": "remoteBridgeOperationChanged",
    "oid": "1.3.6.1.4.1.450.31",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRemBridgeStandbySts"
      }
    ],
    "description": "Bridge changes from standby <-> operation."
  },
  "routerOperationChanged": {
    "name": "routerOperationChanged",
    "oid": "1.3.6.1.4.1.450.33",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRouterStandbySts"
      }
    ],
    "description": "Router changes from standby <-> operation."
  },
  "routerDiagnostic": {
    "name": "routerDiagnostic",
    "oid": "1.3.6.1.4.1.450.34",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRouterDiagSts"
      }
    ],
    "description": "NMM detects router failure."
  },
  "keyManagementFailure": {
    "name": "keyManagementFailure",
    "oid": "1.3.6.1.4.1.450.35",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3AgentMibLevel"
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3AgentFeatureLevel"
      }
    ],
    "description": "NMM detects that its key doesn't match the configuration."
  },
  "nmmSaturationA": {
    "name": "nmmSaturationA",
    "oid": "1.3.6.1.4.1.450.44",
    "class": "notificationtype",
    "description": "NMM is dropping packets due to overload."
  },
  "lattisSecureInitRequired": {
    "name": "lattisSecureInitRequired",
    "oid": "1.3.6.1.4.1.450.46",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3SlotModuleType"
      }
    ],
    "description": "This trap is sent by a 331xS Ethernet NMM+ when a LattisSecure Host Module needs initialization. The location of the module is indicated by the instance identifier part of the returned variable, and the value of the variable tells the board identity."
  },
  "redPsPlus5vCurrentExceed": {
    "name": "redPsPlus5vCurrentExceed",
    "oid": "1.3.6.1.4.1.450.47",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3RedPsPrimaryConfig"
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3RedPsSecondaryConfig"
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3RedPsPlus5vCurrent"
      }
    ],
    "description": "This trap is sent when the current level on the +5 V supply exceeds the maximum recommended level: 1) 30 amps if at least one of the power supplies is a 3001. 2) 50 amps if both power supplies are 3002. Note: The agent reads the current level only when it restarts.Changes in the current level that occur while the agent is running will not be noticed. Thus, this trap can only be generated at the end of the restart sequence."
  },
  "redPsPlus12vCurrentExceed": {
    "name": "redPsPlus12vCurrentExceed",
    "oid": "1.3.6.1.4.1.450.48",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3RedPsPrimaryConfig"
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3RedPsSecondaryConfig"
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3RedPsPlus12vCurrent"
      }
    ],
    "description": "This trap is sent when the current level on the +12 V supply exceeds the maximum recommended level of 15 amps for any set of power supplies. Note: The agent reads the current level only when it restarts. Changes in the current level that occur while the agent is running will not be noticed. Thus, this trap can only be generated at the end of the restart sequence."
  },
  "redPsAmbientTempStatChg": {
    "name": "redPsAmbientTempStatChg",
    "oid": "1.3.6.1.4.1.450.49",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3RedPsAmbientTempStatus"
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3RedPsAmbientTemperature"
      }
    ],
    "description": "This trap is sent whenever there is a change (in either direction) in the psAmbientTempStatus variable."
  },
  "redPsSummingDiodeFailure": {
    "name": "redPsSummingDiodeFailure",
    "oid": "1.3.6.1.4.1.450.50",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3RedPsDiodeStatus"
      }
    ],
    "description": "This trap is sent whenever the reported status of either 3100R summing diode changes from 'Ok' to 'Fail'."
  },
  "boardSwap": {
    "name": "boardSwap",
    "oid": "1.3.6.1.4.1.450.51",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3SlotModuleId"
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3SlotModuleType"
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3SlotModuleMdaId"
      }
    ],
    "description": "This trap is sent whenever a board is inserted or removed. The values returned are those before the action was taken. Thus, the value of s3SlotModuleType will be empty(1) when a board is inserted. The instance value for the variables is the slot number of the board. On receiving the trap, a manager should use a get request to find the current values of these variables."
  },
  "enetChannelChange": {
    "name": "enetChannelChange",
    "oid": "1.3.6.1.4.1.450.53",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetCommonBoardEnetAB"
      }
    ],
    "description": "This trap is sent whenever a board is switched from one channel to the other. The value returned is the one before the action was taken. Thus, the value of s3EnetCommonBoardEnetAB will specify channel that the board was attached to before the channel was changed. The instance value from s3EnetCommonBoardEnetAB identifies the board that was affected."
  },
  "flashUpdateFailure": {
    "name": "flashUpdateFailure",
    "oid": "1.3.6.1.4.1.450.54",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3AgentFlashStatus"
      }
    ],
    "description": "This trap is sent whenever the agent failed to update the local image due to flash device failure."
  },
  "redundPortSwitchover": {
    "name": "redundPortSwitchover",
    "oid": "1.3.6.1.4.1.450.58",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRedPortRedundMode"
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRedPortOperStatus"
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRedPortCompanionSlotNo"
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRedPortCompanionPortNo"
      }
    ],
    "description": "This trap is sent whenever NMM detects a redundant port pair switchover. The values returned are those after the action was taken. The instance values (slot.port) for the variables is for the port from which the switchover occurred."
  },
  "redundBadRemCfgDetected": {
    "name": "redundBadRemCfgDetected",
    "oid": "1.3.6.1.4.1.450.59",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRedPortRemoteOperStatus"
      },
      {
        "module": "SYNOPTICS-BASIC-ETHTOK-MIB",
        "object": "s3EnetRedPortRedundMode"
      }
    ],
    "description": "This trap is sent periodically when the NMM detects a s3EnetRedPortRemoteOperStatus of flidl(3) on a port set for hardware redundancy. The trap is also sent when the port's s3EnetRedPortRemoteOperStatus is unknown(7) and the companion port has a good link. The instance values (slot.port) for the variables is for the receiving port."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/SYNOPTICS-BASIC-ETHTOK-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 17:08:01 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "SYNOPTICS-BASIC-ETHTOK-MIB"
  }
}