{
  "imports": {
    "class": "imports",
    "RFC1243-MIB": [
      "DdpAddress"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "Counter32",
      "Counter64",
      "IpAddress",
      "OBJECT-IDENTITY",
      "TimeTicks",
      "NOTIFICATION-TYPE",
      "Gauge32",
      "Bits",
      "enterprises",
      "MODULE-IDENTITY",
      "Integer32",
      "OBJECT-TYPE",
      "Unsigned32",
      "MibIdentifier",
      "iso"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "farallon": {
    "name": "farallon",
    "oid": "1.3.6.1.4.1.304",
    "class": "objectidentity"
  },
  "products": {
    "name": "products",
    "oid": "1.3.6.1.4.1.304.1",
    "class": "objectidentity"
  },
  "rtrProds": {
    "name": "rtrProds",
    "oid": "1.3.6.1.4.1.304.1.3",
    "class": "objectidentity"
  },
  "netopia": {
    "name": "netopia",
    "oid": "1.3.6.1.4.1.304.1.3.1",
    "class": "objectidentity"
  },
  "ATNetworkNumber": {
    "name": "ATNetworkNumber",
    "class": "type",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 2,
            "max": 2
          }
        ]
      }
    }
  },
  "HostNameOrIpAddr": {
    "name": "HostNameOrIpAddr",
    "class": "type",
    "type": {
      "type": "OCTET STRING",
      "class": "type"
    }
  },
  "UInteger": {
    "name": "UInteger",
    "class": "type",
    "type": {
      "type": "Gauge",
      "class": "type"
    }
  },
  "sysParams": {
    "name": "sysParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.1",
    "class": "objectidentity"
  },
  "clockParams": {
    "name": "clockParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.2",
    "class": "objectidentity"
  },
  "sysStats": {
    "name": "sysStats",
    "oid": "1.3.6.1.4.1.304.1.3.1.3",
    "class": "objectidentity"
  },
  "ipParams": {
    "name": "ipParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.4",
    "class": "objectidentity"
  },
  "ripParams": {
    "name": "ripParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.5",
    "class": "objectidentity"
  },
  "atParams": {
    "name": "atParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.6",
    "class": "objectidentity"
  },
  "macipParams": {
    "name": "macipParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.7",
    "class": "objectidentity"
  },
  "dhcpParams": {
    "name": "dhcpParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.8",
    "class": "objectidentity"
  },
  "aurpParams": {
    "name": "aurpParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.9",
    "class": "objectidentity"
  },
  "bootParams": {
    "name": "bootParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.10",
    "class": "objectidentity"
  },
  "snmpParams": {
    "name": "snmpParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.11",
    "class": "objectidentity"
  },
  "isdnParams": {
    "name": "isdnParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.12",
    "class": "objectidentity"
  },
  "consoleParams": {
    "name": "consoleParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.13",
    "class": "objectidentity"
  },
  "pcCardParams": {
    "name": "pcCardParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.14",
    "class": "objectidentity"
  },
  "logParams": {
    "name": "logParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.15",
    "class": "objectidentity"
  },
  "filterParams": {
    "name": "filterParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.16",
    "class": "objectidentity"
  },
  "hwVersion": {
    "name": "hwVersion",
    "oid": "1.3.6.1.4.1.304.1.3.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The device's hardware version, consisting of a major version, minor version, release stage, and revision number, packed into 4 octets. The first octet contains the major version encoded as two packed binary coded decimal (bcd) digits. The second octet contains the minor version encoded as two packed bcd digits. The third byte contains the release stage, consisting of two packed bcd digits, the first of which is always zero and the second of which is either D (development), A (alpha), B (beta), E (experimental), or F (final). The fourth byte contains the revision number encoded as two packed bcd digits. Thus, the hardware version '1.2 final' would be encoded as the octet string 01 02 0F 00."
  },
  "fwVersion": {
    "name": "fwVersion",
    "oid": "1.3.6.1.4.1.304.1.3.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The device's firmware version, consisting of a major version, minor version, release stage, and revision number, packed into 4 octets. The first octet contains the major version encoded as two packed binary coded decimal (bcd) digits. The second octet contains the minor version encoded as two packed bcd digits. The third byte contains the release stage, consisting of two packed bcd digits, the first of which is always zero and the second of which is either D (development), A (alpha), B (beta), E (experimental), or F (final). The fourth byte contains the revision number encoded as two packed bcd digits. Thus, the firmware version '1.2 final' would be encoded as the octet string 01 02 0F 00."
  },
  "productMIBVersion": {
    "name": "productMIBVersion",
    "oid": "1.3.6.1.4.1.304.1.3.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The version of the product specific MIB implemented by the device's SNMP agent, consisting of a major version, minor version, release stage, and revision number, packed into 4 octets. The first octet contains the major version encoded as two packed binary coded decimal (bcd) digits. The second octet contains the minor version encoded as two packed bcd digits. The third byte contains the release stage, consisting of two packed bcd digits, the first of which is always zero and the second of which is either D (development), A (alpha), B (beta), E (experimental), or F (final). The fourth byte contains the revision number encoded as two packed bcd digits. Thus, the product specific MIB version '1.2 final' would be encoded as the octet string 01 02 0F 00."
  },
  "serialNumber": {
    "name": "serialNumber",
    "oid": "1.3.6.1.4.1.304.1.3.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 3,
            "max": 3
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The device's 24-bit serial number. The value of this object is the same as the least significant three bytes of the physical address of the device's Ethernet interface."
  },
  "modelNumber": {
    "name": "modelNumber",
    "oid": "1.3.6.1.4.1.304.1.3.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The device's model number."
  },
  "modelSuffix": {
    "name": "modelSuffix",
    "oid": "1.3.6.1.4.1.304.1.3.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 2,
            "max": 2
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The two-character model number suffix, if any. This suffix indicates the country or geographic region for which the model has been localized."
  },
  "bootTime": {
    "name": "bootTime",
    "oid": "1.3.6.1.4.1.304.1.3.1.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time and date (in human-readable form) when the device was last restarted."
  },
  "systemClock": {
    "name": "systemClock",
    "oid": "1.3.6.1.4.1.304.1.3.1.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 14,
            "max": 14
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The current setting of the system clock encoded as fourteen decimal-ASCII digits in the form 'YYYYMMDDHHMMSS'. Thus, 10:35:00 p.m. on August 6, 1959 would be represented by the following fourteen octets: '19590806223500'."
  },
  "currentCpuUtil": {
    "name": "currentCpuUtil",
    "oid": "1.3.6.1.4.1.304.1.3.1.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The device's current CPU utilization, measured as the percentage of time the device has been non-idle during the most recent one-second interval."
  },
  "averageCpuUtil": {
    "name": "averageCpuUtil",
    "oid": "1.3.6.1.4.1.304.1.3.1.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The device's average CPU utilization, measured as the percentage of time the device has been non-idle during the most recent one-minute interval."
  },
  "currentBufs": {
    "name": "currentBufs",
    "oid": "1.3.6.1.4.1.304.1.3.1.3.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The device's current 1-second buffer utilization, measured as a percentage of all available buffers."
  },
  "averageBufs": {
    "name": "averageBufs",
    "oid": "1.3.6.1.4.1.304.1.3.1.3.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The device's current 1-minute buffer utilization, measured as a percentage of all available buffers."
  },
  "totalRAM": {
    "name": "totalRAM",
    "oid": "1.3.6.1.4.1.304.1.3.1.3.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes of Random-Access Memory (RAM) available on the device."
  },
  "usedRAM": {
    "name": "usedRAM",
    "oid": "1.3.6.1.4.1.304.1.3.1.3.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes of RAM in use at the current time."
  },
  "totalFEPROM": {
    "name": "totalFEPROM",
    "oid": "1.3.6.1.4.1.304.1.3.1.3.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes of Flash-Erasable Programmable Read-Only Memory (Flash-EPROM) available on the device."
  },
  "usedFEPROM": {
    "name": "usedFEPROM",
    "oid": "1.3.6.1.4.1.304.1.3.1.3.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes of Flash-Erasable Programmable Read-Only Memory (Flash-EPROM) in use at the current time."
  },
  "ipAddr": {
    "name": "ipAddr",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP address that the device will use after a restart. The device's active IP address can be determined by examining the appropriate instance of the ipAdEntAddr object in the MIB-II IP address table."
  },
  "ipNetMask": {
    "name": "ipNetMask",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The subnet mask that the device will use after a restart. The device's active subnet mask can be determined by examining the appropriate instance of the ipAdEntNetMask object in the MIB-II IP address table."
  },
  "ipBcastForm": {
    "name": "ipBcastForm",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "allOnes": 1,
          "allZeros": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The type of IP broadcast address that the device will use after a restart: the Internet standard all-ones broadcast address or the non-standard all zeros broadcast address. The device's active broadcast address type can be determined by examining the appropriate instance of the ipAdEntBcastAddr object in the MIB-II IP address table."
  },
  "ipEncap": {
    "name": "ipEncap",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ethernet": 1,
          "ieee8022": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The type of IP datagram encapsulation that the device will use after a restart: Ethernet or IEEE802.2. The active type of IP datagram encapsulation can be determined by examining the appropriate instance of the ifType object in the MIB-II interfaces table entry for the device's Ethernet interface. If the value of that instance of ifType is 'ethernet-csmacd(6)', then the active type of IP datagram encapsulation is Ethernet; if the value of that instance of ifType is 'iso88023-csmacd(7)', then the active type of IP datagram encapsulation is IEEE802.2."
  },
  "ipDefaultGateway": {
    "name": "ipDefaultGateway",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The default gateway IP address that the device will use after a restart. The device's operational default gateway IP address can be determined by examining the value of the ipRouteNextHop.0.0.0.0 object in the MIB-II IP routing table."
  },
  "ipDomainName": {
    "name": "ipDomainName",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The device's domain name."
  },
  "ipDNSServerTable": {
    "name": "ipDNSServerTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries describing the device's Domain Name System name servers. This table supports 'conceptual row creation' according to section 3.2(3) of RFC 1212: To add a new row to this table, a management station must provide a value for the new instance of the ipDNSServerAddress object, and may, in addition, provide a value for the corresponding instance of the ipDNSServerStatus object. If no value is supplied for the corresponding instance of the ipDNSServerStatus object, its value will default to 'valid(1)'."
  },
  "ipDNSServerEntry": {
    "name": "ipDNSServerEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.7.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "ipDNSServerIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry describing one of the device's Domain Name System name servers."
  },
  "ipDNSServerIndex": {
    "name": "ipDNSServerIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.7.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each of the device's Domain Name System name servers. The value of this object ranges between one and the number of such servers. Servers are listed in order of preference: A server with a lower-valued ipDNSServerIndex is preferred over a server with a higher-valued ipDNSServerIndex. Thus, if it exists, ipDNSServerAddress.1 indicates the IP address of the device's primary DNS server."
  },
  "ipDNSServerAddress": {
    "name": "ipDNSServerAddress",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.7.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP address of the Domain Name System name server described by this entry."
  },
  "ipDNSServerStatus": {
    "name": "ipDNSServerStatus",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.7.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of this entry. Setting this object to the value 'invalid(2)' has the effect of invalidating the corresponding entry in the ipDNSServerTable. That is, it effectively disassociates the mapping identified with said entry. It is an implementation-specific matter as to whether the agent removes an invalidated entry from the table. Accordingly, management stations must be prepared to receive from agents tabular information corresponding to entries not currently in use. Proper interpretation of such entries requires examination of the relevant ipDNSServerStatus object."
  },
  "ipStaticRouteTable": {
    "name": "ipStaticRouteTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.8",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries describing the device's static IP routes. This table supports 'conceptual row creation' according to section 3.2(3) of RFC 1212: To add a new row to this table, a management station must provide a value for at least one of the new instances of the ipStaticRouteEnable, ipStaticRoutePriority, ipStaticRouteMetric, ipStaticRouteAdvertise, and ipStaticRouteStatus objects. If no value is supplied for the new instance of one of these objects, its value will default to 'enabled(1)', 20, 1, 'dontAdvertise(2)', and 'valid(1)', respectively."
  },
  "ipStaticRouteEntry": {
    "name": "ipStaticRouteEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.8.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "ipStaticRouteDest",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "ipStaticRouteMask",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "ipStaticRouteNextHop",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry describing one of the device's static IP routes."
  },
  "ipStaticRouteDest": {
    "name": "ipStaticRouteDest",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.8.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The destination IP address for this static route. The value 0.0.0.0 denotes a default route."
  },
  "ipStaticRouteMask": {
    "name": "ipStaticRouteMask",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.8.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The mask associated with the corresponding instance of ipStaticRouteDest. This is the value to be logical-ANDed with a destination address before being compared to the value of ipStaticRouteDest. When the value of the corresponding instance of ipStaticRouteDest is 0.0.0.0, the value of this object will also be 0.0.0.0."
  },
  "ipStaticRouteNextHop": {
    "name": "ipStaticRouteNextHop",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.8.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address of the next hop for this static route."
  },
  "ipStaticRouteEnable": {
    "name": "ipStaticRouteEnable",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.8.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "enabled",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not this static route is currently 'enabled.' A disabled static route entry retains its values, but will not appear in the active IP routing table."
  },
  "ipStaticRoutePriority": {
    "name": "ipStaticRoutePriority",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.8.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 20,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the priority (administrative distance) for this static route. A smaller value represents a higher priority route, while a larger value represents a lower priority route. Routes learned via RIP have a priority of 50."
  },
  "ipStaticRouteMetric": {
    "name": "ipStaticRouteMetric",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.8.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The routing metric for this static route."
  },
  "ipStaticRouteAdvertise": {
    "name": "ipStaticRouteAdvertise",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.8.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "advertise": 1,
          "dontAdvertise": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "dontAdvertise",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not this static route is advertised (redistributed) via RIP."
  },
  "ipStaticRouteStatus": {
    "name": "ipStaticRouteStatus",
    "oid": "1.3.6.1.4.1.304.1.3.1.4.8.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "valid",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of this entry. Setting this object to the value 'invalid(2)' has the effect of invalidating the corresponding entry in the ipStaticRouteTable. That is, it effectively disassociates the mapping identified with said entry. It is an implementation-specific matter as to whether the agent removes an invalidated entry from the table. Accordingly, management stations must be prepared to receive from agents tabular information corresponding to entries not currently in use. Proper interpretation of such entries requires examination of the relevant ipStaticRouteStatus object."
  },
  "ripEnTxEnable": {
    "name": "ripEnTxEnable",
    "oid": "1.3.6.1.4.1.304.1.3.1.5.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not transmission of RIP packets on the device's Ethernet interface will be enabled when the device is next restarted. The value of this object is always 'disabled(2)' on Netopia Internet Router models 430, 435, 630, and 635; a network management station will receive a 'badValue' response if it attempts to change the value of this object on one of these models."
  },
  "ripEnRxEnable": {
    "name": "ripEnRxEnable",
    "oid": "1.3.6.1.4.1.304.1.3.1.5.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not reception of RIP packets will be enabled on the Ethernet interface when the device is next restarted. The value of this object is always 'disabled(2)' on Netopia Internet Router models 430, 435, 630, and 635; a network management station will receive a 'badValue' response if it attempts to change the value of this object on one of these models."
  },
  "atportXTable": {
    "name": "atportXTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries providing additional information for the device's AppleTalk ports."
  },
  "atportXEntry": {
    "name": "atportXEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "atportXIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry containing additional information one of the device's AppleTalk ports."
  },
  "atportXIndex": {
    "name": "atportXIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The AppleTalk router port to which this entry applies. The port identified by a particular value of this index is the same port as is identified by the same value of the atportIndex object in the atportTable in RFC 1243."
  },
  "atportXHide": {
    "name": "atportXHide",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "visible": 1,
          "hidden": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not this AppleTalk port will be hidden by the router. Hiding an AppleTalk port prevents the router from forwarding AppleTalk Name Binding Protocol (NBP) responses from that port to other ports. The effect of hiding a port is that devices on the port are invisible via NBP to devices elsewhere on the network."
  },
  "atportXSeed": {
    "name": "atportXSeed",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "softseed": 2,
          "hardseed": 3,
          "noseed": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates how this AppleTalk port will seed itself at startup. If the value of this object is 'softseed(2)', the router will get the port's network seed configuration from another router on the cable or will act as the seed router if no other router is connected. If the value of this object is 'hardseed(3)', the router will act as the seed router for the port and disable the port if another router is connected with a different network configuration. If the value of this object is 'noseed(4)', the router will startup the port only if another router is connected to the cable. The value of this object will be 'other(1)' for ports that are not native AppleTalk ports. The value of this object is always 'softseed(2)' on Netopia Internet Router models 430, 435, 630, and 635; a network management station will receive a 'badValue' response if it attempts to change the value of this object on one of these models."
  },
  "atportZoneTable": {
    "name": "atportZoneTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The table of zone information for ports. The atportZoneTable object supports 'conceptual row creation' according to section 3.2(3) of RFC 1212: To add a new row to the atportZoneTable, a management station must provide a value for the new instance of the atportZoneDefault object, and may, in addition, provide values for any or all of the remaining object instances in the new row. If no values are supplied for the corresponding instances of the atportZonePort and atportZoneName objects, their values will be derived from the atportZoneDefault object instance. If no value is supplied for the corresponding instance of the atportZoneStatus object, its value will default to 'valid(1)'. Except on Netopia Internet Router models 430, 435, 630, and 635, up to 255 rows may be added to this table for each AppleTalk port attached to an extended AppleTalk network, such as EtherTalk Phase 2; on Netopia Internet Router models 430, 435, 630, and 635, only a single row may be added to this table for each AppleTalk port attached to an extended AppleTalk network. On all Netopia Internet Router models, only a single row may be added to this table for AppleTalk ports attached to non-extended AppleTalk networks."
  },
  "atportZoneEntry": {
    "name": "atportZoneEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "atportZonePort",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "atportZoneName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry of zone information for a port."
  },
  "atportZonePort": {
    "name": "atportZonePort",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "An integer representing the port to which this zone belongs. The port identified by a particular value of this object is the same port as is identified by the same value of atportIndex."
  },
  "atportZoneName": {
    "name": "atportZoneName",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A zone name configured for the AppleTalk port identified by the corresponding instance of atportZonePort."
  },
  "atportZoneDefault": {
    "name": "atportZoneDefault",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "default": 1,
          "notDefault": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The zone is marked as 'default(1)' if it is the default zone for the network attached to this port, and 'notDefault(2)' if it is not. Exactly one zone must be marked as 'default(1)' for each port for which zones are configured."
  },
  "atportZoneStatus": {
    "name": "atportZoneStatus",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of this zone entry. Setting this object to the value 'invalid(2)' has the effect of invalidating the corresponding entry in the atportZoneTable. That is, it effectively disassociates the mapping identified with said entry. It is an implementation-specific matter as to whether the agent removes an invalidated entry from the table. Accordingly, management stations must be prepared to receive from agents tabular information corresponding to entries not currently in use. Proper interpretation of such entries requires examination of the relevant atportZoneStatus object."
  },
  "atportTrafficTable": {
    "name": "atportTrafficTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of traffic statistics for the router ports."
  },
  "atportTrafficEntry": {
    "name": "atportTrafficEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "atportTrafficIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The traffic statistics for a single router port."
  },
  "atportTrafficIndex": {
    "name": "atportTrafficIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The AppleTalk router port to which this entry applies. The AppleTalk router port identified by a particular value of this index is the same AppleTalk router port as is identified by the same value of atportIndex."
  },
  "atportTrafficRxBytes": {
    "name": "atportTrafficRxBytes",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes the AppleTalk router has received from this port."
  },
  "atportTrafficRxPackets": {
    "name": "atportTrafficRxPackets",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets the AppleTalk router has received from this port."
  },
  "atportTrafficTxBytes": {
    "name": "atportTrafficTxBytes",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes the AppleTalk router has transmitted to this port."
  },
  "atportTrafficTxPackets": {
    "name": "atportTrafficTxPackets",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets the AppleTalk router has transmitted to this port."
  },
  "deviceNBPObject": {
    "name": "deviceNBPObject",
    "oid": "1.3.6.1.4.1.304.1.3.1.6.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The object portion of the AppleTalk Name Binding Protocol (NBP) name used by device-resident service providers to advertise their services using NBP. Setting this object to a zero-length OCTET STRING will restore this object to its default value. The value of this object is set by the device on startup on Netopia Internet Router models 430, 435, 630, and 635; a network management station will receive a 'badValue' response if it attempts to change the value of this object on one of these models."
  },
  "macipSupport": {
    "name": "macipSupport",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 1,
          "enabled": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not MacIP support will be enabled when the device is restarted."
  },
  "macipFirstStaticIpAddr": {
    "name": "macipFirstStaticIpAddr",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the first static MacIP client IP address. The range of addresses identified by the values of this object and the macipNumStaticAddrs object must be a subset of the range of addresses identified by the values of the dhcpFirstClientAddr and dhcpNumClientAddrs objects in the dhcpParams group -- i.e., MacIP static IP addresses are drawn from the device's pool of DHCP addresses."
  },
  "macipNumStaticAddrs": {
    "name": "macipNumStaticAddrs",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the total number of static IP addresses that the device will make available to clients of the MacIP gateway. The value of this object may not exceed a limit equal to the lesser of the value of the dhcpMaxClientAddrs object and the number of host addresses between macipFirstStaticIpAddr and the end of the device's pool of DHCP addresses, inclusive."
  },
  "macipUnusedDynamicAddrs": {
    "name": "macipUnusedDynamicAddrs",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates the current number of unused dynamic addresses available to MacIP gateway clients. The value of this object will be the same as the value of the dhcpUnassignedClientAddrs object."
  },
  "macipAssignRequests": {
    "name": "macipAssignRequests",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates the number of ASSIGN requests received by the MacIP gateway."
  },
  "macipServerRequests": {
    "name": "macipServerRequests",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates the number of SERVER requests received by the MacIP gateway."
  },
  "macipRefusedAssignRequests": {
    "name": "macipRefusedAssignRequests",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates the number of times that the gateway was unable to assign a dynamic IP address to a client because all available dynamic addresses were in use."
  },
  "macipBadRequests": {
    "name": "macipBadRequests",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates the number of unsupported and/or unknown requests received by the MacIP gateway. These include NAME, RELEASE, and STATIC requests as well as requests containing unknown request codes."
  },
  "macipForwardedAtFrames": {
    "name": "macipForwardedAtFrames",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of frames that the MacIP gateway received from the AppleTalk network and forwarded to the IP network."
  },
  "macipForwardedAtOctets": {
    "name": "macipForwardedAtOctets",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of octets contained in the frames counted by the macipForwardedAtFrames object."
  },
  "macipDroppedAtFrames": {
    "name": "macipDroppedAtFrames",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that the MacIP gateway received from the AppleTalk network that the gateway was unable to forward to the IP network."
  },
  "macipForwardedIpFrames": {
    "name": "macipForwardedIpFrames",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.16",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of frames that the MacIP gateway received from the IP network and forwarded to the AppleTalk network."
  },
  "macipForwardedIpOctets": {
    "name": "macipForwardedIpOctets",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.17",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of octets contained in the frames counted by the macipForwardedIpFrames object."
  },
  "macipDroppedIpFrames": {
    "name": "macipDroppedIpFrames",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.18",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames that the MacIP gateway received from the IP network that the gateway was unable to forward to the AppleTalk network."
  },
  "macipClientTable": {
    "name": "macipClientTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.19",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries containing information about the device's MacIP clients."
  },
  "macipClientEntry": {
    "name": "macipClientEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.19.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "macipClientIpAddr",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry containing information about one of the device's MacIP clients."
  },
  "macipClientIpAddr": {
    "name": "macipClientIpAddr",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.19.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address assigned to this MacIP client."
  },
  "macipClientIpAddrType": {
    "name": "macipClientIpAddrType",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.19.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "static": 1,
          "dynamic": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether the IP address assigned to this MacIP client is a static or dynamic IP address."
  },
  "macipClientAtAddr": {
    "name": "macipClientAtAddr",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.19.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DdpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The AppleTalk address of this MacIP client."
  },
  "macipClientIdleTime": {
    "name": "macipClientIdleTime",
    "oid": "1.3.6.1.4.1.304.1.3.1.7.19.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The length of time in seconds that this MacIP client has been idle."
  },
  "dhcpConfig": {
    "name": "dhcpConfig",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1",
    "class": "objectidentity"
  },
  "dhcpInfo": {
    "name": "dhcpInfo",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.2",
    "class": "objectidentity"
  },
  "dhcpSupport": {
    "name": "dhcpSupport",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not DHCP support will be enabled when the device is next restarted."
  },
  "dhcpFirstClientAddr": {
    "name": "dhcpFirstClientAddr",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the first IP address available for assignment to DHCP clients. The range of addresses identified by the values of this object and the dhcpNumClientAddrs object must be a subset of the IP subnet configured for the device's Ethernet port. Note that the range of addresses identified by the values of this object and the dhcpNumClientAddrs object identify a pool of IP addresses that the device uses for all its various IP address serving functions, which include not only DHCP, but also BOOTP, MacIP/KIP (both static and dynamic), and PPP IPCP (WAN client) address assignment."
  },
  "dhcpNumClientAddrs": {
    "name": "dhcpNumClientAddrs",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the initial size, when the device is next restarted, of the IP address serving pool. The value of this object may not exceed the value of the dhcpMaxClientAddrs object."
  },
  "dhcpMaxClientAddrs": {
    "name": "dhcpMaxClientAddrs",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates the maximum value of the dhcpNumClientAddrs object."
  },
  "dhcpServerName": {
    "name": "dhcpServerName",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 63
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The name the DHCP server uses to identify itself to DHCP clients."
  },
  "dhcpOptions": {
    "name": "dhcpOptions",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6",
    "class": "objectidentity"
  },
  "dhcpBootpSupport": {
    "name": "dhcpBootpSupport",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the device will service BOOTP requests when the device is next restarted."
  },
  "dhcpOptionTable": {
    "name": "dhcpOptionTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries containing information about the DHCP options served to DHCP clients."
  },
  "dhcpOptionEntry": {
    "name": "dhcpOptionEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "dhcpOptionCode",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry containing information about one of the DHCP options served to DHCP clients."
  },
  "dhcpOptionCode": {
    "name": "dhcpOptionCode",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "DHCP Options and BOOTP Vendor Extensions, RFC 1533",
    "status": "mandatory",
    "description": "The option code for the DHCP option described by this entry."
  },
  "dhcpOptionName": {
    "name": "dhcpOptionName",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The name of the DHCP option described by this entry."
  },
  "dhcpOptionValueObject": {
    "name": "dhcpOptionValueObject",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The authoritatively-assigned name of the MIB object that is used to configure the value served to clients requesting the DHCP option described by this entry."
  },
  "dhcpOptionStatus": {
    "name": "dhcpOptionStatus",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "beingServed": 1,
          "notBeingServed": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the DHCP option described by this entry is currently being served to DHCP clients."
  },
  "dhcpDefaultGateway": {
    "name": "dhcpDefaultGateway",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The router IP address sent to clients requesting the Router Option (DHCP option code 3). The default value for this object will be the IP address of the device's default gateway if that address identifies a router on the DHCP client subnet; otherwise, the default value for this object will be the device's IP address on the DHCP client subnet."
  },
  "dhcpDNSServerTable": {
    "name": "dhcpDNSServerTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries corresponding to the Domain Name System name servers in the list of such servers sent to DHCP clients requesting the Domain Name Server Option (DHCP option code 6). The default values for the entries in this table are the values of the entries, if any, in the ipDNSServerTable. This table supports 'conceptual row creation' according to section 3.2(3) of RFC 1212: To add a new row to this table, a management station must provide a value for the new instance of the dhcpDNSServerAddress object, and may, in addition, provide values for any or all of the remaining read-write object instances in the new row. If no value is supplied for the corresponding instance of the dhcpDNSServerStatus object, its value will default to 'valid(1)'."
  },
  "dhcpDNSServerEntry": {
    "name": "dhcpDNSServerEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "dhcpDNSServerIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry corresponding to a Domain Name System name server in the list of such servers sent to DHCP clients requesting the Domain Name Server Option (DHCP option code 6)."
  },
  "dhcpDNSServerIndex": {
    "name": "dhcpDNSServerIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each Domain Name System name server in the list of such servers to be sent to DHCP clients requesting the Domain Name Server Option (DHCP option code 6). The value of this object ranges between one and the number of servers in the list. Servers are listed in order of preference: A server with a lower-valued dhcpDNSServerIndex is preferred over a server with a higher-valued dhcpDNSServerIndex."
  },
  "dhcpDNSServerAddress": {
    "name": "dhcpDNSServerAddress",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP address of the Domain Name System name server described by this entry."
  },
  "dhcpDNSServerStatus": {
    "name": "dhcpDNSServerStatus",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of this entry. Setting this object to the value 'invalid(2)' has the effect of invalidating the corresponding entry in the dhcpDNSServerTable. That is, it effectively disassociates the mapping identified with said entry. It is an implementation-specific matter as to whether the agent removes an invalidated entry from the table. Accordingly, management stations must be prepared to receive from agents tabular information corresponding to entries not currently in use. Proper interpretation of such entries requires examination of the relevant dhcpDNSServerStatus object."
  },
  "dhcpDomainName": {
    "name": "dhcpDomainName",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The domain name sent to DHCP clients requesting the Domain Name Option (DHCP option code 15). The default value for this object is the value of the ipDomainName object."
  },
  "dhcpNetBiosNameServer": {
    "name": "dhcpNetBiosNameServer",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the value of the NetBIOS over TCP/IP Name Server Option (DHCP option code 44) to be sent to DHCP clients."
  },
  "dhcpNetBiosTcpNodeType": {
    "name": "dhcpNetBiosTcpNodeType",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "nodeTypeB": 1,
          "nodeTypeP": 2,
          "nodeTypeM": 4,
          "nodeTypeH": 8
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the value of the NetBIOS over TCP/IP Node Type Option (DHCP option code 46) to be sent to DHCP clients."
  },
  "dhcpNetBiosTcpScope": {
    "name": "dhcpNetBiosTcpScope",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.1.6.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the value of the NetBIOS over TCP/IP Scope Option (DHCP option code 47) to be sent to DHCP clients."
  },
  "dhcpUnassignedClientAddrs": {
    "name": "dhcpUnassignedClientAddrs",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates the number of unassigned IP addresses in the device's IP address serving pool."
  },
  "dhcpClientTable": {
    "name": "dhcpClientTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries containing information about the device's dhcp clients."
  },
  "dhcpClientEntry": {
    "name": "dhcpClientEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "dhcpClientIpAddr",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry containing information about one of the device's dhcp clients."
  },
  "dhcpClientIpAddr": {
    "name": "dhcpClientIpAddr",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address assigned to this DHCP client."
  },
  "dhcpClientIdentifier": {
    "name": "dhcpClientIdentifier",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of the Client Identifier Option (DHCP option code 61) supplied by this DHCP client."
  },
  "dhcpClientState": {
    "name": "dhcpClientState",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "offered": 1,
          "leased": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The status of the IP address assignment to this DHCP client. The value 'offered(1)' indicates that the IP address has been offered to, but not accepted by, this DHCP client. The value 'leased(2)' indicates that the IP address has been offered to and accepted by this DHCP client."
  },
  "dhcpClientTimeLeft": {
    "name": "dhcpClientTimeLeft",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The length of time in seconds remaining on the IP address lease to this DHCP client."
  },
  "dhcpClientType": {
    "name": "dhcpClientType",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "dhcp": 2,
          "bootp": 3,
          "macip": 4,
          "pppIpcp": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates the type of client to which this IP address was assigned."
  },
  "dhcpMRBindingTable": {
    "name": "dhcpMRBindingTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries containing information about the most recent binding of each of the IP addresses in the device's DHCP address pool to a DHCP client."
  },
  "dhcpMRBindingEntry": {
    "name": "dhcpMRBindingEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "dhcpMRBindingIpAddr",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry containing information about the most recent binding of one of the IP addresses in the device's DHCP address pool to a DHCP client."
  },
  "dhcpMRBindingIpAddr": {
    "name": "dhcpMRBindingIpAddr",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address for which this entry describes the most recent binding to a DHCP client."
  },
  "dhcpMRBindingClientIdentifier": {
    "name": "dhcpMRBindingClientIdentifier",
    "oid": "1.3.6.1.4.1.304.1.3.1.8.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of the Client Identifier Option (DHCP option 61) specified by the client to which the IP address identified by this entry was most recently bound via DHCP. A zero-length OCTET STRING value indicates that the IP address identified by this entry has never been bound to a DHCP client."
  },
  "aurpConfig": {
    "name": "aurpConfig",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1",
    "class": "objectidentity"
  },
  "aurpInfo": {
    "name": "aurpInfo",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2",
    "class": "objectidentity"
  },
  "aurpTunCfgTable": {
    "name": "aurpTunCfgTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries providing information for configuring the device's AURP tunnels when the device is next restarted."
  },
  "aurpTunCfgEntry": {
    "name": "aurpTunCfgEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "aurpTunCfgPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry providing information for configuring one of the device's AURP tunnels when the device is next restarted."
  },
  "aurpTunCfgPortIndex": {
    "name": "aurpTunCfgPortIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The AppleTalk port associated with the AURP tunnel. The AppleTalk port identified by a particular value of this object is the same port as is identified by the same value of the atportIndex object."
  },
  "aurpTunCfgSupport": {
    "name": "aurpTunCfgSupport",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not AURP support will be enabled when the device is next restarted."
  },
  "aurpTunCfgAcceptAnyPartner": {
    "name": "aurpTunCfgAcceptAnyPartner",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "acceptAnyPartner": 1,
          "dontAcceptAnyPartner": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the device will accept a connection from an AURP partner for which there is no entry in the aurpCfgPartnerTable."
  },
  "aurpTunCfgNetworkRemapping": {
    "name": "aurpTunCfgNetworkRemapping",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not network number remapping will be enabled when the device is next restarted."
  },
  "aurpTunCfgClustering": {
    "name": "aurpTunCfgClustering",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not clustering will be enabled when the device is next restarted. Because clustering assumes network number remapping, the value of this object is meaningful only if the value of the aurpTunCfgNetworkRemapping object is 'enabled(1)'."
  },
  "aurpTunCfgHopCountReduction": {
    "name": "aurpTunCfgHopCountReduction",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not hop count reduction will be enabled when the device is next restarted. Because hop count reduction assumes network number remapping, the value of this object is meaningful only if the value of the aurpTunCfgNetworkRemapping object is 'enabled(1)'."
  },
  "aurpTunCfgLastHeardFromTimeout": {
    "name": "aurpTunCfgLastHeardFromTimeout",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UInteger",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 90,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of seconds to wait after last hearing from the remote router before sending a tickle. If the value of this object exceeds 120 seconds (two minutes), and the device has not heard from the remote router for at least that long, the device will send a tickle to the remote router before forwarding it a packet. The value zero is equivalent to an infinite timeout."
  },
  "aurpRemapRangeCfgTable": {
    "name": "aurpRemapRangeCfgTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries providing the AppleTalk network address ranges reserved for use in remapping imported networks on the device's AURP tunnels when the device is next restarted."
  },
  "aurpRemapRangeCfgEntry": {
    "name": "aurpRemapRangeCfgEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "aurpRemapRangeCfgPortIndex",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "aurpRemapRangeCfgIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry providing an AppleTalk network address range reserved for use in remapping imported networks on one of the device's AURP tunnels when the device is next restarted."
  },
  "aurpRemapRangeCfgPortIndex": {
    "name": "aurpRemapRangeCfgPortIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The AppleTalk port associated with the AURP tunnel for which this entry describes an AppleTalk network number range that will be reserved for use in remapping imported networks when the device is next restarted. The AppleTalk port identified by a particular value of this object is the same port that is identified by the same value of the atportIndex object."
  },
  "aurpRemapRangeCfgIndex": {
    "name": "aurpRemapRangeCfgIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each of the AppleTalk network number ranges reserved for use in remapping imported networks on this tunnel when the device is next restarted."
  },
  "aurpRemapRangeCfgNetStart": {
    "name": "aurpRemapRangeCfgNetStart",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ATNetworkNumber",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The first AppleTalk network number of the range of network numbers reserved for remapping imported networks."
  },
  "aurpRemapRangeCfgNetEnd": {
    "name": "aurpRemapRangeCfgNetEnd",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ATNetworkNumber",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The last AppleTalk network number of the range of network numbers reserved for remapping imported networks."
  },
  "aurpCfgPartnerTable": {
    "name": "aurpCfgPartnerTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries containing information about the AURP partners to which the device can place connections and/or from which the device will accept connections. The aurpCfgPartnerTable object supports 'conceptual row creation' according to section 3.2(3) of RFC 1212: To add a new row to the aurpCfgPartnerTable, a management station must provide a value for the new instance of the aurpCfgPartnerInitiateConnection object, and may, in addition, provide values for any or all of the remaining object instances in the new row that have read-write ACCESS. If no value is supplied for the corresponding instance of the aurpCfgPartnerStatus object, its value will default to 'valid(1)'. The value of the instance of the aurpCfgPartnerIpAddr object in a newly created row is always the unknown IP address 0.0.0.0."
  },
  "aurpCfgPartnerEntry": {
    "name": "aurpCfgPartnerEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "aurpCfgPartnerPortIndex",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "aurpCfgPartnerName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry containing information about one of the AURP partners to which the device can initiate a connection and/or from which the device will accept a connection."
  },
  "aurpCfgPartnerPortIndex": {
    "name": "aurpCfgPartnerPortIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The AppleTalk port associated with the AURP tunnel for which this entry describes a respected AURP partner. The AppleTalk port identified by a particular value of this object is the same port as is identified by the same value of the atportIndex object."
  },
  "aurpCfgPartnerName": {
    "name": "aurpCfgPartnerName",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HostNameOrIpAddr",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The name of this AURP partner. The value of this object can be a fully- or partially-qualified domain name system (dns) name, or it can be an IP address in the familiar 'dotted-quad' notation. If the value of this object is a fully- or partially-qualified dns name, the device will attempt to use the Domain Name System to convert the name to an IP address before initiating a connection with this AURP partner."
  },
  "aurpCfgPartnerIpAddr": {
    "name": "aurpCfgPartnerIpAddr",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address of this AURP partner."
  },
  "aurpCfgPartnerInitiateConnection": {
    "name": "aurpCfgPartnerInitiateConnection",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "initiate": 1,
          "dontInitiate": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the device will attempt to initiate a connection to this AURP partner when the device is next restarted."
  },
  "aurpCfgPartnerStatus": {
    "name": "aurpCfgPartnerStatus",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.1.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the status of this entry. Setting the value of this object to 'invalid(2)' has the effect of invalidating the corresponding entry in the aurpCfgPartnerTable. Whether an agent removes an invalidated entry from the table is an implementation-specific matter. Accordingly, management stations must be prepared to receive tabular information from agents that correspond to entries not currently in use. Proper interpretation of such entries requires examination of the relevant aurpCfgPartnerStatus object."
  },
  "aurpTunnelTable": {
    "name": "aurpTunnelTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries containing information about the device's AURP tunnels."
  },
  "aurpTunnelEntry": {
    "name": "aurpTunnelEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "aurpTunnelPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry containing information about one of the device's AURP tunnels."
  },
  "aurpTunnelPortIndex": {
    "name": "aurpTunnelPortIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The AppleTalk port associated with this tunnel. The AppleTalk port identified by a particular value of this object is the same port as is identified by the same value of the atportIndex object."
  },
  "aurpTunnelPortType": {
    "name": "aurpTunnelPortType",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "ip": 2,
          "serialPpp": 3,
          "serialNonStandard": 4,
          "frameRelay": 5,
          "x25": 6,
          "osi": 7,
          "decnetIV": 8,
          "ipx": 9
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The type of the foreign network underlying the AURP tunnel."
  },
  "aurpTunnelStatus": {
    "name": "aurpTunnelStatus",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "hasActiveConnections": 2,
          "noActiveConnections": 3,
          "inactive": 4,
          "inactiveLoopDetected": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The operational status of this AURP tunnel."
  },
  "aurpTunnelAcceptAnyPartner": {
    "name": "aurpTunnelAcceptAnyPartner",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "accept": 1,
          "dontAccept": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether or not the device will accept connections on this tunnel from AURP partners for which there was no entry in the aurpCfgPartnerTable when the device was last restarted."
  },
  "aurpTunnelNetworkRemapping": {
    "name": "aurpTunnelNetworkRemapping",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 1,
          "inactive": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether or not network number remapping is enabled on this tunnel."
  },
  "aurpTunnelClustering": {
    "name": "aurpTunnelClustering",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 1,
          "inactive": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether or not clustering of remapped networks is enabled on this tunnel."
  },
  "aurpTunnelHopCountReduction": {
    "name": "aurpTunnelHopCountReduction",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 1,
          "inactive": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether or not hop count reduction is enabled on this tunnel."
  },
  "aurpTunnelDomainIdentifier": {
    "name": "aurpTunnelDomainIdentifier",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The domain identifier associated with this tunnel."
  },
  "aurpTunnelOpenRequests": {
    "name": "aurpTunnelOpenRequests",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Open Request packets that have been received on this tunnel."
  },
  "aurpTunnelRouterDowns": {
    "name": "aurpTunnelRouterDowns",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Router Down packets that have been received on this tunnel."
  },
  "aurpTunnelRemapErrors": {
    "name": "aurpTunnelRemapErrors",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of remapping-specific errors that have occurred on this tunnel."
  },
  "aurpTunnelClusterErrors": {
    "name": "aurpTunnelClusterErrors",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of clustering-specific errors that have occurred on this tunnel."
  },
  "aurpTunnelBrokenConnections": {
    "name": "aurpTunnelBrokenConnections",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times a point-to-point connection on this tunnel has been broken or dropped."
  },
  "aurpTunnelInvalidVersionErrors": {
    "name": "aurpTunnelInvalidVersionErrors",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets with invalid version errors received on this tunnel."
  },
  "aurpTunnelAuthenticationErrors": {
    "name": "aurpTunnelAuthenticationErrors",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of authentication errors received on this tunnel."
  },
  "aurpConnectionTable": {
    "name": "aurpConnectionTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries containing information about the device's AURP connections."
  },
  "aurpConnectionEntry": {
    "name": "aurpConnectionEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "aurpConnectionPortIndex",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "aurpConnectionIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry describing one of the device's AURP connections."
  },
  "aurpConnectionPortIndex": {
    "name": "aurpConnectionPortIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The AppleTalk port associated with this connection. The AppleTalk port identified by a particular value of this object is the same port as is identified by the same value of the atportIndex object. The value of this object identifies the same AURP tunnel as is identified by the same value of aurpTunnelPortIndex."
  },
  "aurpConnectionIndex": {
    "name": "aurpConnectionIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each connection on this port."
  },
  "aurpConnectionAddress": {
    "name": "aurpConnectionAddress",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The address of the remote router for this connection. This address is dependent on the underlying network system as indicated by the corresponding instance of aurpTunnelPortType."
  },
  "aurpConnectionSentRIs": {
    "name": "aurpConnectionSentRIs",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Routing Information packets that have been sent on this connection."
  },
  "aurpConnectionRecvRIs": {
    "name": "aurpConnectionRecvRIs",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Routing Information packets that have been received on this connection."
  },
  "aurpConnectionSentZIs": {
    "name": "aurpConnectionSentZIs",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Zone Information packets that have been sent on this connection."
  },
  "aurpConnectionRecvZIs": {
    "name": "aurpConnectionRecvZIs",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Zone Information packets that have been received on this connection."
  },
  "aurpConnectionSentGZNs": {
    "name": "aurpConnectionSentGZNs",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Get Zone Nets Request packets that have been sent on this connection."
  },
  "aurpConnectionRecvGZNs": {
    "name": "aurpConnectionRecvGZNs",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Get Zone Nets Request packets that have been received on this connection."
  },
  "aurpConnectionSentGDZLs": {
    "name": "aurpConnectionSentGDZLs",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Get Domain Zone List Request packets that have sent on this connection."
  },
  "aurpConnectionRecvGDZLs": {
    "name": "aurpConnectionRecvGDZLs",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Get Domain Zone List Request packets that have received on this connection."
  },
  "aurpConnectionBadSequence": {
    "name": "aurpConnectionBadSequence",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of unexpected sequence numbers detected on this connection."
  },
  "aurpConnectionUpdateSendingRate": {
    "name": "aurpConnectionUpdateSendingRate",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The rate at which routing table updates are sent on this connection, in seconds."
  },
  "aurpConnectionLastHeardFromTimeout": {
    "name": "aurpConnectionLastHeardFromTimeout",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.2.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of seconds to wait after last hearing from the remote router before sending a tickle."
  },
  "aurpRemapRangeTable": {
    "name": "aurpRemapRangeTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The list of tunnel remap ranges for this router. This contains only one entry for each port in most cases."
  },
  "aurpRemapRangeEntry": {
    "name": "aurpRemapRangeEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "aurpRemapRangePortIndex",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "aurpRemapRangeNetStart",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The description of one of the remap ranges on this router."
  },
  "aurpRemapRangePortIndex": {
    "name": "aurpRemapRangePortIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The AppleTalk port associated with this remap range."
  },
  "aurpRemapRangeNetStart": {
    "name": "aurpRemapRangeNetStart",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ATNetworkNumber",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The first AppleTalk network address in the range of network addresses to be used for remapping imported networks."
  },
  "aurpRemapRangeNetEnd": {
    "name": "aurpRemapRangeNetEnd",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ATNetworkNumber",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The last AppleTalk network address in the range of network addresses to be used for remapping imported networks."
  },
  "aurpRemapRangeRouterAddress": {
    "name": "aurpRemapRangeRouterAddress",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The address of the router for which this remap range applies. A null string indicates the remap range will be used for all connections on this port."
  },
  "aurpRemapTable": {
    "name": "aurpRemapTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The list of remapped networks."
  },
  "aurpRemapEntry": {
    "name": "aurpRemapEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "aurpRemapPortIndex",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "aurpRemapNetStart",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The description of an imported, remapped network."
  },
  "aurpRemapPortIndex": {
    "name": "aurpRemapPortIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The AppleTalk port associated with this remapped network."
  },
  "aurpRemapNetStart": {
    "name": "aurpRemapNetStart",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ATNetworkNumber",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The first AppleTalk network address of the remap range for this imported network."
  },
  "aurpRemapNetEnd": {
    "name": "aurpRemapNetEnd",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ATNetworkNumber",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The last AppleTalk network address of the remap range for this imported network."
  },
  "aurpRemapUIDI": {
    "name": "aurpRemapUIDI",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The domain identifier portion of the unique identifier associated with the imported network that is being remapped."
  },
  "aurpRemapUINetStart": {
    "name": "aurpRemapUINetStart",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ATNetworkNumber",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The first AppleTalk network address of the range portion of the unique identifier associated with the imported network that is being remapped."
  },
  "aurpRemapUINetEnd": {
    "name": "aurpRemapUINetEnd",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ATNetworkNumber",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The last AppleTalk network address of the range portion of the unique identifier associated with the imported network that is being remapped."
  },
  "aurpClusterTable": {
    "name": "aurpClusterTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries describing the device's clusters of imported, remapped networks."
  },
  "aurpClusterEntry": {
    "name": "aurpClusterEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "aurpClusterPortIndex",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "aurpClusterIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry describing one of the device's clusters of imported, remapped networks."
  },
  "aurpClusterPortIndex": {
    "name": "aurpClusterPortIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The AppleTalk port associated with this cluster."
  },
  "aurpClusterIndex": {
    "name": "aurpClusterIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each of the device's clusters on a port."
  },
  "aurpClusterNetStart": {
    "name": "aurpClusterNetStart",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ATNetworkNumber",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The first AppleTalk network address of the range associated with this cluster."
  },
  "aurpClusterNetEnd": {
    "name": "aurpClusterNetEnd",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ATNetworkNumber",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The last AppleTalk network address of the range associated with this cluster. "
  },
  "aurpClusterUIDI": {
    "name": "aurpClusterUIDI",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The domain identifier portion of the unique identifier associated with the imported networks that are being clustered."
  },
  "aurpClusterNumberOfNetworks": {
    "name": "aurpClusterNumberOfNetworks",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of imported, remapped networks contained in this cluster."
  },
  "aurpClusterHopCount": {
    "name": "aurpClusterHopCount",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of hops that this cluster is away from this router."
  },
  "aurpClusterMemberTable": {
    "name": "aurpClusterMemberTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries describing the imported, remapped network ranges comprising the device's clusters of imported, remapped networks."
  },
  "aurpClusterMemberEntry": {
    "name": "aurpClusterMemberEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "aurpClusterMemberPortIndex",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "aurpClusterMemberIndex",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "aurpClusterMemberUINetStart",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry describing a network range in one of the device's clusters of imported, remapped networks."
  },
  "aurpClusterMemberPortIndex": {
    "name": "aurpClusterMemberPortIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The AppleTalk port corresponding to the tunnel associated with this clustered network range."
  },
  "aurpClusterMemberIndex": {
    "name": "aurpClusterMemberIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The unique value associated with the cluster to which this clustered imported network range belongs. The cluster represented by a particular value of this object is the same cluster as is represented by the same value of the aurpClusterIndex object."
  },
  "aurpClusterMemberUINetStart": {
    "name": "aurpClusterMemberUINetStart",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ATNetworkNumber",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The first AppleTalk network address of the range portion of the unique identifier associated with the imported network range that is being clustered."
  },
  "aurpClusterMemberUINetEnd": {
    "name": "aurpClusterMemberUINetEnd",
    "oid": "1.3.6.1.4.1.304.1.3.1.9.2.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ATNetworkNumber",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The last AppleTalk network address of the range portion of the unique identifier associated with the imported network range that is being clustered."
  },
  "deviceRestart": {
    "name": "deviceRestart",
    "oid": "1.3.6.1.4.1.304.1.3.1.10.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dontRestart": 1,
          "restart": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The value of this object returned in response to an SNMP Get or Get-Next request is always 'dontRestart(1)'. Setting this object to the value 'restart(2)' will cause the device to restart."
  },
  "restoreDefaultConfig": {
    "name": "restoreDefaultConfig",
    "oid": "1.3.6.1.4.1.304.1.3.1.10.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dontRestore": 1,
          "restore": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The value of this object returned in response to an SNMP Get or Get-Next Request is always 'dontRestore(1)'. Setting this object to the value 'restore(2)' will cause the device to replace its running configuration stored in non-volatile memory with the default configuration stored in ROM."
  },
  "tftpParams": {
    "name": "tftpParams",
    "oid": "1.3.6.1.4.1.304.1.3.1.10.3",
    "class": "objectidentity"
  },
  "tftpMaxRetries": {
    "name": "tftpMaxRetries",
    "oid": "1.3.6.1.4.1.304.1.3.1.10.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The maximum number of times the device will retransmit a Trivial File Transfer Protocol (TFTP) packet before terminating a TFTP transfer. The total number of times TFTP will transmit a packet before terminating a TFTP transfer will be between one and the value of this object plus one."
  },
  "tftpServerName": {
    "name": "tftpServerName",
    "oid": "1.3.6.1.4.1.304.1.3.1.10.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "HostNameOrIpAddr",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The name of the TFTP server from which to read or write the device's configuration or from which to read a firmware image. The value of this object can be a fully- or partially-qualified domain name system (dns) name, or it can be an IP address in the familiar 'dotted-quad' notation. If the value of this object is a fully- or partially-qualified dns name, the device will attempt to use the Domain Name System to convert the name to an IP address before initiating a transaction with this TFTP server."
  },
  "tftpFwFileName": {
    "name": "tftpFwFileName",
    "oid": "1.3.6.1.4.1.304.1.3.1.10.3.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The file name of the firmware image file to read from the TFTP server."
  },
  "tftpConfigFileName": {
    "name": "tftpConfigFileName",
    "oid": "1.3.6.1.4.1.304.1.3.1.10.3.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The file name of the configuration file to read from or write to the TFTP server."
  },
  "tftpReadFw": {
    "name": "tftpReadFw",
    "oid": "1.3.6.1.4.1.304.1.3.1.10.3.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "readingFw": 1,
          "notReadingFw": 2,
          "readFw": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Specifying the value 'readFw(3)' in an SNMP Set Request causes the device to attempt to replace its firmware image stored in Flash-Erasable Programmable Read-Only Memory (Flash-EPROM) with one read via TFTP. The tftpServerAddr object indicates the host name or IP address of the TFTP server and the tftpFwFileName object indicates the file name of the firmware image file. The value 'readFw(3)' may be specified only if the values of this object, the tftpReadConfig object, and the tftpWriteConfig object are 'notReadingFw(2)', 'notReadingConfig(2)', and 'notWritingConfig(2)', respectively. (That is, the device supports only one TFTP transfer at a time.) The value of this object returned in response to an SNMP Get or Get-Next Request will be either 'readingFw(1)' or 'notReadingFw(2)'. The device will reset itself after successfully replacing its firmware image."
  },
  "tftpReadConfig": {
    "name": "tftpReadConfig",
    "oid": "1.3.6.1.4.1.304.1.3.1.10.3.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "readingConfig": 1,
          "notReadingConfig": 2,
          "readConfig": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Specifying the value 'readConfig(3)' in an SNMP Set Request causes the device to attempt to replace its configuration stored in non-volatile read-only memory (NVRAM) with one read via TFTP. The tftpServerAddr object indicates the host name or IP address of the TFTP server and the tftpConfigFileName object indicates the file name of the configuration file. The value 'readConfig(3)' may be specified only if the values of this object, the tftpReadFw object, and the tftpWriteConfig object are 'notReadingConfig(2)', 'notReadingFw(2)', and 'notWritingConfig(2)', respectively. (That is, the device supports only one TFTP transfer at a time.) The value of this object returned in response to an SNMP Get or Get-Next Request will be either 'readingConfig(1)' or 'notReadingConfig(2)'."
  },
  "tftpWriteConfig": {
    "name": "tftpWriteConfig",
    "oid": "1.3.6.1.4.1.304.1.3.1.10.3.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "writingConfig": 1,
          "notWritingConfig": 2,
          "writeConfig": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Specifying the value 'writeConfig(3)' in an SNMP Set Request causes the device to attempt to write its configuration stored in non-volatile read-only memory (NVRAM) to a configuration file via TFTP. The tftpServerAddr object indicates the host name or IP address of the TFTP server and the tftpConfigFileName object indicates the file name of the configuration file. The value 'writeConfig(3)' may be specified only if the values of this object, the tftpReadFw object, and the tftpReadConfig object are 'notWritingConfig(2)', 'notReadingFw(2)', and 'notReadingConfig(2)', respectively. (That is, the device supports only one TFTP transfer at a time.) The value of this object returned in response to an SNMP Get or Get-Next Request will be either 'writingConfig(1)' or 'notWritingConfig(2)'."
  },
  "tftpCurrentTransferOctets": {
    "name": "tftpCurrentTransferOctets",
    "oid": "1.3.6.1.4.1.304.1.3.1.10.3.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "UInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates the number of octets transferred during the current TFTP transfer. The value of this object is reset to zero when a TFTP transfer is initiated via a successful set of one of the tftpReadFw, tftpReadConfig, or tftpWriteConfig objects and is updated during the transfer."
  },
  "snmpIpTrapRcvrTable": {
    "name": "snmpIpTrapRcvrTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.11.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries containing information about network management stations with IP addresses that are to receive traps generated by this device over UDP. The snmpIpTrapRcvrTable object supports 'conceptual row creation' according to section 3.2(3) of RFC 1212: To add a new row to the snmpIpTrapRcvrTable, a management station must provide a value for the new instance of the snmpIpTrapRcvrCommunity object, and may, in addition, provide values for any or all of the remaining object instances in the new row with read-write ACCESS. If no value is supplied for the corresponding instance of the snmpIpTrapRcvrStatus object, its value will default to 'valid(1)'. The value of the instance of the snmpIpTrapRcvrIpAddress object in a newly created row is always the unknown IP address 0.0.0.0."
  },
  "snmpIpTrapRcvrEntry": {
    "name": "snmpIpTrapRcvrEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.11.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "snmpIpTrapRcvrName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry containing information about a single network management station with an IP address that is to receive traps generated by this device over UDP."
  },
  "snmpIpTrapRcvrName": {
    "name": "snmpIpTrapRcvrName",
    "oid": "1.3.6.1.4.1.304.1.3.1.11.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HostNameOrIpAddr",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The name of this IP trap receiver. The value of this object can be a fully- or partially-qualified domain name system (dns) name, or it can be an IP address in the familiar 'dotted-quad' notation. If the value of this object is a fully- or partially-qualified dns name, the device will attempt to use the Domain Name System to convert the name to an IP address before sending a trap to this IP trap receiver."
  },
  "snmpIpTrapRcvrCommunity": {
    "name": "snmpIpTrapRcvrCommunity",
    "oid": "1.3.6.1.4.1.304.1.3.1.11.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The community string to be specified in traps sent to this IP trap receiver."
  },
  "snmpIpTrapRcvrIpAddress": {
    "name": "snmpIpTrapRcvrIpAddress",
    "oid": "1.3.6.1.4.1.304.1.3.1.11.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address of this IP trap receiver. The value of this object is the IP address that was most recently obtained by the device from the Domain Name System for this IP trap receiver. The value of this object will be the unknown IP address 0.0.0.0 if the device has not yet attempted to obtain an IP address for this IP trap receiver, or if an error (other than a timeout) occurred during the most recent attempt to obtain an IP address for this IP trap receiver."
  },
  "snmpIpTrapRcvrStatus": {
    "name": "snmpIpTrapRcvrStatus",
    "oid": "1.3.6.1.4.1.304.1.3.1.11.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The value of this object indicates whether the associated entry in the snmpIpTrapRcvrTable is in use or not. Setting this object to the value 'invalid(2)' has the effect of invalidating the corresponding entry in the snmpIpTrapRcvrTable. It is an implementation-specific matter as to whether the agent removes an invalidated entry from the table. Accordingly, network management stations must be prepared to receive tabular information from agents that corresponds to entries not currently in use. Proper interpretation of such entries requires examination of the relevant snmpIpTrapRcvrStatus object."
  },
  "snmpUnAuthIpAddr": {
    "name": "snmpUnAuthIpAddr",
    "oid": "1.3.6.1.4.1.304.1.3.1.11.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address of the last management station that attempted to access this agent with an invalid community string. This object is used as a variable binding in an Authentication Failure Trap-PDU."
  },
  "snmpUnAuthCommunity": {
    "name": "snmpUnAuthCommunity",
    "oid": "1.3.6.1.4.1.304.1.3.1.11.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The community string specified by the most recent unauthenticated attempt to access this agent. This object is used as a variable binding in an Authentication Failure Trap-PDU."
  },
  "isdnSwitchType": {
    "name": "isdnSwitchType",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ntDms100Custom": 1,
          "att5essCustom": 2,
          "nationalIsdn1": 3,
          "etsi": 4,
          "ins64": 5,
          "oneTR6": 6,
          "ts013": 7
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The type of telephone company central office switch to which the device's ISDN Basic Rate Interface (BRI) line is connected."
  },
  "isdnDirNum1": {
    "name": "isdnDirNum1",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The device's primary ISDN directory number."
  },
  "isdnSpid1": {
    "name": "isdnSpid1",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The device's primary service profile identifier (SPID)."
  },
  "isdnDirNum2": {
    "name": "isdnDirNum2",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The device's secondary ISDN directory number."
  },
  "isdnSpid2": {
    "name": "isdnSpid2",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The device's secondary service profile identifier (SPID)."
  },
  "connProfileTable": {
    "name": "connProfileTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries providing configuration information for the device's possible on-demand WAN connections to remote peers via ISDN. This table supports 'conceptual row creation' according to section 3.2(3) of RFC 1212: To add a new row to this table, a management station may provide a value for any or all of the read-write object instances in the new row. If the management station fails to provide a value for any object instance in the new row, the instance will have the value indicated by the corresponding object's DEFVAL clause."
  },
  "connProfileEntry": {
    "name": "connProfileEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "connProfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry containing configuration information for one of the device's possible on-demand WAN connections to remote peers via ISDN."
  },
  "connProfIndex": {
    "name": "connProfIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each of the device's possible on-demand WAN connections via ISDN."
  },
  "connProfName": {
    "name": "connProfName",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The name of the remote peer described by this connection profile."
  },
  "connProfEnable": {
    "name": "connProfEnable",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "disabled",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not this connection profile is currently 'enabled.' A disabled connection profile retains its values, but may not be used to establish a connection."
  },
  "connProfPermittedUse": {
    "name": "connProfPermittedUse",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dialIn": 1,
          "dialOut": 2,
          "dialInOrOut": 3
        }
      }
    },
    "default": {
      "default": {
        "value": "dialInOrOut",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The permitted use of this connection profile. If the value of this object is 'dialIn(1)', the device will accept an incoming call from, but will not originate an outgoing call to, the remote peer described by this connection profile. If the value of this object is 'dialOut(2)', the device will originate an outgoing call to, but will not accept an incoming call from, the remote peer described by this connection profile. If the value of this object is 'dialInOrOut(3)', the device will accept an incoming call from and/or originate an outgoing call to the remote peer described by this connection profile."
  },
  "connProfIsdnDialNum": {
    "name": "connProfIsdnDialNum",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The string of digits required to place a call to the remote peer described by this connection profile."
  },
  "connProfIsdnBandwidth": {
    "name": "connProfIsdnBandwidth",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "oneBChannel": 1,
          "twoBChannels": 2,
          "dynamicBandwidth": 3,
          "twoBPreemptable": 4
        }
      }
    },
    "default": {
      "default": {
        "value": "dynamicBandwidth",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of ISDN B-channels the device will use for the connection to the remote peer described by this connection profile. If the value of this object is 'oneBChannel(1)', the connection will always use exactly one B-channel. If the value of this object is 'twoBChannels(2)', the connection will always use exactly two B-channels. If the value of this object is 'dynamicBandwidth(3)', the connection will use one or two B-channels. The number of B-channels in use at any particular point in time will depend on the traffic level to/from the remote peer and the existence of, or need to establish, a simultaneous connection to another remote peer. If the value of this object is 'twoBPreemptable(4)', the connection will normally use two B-channels. However, one B-channel may be temporarily preempted for use by an incoming or outgoing POTS call; the device will attempt to reestablish a two B-channel connection when the preempting POTS call terminates."
  },
  "connProfDialOnDemand": {
    "name": "connProfDialOnDemand",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "enabled",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the device will initiate an outgoing call to establish a connection with the remote peer described by this connection profile when it receives a packet for which the remote peer is the next hop."
  },
  "connProfDialBack": {
    "name": "connProfDialBack",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "disabled",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the device will hang up and initiate an outgoing call to the remote peer described in this connection profile upon receiving an incoming call from the remote peer."
  },
  "connProfIsdnOutDataRate": {
    "name": "connProfIsdnOutDataRate",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "place64KCall": 1,
          "place56KCall": 2,
          "placeDOVCall": 3
        }
      }
    },
    "default": {
      "default": {
        "value": "place64KCall",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The type of circuit-switched service to use when placing an outgoing call to the remote peer described by this connection profile. If the value of this object is 'place64KCall(1)', the device will place a 64K circuit-switched data call to the remote peer. If the value of this object is 'place56KCall(2)', the device will place a 56K circuit-switched data call to the remote peer. If the value of this object is 'placeDOVCall(3)', the device will place a 56K circuit-switched voice (speech) call to the remote peer."
  },
  "connProfRemIpAddr": {
    "name": "connProfRemIpAddr",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP address of the remote peer's LAN interface."
  },
  "connProfRemSubnetMask": {
    "name": "connProfRemSubnetMask",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The subnet mask of the remote peer's LAN interface."
  },
  "connProfRxRip": {
    "name": "connProfRxRip",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dontRxRip": 1,
          "rxRip": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "dontRxRip",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the device will receive RIP packets over the WAN connection from the remote peer."
  },
  "connProfTxRip": {
    "name": "connProfTxRip",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dontTxRip": 1,
          "txRip": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "dontTxRip",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the device will transmit RIP packets over the WAN connection to the remote peer. The value of this object is always 'dontTxRip(1)' on Netopia Internet Router models 430, 435, 630, and 635; a network management station will receive a 'badValue' response if it attempts to change the value of this object on one of these models."
  },
  "connProfFilterSetIndex": {
    "name": "connProfFilterSetIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the set of filters to be used to filter packets received and transmitted over the WAN connection to the remote peer. The filter set identified by a particular value of this object is the same filter set as is identified by the same value of the filterSetIndex object. The value zero indicates that no filter set is associated with this connection profile."
  },
  "connProfIdleSeconds": {
    "name": "connProfIdleSeconds",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 300,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the number of seconds during which there must be no outbound traffic over a demand connection to the remote peer for the device to clear the call. The value zero prevents the device from clearing the call due to lack of traffic. Note that the remote peer may implement its own policy that may cause the call to be cleared sooner than it would otherwise be cleared based on the value of this object."
  },
  "connProfPppMaxRecvUnit": {
    "name": "connProfPppMaxRecvUnit",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 1500,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the size of the largest PPP packet that can be received over the WAN connection with the remote peer."
  },
  "connProfPppLinkCompression": {
    "name": "connProfPppLinkCompression",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "negotiateAscendLZSCompression": 1,
          "noCompression": 2,
          "negotiateStdLZSCompression": 3
        }
      }
    },
    "default": {
      "default": {
        "value": "negotiateAscendLZSCompression",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the device will attempt to negotiate PPP link compression when establishing a connection to the remote peer. If this object has the value 'negotiateStdLZSCompression(3)', then the device will attempt to negotiate the 'standard' Stac Electronics proprietary STACKER LZS (tm) compression-decompression algorithm when establishing a connection with the remote peer. If this object has value 'negotiateAscendLZSCompression(1)', then the device will attempt to negotiate the Ascend Communications, Inc. variant of the STACKER LZS compression."
  },
  "connProfPppSendAuthProt": {
    "name": "connProfPppSendAuthProt",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "authNone": 1,
          "authPAP": 2,
          "authCHAP": 3
        }
      }
    },
    "default": {
      "default": {
        "value": "authPAP",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "reference": "PPP Authentication Protocols, RFC 1334",
    "status": "mandatory",
    "description": "Indicates the PPP authentication protocol that the device will use to authenticate itself to the remote peer described by this connection profile. If the value of this object is 'authNone(1)', the device will not authenticate itself to the remote peer. If the remote peer requests authentication, the request will be rejected, and if the remote peer requires authentication, then the connection will fail. If the value of this object is 'authPAP(2)', the device will use the Password Authentication Protocol (PAP) described in RFC 1334 to authenticate itself to the remote peer. The connProfPppSendAuthName and connProfPppSendAuthSecret objects indicate the Peer-ID and Password, respectively, that this device will send to the remote peer in PAP Authenticate-Request packets during the Authentication Phase of PPP link establishment. If the value of this object is 'authCHAP(3)', the device will use the Challenge-Handshake Authentication Protocol (CHAP) described in RFC 1334 to authenticate itself to the remote peer. The connProfPppSendAuthName object indicates the Name that the device will use to identify itself in a CHAP Response packet; the connProfPppSendAuthSecret object indicates the Secret that the device will use to compute the Response Value that it sends to the remote peer in a CHAP Response packet. If the remote peer requests the use of a different authentication protocol than the one specified by the value of this object, the request will be rejected."
  },
  "connProfPppSendAuthName": {
    "name": "connProfPppSendAuthName",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If the value of the connProfPppSendAuthProt object is 'authPAP(2)', then the value of this object is the Peer-ID that the device will send to the remote peer in PAP Authenticate-Request packets during the Authentication Phase of PPP link establishment. If the value of the connProfPppSendAuthProt object is 'authCHAP(3)', then the value of this object is the Name that the device will use to identify itself in CHAP Response packets sent to the remote peer. The value of this object is meaningless if the value of the connProfPppSendAuthProt object is 'authNone(1)'."
  },
  "connProfPppSendAuthSecret": {
    "name": "connProfPppSendAuthSecret",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If the value of the connProfPppSendAuthProt object is 'authPAP(2)', then the value of this object is the Password that the device will send to the remote peer in PAP Authenticate-Request packets during the Authentication Phase of PPP link establishment. If the value of the connProfPppSendAuthProt object is 'authCHAP(3)', then the value of this object is the Secret that the device will use to compute the Response Value that it sends to the remote peer in a CHAP Response packet. The value of this object is meaningless if the value of the connProfPppSendAuthProt object is 'authNone(1)'. Although the value of this variable may be altered by a management operation (e.g., an SNMP Set Request), its value can never be retrieved by a management operation: When read, the value of this variable is a zero-length OCTET STRING."
  },
  "connProfPppRecvAuthName": {
    "name": "connProfPppRecvAuthName",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If the value of the ansProfPppRecvAuthProt object is 'authPAP(2)', then the value of this object is the Peer-ID that the remote peer must specify in its PAP Authenticate-Request packets. If the value of the ansProfPppRecvAuthProt object is 'authCHAP(3)', then the value of this object is the Name that the remote peer must use to identify itself in its CHAP Challenge and CHAP Response packets. The value of this object is meaningless if the value of the ansProfConnProfRequired object is 'connProfNotRequired(2)' or the value of the ansProfPppRecvAuthProt object is 'authNone(1)'."
  },
  "connProfPppRecvAuthSecret": {
    "name": "connProfPppRecvAuthSecret",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If the value of the ansProfPppRecvAuthProt object is 'authPAP(2)', then the value of this object is the Password that the remote peer must specify in its PAP Authenticate-Request packets. If the value of the ansProfPppRecvAuthProt object is 'authCHAP(3)', then the value of this object is the Secret that the device will use to verify the Response Value contained in the remote peer's CHAP Response packets. The value of this object is meaningless if the value of the ansProfConnProfRequired object is 'connProfNotRequired(2)' or the value of the ansProfPppRecvAuthProt object is 'authNone(1)'. Although the value of this variable may be altered by a management operation (e.g., an SNMP Set Request), its value can never be retrieved by a management operation: When read, the value of this variable is a zero-length OCTET STRING."
  },
  "connProfStatus": {
    "name": "connProfStatus",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "valid",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of this connection profile. Setting the value of this object to 'invalid(4)' has the effect of invalidating the corresponding entry in the connProfileTable. Whether an agent removes an invalidated entry from the table is an implementation-specific matter. Accordingly, management stations must be prepared to receive tabular information from agents that correspond to entries not currently in use. Proper interpretation of such entries requires examination of the relevant connProfStatus object."
  },
  "connProfIsdnSecondDialNum": {
    "name": "connProfIsdnSecondDialNum",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.6.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The optional, second string of digits required to place a call to the remote peer described by this connection profile. This number will be dialed to place the second of two calls to the remote peer, e.g., when establishing the second link of a Multilink PPP connection. The value of this object should be a zero-length string if the number represented by the value of the connProfIsdnDialNum object should be used to place both calls to the remote peer."
  },
  "ansProfConnProfRequired": {
    "name": "ansProfConnProfRequired",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "connProfRequired": 1,
          "connProfNotRequired": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not an incoming call must match a connection profile entry in the connProfileTable. If the value of this object is 'connProfRequired(1)', incoming calls not matching a connection profile entry in the connProfileTable will be rejected. If the value of this object is 'connProfNotRequired(2)', then incoming calls not matching a connection profile entry in the connProfileTable will be accepted, and will be governed by a temporary connection profile created from the values of the following objects: ansProfIsdnBandwidth ansProfRxRip ansProfTxRip ansProfFilterSetIndex ansProfIdleSeconds ansProfPppMaxRecvUnit ansProfPppLinkCompression ansProfIsdnInForce56K If the value of this object is 'connProfNotRequired(2)', the actual value of the ansProfPppRecvAuthProt object is ignored, and the device behaves as if the value of that object is 'authNone(1)'."
  },
  "ansProfIsdnBandwidth": {
    "name": "ansProfIsdnBandwidth",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "oneBChannel": 1,
          "twoBChannels": 2,
          "dynamicBandwidth": 3,
          "twoBPreemptable": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of ISDN B-channels the device will use for incoming calls from remote peers not matching a connection profile in the connProfileTable. If the value of this object is 'oneBChannel(1)', the connection will always use exactly one B-channel. If the value of this object is 'twoBChannels(2)', the connection will always use exactly two B-channels. If the value of this object is 'dynamicBandwidth(3)', the connection will use one or two B-channels. The number of B-channels in use at any particular point in time will depend on the traffic level to/from the remote peer and the existence of, or need to establish, a simultaneous connection to another remote peer. If the value of this object is 'twoBPreemptable(4)', the connection will normally use two B-channels. However, one B-channel may be temporarily preempted for use by an incoming or outgoing POTS call; the device will attempt to reestablish a two B-channel connection when the preempting POTS call terminates."
  },
  "ansProfIsdnInForce56K": {
    "name": "ansProfIsdnInForce56K",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dontForce56K": 1,
          "force56K": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the device will ignore the data rate indicated in incoming ISDN calls and assume a data rate of 56K. If the value of this object is 'dontForce56K(1)', the device will honor the data rate indicated in incoming ISDN calls. If the value of this object is 'force56K(2)', the device will ignore the data rate indicated in incoming ISDN calls and assume a data rate of 56K. The value 'force56K(2)' may be required when a device located outside the United States receives an incoming call that originated from the United States, if the telephone company made a 56K to 64K rate adaption that is not indicated in the incoming ISDN call. The value of this object is ignored if the value of the isdnSwitchType object is 'ntDms100Custom(1)', 'att5essCustom(2)', or 'nationalIsdn1(3)'."
  },
  "ansProfRxRip": {
    "name": "ansProfRxRip",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dontRxRip": 1,
          "rxRip": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the device will receive RIP packets over a WAN connection from a remote peer established for an incoming call not matching a connection profile in the connProfileTable."
  },
  "ansProfTxRip": {
    "name": "ansProfTxRip",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dontTxRip": 1,
          "txRip": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the device will transmit RIP packets over a WAN connection to a remote peer established for an incoming call not matching a connection profile in the connProfileTable."
  },
  "ansProfFilterSetIndex": {
    "name": "ansProfFilterSetIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the set of filters to be used to filter packets received and transmitted over the WAN connection to a remote peer not matching a connection profile in the connProfileTable. The filter set identified by a particular value of this object is the same filter set as is identified by the same value of the filterSetIndex object."
  },
  "ansProfIdleSeconds": {
    "name": "ansProfIdleSeconds",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the number of seconds during which there must be no outbound traffic over a WAN connection to a remote peer not matching a connection profile in the connProfileTable for the device to clear the call. The value zero prevents the device from clearing the call due to lack of traffic. Note that the remote peer may implement its own policy that may cause the call to be cleared sooner than it would otherwise be cleared based on the value of this object."
  },
  "ansProfPppMaxRecvUnit": {
    "name": "ansProfPppMaxRecvUnit",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the size of the largest PPP packet that can be received over a WAN connection with a remote peer established for an incoming call not matching a connection profile in the connProfileTable."
  },
  "ansProfPppLinkCompression": {
    "name": "ansProfPppLinkCompression",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "negotiateAscendLZSCompression": 1,
          "noCompression": 2,
          "negotiateStdLZSCompression": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the device will attempt to negotiate PPP link compression for a WAN connection with a remote peer established for an incoming call not matching a connection profile in the connProfileTable. If this object has the value 'negotiateStdLZSCompression(3)', then the device will attempt to negotiate the 'standard' Stac Electronics proprietary STACKER LZS (tm) compression-decompression algorithm when establishing a connection with the remote peer. If this object has value 'negotiateAscendLZSCompression(1)', then the device will attempt to negotiate the Ascend Communications, Inc. variant of the STACKER LZS compression."
  },
  "ansProfPppRecvAuthProt": {
    "name": "ansProfPppRecvAuthProt",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.16",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "authNone": 1,
          "authPAP": 2,
          "authCHAP": 3
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "PPP Authentication Protocols, RFC 1334",
    "status": "mandatory",
    "description": "Indicates the PPP authentication protocol that the device will require a remote peer to use to authenticate itself when the device receives an incoming call from the remote peer. (The device never requires a remote peer to authenticate itself when the device initiates an outgoing call to a remote peer.) If the value of the ansProfConnProfRequired object is 'connProfNotRequired(2)', the device ignores the actual value of this object and behaves as if it has the value 'authNone(1)'. If the value of this object is 'authNone(1)', the device will not request the use of an authentication protocol during the Link Establishment phase of PPP link establishment, and the remote peer will not be required to authenticate itself. The device will attempt to match the remote peer's IP address with an instance of the connProfRemIpAddr object. If it successfully matches a connProfileTable entry, the connection will be governed by the parameters specified by the connProfileTable entry. If the device is unable to match a connProfileTable entry, the connection will be governed by a temporary connection profile created from the values of the following objects: ansProfIsdnBandwidth ansProfRxRip ansProfTxRip ansProfFilterSetIndex ansProfIdleSeconds ansProfPppMaxRecvUnit ansProfPppLinkCompression ansProfIsdnInForce56K If the value of this object is 'authPAP(2)', and the value of the ansProfConnProfRequired object is 'connProfRequired(1)', the device will require the remote peer to authenticate itself using the Password Authentication Protocol (PAP) described in RFC 1334. The device will attempt to match the Peer-ID and Password sent by the remote peer in its PAP Authenticate-Request packet to the connProfPppRecvAuthName and connProfPppRecvAuthSecret objects, respectively, in a connProfileTable entry. If the device successfully matches a connProfileTable entry, the call will be accepted, and the connection will be governed by the parameters specified by the connProfileTable entry. If the device is unable to match a connProfileTable entry, the call will be rejected. If the value of this object is 'authCHAP(3)', and the value of the ansProfConnProfRequired object is 'connProfRequired(1)', the device will require the remote peer to authenticate itself using the Challenge-Handshake Authentication Protocol (CHAP) described in RFC 1334. During the Authentication phase of PPP link establishment, the device will send a CHAP Challenge packet to, and expect a CHAP Response packet from, the remote peer. The ansProfChapChallengeName object indicates the Name that the device will send in its CHAP Challenge packet. The device will attempt to match the Name sent by the remote peer in its CHAP Response packet to the connProfPppRecvAuthName object in a connProfileTable entry. The device use the connProfPppRecvAuthSecret value in each matching connProfileTable entry to attempt to verify the Response Value in the remote peer's CHAP Response packet. If the device successfully matches a connProfileTable entry, the call will be accepted, and the connection will be governed by the parameters specified by the connProfileTable entry. If the device is unable to match a connProfileTable entry, the call will be rejected."
  },
  "ansProfChapChallengeName": {
    "name": "ansProfChapChallengeName",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.17",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If the value of the ansProfConnProfRequired object is 'connProfRequired(1)', and the value of the ansProfPppRecvAuthProt object is 'authCHAP(3)', then the value of this object is the Name that the device will use to identify itself in CHAP Challenge packets sent to the remote peer when the device answers an incoming call. The value of this object is meaningless if the value of the ansProfConnProfRequired object is 'connProfNotRequired(2)' or the value of the ansProfPppRecvAuthProt object is 'authNone(1)' or 'authPAP(2)'."
  },
  "schedConnTable": {
    "name": "schedConnTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.18",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries describing automatic, scheduled establishment of connections to the device's remote peers. This table supports 'conceptual row creation' according to section 3.2(3) of RFC 1212: To add a new row to this table, a management station must provide a value for the new instances of the schedConnDayMask, schedConnStartTime, schedConnDuration, and schedConnRemPeer objects, and may, in addition, provide a value for the corresponding instance of the schedConnEnable and schedConnStatus objects. If no value is supplied for the corresponding instance of the schedConnEnable object, its value will default to 'disabled(2)'; if no value is supplied for the corresponding instance of the schedConnStatus object, its value will default to 'valid(1)'."
  },
  "schedConnEntry": {
    "name": "schedConnEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.18.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "schedConnIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry containing information describing the automatic, scheduled establishment of a connection to one of the device's remote peers."
  },
  "schedConnIndex": {
    "name": "schedConnIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.18.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value that identifies this scheduled connection."
  },
  "schedConnEnable": {
    "name": "schedConnEnable",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.18.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "disabled",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the scheduled connection described by this entry is enabled."
  },
  "schedConnDayMask": {
    "name": "schedConnDayMask",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.18.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The value of this object indicates whether this entry corresponds to a one-time scheduled connection or a recurring scheduled connection, and, for a recurring connection, indicates the days of the week on which the connection will be attempted. If the value of this object is between 1 and 127, then this entry corresponds to a recurring scheduled connection that occurs weekly on one or more days of the week. The value of this object is a sum of one or more of the following values and indicates the days of the week on which the connection will be attempted: 1 Sunday 2 Monday 4 Tuesday 8 Wednesday 16 Thursday 32 Friday 64 Saturday For a recurring connection, the value of the corresponding instance of the schedConnStartTime object consists of four decimal-ASCII digits (in the form 'HHMM') that encode the start time for the connection on the specified days. If the value of this object is 128, then this entry corresponds to a one-time scheduled connection. The value of the corresponding instance of the schedConnStartTime object consists of twelve decimal-ASCII digits (in the form 'YYMMDDHHMM') that encode the date and time at which the connection will be attempted."
  },
  "schedConnStartTime": {
    "name": "schedConnStartTime",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.18.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          },
          {
            "min": 12,
            "max": 12
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The time at which the device will attempt to originate a connection with the remote peer. If the value of the schedConnDayMask object is between 1 and 127, then the value of this object consists of four decimal-ASCII digits (in the form 'HHMM') that encode the hour and minute at which the device will attempt to establish the recurring scheduled connection described by this entry. If the value of the schedConnDayMask object is 128, then the value of this object consists of twelve decimal-ASCII digits (in the form 'YYYYMMDDHHMM') that indicate the date and time at which the device will attempt to establish the one-time scheduled connection described by this entry."
  },
  "schedConnDuration": {
    "name": "schedConnDuration",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.18.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The duration of this scheduled connection in seconds."
  },
  "schedConnRemPeer": {
    "name": "schedConnRemPeer",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.18.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The value of this object identifies the remote peer with which the device will attempt to originate the scheduled connection described by this entry. The remote peer identified by a particular value of this object is the same remote peer as is identified by the same value of the connProfIndex object. The value of the connProfPermittedUse object in the connection profile for the remote peer identified by this object must be either 'dialOut(2)' or 'dialInOrOut(3)'."
  },
  "schedConnStatus": {
    "name": "schedConnStatus",
    "oid": "1.3.6.1.4.1.304.1.3.1.12.18.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "valid",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the status of this scheduled connection. Setting the value of this object to 'invalid(2)' has the effect of invalidating the corresponding entry in the schedConnTable. Whether an agent removes an invalidated entry from the table is an implementation-specific matter. Accordingly, management stations must be prepared to receive tabular information from agents that correspond to entries not currently in use. Proper interpretation of such entries requires examination of the relevant schedConnStatus object."
  },
  "consolePortSpeed": {
    "name": "consolePortSpeed",
    "oid": "1.3.6.1.4.1.304.1.3.1.13.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The speed of the console port in bits per second."
  },
  "consolePortDataBits": {
    "name": "consolePortDataBits",
    "oid": "1.3.6.1.4.1.304.1.3.1.13.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 7,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The console port's number of data bits."
  },
  "consolePortStopBits": {
    "name": "consolePortStopBits",
    "oid": "1.3.6.1.4.1.304.1.3.1.13.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "one": 1,
          "two": 2,
          "onePointFive": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The console port's number of stop bits."
  },
  "consolePortParity": {
    "name": "consolePortParity",
    "oid": "1.3.6.1.4.1.304.1.3.1.13.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "odd": 2,
          "even": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The console port's parity setting."
  },
  "consolePortRxChars": {
    "name": "consolePortRxChars",
    "oid": "1.3.6.1.4.1.304.1.3.1.13.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good characters received by the console port."
  },
  "consolePortTxChars": {
    "name": "consolePortTxChars",
    "oid": "1.3.6.1.4.1.304.1.3.1.13.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of characters transmitted by the console port."
  },
  "consolePortParityErrors": {
    "name": "consolePortParityErrors",
    "oid": "1.3.6.1.4.1.304.1.3.1.13.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of characters received by the console port with a parity error indication."
  },
  "consolePortFramingErrors": {
    "name": "consolePortFramingErrors",
    "oid": "1.3.6.1.4.1.304.1.3.1.13.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of characters received by the console port with a framing error indication."
  },
  "consolePortOverrunErrors": {
    "name": "consolePortOverrunErrors",
    "oid": "1.3.6.1.4.1.304.1.3.1.13.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of characters received by the console port with an overrun error indication."
  },
  "pcCardSlotTable": {
    "name": "pcCardSlotTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries providing information about the device's PC Card slots."
  },
  "pcCardSlotEntry": {
    "name": "pcCardSlotEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "pcCardSlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A entry providing information about one of the device's PC Card slots."
  },
  "pcCardSlotIndex": {
    "name": "pcCardSlotIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique integer for each of the device's PC Card slots."
  },
  "pcCardSlotCardPresent": {
    "name": "pcCardSlotCardPresent",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "present": 1,
          "notPresent": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether or not a PC Card is present in this PC Card slot."
  },
  "pcCardCardTable": {
    "name": "pcCardCardTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries providing information about the PC Cards present in the device's PC Card slots."
  },
  "pcCardCardEntry": {
    "name": "pcCardCardEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "pcCardSlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry providing information about one of the PC Cards present in one of the device's PC Card slots."
  },
  "pcCardCardMfrName": {
    "name": "pcCardCardMfrName",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The manufacturer name of the PC Card described by this entry. The value of this object is the first ASCIIZ string in the TPLLV1_INFO field of the 'Level 1 Version/Product Information' tuple (CISTPL_VERS_1). If the PC Card has no Level 1 Version/Product information tuple, the value of this object will be a zero-length OCTET STRING."
  },
  "pcCardCardProdName": {
    "name": "pcCardCardProdName",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The product name of the PC Card described by this entry. The value of this object is the second ASCIIZ string in the TPLLV1_INFO field of the 'Level 1 Version/Product Information' tuple (CISTPL_VERS_1). If the PC Card has no Level 1 Version/Product information tuple, the value of this object will be a zero-length OCTET STRING."
  },
  "pcCardCardProdInfo1": {
    "name": "pcCardCardProdInfo1",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The first additional product information string of the PC Card described by this entry. The value of this object is the third ASCIIZ string in the TPLLV1_INFO field of the 'Level 1 Version/Product Information' tuple (CISTPL_VERS_1). If the PC Card has no Level 1 Version/Product information tuple, the value of this object will be a zero-length OCTET STRING."
  },
  "pcCardCardProdInfo2": {
    "name": "pcCardCardProdInfo2",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The second additional product information string of the PC Card described by this entry. The value of this object is the fourth ASCIIZ string in the TPLLV1_INFO field of the 'Level 1 Version/Product Information' tuple (CISTPL_VERS_1). If the PC Card has no Level 1 Version/Product information tuple, the value of this object will be a zero-length OCTET STRING."
  },
  "pcCardCardFunction": {
    "name": "pcCardCardFunction",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A code indicating the major function of the PC Card described by this entry. The value of this object is the value of the third octet of the Function ID tuple (CISTPL_FUNCID). The following values are defined: 0 Multifunction card 1 Memory card 2 Serial Port/Modem 3 Parallel Port 4 Fixed Disk 5 Video Adapter 6 Network/LAN Adapter 7 AIMS Memory card If the PC Card has no Function ID tuple, then the value of this object will be 256."
  },
  "pcCardModemTable": {
    "name": "pcCardModemTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries providing information about the PC Card modems present in the device's PC Card slots."
  },
  "pcCardModemEntry": {
    "name": "pcCardModemEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "pcCardSlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry providing information about one of the PC Card modems present in one of the device's PC Card slots."
  },
  "pcCardModemActive": {
    "name": "pcCardModemActive",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 1,
          "inactive": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the PC Card modem described by this entry. The value 'inactive(1)' indicates that there is no active connection. The value 'active(2)' indicates that there is an active connection."
  },
  "pcCardModemSessions": {
    "name": "pcCardModemSessions",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of sessions initiated using this PC Card modem since it was last inserted. The value of this object is incremented each time the modem goes off hook."
  },
  "pcCardModemTotalRxChars": {
    "name": "pcCardModemTotalRxChars",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good characters received from this PC Card modem since it was last inserted."
  },
  "pcCardModemTotalTxChars": {
    "name": "pcCardModemTotalTxChars",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of characters transmitted to this PC Card modem since it was last inserted."
  },
  "pcCardModemConnTable": {
    "name": "pcCardModemConnTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries providing information about the active sessions using the PC Card modems present in the device's PC Card slots."
  },
  "pcCardModemConnEntry": {
    "name": "pcCardModemConnEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "pcCardSlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry providing information about an active session using the PC Card modem present in one of the device's PC Card slots."
  },
  "pcCardModemConnSpeed": {
    "name": "pcCardModemConnSpeed",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The speed, in bits per second, of the active modem connection described by this entry."
  },
  "pcCardModemConnDataBits": {
    "name": "pcCardModemConnDataBits",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 7,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of data bits for the active modem connection described by this entry."
  },
  "pcCardModemConnStopBits": {
    "name": "pcCardModemConnStopBits",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "one": 1,
          "two": 2,
          "onePointFive": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of stop bits for the active modem connection described by this entry."
  },
  "pcCardModemConnParity": {
    "name": "pcCardModemConnParity",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "odd": 2,
          "even": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The parity setting for the active modem connection described by this entry."
  },
  "pcCardModemConnRxChars": {
    "name": "pcCardModemConnRxChars",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good characters received from the PC Card modem during the active modem connection described by this entry."
  },
  "pcCardModemConnTxChars": {
    "name": "pcCardModemConnTxChars",
    "oid": "1.3.6.1.4.1.304.1.3.1.14.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of characters transmitted to the PC Card modem during the active modem connection described by this entry."
  },
  "eventLogEnable": {
    "name": "eventLogEnable",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The value of this object indicates whether or not system event logging is currently enabled. Changes to this object take effect immediately."
  },
  "eventLogSize": {
    "name": "eventLogSize",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The maximum number of entries retrievable from the system event log. If the value of this object is greater than the value of the eventLogCount object, then only eventLogCount entries have been logged and can be retrieved."
  },
  "eventLogCount": {
    "name": "eventLogCount",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The total number of events logged to the system event log. If the value of this object exceeds the value of the eventLogSize object, only the most recent eventLogSize entries can be retrieved. Setting the value of this object to zero clears the device's system event log."
  },
  "eventLogTable": {
    "name": "eventLogTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of system event log entries."
  },
  "eventLogEntry": {
    "name": "eventLogEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "eventLogIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A single system event log entry."
  },
  "eventLogIndex": {
    "name": "eventLogIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each entry in the event log. Its value is between 1 and the minimum of the value of the eventLogSize and eventLogCount objects. The oldest event in the log corresponds to index 1."
  },
  "eventLogTime": {
    "name": "eventLogTime",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time (according to the system clock) in human-readable form at which this system event log entry was logged."
  },
  "eventLogDescr": {
    "name": "eventLogDescr",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A human-readable string describing the event represented by this system event log entry."
  },
  "eventLogDetail": {
    "name": "eventLogDetail",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A human-readable string providing more detailed information about the event represented by this system event log entry."
  },
  "eventLogRawEntry": {
    "name": "eventLogRawEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The raw, unformatted system event log entry as it appears internally."
  },
  "isdnLogEnable": {
    "name": "isdnLogEnable",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The value of this object indicates whether or not ISDN event logging is currently enabled. Changes to this object take effect immediately."
  },
  "isdnLogSize": {
    "name": "isdnLogSize",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The maximum number of entries retrievable from the device's ISDN event log. If the value of this object is greater than the value of the isdnLogCount object, then only isdnLogCount entries have been logged and can be retrieved."
  },
  "isdnLogCount": {
    "name": "isdnLogCount",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The total number of events logged to the ISDN event log. If the value of this object exceeds the value of the isdnLogSize object, only the most recent isdnLogSize entries can be retrieved. Setting the value of this object to zero clears the device's ISDN event log."
  },
  "isdnLogTable": {
    "name": "isdnLogTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.8",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of ISDN event log entries."
  },
  "isdnLogEntry": {
    "name": "isdnLogEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.8.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "eventLogIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A single ISDN event log entry."
  },
  "isdnLogIndex": {
    "name": "isdnLogIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.8.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each entry in the ISDN event log. Its value is between 1 and the minimum of the value of the isdnLogSize and isdnLogCount objects. The oldest event in the log corresponds to index 1."
  },
  "isdnLogTime": {
    "name": "isdnLogTime",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.8.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time (according to the system clock) in human-readable form at which this ISDN event log entry was logged."
  },
  "isdnLogDescr": {
    "name": "isdnLogDescr",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.8.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A human-readable string describing the ISDN event represented by this ISDN event log entry."
  },
  "isdnLogDetail": {
    "name": "isdnLogDetail",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.8.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A human-readable string providing more detailed information about the ISDN event represented by this ISDN event log entry."
  },
  "isdnLogRawEntry": {
    "name": "isdnLogRawEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.15.8.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The raw, unformatted ISDN log entry as it appears internally."
  },
  "filterSetTable": {
    "name": "filterSetTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries providing information about the device's packet filter sets. This table supports 'conceptual row creation' according to section 3.2(3) of RFC 1212: To add a new row to this table, a management station must provide a value for at least one of the read-write object instances in the new row. If the management station fails to provide a value for a read-write object instance in the new row, the instance will have the value indicated by the corresponding object's DEFVAL clause. Note that the device will implicitly create a new row in this table if a management station adds an entry to the ipFilterTable or genericFilterTable corresponding to a filter set for which there is not already a row in this table. Each object instance in the new row will have the value indicated by the corresponding object's DEFVAL clause."
  },
  "filterSetEntry": {
    "name": "filterSetEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "filterSetIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry providing information about one of the device's packet filter sets."
  },
  "filterSetIndex": {
    "name": "filterSetIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each of the device's packet filter sets."
  },
  "filterSetEnable": {
    "name": "filterSetEnable",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "enabled",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the filter set described by this entry is enabled."
  },
  "filterSetName": {
    "name": "filterSetName",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "An optional descriptive name for the packet filter set described by this entry."
  },
  "filterSetStatus": {
    "name": "filterSetStatus",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "valid",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of this filter set entry. Setting this object to the value 'invalid(2)' has the effect of invalidating the corresponding entry in the filterSetTable. That is, it effectively disassociates the mapping identified with said entry. It is an implementation-specific matter as to whether the agent removes an invalidated entry from the table. Accordingly, management stations must be prepared to receive from agents tabular information corresponding to entries not currently in use. Proper interpretation of such entries requires examination of the relevant filterSetStatus object. Note: Invalidating a filter set entry in this table will also invalidate any entries in the ipFilterTable and genericFilterTable that are associated with the filter set."
  },
  "ipFilterTable": {
    "name": "ipFilterTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries providing information about the device's IP packet filters. This table supports 'conceptual row creation' according to section 3.2(3) of RFC 1212: To add a new row to this table, a management station must provide a value for at least one of the read-write object instances in the new row. If the management station fails to provide a value for a read-write object instance in the new row, the instance will have the value indicated by the corresponding object's DEFVAL clause. Note that the device will implicitly create a new row in the filterSetTable if a management station adds an entry to the ipFilterTable corresponding to a filter set for which there is not already a row in the filterSetTable. Each object instance in the new row in the filterSetTable will have the value indicated by the corresponding object's DEFVAL clause."
  },
  "ipFilterEntry": {
    "name": "ipFilterEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "filterSetIndex",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "ipFilterDirection",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "ipFilterIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry providing information about one of the device's IP packet filters."
  },
  "ipFilterDirection": {
    "name": "ipFilterDirection",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "input": 1,
          "output": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether the IP packet filter described by this entry is an input filter or an output filter."
  },
  "ipFilterIndex": {
    "name": "ipFilterIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each of the input and output packet filters in the filter set associated with this IP packet filter."
  },
  "ipFilterEnable": {
    "name": "ipFilterEnable",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "disabled",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether the IP packet filter described by this entry is enabled or disabled."
  },
  "ipFilterForward": {
    "name": "ipFilterForward",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forward": 1,
          "drop": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "forward",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether the device will forward or drop an IP packet matching the parameters of this IP packet filter."
  },
  "ipFilterSrcMask": {
    "name": "ipFilterSrcMask",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the value that the device will logically AND with the source IP address in an IP packet being passed through this filter before that address is compared with the value of the corresponding instance of ipFilterSrcAddr."
  },
  "ipFilterSrcAddr": {
    "name": "ipFilterSrcAddr",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the value that must be produced by the logical AND of the source IP address in an IP packet and the value of ipFilterSrcMask for the IP packet to satisfy this filter."
  },
  "ipFilterDstMask": {
    "name": "ipFilterDstMask",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the value that the device will logically AND with the destination IP address in an IP packet being passed through this filter before that address is compared with the value of the corresponding instance of ipFilterDstAddr."
  },
  "ipFilterDstAddr": {
    "name": "ipFilterDstAddr",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the value that must be produced by the logical AND of the destination IP address in an IP packet and the value of ipFilterDstMask for the IP packet to satisfy this filter."
  },
  "ipFilterProtType": {
    "name": "ipFilterProtType",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the value that must be present in the protocol field (octet 10) of the IP header of an IP packet for the packet to satisfy this filter. The value zero matches any protocol field value."
  },
  "ipFilterSrcPortComparison": {
    "name": "ipFilterSrcPortComparison",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "lt": 2,
          "le": 3,
          "eq": 4,
          "ne": 5,
          "gt": 6,
          "ge": 7
        }
      }
    },
    "default": {
      "default": {
        "value": "none",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the relational operator that the device will use to compare the udp or tcp source port specified in a udp or tcp packet with the value of the corresponding instance of the ipFilterSrcPort object. The value of this object is meaningful only when the value of the corresponding instance of the ipFilterProtType object is 6 (tcp) or 17 (udp). If the value of this object is 'none(1)', no comparison is performed."
  },
  "ipFilterSrcPort": {
    "name": "ipFilterSrcPort",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the value to which the device will compare the udp or tcp source port specified in an udp or tcp packet to determine whether or not the packet satisfies this filter. The value of the corresponding instance of the ipFilterSrcPortComparison object indicates the relational operator that the device will use for the comparison. The value of this object is meaningful only when the value of the corresponding instance of the ipFilterProtType object is 6 (tcp) or 17 (udp), and the value of the corresponding instance of the ipFilterSrcPortComparison object is not 'none(1)'."
  },
  "ipFilterDstPortComparison": {
    "name": "ipFilterDstPortComparison",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "lt": 2,
          "le": 3,
          "eq": 4,
          "ne": 5,
          "gt": 6,
          "ge": 7
        }
      }
    },
    "default": {
      "default": {
        "value": "none",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the relational operator that the device will use to compare the udp or tcp destination port specified in a udp or tcp packet with the value of the corresponding instance of the ipFilterDstPort object. The value of this object is meaningful only when the value of the corresponding instance of the ipFilterProtType object is 6 (tcp) or 17 (udp). If the value of this object is 'none(1)', no comparison is performed."
  },
  "ipFilterDstPort": {
    "name": "ipFilterDstPort",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the value to which the device will compare the udp or tcp destination port specified in an udp or tcp packet to determine whether or not the packet satisfies this filter. The value of the corresponding instance of the ipFilterDstPortComparison object indicates the relational operator that the device will use for the comparison. The value of this object is meaningful only when the value of the corresponding instance of the ipFilterProtType object is 6 (tcp) or 17 (udp) and the value of the corresponding instance of the ipFilterDstPortComparison object is not 'none(1)'."
  },
  "ipFilterStatus": {
    "name": "ipFilterStatus",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.2.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "valid",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the status of this IP filter entry. Setting this object to the value 'invalid(2)' has the effect of invalidating the corresponding entry in the ipFilterTable. That is, it effectively disassociates the mapping identified with said entry. It is an implementation-specific matter as to whether the agent removes an invalidated entry from the table. Accordingly, management stations must be prepared to receive from agents tabular information corresponding to entries not currently in use. Proper interpretation of such entries requires examination of the relevant ipFilterStatus object."
  },
  "genericFilterTable": {
    "name": "genericFilterTable",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of entries providing information about the device's generic packet filters. This table supports 'conceptual row creation' according to section 3.2(3) of RFC 1212: To add a new row to this table, a management station must provide a value for at least one of the read-write object instances in the new row. If the management station fails to provide a value for a read-write object instance in the new row, the instance will have the value indicated by the corresponding object's DEFVAL clause. Note that the device will implicitly create a new row in the filterSetTable if a management station adds an entry to the genericFilterTable corresponding to a filter set for which there is not already a row in the filterSetTable. Each object instance in the new row in the filterSetTable will have the value indicated by the corresponding object's DEFVAL clause."
  },
  "genericFilterEntry": {
    "name": "genericFilterEntry",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NETOPIA-MIB",
        "object": "filterSetIndex",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "genericFilterDirection",
        "implied": 0
      },
      {
        "module": "NETOPIA-MIB",
        "object": "genericFilterIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry providing information about one of the device's generic packet filters."
  },
  "genericFilterDirection": {
    "name": "genericFilterDirection",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "input": 1,
          "output": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether the generic packet filter described by this entry is an input filter or an output filter."
  },
  "genericFilterIndex": {
    "name": "genericFilterIndex",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique value for each of the input and output packet filters in the filter set associated with this generic packet filter."
  },
  "genericFilterEnable": {
    "name": "genericFilterEnable",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "disabled",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether the generic packet filter described by this entry is enabled or disabled."
  },
  "genericFilterForward": {
    "name": "genericFilterForward",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forward": 1,
          "drop": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "forward",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether the device will forward or drop a packet matching the parameters of this generic packet filter."
  },
  "genericFilterOffset": {
    "name": "genericFilterOffset",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the offset (in octets) from the start of the packet to the data to which this filter will be applied."
  },
  "genericFilterMask": {
    "name": "genericFilterMask",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 8
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the mask that the device will logically AND with the data in a packet being passed through this filter before that data is compared with the value of the corresponding instance of genericFilterValue. While the agent will accept a request to set an instance of this object to a mask that is fewer than eight octets long, when read an instance of this object will always be exactly eight octets long, the least-significant octets having been zero-filled."
  },
  "genericFilterValue": {
    "name": "genericFilterValue",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 8
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the value against which the device will compare the value produced by the logical AND of the data in a packet and the value of the corresponding instance of genericFilterMask for the packet to satisfy this filter. While the agent will accept a request to set an instance of this object to a value that is fewer than eight octets long, when read, an instance of this object will always be exactly eight octets long, the least-significant octets having been zero-filled."
  },
  "genericFilterComparison": {
    "name": "genericFilterComparison",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "lt": 2,
          "le": 3,
          "eq": 4,
          "ne": 5,
          "gt": 6,
          "ge": 7
        }
      }
    },
    "default": {
      "default": {
        "value": "none",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the relational operator that the device will use when comparing the value produced by the logical AND of the data in a packet and the value of the corresponding instance of genericFilterMask to the value of the corresponding instance of genericFilterValue. If the value of this object is 'none(1)', no comparison is performed; the packet is forwarded or dropped based solely on the value of genericFilterForward."
  },
  "genericFilterChained": {
    "name": "genericFilterChained",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "chained": 1,
          "notChained": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "notChained",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not the device will chain this filter together with the next generic filter in the associated filter set when deciding whether or not to forward a packet."
  },
  "genericFilterStatus": {
    "name": "genericFilterStatus",
    "oid": "1.3.6.1.4.1.304.1.3.1.16.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "valid",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the status of this generic filter entry. Setting this object to the value 'invalid(2)' has the effect of invalidating the corresponding entry in the genericFilterTable. That is, it effectively disassociates the mapping identified with said entry. It is an implementation-specific matter as to whether the agent removes an invalidated entry from the table. Accordingly, management stations must be prepared to receive from agents tabular information corresponding to entries not currently in use. Proper interpretation of such entries requires examination of the relevant genericFilterStatus object."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/NETOPIA-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:45:26 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "NETOPIA-MIB"
  }
}