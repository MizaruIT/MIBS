{
  "imports": {
    "class": "imports",
    "ENTITY-MIB": [
      "PhysicalIndex"
    ],
    "IF-MIB": [
      "ifGeneralInformationGroup",
      "InterfaceIndex"
    ],
    "INET-ADDRESS-MIB": [
      "InetAddressType",
      "InetAddress"
    ],
    "SNMP-FRAMEWORK-MIB": [
      "SnmpAdminString"
    ],
    "SNMPv2-CONF": [
      "OBJECT-GROUP",
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "TimeTicks",
      "IpAddress",
      "OBJECT-TYPE",
      "Unsigned32",
      "iso",
      "MODULE-IDENTITY",
      "Integer32",
      "OBJECT-IDENTITY",
      "Counter64",
      "Gauge32",
      "MibIdentifier",
      "mib-2",
      "NOTIFICATION-TYPE",
      "Counter32",
      "Bits"
    ],
    "SNMPv2-TC": [
      "DateAndTime",
      "DisplayString",
      "PhysAddress",
      "TruthValue",
      "TEXTUAL-CONVENTION",
      "RowStatus"
    ],
    "SYSAPPL-MIB": [
      "LongUtf8String"
    ]
  },
  "capwapBaseMIB": {
    "name": "capwapBaseMIB",
    "oid": "1.3.6.1.2.1.196",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2010-04-30 00:00",
        "description": "Initial version published as RFC 5833"
      }
    ],
    "lastupdated": "201004300000Z",
    "organization": "IETF Control And Provisioning of Wireless Access Points (CAPWAP) Working Group http://www.ietf.org/html.charters/capwap-charter.html",
    "contactinfo": "General Discussion: capwap@frascone.com To Subscribe: http://lists.frascone.com/mailman/listinfo/capwap Yang Shi (editor) Hangzhou H3C Tech. Co., Ltd. Beijing R&D Center of H3C, Digital Technology Plaza NO. 9 Shangdi 9th Street, Haidian District Beijing 100085 China Phone: +86 010 82775276 Email: rishyang@gmail.com David T. Perkins (editor) 228 Bayview Dr. San Carlos, CA 94070 USA Phone: +1 408 394-8702 Email: dperkins@dsperkins.com Chris Elliott (editor) 1516 Kent St. Durham, NC 27707 USA Phone: +1 919-308-1216 Email: chelliot@pobox.com Yong Zhang (editor) Fortinet, Inc. 1090 Kifer Road Sunnyvale, CA 94086 USA Email: yzhang@fortinet.com",
    "description": "Copyright (c) 2010 IETF Trust and the persons identified as authors of the code. All rights reserved. Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info). This version of this MIB module is part of RFC 5833; see the RFC itself for full legal notices. This MIB module contains managed object definitions for the CAPWAP Protocol."
  },
  "CapwapBaseWtpProfileIdTC": {
    "name": "CapwapBaseWtpProfileIdTC",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4096
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "Represents the unique identifier of a WTP profile."
  },
  "CapwapBaseWtpIdTC": {
    "name": "CapwapBaseWtpIdTC",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          },
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "displayhint": "1x:",
    "status": "current",
    "description": "Represents the unique identifier of a WTP instance. As usual, the Base MAC address of the WTP is used."
  },
  "CapwapBaseStationIdTC": {
    "name": "CapwapBaseStationIdTC",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          },
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "displayhint": "1x:",
    "status": "current",
    "description": "Represents the unique identifier of a station instance. As usual, the MAC address of the station is used."
  },
  "CapwapBaseRadioIdTC": {
    "name": "CapwapBaseRadioIdTC",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 31
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "Represents the unique identifier of a radio on a WTP."
  },
  "CapwapBaseTunnelModeTC": {
    "name": "CapwapBaseTunnelModeTC",
    "class": "textualconvention",
    "type": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "localBridging": 0,
        "dot3Tunnel": 1,
        "nativeTunnel": 2
      }
    },
    "status": "current",
    "description": "Represents the tunneling modes of operation that are supported by a WTP. The WTP MAY support more than one option, represented by the bit field below: localBridging(0) - Local bridging mode dot3Tunnel(1) - 802.3 frame tunnel mode nativeTunnel(2) - Native frame tunnel mode",
    "reference": "Section 4.6.43 of CAPWAP Protocol Specification, RFC 5415."
  },
  "CapwapBaseMacTypeTC": {
    "name": "CapwapBaseMacTypeTC",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "localMAC": 0,
          "splitMAC": 1,
          "both": 2
        }
      }
    },
    "status": "current",
    "description": "Represents the MAC mode of operation supported by a WTP. The following enumerated values are supported: localMAC(0) - Local-MAC mode splitMAC(1) - Split-MAC mode both(2) - Both Local-MAC and Split-MAC Note that the CAPWAP field [RFC5415] modeled by this object takes zero as starting value; this MIB object follows that rule.",
    "reference": "Section 4.6.44 of CAPWAP Protocol Specification, RFC 5415."
  },
  "CapwapBaseChannelTypeTC": {
    "name": "CapwapBaseChannelTypeTC",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "data": 1,
          "control": 2
        }
      }
    },
    "status": "current",
    "description": "Represents the channel type for CAPWAP protocol. The following enumerated values are supported: data(1) - Data channel control(2) - Control channel"
  },
  "CapwapBaseAuthenMethodTC": {
    "name": "CapwapBaseAuthenMethodTC",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "clear": 2,
          "x509": 3,
          "psk": 4
        }
      }
    },
    "status": "current",
    "description": "Represents the authentication credential type for a WTP. The following enumerated values are supported: other(1) - Other method, for example, vendor specific clear(2) - Clear text and no authentication x509(3) - X.509 certificate authentication psk(4) - Pre-Shared secret authentication As a mandatory requirement, CAPWAP control channel authentication SHOULD use DTLS, either by certificate or PSK. For data channel authentication, DTLS is optional."
  },
  "capwapBaseNotifications": {
    "name": "capwapBaseNotifications",
    "oid": "1.3.6.1.2.1.196.0",
    "class": "objectidentity"
  },
  "capwapBaseObjects": {
    "name": "capwapBaseObjects",
    "oid": "1.3.6.1.2.1.196.1",
    "class": "objectidentity"
  },
  "capwapBaseConformance": {
    "name": "capwapBaseConformance",
    "oid": "1.3.6.1.2.1.196.2",
    "class": "objectidentity"
  },
  "capwapBaseAc": {
    "name": "capwapBaseAc",
    "oid": "1.3.6.1.2.1.196.1.1",
    "class": "objectidentity"
  },
  "capwapBaseWtpSessions": {
    "name": "capwapBaseWtpSessions",
    "oid": "1.3.6.1.2.1.196.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the total number of WTPs that are connecting to the AC."
  },
  "capwapBaseWtpSessionsLimit": {
    "name": "capwapBaseWtpSessionsLimit",
    "oid": "1.3.6.1.2.1.196.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "reference": "Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the maximum number of WTP sessions configured on the AC. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseStationSessions": {
    "name": "capwapBaseStationSessions",
    "oid": "1.3.6.1.2.1.196.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the total number of stations that are accessing the wireless service provided by the AC."
  },
  "capwapBaseStationSessionsLimit": {
    "name": "capwapBaseStationSessionsLimit",
    "oid": "1.3.6.1.2.1.196.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "reference": "Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the maximum number of station sessions configured on the AC. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseDataChannelDTLSPolicyOptions": {
    "name": "capwapBaseDataChannelDTLSPolicyOptions",
    "oid": "1.3.6.1.2.1.196.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "other": 0,
        "clear": 1,
        "dtls": 2
      }
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "The AC communicates its policy on the use of DTLS for the CAPWAP data channel. The AC MAY support more than one option, represented by the bit field below: other(0) - Other method, for example, vendor specific clear(1) - Clear text dtls(2) - DTLS"
  },
  "capwapBaseControlChannelAuthenOptions": {
    "name": "capwapBaseControlChannelAuthenOptions",
    "oid": "1.3.6.1.2.1.196.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "x509": 0,
        "psk": 1
      }
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the authentication credential type supported by the AC for CAPWAP control channel. The AC MAY support more than one option, represented by the bit field below: x509(0) - X.509 certificate based psk(1) - Pre-Shared secret"
  },
  "capwapBaseAcNameListTable": {
    "name": "capwapBaseAcNameListTable",
    "oid": "1.3.6.1.2.1.196.1.1.9",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "Section 4.6.5 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "A table of objects that configure the AC name list. Values of all read-create objects in this table are persistent at restart/reboot."
  },
  "capwapBaseAcNameListEntry": {
    "name": "capwapBaseAcNameListEntry",
    "oid": "1.3.6.1.2.1.196.1.1.9.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAcNameListId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A set of objects that configures the AC name list."
  },
  "capwapBaseAcNameListId": {
    "name": "capwapBaseAcNameListId",
    "oid": "1.3.6.1.2.1.196.1.1.9.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Represents the unique identifier of an AC Name list."
  },
  "capwapBaseAcNameListName": {
    "name": "capwapBaseAcNameListName",
    "oid": "1.3.6.1.2.1.196.1.1.9.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LongUtf8String",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 512
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "reference": "Section 4.6.5 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the name of an AC, and it is expected to be an UTF-8 encoded string."
  },
  "capwapBaseAcNameListPriority": {
    "name": "capwapBaseAcNameListPriority",
    "oid": "1.3.6.1.2.1.196.1.1.9.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "reference": "Section 4.6.5 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the priority order of the preferred AC. For instance, the value of one (1) is used to set the primary AC, the value of two (2) is used to set the secondary AC, etc."
  },
  "capwapBaseAcNameListRowStatus": {
    "name": "capwapBaseAcNameListRowStatus",
    "oid": "1.3.6.1.2.1.196.1.1.9.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object is used to create, modify, and/or delete a row in this table. The value of capwapBaseAcNameListName and capwapBaseAcNameListPriority can be changed when this object is in state 'active' or in 'notInService'. The capwapBaseAcNameListRowStatus may be changed to 'active' if all the managed objects in the conceptual row with MAX-ACCESS read-create have been assigned valid values."
  },
  "capwapBaseMacAclTable": {
    "name": "capwapBaseMacAclTable",
    "oid": "1.3.6.1.2.1.196.1.1.10",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "Section 4.6.7 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "A table of objects that configure station Access Control Lists (ACLs). The WTP will not provide service to the MAC addresses configured in this table. Values of all read-create objects in this table are persistent at AC restart/reboot."
  },
  "capwapBaseMacAclEntry": {
    "name": "capwapBaseMacAclEntry",
    "oid": "1.3.6.1.2.1.196.1.1.10.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseMacAclId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A set of objects that configures station Access Control Lists (ACLs)."
  },
  "capwapBaseMacAclId": {
    "name": "capwapBaseMacAclId",
    "oid": "1.3.6.1.2.1.196.1.1.10.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Represents the unique identifier of an ACL."
  },
  "capwapBaseMacAclStationId": {
    "name": "capwapBaseMacAclStationId",
    "oid": "1.3.6.1.2.1.196.1.1.10.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseStationIdTC",
      "class": "type"
    },
    "maxaccess": "read-create",
    "reference": "Section 4.6.7 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the MAC address of a station to which WTPs will no longer provides service."
  },
  "capwapBaseMacAclRowStatus": {
    "name": "capwapBaseMacAclRowStatus",
    "oid": "1.3.6.1.2.1.196.1.1.10.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object is used to create, modify, and/or delete a row in this table. The value of capwapBaseMacAclStationId can be changed when this object is in state 'active' or in 'notInService'. The capwapBaseMacAclRowStatus may be changed to 'active' if all the managed objects in the conceptual row with MAX-ACCESS read-create have been assigned valid values."
  },
  "capwapBaseWtps": {
    "name": "capwapBaseWtps",
    "oid": "1.3.6.1.2.1.196.1.2",
    "class": "objectidentity"
  },
  "capwapBaseWtpProfileTable": {
    "name": "capwapBaseWtpProfileTable",
    "oid": "1.3.6.1.2.1.196.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of objects that configure WTP profiles for WTPs to be managed before they connect to the AC. An operator could change a WTP's configuration by changing the values of parameters in the corresponding WTP profile, then the WTP could get the new configuration through the CAPWAP control channel. Values of all read-create objects in this table are persistent at restart/reboot."
  },
  "capwapBaseWtpProfileEntry": {
    "name": "capwapBaseWtpProfileEntry",
    "oid": "1.3.6.1.2.1.196.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A set of objects that configures and displays a WTP profile."
  },
  "capwapBaseWtpProfileId": {
    "name": "capwapBaseWtpProfileId",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseWtpProfileIdTC",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Represents the unique identifier of a WTP profile."
  },
  "capwapBaseWtpProfileName": {
    "name": "capwapBaseWtpProfileName",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Represents the name of a WTP profile."
  },
  "capwapBaseWtpProfileWtpMacAddress": {
    "name": "capwapBaseWtpProfileWtpMacAddress",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseWtpIdTC",
      "class": "type"
    },
    "maxaccess": "read-create",
    "reference": "Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the Base MAC address of a WTP. A WTP profile MUST contain the Base MAC address of the WTP because the CAPWAP message received from the WTP contains its Base MAC address and the AC uses the Base MAC address to find the corresponding WTP profile. Section 4.6.40 of [RFC5415] omits indicating that the WTP's Base MAC address must be included in the WTP Board Data message element. This is a known errata item and should be fixed in any future revision of the RFC 5415."
  },
  "capwapBaseWtpProfileWtpModelNumber": {
    "name": "capwapBaseWtpProfileWtpModelNumber",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "reference": "Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the model number of a WTP. A WTP profile MUST include the WTP's model number, which reflects the number of Physical Layer (PHY) radios on the WTP. In this way, the creation of a WTP profile triggers the AC to automatically create the same number of WTP Virtual Radio Interfaces corresponding to the WTP's PHY radios without manual intervention. With the ifIndexes of WTP Virtual Radio Interfaces, the operator could configure and manage the WTP's PHY radios through the wireless binding MIB modules."
  },
  "capwapBaseWtpProfileWtpName": {
    "name": "capwapBaseWtpProfileWtpName",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LongUtf8String",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 512
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "reference": "Section 4.6.45 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the name of the WTP."
  },
  "capwapBaseWtpProfileWtpLocation": {
    "name": "capwapBaseWtpProfileWtpLocation",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LongUtf8String",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "reference": "Section 4.6.30 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the location of the WTP."
  },
  "capwapBaseWtpProfileWtpStaticIpEnable": {
    "name": "capwapBaseWtpProfileWtpStaticIpEnable",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-create",
    "reference": "Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents whether the WTP SHOULD use a static IP address or not. A value of false disables the static IP address, while a value of true enables it."
  },
  "capwapBaseWtpProfileWtpStaticIpType": {
    "name": "capwapBaseWtpProfileWtpStaticIpType",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ipv4": 1
        }
      }
    },
    "maxaccess": "read-create",
    "reference": "Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the static IP address type used by the WTP. Only ipv4(1) is supported by the object. Although the CAPWAP protocol [RFC5415] supports both IPv4 and IPv6, note that the CAPWAP field modeled by this object does not support IPv6, so the object does not support ipv6(2)."
  },
  "capwapBaseWtpProfileWtpStaticIpAddress": {
    "name": "capwapBaseWtpProfileWtpStaticIpAddress",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "reference": "Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "When capwapBaseWtpProfileWtpStaticIpEnable is true, it represents the static IP address to be assigned to the WTP. The format of this IP address is determined by the corresponding instance of object capwapBaseWtpProfileWtpStaticIpType."
  },
  "capwapBaseWtpProfileWtpNetmask": {
    "name": "capwapBaseWtpProfileWtpNetmask",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "reference": "Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "When capwapBaseWtpProfileWtpStaticIpEnable is true, it represents the netmask to be assigned to the WTP. The format of this netmask is determined by the corresponding instance of object capwapBaseWtpProfileWtpStaticIpType."
  },
  "capwapBaseWtpProfileWtpGateway": {
    "name": "capwapBaseWtpProfileWtpGateway",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "reference": "Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "When capwapBaseWtpProfileWtpStaticIpEnable is true, it represents the gateway to be assigned to the WTP. The format of this IP address is determined by the corresponding instance of object capwapBaseWtpProfileWtpStaticIpType."
  },
  "capwapBaseWtpProfileWtpFallbackEnable": {
    "name": "capwapBaseWtpProfileWtpFallbackEnable",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "enabled",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "reference": "Section 4.6.42 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents whether to enable or disable automatic CAPWAP fallback in the event that a WTP detects its preferred AC and is not currently connected to it. The following enumerated values are supported: enabled(1) - The fallback mode is enabled disabled(2) - The fallback mode is disabled"
  },
  "capwapBaseWtpProfileWtpEchoInterval": {
    "name": "capwapBaseWtpProfileWtpEchoInterval",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 30,
        "format": "decimal"
      }
    },
    "units": "second",
    "maxaccess": "read-create",
    "reference": "Section 4.7.7 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the minimum time, in seconds, between sending Echo Request messages to the AC that the WTP has joined."
  },
  "capwapBaseWtpProfileWtpIdleTimeout": {
    "name": "capwapBaseWtpProfileWtpIdleTimeout",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 300,
        "format": "decimal"
      }
    },
    "units": "second",
    "maxaccess": "read-create",
    "reference": "Section 4.7.8 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the idle timeout value that the WTP SHOULD enforce for its active stations."
  },
  "capwapBaseWtpProfileWtpMaxDiscoveryInterval": {
    "name": "capwapBaseWtpProfileWtpMaxDiscoveryInterval",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 2,
            "max": 180
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 20,
        "format": "decimal"
      }
    },
    "units": "second",
    "maxaccess": "read-create",
    "reference": "Section 4.7.10 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the maximum time allowed between sending Discovery Request messages, in seconds."
  },
  "capwapBaseWtpProfileWtpReportInterval": {
    "name": "capwapBaseWtpProfileWtpReportInterval",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 120,
        "format": "decimal"
      }
    },
    "units": "second",
    "maxaccess": "read-create",
    "reference": "Section 4.7.11 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the interval for WTP to send the Decryption Error report."
  },
  "capwapBaseWtpProfileWtpStatisticsTimer": {
    "name": "capwapBaseWtpProfileWtpStatisticsTimer",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 120,
        "format": "decimal"
      }
    },
    "units": "second",
    "maxaccess": "read-create",
    "reference": "Section 4.7.14 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the interval the WTP uses between the WTP Event Requests it transmits to the AC to communicate its statistics, in seconds."
  },
  "capwapBaseWtpProfileWtpEcnSupport": {
    "name": "capwapBaseWtpProfileWtpEcnSupport",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "limited": 0,
          "fullAndLimited": 1
        }
      }
    },
    "maxaccess": "read-create",
    "reference": "Section 4.6.25 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the support for the Explicit Congestion Notification (ECN) bits, as defined in [RFC3168]. The following enumerated values are supported: limited(0) - Limited ECN support fullAndLimited(1) - Full and limited ECN support Note that the CAPWAP field [RFC5415] modeled by this object takes zero as starting value; this MIB object follows that rule."
  },
  "capwapBaseWtpProfileRowStatus": {
    "name": "capwapBaseWtpProfileRowStatus",
    "oid": "1.3.6.1.2.1.196.1.2.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object is used to create, modify, and/or delete a row in this table. The value of capwapBaseWtpProfileName, capwapBaseWtpProfileWtpName and capwapBaseWtpProfileWtpLocation can be changed when this object is in state 'active' or in 'notInService'. The other objects in a row can be modified only when the value of this object in the corresponding conceptual row is not 'active'. Thus, to modify one or more of the objects in this conceptual row: a. change the row status to 'notInService' b. change the values of the row c. change the row status to 'active' The capwapBaseWtpProfileRowStatus may be changed to 'active' if the managed objects capwapBaseWtpProfileName, capwapBaseWtpProfileWtpMacAddress, capwapBaseWtpProfileWtpModelNumber, capwapBaseWtpProfileWtpName, and capwapBaseWtpProfileWtpLocation in the conceptual row have been assigned valid values. Deleting a WTP profile in use will disconnect the WTP from the AC. So the network management system SHOULD ask the operator to confirm such an operation. When a WTP profile entry is removed from the table, the corresponding WTP Virtual Radio Interfaces are also removed from the capwapBaseWirelessBindingTable and ifTable [RFC2863]. Also, the related object instances SHOULD be removed from the wireless binding MIB modules such as the IEEE 802.11 MIB module [IEEE.802-11.2007]."
  },
  "capwapBaseWtpStateTable": {
    "name": "capwapBaseWtpStateTable",
    "oid": "1.3.6.1.2.1.196.1.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of objects that indicate the AC's CAPWAP FSM state for each WTP, and helps the operator to query a WTP's current configuration."
  },
  "capwapBaseWtpStateEntry": {
    "name": "capwapBaseWtpStateEntry",
    "oid": "1.3.6.1.2.1.196.1.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpStateWtpId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A set of objects that displays the AC's CAPWAP FSM state for each WTP. Also, the operator could query the current configuration of a WTP by using the identifier of the corresponding WTP profile."
  },
  "capwapBaseWtpStateWtpId": {
    "name": "capwapBaseWtpStateWtpId",
    "oid": "1.3.6.1.2.1.196.1.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseWtpIdTC",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Represents the unique identifier of a WTP."
  },
  "capwapBaseWtpStateWtpIpAddressType": {
    "name": "capwapBaseWtpStateWtpIpAddressType",
    "oid": "1.3.6.1.2.1.196.1.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Represents the IP address type of a WTP. Only ipv4(1) and ipv6(2) are supported by the object."
  },
  "capwapBaseWtpStateWtpIpAddress": {
    "name": "capwapBaseWtpStateWtpIpAddress",
    "oid": "1.3.6.1.2.1.196.1.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the IP address of a WTP that corresponds to the IP address in the IP packet header. The format of this IP address is determined by the corresponding instance of object capwapBaseWtpStateWtpIpAddressType."
  },
  "capwapBaseWtpStateWtpLocalIpAddressType": {
    "name": "capwapBaseWtpStateWtpLocalIpAddressType",
    "oid": "1.3.6.1.2.1.196.1.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Represents the local IP address type of a WTP. Only ipv4(1) and ipv6(2) are supported by the object."
  },
  "capwapBaseWtpStateWtpLocalIpAddress": {
    "name": "capwapBaseWtpStateWtpLocalIpAddress",
    "oid": "1.3.6.1.2.1.196.1.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Sections 4.6.11 and 4.6.12 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the local IP address of a WTP and models the CAPWAP Local IPv4 Address or CAPWAP Local IPv6 Address fields [RFC5415]. If a Network Address Translation (NAT) device is present between WTP and AC, the value of capwapBaseWtpStateWtpLocalIpAddress will be different from the value of capwapBaseWtpStateWtpIpAddress. The format of this IP address is determined by the corresponding instance of object capwapBaseWtpStateWtpLocalIpAddressType."
  },
  "capwapBaseWtpStateWtpBaseMacAddress": {
    "name": "capwapBaseWtpStateWtpBaseMacAddress",
    "oid": "1.3.6.1.2.1.196.1.2.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          },
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the WTP's Base MAC Address, which MAY be assigned to the primary Ethernet interface. The instance of the object corresponds to the Base MAC Address sub-element in the CAPWAP protocol [RFC5415]."
  },
  "capwapBaseWtpState": {
    "name": "capwapBaseWtpState",
    "oid": "1.3.6.1.2.1.196.1.2.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dtls": 1,
          "join": 2,
          "image": 3,
          "configure": 4,
          "dataCheck": 5,
          "run": 6,
          "reset": 7,
          "dtlsTeardown": 8,
          "unknown": 9
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "Section 2.3.1 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the various possibilities of the AC's CAPWAP FSM state for each WTP. The following enumerated values are supported: dtls(1) - DTLS negotiation states, which include DTLS setup, authorize, DTLS connect join(2) - The WTP is joining with the AC image(3) - The WTP is downloading software configure(4) - The WTP is getting configuration from the AC dataCheck(5) - The AC is waiting for the Data Channel Keep Alive Packet run(6) - The WTP enters the running state reset(7) - The AC transmits a reset request message to the WTP dtlsTeardown(8) - DTLS session is torn down unknown(9) - Operator already prepared configuration for the WTP, while the WTP has not contacted the AC until now"
  },
  "capwapBaseWtpStateWtpUpTime": {
    "name": "capwapBaseWtpStateWtpUpTime",
    "oid": "1.3.6.1.2.1.196.1.2.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Represents the time (in hundredths of a second) since the WTP has been in the running state (corresponding to the value run(6) of capwapBaseWtpState)."
  },
  "capwapBaseWtpStateWtpCurrWtpProfileId": {
    "name": "capwapBaseWtpStateWtpCurrWtpProfileId",
    "oid": "1.3.6.1.2.1.196.1.2.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseWtpProfileIdTC",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Represents the current identifier of a WTP profile. The operator could query a WTP's current configuration with the identifier of a WTP profile."
  },
  "capwapBaseWtpTable": {
    "name": "capwapBaseWtpTable",
    "oid": "1.3.6.1.2.1.196.1.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of objects that display properties of the WTPs in running state."
  },
  "capwapBaseWtpEntry": {
    "name": "capwapBaseWtpEntry",
    "oid": "1.3.6.1.2.1.196.1.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpCurrId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A set of objects that displays properties of the WTPs in running state."
  },
  "capwapBaseWtpCurrId": {
    "name": "capwapBaseWtpCurrId",
    "oid": "1.3.6.1.2.1.196.1.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseWtpIdTC",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Represents the unique identifier of a WTP in running state."
  },
  "capwapBaseWtpPhyIndex": {
    "name": "capwapBaseWtpPhyIndex",
    "oid": "1.3.6.1.2.1.196.1.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysicalIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Represents the unique physical index of a physical entity in the ENTITY-MIB module [RFC4133]. Information about a specific WTP such as its software version could be accessed through this index."
  },
  "capwapBaseWtpBaseMacAddress": {
    "name": "capwapBaseWtpBaseMacAddress",
    "oid": "1.3.6.1.2.1.196.1.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          },
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the WTP's Base MAC Address, which MAY be assigned to the primary Ethernet interface. The instance of the object corresponds to the Base MAC Address sub-element in the CAPWAP protocol [RFC5415]."
  },
  "capwapBaseWtpTunnelModeOptions": {
    "name": "capwapBaseWtpTunnelModeOptions",
    "oid": "1.3.6.1.2.1.196.1.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseTunnelModeTC",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.43 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the tunneling modes of operation supported by the WTP."
  },
  "capwapBaseWtpMacTypeOptions": {
    "name": "capwapBaseWtpMacTypeOptions",
    "oid": "1.3.6.1.2.1.196.1.2.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseMacTypeTC",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.44 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the MAC mode of operation supported by the WTP."
  },
  "capwapBaseWtpDiscoveryType": {
    "name": "capwapBaseWtpDiscoveryType",
    "oid": "1.3.6.1.2.1.196.1.2.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 0,
          "staticConfig": 1,
          "dhcp": 2,
          "dns": 3,
          "acRef": 4
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.21 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents how the WTP discovers the AC. The following enumerated values are supported: unknown(0) - Unknown staticConfig(1) - Static configuration dhcp(2) - DHCP dns(3) - DNS acRef(4) - AC referral Note that the CAPWAP field [RFC5415] modeled by this object takes zero as starting value; this MIB object follows that rule."
  },
  "capwapBaseWtpRadiosInUseNum": {
    "name": "capwapBaseWtpRadiosInUseNum",
    "oid": "1.3.6.1.2.1.196.1.2.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.41 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of radios in use on the WTP."
  },
  "capwapBaseWtpRadioNumLimit": {
    "name": "capwapBaseWtpRadioNumLimit",
    "oid": "1.3.6.1.2.1.196.1.2.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.41 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the maximum radio number supported by the WTP."
  },
  "capwapBaseWtpRetransmitCount": {
    "name": "capwapBaseWtpRetransmitCount",
    "oid": "1.3.6.1.2.1.196.1.2.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "units": "retransmissions",
    "maxaccess": "read-only",
    "reference": "Section 4.8.8 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of retransmissions for a given CAPWAP packet."
  },
  "capwapBaseWirelessBindingTable": {
    "name": "capwapBaseWirelessBindingTable",
    "oid": "1.3.6.1.2.1.196.1.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of objects that display the mappings between WTP Virtual Radio Interfaces and PHY radios, and the wireless binding type for each PHY radio. As capwapBaseWirelessBindingTable stores the mappings between PHY radios (Radio IDs) and the ifIndexes of WTP Virtual Radio Interfaces, the operator can get the ifIndex information by querying this table. Such a query operation SHOULD run from radio ID 1 to radio ID 31 according to [RFC5415], and stop when an invalid ifIndex value (0) is returned. Values of all objects in this table are persistent at restart/reboot."
  },
  "capwapBaseWirelessBindingEntry": {
    "name": "capwapBaseWirelessBindingEntry",
    "oid": "1.3.6.1.2.1.196.1.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileId",
        "implied": 0
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWirelessBindingRadioId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A set of objects that displays the mapping between a specific WTP Virtual Radio Interface and a PHY radio, and the wireless binding type for the PHY radio."
  },
  "capwapBaseWirelessBindingRadioId": {
    "name": "capwapBaseWirelessBindingRadioId",
    "oid": "1.3.6.1.2.1.196.1.2.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseRadioIdTC",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "reference": "Section 4.3 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the identifier of a PHY radio on a WTP, which is required to be unique on a WTP. For example, WTP A and WTP B use a same value of capwapBaseWirelessBindingRadioId for their first radio."
  },
  "capwapBaseWirelessBindingVirtualRadioIfIndex": {
    "name": "capwapBaseWirelessBindingVirtualRadioIfIndex",
    "oid": "1.3.6.1.2.1.196.1.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Represents the index value that uniquely identifies a WLAN Virtual Radio Interface. The interface identified by a particular value of this index is the same interface as identified by the same value of the ifIndex. Before WTPs contact the AC to get configuration, the operator configures WTP profiles for them. The creation of a WTP profile triggers the system to automatically create a specific number of WTP Virtual Radio Interfaces and add a new row object in the capwapBaseWirelessBindingTable without manual intervention. As most MIB modules use the ifIndex to identify an interface for configuration and statistical data (for example, the IEEE 802.11 MIB module [IEEE.802-11.2007]), it will be easy to reuse other wireless binding MIB modules through the WTP Virtual Radio Interface in the Centralized WLAN Architecture."
  },
  "capwapBaseWirelessBindingType": {
    "name": "capwapBaseWirelessBindingType",
    "oid": "1.3.6.1.2.1.196.1.2.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dot11": 1,
          "epc": 3
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "Section 4.3 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the wireless binding type for the radio. The following enumerated values are supported: dot11(1) - IEEE 802.11 epc(3) - EPCGlobal"
  },
  "capwapBaseStationTable": {
    "name": "capwapBaseStationTable",
    "oid": "1.3.6.1.2.1.196.1.2.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "A table of objects that display stations that are accessing the wireless service provided by the AC."
  },
  "capwapBaseStationEntry": {
    "name": "capwapBaseStationEntry",
    "oid": "1.3.6.1.2.1.196.1.2.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseStationId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A set of objects that displays a station that is associated with the specific radio on the WTP. Note that in some cases such as roaming that a station may simultaneously associate with two WTPs for some (short) time. The MIB implementation MUST ensure there is only one valid and meaningful entry for a specific station."
  },
  "capwapBaseStationId": {
    "name": "capwapBaseStationId",
    "oid": "1.3.6.1.2.1.196.1.2.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseStationIdTC",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "reference": "Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the unique identifier of the station."
  },
  "capwapBaseStationWtpId": {
    "name": "capwapBaseStationWtpId",
    "oid": "1.3.6.1.2.1.196.1.2.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseWtpIdTC",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Represents the unique identifier of a WTP in running state."
  },
  "capwapBaseStationWtpRadioId": {
    "name": "capwapBaseStationWtpRadioId",
    "oid": "1.3.6.1.2.1.196.1.2.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseRadioIdTC",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.3 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the identifier of a PHY radio on a WTP, which is required to be unique on a WTP. For example, WTP A and WTP B use a same value of capwapBaseStationWtpRadioId for their first radio."
  },
  "capwapBaseStationAddedTime": {
    "name": "capwapBaseStationAddedTime",
    "oid": "1.3.6.1.2.1.196.1.2.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the time when the station is added."
  },
  "capwapBaseStationVlanName": {
    "name": "capwapBaseStationVlanName",
    "oid": "1.3.6.1.2.1.196.1.2.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents VLAN name to which the station is associated."
  },
  "capwapBaseWtpEventsStatsTable": {
    "name": "capwapBaseWtpEventsStatsTable",
    "oid": "1.3.6.1.2.1.196.1.2.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "A table of objects that display the WTPs' events statistics."
  },
  "capwapBaseWtpEventsStatsEntry": {
    "name": "capwapBaseWtpEventsStatsEntry",
    "oid": "1.3.6.1.2.1.196.1.2.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpCurrId",
        "implied": 0
      }
    ],
    "reference": "Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "A set of objects that displays the events statistics of a WTP."
  },
  "capwapBaseWtpEventsStatsRebootCount": {
    "name": "capwapBaseWtpEventsStatsRebootCount",
    "oid": "1.3.6.1.2.1.196.1.2.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of reboots that have occurred due to a WTP crash. Note that the CAPWAP field [RFC5415] modeled by this counter takes the value 65535 to indicate that the information is not available on the WTP. This MIB object does not follow this behavior, which would not be standard in SMIv2. If the WTP does not have the information, the agent will not instantiate the object."
  },
  "capwapBaseWtpEventsStatsInitCount": {
    "name": "capwapBaseWtpEventsStatsInitCount",
    "oid": "1.3.6.1.2.1.196.1.2.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of reboots that have occurred at the request of a CAPWAP protocol message, such as a change in configuration that requires a reboot or an explicit CAPWAP protocol reset request. Note that the CAPWAP field [RFC5415] modeled by this counter takes the value 65535 to indicate that the information is not available on the WTP. This MIB object does not follow this behavior, which would not be standard in SMIv2. If the WTP does not have the information, the agent will not instantiate the object."
  },
  "capwapBaseWtpEventsStatsLinkFailureCount": {
    "name": "capwapBaseWtpEventsStatsLinkFailureCount",
    "oid": "1.3.6.1.2.1.196.1.2.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of times that a CAPWAP protocol connection with an AC has failed due to link failures."
  },
  "capwapBaseWtpEventsStatsSwFailureCount": {
    "name": "capwapBaseWtpEventsStatsSwFailureCount",
    "oid": "1.3.6.1.2.1.196.1.2.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of times that a CAPWAP protocol connection with an AC has failed due to software-related reasons."
  },
  "capwapBaseWtpEventsStatsHwFailureCount": {
    "name": "capwapBaseWtpEventsStatsHwFailureCount",
    "oid": "1.3.6.1.2.1.196.1.2.6.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of times that a CAPWAP protocol connection with an AC has failed due to hardware-related reasons."
  },
  "capwapBaseWtpEventsStatsOtherFailureCount": {
    "name": "capwapBaseWtpEventsStatsOtherFailureCount",
    "oid": "1.3.6.1.2.1.196.1.2.6.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of times that a CAPWAP protocol connection with an AC has failed due to known reasons, other than the AC-initiated, link, software or hardware failures."
  },
  "capwapBaseWtpEventsStatsUnknownFailureCount": {
    "name": "capwapBaseWtpEventsStatsUnknownFailureCount",
    "oid": "1.3.6.1.2.1.196.1.2.6.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of times that a CAPWAP protocol connection with an AC has failed for unknown reasons."
  },
  "capwapBaseWtpEventsStatsLastFailureType": {
    "name": "capwapBaseWtpEventsStatsLastFailureType",
    "oid": "1.3.6.1.2.1.196.1.2.6.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unsupported": 0,
          "acInit": 1,
          "linkFailure": 2,
          "swFailure": 3,
          "hwFailure": 4,
          "otherFailure": 5,
          "unknown": 255
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the failure type of the most recent WTP failure. The following enumerated values are supported: unsupported(0) - Not supported acInit(1) - The AC initiated linkFailure(2) - Link failure swFailure(3) - Software failure hwFailure(4) - Hardware failure otherFailure(5) - Other failure unknown(255) - Unknown (e.g., WTP doesn't keep track of info) Note that the CAPWAP field [RFC5415] modeled by this object takes zero as starting value; this MIB object follows that rule."
  },
  "capwapBaseRadioEventsStatsTable": {
    "name": "capwapBaseRadioEventsStatsTable",
    "oid": "1.3.6.1.2.1.196.1.2.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "A table of objects that display statistics on the radios' behaviors and reasons why the WTP radio has been reset. To get the events statistics of all radios on a specific WTP (identified by the capwapBaseWtpCurrId), a query operation SHOULD run from radio ID 1 to radio ID 31 until there is no data returned. The radio ID here corresponds to the object capwapBaseRadioEventsWtpRadioId. If the previous MIB operations such as query on the capwapBaseWirelessBindingTable know the exact value of each radio ID, the query operation on the capwapBaseRadioEventsStatsTable could use that value of Radio IDs."
  },
  "capwapBaseRadioEventsStatsEntry": {
    "name": "capwapBaseRadioEventsStatsEntry",
    "oid": "1.3.6.1.2.1.196.1.2.7.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpCurrId",
        "implied": 0
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseRadioEventsWtpRadioId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A set of objects that displays the statistical data of events that happened on a specific radio of a WTP."
  },
  "capwapBaseRadioEventsWtpRadioId": {
    "name": "capwapBaseRadioEventsWtpRadioId",
    "oid": "1.3.6.1.2.1.196.1.2.7.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseRadioIdTC",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "reference": "Section 4.3 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the identifier of a PHY radio on a WTP, which is required to be unique on a WTP. For example, WTP A and WTP B use the same value of capwapBaseRadioEventsWtpRadioId for their first radio."
  },
  "capwapBaseRadioEventsStatsResetCount": {
    "name": "capwapBaseRadioEventsStatsResetCount",
    "oid": "1.3.6.1.2.1.196.1.2.7.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of times that the radio has been reset."
  },
  "capwapBaseRadioEventsStatsSwFailureCount": {
    "name": "capwapBaseRadioEventsStatsSwFailureCount",
    "oid": "1.3.6.1.2.1.196.1.2.7.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of times that the radio has failed due to software-related reasons."
  },
  "capwapBaseRadioEventsStatsHwFailureCount": {
    "name": "capwapBaseRadioEventsStatsHwFailureCount",
    "oid": "1.3.6.1.2.1.196.1.2.7.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of times that the radio has failed due to hardware-related reasons."
  },
  "capwapBaseRadioEventsStatsOtherFailureCount": {
    "name": "capwapBaseRadioEventsStatsOtherFailureCount",
    "oid": "1.3.6.1.2.1.196.1.2.7.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of times that the radio has failed due to known reasons, other than software or hardware failure."
  },
  "capwapBaseRadioEventsStatsUnknownFailureCount": {
    "name": "capwapBaseRadioEventsStatsUnknownFailureCount",
    "oid": "1.3.6.1.2.1.196.1.2.7.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of times that the radio has failed for unknown reasons."
  },
  "capwapBaseRadioEventsStatsConfigUpdateCount": {
    "name": "capwapBaseRadioEventsStatsConfigUpdateCount",
    "oid": "1.3.6.1.2.1.196.1.2.7.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of times that the radio configuration has been updated."
  },
  "capwapBaseRadioEventsStatsChannelChangeCount": {
    "name": "capwapBaseRadioEventsStatsChannelChangeCount",
    "oid": "1.3.6.1.2.1.196.1.2.7.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of times that the radio channel has been changed."
  },
  "capwapBaseRadioEventsStatsBandChangeCount": {
    "name": "capwapBaseRadioEventsStatsBandChangeCount",
    "oid": "1.3.6.1.2.1.196.1.2.7.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of times that the radio has changed frequency bands."
  },
  "capwapBaseRadioEventsStatsCurrNoiseFloor": {
    "name": "capwapBaseRadioEventsStatsCurrNoiseFloor",
    "oid": "1.3.6.1.2.1.196.1.2.7.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "dBm",
    "maxaccess": "read-only",
    "reference": "Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the noise floor of the radio receiver in units of dBm."
  },
  "capwapBaseRadioEventsStatsDecryptErrorCount": {
    "name": "capwapBaseRadioEventsStatsDecryptErrorCount",
    "oid": "1.3.6.1.2.1.196.1.2.7.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of decryption errors that have occurred on the WTP. Note that this field is only valid in cases where the WTP provides encryption/decryption services."
  },
  "capwapBaseRadioEventsStatsLastFailureType": {
    "name": "capwapBaseRadioEventsStatsLastFailureType",
    "oid": "1.3.6.1.2.1.196.1.2.7.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unsupported": 0,
          "swFailure": 1,
          "hwFailure": 2,
          "otherFailure": 3,
          "unknown": 255
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the failure type of the most recent radio failure. The following enumerated values are supported: unsupported(0) - Not supported swFailure(1) - Software failure hwFailure(2) - Hardware failure otherFailure(3) - Other failure unknown(255) - Unknown Note that the CAPWAP field [RFC5415] modeled by this object takes zero as starting value; this MIB object follows that rule."
  },
  "capwapBaseParameters": {
    "name": "capwapBaseParameters",
    "oid": "1.3.6.1.2.1.196.1.3",
    "class": "objectidentity"
  },
  "capwapBaseAcMaxRetransmit": {
    "name": "capwapBaseAcMaxRetransmit",
    "oid": "1.3.6.1.2.1.196.1.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 5,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "Section 4.8.7 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the maximum number of retransmissions for a given CAPWAP packet before the link layer considers the peer dead. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseAcChangeStatePendingTimer": {
    "name": "capwapBaseAcChangeStatePendingTimer",
    "oid": "1.3.6.1.2.1.196.1.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 25,
        "format": "decimal"
      }
    },
    "units": "second",
    "maxaccess": "read-write",
    "reference": "Section 4.7.1 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the maximum time, in seconds, the AC will wait for the Change State Event Request from the WTP after having transmitted a successful Configuration Status Response message. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseAcDataCheckTimer": {
    "name": "capwapBaseAcDataCheckTimer",
    "oid": "1.3.6.1.2.1.196.1.3.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 30,
        "format": "decimal"
      }
    },
    "units": "second",
    "maxaccess": "read-write",
    "reference": "Section 4.7.4 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents The number of seconds the AC will wait for the Data Channel Keep Alive, which is required by the CAPWAP state machine's Data Check state. The AC resets the state machine if this timer expires prior to transitioning to the next state. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseAcDTLSSessionDeleteTimer": {
    "name": "capwapBaseAcDTLSSessionDeleteTimer",
    "oid": "1.3.6.1.2.1.196.1.3.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 5,
        "format": "decimal"
      }
    },
    "units": "second",
    "maxaccess": "read-write",
    "reference": "Section 4.7.6 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the minimum time, in seconds, the AC MUST wait for DTLS session deletion. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseAcEchoInterval": {
    "name": "capwapBaseAcEchoInterval",
    "oid": "1.3.6.1.2.1.196.1.3.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 30,
        "format": "decimal"
      }
    },
    "units": "second",
    "maxaccess": "read-write",
    "reference": "Section 4.7.7 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the minimum time, in seconds, between sending Echo Request messages to the AC with which the WTP has joined. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseAcRetransmitInterval": {
    "name": "capwapBaseAcRetransmitInterval",
    "oid": "1.3.6.1.2.1.196.1.3.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 3,
        "format": "decimal"
      }
    },
    "units": "second",
    "maxaccess": "read-write",
    "reference": "Section 4.7.12 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the minimum time, in seconds, in which a non-acknowledged CAPWAP packet will be retransmitted. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseAcSilentInterval": {
    "name": "capwapBaseAcSilentInterval",
    "oid": "1.3.6.1.2.1.196.1.3.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 30,
        "format": "decimal"
      }
    },
    "units": "second",
    "maxaccess": "read-write",
    "reference": "Section 4.7.13 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the minimum time, in seconds, during which the AC SHOULD ignore all CAPWAP and DTLS packets received from the WTP that is in the Sulking state. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseAcWaitDTLSTimer": {
    "name": "capwapBaseAcWaitDTLSTimer",
    "oid": "1.3.6.1.2.1.196.1.3.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 30,
            "max": 4294967295
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 60,
        "format": "decimal"
      }
    },
    "units": "second",
    "maxaccess": "read-write",
    "reference": "Section 4.7.15 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the maximum time, in seconds, the AC MUST wait without having received a DTLS Handshake message from an AC. This timer MUST be greater than 30 seconds. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseAcWaitJoinTimer": {
    "name": "capwapBaseAcWaitJoinTimer",
    "oid": "1.3.6.1.2.1.196.1.3.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 20,
            "max": 4294967295
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 60,
        "format": "decimal"
      }
    },
    "units": "second",
    "maxaccess": "read-write",
    "reference": "Section 4.7.16 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the maximum time, in seconds, the AC will wait after the DTLS session has been established until it receives the Join Request from the WTP. This timer MUST be greater than 20 seconds. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseAcEcnSupport": {
    "name": "capwapBaseAcEcnSupport",
    "oid": "1.3.6.1.2.1.196.1.3.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "limited": 0,
          "fullAndLimited": 1
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "Section 4.6.25 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the support for the Explicit Congestion Notification (ECN) bits, as defined in [RFC3168]. The value of the object is persistent at restart/reboot. The following enumerated values are supported: limited(0) - Limited ECN support fullAndLimited(1) - Full and limited ECN support Note that the CAPWAP field [RFC5415] modeled by this object takes zero as starting value; this MIB object follows that rule."
  },
  "capwapBaseStats": {
    "name": "capwapBaseStats",
    "oid": "1.3.6.1.2.1.196.1.4",
    "class": "objectidentity"
  },
  "capwapBaseFailedDTLSAuthFailureCount": {
    "name": "capwapBaseFailedDTLSAuthFailureCount",
    "oid": "1.3.6.1.2.1.196.1.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.8.3 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of failed DTLS session establishment attempts due to authentication failures."
  },
  "capwapBaseFailedDTLSSessionCount": {
    "name": "capwapBaseFailedDTLSSessionCount",
    "oid": "1.3.6.1.2.1.196.1.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Section 4.8.4 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the number of failed DTLS session establishment attempts."
  },
  "capwapBaseChannelUp": {
    "name": "capwapBaseChannelUp",
    "oid": "1.3.6.1.2.1.196.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfWtpId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfChannelType"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfAuthenMethod"
      }
    ],
    "status": "current",
    "description": "This notification is sent by the AC when a CAPWAP channel is established. The notification is separated for data or control channel."
  },
  "capwapBaseChannelDown": {
    "name": "capwapBaseChannelDown",
    "oid": "1.3.6.1.2.1.196.0.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfWtpId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfChannelType"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfChannelDownReason"
      }
    ],
    "status": "current",
    "description": "This notification is sent by the AC when a CAPWAP channel is down. The notification is separated for data or control channel."
  },
  "capwapBaseDecryptErrorReport": {
    "name": "capwapBaseDecryptErrorReport",
    "oid": "1.3.6.1.2.1.196.0.3",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfWtpId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfRadioId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfStationIdList"
      }
    ],
    "status": "current",
    "description": "This notification is generated when a WTP has had a decryption error since the last report.",
    "reference": "Section 4.6.17 of CAPWAP Protocol Specification, RFC 5415."
  },
  "capwapBaseJoinFailure": {
    "name": "capwapBaseJoinFailure",
    "oid": "1.3.6.1.2.1.196.0.4",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfWtpId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfJoinFailureReason"
      }
    ],
    "status": "current",
    "description": "This notification is generated when a WTP fails to join.",
    "reference": "Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415."
  },
  "capwapBaseImageUpgradeFailure": {
    "name": "capwapBaseImageUpgradeFailure",
    "oid": "1.3.6.1.2.1.196.0.5",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfWtpId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfImageFailureReason"
      }
    ],
    "status": "current",
    "description": "This notification is generated when a WTP fails to update the firmware image.",
    "reference": "Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415."
  },
  "capwapBaseConfigMsgError": {
    "name": "capwapBaseConfigMsgError",
    "oid": "1.3.6.1.2.1.196.0.6",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfWtpId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfConfigMsgErrorType"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfMsgErrorElements"
      }
    ],
    "status": "current",
    "description": "This notification is generated when a WTP receives message elements in the configuration management messages that it is unable to apply locally.",
    "reference": "Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415."
  },
  "capwapBaseRadioOperableStatus": {
    "name": "capwapBaseRadioOperableStatus",
    "oid": "1.3.6.1.2.1.196.0.7",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfWtpId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfRadioId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfRadioOperStatusFlag"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfRadioStatusCause"
      }
    ],
    "status": "current",
    "description": "The notification is generated when a radio's operational state has changed.",
    "reference": "Section 4.6.34 of CAPWAP Protocol Specification, RFC 5415."
  },
  "capwapBaseAuthenFailure": {
    "name": "capwapBaseAuthenFailure",
    "oid": "1.3.6.1.2.1.196.0.8",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfWtpId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfChannelType"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfAuthenMethod"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfAuthenFailureReason"
      }
    ],
    "status": "current",
    "description": "This is notification of an authentication failure event and provides the reason for it."
  },
  "capwapBaseNotifyVarObjects": {
    "name": "capwapBaseNotifyVarObjects",
    "oid": "1.3.6.1.2.1.196.1.5",
    "class": "objectidentity"
  },
  "capwapBaseNtfWtpId": {
    "name": "capwapBaseNtfWtpId",
    "oid": "1.3.6.1.2.1.196.1.5.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseWtpIdTC",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "Represents the unique identifier of a WTP."
  },
  "capwapBaseNtfRadioId": {
    "name": "capwapBaseNtfRadioId",
    "oid": "1.3.6.1.2.1.196.1.5.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseRadioIdTC",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "reference": "Section 4.3 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the identifier of a PHY radio on a WTP, which is only required to be unique on a WTP. For example, WTP A and WTP B can use the same value of capwapBaseNtfRadioId for their first radio."
  },
  "capwapBaseNtfChannelType": {
    "name": "capwapBaseNtfChannelType",
    "oid": "1.3.6.1.2.1.196.1.5.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseChannelTypeTC",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "Represents the channel type for the CAPWAP protocol."
  },
  "capwapBaseNtfAuthenMethod": {
    "name": "capwapBaseNtfAuthenMethod",
    "oid": "1.3.6.1.2.1.196.1.5.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "CapwapBaseAuthenMethodTC",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "Represents the authentication method for the CAPWAP Channel."
  },
  "capwapBaseNtfChannelDownReason": {
    "name": "capwapBaseNtfChannelDownReason",
    "oid": "1.3.6.1.2.1.196.1.5.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "timeout": 1,
          "rekeyFailure": 2,
          "acRebootWtp": 3,
          "dtlsError": 4,
          "maxRetransmit": 5
        }
      }
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "Represents the reason the channel is down. The following enumerated values are supported: timeout(1) - The keepalive timed out rekeyFailure(2) - Rekey process failed; channel will be broken acRebootWtp(3) - The AC rebooted the WTP dtlsError(4) - DTLS notifications: DTLSAborted, DTLSReassemblyFailure, DTLSPeerDisconnect, or frequent DTLSDecapFailure maxRetransmit(5) - The underlying reliable transport's RetransmitCount counter has reached the MaxRetransmit variable"
  },
  "capwapBaseNtfStationIdList": {
    "name": "capwapBaseNtfStationIdList",
    "oid": "1.3.6.1.2.1.196.1.5.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "LongUtf8String",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "accessible-for-notify",
    "reference": "Section 4.6.17 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents a list of station MAC addresses separated by semicolons."
  },
  "capwapBaseNtfAuthenFailureReason": {
    "name": "capwapBaseNtfAuthenFailureReason",
    "oid": "1.3.6.1.2.1.196.1.5.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "keyMismatch": 1,
          "invalidCert": 2,
          "reassemblyFailure": 3,
          "decapFailure": 4,
          "encapFailure": 5,
          "timeout": 6,
          "unknown": 8
        }
      }
    },
    "maxaccess": "accessible-for-notify",
    "reference": "Section 2.3.1 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the reason for WTP authorization failure. The following enumerated values are supported: keyMismatch(1) - WTP's and AC's keys did not match invalidCert(2) - Certification is not valid reassemblyFailure(3) - Fragment reassembly failure decapFailure(4) - Decapsulation error encapFailure(5) - Encapsulation error timeout(6) - WaitDTLS timer timeout unknown(8) - Unknown reason"
  },
  "capwapBaseNtfRadioOperStatusFlag": {
    "name": "capwapBaseNtfRadioOperStatusFlag",
    "oid": "1.3.6.1.2.1.196.1.5.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "operable": 0,
          "inoperable": 1
        }
      }
    },
    "maxaccess": "accessible-for-notify",
    "reference": "Section 4.6.34 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the operation status of a radio. The following enumerated values are supported: operable(0) - The radio is operable inoperable(1) - The radio is inoperable, and the capwapBaseNtfRadioStatusCause object gives the reason in detail Note that the CAPWAP field [RFC5415] modeled by this object takes zero as starting value; this MIB object follows that rule."
  },
  "capwapBaseNtfRadioStatusCause": {
    "name": "capwapBaseNtfRadioStatusCause",
    "oid": "1.3.6.1.2.1.196.1.5.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 0,
          "hwError": 1,
          "swError": 2,
          "adminSet": 3
        }
      }
    },
    "maxaccess": "accessible-for-notify",
    "reference": "Section 4.6.34 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the reason why the radio is out of service. The following enumerated values are supported: normal(0) - Normal status hwError(1) - Radio failure swError(2) - Software failure adminSet(3) - Administratively set Note that the CAPWAP field [RFC5415] modeled by this object takes zero as starting value; this MIB object follows that rule."
  },
  "capwapBaseNtfJoinFailureReason": {
    "name": "capwapBaseNtfJoinFailureReason",
    "oid": "1.3.6.1.2.1.196.1.5.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unspecified": 1,
          "resDepletion": 2,
          "unknownSource": 3,
          "incorrectData": 4,
          "sessionIdInUse": 5,
          "unsupportedHw": 6,
          "unsupportedBinding": 7
        }
      }
    },
    "maxaccess": "accessible-for-notify",
    "reference": "Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the reason of join failure. The following enumerated values are supported: unspecified(1) - Unspecified failure resDepletion(2) - Resource depletion unknownSource(3) - Unknown source incorrectData(4) - Incorrect data sessionIdInUse(5) - Session ID already in use unsupportedHw(6) - WTP hardware not supported unsupportedBinding(7) - Binding not supported"
  },
  "capwapBaseNtfImageFailureReason": {
    "name": "capwapBaseNtfImageFailureReason",
    "oid": "1.3.6.1.2.1.196.1.5.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "invalidChecksum": 1,
          "invalidLength": 2,
          "other": 3,
          "inStorage": 4
        }
      }
    },
    "maxaccess": "accessible-for-notify",
    "reference": "Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the reason of image failure. The following enumerated values are supported: invalidChecksum(1) - Invalid checksum invalidLength(2) - Invalid data length other(3) - Other error inStorage(4) - Image already present"
  },
  "capwapBaseNtfConfigMsgErrorType": {
    "name": "capwapBaseNtfConfigMsgErrorType",
    "oid": "1.3.6.1.2.1.196.1.5.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknownElement": 1,
          "unsupportedElement": 2,
          "unknownValue": 3,
          "unsupportedValue": 4
        }
      }
    },
    "maxaccess": "accessible-for-notify",
    "reference": "Section 4.6.36 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the type of configuration message error. The following enumerated values are supported: unknownElement(1) - Unknown message element unsupportedElement(2) - Unsupported message element unknownValue(3) - Unknown message element value unsupportedValue(4) - Unsupported message element value"
  },
  "capwapBaseNtfMsgErrorElements": {
    "name": "capwapBaseNtfMsgErrorElements",
    "oid": "1.3.6.1.2.1.196.1.5.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "reference": "Section 4.6.36 of CAPWAP Protocol Specification, RFC 5415.",
    "status": "current",
    "description": "Represents the message elements sent by the AC in the Configuration Status Response message that caused the error."
  },
  "capwapBaseNotifyControlObjects": {
    "name": "capwapBaseNotifyControlObjects",
    "oid": "1.3.6.1.2.1.196.1.6",
    "class": "objectidentity"
  },
  "capwapBaseChannelUpDownNotifyEnable": {
    "name": "capwapBaseChannelUpDownNotifyEnable",
    "oid": "1.3.6.1.2.1.196.1.6.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Represents whether the Channel Up / Channel Down notification should be generated. A value of true(1) means that the notification is enabled. A value of false(2) means that the notification is disabled. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseDecryptErrorNotifyEnable": {
    "name": "capwapBaseDecryptErrorNotifyEnable",
    "oid": "1.3.6.1.2.1.196.1.6.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "true",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Represents whether the decryption error notification should be generated. A value of true(1) means that the notification is enabled. A value of false(2) means that the notification is disabled. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseJoinFailureNotifyEnable": {
    "name": "capwapBaseJoinFailureNotifyEnable",
    "oid": "1.3.6.1.2.1.196.1.6.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "true",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Represents whether the notification of a WTP join failure should be generated. A value of true(1) means that the notification is enabled. A value of false(2) means that the notification is disabled. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseImageUpgradeFailureNotifyEnable": {
    "name": "capwapBaseImageUpgradeFailureNotifyEnable",
    "oid": "1.3.6.1.2.1.196.1.6.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "true",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Represents whether the notification of a WTP image upgrade failure should be generated. A value of true(1) means that the notification is enabled. A value of false(2) means that the notification is disabled. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseConfigMsgErrorNotifyEnable": {
    "name": "capwapBaseConfigMsgErrorNotifyEnable",
    "oid": "1.3.6.1.2.1.196.1.6.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Represents whether the notification of configuration message error should be generated. A value of true(1) means that the notification is enabled. A value of false(2) means that the notification is disabled. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseRadioOperableStatusNotifyEnable": {
    "name": "capwapBaseRadioOperableStatusNotifyEnable",
    "oid": "1.3.6.1.2.1.196.1.6.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Represents whether the notification of a radio's operational state change should be generated. A value of true(1) means that the notification is enabled. A value of false(2) means that the notification is disabled. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseAuthenFailureNotifyEnable": {
    "name": "capwapBaseAuthenFailureNotifyEnable",
    "oid": "1.3.6.1.2.1.196.1.6.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "true",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Represents whether the notification of authentication failure should be generated. A value of true(1) means that the notification is enabled. A value of false(2) means that the notification is disabled. The value of the object is persistent at restart/reboot."
  },
  "capwapBaseCompliances": {
    "name": "capwapBaseCompliances",
    "oid": "1.3.6.1.2.1.196.2.1",
    "class": "objectidentity"
  },
  "capwapBaseGroups": {
    "name": "capwapBaseGroups",
    "oid": "1.3.6.1.2.1.196.2.2",
    "class": "objectidentity"
  },
  "capwapBaseCompliance": {
    "name": "capwapBaseCompliance",
    "oid": "1.3.6.1.2.1.196.2.1.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ifGeneralInformationGroup",
        "module": "IF-MIB"
      },
      {
        "object": "capwapBaseAcNodeGroup",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseWtpProfileGroup",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseWtpStateGroup",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseWtpGroup",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseRadioGroup",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseStationGroup",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseAcNodeGroup2",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseAcNameListGroup",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseMacAclsGroup",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseWtpProfileGroup2",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseWtpGroup2",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseWtpEventsStatsGroup",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseRadioEventsStatsGroup",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseParametersGroup",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseStatsGroup",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseNotificationsGroup",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseNotifyVarsGroup",
        "module": "CAPWAP-BASE-MIB"
      },
      {
        "object": "capwapBaseNotifyControlGroup",
        "module": "CAPWAP-BASE-MIB"
      }
    ],
    "status": "current",
    "description": "Describes the requirements for conformance to the CAPWAP-BASE-MIB module."
  },
  "capwapBaseAcNodeGroup": {
    "name": "capwapBaseAcNodeGroup",
    "oid": "1.3.6.1.2.1.196.2.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpSessions"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpSessionsLimit"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseStationSessions"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseStationSessionsLimit"
      }
    ],
    "status": "current",
    "description": "A collection of objects that is used to represent the basic properties of the AC from the CAPWAP protocol perspective."
  },
  "capwapBaseAcNodeGroup2": {
    "name": "capwapBaseAcNodeGroup2",
    "oid": "1.3.6.1.2.1.196.2.2.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseDataChannelDTLSPolicyOptions"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseControlChannelAuthenOptions"
      }
    ],
    "status": "current",
    "description": "A collection of objects that is used to represent the other properties (such as security) of the AC from the CAPWAP protocol perspective."
  },
  "capwapBaseAcNameListGroup": {
    "name": "capwapBaseAcNameListGroup",
    "oid": "1.3.6.1.2.1.196.2.2.3",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAcNameListName"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAcNameListPriority"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAcNameListRowStatus"
      }
    ],
    "status": "current",
    "description": "A collection of objects that is used to configure the AC name list."
  },
  "capwapBaseMacAclsGroup": {
    "name": "capwapBaseMacAclsGroup",
    "oid": "1.3.6.1.2.1.196.2.2.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseMacAclStationId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseMacAclRowStatus"
      }
    ],
    "status": "current",
    "description": "A collection of objects that is used to configure the stations ACL."
  },
  "capwapBaseWtpProfileGroup": {
    "name": "capwapBaseWtpProfileGroup",
    "oid": "1.3.6.1.2.1.196.2.2.5",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileName"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpMacAddress"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpModelNumber"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpName"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpLocation"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileRowStatus"
      }
    ],
    "status": "current",
    "description": "A collection of objects that is used to configure the WTP profile."
  },
  "capwapBaseWtpProfileGroup2": {
    "name": "capwapBaseWtpProfileGroup2",
    "oid": "1.3.6.1.2.1.196.2.2.6",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpStaticIpEnable"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpStaticIpType"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpStaticIpAddress"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpNetmask"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpGateway"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpFallbackEnable"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpEchoInterval"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpIdleTimeout"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpMaxDiscoveryInterval"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpReportInterval"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpStatisticsTimer"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpProfileWtpEcnSupport"
      }
    ],
    "status": "current",
    "description": "A collection of optional objects that is used to configure the WTP profile."
  },
  "capwapBaseWtpStateGroup": {
    "name": "capwapBaseWtpStateGroup",
    "oid": "1.3.6.1.2.1.196.2.2.7",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpStateWtpIpAddressType"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpStateWtpIpAddress"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpStateWtpLocalIpAddressType"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpStateWtpLocalIpAddress"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpStateWtpBaseMacAddress"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpState"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpStateWtpUpTime"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpStateWtpCurrWtpProfileId"
      }
    ],
    "status": "current",
    "description": "A collection of objects that is used to represent the WTP's state information."
  },
  "capwapBaseWtpGroup": {
    "name": "capwapBaseWtpGroup",
    "oid": "1.3.6.1.2.1.196.2.2.8",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpBaseMacAddress"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpTunnelModeOptions"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpMacTypeOptions"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpDiscoveryType"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpRadiosInUseNum"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpRadioNumLimit"
      }
    ],
    "status": "current",
    "description": "A collection of objects that is used to represent the properties information for the WTPs in running state."
  },
  "capwapBaseWtpGroup2": {
    "name": "capwapBaseWtpGroup2",
    "oid": "1.3.6.1.2.1.196.2.2.9",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpPhyIndex"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpRetransmitCount"
      }
    ],
    "status": "current",
    "description": "A collection of optional objects that is used to represent the properties of the WTPs in running state."
  },
  "capwapBaseRadioGroup": {
    "name": "capwapBaseRadioGroup",
    "oid": "1.3.6.1.2.1.196.2.2.10",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWirelessBindingVirtualRadioIfIndex"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWirelessBindingType"
      }
    ],
    "status": "current",
    "description": "A collection of objects that is used to represent the wireless binding type and the mappings between the ifIndexes of WLAN Virtual Radio Interfaces and PHY radios."
  },
  "capwapBaseStationGroup": {
    "name": "capwapBaseStationGroup",
    "oid": "1.3.6.1.2.1.196.2.2.11",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseStationWtpId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseStationWtpRadioId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseStationAddedTime"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseStationVlanName"
      }
    ],
    "status": "current",
    "description": "A collection of objects that is used to represent the stations' basic properties."
  },
  "capwapBaseWtpEventsStatsGroup": {
    "name": "capwapBaseWtpEventsStatsGroup",
    "oid": "1.3.6.1.2.1.196.2.2.12",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpEventsStatsRebootCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpEventsStatsInitCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpEventsStatsLinkFailureCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpEventsStatsSwFailureCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpEventsStatsHwFailureCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpEventsStatsOtherFailureCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpEventsStatsUnknownFailureCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseWtpEventsStatsLastFailureType"
      }
    ],
    "status": "current",
    "description": "A collection of objects that is used for collecting WTP reboot count, link failure count, hardware failure count, and so on."
  },
  "capwapBaseRadioEventsStatsGroup": {
    "name": "capwapBaseRadioEventsStatsGroup",
    "oid": "1.3.6.1.2.1.196.2.2.13",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseRadioEventsStatsResetCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseRadioEventsStatsSwFailureCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseRadioEventsStatsHwFailureCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseRadioEventsStatsOtherFailureCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseRadioEventsStatsUnknownFailureCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseRadioEventsStatsConfigUpdateCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseRadioEventsStatsChannelChangeCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseRadioEventsStatsBandChangeCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseRadioEventsStatsCurrNoiseFloor"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseRadioEventsStatsDecryptErrorCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseRadioEventsStatsLastFailureType"
      }
    ],
    "status": "current",
    "description": "A collection of objects that is used for collecting radio reset count, channel change count, hardware failure count, and so on"
  },
  "capwapBaseParametersGroup": {
    "name": "capwapBaseParametersGroup",
    "oid": "1.3.6.1.2.1.196.2.2.14",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAcMaxRetransmit"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAcChangeStatePendingTimer"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAcDataCheckTimer"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAcDTLSSessionDeleteTimer"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAcEchoInterval"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAcRetransmitInterval"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAcSilentInterval"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAcWaitDTLSTimer"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAcWaitJoinTimer"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAcEcnSupport"
      }
    ],
    "status": "current",
    "description": "Objects used for the CAPWAP protocol's parameters."
  },
  "capwapBaseStatsGroup": {
    "name": "capwapBaseStatsGroup",
    "oid": "1.3.6.1.2.1.196.2.2.15",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseFailedDTLSAuthFailureCount"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseFailedDTLSSessionCount"
      }
    ],
    "status": "current",
    "description": "Objects used for collecting the CAPWAP protocol's statistics."
  },
  "capwapBaseNotificationsGroup": {
    "name": "capwapBaseNotificationsGroup",
    "oid": "1.3.6.1.2.1.196.2.2.16",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseChannelUp"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseChannelDown"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseDecryptErrorReport"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseJoinFailure"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseImageUpgradeFailure"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseConfigMsgError"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseRadioOperableStatus"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAuthenFailure"
      }
    ],
    "status": "current",
    "description": "A collection of notifications in this MIB module."
  },
  "capwapBaseNotifyVarsGroup": {
    "name": "capwapBaseNotifyVarsGroup",
    "oid": "1.3.6.1.2.1.196.2.2.17",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfWtpId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfRadioId"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfChannelType"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfAuthenMethod"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfChannelDownReason"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfStationIdList"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfAuthenFailureReason"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfRadioOperStatusFlag"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfRadioStatusCause"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfJoinFailureReason"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfImageFailureReason"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfConfigMsgErrorType"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseNtfMsgErrorElements"
      }
    ],
    "status": "current",
    "description": "Objects used for notifications."
  },
  "capwapBaseNotifyControlGroup": {
    "name": "capwapBaseNotifyControlGroup",
    "oid": "1.3.6.1.2.1.196.2.2.18",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseChannelUpDownNotifyEnable"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseDecryptErrorNotifyEnable"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseJoinFailureNotifyEnable"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseImageUpgradeFailureNotifyEnable"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseConfigMsgErrorNotifyEnable"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseRadioOperableStatusNotifyEnable"
      },
      {
        "module": "CAPWAP-BASE-MIB",
        "object": "capwapBaseAuthenFailureNotifyEnable"
      }
    ],
    "status": "current",
    "description": "Objects used to enable or disable notifications."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/CAPWAP-BASE-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:31:40 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "CAPWAP-BASE-MIB"
  }
}