{
  "imports": {
    "class": "imports",
    "CISCO-SMI": [
      "ciscoMgmt"
    ],
    "CISCO-TC": [
      "InterfaceIndexOrZero"
    ],
    "IF-MIB": [
      "ifIndex"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "Counter32",
      "Bits",
      "OBJECT-IDENTITY",
      "Gauge32",
      "Integer32",
      "iso",
      "Counter64",
      "IpAddress",
      "NOTIFICATION-TYPE",
      "MODULE-IDENTITY",
      "MibIdentifier",
      "TimeTicks",
      "Unsigned32",
      "OBJECT-TYPE"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ],
    "SNMPv2-TC-v1": [
      "TimeStamp",
      "DisplayString",
      "MacAddress"
    ]
  },
  "ciscoPagpMIB": {
    "name": "ciscoPagpMIB",
    "oid": "1.3.6.1.4.1.9.9.98",
    "class": "objectidentity"
  },
  "ciscoPagpMIBObjects": {
    "name": "ciscoPagpMIBObjects",
    "oid": "1.3.6.1.4.1.9.9.98.1",
    "class": "objectidentity"
  },
  "pagpGroupCapabilityConfiguration": {
    "name": "pagpGroupCapabilityConfiguration",
    "oid": "1.3.6.1.4.1.9.9.98.1.1",
    "class": "objectidentity"
  },
  "pagpProtocol": {
    "name": "pagpProtocol",
    "oid": "1.3.6.1.4.1.9.9.98.1.2",
    "class": "objectidentity"
  },
  "ciscoPagpMIBConformance": {
    "name": "ciscoPagpMIBConformance",
    "oid": "1.3.6.1.4.1.9.9.98.3",
    "class": "objectidentity"
  },
  "ciscoPagpMIBCompliances": {
    "name": "ciscoPagpMIBCompliances",
    "oid": "1.3.6.1.4.1.9.9.98.3.1",
    "class": "objectidentity"
  },
  "ciscoPagpMIBGroups": {
    "name": "ciscoPagpMIBGroups",
    "oid": "1.3.6.1.4.1.9.9.98.3.2",
    "class": "objectidentity"
  },
  "PagpGroupCapability": {
    "name": "PagpGroupCapability",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type"
    }
  },
  "PagpEthcOperationMode": {
    "name": "PagpEthcOperationMode",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 1,
          "manual": 2,
          "pagpOn": 3
        }
      }
    }
  },
  "PagpPortPriority": {
    "name": "PagpPortPriority",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    }
  },
  "PagpOperationMode": {
    "name": "PagpOperationMode",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "desirable": 1,
          "desirableSilent": 2,
          "automatic": 3,
          "automaticSilent": 4
        }
      }
    }
  },
  "PagpLearnMethod": {
    "name": "PagpLearnMethod",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "physPort": 1,
          "agPort": 2,
          "undefined": 3
        }
      }
    }
  },
  "pagpEtherChannelTable": {
    "name": "pagpEtherChannelTable",
    "oid": "1.3.6.1.4.1.9.9.98.1.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The pagpEtherChannelTable specifies, per physical interface, the Fast Etherchannel operational mode (off, manual, or protocol-controlled) and the capability of the interface to form aggregations. Interfaces that do not support Fast Etherchannel or PAgP do not have an entry in this table, nor do the agports, themselves."
  },
  "pagpEtherChannelEntry": {
    "name": "pagpEtherChannelEntry",
    "oid": "1.3.6.1.4.1.9.9.98.1.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The entry describes the permitted interface aggregation. Entries are created by the managed system for each interface which supports Fast Etherchannel."
  },
  "pagpEthcOperationMode": {
    "name": "pagpEthcOperationMode",
    "oid": "1.3.6.1.4.1.9.9.98.1.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PagpEthcOperationMode",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The managed device will refuse a request to set pagpEthcOperationMode to the pagpOn(3) state if the device does not implement the PAgP protocol. The managed device will refuse to set pagpEthcOperationMode to manual(2) or pagpOn(3) if the values in the interface's pagpAdminGroupCapability variable is inconsistent with other interfaces' pagpAdminGroupCapability values."
  },
  "pagpDeviceId": {
    "name": "pagpDeviceId",
    "oid": "1.3.6.1.4.1.9.9.98.1.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Uniquely identifies a device which implements Fast Etherchannel. The combination of pagpDeviceId and ifIndex must be unique over all interfaces in a network. pagpDeviceId typically identifies a device such as a bridge, router, or file server, but may be used to identify a smaller unit such as a single multi-interface circuit card."
  },
  "pagpPhysGroupCapability": {
    "name": "pagpPhysGroupCapability",
    "oid": "1.3.6.1.4.1.9.9.98.1.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PagpGroupCapability",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The values in pagpPhysGroupCapability indicate the aggregation capability of the underlying hardware. The speed, configuration, and status condition of the interface, e.g. ISL protocol on/off, ifOperStatus On/Off, full-/half-duplex, etc., does not affect the state of pagpPhysGroupCapability. Any number of interfaces with the same value of pagpPhysGroupCapability can be aggregated together manually."
  },
  "pagpOperGroupCapability": {
    "name": "pagpOperGroupCapability",
    "oid": "1.3.6.1.4.1.9.9.98.1.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PagpGroupCapability",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This variable informs the system administrator examining the Fast Etherchannel MIB of the capabilities of the current state of the interface's hardware to form agports. The pagpOperGroupCapability values are adjusted automatically by the managed system to reflect configuration changes, such as port speed or duplex mode, which can affect the ability of an interface to join agports. pagpOperGroupCapability reflects the ability to form aggregations; it does not specify whether the interface is or is not currently a member of such an aggregation. pagpOperGroupCapability values are chosen so that no two interfaces may be aggregated unless both pagpPhysGroupCapability and pagpAdminGroupCapability permit the aggregation, as well as the current configuration of the interfaces. pagpOperGroupCapability may change dynamically, as a result of the operation of automatic configuration protocols such as PAgP, in order to prevent illegal aggregations. When the PAgP protocol is enabled, then pagpOperGroupCapability is the value of the group capability being transmitted on this interface in PAgP packets."
  },
  "pagpAdminGroupCapability": {
    "name": "pagpAdminGroupCapability",
    "oid": "1.3.6.1.4.1.9.9.98.1.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PagpGroupCapability",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "pagpAdminGroupCapability is used by the network administrator to control the aggregation of interfaces into agports. The default value of pagpAdminGroupCapability is equal to the value of pagpPhysGroupCapability on that same interface. A pagpAdminGroupCapability may be set to restrict which interfaces may be aggregated. Any attempt to set an pagpAdminGroupCapability value that permits two interfaces to be aggregated together that are prohibited from being aggregated by the pagpPhysGroupCapability values will be refused. A given device may place consistency requirements on pagpAdminGroupCapability values that span multiple interfaces. For example, one may be changing interfaces 1-4 from group capabilities 1, 1, 1, 1 to group capabilities 1, 1, 3, 3. The capability vector 1, 1, 3, 1 may be illegal. The managed device will refuse a request to set a value in an interface's pagpAdminGroupCapability variable if: 1) that new value would result in an illegal combination of values; and 2) the interface being set does not have its pagpEthcOperationMode variable set to off(1). The pagpEthcOperationMode variable may be used to avoid illegal combinations of pagpAdminGroupCapability values. As long as a given interface's pagpEthcOperationMode is in the off state, any value may be set in that interface's pagpAdminGroupCapability variable. In the above example, the third interface could be disabled, the 3 could be written to the third and fourth interfaces, and the third interfaces re-enabled. The operating manuals of the managed device must be consulted to determine the legality of a given combination of pagpAdminGroupCapability values."
  },
  "pagpPortPriority": {
    "name": "pagpPortPriority",
    "oid": "1.3.6.1.4.1.9.9.98.1.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PagpPortPriority",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The priority of this interface relative to other interfaces when determining which interface is to be used in Hot Standby mode. Among all interfaces aggregated together with a single agport, the one with the highest numerical value of pagpPortPriority is selected for use. Default value is 128."
  },
  "pagpLearnMethod": {
    "name": "pagpLearnMethod",
    "oid": "1.3.6.1.4.1.9.9.98.1.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PagpLearnMethod",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This interface's learning method value. Specifies whether this device is able to learn the location of a source MAC address based on the agport on which it was received, agPort(2), or on the interface on which it was received, physPort(1). This value is relevant primarily to IEEE 802.1D transparent bridges. If a device does not associate recieved source MAC addresses with the interface on which it arrived, it should use the value agPort(2). The managed device will refuse an attempt to set the value of pagpLearnMethod to undefined(3). A particular device may support either physPort, agPort, or both."
  },
  "pagpGroupIfIndex": {
    "name": "pagpGroupIfIndex",
    "oid": "1.3.6.1.4.1.9.9.98.1.1.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "If pagpGroupIfIndex is 0, then the inteface is not aggregated to an agport, and is unavailable for normal data reception and transmission. If pagpGroupIfIndex equals the interface's own ifIndex, the interface is aggregated to itself, and behaves as a single interface (as if there were no Fast Etherchannel or PAgP). If pagpGroupIfIndex has any other value, then it must contain the ifIndex of an agport, and the interface is aggregated to that agport. The ifType of an agport is propVirtual(53)."
  },
  "pagpDistributionProtocol": {
    "name": "pagpDistributionProtocol",
    "oid": "1.3.6.1.4.1.9.9.98.1.1.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ip": 1,
          "mac": 2,
          "port": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "pagpDistributionProtocol controls the type of Protocol(IP or MAC) address or port number used on this interface's agport to distribute outgoing data frames among its component interfaces. Configuring pagpDistributionProtocol on this interface may result in having the same change on the other interfaces due to hardware architecture."
  },
  "pagpDistributionAddress": {
    "name": "pagpDistributionAddress",
    "oid": "1.3.6.1.4.1.9.9.98.1.1.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "source": 1,
          "destination": 2,
          "both": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "pagpDistributionAddress controls the type of distribution on the configured pagpDistributionProtocol used on this interface's agport to distribute outgoing data frames among its component interfaces. For example if the pagpDistributionProtocol is configured as 'ip(1)' and the pagpDistributionAddress is configured as 'both(3)', then every frame with a given source and destination IP value pairs will be sent on the same interface. Configuring pagpDistributionAddress on this interface may result in having the same change on the other interfaces due to hardware architecture."
  },
  "pagpProtocolConfigTable": {
    "name": "pagpProtocolConfigTable",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The table of per-interface Port Aggregation Protocol variables. Physical interfaces that support Fast Etherchannel and PAgP protocol have an entry in this table. If the value of pagpEthcOperationMode for the corresponding interface is off(1) or manual(2), then the the interface does not have any entries in this table."
  },
  "pagpProtocolConfigEntry": {
    "name": "pagpProtocolConfigEntry",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The entry describes the operational state of the PAgP protocol on a particular physical interface. Entries in this table are for interfaces that support both Fast Etherchannel and PAgP protocol. The agport itself is not represented in this table."
  },
  "pagpOperationMode": {
    "name": "pagpOperationMode",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PagpOperationMode",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Controls the operational mode of the PAgP protocol on this interface."
  },
  "pagpPortState": {
    "name": "pagpPortState",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "portDown": 1,
          "portUp": 2,
          "dataReceived": 3,
          "upData": 4,
          "pagpReceived": 5,
          "biDirectional": 6,
          "upPagp": 7,
          "upMult": 8
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the PAgP state machine on this interface. Values: portDown(1) - interface's ifOperStatus is not Up; portUp(2) - interface's ifOperStatus is Up, no packets yet received; dataReceived(3) - data packets, but no PAgP packets, have been received; upData(4) - interface is aggregated, but no PAgP packets have been received; pagpReceived(5) - one or more PAgP packets have been received; biDirectional(6) - interface has passed PAgP packets in both directions; upPagp(7) - interface is aggregated by means of PAgP; upMult(8) - interface is aggregated to an agport, but connects to more than one external device."
  },
  "pagpLastStateChange": {
    "name": "pagpLastStateChange",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value of sysUpTime the last time that pagpPortState changed."
  },
  "pagpHelloFrequency": {
    "name": "pagpHelloFrequency",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fast": 1,
          "slow": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "If pagpHelloFrequency is slow(2), this device uses a 105 second timer on this interface to time out receipt of PAgP packet. If fast(1), this device uses a 3.5 second timer. PAgP uses fast(1) by default. This value is set to slow(2) by action of the PAgP protocol."
  },
  "pagpDistributionAlgorithm": {
    "name": "pagpDistributionAlgorithm",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "pagpDistributionAlgorithm describes, in human terms, the method used on this interface's agport to distribute outgoing data frames among its component interfaces. 'Source MAC address', 'Source and Destination MAC addresses', or 'IP flow: Source, Destination, protocol type' might be typical values for pagpDistributionAlgorithm. If the interface is not aggregated with an agport (pagpGroupIfIndex contains either 0 or the interface's own ifIndex), pagpDistributionAlgorithm may contain a DisplayString of length 0. See the managed device's operation manual to determine the exact meaning of the information supplied in this variable. A device may implement more than one algorithm; selecting among those algorithms is not possible within this MIB. The maximum length of this DisplayString is 255 octets."
  },
  "pagpPartnerCount": {
    "name": "pagpPartnerCount",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "one": 2,
          "many": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of other devices known to be transmitting PAgP packets to this device on this physical interface. If pagpPartnerCount contains none(1), then the values of the remainder of the variables in this section are as defined by each variable for this case. If pagpPartnerCount contains one(2), then the values of the remainder of the variables in this section are valid. If pagpPartnerCount contains many(3), then the values of the remainder of the variables in this section reflect the last PAgP packet received. The values in this section are, in this case, unreliable, as they may change with the receipt of each new PAgP packet on this interface."
  },
  "pagpPartnerDeviceId": {
    "name": "pagpPartnerDeviceId",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "MAC Address of the partner, obtained from the PAgP packet last received on this interface. Contains all 0 if pagpPartnerCount contains none(1)."
  },
  "pagpPartnerLearnMethod": {
    "name": "pagpPartnerLearnMethod",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PagpLearnMethod",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of the partner's pagpLearnMethod value, obtained from the PAgP packet last received on this interface. undefined(3) if pagpPartnerCount contains none(1)."
  },
  "pagpPartnerPortPriority": {
    "name": "pagpPartnerPortPriority",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PagpPortPriority",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of the partner's pagpPortPriority, obtained from the PAgP packet last received on this interface. 0 if pagpPartnerCount contains none(1)."
  },
  "pagpPartnerIfIndex": {
    "name": "pagpPartnerIfIndex",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of the partner's ifIndex value, obtained from the PAgP packet last received on this interface. 0 if pagpPartnerCount contains none(1). Use CISCO-CDP-MIB cdpCacheTable to resolve the partner's IP Address and get ifTable information for this ifIndex."
  },
  "pagpPartnerGroupCapability": {
    "name": "pagpPartnerGroupCapability",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PagpGroupCapability",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of the partner's pagpOperGroupCapability obtained from the PAgP packet last received on this interface. 0 if pagpPartnerCount contains none(1)"
  },
  "pagpPartnerGroupIfIndex": {
    "name": "pagpPartnerGroupIfIndex",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of the partner's pagpGroupIfIndex obtained from the PAgP packet last received on this interface. 0 if pagpPartnerCount contains none(1)."
  },
  "pagpPartnerDeviceName": {
    "name": "pagpPartnerDeviceName",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The DisplayString obtained from the PAgP packet last received on this interface. 0-length string if pagpPartnerCount contains none(1), or if no device name has been received. The value transmitted in a PAgP information packet should be the sysName value of the device sending the packet. The maximum size of this DisplayString is 255 octets."
  },
  "pagpPartnerPortName": {
    "name": "pagpPartnerPortName",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The DisplayString obtained from the PAgP packet last received on this interface. 0-length string if pagpPartnerCount contains none(1), or if no port name has been received. The value transmitted in a PAgP packet should be the ifName value of the interface on the device sending the packet. The maximum size of this DisplayString is 255 octets."
  },
  "pagpPartnerAgportMACAddress": {
    "name": "pagpPartnerAgportMACAddress",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MacAddress obtained from the PAgP packet last received on this interface. All 0 if pagpPartnerCount contains none(1) or if no agport MacAddress has been received in a PAgP packet. If this value is not all 0, then the device sending the TLV is promising to use this MAC address, and only this MAC address, in all frames it sends on the agport."
  },
  "pagpProtocolStatsTable": {
    "name": "pagpProtocolStatsTable",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The table of per-interface Port Aggregation Protocol statistics. The entries in this table are present only on an interface that is capable both of implementing Fast Etherchannel, and can be controlled by the PAgP protocol. The agport itself is not represented in this table."
  },
  "pagpProtocolStatsEntry": {
    "name": "pagpProtocolStatsEntry",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The entry describes the accumulated statistics of the PAgP protocol operation on the aggregated interface."
  },
  "pagpInPackets": {
    "name": "pagpInPackets",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of PAgP information packets received on this interface."
  },
  "pagpOutPackets": {
    "name": "pagpOutPackets",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of PAgP information packets transmitted on this interface."
  },
  "pagpInFlushes": {
    "name": "pagpInFlushes",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of PAgP flush packets received and echoed on this interface not matching any pagpDeviceId belonging to the managed device. This counts PAgP flush packets originated by another device, and indicates that the other device 1) implements the PAgP flush feature, and 2) uses that feature to prevent mis-ordering data frames within an ordered stream."
  },
  "pagpReturnedFlushes": {
    "name": "pagpReturnedFlushes",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of PAgP flush packets received on this interface matching some pagpDeviceId belonging to this device. This counts PAgP flush packets which were originated by the managed device and returned to it by another device, and indicates that 1) the managed device implements the PAgP flush protocol; and 2) the other device correctly returns PAgP flush protocol packets."
  },
  "pagpOutFlushes": {
    "name": "pagpOutFlushes",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of PAgP flush packets generated on this interface. Does not count flush packets counted in pagpInFlushes and returned to the sender. If pagpOutFlushes is counting and pagpReturnedFlushes is not, the other device may not be returning PAgP flush packets."
  },
  "pagpInErrors": {
    "name": "pagpInErrors",
    "oid": "1.3.6.1.4.1.9.9.98.1.2.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of packet received on this interface which were identified by the encapsulation as being PAgP packets (of any type, e.g. information or flush), but which were not valid packets because of length, version, number of TLVs, or an illegal value in an enumerated field."
  },
  "ciscoPagpEthcGroupV1R1": {
    "name": "ciscoPagpEthcGroupV1R1",
    "oid": "1.3.6.1.4.1.9.9.98.3.2.1",
    "class": "objectidentity"
  },
  "ciscoPagpPagpGroupV1R1": {
    "name": "ciscoPagpPagpGroupV1R1",
    "oid": "1.3.6.1.4.1.9.9.98.3.2.2",
    "class": "objectidentity"
  },
  "ciscoPagpEthcGroupV2R2": {
    "name": "ciscoPagpEthcGroupV2R2",
    "oid": "1.3.6.1.4.1.9.9.98.3.2.3",
    "class": "objectidentity"
  },
  "ciscoPagpMIBComplianceV1R1": {
    "name": "ciscoPagpMIBComplianceV1R1",
    "oid": "1.3.6.1.4.1.9.9.98.3.1.1",
    "class": "objectidentity"
  },
  "ciscoPagpMIBComplianceV2R2": {
    "name": "ciscoPagpMIBComplianceV2R2",
    "oid": "1.3.6.1.4.1.9.9.98.3.1.2",
    "class": "objectidentity"
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/CISCO-PAGP-MIB-V1SMI.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 18:20:56 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "CISCO-PAGP-MIB"
  }
}