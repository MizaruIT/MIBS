{
  "imports": {
    "class": "imports",
    "BAS-MIB": [
      "BasSlotId",
      "BasLogicalPortId",
      "BasInterfaceId",
      "BasChassisId",
      "basAliasCmtsCfg"
    ],
    "DOCS-IF-MIB": [
      "docsIfUpstreamChannelEntry",
      "docsIfCmtsModulationEntry",
      "docsIfDownstreamChannelEntry"
    ],
    "IF-MIB": [
      "ifIndex"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "TimeTicks",
      "OBJECT-IDENTITY",
      "NOTIFICATION-TYPE",
      "MODULE-IDENTITY",
      "Integer32",
      "iso",
      "Unsigned32",
      "MibIdentifier",
      "Bits",
      "OBJECT-TYPE",
      "IpAddress",
      "Counter32",
      "Counter64",
      "Gauge32"
    ],
    "SNMPv2-TC": [
      "MacAddress",
      "TruthValue",
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "basAliasCmtsCfgMib": {
    "name": "basAliasCmtsCfgMib",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1",
    "class": "moduleidentity",
    "lastupdated": "9810081200Z",
    "organization": "Broadband Access Systems",
    "contactinfo": " Tech Support Broadband Access Systems 201 Forest Street Marlboro, MA 01752 U.S.A. 508-485-8200 support@basystems.com",
    "description": "This MIB module defines the Alias CmtsCfg MIB objects for a Broadband Access System Cluster."
  },
  "basCmtsCfgObjects": {
    "name": "basCmtsCfgObjects",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.1",
    "class": "objectidentity"
  },
  "basAlsCmtsMacToSidObjects": {
    "name": "basAlsCmtsMacToSidObjects",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.2",
    "class": "objectidentity"
  },
  "BasCmtsInt8": {
    "name": "BasCmtsInt8",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -127,
            "max": 128
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "Range of INTEGER(-127..128)."
  },
  "BasCmtsUInt8": {
    "name": "BasCmtsUInt8",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "Range of INTEGER(0..255)."
  },
  "BasCmtsByte": {
    "name": "BasCmtsByte",
    "class": "textualconvention",
    "type": {
      "type": "BasCmtsUInt8",
      "class": "type"
    },
    "displayhint": "d",
    "status": "current",
    "description": "Range of INTEGER(0..255)."
  },
  "BasCmtsInt16": {
    "name": "BasCmtsInt16",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -32768,
            "max": 32767
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "Range of INTEGER(-32768..32767)."
  },
  "BasCmtsUInt16": {
    "name": "BasCmtsUInt16",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "Range of INTEGER(0..0x7fff)."
  },
  "BasCmtsInt32": {
    "name": "BasCmtsInt32",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type"
    },
    "displayhint": "d",
    "status": "current",
    "description": "Range of Integer32"
  },
  "BasCmtsUInt32": {
    "name": "BasCmtsUInt32",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "Range of INTEGER(0..0x7fffffff)."
  },
  "BasCmtsRowAction": {
    "name": "BasCmtsRowAction",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "basCmtsRowActionNone": 1,
          "basCmtsRowActionApply": 2
        }
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "Defines Bas Cmts row action."
  },
  "BasCmtsHeadEndMapMode": {
    "name": "BasCmtsHeadEndMapMode",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 99,
            "max": 99
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "HeadEndMgr map mode. 0 = Normal, free running maps. 99 = Scripted maps for test and debug."
  },
  "BasCmtsHeadEndMacAddr": {
    "name": "BasCmtsHeadEndMacAddr",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 5
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "HeadEndMgr MacAddress."
  },
  "BasCmtsHeadEndAuthString": {
    "name": "BasCmtsHeadEndAuthString",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "HeadEndMgr Authorization String."
  },
  "BasCmtsUpChannelPreamblePattern": {
    "name": "BasCmtsUpChannelPreamblePattern",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "Bas Upstream Channel Preamble Pattern."
  },
  "BasCmtsModulationWsPattern": {
    "name": "BasCmtsModulationWsPattern",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "Bas upstream channel burst descriptor unique word pattern."
  },
  "basCmtsPLLTable": {
    "name": "basCmtsPLLTable",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Provides ways to set the Phase Lock Loop on the CMTS."
  },
  "basCmtsPLLEntry": {
    "name": "basCmtsPLLEntry",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BAS-ALIAS-CMTS-CONFIG-MIB",
        "object": "basCmtsPLLChassis",
        "implied": 0
      },
      {
        "module": "BAS-ALIAS-CMTS-CONFIG-MIB",
        "object": "basCmtsPLLSlot",
        "implied": 0
      },
      {
        "module": "BAS-ALIAS-CMTS-CONFIG-MIB",
        "object": "basCmtsPLLIf",
        "implied": 0
      },
      {
        "module": "BAS-ALIAS-CMTS-CONFIG-MIB",
        "object": "basCmtsPLLLPort",
        "implied": 0
      }
    ],
    "status": "current"
  },
  "basCmtsPLLChassis": {
    "name": "basCmtsPLLChassis",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "BasChassisId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The BAS Chassis ID of this card."
  },
  "basCmtsPLLSlot": {
    "name": "basCmtsPLLSlot",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "BasSlotId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The BAS Slot ID of this card."
  },
  "basCmtsPLLIf": {
    "name": "basCmtsPLLIf",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "BasInterfaceId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The BAS interface ID of this card."
  },
  "basCmtsPLLLPort": {
    "name": "basCmtsPLLLPort",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "BasLogicalPortId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The BAS logical port ID of this card."
  },
  "basCmtsPLLState": {
    "name": "basCmtsPLLState",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "pllSet": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object triggers the CMTS PLL."
  },
  "basCmtsPLLValue": {
    "name": "basCmtsPLLValue",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.1.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "BasCmtsInt32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object specifies the current CMTS PLL value."
  },
  "basAlsCmtsMacToSidTable": {
    "name": "basAlsCmtsMacToSidTable",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A list of BAS cmts mac to sid objects. "
  },
  "basAlsCmtsMacToSidEntry": {
    "name": "basAlsCmtsMacToSidEntry",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BAS-ALIAS-CMTS-CONFIG-MIB",
        "object": "basAlsCmtsMacToSidChassis",
        "implied": 0
      },
      {
        "module": "BAS-ALIAS-CMTS-CONFIG-MIB",
        "object": "basAlsCmtsMacToSidSlot",
        "implied": 0
      },
      {
        "module": "BAS-ALIAS-CMTS-CONFIG-MIB",
        "object": "basAlsCmtsMacToSidIf",
        "implied": 0
      },
      {
        "module": "BAS-ALIAS-CMTS-CONFIG-MIB",
        "object": "basAlsCmtsMacToSidLPort",
        "implied": 0
      },
      {
        "module": "BAS-ALIAS-CMTS-CONFIG-MIB",
        "object": "basAlsCmtsMacToSidMacAddr",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry containing BAS CMTS MAC to SID settings."
  },
  "basAlsCmtsMacToSidMacAddr": {
    "name": "basAlsCmtsMacToSidMacAddr",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The MAC address of the host or the cable modem"
  },
  "basAlsCmtsMacToSidServiceId": {
    "name": "basAlsCmtsMacToSidServiceId",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The SID of the host or the cable modem derived from the MAC"
  },
  "basAlsCmtsMacToSidType": {
    "name": "basAlsCmtsMacToSidType",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "cableModem": 2,
          "host": 3
        }
      }
    },
    "default": {
      "default": {
        "value": "none",
        "format": "enum"
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Type of device attached to this SID"
  },
  "basAlsCmtsMacToSidChassis": {
    "name": "basAlsCmtsMacToSidChassis",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "BasChassisId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The BAS Chassis ID of this card."
  },
  "basAlsCmtsMacToSidSlot": {
    "name": "basAlsCmtsMacToSidSlot",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "BasSlotId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The BAS Slot ID of this card."
  },
  "basAlsCmtsMacToSidIf": {
    "name": "basAlsCmtsMacToSidIf",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "BasInterfaceId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The BAS interface ID of this card."
  },
  "basAlsCmtsMacToSidLPort": {
    "name": "basAlsCmtsMacToSidLPort",
    "oid": "1.3.6.1.4.1.3493.2.7.10.1.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "BasLogicalPortId",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The BAS logical port ID of this card."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/BAS-ALIAS-CMTS-CONFIG-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 19:29:02 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "BAS-ALIAS-CMTS-CONFIG-MIB"
  }
}