{
  "imports": {
    "class": "imports",
    "ERICSSON-TOP-MIB": [
      "ericssonModules"
    ],
    "INET-ADDRESS-MIB": [
      "InetAddressType",
      "InetAddress"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "OBJECT-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "MODULE-IDENTITY",
      "Counter64",
      "OBJECT-TYPE",
      "IpAddress",
      "MibIdentifier",
      "Unsigned32",
      "OBJECT-IDENTITY",
      "Bits",
      "TimeTicks",
      "Counter32",
      "iso",
      "Integer32",
      "Gauge32",
      "NOTIFICATION-TYPE"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "ericssonDiscoveryMIB": {
    "name": "ericssonDiscoveryMIB",
    "oid": "1.3.6.1.4.1.193.183.5",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2016-01-13 15:00",
        "description": "Minor, non-functinal modifications according Spitfire/SSR rules."
      },
      {
        "revision": "2012-10-31 00:00",
        "description": "Adding FDN as node ID type, increased value size (changed name of the value type to avoid referencing the value size in the name). The same trap shall also be possible to use after node restart, it is the recieving management system that will have to remember if it is a new node to discover or if it has been seen before. Smilint validation level 6 passed."
      },
      {
        "revision": "2012-10-04 00:00",
        "description": "Ready for functional review - smilint validation and allocation of mib identifier remains."
      },
      {
        "revision": "2012-08-21 00:00",
        "description": "Initial version of this MIB module."
      }
    ],
    "lastupdated": "201601131500Z",
    "organization": "Ericsson AB",
    "contactinfo": " Ericsson AB. Postal: 300 Holger Way San Jose, CA 95134-1362 USA Phone: +1 408 750-5000 Fax: +1 408 750-5599 ",
    "description": "This MIB Module is an Ericsson-wide SNMP interface for auto discovery of nodes during an auto integration procedure or after restart. It describes the notification used to send an intial discovery message to a management system, and an optional mechanism for a management system to acknowledge the reception of this message and that the integration process is started. A few alternative (node type specific) variants of the discovery message is expected over time, modeled as optional parts in the message. The agent is expected to repeatedly send the discovery message untill reception has been acknoleged by the management system through the optional mechanism in this MIB or by an other node specific mechanism. See eriDiscoveryStatus for detailes. The frequency at which to send dicovery messages is implementation specific, but must not be more often than one message per minute or more seldom than one message per hour. MIB Product number in GASK: n/nnn nn-CXC nnn nnnn, Rev x"
  },
  "eriDiscoveryControl": {
    "name": "eriDiscoveryControl",
    "oid": "1.3.6.1.4.1.193.183.5.1",
    "class": "objectidentity"
  },
  "eriDiscoveryObjects": {
    "name": "eriDiscoveryObjects",
    "oid": "1.3.6.1.4.1.193.183.5.2",
    "class": "objectidentity"
  },
  "eriDiscoveryOptionalObjects": {
    "name": "eriDiscoveryOptionalObjects",
    "oid": "1.3.6.1.4.1.193.183.5.3",
    "class": "objectidentity"
  },
  "eriDiscoveryNotifications": {
    "name": "eriDiscoveryNotifications",
    "oid": "1.3.6.1.4.1.193.183.5.4",
    "class": "objectidentity"
  },
  "eriDiscoveryMIBCompliances": {
    "name": "eriDiscoveryMIBCompliances",
    "oid": "1.3.6.1.4.1.193.183.5.5",
    "class": "objectidentity"
  },
  "eriDiscoveryNotifsPrefix": {
    "name": "eriDiscoveryNotifsPrefix",
    "oid": "1.3.6.1.4.1.193.183.5.4.0",
    "class": "objectidentity"
  },
  "EriDiscoveryStateValue": {
    "name": "EriDiscoveryStateValue",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 0,
          "enabled": 1
        }
      }
    },
    "status": "current",
    "description": "Values for indicating if the node is currently issuing discovery messages or not."
  },
  "eriDiscoveryStatus": {
    "name": "eriDiscoveryStatus",
    "oid": "1.3.6.1.4.1.193.183.5.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "EriDiscoveryStateValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object shows if discovery messages are beeing issued from the node or not. A manager may turn off issuing of discovery messages by setting this object to disabled(0). The node may conclude that discovery has succeeded by other means of communication with a manager and will then indicate that by changing this value to disabled(0). If a manager sets this value to enabled(1) the node may choose to resume sending of discovery messages - or it may deny such a request by immediately reseting this value to disabled(0). Open issue: Shall we have this flexibility - or shall we mandate the possibility to re-start the dicovery process? It's good for testing and some error scenarios, but may have security implications and impacts on OSS, so we have to decide..."
  },
  "eriDiscoveryNodeIpAddrOam1Type": {
    "name": "eriDiscoveryNodeIpAddrOam1Type",
    "oid": "1.3.6.1.4.1.193.183.5.2.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "reference": "Revision 200006080000Z of the inetAddressMIB (RFC 4001)",
    "status": "current",
    "description": "The type of address used for O&M address 1 (see RFC 4001)"
  },
  "eriDiscoveryNodeIpAddrOam1": {
    "name": "eriDiscoveryNodeIpAddrOam1",
    "oid": "1.3.6.1.4.1.193.183.5.2.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "reference": "Revision 200006080000Z of the inetAddressMIB (RFC 4001)",
    "status": "current",
    "description": "The first O&M address of the node"
  },
  "eriDiscoveryNodeIpAddrOam2Type": {
    "name": "eriDiscoveryNodeIpAddrOam2Type",
    "oid": "1.3.6.1.4.1.193.183.5.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "reference": "Revision 200006080000Z of the inetAddressMIB (RFC 4001)",
    "status": "current",
    "description": "The type of address used for O&M address 2, if any (see RFC 4001)"
  },
  "eriDiscoveryNodeIpAddrOam2": {
    "name": "eriDiscoveryNodeIpAddrOam2",
    "oid": "1.3.6.1.4.1.193.183.5.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "reference": "Revision 200006080000Z of the inetAddressMIB (RFC 4001)",
    "status": "current",
    "description": "A second or alternative IP O&M address - if any"
  },
  "eriDiscoveryEvent": {
    "name": "eriDiscoveryEvent",
    "oid": "1.3.6.1.4.1.193.183.5.4.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoveryNodeIdType"
      },
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoveryNodeIdValue"
      },
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoverySecCS"
      },
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoverySecCSVer"
      },
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoveryNodeIpAddrOam1Type"
      },
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoveryNodeIpAddrOam1"
      },
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoveryNodeIpAddrOam2Type"
      },
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoveryNodeIpAddrOam2"
      }
    ],
    "status": "current",
    "description": "This is the discovery notification sent from a node supporting auto dicovery and integration regardless of node type and radio standard. It is asumed that some data has been prepared in an OSS to recognise the node by the ID. Future revisions may add attributes to this MIB not used by all node types."
  },
  "EriDiscoveryNodeIdTypeType": {
    "name": "EriDiscoveryNodeIdTypeType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 0,
          "serialNumber": 1,
          "fdn": 2
        }
      }
    },
    "status": "current",
    "description": "The Node ID can be identified using several types of ID values. This TC lists the alternative value types."
  },
  "eriDiscoveryNodeIdType": {
    "name": "eriDiscoveryNodeIdType",
    "oid": "1.3.6.1.4.1.193.183.5.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "EriDiscoveryNodeIdTypeType",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The type of node ID value to expect in eriDiscoveryNodeIdValue"
  },
  "EriDiscoveryText16": {
    "name": "EriDiscoveryText16",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "displayhint": "16a",
    "status": "current",
    "description": "ASCII string data of max length 16 octets."
  },
  "eriDiscoverySecCSVer": {
    "name": "eriDiscoverySecCSVer",
    "oid": "1.3.6.1.4.1.193.183.5.2.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "EriDiscoveryText16",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The version of the SCC. Only one version is currently supported, represented by the literal '1.0'"
  },
  "EriDiscoveryIdValueText": {
    "name": "EriDiscoveryIdValueText",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 400
          }
        ]
      }
    },
    "displayhint": "400a",
    "status": "current",
    "description": "ASCII string data of max length 400 octets."
  },
  "eriDiscoveryNodeIdValue": {
    "name": "eriDiscoveryNodeIdValue",
    "oid": "1.3.6.1.4.1.193.183.5.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "EriDiscoveryIdValueText",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The node ID value"
  },
  "EriDiscoveryCheckSum": {
    "name": "EriDiscoveryCheckSum",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type"
    },
    "displayhint": "x",
    "status": "current",
    "description": "32 bit checksum value"
  },
  "eriDiscoverySecCS": {
    "name": "eriDiscoverySecCS",
    "oid": "1.3.6.1.4.1.193.183.5.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "EriDiscoveryCheckSum",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The security check sum (SCC) calculated by the NE."
  },
  "eriDiscoveryMIBComplianceGroups": {
    "name": "eriDiscoveryMIBComplianceGroups",
    "oid": "1.3.6.1.4.1.193.183.5.5.1",
    "class": "objectidentity"
  },
  "eriDiscoveryControlGroup": {
    "name": "eriDiscoveryControlGroup",
    "oid": "1.3.6.1.4.1.193.183.5.5.1.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoveryStatus"
      }
    ],
    "status": "current",
    "description": "Objects to control the discovery mechanism - mandatory to implement"
  },
  "eriDiscoveryEventContentGroup1": {
    "name": "eriDiscoveryEventContentGroup1",
    "oid": "1.3.6.1.4.1.193.183.5.5.1.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoveryNodeIdType"
      },
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoveryNodeIdValue"
      },
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoverySecCS"
      },
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoverySecCSVer"
      },
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoveryNodeIpAddrOam1Type"
      },
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoveryNodeIpAddrOam1"
      }
    ],
    "status": "current",
    "description": "Mandatory objects to include in the events"
  },
  "eriDiscoveryEventGroup": {
    "name": "eriDiscoveryEventGroup",
    "oid": "1.3.6.1.4.1.193.183.5.5.1.3",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoveryEvent"
      }
    ],
    "status": "current",
    "description": "Mandatory events"
  },
  "eriDiscoveryEventOptionalContentGroup1": {
    "name": "eriDiscoveryEventOptionalContentGroup1",
    "oid": "1.3.6.1.4.1.193.183.5.5.1.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoveryNodeIpAddrOam2Type"
      },
      {
        "module": "ERICSSON-DISCOVERY-MIB",
        "object": "eriDiscoveryNodeIpAddrOam2"
      }
    ],
    "status": "current",
    "description": "Additional objects to send in the event"
  },
  "ericssonDiscoveryMIBBasicCompliance": {
    "name": "ericssonDiscoveryMIBBasicCompliance",
    "oid": "1.3.6.1.4.1.193.183.5.5.2",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "eriDiscoveryControlGroup",
        "module": "ERICSSON-DISCOVERY-MIB"
      },
      {
        "object": "eriDiscoveryEventGroup",
        "module": "ERICSSON-DISCOVERY-MIB"
      },
      {
        "object": "eriDiscoveryEventContentGroup1",
        "module": "ERICSSON-DISCOVERY-MIB"
      },
      {
        "object": "eriDiscoveryEventOptionalContentGroup1",
        "module": "ERICSSON-DISCOVERY-MIB"
      }
    ],
    "status": "current",
    "description": "Compliance descriptions - mandatory groups and optional groups"
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/ERICSSON-DISCOVERY-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 19:57:41 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "ERICSSON-DISCOVERY-MIB"
  }
}