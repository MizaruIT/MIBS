{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "TimeTicks",
      "Gauge32",
      "Integer32",
      "Bits",
      "Unsigned32",
      "MibIdentifier",
      "NOTIFICATION-TYPE",
      "OBJECT-IDENTITY",
      "OBJECT-TYPE",
      "MODULE-IDENTITY",
      "iso",
      "enterprises",
      "TRAP-TYPE",
      "IpAddress",
      "Counter64",
      "Counter32"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "essentialCommunications": {
    "name": "essentialCommunications",
    "oid": "1.3.6.1.4.1.2159",
    "class": "objectidentity"
  },
  "ecRoot": {
    "name": "ecRoot",
    "oid": "1.3.6.1.4.1.2159.1",
    "class": "objectidentity"
  },
  "ecProducts": {
    "name": "ecProducts",
    "oid": "1.3.6.1.4.1.2159.1.3",
    "class": "objectidentity"
  },
  "ecExperimental": {
    "name": "ecExperimental",
    "oid": "1.3.6.1.4.1.2159.1.6",
    "class": "objectidentity"
  },
  "ess2000MIB": {
    "name": "ess2000MIB",
    "oid": "1.3.6.1.4.1.2159.1.3.2",
    "class": "objectidentity"
  },
  "switch": {
    "name": "switch",
    "oid": "1.3.6.1.4.1.2159.1.3.2.1",
    "class": "objectidentity"
  },
  "switchEvents": {
    "name": "switchEvents",
    "oid": "1.3.6.1.4.1.2159.1.3.2.7",
    "class": "objectidentity"
  },
  "switchDescription": {
    "name": "switchDescription",
    "oid": "1.3.6.1.4.1.2159.1.3.2.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Returns the description, vendor, and version numbers of the switch."
  },
  "switchNumOfPorts": {
    "name": "switchNumOfPorts",
    "oid": "1.3.6.1.4.1.2159.1.3.2.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of slots in this switch. (Max number of media access cards)."
  },
  "switchSensors": {
    "name": "switchSensors",
    "oid": "1.3.6.1.4.1.2159.1.3.2.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 3
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This value returns the status of the temperature and power supply sensors. From least to most significant byte the values are power supply 1-3 with the most signficant byte being the over temperature sensor. 0 indicates the sensor is autodectable and not installed. 1 indicates the sensor is OK. 2 indicates the sensor is not OK."
  },
  "switchControlCard": {
    "name": "switchControlCard",
    "oid": "1.3.6.1.4.1.2159.1.3.2.2",
    "class": "objectidentity"
  },
  "sccDescription": {
    "name": "sccDescription",
    "oid": "1.3.6.1.4.1.2159.1.3.2.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The model, vendor, and version number of the switch control card."
  },
  "sccDateTime": {
    "name": "sccDateTime",
    "oid": "1.3.6.1.4.1.2159.1.3.2.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The date/time in the real time clock. Format: yyyymmddhhmmss"
  },
  "sccAdminStatus": {
    "name": "sccAdminStatus",
    "oid": "1.3.6.1.4.1.2159.1.3.2.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The desired state of the switch. 1 indicates switch is up. 2 will make the switch reset."
  },
  "sccOperStatus": {
    "name": "sccOperStatus",
    "oid": "1.3.6.1.4.1.2159.1.3.2.2.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The current state of the switch. 1 indicates the switch is up. 2 indicates the switch is resetting. SNMP operations can not occur when the switch is resetting. 3 indicates a busy switch. SNMP operations can not occur when the switch is busy. "
  },
  "mediaInterfaceCards": {
    "name": "mediaInterfaceCards",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3",
    "class": "objectidentity"
  },
  "backPlaneTable": {
    "name": "backPlaneTable",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table represent all of the slots in a HIPPI switch. None of the rows can be added to or deleted by the user."
  },
  "backPlaneEntry": {
    "name": "backPlaneEntry",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ESSENTIAL-ODS-ESS2000-HIPPI-SWITCH-MIB",
        "object": "backPlaneIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A row in the table describing one slot in the switch backplane. "
  },
  "backPlaneIndex": {
    "name": "backPlaneIndex",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The table index for this slot on the backplane."
  },
  "backPlaneNumber": {
    "name": "backPlaneNumber",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot number as seen printed on the switch (backPlaneIndex + 1)"
  },
  "backPlaneCard": {
    "name": "backPlaneCard",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The type of MIC present in this slot of the backplane on the switch 0 No MIC 1 Unknown MIC 2 Parallel MIC 3 Serial MIC"
  },
  "mICPowerUpInitError": {
    "name": "mICPowerUpInitError",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "1 if error detected by MIC on start-up, else 0."
  },
  "mICHippiParityBurstError": {
    "name": "mICHippiParityBurstError",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Type of parity error. 0 None 1 XDeMux (Transmitting) 2 XMux (Receiving)"
  },
  "mICLinkReady": {
    "name": "mICLinkReady",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Valid the SMIC only. 1 if link ready asserted, else 0."
  },
  "mICSourceInterconnect": {
    "name": "mICSourceInterconnect",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Source interconnect is valid for the PMIC only. 1 if interconnect is true else 0"
  },
  "mICSourceRequest": {
    "name": "mICSourceRequest",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "1 if source request is asserted else 0."
  },
  "mICSourceConnect": {
    "name": "mICSourceConnect",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "1 if source connect is asserted else 0."
  },
  "mICSourceLastConnectAttempt": {
    "name": "mICSourceLastConnectAttempt",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "0 if no last connect attempt. 1 if last source request was successful or no last connect. 2 Connection underway. 3 if last connect was rejected downstream."
  },
  "mICDestinationInterconnect": {
    "name": "mICDestinationInterconnect",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "1 if destination interconnect is asserted else 0."
  },
  "mICDestinationRequest": {
    "name": "mICDestinationRequest",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "1 if destination request is asserted else 0."
  },
  "mICDestinationConnect": {
    "name": "mICDestinationConnect",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "1 if destination connect is asserted else 0."
  },
  "mICByteCounterOverflow": {
    "name": "mICByteCounterOverflow",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times the byte counter has over-flowed."
  },
  "mICNumberOfBytes": {
    "name": "mICNumberOfBytes",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes that have passed through the MIC."
  },
  "mICNumberOfPackets": {
    "name": "mICNumberOfPackets",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times packets has been asserted."
  },
  "mICConnectsSuccessful": {
    "name": "mICConnectsSuccessful",
    "oid": "1.3.6.1.4.1.2159.1.3.2.3.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times this MIC has connected since reset."
  },
  "sourceRoutes": {
    "name": "sourceRoutes",
    "oid": "1.3.6.1.4.1.2159.1.3.2.4",
    "class": "objectidentity"
  },
  "srcRouteTable": {
    "name": "srcRouteTable",
    "oid": "1.3.6.1.4.1.2159.1.3.2.4.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table holds all of the source routes for this switch. FORMAT: OutputPort InputPortList Status. Output port is 0 to 31 Input port is 0 to 31 List is NUMBER or NUMBER1-NUMBER2 where NUMBER1 < NUMBER2. Status is 0 (disabled) or 1 (enabled)"
  },
  "srcRouteEntry": {
    "name": "srcRouteEntry",
    "oid": "1.3.6.1.4.1.2159.1.3.2.4.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ESSENTIAL-ODS-ESS2000-HIPPI-SWITCH-MIB",
        "object": "srcIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "One row in the source route table."
  },
  "srcIndex": {
    "name": "srcIndex",
    "oid": "1.3.6.1.4.1.2159.1.3.2.4.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The row number for this row of the table."
  },
  "srcRouteInPortAccess": {
    "name": "srcRouteInPortAccess",
    "oid": "1.3.6.1.4.1.2159.1.3.2.4.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 80
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": " FORMAT: Shows the input port access for 1 output port. Each instance is the output port number. Each 32 bit hex value displays the input port access for 32 ports. with port 32 on the left and port 0 on the right. Each bit is set for and enabled port, clear for a disabled one. For example 80000000 indicates input port 31 is enabled for this output port"
  },
  "srcRouteOutPortAccess": {
    "name": "srcRouteOutPortAccess",
    "oid": "1.3.6.1.4.1.2159.1.3.2.4.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 80
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": " FORMAT: Shows the output port access for 1 input port. Each instance is the input port number. Each 32 bit hex value displays the output port access for 32 ports. with port 32 on the left and port 0 on the right. Each bit is set for and enabled port, clear for a disabled one. For example 80000000 indicates output port 31 is enabled for this input port"
  },
  "srcRouteWrite": {
    "name": "srcRouteWrite",
    "oid": "1.3.6.1.4.1.2159.1.3.2.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this variable alters source routes. FORMAT: OutputPortList InputPortList Status. Output port is 0 to 31 Input port is 0 to 31 Status is 0 (disabled) or 1 (enabled) List is NUMBER or NUMBER1-NUMBER2 where NUMBER1 < NUMBER2."
  },
  "srcSaveRestore": {
    "name": "srcSaveRestore",
    "oid": "1.3.6.1.4.1.2159.1.3.2.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This will save or restore all of the source routes. Writting a 0 is a no operation. Writting a 1 saves all source routes on the switch. Writting a 2 restores all source routes on the switch."
  },
  "logicalAddressRoutes": {
    "name": "logicalAddressRoutes",
    "oid": "1.3.6.1.4.1.2159.1.3.2.5",
    "class": "objectidentity"
  },
  "destRouteTable": {
    "name": "destRouteTable",
    "oid": "1.3.6.1.4.1.2159.1.3.2.5.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table holds all of destination routes (logical address routes) for this switch. FORMAT: LogicalAddress InputPortList Huntgroup. LogicalAddress is 0 to 4095. Input port is 0 to 31 Huntgroup is 0 to 31. List is NUMBER or NUMBER1-NUMBER2 where NUMBER1 < NUMBER2."
  },
  "destRouteEntry": {
    "name": "destRouteEntry",
    "oid": "1.3.6.1.4.1.2159.1.3.2.5.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ESSENTIAL-ODS-ESS2000-HIPPI-SWITCH-MIB",
        "object": "destIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A row in the destination route table."
  },
  "destIndex": {
    "name": "destIndex",
    "oid": "1.3.6.1.4.1.2159.1.3.2.5.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index for this row of the table."
  },
  "destRoute": {
    "name": "destRoute",
    "oid": "1.3.6.1.4.1.2159.1.3.2.5.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 80
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "One Destination Route. FORMAT: LogicalAddress InputPortList Huntgroup. LogicalAddress is 0 to 4095. Input port is 0 to 31. Huntgroup is 0 to 31. List is NUMBER or NUMBER1-NUMBER2 where NUMBER1 < NUMBER2."
  },
  "destRouteWrite": {
    "name": "destRouteWrite",
    "oid": "1.3.6.1.4.1.2159.1.3.2.5.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this variable will alter the desitination routes. FORMAT: LogicalAddressList Huntgroup InputPortList. LogicalAddress is 0 to 4095. Huntgroup is 0 to 31. 31 will disable this route. Input port is 0 to 31. List is NUMBER or NUMBER1-NUMBER2 where NUMBER1 < NUMBER2."
  },
  "pathRouteTable": {
    "name": "pathRouteTable",
    "oid": "1.3.6.1.4.1.2159.1.3.2.5.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table holds all of pathway routes for this switch. FORMAT: PathwayAddressList InputPortList outputPort PathwaAddress is 0 to 4095. Input port is 0 to 31 outputPort is 0 to 31. List is NUMBER or NUMBER1-NUMBER2 where NUMBER1 < NUMBER2."
  },
  "pathRouteEntry": {
    "name": "pathRouteEntry",
    "oid": "1.3.6.1.4.1.2159.1.3.2.5.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ESSENTIAL-ODS-ESS2000-HIPPI-SWITCH-MIB",
        "object": "pathIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A row in the pathway route table."
  },
  "pathIndex": {
    "name": "pathIndex",
    "oid": "1.3.6.1.4.1.2159.1.3.2.5.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index for this row of the table."
  },
  "pathRoute": {
    "name": "pathRoute",
    "oid": "1.3.6.1.4.1.2159.1.3.2.5.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 80
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "One pathway logical address route. FORMAT: LogicalAddress InputPortList outputPort. LogicalAddress is 0 to 4095. Input port is 0 to 31. outputPort is 0 to 31. List is NUMBER or NUMBER1-NUMBER2 where NUMBER1 < NUMBER2."
  },
  "pathRouteWrite": {
    "name": "pathRouteWrite",
    "oid": "1.3.6.1.4.1.2159.1.3.2.5.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this variable will alter the pathway logical routes. FORMAT: LogicalAddressList Huntgroup InputPortList. LogicalAddress is 0 to 4095. Huntgroup is 0 to 31. 31 will disable this route. Input port is 0 to 31. List is NUMBER or NUMBER1-NUMBER2 where NUMBER1 < NUMBER2."
  },
  "routesSaveRestore": {
    "name": "routesSaveRestore",
    "oid": "1.3.6.1.4.1.2159.1.3.2.5.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This saves and restores the route information. 0 is a no operation. 1 saves all destination routes on the switch. 2 restores all destination routes on the switch."
  },
  "routeDisable": {
    "name": "routeDisable",
    "oid": "1.3.6.1.4.1.2159.1.3.2.5.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this variable will disable logical address routes. FORMAT: LogicalAddressList InputPortList. LogicalAddress is 0 to 4095 (0x0 to 0xfff). Input port is 0 to 31 (0x0 to 0x1f). List is NUMBER or NUMBER1-NUMBER2 where NUMBER1 < NUMBER2."
  },
  "huntGroups": {
    "name": "huntGroups",
    "oid": "1.3.6.1.4.1.2159.1.3.2.6",
    "class": "objectidentity"
  },
  "hGTable": {
    "name": "hGTable",
    "oid": "1.3.6.1.4.1.2159.1.3.2.6.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table holds all of the huntgroups for this switch. FORMAT: Huntgroup ( OutportList ) Huntgroup is 0 to 31. OutportList is an orderd list of output ports in Huntgroup."
  },
  "hGEntry": {
    "name": "hGEntry",
    "oid": "1.3.6.1.4.1.2159.1.3.2.6.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ESSENTIAL-ODS-ESS2000-HIPPI-SWITCH-MIB",
        "object": "hg",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A row in the huntgroup table."
  },
  "hg": {
    "name": "hg",
    "oid": "1.3.6.1.4.1.2159.1.3.2.6.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The huntgroup number."
  },
  "hgList": {
    "name": "hgList",
    "oid": "1.3.6.1.4.1.2159.1.3.2.6.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 80
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The definition of one Huntgroup. FORMAT: Huntgroup ( OutportList ) Huntgroup is 0 to 31. OutportList is an orderd list of output ports in Huntgroup."
  },
  "hgWrite": {
    "name": "hgWrite",
    "oid": "1.3.6.1.4.1.2159.1.3.2.6.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this variable will alter the huntgroup table by setting every huntgroup in list to include outPortList. FORMAT: HuntgroupList OutportList Huntgroup is 0 to 31. Outport is 0 to 31. List is NUMBER or NUMBER1-NUMBER2 where NUMBER1 < NUMBER2."
  },
  "hgSaveRestore": {
    "name": "hgSaveRestore",
    "oid": "1.3.6.1.4.1.2159.1.3.2.6.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This saves and restores the hunt groups. 0 is a no operation. 1 saves all hunt group information on the switch. 2 restores all hunt group information on the switch."
  },
  "switchSensorWarning": {
    "name": "switchSensorWarning",
    "oid": "1.3.6.1.4.1.2159.1.3.2.70.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "ESSENTIAL-ODS-ESS2000-HIPPI-SWITCH-MIB",
        "object": "switchSensors"
      }
    ],
    "description": "This warns that switch sensor(s) are changing status. One 32 bit hex values is returned and is ASCII encoded as follows: abcd where each character is a byte (8 bit value). a is the over temperature sensor. b, c, and d are power sensors 3 to 1 respectively. Each byte contains the following information: 0 (30 hex) Sensor is autodetectable, but it is not installed. 1 (32 hex) Sensor (if installed) has no problem 2 (33 hex) Sensor (if installed) has a sensor warning. 3-15 not defined. For example, the hex values 0021 means over temperature sensor is not installed, power supply sensor 3 is not installed, power supply sensor 2 has indicated power supply failure, and power supply 1 is ok."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/ESSENTIAL-ODS-ESS2000-HIPPI-SWITCH-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 17:29:15 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "ESSENTIAL-ODS-ESS2000-HIPPI-SWITCH-MIB"
  }
}