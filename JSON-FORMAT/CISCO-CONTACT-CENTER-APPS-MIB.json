{
  "imports": {
    "class": "imports",
    "CISCO-SMI": [
      "ciscoMgmt"
    ],
    "CISCO-TC": [
      "CiscoURLString"
    ],
    "INET-ADDRESS-MIB": [
      "InetAddressDNS"
    ],
    "SNMP-FRAMEWORK-MIB": [
      "SnmpAdminString"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE",
      "OBJECT-GROUP"
    ],
    "SNMPv2-SMI": [
      "MibIdentifier",
      "Bits",
      "TimeTicks",
      "MODULE-IDENTITY",
      "NOTIFICATION-TYPE",
      "iso",
      "OBJECT-TYPE",
      "Gauge32",
      "Counter32",
      "OBJECT-IDENTITY",
      "Integer32",
      "Counter64",
      "IpAddress",
      "Unsigned32"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "DateAndTime",
      "TEXTUAL-CONVENTION",
      "TruthValue"
    ]
  },
  "ciscoCcaMIB": {
    "name": "ciscoCcaMIB",
    "oid": "1.3.6.1.4.1.9.9.473",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2005-04-05 17:00",
        "description": "This is the initial version of this MIB module."
      }
    ],
    "lastupdated": "200504051700Z",
    "organization": "Cisco Systems, Inc.",
    "contactinfo": "Cisco Systems Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: ccbu-serviceability@cisco.com",
    "description": "The Cisco Contact Center Applications (CCCA) Management Information Base (MIB) module defines management instrumentation for applications that deliver enterprise-wide intelligent contact routing, call treatment, network-to- desktop computer telephony integration (CTI), and multi-media (e.g. voice, email, chat) contact management over an IP infrastructure. Cisco enterprise contact center applications are distributed, fault-tolerant, contact routing and management solutions that encompass multiple, dependent host servers. Each host is capable of implementing one or more functions of the application. How many functions a single host is capable of providing is dependent upon capacity and/or performance limitations. However, the architecture supports virtually any combination. The main functional components of Cisco enterprise contact center applications are: 1. Router: The router component provides intelligent routing of inbound contacts, e.g. voice calls, emails, chat sessions, to contact center agents. A subcomponent of the router is the Network Interface Controller (NIC). A NIC, in the context of a Cisco enterprise contact center application, is a gateway to a voice telephony network. (A NIC here should not be confused with a network interface card on a host computer.) A router component can have one or more NIC subcomponents. 2. Logger: The logger component maintains the enterprise contact center solution configuration and real-time data store. 3. Distributor Administrator Workstation (AW): The Distributor AW is a historical database server that serves one or more reporting clients. 4. Peripheral Gateway (PG): The PG provides an interface to one or more peripheral devices such as a private branch exchange (PBX), an automatic call distributor (ACD) or a voice response unit (VRU). A subcomponent of the PG is the Peripheral Interface Manager or 'PIM'. A PIM acts as a gateway between the PG and a single PBX or VRU. A PG may have multiple PIMs. 5. Computer Telephony Integration (CTI) Gateway (CG): The CTI gateway is the solution integration point for desktop CTI clients. The CTI client application exposes contact data served by the CG to the agent (via 'screen pops') and allows the agent to control the contact state, e.g. answer/hang-up or transfer voice calls, respond to emails or chat with contacts. 6. CTI Object Server (CTIOS): CTIOS, as compared to the CTI gateway, is a more intelligent and more scalable server for desktop CTI clients and offers a higher-level interface to those client applications. Each server of the enterprise contact center solution, regardless of its specific function, implements the contact center applications MIB, however, it only populates those tables that are appropriate for its specific function. Implementing the same MIB on all hosts simplifies the acquisition of management instrumentation from the entire contact center solution. The instrumentation in each table of this MIB provides three types of data: 1) dependent host addresses (for topology building), 2) critical configuration information that uniquely identifies the functional component and, 3) operational status instrumentation. The quantity of entries (i.e. rows) in the tables of this MIB is static while the application is running on the host; rows cannot be added or deleted at runtime by the management station. Glossary of acronyms and terms: ACD Automatic Call Distributor AW Administrator Workstation CG CTI Gateway CICM Customer Intelligent Contact Manager CTI Computer Telephony Integration CTIOS CTI Object Server DMP Device Management Protocol ICM Cisco Intelligent Contact Management IPCC Cisco IP Contact Center IVR Interactive Voice Response NAM Network Application Manager NIC Network Interface Controller PBX Private Branch Exchange PG Peripheral Gateway PIM Peripheral Interface Manager VRU Voice Response Unit duplex A term used herein to indicate that the functional component is fault tolerant. The component is installed on two separate servers (a side A and a side B); one side is active while the other is on hot standby. Should a failure occur on one side, the other side will immediately activate and continue its function with virtually no loss in functionality. instance A collection of enterprise contact center application functional components that encompass a complete solution. simplex A term used herein to indicate that the functional component is not fault tolerant. The component is installed on a single server; if the component fails, the system will then be impaired or entirely non-functional. "
  },
  "ciscoCcaMIBNotifs": {
    "name": "ciscoCcaMIBNotifs",
    "oid": "1.3.6.1.4.1.9.9.473.0",
    "class": "objectidentity"
  },
  "ciscoCcaMIBObjects": {
    "name": "ciscoCcaMIBObjects",
    "oid": "1.3.6.1.4.1.9.9.473.1",
    "class": "objectidentity"
  },
  "cccaGeneralInfo": {
    "name": "cccaGeneralInfo",
    "oid": "1.3.6.1.4.1.9.9.473.1.1",
    "class": "objectidentity"
  },
  "cccaComponents": {
    "name": "cccaComponents",
    "oid": "1.3.6.1.4.1.9.9.473.1.2",
    "class": "objectidentity"
  },
  "cccaComponentInfo": {
    "name": "cccaComponentInfo",
    "oid": "1.3.6.1.4.1.9.9.473.1.3",
    "class": "objectidentity"
  },
  "cccaNotificationInfo": {
    "name": "cccaNotificationInfo",
    "oid": "1.3.6.1.4.1.9.9.473.1.4",
    "class": "objectidentity"
  },
  "ciscoCcaMIBConform": {
    "name": "ciscoCcaMIBConform",
    "oid": "1.3.6.1.4.1.9.9.473.2",
    "class": "objectidentity"
  },
  "ciscoCcaMIBCompliances": {
    "name": "ciscoCcaMIBCompliances",
    "oid": "1.3.6.1.4.1.9.9.473.2.1",
    "class": "objectidentity"
  },
  "ciscoCcaMIBGroups": {
    "name": "ciscoCcaMIBGroups",
    "oid": "1.3.6.1.4.1.9.9.473.2.2",
    "class": "objectidentity"
  },
  "CccaIndex": {
    "name": "CccaIndex",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "This syntax is used as the index into a table. A positive value is used to identify a unique entry in the table."
  },
  "CccaComponentType": {
    "name": "CccaComponentType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "router": 1,
          "logger": 2,
          "distAW": 3,
          "pg": 4,
          "cg": 5,
          "ctios": 6
        }
      }
    },
    "status": "current",
    "description": "This syntax is used to identify the type of enterprise contact center application functional component. 'router': A router provides intelligent routing of inbound contacts to contact center agents. 'logger': The logger maintains the configuration and real- time data store. 'distAW': A distributor AW manages a historical database server that serves one or more reporting clients. 'pg': A peripheral gateway provides an interface to one or more peripherals, e.g. a PBX, an ACD or a VRU. 'cg': A CTI gateway is the solution integration point for desktop CTI clients. 'ctios': A CTI object server is an intelligent, scalable server for desktop CTI clients. "
  },
  "CccaComponentStatus": {
    "name": "CccaComponentStatus",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "disabled": 2,
          "stopped": 3,
          "started": 4,
          "active": 5,
          "standby": 6
        }
      }
    },
    "status": "current",
    "description": "This syntax is used to identify the run status of an enterprise contact center application distributed functional component. The value shown is the result of evaluating the current run status of services and processes associated with the functional component. 'unknown': The status of the functional component cannot be determined. 'disabled': The functional component has been explicitly disabled by an administrator. 'stopped': The functional component is stopped. The component may be dysfunctional or impaired. 'started': The functional component has been started. 'active': The functional component has been started, is currently running and is the active side of a fault tolerant component duplex pair. 'standby': The functional component has been started, is currently running and is the 'hot-standby' side of a fault tolerant duplex pair. "
  },
  "CccaComponentSide": {
    "name": "CccaComponentSide",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "sideA": 1,
          "sideB": 2
        }
      }
    },
    "status": "current",
    "description": "The functional components of the enterprise contact center application are fault tolerant. To achieve fault tolerance, two separate, interconnected, dependent hosts (one identified as 'sideA' and the other identified as 'sideB') will implement the functional component; one host will be the 'active' side and the other will be the 'standby' side. The two hosts are considered to be a 'duplex pair' of a functional component. This syntax is used to identify the side (A or B) that this host represents of a duplex pair of an enterprise contact center fault tolerant functional component. That one side is identified as 'sideA' does not imply that the 'A' side is always the primary; at any given time, either side could be the 'active' side. Setting the side identifier is completely arbitrary; the side is designated when installed and configured by the system administrator. When an event occurs that causes a fail-over from one side to the other, the side which was the 'standby' side then becomes the 'active' side while the previously-active side thus becomes the standby side. Most often, when the fail-over occurs, the side which was 'active' initiates a restart and then comes back up as the 'standby' side. The standby side is completely aware of the current status of the enterprise contact center application and is ready to assume functional responsibility immediately when instructed. When a fail-over occurs, there is little, if any, loss of functionality or context. Typically, a system impairment or failure event will cause a fail-over to occur but an administrator can initiate a fail- over by deliberately stopping the active side of a functional component."
  },
  "CccaPeripheralType": {
    "name": "CccaPeripheralType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "aspect": 1,
          "meridian": 2,
          "dms100": 3,
          "g2": 4,
          "g3": 5,
          "galaxy": 6,
          "spectrum": 7,
          "neax2400": 8,
          "acp1000": 9,
          "rolm9005": 10,
          "siemensHicom": 11,
          "ericssonMD110": 12,
          "alcatel": 13,
          "mediaRouting": 14,
          "nonVoiceAgent": 15,
          "symposium": 16,
          "callManager": 17,
          "acmiIPCC": 18,
          "acmiCRS": 19,
          "vru": 20,
          "softACD": 21,
          "systemIPCC": 23
        }
      }
    },
    "status": "current",
    "description": "The peripheral type textual convention indicates the type of peripheral device that the enterprise contact center application functional component or subcomponent is associated. The peripheral is typically a private branch exchange (PBX), automatic call distributor (ACD) or a voice response unit (VRU). 'aspect': Aspect Communications CallCenter ACD; interface via Application Bridge (AB) or Computer Media Integration (CMI) and Real-Time Bridge (RTB). 'meridian': Nortel Meridian 1; interface via MeridianLink SCCS with MLS. 'dms100': Nortel DMS-100, DMS-500/SL-100; interface via CompuCall. 'g2': AT&T G2 ACD with 3B2 CMS. 'g3': Lucent/Avaya Definity; interface via ECS, CVLAN. 'galaxy': Rockwell Galaxy 'spectrum': Rockwell Spectrum; interface via TransactionLink. 'neax2400': NEC NEAX-2400, 7400 and APEX-7600; interface via Infolink/OAI. 'acp1000': Ericsson ACP-1000 switch; interface via ApplicationLink. 'rolm9005': Siemens Rolm-9751 CBX 'siemensHicom': Siemens Hicom 300/E; interface via CSTA CallBridge. 'ericssonMD110': Ericsson MD-110; interface via ApplicationLink CSTA Gateway. 'alcatel': Alcatel A4400; interface via CSTA-2. 'mediaRouting': The ICM/IPCC Media Routing PIM provides task routing of non-voice contacts in a mixed- media contact center. 'nonVoiceAgent': The ICM/IPCC Non-Voice Agent PIM integrates strickly non-voice agents into the contact center solution. 'symposium': Nortel Symposium; interface via MeridianLink Host Data Exchange (HDX) and Real-Time Data (RTD) interface. 'callManager': Cisco CallManager IP PBX; interface via Java Telephony Application Programming Interface (JTAPI). 'acmiIPCC': Advanced Call Management Interface (ACMI) provides the interface to implement a parent/ child IPCC relationship whereby the ACMI PIM in a parent IPCC system represents a child IPCC system as a peripheral. 'acmiCRS': Advanced Call Management Interface (ACMI) provides the interface to implement a parent/ child relationship whereby the ACMI PIM in a parent IPCC system represents a child Cisco Customer Response Suite (CRS) system as a peripheral. 'vru': A Voice Response Unit peripheral. 'softACD': Cisco SoftACD peripheral interface 'systemIPCC': System IPCC "
  },
  "cccaName": {
    "name": "cccaName",
    "oid": "1.3.6.1.4.1.9.9.473.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The name is the fully-qualified domain name of the enterprise contact center application server."
  },
  "cccaDescription": {
    "name": "cccaDescription",
    "oid": "1.3.6.1.4.1.9.9.473.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The description object holds a textual description of the enterprise contact center application installed on this server. This is typically the full name of the application."
  },
  "cccaVersion": {
    "name": "cccaVersion",
    "oid": "1.3.6.1.4.1.9.9.473.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The version object identifies the version number of the enterprise contact center application software installed on this server."
  },
  "cccaTimeZoneName": {
    "name": "cccaTimeZoneName",
    "oid": "1.3.6.1.4.1.9.9.473.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The time zone name object specifies the name of the time zone where the enterprise contact center application server is physically located."
  },
  "cccaTimeZoneOffsetHours": {
    "name": "cccaTimeZoneOffsetHours",
    "oid": "1.3.6.1.4.1.9.9.473.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -12,
            "max": 12
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The time zone offset hours object represents the number of hours that the local time, in the time zone where the enterprise contact center application server is physically located, differs from Greenwich Mean Time (GMT)."
  },
  "cccaTimeZoneOffsetMinutes": {
    "name": "cccaTimeZoneOffsetMinutes",
    "oid": "1.3.6.1.4.1.9.9.473.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -59,
            "max": 59
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The time zone offset minutes object represents the number of minutes that the local time, in the time zone where the enterprise contact center application server is physically located, differs from Greenwich Mean Time (GMT). This object is combined with cccaTimeZoneOffsetHours object to represent the local time zone's total offset from GMT."
  },
  "cccaSupportToolsURL": {
    "name": "cccaSupportToolsURL",
    "oid": "1.3.6.1.4.1.9.9.473.1.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "CiscoURLString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The support tools URL object holds the URL for the enterprise contact center application support tools application server. The support tools application server is an optional component of the solution and offers a centralized server for diagnostic and troubleshooting tools. This application server resides on a Distributor AW host. This object offers a navigation point from the management station (assuming a web interface) can quickly access the support tools application server."
  },
  "cccaInstanceTable": {
    "name": "cccaInstanceTable",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The instance table is a list of enterprise contact center application instances. Each instance represents a contact center application solution. A solution includes a collection of interconnected functional components (e.g. a router, a logger and a peripheral gateway), each of which perform a specific, necessary function of the contact center application. A single server is permitted to have multiple functional components of a different type, but also multiple components of the same type, each of which may be part of a different instance. A perfect example of the latter is in a telephony service provider environment where a single server could have ten router components, each assigned to a different 'customer' instance. All ten are concurrently functional but route contacts only within the context of the instance that they are assigned. In this scenario, the instance table would have ten entries. The instance table is not directly dependent upon any other table, however, the other functional component tables are dependent upon the instance table. The instance table index serves as a primary index for all other functional component tables in order to properly relate the functional components to the appropriate instance. The SNMP agent constructs the instance table at startup. Since instances can only be configured while the enterprise contact center application is stopped, instance table entries cannot be added to or deleted from the table nor can object values be modified either by the agent or the management station. All objects in this table are read-only."
  },
  "cccaInstanceEntry": {
    "name": "cccaInstanceEntry",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaInstanceNumber",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Each instance entry represents a contact center application solution. A solution includes a collection of interconnected functional components, each of which perform a specific, necessary function of the contact center application. At minimum, an instance would include one router component, one logger component and one peripheral gateway component. While each functional component may reside on a separate server, they are identified as being a part of the collective instance by having the same instance name and instance number."
  },
  "cccaInstanceNumber": {
    "name": "cccaInstanceNumber",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The instance number is a numeric value that uniquely identifies an enterprise contact center application instance. The instance number is a user-defined value configured when the instance is created by the administrator."
  },
  "cccaInstanceName": {
    "name": "cccaInstanceName",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The instance name is the configured textual identification for the enterprise contact center application instance."
  },
  "cccaComponentTable": {
    "name": "cccaComponentTable",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The component table is a list of enterprise contact center application functional components. A contact center application solution includes a collection of interconnected functional components (e.g. a router, a logger and a peripheral gateway), each of which perform a specific, necessary function of the contact center application. This table enumerates and lists all contact center application functional components installed and configured on this server. A single server is permitted to have multiple functional components of a different type, but also multiple components of the same type. This table has an expansion relationship with the instance table; there will be one or many entries in this table that relate to a single entry in the instance table. The component table is indexed by two different values: the primary index is the instance index; the secondary index is a unique identifier for each functional component. This component index is arbitrarily assigned by the SNMP agent. These same index values are used in the individual component information tables, thus, the individual component information tables have a sparse dependency relationship with this table. The SNMP agent constructs the component table at startup. Since components can only be configured while the enterprise contact center application is stopped, component table entries cannot be added to or deleted from the table. Object values can be modified by the agent but not the management station. All objects in this table are read-only to the management station. "
  },
  "cccaComponentEntry": {
    "name": "cccaComponentEntry",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaInstanceNumber",
        "implied": 0
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Each component entry represents a contact center application functional component installed and configured on this server. This table lists these functional components and provides a map to the component resource table."
  },
  "cccaComponentIndex": {
    "name": "cccaComponentIndex",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CccaIndex",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The component index is a value that uniquely identifies an entry in the component table. This value is arbitrarily assigned by the SNMP agent."
  },
  "cccaComponentType": {
    "name": "cccaComponentType",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CccaComponentType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The component type object identifies the type of enterprise contact center application functional component."
  },
  "cccaComponentName": {
    "name": "cccaComponentName",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The component name is a user-intuitive textual name for the enterprise contact center application functional component. Typically, this name is constructed using the component type text, the letter that indicates which side this component represents of a fault tolerant duplex pair and potentially a configured numeric identifier assigned to the component. For example, a router component might be 'RouterB'; a peripheral gateway might be 'PG3A'. Often, this name is used elsewhere (in contact center application tools) to identify this functional component."
  },
  "cccaComponentStatus": {
    "name": "cccaComponentStatus",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CccaComponentStatus",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The component status is the last known status of the enterprise contact center application functional component."
  },
  "cccaComponentElmtTable": {
    "name": "cccaComponentElmtTable",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "- S. Waldbusser, P. Grillo, Host Resources MIB, RFC-2790, March 2000. - C. Krupczak, J. Saperia, Definitions of System-Level Managed Objects for Applications, RFC-2287, February 1998. ",
    "status": "current",
    "description": "The component element table provides a list of component (operating system) services or processes that are elements of an enterprise contact center application functional component. Each entry identifies a single process that is a necessary element of the functional component. This table also provides a one-to-one mapping of entries to a corresponding entry in IETF standard host and application MIB tables. The HOST-RESOURCES and SYSAPPL MIBs expose tables that provide additional instrumentation for software and applications and for the processes that make up that software or those applications. The HOST-RESOURCES-MIB entries in 'hrSWRunTable' and 'hrSWRunPerfTable' and the SYSAPPL-MIB entries in 'sysApplElmtRunTable' have a one-to-one relationship to entries in the component element table. The entries in these standard MIB tables are solely or partially indexed by the operating system process identifier (ID). The process ID is an integer value that uniquely identifies a single process that is currently running on the host. Entries in the component element table maintain its process ID; this value is used to relate the entry to a corresponding entry in the referenced tables of HOST-RESOURCES-MIB and SYSAPPL-MIB. Entries in these tables of the HOST-RESOURCES and SYSAPPL MIBs expose similar information about each process; in some cases, objects are duplicated. However, while the HOST-RESOURCES-MIB lists processes with no further relationship, the SYSAPPL-MIB relates these same processes to installed software packages and the elements that make up those packages. Entries in the component element table cannot be similarly indexed as the referenced standard MIB tables because, should the process terminate (expectedly or unexpectedly), the entry would need to be removed from the table since its index or process ID is thus unknown. This behavior diminishes the agent's ability to express a component element's current status since the entry no longer exists. However, to relate this table to the referenced standard MIB tables, entries in the component element table maintain the current process ID of the element. This provides the one-to-one relationship that allows the management station to drill down further on each functional component and present instrumentation related to each element of that component from these standard MIB tables. This table has a expansion relationship with the component table; there will be one or many entries in this table that relate to a single entry in the component table. Because the set of elements of a contact center functional component are finite and static, this table is constructed by the SNMP agent at startup; entries cannot be added or deleted at run time. The object values of each element entry may change periodically if the run state of the process changes. The SNMP agent will alter the RunID and Status object values to reflect the correct process ID and run status of that process. All objects in this table are read-only to the management station. "
  },
  "cccaComponentElmtEntry": {
    "name": "cccaComponentElmtEntry",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaInstanceNumber",
        "implied": 0
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentIndex",
        "implied": 0
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentElmtIndex",
        "implied": 0
      }
    ],
    "reference": "- S. Waldbusser, P. Grillo, Host Resources MIB, RFC-2790, March 2000. - C. Krupczak, J. Saperia, Definitions of System-Level Managed Objects for Applications, RFC-2287, February 1998. ",
    "status": "current",
    "description": "Each entry in the component element identifies a single process that is a necessary element of the enterprise contact center functional component. Each entry in the 'hrSWRunTable' and the 'hrSWRunPerfTable' of the HOST-RESOURCES-MIB as well as the 'sysApplElmtRunTable' of the SYSAPPL-MIB maps to a corresponding entry of the component element table. An entry in this table is an operating system process or service."
  },
  "cccaComponentElmtIndex": {
    "name": "cccaComponentElmtIndex",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The component element index is a unique numeric identifier for a system process or service that is a necessary element of an enterprise contact center application functional component. This value is arbitrarily assigned by the SNMP subagent."
  },
  "cccaComponentElmtName": {
    "name": "cccaComponentElmtName",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The component element name is the textual name of the component element, as known by the contact center application. The component element is an operating system process which is a necessary element of the enterprise contact center application functional component. Most often, this name is the host executable file name, without the file extension."
  },
  "cccaComponentElmtRunID": {
    "name": "cccaComponentElmtRunID",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "- S. Waldbusser, P. Grillo, Host Resources MIB, RFC-2790, March 2000. - C. Krupczak, J. Saperia, Definitions of System-Level Managed Objects for Applications, RFC-2287, February 1998. ",
    "status": "current",
    "description": "The component element run ID is the actual operating system process ID for the process or service that is an element of this enterprise contact center application functional component. The component element run ID maps directly to the 'hrSWRunIndex' value of 'hrSWRunTable' and 'hrSWRunPerfTable' (which augments 'hrSWRunTable') of the HOST-RESOURCES-MIB and the 'sysApplElmtRunIndex' value of 'sysApplElmtRunTable' of the SYSAPPL-MIB. This object value provides the mechanism for a one-to-one relationship between an entry in the referenced tables of these standard MIBs and an entry in the component element table."
  },
  "cccaComponentElmtStatus": {
    "name": "cccaComponentElmtStatus",
    "oid": "1.3.6.1.4.1.9.9.473.1.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CccaComponentStatus",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The component element status is the last known status of a system process or service that is a necessary element of an enterprise contact center application functional component."
  },
  "cccaRouterTable": {
    "name": "cccaRouterTable",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The router table lists each enterprise contact center application router component configured on this server. Each entry in the table defines a separate router functional component; a single server is permitted to have multiple router components. The router table has a sparse dependent relationship with the component table. The instance number acts as the primary index for the router table in order to properly relate a router component entry to the appropriate instance entry. The component index acts as the secondary index, relating the entry to the corresponding entry in the component table. The SNMP agent constructs the router table at startup. Since routers can only be configured while the enterprise contact center application is stopped, router table entries cannot be added to or deleted from the table either by the agent or the management station when the application is running. The agent will update router entry objects as their values change when the application is running. All objects in this table are read-only to the management station."
  },
  "cccaRouterEntry": {
    "name": "cccaRouterEntry",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaInstanceNumber",
        "implied": 0
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Each router entry represents an enterprise contact center application router functional component configured on the server. The router component provides intelligent routing of inbound contacts, e.g. voice calls, to contact center agents. The objects in the router entry provide information in three areas: 1) identify which part of the fault tolerant duplex pair this component represents and which server is its duplex pair, 2) provide health instrumentation that indicates the component's status and load and 3) supply a count of NIC subcomponents configured and enabled on this router component. "
  },
  "cccaRouterSide": {
    "name": "cccaRouterSide",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CccaComponentSide",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The router side indicates which of the duplex pair this entry represents of an enterprise contact center application fault tolerant router functional component. The router side value is either 'A' or 'B'. For simplex configurations, the router side value defaults to 'A'."
  },
  "cccaRouterCallsPerSec": {
    "name": "cccaRouterCallsPerSec",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type"
    },
    "units": "calls per second",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The router calls per sec object indicates the current inbound call rate; that is, the calculated number of inbound calls per second."
  },
  "cccaRouterAgentsLoggedOn": {
    "name": "cccaRouterAgentsLoggedOn",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type"
    },
    "units": "agents logged on",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The router agents logged on object represents the number of contact center agents currently managed by the enterprise contact center application. This does not necessarily represent the number of contact center agents that can receive routed calls, but rather the number of agents for which the application is recording statistical information."
  },
  "cccaRouterCallsInProgress": {
    "name": "cccaRouterCallsInProgress",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type"
    },
    "units": "calls in progress",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The router calls in progress object indicates the current number of active (voice) calls being managed by the enterprise contact center application. The calls will be in various states of treatment."
  },
  "cccaRouterDuplexPairName": {
    "name": "cccaRouterDuplexPairName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The router duplex pair name object is the host name of the duplex pair (i.e. the other side) server of an enterprise contact center application fault tolerant router component. If this component is not part of a duplex pair (i.e. simplex), the object value will be the null string."
  },
  "cccaRouterNicCount": {
    "name": "cccaRouterNicCount",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 32
          }
        ]
      }
    },
    "units": "entries",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The router NIC count object is the number of network interface controllers configured and enabled for this enterprise contact center application router functional component. There is an imposed architectural limit of 32 configured NICs per router."
  },
  "cccaNicTable": {
    "name": "cccaNicTable",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The NIC table lists the enterprise contact center application network interface controllers enabled on this router functional component. The NIC table has an expansion dependent relationship with the router table. There may be one or more NIC entries associated with a single router entry. The instance index acts as the primary index and the component index a secondary index. This indexing method ensures that NIC entries are properly related to its parent router and to the appropriate instance. The SNMP agent arbitrarily assigns the NIC index when each NIC table entry is created. The SNMP agent constructs the NIC table at startup. Since NICs can only be configured while the enterprise contact center application is stopped, NIC table entries cannot be added to or deleted from the table either by the agent or the management station when the application is running. The agent will update NIC entry objects as their values change when the application is running. All objects in this table are read-only to the management station."
  },
  "cccaNicEntry": {
    "name": "cccaNicEntry",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaInstanceNumber",
        "implied": 0
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentIndex",
        "implied": 0
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaNicIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Each NIC entry represents an enterprise contact center application network interface controller functional component configured and enabled on the server. The NIC component provides an interface between the enterprise contact center application and a telephony network. The objects in the NIC entry provide the NIC type and the current status of the NIC functional component."
  },
  "cccaNicIndex": {
    "name": "cccaNicIndex",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CccaIndex",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The NIC index is a value that uniquely identifies an entry in the network interface controller table. The value of this object is arbitrarily assigned by the SNMP agent."
  },
  "cccaNicType": {
    "name": "cccaNicType",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "generic": 1,
          "att": 2,
          "aucsINAP": 3,
          "cain": 4,
          "crsp": 5,
          "cwc": 6,
          "gktmp": 7,
          "incrp": 8,
          "mci": 9,
          "nortel": 10,
          "ntl": 11,
          "sprint": 12,
          "ss7in": 13,
          "stentor": 14,
          "timINAP": 15
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The Network Interface Controller (NIC) type indicates which telephony network that this NIC functional component provides an interface. The possible options are: 'generic': Generic NIC (typically only used for testing) 'att': AT&T NIC 'aucsINAP': AT&T Unisource Capability Set Intelligent Network Application Protocol NIC 'cain': Nortel Carrier Advanced Intelligent Network NIC 'crsp': Call Routing Service Protocol NIC 'cwc': Cable & Wireless Communications NIC 'gktmp': Gatekeeper Transaction Message Protocol NIC 'incrp': Intelligent Network Call Routing Protocol NIC 'mci': MCI NIC 'nortel': Nortel NIC 'ntl': ntl Group Ltd. NIC 'sprint': Sprint NIC 'ss7in': Signaling System 7 Intelligent Network NIC 'stentor': Stentor NIC 'timINAP': Telecom Italia Mobile Intelligent Network Application Protocol NIC "
  },
  "cccaNicStatus": {
    "name": "cccaNicStatus",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CccaComponentStatus",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The NIC status is the last known status of the enterprise contact center application network interface controller functional component."
  },
  "cccaLoggerTable": {
    "name": "cccaLoggerTable",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The logger table lists the enterprise contact center application logger functional components installed and enabled on this server. The logger table has a sparse dependent relationship with the component table. The instance number acts as the primary index for the logger table in order to properly relate a logger component entry to the appropriate instance entry. The component index acts as the secondary index, relating the entry to the corresponding entry in the component table. The SNMP agent constructs the logger table at startup. Since loggers can only be configured while the enterprise contact center application is stopped, logger table entries cannot be added to or deleted from the table either by the agent or the management station when the application is running. The agent will update the values of logger entry objects as their values change when the application is running. All objects in this table are read-only to the management station."
  },
  "cccaLoggerEntry": {
    "name": "cccaLoggerEntry",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaInstanceNumber",
        "implied": 0
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Each logger entry represents an enterprise contact center application logger functional component configured and enabled on the server. The logger component maintains the enterprise contact center solution configuration and real-time data store. The objects in each logger entry provide configuration and component status information."
  },
  "cccaLoggerSide": {
    "name": "cccaLoggerSide",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CccaComponentSide",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The logger side indicates which of the duplex pair this entry represents of an enterprise contact center application fault tolerant logger functional component. The logger side value is either 'A' or 'B'. For simplex configurations, the logger side value defaults to 'A'."
  },
  "cccaLoggerType": {
    "name": "cccaLoggerType",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "standard": 1,
          "nam": 2,
          "cicm": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The logger type object indicates which type of enterprise contact center application logger is installed on this server. The logger type varies based on the configuration of the contact center solution. 'standard': The default logger type configured for an enterprise contact center solution. 'nam': The network application manager (NAM) logger type is installed at a telephony service provider and supports the routing of inbound voice calls to a customer intelligent contact management application solution. 'cicm': The customer intelligent contact manager (CICM) logger type is installed as part of a customer instance of an enterprise contact center application solution. The CICM component manages contacts routed by the NAM component, distributing contacts to customer premise peripheral devices or contact center agents. "
  },
  "cccaLoggerRouterSideAName": {
    "name": "cccaLoggerRouterSideAName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The router side A name object holds the host name of the side 'A' router that this enterprise contact center application logger functional component is associated. The logger component must be connected to a router that is part of the same instance. The logger connects to the router via a 'private' interface -- a closed subnet that guarantees a quality of service level that will not impact the performance of the contact center application. This private subnet is not accessible by the management station. _____ | | | NMS | |_____| | Visible Subnet =======+===+==========+================+=============+======= | | | | ____|____ ___|__ ___|__ ____|____ | | | | | | | | | RouterA | | PG1A | | PG1B | | RouterB | |_________| |______| |______| |_________| | |____private_____| | | | =======+=======+=============================+=======+======= | Private Subnet | ____|____ ____|____ | | | | | LoggerA | | LoggerB | |_________| |_________| "
  },
  "cccaLoggerRouterSideBName": {
    "name": "cccaLoggerRouterSideBName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The router side B name object holds the host name of the side 'B' router that this enterprise contact center application logger functional component is associated. The logger component must be connected to a router that is part of the same instance. The logger connects to the router via a 'private' interface -- a closed subnet that guarantees a quality of service level that will not impact the performance of the contact center application. This private subnet is not accessible by the management station. _____ | | | NMS | |_____| | Visible Subnet =======+===+==========+================+=============+======= | | | | ____|____ ___|__ ___|__ ____|____ | | | | | | | | | RouterA | | PG1A | | PG1B | | RouterB | |_________| |______| |______| |_________| | |____private_____| | | | =======+=======+=============================+=======+======= | Private Subnet | ____|____ ____|____ | | | | | LoggerA | | LoggerB | |_________| |_________| "
  },
  "cccaLoggerDuplexPairName": {
    "name": "cccaLoggerDuplexPairName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The logger duplex pair name object is the host name of the duplex pair (i.e. the other side) server of an enterprise contact center application fault tolerant logger component. If this component is not part of a duplex pair (i.e. simplex), the object value will be the null string. The logger connects to its duplex pair via a 'private' interface -- a closed subnet that guarantees a quality of service level that will not impact the performance of the contact center application. This private subnet is not accessible by the management station."
  },
  "cccaLoggerHDSReplication": {
    "name": "cccaLoggerHDSReplication",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The logger HDS replication Boolean object indicates whether the logger component will be replicating data to a distributor AW Historical Data Server (HDS). If 'true', the logger feeds historical data at regular intervals to the HDS for long-term storage. In this configuration, administrator reports are generated by accessing data from the HDS rather than the logger in order to remove the performance impact of reporting on the logger."
  },
  "cccaDistAwTable": {
    "name": "cccaDistAwTable",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The distributor AW table lists the enterprise contact center application Distributor Administrator Workstation (AW) functional components installed and enabled on this server. The distributor AW table has a sparse dependent relationship with the component table. The instance number acts as the primary or the distributor AW table in order to properly relate a distributor AW component entry to the appropriate instance entry. The component index acts as the secondary index, relating the entry to the corresponding entry in the component table. The SNMP agent constructs the distributor AW table at startup. Since distributor AWs can only be configured while the enterprise contact center application is stopped, distributor AW table entries cannot be added to or deleted from the table either by the agent or the management station when the application is running. The agent will update the values of distributor AW entry objects as their values change when the application is running. All objects in this table are read- only to the management station."
  },
  "cccaDistAwEntry": {
    "name": "cccaDistAwEntry",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaInstanceNumber",
        "implied": 0
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Each distributor AW entry represents an enterprise contact center application distributor administrator workstation functional component configured on the server. The distributor AW component maintains a historical database that serves one or more reporting clients. The objects in each distributor AW entry provide configuration and component status information."
  },
  "cccaDistAwSide": {
    "name": "cccaDistAwSide",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CccaComponentSide",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The distributor AW side indicates which of the duplex pair this entry represents of an enterprise contact center application fault tolerant distributor administrator workstation functional component. The distributor AW side value is either 'A' or 'B'. For simplex configurations, the distributor AW side value defaults to 'A'."
  },
  "cccaDistAwType": {
    "name": "cccaDistAwType",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "standard": 0,
          "nam": 1,
          "cicm": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The distributor AW type object indicates which type of enterprise contact center application distributor administrator workstation is installed on this server. The distributor AW type varies based on the configuration of the contact center solution. 'standard': The default distributor AW type configured for an enterprise contact center solution. 'nam': The network application manager (NAM) distributor type is installed at a telephony service provider. 'cicm': The customer intelligent contact manager (CICM) distributor AW type is installed as part of a customer instance of an enterprise contact center application solution."
  },
  "cccaDistAwAdminSiteName": {
    "name": "cccaDistAwAdminSiteName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The distributor AW administrative site name is a user-defined textual name that uniquely identifies the location or the configuration of the distributor AW component."
  },
  "cccaDistAwRouterSideAName": {
    "name": "cccaDistAwRouterSideAName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The distributor AW router side A name object holds the host name of the side 'A' router that this enterprise contact center application distributor AW functional component is associated. The distributor AW component must be connected to a router that is part of the same instance. If the side B router is the active router and a failure occurs, the side A router then immediately assumes the role. In this case, the distributor AW will lose its connection to the side B router and thus use this object value to connect to the side A router."
  },
  "cccaDistAwRouterSideBName": {
    "name": "cccaDistAwRouterSideBName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The distributor AW router side B name object holds the host name of the side 'B' router that this enterprise contact center application distributor AW functional component is associated. The distributor AW component must be connected to a router that is part of the same instance. If the side A router is the active router and a failure occurs, the side B router then immediately assumes the role. In this case, the distributor AW will lose its connection to the side A router and thus use this object value to connect to the side B router."
  },
  "cccaDistAwLoggerSideAName": {
    "name": "cccaDistAwLoggerSideAName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The distributor AW logger side A name object holds the host name of the side 'A' logger that this enterprise contact center application distributor AW functional component is associated. The distributor AW component must be connected to a logger that is part of the same instance. If the side B logger is the active logger and a failure occurs, the side A logger then immediately assumes the role. In this case, the distributor AW will lose its connection to the side B logger and thus use this object value to connect to the side A logger."
  },
  "cccaDistAwLoggerSideBName": {
    "name": "cccaDistAwLoggerSideBName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The distributor AW logger side B name object holds the host name of the side 'B' logger that this enterprise contact center application distributor AW functional component is associated. The distributor AW component must be connected to a logger that is part of the same instance. If the side A logger is the active logger and a failure occurs, the side B logger then immediately assumes the role. In this case, the distributor AW will lose its connection to the side A logger and thus use this object value to connect to the side B logger."
  },
  "cccaDistAwDuplexPairName": {
    "name": "cccaDistAwDuplexPairName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The distributor AW duplex pair name object is the host name of the duplex pair (i.e. the other side) server of an enterprise contact center application fault tolerant distributor AW component. If this component is not part of a duplex pair (i.e. simplex), the object value will be the null string."
  },
  "cccaDistAwHDSEnabled": {
    "name": "cccaDistAwHDSEnabled",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The distributor AW HDS enabled Boolean object indicates whether this enterprise contact center application distributor administrator workstation has a historical database server (HDS) configured and enabled. If so, this distributor AW will receive replicated data from the logger at periodic intervals and add the data to the HDS. Client administrator workstations will generate reports based on the data in this HDS."
  },
  "cccaDistAwWebViewEnabled": {
    "name": "cccaDistAwWebViewEnabled",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.4.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The distributor AW WebView enabled Boolean object indicates whether this enterprise contact center application distributor administrator workstation has a web-based reporting server (WebView) configured and enabled. Having WebView configured and enabled does not imply that a historical database server is also present on this server; the data may be accessed by the WebView server from a database on a different host."
  },
  "cccaDistAwWebViewServerName": {
    "name": "cccaDistAwWebViewServerName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.4.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The distributor AW WebView server name object holds the server (universal naming convention (UNC)) name of the server where the enterprise contact center application database resides. This database holds the real-time and/or historical data that is requested when generating reports. The WebView server accesses this database to serve WebView client reports. "
  },
  "cccaPgTable": {
    "name": "cccaPgTable",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The PG table lists the enterprise contact center application peripheral gateway functional components installed and enabled on this server. The peripheral gateway table has a sparse dependent relationship with the component table. The instance number acts as the primary index for the peripheral gateway table in order to properly relate a peripheral gateway component entry to the appropriate instance entry. The component index acts as the secondary index, relating the entry to the corresponding entry in the component table. The SNMP agent constructs the peripheral gateway table at startup. Since peripheral gateways can only be configured while the enterprise contact center application is stopped, peripheral gateway table entries cannot be added to or deleted from the table either by the agent or the management station when the application is running. The agent will update the values of peripheral gateway entry objects as their values change when the application is running. All objects in this table are read-only to the management station."
  },
  "cccaPgEntry": {
    "name": "cccaPgEntry",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaInstanceNumber",
        "implied": 0
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Each PG entry represents an enterprise contact center application peripheral gateway functional component configured on the server. The peripheral gateway component provides an interface to one or more peripheral devices such as a private branch exchange (PBX) or a voice response unit (VRU). The objects in each PG entry provide configuration and component status information as well as a count of peripheral interface manager (PIM) subcomponents that have been configured and enabled."
  },
  "cccaPgNumber": {
    "name": "cccaPgNumber",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 80
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PG number is a user-defined numeric identifier for this enterprise contact center application peripheral gateway. The value is limited by the contact center application to a value between 1 and 80; 80 is the maximum number of peripheral gateways supported by the architecture."
  },
  "cccaPgSide": {
    "name": "cccaPgSide",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CccaComponentSide",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PG side indicates which of the duplex pair this entry represents of an enterprise contact center application fault tolerant peripheral gateway functional component. The PG side value is either 'A' or 'B'. For simplex configurations, the PG side value defaults to 'A'."
  },
  "cccaPgRouterSideAName": {
    "name": "cccaPgRouterSideAName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PG router side A name object holds the host name of the side A router that this enterprise contact center application peripheral gateway functional component is associated. The peripheral gateway component must be connected to a router that is part of the same instance. If the side B router is the active router and a failure occurs, the side A router then immediately assumes the role. In this case, the peripheral gateway will lose its connection to the side B router and thus use this object value to connect to the side A router."
  },
  "cccaPgRouterSideBName": {
    "name": "cccaPgRouterSideBName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PG router side B name object holds the host name of the side B router that this enterprise contact center application peripheral gateway functional component is associated. The peripheral gateway component must be connected to a router that is part of the same instance. If the side A router is the active router and a failure occurs, the side B router then immediately assumes the role. In this case, the peripheral gateway will lose its connection to the side A router and thus use this object value to connect to the side B router."
  },
  "cccaPgDuplexPairName": {
    "name": "cccaPgDuplexPairName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PG duplex pair name object is the host name of the duplex pair (i.e. the other side) server of an enterprise contact center application fault tolerant peripheral gateway component. If this component is not part of a duplex pair (i.e. simplex), the object value will be the null string."
  },
  "cccaPgPimCount": {
    "name": "cccaPgPimCount",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PG PIM count object indicates the number of peripheral interface managers configured and enabled for this enterprise contact center application peripheral gateway functional component. This value is limited to 32 - this is the maximum number of PIMs supported on a single peripheral gateway."
  },
  "cccaPimTable": {
    "name": "cccaPimTable",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The PIM table lists the enterprise contact center application peripheral interface managers (PIM) configured and enabled on this peripheral gateway functional component. The PIM table is dependent upon both the instance table and the PG table; the instance index acts as the primary index and the PG index a secondary index. This indexing method ensures that PIM entries are properly related to its parent peripheral gateway and to the appropriate instance. The PIM table has an expansion dependent relationship with the peripheral gateway table. There may be one or more PIM entries associated with a single peripheral gateway entry. The instance index acts as the primary index and the component index a secondary index. This indexing method ensures that PIM entries are properly related to its parent peripheral gateway and to the appropriate instance. The SNMP agent assigns the PIM number, based upon the configuration, when each PIM table entry is created. The SNMP agent constructs the PIM table at startup. Since PIMs can only be configured while the enterprise contact center application is stopped, PIM table entries cannot be added to or deleted from the table either by the agent or the management station when the application is running. The agent will update PIM entry objects as their values change when the application is running. All objects in this table are read-only to the management station."
  },
  "cccaPimEntry": {
    "name": "cccaPimEntry",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaInstanceNumber",
        "implied": 0
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentIndex",
        "implied": 0
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaPimNumber",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Each PIM entry represents an enterprise contact center application peripheral interface manager functional component configured on the server. The PIM component provides an interface between the enterprise contact center application and a telephony switch -- a private branch exchange (PBX), an automatic call distributor (ACD) or a voice response unit (VRU). The objects in each PIM entry provide PIM type information, the current status of the PIM functional component and the host name of the telephony switch it interfaces."
  },
  "cccaPimNumber": {
    "name": "cccaPimNumber",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The PIM number is the numeric identifier for this enterprise contact center application PIM. This object value is a user-defined numeric value and is limited to a maximum of 32 since this is the maximum number of PIMs supported on a single peripheral gateway."
  },
  "cccaPimPeripheralName": {
    "name": "cccaPimPeripheralName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PIM peripheral name is the user-defined textual name of the enterprise contact center application PIM. This name uniquely identifies the PIM."
  },
  "cccaPimPeripheralType": {
    "name": "cccaPimPeripheralType",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CccaPeripheralType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PIM peripheral type object specifies the type of the enterprise contact center application PIM, e.g. the brand name and/or model of the automatic call distributor (ACD), private branch exchange (PBX) or voice response unit (VRU)."
  },
  "cccaPimStatus": {
    "name": "cccaPimStatus",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CccaComponentStatus",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PIM status object holds the last known status of the enterprise contact center application peripheral interface manager functional component."
  },
  "cccaPimPeripheralHostName": {
    "name": "cccaPimPeripheralHostName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.6.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The PIM peripheral host name object holds the host name or IP address of the peripheral (the PBX, ACD or VRU) that the enterprise contact center application PIM will be connected. If there are multiple interfaces to the peripheral, each host name or IP address will be separated by a comma."
  },
  "cccaCgTable": {
    "name": "cccaCgTable",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The CG table lists the enterprise contact center application computer telephony integration (CTI) gateway functional components installed and enabled on this server. The CTI gateway table has a sparse dependent relationship with the component table. The instance number acts as the primary index for the CTI gateway table in order to properly relate a CTI gateway component entry to the appropriate instance entry. The component index acts as the secondary index, relating the entry to the corresponding entry in the component table. The SNMP agent constructs the CTI gateway table at startup. Since CTI gateways can only be configured while the enterprise contact center application is stopped, CTI gateway table entries cannot be added to or deleted from the table either by the agent or the management station when the application is running. The agent will update the values of CTI gateway entry objects as their values change when the application is running. All objects in this table are read-only to the management station."
  },
  "cccaCgEntry": {
    "name": "cccaCgEntry",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.7.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaInstanceNumber",
        "implied": 0
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Each CG entry represents an enterprise contact center application CTI gateway functional component configured and enabled on the server. The CTI gateway is the solution integration point for desktop CTI clients. The objects in each CG entry provide configuration and component status information."
  },
  "cccaCgNumber": {
    "name": "cccaCgNumber",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.7.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 80
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The CG number is a numeric identifier for this enterprise contact center application CG. This is a user-defined numeric value and may not be identical to the table index. The value is limited by the contact center application to a value between 1 and 80 as this is the maximum number of CTI gateways supported by the architecture."
  },
  "cccaCgSide": {
    "name": "cccaCgSide",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.7.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CccaComponentSide",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The CG side indicates which of the duplex pair this entry represents of an enterprise contact center application fault tolerant CTI gateway functional component. The CG side value is either 'A' or 'B'. For simplex configurations, the CG side value defaults to 'A'."
  },
  "cccaCgPgSideAName": {
    "name": "cccaCgPgSideAName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.7.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The CG PG side A name object holds the host name of the side A peripheral gateway (PG) that this enterprise contact center application CTI gateway (CG) functional component is associated. The CG component must be connected to a PG that is part of the same instance. If the side B PG is the active PG and a failure occurs, the side A PG then immediately assumes the role. In this case, the CG will lose its connection to the side B PG and thus use this object value to connect to the side A PG."
  },
  "cccaCgPgSideBName": {
    "name": "cccaCgPgSideBName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.7.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The CG PG side B name object holds the host name of the side 'B' peripheral gateway (PG) that this enterprise contact center application CTI gateway (CG) functional component is associated. The CG component must be connected to a PG that is part of the same instance. If the side A PG is the active PG and a failure occurs, the side B PG then immediately assumes the role. In this case, the CG will lose its connection to the side A PG and thus use this object value to connect to the side B PG."
  },
  "cccaCgDuplexPairName": {
    "name": "cccaCgDuplexPairName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.7.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The CG duplex pair name object is the host name of the duplex pair (i.e. the other side) server of an enterprise contact center application fault tolerant CTI gateway component. If this component is not part of a duplex pair (i.e. simplex), the object value will be the null string."
  },
  "cccaCtiOsTable": {
    "name": "cccaCtiOsTable",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.8",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The CTIOS table lists the enterprise contact center application computer telephony integration object server (CTIOS) functional components installed and enabled on this server. The CTIOS table has a sparse dependent relationship with the component table. The instance number acts as the primary index for the CTIOS table in order to properly relate a CTIOS component entry to the appropriate instance entry. The component index acts as the secondary index, relating the entry to the corresponding entry in the component table. The SNMP agent constructs the CTIOS table at startup. Since CTIOS components can only be configured while the enterprise contact center application is stopped, CTIOS table entries cannot be added to or deleted from the table either by the agent or the management station when the application is running. The agent will update the values of CTIOS entry objects as their values change when the application is running. All objects in this table are read-only to the management station."
  },
  "cccaCtiOsEntry": {
    "name": "cccaCtiOsEntry",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.8.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaInstanceNumber",
        "implied": 0
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Each CTIOS entry represents an enterprise contact center application CTI object server functional component configured on the server. The CTI object server, as compared to the CTI gateway, is a more intelligent and more scalable server for desktop CTI clients and offers a higher-level interface to those client applications. The objects in each CTIOS entry provide configuration and component status information."
  },
  "cccaCtiOsServerName": {
    "name": "cccaCtiOsServerName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.8.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The CTIOS server name object specifies the user-defined textual name assigned to this enterprise contact center application CTIOS component to uniquely identify it."
  },
  "cccaCtiOsPeripheralName": {
    "name": "cccaCtiOsPeripheralName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.8.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The CTIOS peripheral name is the unique identifier for the peripheral that the enterprise contact center application CTIOS component is associated. This association links the CTI desktop clients with a particular peripheral PBX."
  },
  "cccaCtiOsPeripheralType": {
    "name": "cccaCtiOsPeripheralType",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.8.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CccaPeripheralType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The CTIOS peripheral type object indicates the peripheral type that the enterprise contact center application CTIOS is associated. This also then identifies the peripheral PBX type that the CTI desktop clients are associated."
  },
  "cccaCtiOsCgSideAName": {
    "name": "cccaCtiOsCgSideAName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.8.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The CTIOS CG side A name object holds the host name of the side A CTI gateway (CG) that this enterprise contact center application CTI object server (CTIOS) functional component is associated. The CTIOS component must be connected to a CG that is part of the same instance. If the side B CG is the active CG and a failure occurs, the side A CG then immediately assumes the role. In this case, CTIOS will lose its connection to the side B CG and thus use this object value to connect to the side A CG."
  },
  "cccaCtiOsCgSideBName": {
    "name": "cccaCtiOsCgSideBName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.8.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The CTIOS CG side B name object holds the host name of the side B CTI gateway (CG) that this enterprise contact center application CTI object server (CTIOS) functional component is associated. The CTIOS component must be connected to a CG that is part of the same instance. If the side A CG is the active CG and a failure occurs, the side B CG then immediately assumes the role. In this case, CTIOS will lose its connection to the side A CG and thus use this object value to connect to the side B CG."
  },
  "cccaCtiOsPeerName": {
    "name": "cccaCtiOsPeerName",
    "oid": "1.3.6.1.4.1.9.9.473.1.3.8.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressDNS",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The CTIOS peer name object is the host name of the peer server of an enterprise contact center application CTI object server functional component. If this component does not have a peer, the object value will be the null string. Note that the CTIOS component implements fault tolerance slightly differently than other components of the contact center solution. CTIOS maintains two active peer object servers to serve client desktop CTI applications. If a failure occurs on one of the two servers, its clients will connect to the peer server."
  },
  "cccaEventComponentId": {
    "name": "cccaEventComponentId",
    "oid": "1.3.6.1.4.1.9.9.473.1.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The event component ID specifies a unique identifier used to correlate multiple notifications generated by a single enterprise contact center application functional component or subcomponent. A functional component constructs its unique identifier based upon configured parameters; all notifications by that component will include this event component ID."
  },
  "cccaEventState": {
    "name": "cccaEventState",
    "oid": "1.3.6.1.4.1.9.9.473.1.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clear": 0,
          "applicationError": 2,
          "raise": 4,
          "singleStateRaise": 9
        }
      }
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The event state object identifies the state (not to be confused with severity) of the notification and potentially the current state of the functional component that generated the notification. The possible states are: 'clear': The clear state indicates that the condition which generated a previous raise notification has been resolved. 'applicationError': The application error state alerts the recipient that an error exists in the enterprise contact center application but that the error does not affect the operational status of the functional component. 'raise': A raise state identifies a notification received as a result of a health-impacting condition, such as a process failure. A subsequent clear state notification will follow when the error condition is resolved. 'singleStateRaise': The single state raise state indicates that a health-impacting error has occurred and that a subsequent clear state notification will not be forthcoming. An example of a single state raise condition is an application configuration error that requires the system to be stopped and the problem resolved by an administrator before the affected component will function properly. "
  },
  "cccaEventMessageId": {
    "name": "cccaEventMessageId",
    "oid": "1.3.6.1.4.1.9.9.473.1.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The event message ID is the unique notification message identifier (value) that was assigned by the enterprise contact center application. This identifier is unique for each different notification but consistent for each instance of the same notification."
  },
  "cccaEventOriginatingNode": {
    "name": "cccaEventOriginatingNode",
    "oid": "1.3.6.1.4.1.9.9.473.1.4.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The event originating node objects specifies the application- defined name of the enterprise contact center application functional component that generated this notification. This name will vary, both in content and in format, based on the component that generated the notification. For example, the name for a router component may be 'RouterA', a combination of the component identification and the 'side' identifier, while the name 'PG1A' is a combination of the peripheral gateway acronym followed by the peripheral gateway number and the 'side' identifier."
  },
  "cccaEventOriginatingNodeType": {
    "name": "cccaEventOriginatingNodeType",
    "oid": "1.3.6.1.4.1.9.9.473.1.4.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 0,
          "router": 1,
          "pg": 2,
          "nic": 3,
          "aw": 4,
          "logger": 5,
          "listener": 6,
          "cg": 7,
          "ba": 8
        }
      }
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The event originating node type indicates the type of enterprise contact center application functional component or subcomponent that generated this notification. The node types are: 'unknown': The notification originates from an unknown source. 'router': The notification was generated by the router functional component. 'pg': The notification was generated by the peripheral gateway functional component. 'nic': The notification was generated by the network interface controller functional component. 'aw': The notification was generated by the administrator workstation functional component. 'logger': The notification was generated by the logger functional component. 'listener': The notification was generated by the listener functional component. The listener is an enterprise contact center application process that collects event messages from the logger for display in a Cisco proprietary event management application that is part of the Remote Management Suite (RMS). 'cg': The notification was generated by the CTI gateway functional component. 'ba': The notification was generated by the Blended Agent functional component. Blended Agent is an enterprise contact center 'outbound option' functional component that manages campaigns of outbound dialing. "
  },
  "cccaEventOriginatingProcessName": {
    "name": "cccaEventOriginatingProcessName",
    "oid": "1.3.6.1.4.1.9.9.473.1.4.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "Each enterprise contact center application functional component includes one or more operating system processes, each of which performs a specific function. The event originating process object identifies the name of the application process that generated this notification."
  },
  "cccaEventOriginatingSide": {
    "name": "cccaEventOriginatingSide",
    "oid": "1.3.6.1.4.1.9.9.473.1.4.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "CccaComponentSide",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The event originating side object specifies the enterprise contact center application functional component fault tolerant side (either 'A' or 'B') that generated this notification."
  },
  "cccaEventDmpId": {
    "name": "cccaEventDmpId",
    "oid": "1.3.6.1.4.1.9.9.473.1.4.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The Device Management Protocol (DMP) is a session layer protocol used for network communication between enterprise contact center application functional components. The DMP ID uniquely identifies the session layer addresses of an application functional component. A single component may have multiple DMP IDs since a functional component will communicate with other functional components (or its duplex pair) via multiple physical network interfaces and maintain multiple DMP session connections on each interface. Should a communications failure occur, the event DMP ID identifies the physical and logical address that the error occurred."
  },
  "cccaEventSeverity": {
    "name": "cccaEventSeverity",
    "oid": "1.3.6.1.4.1.9.9.473.1.4.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "informational": 1,
          "warning": 2,
          "error": 3
        }
      }
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The event severity object indicates the severity level of this notification. The severity levels are: 'informational': The notification contains important health or operational state information that is valuable to an administrator, however, the event itself does not indicate a failure or impairment condition. 'warning': The notification contains serious health or operational state information that could be a precursor to system impairment or eventual failure. 'error': The notification contains critical health or operational state information and indicates that the system has experienced an impairment and/or a functional failure. "
  },
  "cccaEventTimestamp": {
    "name": "cccaEventTimestamp",
    "oid": "1.3.6.1.4.1.9.9.473.1.4.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The event time stamp object specifies the date and time that the notification was generated on the originating node."
  },
  "cccaEventText": {
    "name": "cccaEventText",
    "oid": "1.3.6.1.4.1.9.9.473.1.4.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The event text is the full text of the notification. This text includes a description of the event that was generated, component state information and potentially a brief description of administrative action that may be necessary to correct the condition that caused the event to occur."
  },
  "cccaIcmEvent": {
    "name": "cccaIcmEvent",
    "oid": "1.3.6.1.4.1.9.9.473.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventComponentId"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventState"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventMessageId"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventOriginatingNode"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventOriginatingNodeType"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventOriginatingProcessName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventOriginatingSide"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventDmpId"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventSeverity"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventTimestamp"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventText"
      }
    ],
    "status": "current",
    "description": "An ICM event is a notification that is sent by a functional component of the Cisco Intelligent Contact Management (ICM) and the Cisco IP Contact Center (IPCC), Enterprise and Hosted Edition, contact center applications."
  },
  "ciscoCccaMIBComplianceRev1": {
    "name": "ciscoCccaMIBComplianceRev1",
    "oid": "1.3.6.1.4.1.9.9.473.2.1.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "cccaGeneralInfoGroup",
        "module": "CISCO-CONTACT-CENTER-APPS-MIB"
      },
      {
        "object": "cccaInstanceTableGroup",
        "module": "CISCO-CONTACT-CENTER-APPS-MIB"
      },
      {
        "object": "cccaComponentTableGroup",
        "module": "CISCO-CONTACT-CENTER-APPS-MIB"
      },
      {
        "object": "cccaComponentElmtTableGroup",
        "module": "CISCO-CONTACT-CENTER-APPS-MIB"
      },
      {
        "object": "cccaRouterTableGroup",
        "module": "CISCO-CONTACT-CENTER-APPS-MIB"
      },
      {
        "object": "cccaNicTableGroup",
        "module": "CISCO-CONTACT-CENTER-APPS-MIB"
      },
      {
        "object": "cccaLoggerTableGroup",
        "module": "CISCO-CONTACT-CENTER-APPS-MIB"
      },
      {
        "object": "cccaDistAwTableGroup",
        "module": "CISCO-CONTACT-CENTER-APPS-MIB"
      },
      {
        "object": "cccaPgTableGroup",
        "module": "CISCO-CONTACT-CENTER-APPS-MIB"
      },
      {
        "object": "cccaPimTableGroup",
        "module": "CISCO-CONTACT-CENTER-APPS-MIB"
      },
      {
        "object": "cccaCgTableGroup",
        "module": "CISCO-CONTACT-CENTER-APPS-MIB"
      },
      {
        "object": "cccaCtiOsTableGroup",
        "module": "CISCO-CONTACT-CENTER-APPS-MIB"
      },
      {
        "object": "cccaIcmNotificationInfoGroup",
        "module": "CISCO-CONTACT-CENTER-APPS-MIB"
      },
      {
        "object": "cccaIcmEventsGroup",
        "module": "CISCO-CONTACT-CENTER-APPS-MIB"
      }
    ],
    "status": "current",
    "description": "This object is the compliance statement for entities which implement the Cisco Contact Center Applications MIB."
  },
  "cccaGeneralInfoGroup": {
    "name": "cccaGeneralInfoGroup",
    "oid": "1.3.6.1.4.1.9.9.473.2.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaDescription"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaVersion"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaTimeZoneName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaTimeZoneOffsetHours"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaTimeZoneOffsetMinutes"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaSupportToolsURL"
      }
    ],
    "status": "current",
    "description": "The general info group defines the general enterprise contact center application information objects. All application servers will populate these objects."
  },
  "cccaInstanceTableGroup": {
    "name": "cccaInstanceTableGroup",
    "oid": "1.3.6.1.4.1.9.9.473.2.2.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaInstanceName"
      }
    ],
    "status": "current",
    "description": "The instance table group defines the enterprise contact center application instance table objects."
  },
  "cccaComponentTableGroup": {
    "name": "cccaComponentTableGroup",
    "oid": "1.3.6.1.4.1.9.9.473.2.2.3",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentType"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentStatus"
      }
    ],
    "status": "current",
    "description": "The component table group defines the enterprise contact center application functional component table objects."
  },
  "cccaComponentElmtTableGroup": {
    "name": "cccaComponentElmtTableGroup",
    "oid": "1.3.6.1.4.1.9.9.473.2.2.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentElmtName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentElmtRunID"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaComponentElmtStatus"
      }
    ],
    "status": "current",
    "description": "The component element table group defines the enterprise contact center application functional component element table objects."
  },
  "cccaRouterTableGroup": {
    "name": "cccaRouterTableGroup",
    "oid": "1.3.6.1.4.1.9.9.473.2.2.5",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaRouterSide"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaRouterCallsPerSec"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaRouterAgentsLoggedOn"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaRouterCallsInProgress"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaRouterDuplexPairName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaRouterNicCount"
      }
    ],
    "status": "current",
    "description": "The router table group defines the enterprise contact center application router table objects."
  },
  "cccaNicTableGroup": {
    "name": "cccaNicTableGroup",
    "oid": "1.3.6.1.4.1.9.9.473.2.2.6",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaNicType"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaNicStatus"
      }
    ],
    "status": "current",
    "description": "The NIC table group defines the enterprise contact center application network interface controller table objects."
  },
  "cccaLoggerTableGroup": {
    "name": "cccaLoggerTableGroup",
    "oid": "1.3.6.1.4.1.9.9.473.2.2.7",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaLoggerSide"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaLoggerType"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaLoggerRouterSideAName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaLoggerRouterSideBName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaLoggerDuplexPairName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaLoggerHDSReplication"
      }
    ],
    "status": "current",
    "description": "The logger table group defines the enterprise contact center application logger table objects."
  },
  "cccaDistAwTableGroup": {
    "name": "cccaDistAwTableGroup",
    "oid": "1.3.6.1.4.1.9.9.473.2.2.8",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaDistAwSide"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaDistAwType"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaDistAwAdminSiteName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaDistAwRouterSideAName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaDistAwRouterSideBName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaDistAwLoggerSideAName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaDistAwLoggerSideBName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaDistAwDuplexPairName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaDistAwHDSEnabled"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaDistAwWebViewEnabled"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaDistAwWebViewServerName"
      }
    ],
    "status": "current",
    "description": "The distributor AW group defines the enterprise contact center application distributor administrator workstation table objects."
  },
  "cccaPgTableGroup": {
    "name": "cccaPgTableGroup",
    "oid": "1.3.6.1.4.1.9.9.473.2.2.9",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaPgNumber"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaPgSide"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaPgRouterSideAName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaPgRouterSideBName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaPgDuplexPairName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaPgPimCount"
      }
    ],
    "status": "current",
    "description": "The PG table group defines the enterprise contact center application peripheral gateway table objects."
  },
  "cccaPimTableGroup": {
    "name": "cccaPimTableGroup",
    "oid": "1.3.6.1.4.1.9.9.473.2.2.10",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaPimPeripheralName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaPimPeripheralType"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaPimStatus"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaPimPeripheralHostName"
      }
    ],
    "status": "current",
    "description": "The PIM table group defines the enterprise contact center application peripheral interface manager table objects."
  },
  "cccaCgTableGroup": {
    "name": "cccaCgTableGroup",
    "oid": "1.3.6.1.4.1.9.9.473.2.2.11",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaCgNumber"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaCgSide"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaCgPgSideAName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaCgPgSideBName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaCgDuplexPairName"
      }
    ],
    "status": "current",
    "description": "The CG table group defines the enterprise contact center application CTI gateway table objects."
  },
  "cccaCtiOsTableGroup": {
    "name": "cccaCtiOsTableGroup",
    "oid": "1.3.6.1.4.1.9.9.473.2.2.12",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaCtiOsServerName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaCtiOsPeripheralName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaCtiOsPeripheralType"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaCtiOsCgSideAName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaCtiOsCgSideBName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaCtiOsPeerName"
      }
    ],
    "status": "current",
    "description": "The CTIOS table group defines the enterprise contact center application CTI object server table objects."
  },
  "cccaIcmNotificationInfoGroup": {
    "name": "cccaIcmNotificationInfoGroup",
    "oid": "1.3.6.1.4.1.9.9.473.2.2.13",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventComponentId"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventState"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventMessageId"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventOriginatingNode"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventOriginatingNodeType"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventOriginatingProcessName"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventOriginatingSide"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventDmpId"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventSeverity"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventTimestamp"
      },
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaEventText"
      }
    ],
    "status": "current",
    "description": "The ICM notification info group defines the enterprise contact center application 'Cisco Intelligent Contact Management (ICM)' and Cisco IP Contact Center (IPCC) notification objects."
  },
  "cccaIcmEventsGroup": {
    "name": "cccaIcmEventsGroup",
    "oid": "1.3.6.1.4.1.9.9.473.2.2.14",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "CISCO-CONTACT-CENTER-APPS-MIB",
        "object": "cccaIcmEvent"
      }
    ],
    "status": "current",
    "description": "The ICM events group defines the notification types identified in this MIB."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/CISCO-CONTACT-CENTER-APPS-MIB-1.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:32:03 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "CISCO-CONTACT-CENTER-APPS-MIB"
  }
}