{
  "imports": {
    "class": "imports",
    "HC-PerfHist-TC-MIB": [
      "HCPerfTimeElapsed",
      "HCPerfValidIntervals",
      "HCPerfIntervalCount",
      "HCPerfCurrentCount"
    ],
    "IF-MIB": [
      "InterfaceIndexOrZero",
      "InterfaceIndex"
    ],
    "PW-STD-MIB": [
      "pwIndex"
    ],
    "PW-TC-STD-MIB": [
      "PwCfgIndexOrzero"
    ],
    "PerfHist-TC-MIB": [
      "PerfIntervalCount",
      "PerfCurrentCount"
    ],
    "SNMP-FRAMEWORK-MIB": [
      "SnmpAdminString"
    ],
    "SNMPv2-CONF": [
      "OBJECT-GROUP",
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "Bits",
      "Counter64",
      "mib-2",
      "iso",
      "Gauge32",
      "Unsigned32",
      "Integer32",
      "TimeTicks",
      "IpAddress",
      "Counter32",
      "OBJECT-TYPE",
      "NOTIFICATION-TYPE",
      "OBJECT-IDENTITY",
      "MibIdentifier",
      "MODULE-IDENTITY"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TimeStamp",
      "RowStatus",
      "TruthValue",
      "TEXTUAL-CONVENTION",
      "StorageType"
    ]
  },
  "pwCepStdMIB": {
    "name": "pwCepStdMIB",
    "oid": "1.3.6.1.2.1.200",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2011-05-16 00:00",
        "description": "This MIB module published as part of RFC 6240."
      }
    ],
    "lastupdated": "201105160000Z",
    "organization": "Pseudowire Emulation Edge-to-Edge (PWE3) Working Group",
    "contactinfo": "David Zelig (Ed.) Email: david_zelig@pmc-sierra.com Ron Cohen (Ed.) Email: ronc@resolutenetworks.com Thomas D. Nadeau (Ed.) Email: Thomas.Nadeau@ca.com The PWE3 Working Group Email: pwe3@ietf.org (email distribution) http://www.ietf.org/html.charters/pwe3-charter.html",
    "description": "This MIB module contains managed object definitions for Circuit Emulation over Packet (CEP) as in [RFC4842]: Malis, A., Prayson, P., Cohen, R., and D. Zelig. 'Synchronous Optical Network/Synchronous Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet (CEP)', RFC 4842. Copyright (c) 2011 IETF Trust and the persons identified as authors of the code. All rights reserved. Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info)."
  },
  "PwCepSonetEbm": {
    "name": "PwCepSonetEbm",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type"
    },
    "status": "current",
    "description": "Equipped Bit Mask (EBM) used for fractional STS-1/Virtual Circuit 3 (VC-3). The EBM bits are the 28 least significant bits out of the 32-bit value."
  },
  "PwCepSdhVc4Ebm": {
    "name": "PwCepSdhVc4Ebm",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type"
    },
    "status": "current",
    "description": "Equipped Bit Mask (EBM) used for each Tributary Unit Group 3 (TUG-3) in fractional VC-4 circuits. The EBM bits are the 30 least significant bits out of the 32-bit value."
  },
  "PwCepSonetVtgMap": {
    "name": "PwCepSonetVtgMap",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type"
    },
    "status": "current",
    "description": "The VT/VC types carried in the 7 VT groups (VTGs)/TUG-2s. The format is 28 bits in the form of an Equipped Bit Mask (EBM) for fractional STS-1/VC-3. The mapping specifies the maximal occupancies of VT/VC within each VTG/TUG-2. For example, all four bits are set to 1 in this object to represent a VTG carrying VT1.5/VC11s, while only three are set when VT2/VC12s are carried within this VTG. The relevant bits are the 28 least significant bits out of the 32-bit value."
  },
  "PwCepFracAsyncMap": {
    "name": "PwCepFracAsyncMap",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "ds3": 2,
          "e3": 3
        }
      }
    },
    "status": "current",
    "description": "The type of asynchronous mapping carried inside STS-1, VC-3, or TUG-3 containing TU-3 circuit."
  },
  "pwCepObjects": {
    "name": "pwCepObjects",
    "oid": "1.3.6.1.2.1.200.1",
    "class": "objectidentity"
  },
  "pwCepConformance": {
    "name": "pwCepConformance",
    "oid": "1.3.6.1.2.1.200.2",
    "class": "objectidentity"
  },
  "pwCepTable": {
    "name": "pwCepTable",
    "oid": "1.3.6.1.2.1.200.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains objects and parameters for managing and monitoring the CEP PW."
  },
  "pwCepEntry": {
    "name": "pwCepEntry",
    "oid": "1.3.6.1.2.1.200.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PW-STD-MIB",
        "object": "pwIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Each entry represents the association of a SONET/SDH path or VT to a PW. This table is indexed by the pwIndex of the applicable PW entry in the pwTable. An entry is created in this table by the agent for every entry in the pwTable with a pwType equal to 'cep'. All read-write objects in this table MAY be changed at any time; however, change of some objects (for example pwCepCfgIndex) during PW forwarding state may cause traffic disruption. Manual entries in this table SHOULD be preserved after a reboot. The agent MUST ensure the integrity of those entries. If the set of entries of a specific row are found to be inconsistent after reboot, the PW pwOperStatus MUST be declared as notPresent(5)."
  },
  "pwCepType": {
    "name": "pwCepType",
    "oid": "1.3.6.1.2.1.200.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "spe": 1,
          "vt": 2,
          "fracSpe": 3
        }
      }
    },
    "default": {
      "default": {
        "value": "spe",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Specifies the sub-type of CEP PW. Currently only structured types are supported: 'spe'(1) : SONET STS-Nc signals. 'vt' (2) : SONET VT-x (x=1.5,2,3,6) signals. 'fracSpe' (3) : SONET fractional STS-1 or SDH fractional VC-3 or VC-4 carrying tributaries or asynchronous signals. Support of 'vt' mode or 'fracSpe' mode is optional."
  },
  "pwCepSonetIfIndex": {
    "name": "pwCepSonetIfIndex",
    "oid": "1.3.6.1.2.1.200.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This is a unique index within the ifTable. It represents the interface index for the SONET path for SPE emulation ([RFC3592], Section 3.3), an interface index for the SONET VT ([RFC3592], Section 3.4) if the VT to be emulated is extracted from a SONET signal or locally mapped from a physical interface. A value of zero indicates an interface index that has yet to be determined. Once set, if the SONET ifIndex is (for some reason) later removed, the agent MAY delete the associated PW rows (e.g., this pwCepTableEntry). If the agent does not delete the rows, it is RECOMMENDED that the agent set this object to zero."
  },
  "pwCepSonetConfigErrorOrStatus": {
    "name": "pwCepSonetConfigErrorOrStatus",
    "oid": "1.3.6.1.2.1.200.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "other": 0,
        "timeslotInUse": 1,
        "timeslotMisuse": 2,
        "peerDbaIncompatible": 3,
        "peerEbmIncompatible": 4,
        "peerRtpIncompatible": 5,
        "peerAsyncIncompatible": 6,
        "peerDbaAsymmetric": 7,
        "peerEbmAsymmetric": 8,
        "peerRtpAsymmetric": 9,
        "peerAsyncAsymmetric": 10
      }
    },
    "maxaccess": "read-only",
    "reference": "Malis, A., et al., 'Synchronous Optical Network/Synchronous Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet (CEP)', RFC 4842, Section 12.",
    "status": "current",
    "description": "This object reports a configuration mismatch inside the local node or between the local node and the peer node. Some bits indicate an error, and some are simply status reports that do not affect the forwarding process. 'timeslotInUse'(1) is set when another CEP PW has already reserved a timeslot (or timeslots) that this CEP PW is attempting to reserve. 'timeslotMisuse'(2) is set when the stated timeslot this PW is trying to use is not legal, for example, if specifying a starting timeslot of 45 for a SONET path of an STS-12c width. The peerZZZIncompatible bits are set if the local configuration is not compatible with the peer configuration as available from the CEP option received from the peer through the signaling process and the local node cannot support such asymmetric configuration. The peerZZZAsymmetric bits are set if the local configuration is not compatible with the peer configuration as available from the CEP option received from the peer through the signaling process, but the local node can support such asymmetric configuration."
  },
  "pwCepCfgIndex": {
    "name": "pwCepCfgIndex",
    "oid": "1.3.6.1.2.1.200.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCfgIndexOrzero",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Index to CEP configuration table below. Multiple CEP PWs MAY share a single pwCepCfgEntry. The value 0 indicates that no entries are available."
  },
  "pwCepTimeElapsed": {
    "name": "pwCepTimeElapsed",
    "oid": "1.3.6.1.2.1.200.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HCPerfTimeElapsed",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of seconds, including partial seconds, that have elapsed since the beginning of the current measurement period. If, for some reason such as an adjustment in the system's time-of-day clock, the current interval exceeds the maximum value, the agent will return the maximum value."
  },
  "pwCepValidIntervals": {
    "name": "pwCepValidIntervals",
    "oid": "1.3.6.1.2.1.200.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HCPerfValidIntervals",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number (n) of previous 15-minute intervals for which data was collected. An agent with CEP capability MUST be capable of supporting at least 4 intervals. The RECOMMENDED default value for n is 32, and n MUST NOT exceed 96."
  },
  "pwCepIndications": {
    "name": "pwCepIndications",
    "oid": "1.3.6.1.2.1.200.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "missingPkt": 0,
        "ooRngDropped": 1,
        "jtrBfrUnder": 2,
        "pktMalformed": 3,
        "lops": 4,
        "cepRdi": 5,
        "cepAis": 6,
        "badHdrStack": 7,
        "cepNeFailure": 8,
        "cepFeFailure": 9
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Definitions: 'missingPkt'(0) - While playing out a sequence of packets, at least one packet was determined to be missing based on a gap in the CEP sequence number. Note: If the implementation supports packet reordering, detecting gaps SHOULD take place as they are played out, not as they arrive. This provides time for misordered packets to arrive late. 'ooRngDropped'(1) - At least one packet arrived outside the range of the jitter buffer. This may be because the jitter buffer is full or the sequence number addresses a buffer outside the current jitter buffer range or an already occupied buffer within range. Whether or not packet reordering is supported by the implementation, this indication MUST be supported. 'jtrBfrUnder'(2) - The jitter buffer underflowed because not enough packets arrived as packets were being played out. 'pktMalformed'(3) - Any error related to unexpected packet format (except bad header stack) or unexpected length. 'lops'(4) - Loss of Packet Synchronization. 'cepRdi'(5) - Circuit Emulation over Packet Remote Defect Indication. Remote Defect Indication (RDI) is generated by the remote CEP de-packetizer when LOPS is detected. 'cepAis'(6) - Remote CEP packetizer has detected an Alarm Indication Signal (AIS) on its incoming SONET stream. cepAis MUST NOT (in itself) cause a CEP PW down notification. 'badHdrStack'(7) - Set when the number of CEP header extensions detected in incoming packets does not match the expected number. 'cepNeFailure'(8) - Set when CEP-NE failure is currently declared. 'cepFeFailure'(8) - Set when CEP-FE failure is currently declared. This object MUST hold the accumulated indications until the next SNMP write that clear the indication(s). Writing a non-zero value MUST fail. Currently, there is no hierarchy of CEP defects. The algorithm used to capture these indications is implementation specific."
  },
  "pwCepLastEsTimeStamp": {
    "name": "pwCepLastEsTimeStamp",
    "oid": "1.3.6.1.2.1.200.1.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The value of sysUpTime on the most recent occasion at which the CEP PW entered the Errored Seconds (ES) or Severely Errored Seconds (SES) state."
  },
  "pwCepPeerCepOption": {
    "name": "pwCepPeerCepOption",
    "oid": "1.3.6.1.2.1.200.1.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The value of the CEP option parameter as received from the peer by the PW signaling protocol."
  },
  "pwCepCfgIndexNext": {
    "name": "pwCepCfgIndexNext",
    "oid": "1.3.6.1.2.1.200.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "PwCfgIndexOrzero",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object contains an appropriate value to be used for pwCepCfgIndex when creating entries in the pwCepCfgTable. The value 0 indicates that no unassigned entries are available. To obtain the value of pwCepCfgIndex for a new entry in the pwCepCfgTable, the manager issues a management protocol retrieval operation to obtain the current value of pwCepCfgIndex. After each retrieval operation, the agent should modify the value to reflect the next unassigned index. After a manager retrieves a value, the agent will determine through its local policy when this index value will be made available for reuse."
  },
  "pwCepCfgTable": {
    "name": "pwCepCfgTable",
    "oid": "1.3.6.1.2.1.200.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains a set of parameters that may be referenced by one or more CEP PWs by pwCepTable."
  },
  "pwCepCfgEntry": {
    "name": "pwCepCfgEntry",
    "oid": "1.3.6.1.2.1.200.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgTableIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "These parameters define the characteristics of a CEP PW. They are grouped here to ease Network Management System (NMS) burden. Once an entry is created here, it may be reused by many PWs. By default, all the read-create objects MUST NOT be changed after row activation unless specifically indicated in the individual object description. If the operator wishes to change value of a read-create object, the pwCepCfgRowStatus MUST be set to notInService(2). The agent MUST NOT allow the change of the pwCepCfgRowStatus from the active(1) state for pwCepCfgEntry, which is in use by at least one active PW. Manual entries in this table SHOULD be preserved after a reboot, the agent MUST ensure the integrity of those entries. If the set of entries of a specific row are found to be inconsistent after reboot, the affected PWs' pwOperStatus MUST be declared as notPresent(5)."
  },
  "pwCepCfgTableIndex": {
    "name": "pwCepCfgTableIndex",
    "oid": "1.3.6.1.2.1.200.1.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Primary index to this table."
  },
  "pwCepSonetPayloadLength": {
    "name": "pwCepSonetPayloadLength",
    "oid": "1.3.6.1.2.1.200.1.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "reference": "Malis, A., et al., 'Synchronous Optical Network/Synchronous Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet (CEP)', RFC 4842, Sections 5.1 and 12.1",
    "status": "current",
    "description": "The number of SONET bytes of the Path or VT carried as payload within one packet. For example, for STS-1/VC-3 SPE circuits, a value of 783 bytes indicates that each packet carries the payload equivalent to one frame. For VT1.5/VC11 circuits, a payload length of 104 bytes indicates that each packet carries payload equivalent to one VT1.5 super-frame. The actual payload size may be different due to bandwidth reduction modes, e.g., Dynamic Bandwidth Allocation (DBA) mode or dynamically assigned fractional SPE. This length applies to inbound and outbound packets carrying user payload. Although there is no control over inbound packets, those of illegal length are discarded and accounted for (see pwCepPerf...Malformed.) The default values are determined by the pwCepType: 783 for pwCepType equal to spe(2) or fracSpe(3). For vt(3) modes, the applicable super-frame payload size is the default value."
  },
  "pwCepCfgMinPktLength": {
    "name": "pwCepCfgMinPktLength",
    "oid": "1.3.6.1.2.1.200.1.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object defines the minimum CEP packet length in number of bytes (including CEP header and payload). It applies to CEP's bandwidth-savings packets. Currently, DBA is the only bandwidth-savings packet type (in the future, CEP may support compression). Minimum packet length is necessary in some systems or networks. Setting zero here indicates that there is no minimum packet restriction."
  },
  "pwCepCfgPktReorder": {
    "name": "pwCepCfgPktReorder",
    "oid": "1.3.6.1.2.1.200.1.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object defines if reordering is applied for incoming packets. If set 'true', as inbound packets are queued in the jitter buffer, out-of-order packets are reordered. The maximum sequence number differential (i.e., the range in which resequencing can occur) is dependant on the depth of the jitter buffer. If the local agent supports packet reordering, the default value SHOULD be set to 'true'; otherwise, this value SHOULD be set to 'false'."
  },
  "pwCepCfgEnableDBA": {
    "name": "pwCepCfgEnableDBA",
    "oid": "1.3.6.1.2.1.200.1.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "ais": 0,
        "unequipped": 1
      }
    },
    "maxaccess": "read-create",
    "reference": "Malis, A., et al., 'Synchronous Optical Network/Synchronous Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet (CEP)', RFC 4842, Section 11.1.",
    "status": "current",
    "description": "This object defines when DBA is applied for packets sent toward the PSN. Setting 'ais' MUST cause CEP packet payload suppression when AIS is detected on the associated SONET path. Similarly, 'unequipped' MUST cause payload suppression when an unequipped condition is detected on the SONET/SDH PATH/VT. During DBA condition, CEP packets will continue to be sent, but with indicators set in the CEP header instructing the remote to play all ones (for AIS) or all zeros (for unequipped) onto its SONET/SDH path. NOTE: Some implementations may not support this feature. In these cases, this object should be read-only."
  },
  "pwCepCfgRtpHdrSuppress": {
    "name": "pwCepCfgRtpHdrSuppress",
    "oid": "1.3.6.1.2.1.200.1.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "true",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "reference": "Malis, A., et al., 'Synchronous Optical Network/Synchronous Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet (CEP)', RFC 4842, Section 5.3.",
    "status": "current",
    "description": "If this object is set to 'true', an RTP header is not prepended to the CEP packet."
  },
  "pwCepCfgJtrBfrDepth": {
    "name": "pwCepCfgJtrBfrDepth",
    "oid": "1.3.6.1.2.1.200.1.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "micro-seconds",
    "maxaccess": "read-create",
    "reference": "The control of jitter and wander within digital networks which are based on the synchronous digital hierarchy (SDH), ITU-T Recommendation G.825.",
    "status": "current",
    "description": "This object defines the number of microseconds of expected packet delay variation for this CEP PW over the PSN. The actual jitter buffer MUST be at least twice this value for proper operation. If configured to a value not supported by the implementation, the agent MUST reject the SNMP Set operation."
  },
  "pwCepCfgConsecPktsInsync": {
    "name": "pwCepCfgConsecPktsInsync",
    "oid": "1.3.6.1.2.1.200.1.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 2,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "reference": "Malis, A., et al., 'Synchronous Optical Network/Synchronous Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet (CEP)', RFC 4842, Section 6.2.2.",
    "status": "current",
    "description": "Consecutive packets with sequential sequence numbers required to exit the LOPS state."
  },
  "pwCepCfgConsecMissingOutSync": {
    "name": "pwCepCfgConsecMissingOutSync",
    "oid": "1.3.6.1.2.1.200.1.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 10,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "reference": "Malis, A., et al., 'Synchronous Optical Network/Synchronous Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet (CEP)', RFC 4842, Section 6.2.2.",
    "status": "current",
    "description": "Consecutive missing packets required to enter the LOPS state."
  },
  "pwCepCfgPktErrorPlayOutValue": {
    "name": "pwCepCfgPktErrorPlayOutValue",
    "oid": "1.3.6.1.2.1.200.1.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 255,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object defines the value played when inbound packets have over/underflowed the jitter buffer or are missing for any reason. This byte pattern is sent (played) on the SONET path."
  },
  "pwCepCfgMissingPktsToSes": {
    "name": "pwCepCfgMissingPktsToSes",
    "oid": "1.3.6.1.2.1.200.1.3.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 3,
        "format": "decimal"
      }
    },
    "units": "seconds",
    "maxaccess": "read-create",
    "reference": "Malis, A., et al., 'Synchronous Optical Network/Synchronous Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet (CEP)', RFC 4842, Section 10.1.",
    "status": "current",
    "description": "The number of missing packets detected (consecutive or not) within a 1-second window to cause a Severely Errored Second (SES) to be counted."
  },
  "pwCepCfgSesToUas": {
    "name": "pwCepCfgSesToUas",
    "oid": "1.3.6.1.2.1.200.1.3.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 10,
        "format": "decimal"
      }
    },
    "units": "seconds",
    "maxaccess": "read-create",
    "reference": "Malis, A., et al., 'Synchronous Optical Network/Synchronous Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet (CEP)', RFC 4842, Section 10.1.",
    "status": "current",
    "description": "The number of consecutive SESs before declaring PW in Unavailable Seconds (UAS) state (at which point pwCepPerfUASs starts counting). The SesToUas default value is 10 seconds. NOTE: Similar to [RFC3592], if the agent chooses to update the various performance statistics in real time, it MUST be prepared to retroactively reduce the ES and SES counts by this value and increase the UAS count by this value when it determines that UAS state has been entered. NOTE: See pwCepPerfSESs and pwCepPerfUASs."
  },
  "pwCepCfgSecsToExitUas": {
    "name": "pwCepCfgSecsToExitUas",
    "oid": "1.3.6.1.2.1.200.1.3.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 10,
        "format": "decimal"
      }
    },
    "units": "seconds",
    "maxaccess": "read-create",
    "reference": "Malis, A., et al., 'Synchronous Optical Network/Synchronous Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet (CEP)', RFC 4842, Section 10.1.",
    "status": "current",
    "description": "The number of consecutive nonSESs before declaring PW is NOT in UAS state (at which point pwCepPerfUASs stops counting)."
  },
  "pwCepCfgName": {
    "name": "pwCepCfgName",
    "oid": "1.3.6.1.2.1.200.1.3.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This variable contains the name of the Configuration entry. This name may be used to help the NMS to display the purpose of the entry."
  },
  "pwCepCfgRowStatus": {
    "name": "pwCepCfgRowStatus",
    "oid": "1.3.6.1.2.1.200.1.3.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "For creating, modifying, and deleting this row. None of the read-create objects' values can be changed when pwCepCfgRowStatus is in the active(1) state. Changes are allowed when the pwRowStatus is in notInService(2) or notReady(3) states only. If the operator needs to change one of the values for an active row (for example, in order to fix a mismatch in configuration between the local node and the peer), the pwCepCfgRowStatus should be first changed to notInService(2). The objects may be changed now and later changed to active(1) in order to re-initiate the signaling process with the new values in effect. Change of status from the active(1) state or deleting a row SHOULD be blocked by the local agent if the row is referenced by any pwCepEntry those pwRowStatus is in the active(1) state."
  },
  "pwCepCfgStorageType": {
    "name": "pwCepCfgStorageType",
    "oid": "1.3.6.1.2.1.200.1.3.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "nonVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object indicates the storage type for this row."
  },
  "pwCepFracTable": {
    "name": "pwCepFracTable",
    "oid": "1.3.6.1.2.1.200.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains a set of parameters for CEP PWs with pwCepType FRAC type."
  },
  "pwCepFracEntry": {
    "name": "pwCepFracEntry",
    "oid": "1.3.6.1.2.1.200.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "There are two options for creating an entry in this table: - By the Element Management System (EMS) in advance for creating the PW. - By the agent automatically when the PW is set up. The first option is typically used when there is a native service processing (NSP) cross-connect option between the physical ports and the emulated (virtual ports), while the second MAY be used when there is a one-to-one mapping between the emulated signal and the physical signal."
  },
  "pwCepFracIndex": {
    "name": "pwCepFracIndex",
    "oid": "1.3.6.1.2.1.200.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndex",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This is the index of this table. It is a unique index within the ifTable. It represents the interface index for the SONET path ([RFC3592], Section 3.3) for fractional SPE emulation. It may represent an internal (virtual) interface if an NSP function exists between the physical interface and the emulation process."
  },
  "pwCepFracMode": {
    "name": "pwCepFracMode",
    "oid": "1.3.6.1.2.1.200.1.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notApplicable": 1,
          "dynamic": 2,
          "static": 3,
          "staticWithEbm": 4,
          "staticAsync": 5
        }
      }
    },
    "default": {
      "default": {
        "value": "dynamic",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Fractional mode for STS-1/VC-3 or VC-4 circuits: notApplicable - When this object is not applicable. dynamic - EBM carried within the CEP header. Unequipped VTs are removed from the payload on the fly. static - EBM not carried within the CEP header. Only VTs defined in the EBM are carried within the payload. staticWithEbm - EBM carried within the CEP header. Only VTs defined in the EBM are carried within the payload. staticAsync - Asynchronous E3/T3 fixed byte removal only."
  },
  "pwCepFracConfigError": {
    "name": "pwCepFracConfigError",
    "oid": "1.3.6.1.2.1.200.1.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "other": 0,
        "vtgMapEbmConflict": 1,
        "vtgMapAsyncConflict": 2
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "vtgMapEbmConflict(1) is set when the configured static EBM does not match the configured vtgMap for fractional STS-1/VC-3 circuits or when the TUG2Map is in conflict with the static EBM for VC-4 circuits, for example, if the vtgMap specifies that VTG#1 carries VT2 VTs while the EBM indicate that four VTs are equipped within VTG#1. vtgMapAsyncConflict(2) is set when there is a conflict between the mode, the async indication, and the vtgMap fields. For example, fractional mode is set to staticAsync while the VtgMap indicates that the STS-1/VC-3 carries VTs, or both async1 and Tug2Map are set in fractional VC-4 circuits."
  },
  "pwCepFracAsync": {
    "name": "pwCepFracAsync",
    "oid": "1.3.6.1.2.1.200.1.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepFracAsyncMap",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "other",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object defines the asynchronous payload carried within the STS-1/VC-3. This object is applicable when pwCepFracMode equals 'staticAsync' and MUST equal to 'other' otherwise."
  },
  "pwCepFracVtgMap": {
    "name": "pwCepFracVtgMap",
    "oid": "1.3.6.1.2.1.200.1.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepSonetVtgMap",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object defines the VT/VC types of the seven VTG/TUG-2 within the STS-1/VC-3. This variable should be set when 'dynamic', 'static', or 'staticWithEbm' fractional STS-1/VC-3 pwCepFracMode is selected."
  },
  "pwCepFracEbm": {
    "name": "pwCepFracEbm",
    "oid": "1.3.6.1.2.1.200.1.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepSonetEbm",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object holds the static Equipped Bit Mask (EBM) for STS-1/VC-3 channel. This variable MAY be set when 'static' or 'staticWithEbm' fractional STS-1/VC-3 pwCepFracMode is selected. It is possible that the configuration of other MIB modules will define the EBM value; in these cases, this object is read-only and reflects the actual EBM that would be used."
  },
  "pwCepFracPeerEbm": {
    "name": "pwCepFracPeerEbm",
    "oid": "1.3.6.1.2.1.200.1.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepSonetEbm",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object reports the Equipped Bit Mask (EBM) for STS-1/VC-3 channel as received from the peer within the CEP extension header."
  },
  "pwCepFracSdhVc4Mode": {
    "name": "pwCepFracSdhVc4Mode",
    "oid": "1.3.6.1.2.1.200.1.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notApplicable": 1,
          "dynamic": 2,
          "static": 3,
          "staticWithEbm": 4
        }
      }
    },
    "default": {
      "default": {
        "value": "notApplicable",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Fractional mode for VC-4 circuits: notApplicable - When this is not VC-4 circuit. dynamic - EBM carried within the CEP header. Unequipped VTs are removed from the payload on the fly. static - EBM not carried within the CEP header. Only VTs defined in the EBM are carried within the payload. staticWithEbm - EBM carried within the CEP header. Only VTs defined in the EBM are carried within the payload."
  },
  "pwCepFracSdhVc4Tu3Map1": {
    "name": "pwCepFracSdhVc4Tu3Map1",
    "oid": "1.3.6.1.2.1.200.1.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepFracAsyncMap",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "other",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The type of asynchronous mapping carried inside STS-1, VC-3, or TUG-3 containing TU-3 circuit."
  },
  "pwCepFracSdhVc4Tu3Map2": {
    "name": "pwCepFracSdhVc4Tu3Map2",
    "oid": "1.3.6.1.2.1.200.1.4.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepFracAsyncMap",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "other",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "If the second TUG-3 within the VC-4 contains a TU-3, this variable must be set."
  },
  "pwCepFracSdhVc4Tu3Map3": {
    "name": "pwCepFracSdhVc4Tu3Map3",
    "oid": "1.3.6.1.2.1.200.1.4.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepFracAsyncMap",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "other",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "If the third TUG-3 within the VC-4 contains a TU-3, this variable must be set."
  },
  "pwCepFracSdhVc4Tug2Map1": {
    "name": "pwCepFracSdhVc4Tug2Map1",
    "oid": "1.3.6.1.2.1.200.1.4.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepSonetVtgMap",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The VC types of the seven TUG-2s within the first TUG-3 of the VC-4."
  },
  "pwCepFracSdhVc4Tug2Map2": {
    "name": "pwCepFracSdhVc4Tug2Map2",
    "oid": "1.3.6.1.2.1.200.1.4.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepSonetVtgMap",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The VC types of the seven TUG-2s within the second TUG-3 of the VC-4."
  },
  "pwCepFracSdhVc4Tug2Map3": {
    "name": "pwCepFracSdhVc4Tug2Map3",
    "oid": "1.3.6.1.2.1.200.1.4.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepSonetVtgMap",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The VC types of the seven TUG-2s within the third TUG-3 of the VC-4."
  },
  "pwCepFracSdhVc4Ebm1": {
    "name": "pwCepFracSdhVc4Ebm1",
    "oid": "1.3.6.1.2.1.200.1.4.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepSdhVc4Ebm",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Static Equipped Bit Mask (EBM) for the first TUG-3 within the VC-4. This variable should be set when 'static' or 'staticWithEbm' fractional VC-4 pwCepFracMode is selected. It is possible that the EBM that would be used is available based on configuration of other MIB modules. In these cases, this object is read-only and reflects the actual EBM that would be used."
  },
  "pwCepFracSdhVc4Ebm2": {
    "name": "pwCepFracSdhVc4Ebm2",
    "oid": "1.3.6.1.2.1.200.1.4.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepSdhVc4Ebm",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Static Equipped Bit Mask (EBM) for the second TUG-3 within the VC-4. This variable should be set when 'static' or 'staticWithEbm' fractional VC-4 pwCepFracMode is selected. It is possible that the EBM that would be used is available based on configuration of other MIB modules. In these cases, this object is read-only and reflects the actual EBM that would be used."
  },
  "pwCepFracSdhVc4Ebm3": {
    "name": "pwCepFracSdhVc4Ebm3",
    "oid": "1.3.6.1.2.1.200.1.4.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepSdhVc4Ebm",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Static Equipped Bit Mask (EBM) for the third TUG-3 within the VC-4. This variable should be set when 'Static' or 'staticWithEbm' fractional VC-4 pwCepFracMode is selected. It is possible that the EBM that would be used is available based on configuration of other MIB modules. In these cases, this object is read-only and reflects the actual EBM that would be used."
  },
  "pwCepFracSdhVc4PeerEbm1": {
    "name": "pwCepFracSdhVc4PeerEbm1",
    "oid": "1.3.6.1.2.1.200.1.4.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepSdhVc4Ebm",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Equipped Bit Mask (EBM) for the first TUG-3 within the fractional VC-4 channel received from the peer within the CEP extension header."
  },
  "pwCepFracSdhVc4PeerEbm2": {
    "name": "pwCepFracSdhVc4PeerEbm2",
    "oid": "1.3.6.1.2.1.200.1.4.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepSdhVc4Ebm",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Equipped Bit Mask (EBM) for the second TUG-3 within the fractional VC-4 channel received from the peer within the CEP extension header."
  },
  "pwCepFracSdhVc4PeerEbm3": {
    "name": "pwCepFracSdhVc4PeerEbm3",
    "oid": "1.3.6.1.2.1.200.1.4.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwCepSdhVc4Ebm",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Equipped Bit Mask (EBM) for the third TUG-3 within the fractional VC-4 channel received from the peer within the CEP extension header."
  },
  "pwCepFracRowStatus": {
    "name": "pwCepFracRowStatus",
    "oid": "1.3.6.1.2.1.200.1.4.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "For creating, modifying, and deleting this row. This object MAY be changed at any time."
  },
  "pwCepFracStorageType": {
    "name": "pwCepFracStorageType",
    "oid": "1.3.6.1.2.1.200.1.4.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "nonVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This variable indicates the storage type for this object."
  },
  "pwCepPerfCurrentTable": {
    "name": "pwCepPerfCurrentTable",
    "oid": "1.3.6.1.2.1.200.1.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "CEP bridges the SONET and packet worlds. In the packet world, counts typically start from the time of service creation and do not stop. In the SONET world, counts are kept in 15-minute intervals. The PW CEP MIB supports both methods. The current 15-minute interval counts are in this table. The interval and total stats are in tables following this. This table provides per-CEP PW performance information. High capacity (HC) counters are required for some counts due to the high speeds expected with CEP services. A SONET path of width 48 (STS-48c) can rollover non-HC counters in a few minutes."
  },
  "pwCepPerfCurrentEntry": {
    "name": "pwCepPerfCurrentEntry",
    "oid": "1.3.6.1.2.1.200.1.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PW-STD-MIB",
        "object": "pwIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in this table is created by the agent for every pwCep entry. After 15 minutes, the contents of this table entry are copied to a new entry in the pwCepPerfInterval table, and the counts in this entry are reset to zero."
  },
  "pwCepPerfCurrentDbaInPacketsHC": {
    "name": "pwCepPerfCurrentDbaInPacketsHC",
    "oid": "1.3.6.1.2.1.200.1.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HCPerfCurrentCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of DBA packets received."
  },
  "pwCepPerfCurrentDbaOutPacketsHC": {
    "name": "pwCepPerfCurrentDbaOutPacketsHC",
    "oid": "1.3.6.1.2.1.200.1.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HCPerfCurrentCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of DBA packets sent."
  },
  "pwCepPerfCurrentInNegPtrAdjust": {
    "name": "pwCepPerfCurrentInNegPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of negative pointer adjustments sent on the SONET path based on CEP pointer adjustments received."
  },
  "pwCepPerfCurrentInPosPtrAdjust": {
    "name": "pwCepPerfCurrentInPosPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of positive pointer adjustments sent on the SONET path based on CEP pointer adjustments received."
  },
  "pwCepPerfCurrentInPtrAdjustSecs": {
    "name": "pwCepPerfCurrentInPtrAdjustSecs",
    "oid": "1.3.6.1.2.1.200.1.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of seconds in which a positive or negative pointer adjustment was sent on the SONET path."
  },
  "pwCepPerfCurrentOutNegPtrAdjust": {
    "name": "pwCepPerfCurrentOutNegPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of negative pointer adjustments seen on the SONET path and encoded onto sent CEP packets."
  },
  "pwCepPerfCurrentOutPosPtrAdjust": {
    "name": "pwCepPerfCurrentOutPosPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of positive pointer adjustments seen on the SONET path and encoded onto sent CEP packets."
  },
  "pwCepPerfCurrentOutPtrAdjustSecs": {
    "name": "pwCepPerfCurrentOutPtrAdjustSecs",
    "oid": "1.3.6.1.2.1.200.1.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of seconds in which a positive or negative pointer adjustment was seen on the SONET path."
  },
  "pwCepPerfCurrentAbsPtrAdjust": {
    "name": "pwCepPerfCurrentAbsPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.5.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Indicates the relative adjustment drift between inbound and outbound streams. It is calculated as absolute value of: (InPosPtrAdjust - InNegPtrAdjust ) - (OutPosPtrAdjust - OutNegPtrAdjust)"
  },
  "pwCepPerfCurrentMissingPkts": {
    "name": "pwCepPerfCurrentMissingPkts",
    "oid": "1.3.6.1.2.1.200.1.5.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of missing packets (as detected via CEP header sequence number gaps)."
  },
  "pwCepPerfCurrentPktsOoseq": {
    "name": "pwCepPerfCurrentPktsOoseq",
    "oid": "1.3.6.1.2.1.200.1.5.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of packets detected out of sequence (via CEP header sequence numbers) but successfully reordered. Note: Some implementations may not support this feature (see pwCepCfgPktReorder)."
  },
  "pwCepPerfCurrentPktsOoRngDropped": {
    "name": "pwCepPerfCurrentPktsOoRngDropped",
    "oid": "1.3.6.1.2.1.200.1.5.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of packets detected out of range (via CEP header sequence numbers) and could not be reordered or could not fit in the jitter buffer."
  },
  "pwCepPerfCurrentJtrBfrUnderruns": {
    "name": "pwCepPerfCurrentJtrBfrUnderruns",
    "oid": "1.3.6.1.2.1.200.1.5.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of times a packet needed to be played out and the jitter buffer was empty."
  },
  "pwCepPerfCurrentPktsMalformed": {
    "name": "pwCepPerfCurrentPktsMalformed",
    "oid": "1.3.6.1.2.1.200.1.5.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of packets detected with unexpected size or bad headers stack."
  },
  "pwCepPerfCurrentSummaryErrors": {
    "name": "pwCepPerfCurrentSummaryErrors",
    "oid": "1.3.6.1.2.1.200.1.5.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A summary of all the packet-error types above (from missing packets to bad length packets)."
  },
  "pwCepPerfCurrentESs": {
    "name": "pwCepPerfCurrentESs",
    "oid": "1.3.6.1.2.1.200.1.5.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The counter associated with the number of Errored Seconds encountered."
  },
  "pwCepPerfCurrentSESs": {
    "name": "pwCepPerfCurrentSESs",
    "oid": "1.3.6.1.2.1.200.1.5.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The counter associated with the number of Severely Errored Seconds encountered."
  },
  "pwCepPerfCurrentUASs": {
    "name": "pwCepPerfCurrentUASs",
    "oid": "1.3.6.1.2.1.200.1.5.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The counter associated with the number of Unavailable Seconds encountered."
  },
  "pwCepPerfCurrentFC": {
    "name": "pwCepPerfCurrentFC",
    "oid": "1.3.6.1.2.1.200.1.5.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfCurrentCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "CEP Failure Counts (FC-CEP). The number of CEP failure events. A failure event begins when the LOPS failure is declared and ends when the failure is cleared. A failure event that begins in one period and ends in another period is counted only in the period in which it begins."
  },
  "pwCepPerfIntervalTable": {
    "name": "pwCepPerfIntervalTable",
    "oid": "1.3.6.1.2.1.200.1.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table provides per-CEP PW performance information, much like the pwCepPerfCurrentTable above. However, these counts represent historical 15-minute intervals. Typically, this table will have a maximum of 96 entries for a 24-hour period but is not limited to this. NOTE: Counter64 objects are used here; Counter32 is too small for OC-768 CEP PWs."
  },
  "pwCepPerfIntervalEntry": {
    "name": "pwCepPerfIntervalEntry",
    "oid": "1.3.6.1.2.1.200.1.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PW-STD-MIB",
        "object": "pwIndex",
        "implied": 0
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalNumber",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in this table is created by the agent for every pwCepPerfCurrentEntry that is 15 minutes old. The contents of the Current entry are copied to the new entry here. The Current entry then resets its counts to zero for the next current 15-minute interval. pwCepIndex is found in the pwCepCfg table."
  },
  "pwCepPerfIntervalNumber": {
    "name": "pwCepPerfIntervalNumber",
    "oid": "1.3.6.1.2.1.200.1.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 96
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A number (between 1 and 96 to cover a 24-hour period) that identifies the interval for which the set of statistics is available. The interval identified by 1 is the most recently completed 15-minute interval, and the interval identified by N is the interval immediately preceding the one identified by N-1. The minimum range of N is 1 through 4. The default range is 1 through 32. The maximum range of N is 1 through 96."
  },
  "pwCepPerfIntervalValidData": {
    "name": "pwCepPerfIntervalValidData",
    "oid": "1.3.6.1.2.1.200.1.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This variable indicates if the data for this interval is valid."
  },
  "pwCepPerfIntervalReset": {
    "name": "pwCepPerfIntervalReset",
    "oid": "1.3.6.1.2.1.200.1.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "reset": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Used in cases where the user knows that the errors within this interval should not be counted. Writing 'reset' sets all error counts to zero. The value of 0 is not used here due to issues with implementations."
  },
  "pwCepPerfIntervalTimeElapsed": {
    "name": "pwCepPerfIntervalTimeElapsed",
    "oid": "1.3.6.1.2.1.200.1.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HCPerfTimeElapsed",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The duration of a particular interval in seconds. Adjustments in the system's time-of-day clock may cause the interval to be greater or less than the normal value. Therefore, this actual interval value is provided."
  },
  "pwCepPerfIntervalDbaInPacketsHC": {
    "name": "pwCepPerfIntervalDbaInPacketsHC",
    "oid": "1.3.6.1.2.1.200.1.6.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HCPerfIntervalCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of DBA packets received."
  },
  "pwCepPerfIntervalDbaOutPacketsHC": {
    "name": "pwCepPerfIntervalDbaOutPacketsHC",
    "oid": "1.3.6.1.2.1.200.1.6.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HCPerfIntervalCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of DBA packets sent."
  },
  "pwCepPerfIntervalInNegPtrAdjust": {
    "name": "pwCepPerfIntervalInNegPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.6.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of negative pointer adjustments sent on the SONET path based on CEP pointer adjustments received."
  },
  "pwCepPerfIntervalInPosPtrAdjust": {
    "name": "pwCepPerfIntervalInPosPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.6.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of positive pointer adjustments sent on the SONET path based on CEP pointer adjustments received."
  },
  "pwCepPerfIntervalInPtrAdjustSecs": {
    "name": "pwCepPerfIntervalInPtrAdjustSecs",
    "oid": "1.3.6.1.2.1.200.1.6.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of seconds in which a positive or negative pointer adjustment was sent on the SONET path."
  },
  "pwCepPerfIntervalOutNegPtrAdjust": {
    "name": "pwCepPerfIntervalOutNegPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.6.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of negative pointer adjustments seen on the SONET path and encoded onto sent CEP packets."
  },
  "pwCepPerfIntervalOutPosPtrAdjust": {
    "name": "pwCepPerfIntervalOutPosPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.6.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of positive pointer adjustments seen on the SONET path and encoded onto sent CEP packets."
  },
  "pwCepPerfIntervalOutPtrAdjustSecs": {
    "name": "pwCepPerfIntervalOutPtrAdjustSecs",
    "oid": "1.3.6.1.2.1.200.1.6.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of seconds in which a positive or negative pointer adjustment was seen on the SONET path."
  },
  "pwCepPerfIntervalAbsPtrAdjust": {
    "name": "pwCepPerfIntervalAbsPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.6.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The relative adjustment drift between inbound and outbound streams. It is calculated as absolute value of: (InPosPtrAdjust - InNegPtrAdjust) - (OutPosPtrAdjust - OutNegPtrAdjust)"
  },
  "pwCepPerfIntervalMissingPkts": {
    "name": "pwCepPerfIntervalMissingPkts",
    "oid": "1.3.6.1.2.1.200.1.6.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of missing packets (as detected via CEP header sequence number gaps)."
  },
  "pwCepPerfIntervalPktsOoseq": {
    "name": "pwCepPerfIntervalPktsOoseq",
    "oid": "1.3.6.1.2.1.200.1.6.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of packets detected out of sequence (via CEP header sequence numbers) but successfully reordered. Note: Some implementations mat not support this feature (see pwCepCfgPktReorder)."
  },
  "pwCepPerfIntervalPktsOoRngDropped": {
    "name": "pwCepPerfIntervalPktsOoRngDropped",
    "oid": "1.3.6.1.2.1.200.1.6.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of packets detected out of range (via CEP header sequence numbers) and could not be reordered or could not fit in the jitter buffer."
  },
  "pwCepPerfIntervalJtrBfrUnderruns": {
    "name": "pwCepPerfIntervalJtrBfrUnderruns",
    "oid": "1.3.6.1.2.1.200.1.6.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of times a packet needed to be played out and the jitter buffer was empty."
  },
  "pwCepPerfIntervalPktsMalformed": {
    "name": "pwCepPerfIntervalPktsMalformed",
    "oid": "1.3.6.1.2.1.200.1.6.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of packets detected with unexpected size or bad headers stack."
  },
  "pwCepPerfIntervalSummaryErrors": {
    "name": "pwCepPerfIntervalSummaryErrors",
    "oid": "1.3.6.1.2.1.200.1.6.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A summary of all the packet-error types above (from missing packets to bad length packets)."
  },
  "pwCepPerfIntervalESs": {
    "name": "pwCepPerfIntervalESs",
    "oid": "1.3.6.1.2.1.200.1.6.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The counter associated with the number of Errored Seconds encountered."
  },
  "pwCepPerfIntervalSESs": {
    "name": "pwCepPerfIntervalSESs",
    "oid": "1.3.6.1.2.1.200.1.6.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The counter associated with the number of Severely Errored Seconds encountered."
  },
  "pwCepPerfIntervalUASs": {
    "name": "pwCepPerfIntervalUASs",
    "oid": "1.3.6.1.2.1.200.1.6.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The counter associated with the number of Unavailable Seconds encountered."
  },
  "pwCepPerfIntervalFC": {
    "name": "pwCepPerfIntervalFC",
    "oid": "1.3.6.1.2.1.200.1.6.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PerfIntervalCount",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "CEP Failure Counts (FC-CEP). The number of CEP failure events. A failure event begins when the LOPS failure is declared and ends when the failure is cleared. A failure event that begins in one period and ends in another period is counted only in the period in which it begins."
  },
  "pwCepPerf1DayIntervalTable": {
    "name": "pwCepPerf1DayIntervalTable",
    "oid": "1.3.6.1.2.1.200.1.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table provides per CEP PW performance information, the current day's measurement, and the previous day's interval. In the extreme case where one of the error counters has overflowed during the one-day interval, the error counter MUST NOT wrap around and MUST return the maximum value."
  },
  "pwCepPerf1DayIntervalEntry": {
    "name": "pwCepPerf1DayIntervalEntry",
    "oid": "1.3.6.1.2.1.200.1.7.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PW-STD-MIB",
        "object": "pwIndex",
        "implied": 0
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalNumber",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry is created in this table by the agent for every entry in the pwCepTable and for each day interval up to the number of supported historical intervals."
  },
  "pwCepPerf1DayIntervalNumber": {
    "name": "pwCepPerf1DayIntervalNumber",
    "oid": "1.3.6.1.2.1.200.1.7.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "History Data Interval number. Interval 1 is the current day measurement period; interval 2 is the most recent previous day; and interval 30 is 31 days ago."
  },
  "pwCepPerf1DayIntervalValidData": {
    "name": "pwCepPerf1DayIntervalValidData",
    "oid": "1.3.6.1.2.1.200.1.7.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This variable indicates if the data for this interval is valid."
  },
  "pwCepPerf1DayIntervalMoniSecs": {
    "name": "pwCepPerf1DayIntervalMoniSecs",
    "oid": "1.3.6.1.2.1.200.1.7.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "HCPerfTimeElapsed",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The amount of time in the 1-day interval over which the performance monitoring information is actually counted. This value will be the same as the interval duration except in situations where performance monitoring data could not be collected for any reason or the agent clock was adjusted."
  },
  "pwCepPerf1DayIntervalDbaInPacketsHC": {
    "name": "pwCepPerf1DayIntervalDbaInPacketsHC",
    "oid": "1.3.6.1.2.1.200.1.7.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter64",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of DBA packets received."
  },
  "pwCepPerf1DayIntervalDbaOutPacketsHC": {
    "name": "pwCepPerf1DayIntervalDbaOutPacketsHC",
    "oid": "1.3.6.1.2.1.200.1.7.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter64",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of DBA packets sent."
  },
  "pwCepPerf1DayIntervalInNegPtrAdjust": {
    "name": "pwCepPerf1DayIntervalInNegPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.7.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of negative pointer adjustments sent on the SONET path based on CEP pointer adjustments received."
  },
  "pwCepPerf1DayIntervalInPosPtrAdjust": {
    "name": "pwCepPerf1DayIntervalInPosPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.7.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of positive pointer adjustments sent on the SONET path based on CEP pointer adjustments received."
  },
  "pwCepPerf1DayIntervalInPtrAdjustSecs": {
    "name": "pwCepPerf1DayIntervalInPtrAdjustSecs",
    "oid": "1.3.6.1.2.1.200.1.7.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of seconds in which a positive or negative pointer adjustment was sent on the SONET path."
  },
  "pwCepPerf1DayIntervalOutNegPtrAdjust": {
    "name": "pwCepPerf1DayIntervalOutNegPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.7.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of negative pointer adjustments seen on the SONET path and encoded onto sent CEP packets."
  },
  "pwCepPerf1DayIntervalOutPosPtrAdjust": {
    "name": "pwCepPerf1DayIntervalOutPosPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.7.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of positive pointer adjustments seen on the SONET path and encoded onto sent CEP packets."
  },
  "pwCepPerf1DayIntervalOutPtrAdjustSecs": {
    "name": "pwCepPerf1DayIntervalOutPtrAdjustSecs",
    "oid": "1.3.6.1.2.1.200.1.7.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of seconds in which a positive or negative pointer adjustment was seen on the SONET path."
  },
  "pwCepPerf1DayIntervalAbsPtrAdjust": {
    "name": "pwCepPerf1DayIntervalAbsPtrAdjust",
    "oid": "1.3.6.1.2.1.200.1.7.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The relative adjustment of drift between inbound and outbound streams. It is calculated as absolute value of: (InPosPtrAdjust - InNegPtrAdjust) - (OutPosPtrAdjust - OutNegPtrAdjust)"
  },
  "pwCepPerf1DayIntervalMissingPkts": {
    "name": "pwCepPerf1DayIntervalMissingPkts",
    "oid": "1.3.6.1.2.1.200.1.7.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of missing packets (as detected via CEP header sequence number gaps)."
  },
  "pwCepPerf1DayIntervalPktsOoseq": {
    "name": "pwCepPerf1DayIntervalPktsOoseq",
    "oid": "1.3.6.1.2.1.200.1.7.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of packets detected out of sequence (via CEP header sequence numbers) but successfully reordered. Note: Some implementations may not support this feature (see pwCepCfgPktReorder)."
  },
  "pwCepPerf1DayIntervalPktsOoRngDropped": {
    "name": "pwCepPerf1DayIntervalPktsOoRngDropped",
    "oid": "1.3.6.1.2.1.200.1.7.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of packets detected out of range (via CEP header sequence numbers) and could not be reordered or could not fit in the jitter buffer."
  },
  "pwCepPerf1DayIntervalJtrBfrUnderruns": {
    "name": "pwCepPerf1DayIntervalJtrBfrUnderruns",
    "oid": "1.3.6.1.2.1.200.1.7.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of times a packet needed to be played out, and the jitter buffer was empty."
  },
  "pwCepPerf1DayIntervalPktsMalformed": {
    "name": "pwCepPerf1DayIntervalPktsMalformed",
    "oid": "1.3.6.1.2.1.200.1.7.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of packets detected with unexpected size or bad headers stack."
  },
  "pwCepPerf1DayIntervalSummaryErrors": {
    "name": "pwCepPerf1DayIntervalSummaryErrors",
    "oid": "1.3.6.1.2.1.200.1.7.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A summary of all the packet-error types above (from missing packets to bad length packets)."
  },
  "pwCepPerf1DayIntervalESs": {
    "name": "pwCepPerf1DayIntervalESs",
    "oid": "1.3.6.1.2.1.200.1.7.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The counter associated with the number of Errored Seconds encountered."
  },
  "pwCepPerf1DayIntervalSESs": {
    "name": "pwCepPerf1DayIntervalSESs",
    "oid": "1.3.6.1.2.1.200.1.7.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The counter associated with the number of Severely Errored Seconds. See pwCepCfgMissingPktsToSes."
  },
  "pwCepPerf1DayIntervalUASs": {
    "name": "pwCepPerf1DayIntervalUASs",
    "oid": "1.3.6.1.2.1.200.1.7.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The counter associated with the number of unavailable seconds. See pwCepCfgSesToUAS. NOTE: When first entering the UAS state, the number of SesToUas is added to this object; then, as each additional UAS occurs, this object increments by one. NOTE: Similar to [RFC3592], if the agent chooses to update the various performance statistics in real time, it must be prepared to retroactively reduce the ES and SES counts (by the value of pwCepCfgSesToUas) and increase the UAS count (by that same value) when it determines that UAS state has been entered."
  },
  "pwCepPerf1DayIntervalFC": {
    "name": "pwCepPerf1DayIntervalFC",
    "oid": "1.3.6.1.2.1.200.1.7.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "CEP Failure Counts (FC-CEP). The number of CEP failure events. A failure event begins when the LOPS failure is declared and ends when the failure is cleared."
  },
  "pwCepGroups": {
    "name": "pwCepGroups",
    "oid": "1.3.6.1.2.1.200.2.1",
    "class": "objectidentity"
  },
  "pwCepCompliances": {
    "name": "pwCepCompliances",
    "oid": "1.3.6.1.2.1.200.2.2",
    "class": "objectidentity"
  },
  "pwCepModuleFullCompliance": {
    "name": "pwCepModuleFullCompliance",
    "oid": "1.3.6.1.2.1.200.2.2.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "pwCepGroup",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepCfgGroup",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepPerfCurrentGroup",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepPerfIntervalGroup",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepPerf1DayIntervalGroup",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepFractionalGroup",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepFractionalSts1Vc3Group",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepFractionalVc4Group",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepSignalingGroup",
        "module": "PW-CEP-STD-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for agents that support full CEP PW configuration through this MIB module."
  },
  "pwCepModuleReadOnlyCompliance": {
    "name": "pwCepModuleReadOnlyCompliance",
    "oid": "1.3.6.1.2.1.200.2.2.2",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "pwCepGroup",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepCfgGroup",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepPerfCurrentGroup",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepPerfIntervalGroup",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepPerf1DayIntervalGroup",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepFractionalGroup",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepFractionalSts1Vc3Group",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepFractionalVc4Group",
        "module": "PW-CEP-STD-MIB"
      },
      {
        "object": "pwCepSignalingGroup",
        "module": "PW-CEP-STD-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for agents that provide read-only support for the PW CEP MIB Module. Such devices can be monitored but cannot be configured using this MIB module."
  },
  "pwCepGroup": {
    "name": "pwCepGroup",
    "oid": "1.3.6.1.2.1.200.2.1.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepType"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepSonetIfIndex"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepSonetConfigErrorOrStatus"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgIndex"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepTimeElapsed"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepValidIntervals"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepIndications"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepLastEsTimeStamp"
      }
    ],
    "status": "current",
    "description": "Collection of objects for basic CEP PW config and status."
  },
  "pwCepSignalingGroup": {
    "name": "pwCepSignalingGroup",
    "oid": "1.3.6.1.2.1.200.2.1.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPeerCepOption"
      }
    ],
    "status": "current",
    "description": "Collection of objects required if the network element support CEP connections signaling."
  },
  "pwCepCfgGroup": {
    "name": "pwCepCfgGroup",
    "oid": "1.3.6.1.2.1.200.2.1.3",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgIndexNext"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepSonetPayloadLength"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgMinPktLength"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgPktReorder"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgEnableDBA"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgRtpHdrSuppress"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgJtrBfrDepth"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgConsecPktsInsync"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgConsecMissingOutSync"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgPktErrorPlayOutValue"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgMissingPktsToSes"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgSesToUas"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgSecsToExitUas"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgName"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgRowStatus"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepCfgStorageType"
      }
    ],
    "status": "current",
    "description": "Collection of detailed objects needed to configure CEP PWs."
  },
  "pwCepPerfCurrentGroup": {
    "name": "pwCepPerfCurrentGroup",
    "oid": "1.3.6.1.2.1.200.2.1.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentDbaInPacketsHC"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentDbaOutPacketsHC"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentInNegPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentInPosPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentInPtrAdjustSecs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentOutNegPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentOutPosPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentOutPtrAdjustSecs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentAbsPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentMissingPkts"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentPktsOoseq"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentPktsOoRngDropped"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentJtrBfrUnderruns"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentPktsMalformed"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentSummaryErrors"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentESs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentSESs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentUASs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfCurrentFC"
      }
    ],
    "status": "current",
    "description": "Collection of statistics objects for CEP PWs."
  },
  "pwCepPerfIntervalGroup": {
    "name": "pwCepPerfIntervalGroup",
    "oid": "1.3.6.1.2.1.200.2.1.5",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalValidData"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalReset"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalTimeElapsed"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalDbaInPacketsHC"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalDbaOutPacketsHC"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalInNegPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalInPosPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalInPtrAdjustSecs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalOutNegPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalOutPosPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalOutPtrAdjustSecs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalAbsPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalMissingPkts"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalPktsOoseq"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalPktsOoRngDropped"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalJtrBfrUnderruns"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalPktsMalformed"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalSummaryErrors"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalESs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalSESs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalUASs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerfIntervalFC"
      }
    ],
    "status": "current",
    "description": "Collection of statistics objects for CEP PWs."
  },
  "pwCepPerf1DayIntervalGroup": {
    "name": "pwCepPerf1DayIntervalGroup",
    "oid": "1.3.6.1.2.1.200.2.1.6",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalValidData"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalMoniSecs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalDbaInPacketsHC"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalDbaOutPacketsHC"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalInNegPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalInPosPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalInPtrAdjustSecs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalOutNegPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalOutPosPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalOutPtrAdjustSecs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalAbsPtrAdjust"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalMissingPkts"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalPktsOoseq"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalPktsOoRngDropped"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalJtrBfrUnderruns"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalPktsMalformed"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalSummaryErrors"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalESs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalSESs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalUASs"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepPerf1DayIntervalFC"
      }
    ],
    "status": "current",
    "description": "Collection of statistics objects for CEP PWs."
  },
  "pwCepFractionalGroup": {
    "name": "pwCepFractionalGroup",
    "oid": "1.3.6.1.2.1.200.2.1.7",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracRowStatus"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracStorageType"
      }
    ],
    "status": "current",
    "description": "Collection of fractional SPE objects. These objects are optional and should be supported only if fractional SPE is supported within the network element."
  },
  "pwCepFractionalSts1Vc3Group": {
    "name": "pwCepFractionalSts1Vc3Group",
    "oid": "1.3.6.1.2.1.200.2.1.8",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracMode"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracConfigError"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracAsync"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracVtgMap"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracEbm"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracPeerEbm"
      }
    ],
    "status": "current",
    "description": "Collection of fractional STS-1/VC3 objects. These objects are optional and should be supported only if fractional STS-1/VC3 is supported within the network element."
  },
  "pwCepFractionalVc4Group": {
    "name": "pwCepFractionalVc4Group",
    "oid": "1.3.6.1.2.1.200.2.1.9",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracSdhVc4Mode"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracSdhVc4Tu3Map1"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracSdhVc4Tu3Map2"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracSdhVc4Tu3Map3"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracSdhVc4Tug2Map1"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracSdhVc4Tug2Map2"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracSdhVc4Tug2Map3"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracSdhVc4Ebm1"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracSdhVc4Ebm2"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracSdhVc4Ebm3"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracSdhVc4PeerEbm1"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracSdhVc4PeerEbm2"
      },
      {
        "module": "PW-CEP-STD-MIB",
        "object": "pwCepFracSdhVc4PeerEbm3"
      }
    ],
    "status": "current",
    "description": "Collection of fractional VC4 objects. These objects are optional and should be supported only if fractional VC4 is supported within the network element."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/PW-CEP-STD-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 19:32:28 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "PW-CEP-STD-MIB"
  }
}