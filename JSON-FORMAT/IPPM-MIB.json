{
  "imports": {
    "class": "imports",
    "RMON-MIB": [
      "OwnerString"
    ],
    "RMON2-MIB": [
      "protocolDir"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP",
      "OBJECT-GROUP"
    ],
    "SNMPv2-SMI": [
      "Integer32",
      "MibIdentifier",
      "Unsigned32",
      "Gauge32",
      "Counter32",
      "TimeTicks",
      "OBJECT-TYPE",
      "experimental",
      "Bits",
      "NOTIFICATION-TYPE",
      "Counter64",
      "OBJECT-IDENTITY",
      "IpAddress",
      "iso",
      "MODULE-IDENTITY"
    ],
    "SNMPv2-TC": [
      "TimeStamp",
      "StorageType",
      "DisplayString",
      "RowStatus",
      "TruthValue",
      "DateAndTime",
      "TEXTUAL-CONVENTION"
    ]
  },
  "ippmMib": {
    "name": "ippmMib",
    "oid": "1.3.6.1.3.10000",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2001-07-05 15:00",
        "description": "The creation of the IPPM-MIB corresponds to the draft- stephan-ippm-mib-00.txt posted in July 2001. The IPPM-MIB was partially presented during the IPPM WG meeting of London. Two main issues were identified during the 52 th IETF meetings in SLC: + There is a need for a common IPPM metric registry; + There is a short term need for the reporting part of the IPPM- MIB; "
      },
      {
        "revision": "2002-01-05 15:00",
        "description": "This release corresponds to draft-stephan-ippm-mib-01.txt posted in January 2002. This draft added sections which presents: + The different measurement architectures; + The integration of the IPPM-MIB in a measurement software; + The use of the IPPM-MIB for reporting. The new items created in this release are: + Fields in the ippmOwnersTable to control the access of an owner to the measures. + The table ippmResultSharingTable to manage the access of an owner to the results of the measure. All the control tables are optional or read only in reporting mode. "
      },
      {
        "revision": "2002-02-01 12:00",
        "description": "The current release corresponds to draft-stephan-ippm-mib- 02.txt posted in February 2002. It added a section to present the IPPM metrics registry. The new items created in this release are: + TC IppmReportDefinition and IppmStandardMetrics; + The registry of the IPPM metrics; + The ippmReportSetupTable and the ippmReportTable; + The notification tree. "
      }
    ],
    "lastupdated": "200202011200Z",
    "organization": "France Telecom - R&D",
    "contactinfo": "Postal : Emile Stephan France Telecom - R&D, Dpt. CPN 2, Avenue Pierre Marzin Technopole Anticipa 22307 Lannion Cedex FRANCE Tel: + 33 2 96 05 36 10 E-mail: emile.stephan@francetelecom.com",
    "description": " This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in TCP/IP-based internets. In particular, It defines a registry of the IPPM working group metrics and specifies the objects used for managing IPPM metrics measures, pushing alarms and reporting the measures results. "
  },
  "metrics": {
    "name": "metrics",
    "oid": "1.3.6.1.3.10000.1",
    "class": "objectidentity"
  },
  "rfc": {
    "name": "rfc",
    "oid": "1.3.6.1.3.10000.1.1",
    "class": "objectidentity"
  },
  "draft": {
    "name": "draft",
    "oid": "1.3.6.1.3.10000.1.2",
    "class": "objectidentity"
  },
  "id": {
    "name": "id",
    "oid": "1.3.6.1.3.10000.1.3",
    "class": "objectidentity"
  },
  "instantaneousUnidirectionalConnectivity": {
    "name": "instantaneousUnidirectionalConnectivity",
    "oid": "1.3.6.1.3.10000.1.1.1",
    "class": "objectidentity"
  },
  "instantaneousBidirectionalConnectivity": {
    "name": "instantaneousBidirectionalConnectivity",
    "oid": "1.3.6.1.3.10000.1.1.2",
    "class": "objectidentity"
  },
  "intervalUnidirectionalConnectivity": {
    "name": "intervalUnidirectionalConnectivity",
    "oid": "1.3.6.1.3.10000.1.1.3",
    "class": "objectidentity"
  },
  "intervalBidirectionalConnectivity": {
    "name": "intervalBidirectionalConnectivity",
    "oid": "1.3.6.1.3.10000.1.1.4",
    "class": "objectidentity"
  },
  "intervalTemporalConnectivity": {
    "name": "intervalTemporalConnectivity",
    "oid": "1.3.6.1.3.10000.1.1.5",
    "class": "objectidentity"
  },
  "onewayDelay": {
    "name": "onewayDelay",
    "oid": "1.3.6.1.3.10000.1.1.6",
    "class": "objectidentity"
  },
  "onewayDelayPoissonStream": {
    "name": "onewayDelayPoissonStream",
    "oid": "1.3.6.1.3.10000.1.1.7",
    "class": "objectidentity"
  },
  "onewayDelayPercentile": {
    "name": "onewayDelayPercentile",
    "oid": "1.3.6.1.3.10000.1.1.8",
    "class": "objectidentity"
  },
  "onewayDelayMedian": {
    "name": "onewayDelayMedian",
    "oid": "1.3.6.1.3.10000.1.1.9",
    "class": "objectidentity"
  },
  "onewayDelayMinimum": {
    "name": "onewayDelayMinimum",
    "oid": "1.3.6.1.3.10000.1.1.10",
    "class": "objectidentity"
  },
  "onewayDelayInversePercentile": {
    "name": "onewayDelayInversePercentile",
    "oid": "1.3.6.1.3.10000.1.1.11",
    "class": "objectidentity"
  },
  "onewayPacketLoss": {
    "name": "onewayPacketLoss",
    "oid": "1.3.6.1.3.10000.1.1.12",
    "class": "objectidentity"
  },
  "onewayPacketLossPoissonStream": {
    "name": "onewayPacketLossPoissonStream",
    "oid": "1.3.6.1.3.10000.1.1.13",
    "class": "objectidentity"
  },
  "onewayPacketLossAverage": {
    "name": "onewayPacketLossAverage",
    "oid": "1.3.6.1.3.10000.1.1.14",
    "class": "objectidentity"
  },
  "roundtripDelay": {
    "name": "roundtripDelay",
    "oid": "1.3.6.1.3.10000.1.1.15",
    "class": "objectidentity"
  },
  "roundtripDelayPoissonStream": {
    "name": "roundtripDelayPoissonStream",
    "oid": "1.3.6.1.3.10000.1.1.16",
    "class": "objectidentity"
  },
  "roundtripDelayPercentile": {
    "name": "roundtripDelayPercentile",
    "oid": "1.3.6.1.3.10000.1.1.17",
    "class": "objectidentity"
  },
  "roundtripDelayMedian": {
    "name": "roundtripDelayMedian",
    "oid": "1.3.6.1.3.10000.1.1.18",
    "class": "objectidentity"
  },
  "roundtripDelayMinimum": {
    "name": "roundtripDelayMinimum",
    "oid": "1.3.6.1.3.10000.1.1.19",
    "class": "objectidentity"
  },
  "roundtripDelayInversePercentile": {
    "name": "roundtripDelayInversePercentile",
    "oid": "1.3.6.1.3.10000.1.1.20",
    "class": "objectidentity"
  },
  "TimeUnit": {
    "name": "TimeUnit",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "year": 1,
          "month": 2,
          "week": 3,
          "day": 4,
          "hour": 5,
          "second": 6,
          "ms": 7,
          "us": 8,
          "ns": 9
        }
      }
    },
    "status": "current",
    "description": "A list of time units."
  },
  "GMTDateAndTime": {
    "name": "GMTDateAndTime",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "displayhint": "1d-1d-1d,1d:1d:1d,2d",
    "status": "current",
    "description": "A date-time specification. field octets contents range ----- ------ -------- ----- 1 1 year* 0..255 2 2 month 1..12 3 3 day 1..31 4 4 hour 0..23 5 5 minutes 0..59 6 6 seconds 0..59 7 7-8 1/10 milliseconds 0..9999 *Notes: 0 stands for year 2000. For example, '0102192015100500' represent 8:15pm, 10 seconds and 50 ms GMT on 19 February 2001 and is displayed as 01-02-19,20:15:10,0500"
  },
  "GmtTimeFilter": {
    "name": "GmtTimeFilter",
    "class": "textualconvention",
    "type": {
      "type": "GMTDateAndTime",
      "class": "type"
    },
    "status": "current",
    "description": "GmtTimeFilter TC is inspired by the TimeFilter defined in the RMON2. The reference of the time of TimeFilter is the local value of sysUptime while GmtTimeFilter uses a absolute reference of time. GmtTimeFilter is intended to be used for the index of a table. It allows an application to download only those rows changed since a particular time. A row is considered changed if the value of any object in the row changes or if the row is created or deleted. Each new conceptual row will be associated with the timeMark instance which was created at the value of ippmTimeSysTimer. It is intended to provide an absolute timestamp index for the result of measures. Typically to each singleton produced by an IPPM measure is associated the timemark corresponding to the moment of the measure. illustrations: Consider the 2 tables measureTable and resultTable measureTable OBJECT-TYPE SYNTAX SEQUENCE OF MeasureEntry MAX-ACCESS not-accessible STATUS current DESCRIPTION '' ::= { fooMib 1 } INDEX { measureIndex } resultTable OBJECT-TYPE SYNTAX SEQUENCE OF ResultEntry MAX-ACCESS not-accessible STATUS current DESCRIPTION '' ::= { fooMib 2 } INDEX { measureIndex, resultTimeMark } ResultEntry { resultTimeMark TimeFilter, resultCounts Counter } Should there be two measure rows in the measure table (measureIndex == 1, measureIndex == 2) which produced results asynchronously (e.g. made at Poisson intervals or sibling) and log them in the result table. Measure 1 produced the result 34 at time 0102192015100500 GMT, while row 2 produced the value 54 most recently (10ms later) at time 0102192015100600 GMT, and both rows are updated on several later occasions such that the current values are 37 and 53 respectively. Then the following resultCounts instances would exist. resultCounts.1.0102192015100500 34 resultCounts.2.0102192015100600 54 resultCounts.1.0102192015100950 65 resultCounts.1.0102192015100600 57 resultCounts.2.0102192015100800 48 resultCounts.2.0102192015100850 53 resultCounts.1.0102192015110050 49 resultCounts.1.0102192015110200 37 The following get-bulk explains how a NMS retrieves the results of the measures. get-bulk(nonRptrs=1, maxReps=10, resultCounts.1); returns: resultCounts.1.0102192015100500 == 34 resultCounts.1.0102192015100950 == 65 resultCounts.1.0102192015100600 == 57 resultCounts.1.0102192015110050 == 49 resultCounts.1.0102192015110200 == 37 # return lexigraphically-next two MIB instances get-bulk(nonRptrs=0, maxReps=2, resultCounts.1.0102192015100600, resultCounts.2.0102192015100600); returns: resultCounts.1.0102192015100950 == 65 resultCounts.2.0102192015100800 == 48 resultCounts.1.0102192015100600 == 57 resultCounts.2.0102192015100850 == 53 get-bulk(nonRptrs=0, maxReps=2, resultCounts.1.0102192015110200, resultCounts.2.0102192015110200); returns: return lexigraphically-next two MIB instances no 'resultTable' counter values at all are returned because neither counter has been updated since time 0102192015110200 "
  },
  "TypeP": {
    "name": "TypeP",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "displayhint": "1d.",
    "status": "current",
    "description": "This textual convention is used to describe the protocols encapsulation list of a packet, and is used as the value of the SYNTAX clause for the type of the Src and Dst of a IPPM measure. The RFC2895 specifies a macro for the definition of protocols identifiers while its companion document, the RFC2896 defines a set of protocols identifiers. Notes: An IPPM TypeP does not differ from RMON2 Protocols identifiers but TypeP usage in IPPM MIB differs from Protocol identifier usage in RMON2. A IPPM measure is active so generally TypeP does not describe the link layer (i.e. ether2...). Valid Internet packets are sent from Src to Dst. Then the choice of the link layer relies on the Internet stack. For example, the RFC2896 defines the protocol identifier '16.0.0.0.1.0.0.8.0.0.0.0.6.0.0.0.23.3.0.0.0' which represents ether2.ip.tcp.telnet and the protocol identifier 16.0.0.0.1.0.0.8.0.0.0.0.4.0.0.0.17.3.0.0.0 which stands for ether2.ip.ipip4.udp. The corresponding TypeP are '12.0.0.8.0.0.0.0.6.0.0.0.23.3.0.0.0' (ip.tcp.telnet) and 12.0.0.8.0.0.0.0.4.0.0.0.17.3.0.0.0 (ip.ipip4.udp)."
  },
  "IppmReportDefinition": {
    "name": "IppmReportDefinition",
    "class": "textualconvention",
    "type": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "none": 0,
        "onSingleton": 1,
        "onMeasureCycle": 2,
        "onMeasureCompletion": 3,
        "reportOnlyUptoDownMetricResults": 4,
        "reportOnlyExceededEventsDuration": 5,
        "inIppmReportTable": 6,
        "inSNMPTrapPDU": 7,
        "inSNMPv2TrapPDU": 8,
        "inInformRequestPDU": 9,
        "inEmail": 10,
        "inSMS": 11,
        "clearHistory": 12,
        "clearReport": 13
      }
    },
    "status": "current",
    "description": "IppmReportDefinition is intended to be used for the description of a report of results of a measure. By default all the results of a measure belong to the report of this measure. The first step of the report elaboration set up triggers on the value of the measure and on the distribution over time of the events generated by these triggers. The measure results corresponding to an event are reported periodically or sent in alarms as soon as the event appears. The end of description describe housekeeping tasks. An action if performed if the corresponding bit is set to 1. onSingleton(1): The actions are performed each time a new result of the measure occurs. onMeasureCycle(2): The actions are performed on the results of the measure at the end of each cycle of measure. onMeasureCompletion(3): The actions are performed on the results of the measure at the end of the measure. reportOnlyUptoDownMetricResults(4): Report the contiguous results which are on opposite sides of the metric threshold. reportOnlyExceededEventsDuration(5): Report the current result of a serie of contiguous results which exceed the metric threshold when the duration of the serie is over the events duration threshold seconds. inIppmReportTable(6): store the report in the local ippmReportTable. inSNMPTrapPDU(7): Send the report using a SNMP-Trap-PDU. inSNMPv2TrapPDU(8): Send the report using a SNMPv2-Trap-PDU. inInformRequestPDU(9): Send the report using a SNMP InformRequest-PDU. inEmail(10): Send the report using an email. inSMS(11): Send the report using a SMS. clearHistory(12): Remove all the results corresponding to this measure from the ippmHistoryTable. clearReport(13): Remove all the results corresponding to this measure from the ippmReportTable. "
  },
  "IppmStandardMetrics": {
    "name": "IppmStandardMetrics",
    "class": "textualconvention",
    "type": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "draftMetrics": 0,
        "instantaneousUnidirectionalConnectivity": 1,
        "instantaneousBidirectionalConnectivity": 2,
        "intervalUnidirectionalConnectivity": 3,
        "intervalBidirectionalConnectivity": 4,
        "intervalTemporalConnectivity": 5,
        "onewayDelay": 6,
        "onewayDelayPoissonStream": 7,
        "onewayDelayPercentile": 8,
        "onewayDelayMedian": 9,
        "onewayDelayMinimum": 10,
        "onewayDelayInversePercentile": 11,
        "onewayPacketLoss": 12,
        "onewayPacketLossPoissonStream": 13,
        "onewayPacketLossAverage": 14,
        "roundtripDelay": 15,
        "roundtripDelayPoissonStream": 16,
        "roundtripDelayPercentile": 17,
        "roundtripDelayMedian": 18,
        "roundtripDelayMinimum": 19,
        "roundtripDelayInversePercentile": 20
      }
    },
    "status": "current",
    "description": "The definition of the standardized IPPM metrics. if the draftMetrics bit is set then the other bits describe a WG draft metric identifiers. "
  },
  "ippmCompliances": {
    "name": "ippmCompliances",
    "oid": "1.3.6.1.3.10000.2",
    "class": "objectidentity"
  },
  "ippmOwnersGroup": {
    "name": "ippmOwnersGroup",
    "oid": "1.3.6.1.3.10000.3",
    "class": "objectidentity"
  },
  "ippmSystemGroup": {
    "name": "ippmSystemGroup",
    "oid": "1.3.6.1.3.10000.4",
    "class": "objectidentity"
  },
  "ippmMeasureGroup": {
    "name": "ippmMeasureGroup",
    "oid": "1.3.6.1.3.10000.5",
    "class": "objectidentity"
  },
  "ippmHistoryGroup": {
    "name": "ippmHistoryGroup",
    "oid": "1.3.6.1.3.10000.6",
    "class": "objectidentity"
  },
  "ippmNetworkMeasureGroup": {
    "name": "ippmNetworkMeasureGroup",
    "oid": "1.3.6.1.3.10000.7",
    "class": "objectidentity"
  },
  "ippmAggregatedMeasureGroup": {
    "name": "ippmAggregatedMeasureGroup",
    "oid": "1.3.6.1.3.10000.8",
    "class": "objectidentity"
  },
  "ippmReportGroup": {
    "name": "ippmReportGroup",
    "oid": "1.3.6.1.3.10000.9",
    "class": "objectidentity"
  },
  "ippmNotifications": {
    "name": "ippmNotifications",
    "oid": "1.3.6.1.3.10000.10",
    "class": "objectidentity"
  },
  "ippmOwnersControlTable": {
    "name": "ippmOwnersControlTable",
    "oid": "1.3.6.1.3.10000.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A NMS entity wishing to create and activate remote Ippm measurements in an agent must previously be registered in the ippmOwnersControlTable using the conceptual row mechanism described in the RMON2. The control of the access to the results of the measures is managed in the table ippmResultSharing. "
  },
  "ippmOwnersControlEntry": {
    "name": "ippmOwnersControlEntry",
    "oid": "1.3.6.1.3.10000.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IPPM-MIB",
        "object": "ippmOwnersControlIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "The description of the resources the agent granted to a SNMP application. For example, an instance of ippmOwnersControlOwner with an OwnerString 'acme', which represents the 14th owner created in ippmOwnersControlTable would be named ippmOwnersControlEntryOwner.14. Notes: The ippmOwnersControlIndex value is a local index managed directly by the agent. It is not used in anyway in the other IPPM tables."
  },
  "ippmOwnersControlIndex": {
    "name": "ippmOwnersControlIndex",
    "oid": "1.3.6.1.3.10000.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "An arbitrary index that only identify an entry in this table"
  },
  "ippmOwnersControlOwner": {
    "name": "ippmOwnersControlOwner",
    "oid": "1.3.6.1.3.10000.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OwnerString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The owner described by this entry."
  },
  "ippmOwnersControlGrantedMetrics": {
    "name": "ippmOwnersControlGrantedMetrics",
    "oid": "1.3.6.1.3.10000.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IppmStandardMetrics",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": " Defines the metrics granted to an owner."
  },
  "ippmOwnersControlGrantedRules": {
    "name": "ippmOwnersControlGrantedRules",
    "oid": "1.3.6.1.3.10000.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "all": 0,
        "readonly": 1,
        "permanent": 2,
        "sender": 2,
        "receive": 3,
        "report": 4,
        "alarm": 5
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Defines the rules this owner may act as in the current IPPM MIB instance. all(0): The owner is granted with all the rules. readonly(1): The measures (not only the metrics) allowed to this owner are setup by the manager of the point of measure. The owner can not add new measures for these metrics. The creation and the configuration of the measures corresponding to these metrics are managed by the manager of the point of measure. permanent(2): The measures (not only the metrics) allowed to this owner are determined by the manager of the point of measure. The owner can not add new measures for these metrics. The creation and the first configuration of the measures corresponding to these metrics are managed by the manager of the point of measure. The owner may modify the measures parameters of the entries of the corresponding ippmMeasureEntry which access is read-write. Typically that permits the owner to suspend the measures, to change the begin and end of the measures. sender(3): The owner may only activate measures for theses metrics that send packets from the current point of measure. This flag is only suitable for network measures. It shall be ignored for derived metrics. receiver(2): The owner may only activate measures for theses metrics that receive packets on the current point of measure. This flag is only suitable for network measures. It shall be ignored for derived metrics. Such control increases the security. The owner may not generate packets from the probe. report(4): The owner may setup aggregated metrics on the measures corresponding to these metrics. alarm(5): The owner may setup alarms on the results of the measures metrics. e.g.: if the owner Acme is granted with the metric Instantaneous- Unidirectional-Connectivity as a Receiver in the current point of measure, then Acme can not setup a Instantaneous-Unidirectional- Connectivity to another point of measure. "
  },
  "ippmOwnersControlIpAddress": {
    "name": "ippmOwnersControlIpAddress",
    "oid": "1.3.6.1.3.10000.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The IP address of the NMS corresponding to this owner. The address is human readable and is represented using the dot format."
  },
  "ippmOwnersControlEmail": {
    "name": "ippmOwnersControlEmail",
    "oid": "1.3.6.1.3.10000.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The email address of the NMS corresponding to this owner."
  },
  "ippmOwnersControlSMS": {
    "name": "ippmOwnersControlSMS",
    "oid": "1.3.6.1.3.10000.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The SMS phone number of the NMS corresponding to this owner."
  },
  "ippmOwnersControlStatus": {
    "name": "ippmOwnersControlStatus",
    "oid": "1.3.6.1.3.10000.3.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status of this table entry."
  },
  "ippmResultSharingTable": {
    "name": "ippmResultSharingTable",
    "oid": "1.3.6.1.3.10000.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": " ippmResultSharingTable controls finely the access of an owner to the measure results of other owners. An owner may grant another to read the result of its measure. Entries may exist in ippmResultSharingTable even is the measures to be shared are not yet defined. Deleting a measure entry in the ippmMeasureTable does not delete the entries corresponding to this measure in the ippmResultSharingTable. IppmResultSharingTable is optional. If this table is not implemented then the owner has only access to its measure results."
  },
  "ippmResultSharingEntry": {
    "name": "ippmResultSharingEntry",
    "oid": "1.3.6.1.3.10000.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IPPM-MIB",
        "object": "ippmResultSharingOwner",
        "implied": 0
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmResultSharingIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry allows an owner to read the results of a measure owned by another owner. It permits 2 typical usages: creating derived measurements on these results; reading the results from a remote NMS. Example: if acme.12 is a One-way-Delay(6) measure Acme may allows Peter to make derived metrics On the results of this measure. "
  },
  "ippmResultSharingOwner": {
    "name": "ippmResultSharingOwner",
    "oid": "1.3.6.1.3.10000.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OwnerString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": " The owner of this result control entry. Typically the owner which created this conceptual row."
  },
  "ippmResultSharingIndex": {
    "name": "ippmResultSharingIndex",
    "oid": "1.3.6.1.3.10000.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": " The index of this result control entry. The value is managed by the owner. On creation a SNMP error 'inconsistentValue' is returned if this value is already in use by this owner."
  },
  "ippmResultSharingMeasureOwner": {
    "name": "ippmResultSharingMeasureOwner",
    "oid": "1.3.6.1.3.10000.3.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OwnerString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The owner of the measure to be shared. The couple ippmResultSharingMeasureOwner, ippmResultSharingMeasureIndex identifies absolutely a measure"
  },
  "ippmResultSharingMeasureIndex": {
    "name": "ippmResultSharingMeasureIndex",
    "oid": "1.3.6.1.3.10000.3.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The index of the measure to be shared."
  },
  "ippmResultSharingGrantedOwner": {
    "name": "ippmResultSharingGrantedOwner",
    "oid": "1.3.6.1.3.10000.3.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OwnerString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The owner which is granted to access to the result of the measure described by the couple ippmResultSharingMeasureOwner, ippmResultSharingMeasureIndex."
  },
  "ippmResultSharingStatus": {
    "name": "ippmResultSharingStatus",
    "oid": "1.3.6.1.3.10000.3.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": " The status of this table entry. Once the entry status is set to active."
  },
  "ippmSystemTimer": {
    "name": "ippmSystemTimer",
    "oid": "1.3.6.1.3.10000.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "GMTDateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The current time of the system."
  },
  "ippmSystemSynchonizationType": {
    "name": "ippmSystemSynchonizationType",
    "oid": "1.3.6.1.3.10000.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 0,
          "ntp": 1,
          "gps": 2,
          "cdma": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "ippmSystemSynchonizationType describes the mechanism used to synchronise the system. other The synchronisation process must be defined extensively in the ippmSystemSynchonizationDescription. ntp The system is synchronised using the network time protocol. The NTP synchronisation must be described finely in the ippmSystemSynchonizationDescription. gps The system is synchronised using the GPS clocks. cdma The system is synchronised using the CDMA clocks. "
  },
  "ippmSystemSynchonizationDescription": {
    "name": "ippmSystemSynchonizationDescription",
    "oid": "1.3.6.1.3.10000.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The description of the synchronization process."
  },
  "ippmSystemClockResolution": {
    "name": "ippmSystemClockResolution",
    "oid": "1.3.6.1.3.10000.4.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "ippmSystemClockResolution provides the precision of the clock used for the measures. The unit is 1/10 of millisecond. For example, the clock on an old Unix host might advance only once every 10 msec, and thus have a resolution of only 10 msec."
  },
  "ippmSystemSynchronisationTime": {
    "name": "ippmSystemSynchronisationTime",
    "oid": "1.3.6.1.3.10000.4.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The time when occurs the last synchronisation of the clock. The last synchronisation must be set even if the synchronisation is not automatic."
  },
  "ippmSystemClockAccuracy": {
    "name": "ippmSystemClockAccuracy",
    "oid": "1.3.6.1.3.10000.4.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The most recent accuracy of the clock computed. The accuracy must be compute even if the synchronisation is not automatic."
  },
  "ippmSystemClockSkew": {
    "name": "ippmSystemClockSkew",
    "oid": "1.3.6.1.3.10000.4.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The most recent skew of the clock computed. The ippmSystemSkew must be compute even if the synchronisation is not automatic."
  },
  "ippmSystemPrevClockAccuracy": {
    "name": "ippmSystemPrevClockAccuracy",
    "oid": "1.3.6.1.3.10000.4.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The previous accuracy of the clock measured. The ippmSystemPrevClockAccuracy must be computed even if the synchronisation is not automatic."
  },
  "ippmSystemPrevClockSkew": {
    "name": "ippmSystemPrevClockSkew",
    "oid": "1.3.6.1.3.10000.4.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The previous skew of the clock measured. The ippmSystemPrevClockSkew must be computed even if the synchronisation is not automatic."
  },
  "ippmMetricTable": {
    "name": "ippmMetricTable",
    "oid": "1.3.6.1.3.10000.5.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table describes the current implementation. This table is mandatory. Each IPPM standardized metric must be described in the table. In reporting mode the entries of this table may be not accessible. It means that the table is handle internally by the measure software. "
  },
  "ippmMetricEntry": {
    "name": "ippmMetricEntry",
    "oid": "1.3.6.1.3.10000.5.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IPPM-MIB",
        "object": "ippmMetricIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry describes the static capabilities of a metric implementation."
  },
  "ippmMetricIndex": {
    "name": "ippmMetricIndex",
    "oid": "1.3.6.1.3.10000.5.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "ippmMetricIndex defines an unambiguous index for each standardized metric. Its value is the value of the node of the metric in the IPPM-MIB metrics registry ippmMib.metrics.rfc. Each metric registered in the standard registry must be present in this table. This index is used to identify the metric performed among the IPPM-MIB entities involved in the measure. Example: The index of the metric onewayPacketLossAverage which is registered as ippmMib.metrics.rfc.onewayPacketLossAverage will always have the value 14."
  },
  "ippmMetricCapabilities": {
    "name": "ippmMetricCapabilities",
    "oid": "1.3.6.1.3.10000.5.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notImplemented": 0,
          "implemented": 1
        }
      }
    },
    "default": {
      "default": {
        "value": "implemented",
        "format": "enum"
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "notImplemented the metric is not implemented. implemented the metric is implemented."
  },
  "ippmMetricUnit": {
    "name": "ippmMetricUnit",
    "oid": "1.3.6.1.3.10000.5.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noUnit": 0,
          "second": 1,
          "ms": 2,
          "us": 3,
          "ns": 4,
          "percentage": 5,
          "packets": 6,
          "byte": 6,
          "kbyte": 7,
          "megabyte": 8
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The unit used in the current entity for the results of the measure of this metric."
  },
  "ippmMetricDescription": {
    "name": "ippmMetricDescription",
    "oid": "1.3.6.1.3.10000.5.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A textual description of the metric implementation."
  },
  "ippmMetricMaxHistorySize": {
    "name": "ippmMetricMaxHistorySize",
    "oid": "1.3.6.1.3.10000.5.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Specifies the maximal number of results that a metric measure can save in the ippmHistoryTable."
  },
  "ippmMeasureTable": {
    "name": "ippmMeasureTable",
    "oid": "1.3.6.1.3.10000.5.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The table of all the IPPM measures which are running in the device. They may not be active. a measure consists in a subset of metrics to compute. The results of the measure may be saved in the ippmHistoryTable. The configuration of the measure sets the size of the history requested in ippmMeasureHystorySize. The maximal number of MIB objects to be collected in the portion of ippmHistoryTable associated with this metric depends the value of the ippmMetricMaxHistorySize. The value of each metric ippmMeasureHystorySize must not be over the value of ippmMetricMaxHistorySize corresponding to this metric in ippmMetricTable. In reporting mode the entries of this table may be not accessible. It means that the table is handle internally by the measure software. "
  },
  "ippmMeasureEntry": {
    "name": "ippmMeasureEntry",
    "oid": "1.3.6.1.3.10000.5.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IPPM-MIB",
        "object": "ippmMeasureOwner",
        "implied": 0
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmMeasureIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A SNMP entity wishing to create and activate a measurement adds a new entry in the ippmMeasureTable. Typically the configuration operation set the values of the conceptual row parameters using an unused owner index and sets the status of the row to createAndGo. An SNMP error 'inconsistentValue' is returned if the owner index is out of range."
  },
  "ippmMeasureOwner": {
    "name": "ippmMeasureOwner",
    "oid": "1.3.6.1.3.10000.5.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OwnerString",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "acme",
        "format": "string"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The owner who has configured this entry."
  },
  "ippmMeasureIndex": {
    "name": "ippmMeasureIndex",
    "oid": "1.3.6.1.3.10000.5.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The owner index of the measure. The value is managed by the owner. An SNMP error 'inconsistentValue' is returned if this value is already in use by this owner."
  },
  "ippmMeasureName": {
    "name": "ippmMeasureName",
    "oid": "1.3.6.1.3.10000.5.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The name of the instance of the metric. It illustrates the specificity of the metric and includes the metric and the typeP. example: IP-port-HTTP-connectivity"
  },
  "ippmMeasureMetrics": {
    "name": "ippmMeasureMetrics",
    "oid": "1.3.6.1.3.10000.5.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IppmStandardMetrics",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Defines the metrics to compute within this measure. A measure may be configured for the result of different metrics singletons to be archive in the ippmHistoryTable. The ippmMetricIndex of the created result has the value of the bit index of the corresponding ippmMeasureMetrics as explained above in the ippmMetricIndex definition. Example: A measure asking for One-way-Delay(6) and One-way- Packet-Loss(12) generated a flow of singletons which are logged in the ippmHistoryTable. The singletons created for the One-way-Delay measure have a value of ippmMetricIndex of 6 while the created singletons for the One-way-Packet-Loss measure have a value of ippmMetricIndex of 12."
  },
  "ippmMeasureBeginTime": {
    "name": "ippmMeasureBeginTime",
    "oid": "1.3.6.1.3.10000.5.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GMTDateAndTime",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the time at which the measure starts."
  },
  "ippmMeasureClockPeriodUnit": {
    "name": "ippmMeasureClockPeriodUnit",
    "oid": "1.3.6.1.3.10000.5.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeUnit",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "second",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the unit of the measure period."
  },
  "ippmMeasureClockPeriod": {
    "name": "ippmMeasureClockPeriod",
    "oid": "1.3.6.1.3.10000.5.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 60,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the among of time between 2 sampling intervals. Notes: This interval generates a flow of periodical instants which may be transformed as a flow of unpredictable instants of measure by the ippmNetworkMeasureClockPattern."
  },
  "ippmMeasureDurationUnit": {
    "name": "ippmMeasureDurationUnit",
    "oid": "1.3.6.1.3.10000.5.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeUnit",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "second",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the unit of the measure duration."
  },
  "ippmMeasureDuration": {
    "name": "ippmMeasureDuration",
    "oid": "1.3.6.1.3.10000.5.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 120,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the duration of the measure."
  },
  "ippmMeasureHystorySize": {
    "name": "ippmMeasureHystorySize",
    "oid": "1.3.6.1.3.10000.5.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 120,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the maximum number of results saved for each metric of this measure. The history of each metric is managed as a circular table. The newest result overwrite the oldest one when the history granted to this metric measure is full. The management of the results may be optimized if synchronized with the reports steps of this measure. "
  },
  "ippmMeasureStorageType": {
    "name": "ippmMeasureStorageType",
    "oid": "1.3.6.1.3.10000.5.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "nonVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object defines whether this row and the measure controlled by this row are kept in volatile storage and lost upon reboot or if this row is backed up by non-volatile or permanent storage. Possible values are: other(1), volatile(2), nonVolatile(3), permanent(4), readOnly(5)"
  },
  "ippmMeasureStatus": {
    "name": "ippmMeasureStatus",
    "oid": "1.3.6.1.3.10000.5.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "createAndGo",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status of this table entry. Once the entry status is set to active, the associate entry cannot be modified."
  },
  "ippmHistoryTable": {
    "name": "ippmHistoryTable",
    "oid": "1.3.6.1.3.10000.6.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The table of the results of the measures."
  },
  "ippmHistoryEntry": {
    "name": "ippmHistoryEntry",
    "oid": "1.3.6.1.3.10000.6.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IPPM-MIB",
        "object": "ippmMeasureOwner",
        "implied": 0
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmMeasureIndex",
        "implied": 0
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmMetricIndex",
        "implied": 0
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmHistoryTimeMark",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An ippmHistoryEntry entry is one of the result of an measure identified by the index members ippmMeasureOwner and ippmMeasureIndex. In the index : + ippmMeasureOwner and ippmMeasureIndex identify the ippmMeasureEntry on whose behalf this entry was created; + ippmMetricIndex identifies the ippmMetricEntry of the metric to measure; + ippmLogTimeMark value is the absolute time when the result of the metric was measured. The ippmHistoryTimeMark value is the absolute time when the ippmHistoryValue was performed. IppmHistoryValue is the value of the metric measured at the time ippmHistoryTimeMark. Example: A one way delay measure is created by the entity 'acme' using the owner index 1 and setting the 6th bit (corresponding to One-way-Delay) of ippmMeasureMetrics to 1. Consider that the result of the one way delay measured for acme on the day 15 of June at 8h20mn 10s 10ms is 23. The result is identified as the singleton ippmHistoryValue.acme.1.6.0106150820100100 and stored with value 23. Its value may be retrieved using a get- next(ippmHistoryValue.acme.1.6.0106150820100099) which returns (ippmHistoryValue.acme.1.6.0106150820100100 == 23). The ippmMetricIndex value of '6' corresponds to the 6th metric of ippmMetricTable which is Type-P-One-way- Delay. "
  },
  "ippmHistoryTimeMark": {
    "name": "ippmHistoryTimeMark",
    "oid": "1.3.6.1.3.10000.6.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GMTDateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The instant of the measure of the result."
  },
  "ippmHistoryValue": {
    "name": "ippmHistoryValue",
    "oid": "1.3.6.1.3.10000.6.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The value of the measure."
  },
  "ippmNetworkMeasureTable": {
    "name": "ippmNetworkMeasureTable",
    "oid": "1.3.6.1.3.10000.7.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A entry is a measure which performs network measures and provides a flow of results. This table extends the ippmMeasureTable. A network measure is a specific measure. It performs several metrics measure per packet exchange. Each step of a measure produces a singleton result per metric. The time of the measure and the value of the metric are saved in the ippmHistoryTable."
  },
  "ippmNetworkMeasureEntry": {
    "name": "ippmNetworkMeasureEntry",
    "oid": "1.3.6.1.3.10000.7.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IPPM-MIB",
        "object": "ippmMeasureOwner",
        "implied": 0
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmMeasureIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A SNMP entity wishing to create and activate a network measure adds a new entry in the ippmMeasureTable and in IppmNetworkMeasureTable. Typically the configuration operation set both the values of the new ippmMeasureEntry and of the new IppmNetworkMeasureEntry and sets the status of the row to createAndGo. An SNMP error 'inconsistentValue' is returned if the index is out of range. The ippmMeasureMetrics is set to a list of metrics to be computed from the same raw packet exchange. Each step of measure delivers a singleton per chosen metric. Results are timestamped and saved in the ippmHistoryTable."
  },
  "ippmNetworkMeasureSrcTypeP": {
    "name": "ippmNetworkMeasureSrcTypeP",
    "oid": "1.3.6.1.3.10000.7.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TypeP",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "04000080001000",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Defines the type P of the source address of the packets sent by the measure."
  },
  "ippmNetworkMeasureSrc": {
    "name": "ippmNetworkMeasureSrc",
    "oid": "1.3.6.1.3.10000.7.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "04C0210415",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the address of the source of the measure. It is represented as an octet string with specific semantics and length as identified by the ippmNetworkMeasureSrcTypeP. For example, if the ippmNetworkMeasureSrcTypeP indicates an encapsulation of 'ip', this object length is 4, followed by the 4 octets of the IP address, in network byte order."
  },
  "ippmNetworkMeasureDstTypeP": {
    "name": "ippmNetworkMeasureDstTypeP",
    "oid": "1.3.6.1.3.10000.7.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TypeP",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "04000080001000",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Defines the type P of the destination address of the packets sent by the measure."
  },
  "ippmNetworkMeasureDst": {
    "name": "ippmNetworkMeasureDst",
    "oid": "1.3.6.1.3.10000.7.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "04C0220414",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the address of the destination of the measure. It is represented as an octet string with specific semantics and length as identified by the ippmNetworkMeasureDstTypeP. For example, if the ippmNetworkMeasureDstTypeP indicates an encapsulation of 'ip', this object length is 4, followed by the 4 octets of the IP address, in network byte order."
  },
  "ippmNetworkMeasureClockPattern": {
    "name": "ippmNetworkMeasureClockPattern",
    "oid": "1.3.6.1.3.10000.7.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 11111111,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This cyclic clock shapes the profile of the instants of measurement according to an arbitrary distribution law. The clock resolution is ippmMeasureClockPeriod. The bits of the clock set to the value 1 determine the valid instants of measurement. A measure is to be processed if and only if the current bit value is 1. This pseudo-random clock pattern allows the configuration by the NMS of numerous kind of sampling law such as periodic or Poisson."
  },
  "ippmNetworkMeasureTimeoutDelay": {
    "name": "ippmNetworkMeasureTimeoutDelay",
    "oid": "1.3.6.1.3.10000.7.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the delay after which the packet is considered lost."
  },
  "ippmNetworkMeasureL3PacketSize": {
    "name": "ippmNetworkMeasureL3PacketSize",
    "oid": "1.3.6.1.3.10000.7.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 64,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the size of the packets send at the last network layer in the sense of the TypeP definition."
  },
  "ippmNetworkMeasureDataPattern": {
    "name": "ippmNetworkMeasureDataPattern",
    "oid": "1.3.6.1.3.10000.7.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "FF",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The current field defines the round robin pattern used to fill the packet."
  },
  "ippmAggregatedMeasureTable": {
    "name": "ippmAggregatedMeasureTable",
    "oid": "1.3.6.1.3.10000.8.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": " This table extends the ippmMeasureTable. A aggregated measure summarizes the results of previous network or aggregated measures. The results may saved in the ippmHistoryTable. Each step of the measure computation produces a singleton result per metric."
  },
  "ippmAggregatedMeasureEntry": {
    "name": "ippmAggregatedMeasureEntry",
    "oid": "1.3.6.1.3.10000.8.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IPPM-MIB",
        "object": "ippmMeasureOwner",
        "implied": 0
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmMeasureIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A SNMP entity wishing to create and activate a statistic measure adds a new entry in the ippmMeasureTable and in ippmAggregatedMeasureTable. Typically the configuration operation sets both the values of the new ippmMeasureEntry and of the new IppmAggregatedMeasureEntry and sets the status of the row to createAndGo. The ippmMeasureMetrics defines the metric to compute. The results of the measure to summarize are identified by ippmAggregatedMeasureHistoryOwner, IppmAggregatedMeasureHistoryOwnerIndex and ippmAggregatedMeasureHistoryMetric The aggregated task starts at ippmMeasureBeginTime and end after ippmMeasureDuration. A aggregated result is performed and saved in the ippmHistoryTable for each ippmMeasureClockPeriod. "
  },
  "ippmAggregatedMeasureHistoryOwner": {
    "name": "ippmAggregatedMeasureHistoryOwner",
    "oid": "1.3.6.1.3.10000.8.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OwnerString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The owner of the measure to summarize. "
  },
  "ippmAggregatedMeasureHistoryOwnerIndex": {
    "name": "ippmAggregatedMeasureHistoryOwnerIndex",
    "oid": "1.3.6.1.3.10000.8.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The owner index of the measure to summarize. "
  },
  "ippmAggregatedMeasureHistoryMetric": {
    "name": "ippmAggregatedMeasureHistoryMetric",
    "oid": "1.3.6.1.3.10000.8.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The metric of the measure to summarize. "
  },
  "ippmReportSetupTable": {
    "name": "ippmReportSetupTable",
    "oid": "1.3.6.1.3.10000.9.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The ippmReportSetupTable is a list of definition of reports. It defines the results of a network or aggregated measures which are to report. A report is saved in the ippmReportTable or sent to an application using a SNMP Trap, a SNMP inform PDU, an email or a SMS. The reporting task is not a batch action processed at the end of the measure. It is coupled with threshold detections and event filtering to deliver application level events and data while preserving scalability. It extends the definition of a measure: the definition of an measure may include the definition of a report."
  },
  "ippmReportSetupEntry": {
    "name": "ippmReportSetupEntry",
    "oid": "1.3.6.1.3.10000.9.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IPPM-MIB",
        "object": "ippmMeasureOwner",
        "implied": 0
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmMeasureIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "The report applies on the results of the measure which is extended by the current report definition. Typically the creation or a report sets both the values of the new measure and those of the new IppmReportSetupEntry. The ippmReportSetupDefinition describes the data and the events to include in the report. The definition consists in a list of tasks to perform on the results of the measure."
  },
  "ippmReportSetupDefinition": {
    "name": "ippmReportSetupDefinition",
    "oid": "1.3.6.1.3.10000.9.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IppmReportDefinition",
      "class": "type"
    },
    "default": {
      "value": {
        "type": "Bits",
        "class": "type",
        "bits": {
          "onMeasureCycle": 2,
          "inInformRequestPDU": 9,
          "clearHistory": 12
        }
      },
      "format": "bits"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The description of the events and actions which participate to the elaboration of the report. Send the report using the type of message selected by the bits 8 to 12. The report consists in the results of the measure which have been saved in the ippmReportTable. If the onEventSendReport(7) bit is unset the report is not saved. The message sent is a notification defined in the ippmNotifications node. The notification sent depends on the step of the measure: + Singleton events are sent using the notification ippmSingletonAlarm; + Exceeded events duration are sent using the notification ippmEventsDurationExceededAlarm; + A report of a cycle of measure is sent using the notification ippmCycleOfMeasureReport; + A report of a complete measure is sent using the notification ippmCompletedMeasureReport; Example 1: The setup of an alarm to be sent to the owner in a SNMP Trap each time the staircase crosses the metric threshold value of 5: ippmReportSetupMetricThreshold 5 ippmReportSetupDefinition { onSingleton(1), reportOnlyUptoDownMetricResults(4), inSNMPTrapPDU(8) } Example 2: The setup of a report to be sent to the owner in a SNMP informRequestPDU per measure cycle. It reports the staircase values corresponding to a metric threshold of 5: ippmReportSetupMetricThreshold 5 ippmReportSetupDefinition { onMeasureCycle(2), reportOnlyUptoDownMetricResults(4), inInformRequestPDU(10), clearHistory(13) } Default report: The default report provides the control protocol with an implicit mechanism to forward the result of a cycle of measure to the owner of the measure while deleting the results from the ippmHistoryTable on reception of the response to the InformRequestPDU : ippmReportSetupDefinition { onMeasureCycle(2), inInformRequestPDU(10), clearHistory(13) } "
  },
  "ippmReportSetupMetricThreshold": {
    "name": "ippmReportSetupMetricThreshold",
    "oid": "1.3.6.1.3.10000.9.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "An event is generated when the result of the measure exceeds the value of ippmReportSetupMetricThreshold. The threshold has the same unit as the metric. The metric unit is recorded in the object ippmMetricsUnit of this metric entry in the ippmMetricTable. "
  },
  "ippmReportSetupEventsDurationThreshold": {
    "name": "ippmReportSetupEventsDurationThreshold",
    "oid": "1.3.6.1.3.10000.9.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 15,
        "format": "decimal"
      }
    },
    "units": "Seconds",
    "maxaccess": "read-create",
    "status": "current",
    "description": "An event is generated when the duration of a serie of results which are continuously over the metric threshold cross over the duration of the ippmReportSetupEventsDurationThreshold. "
  },
  "ippmReportSetupNMS": {
    "name": "ippmReportSetupNMS",
    "oid": "1.3.6.1.3.10000.9.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The recipient of the report may be provided in the setup. By default the recipient of the report is the owner of the measure. Its addresses are recorded in the ippmOwnersTable. "
  },
  "ippmReportTable": {
    "name": "ippmReportTable",
    "oid": "1.3.6.1.3.10000.9.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The ippmReportTable logs the results of the reports. The results consist in a subset of the results of a measure as described in the report definition. The activation of a up and down filtering in the report definition limits the results logged to those corresponding to major events. Excepted these points the ippmReportTable is identical to the ippmHistoryTable. "
  },
  "ippmReportEntry": {
    "name": "ippmReportEntry",
    "oid": "1.3.6.1.3.10000.9.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IPPM-MIB",
        "object": "ippmMeasureOwner",
        "implied": 0
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmMeasureIndex",
        "implied": 0
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmMetricIndex",
        "implied": 0
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmReportTimeMark",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A report is a list of results of a measure. This sample is associated with the ippmReportSetupEntry which has set up the report. An ippmReportEntry entry is one of the results of an measure to report. The measure and the report definition are identified by the index members ippmMeasureOwner and ippmMeasureIndex. in the index : + ippmMeasureOwner and ippmMeasureIndex identify the ippmMeasureEntry and the ippmReportSetupEntry on whose behalf this report was created; + ippmMetricIndex identifies the ippmMetricEntry of the metric measured; + ippmReportTimeMark value is the absolute time when the value of the metric was measured. The ippmReportTimeMark value is the absolute time when the ippmHistoryValue was performed. IppmHistoryValue is the value of the metric measured at the time ippmReportTimeMark. "
  },
  "ippmReportTimeMark": {
    "name": "ippmReportTimeMark",
    "oid": "1.3.6.1.3.10000.9.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GMTDateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The instant of the measure of the result."
  },
  "ippmReportValue": {
    "name": "ippmReportValue",
    "oid": "1.3.6.1.3.10000.9.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The value."
  },
  "ippmSingletonAlarm": {
    "name": "ippmSingletonAlarm",
    "oid": "1.3.6.1.3.10000.10.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "IPPM-MIB",
        "object": "ippmReportSetupDefinition"
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmReportSetupMetricThreshold"
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmMetricUnit"
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmHistoryValue"
      }
    ],
    "status": "current",
    "description": "A notification sent because 2 contiguous results are on opposite sides of the metric threshold value. The index of the included ippmReportSetupMetricThreshold object identifies the ippmMeasureEntry and the ippmResultSetupEntry that specified the threshold. The notification contains the instances of the ippmReportValue object which raised the threshold. The ippmHistoryTimeMark of the index identifies the time the event occurs. "
  },
  "ippmEventsDurationExceededAlarm": {
    "name": "ippmEventsDurationExceededAlarm",
    "oid": "1.3.6.1.3.10000.10.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "IPPM-MIB",
        "object": "ippmReportSetupDefinition"
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmReportSetupEventsDurationThreshold"
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmMetricUnit"
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmHistoryValue"
      }
    ],
    "status": "current",
    "description": "A notification sent when the duration of contiguous raising ippmReportSetupMetricThreshold exceeds the ippmReportSetupEventsDurationThreshold value. The index of the included ippmReportSetupDefinition object identifies the ippmMeasureEntry and the ippmResultSetupEntry that specified the report. The notification contains the instances of the ippmReportValue objects saved in the ippmReportTable for this report. The ippmHistoryTimeMark of the index identifies the time theses measures results where performed. "
  },
  "ippmCycleOfMeasureReport": {
    "name": "ippmCycleOfMeasureReport",
    "oid": "1.3.6.1.3.10000.10.3",
    "class": "notificationtype",
    "objects": [
      {
        "module": "IPPM-MIB",
        "object": "ippmReportSetupDefinition"
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmMetricUnit"
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmHistoryValue"
      }
    ],
    "status": "current",
    "description": "A notification sent when a measure cycle completes. The index of the included ippmReportSetupDefinition object identifies the ippmMeasureEntry and the ippmResultSetupEntry that specified the report. The notification contains the instances of the ippmReportValue objects saved in the ippmReportTable for this measure cycle. The ippmHistoryTimeMark of the index identifies the time the measures where performed. "
  },
  "ippmCompletedMeasureReport": {
    "name": "ippmCompletedMeasureReport",
    "oid": "1.3.6.1.3.10000.10.4",
    "class": "notificationtype",
    "objects": [
      {
        "module": "IPPM-MIB",
        "object": "ippmReportSetupDefinition"
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmMetricUnit"
      },
      {
        "module": "IPPM-MIB",
        "object": "ippmHistoryValue"
      }
    ],
    "status": "current",
    "description": "A notification sent when a measure completes. The index of the included ippmReportSetupDefinition object identifies the ippmMeasureEntry and the ippmResultSetupEntry that specified the report. The notification contains the instances of the ippmReportValue objects saved in the ippmReportTable for this measure cycle. The ippmHistoryTimeMark of the index identifies the time the measures where performed. "
  },
  "ippmCompliance": {
    "name": "ippmCompliance",
    "oid": "1.3.6.1.3.10000.2.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ippmSystemGroup",
        "module": "IPPM-MIB"
      },
      {
        "object": "ippmMeasureGroup",
        "module": "IPPM-MIB"
      },
      {
        "object": "ippmNetworkMeasureGroup",
        "module": "IPPM-MIB"
      },
      {
        "object": "ippmHistoryGroup",
        "module": "IPPM-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for SNMP entities which implement the IPPM MIB"
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/IPPM-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:52:18 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "IPPM-MIB"
  }
}