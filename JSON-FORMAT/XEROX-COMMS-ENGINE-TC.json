{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "Gauge32",
      "Counter64",
      "IpAddress",
      "OBJECT-TYPE",
      "MODULE-IDENTITY",
      "TimeTicks",
      "Integer32",
      "NOTIFICATION-TYPE",
      "MibIdentifier",
      "OBJECT-IDENTITY",
      "Unsigned32",
      "iso",
      "Bits",
      "Counter32"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ],
    "XEROX-COMMON-MIB": [
      "xeroxCommonMIB"
    ]
  },
  "xcmCommsEngineTC": {
    "name": "xcmCommsEngineTC",
    "oid": "1.3.6.1.4.1.253.8.60",
    "class": "moduleidentity",
    "lastupdated": "9712140000Z",
    "organization": "Xerox Corporation - XCMI Working Group",
    "contactinfo": " XCMI Editors Email: xcmieditors@cp10.es.xerox.com -- -- ",
    "description": "Version: 2.40.pub The TC module for textual conventions, enumerated types, OIDs, and other volatile elements of the companion Communications Engine MIB, which supports detailed protocol stack graphing, and active management of communications protocol stacks, communications end system applications, communications intermediate systems, and communications gateways for network accessible host systems. Copyright (C) 1997 Xerox Corporation. All Rights Reserved."
  },
  "XcmCommsMgmtCommandRequest": {
    "name": "XcmCommsMgmtCommandRequest",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "disable": 2,
          "test": 3,
          "enable": 4,
          "close": 5,
          "recover": 6,
          "open": 7,
          "quiesce": 8,
          "resetCounters": 9,
          "resetWarm": 10,
          "resetCold": 11,
          "resetFactory": 12,
          "flushInput": 13,
          "flushOutput": 14,
          "flushInOut": 15,
          "manage": 16,
          "commsCreate": 1701,
          "commsDelete": 1702,
          "commsList": 1703,
          "commsSet": 1704,
          "commsClean": 1705,
          "commsDisable": 1706,
          "commsEnable": 1707,
          "commsPause": 1708,
          "commsResume": 1709,
          "commsShutdown": 1710,
          "commsManage": 2701,
          "commsRestart": 2702,
          "commsInstall": 2721,
          "commsUpgrade": 2722,
          "commsBackup": 2723,
          "commsRestore": 2724,
          "commsConfigure": 2725,
          "commsDiagnose": 2726,
          "commsResetCounters": 2731,
          "commsResetWarm": 2732,
          "commsResetCold": 2733,
          "commsResetFactory": 2734,
          "commsLogin": 2741,
          "commsLogout": 2742
        }
      }
    },
    "status": "current",
    "description": "A write to this object by an (authorized) management station invokes a command for this protocol entity. A read of this object ALWAYS returns the command currently in progress or last completed. It is mandatory that a conforming management agent ensure that the contents of this object remain 'in bounds' - an undefined value shall be replaced by 'none' - ie, although rejected with error in the SetResponse PDU, this object shall NOT contain any such undefined value. At system initialization, this object shall contain 'none'. * 'none' - NO action(s) shall be taken, except to ALWAYS clear '...CommandData' and set '...CommandStatus' to 'noError'. * 'test' or 'manage' - the associated '...CommandData' object shall be specified in the same SetRequest PDU. * all other commands - the associated '...CommandData' object MAY be specified in the same SetRequest PDU. * 'disable' - this protocol shall transition immediately (ie, without attempting graceful quiesce) to the 'inoperative' state. * 'enable', 'resetWarm', 'resetCold', or 'resetFactory' - the final state shall be either 'closed' or 'opened'. * 'test' - this protocol shall transition immediately to the 'testing' state; otherwise, it is a local matter (ie, protocol specific) how this command is processed; however, the associated '...CommandData' object shall be specified. * 'enable' - it is a local matter (ie, protocol specific) whether the final state shall be 'closed' or 'opened'; however, if 'closed' results, an 'open' shall yield 'opened'. * 'close', 'recover', or 'open' - this protocol shall make a 'best effort' to make an orderly transition to the requested final state. * 'quiesce' - this protocol shall make a 'best effort' to make a graceful transition to the 'closed' state. * 'resetCounters' - all comms counters shall be reset to zero. * 'resetWarm' - a comms 'warm restart' shall be performed. * 'resetCold' - a comms 'cold restart' shall be performed (ie, a power cycle reset). * 'resetFactory' - all factory defaults shall be restored, and a comms 'cold restart' shall be performed (ie, a power cycle reset). * 'flushInput' - all comms input (in progress or internally queued) shall be gracefully flushed * 'flushOutput' - all comms output (in progress or internally queued) shall be gracefully flushed * 'flushInOut' - all comms input and output output (in progress or internally queued) shall be gracefully flushed * 'manage' - it is a local matter (ie, product specific) how this command is processed; however, the associated '...CommandData' object shall be specified. Note: All of the POSIX and XCMI comms level operations are taken from the POSIX System Admin std (IEEE 1387.4) and aligned with the high-end XCMI System Admin MIB.",
    "reference": "See: 'dot5Commands' in IEEE 802.5 Token Ring MIB (RFC 1748). Compare: 'ifOperStatus' (current) and 'ifAdminStatus' (desired) in the Interfaces Group of IETF MIB-II (RFC 1213); 'RowStatus' textual convention in IETF SMIv2 (RFC 1442/1902)."
  },
  "XcmCommsMgmtCommandData": {
    "name": "XcmCommsMgmtCommandData",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "status": "current",
    "description": "A write to this object specifies: a) a 'test' command subtype and any accompanying 'test' protocol specific data; or b) a 'manage' command subtype and any accompanying 'manage' protocol specific data; or c) protocol specific data accompanying any other command. A read of this object ALWAYS returns the data (if any) which accompanied the current or last completed command. Note: Conforming implementations are STRONGLY encouraged to consider support of encrypted password writes in this object.",
    "reference": "See: Appropriate standards for protocol specific tests"
  },
  "XcmCommsMgmtState": {
    "name": "XcmCommsMgmtState",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "inoperative": 3,
          "testing": 4,
          "closed": 5,
          "closing": 6,
          "opening": 7,
          "recovering": 8,
          "opened": 9
        }
      }
    },
    "status": "current",
    "description": "A relatively generic description of the current state of this communications entity. Usage: It is desirable that the implementor report the states of all stack layers corresponding to conceptual rows in the 'xcmCommsStackTable' accurately. The use of the value 'unknown' should NOT be the general case, unless the host system has NO local instrumentation of the stack layers (such as the DMTF DMI, Desktop Management Interface) - when ANY local instrumentation of the stack layers is available, the implementor should ALWAYS accurately report stack layer states."
  },
  "XcmCommsMgmtConditions": {
    "name": "XcmCommsMgmtConditions",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": "A relatively generic description of the current conditions of this communications entity. The definition of 'conditions' is partially entity specific and is not completely amenable to generalization. However, a base set of values (which may be extended for each entity type) is given below: 1 : disableInProgress (normally not used) 2 : testInProgress (optional) 4 : enableInProgress 8 : closeInProgress 16 : recoverInProgress (optional) 32 : openInProgress 64 : quiesceInProgress (optional) 128 : resetCountersInProgress (normally not used) 256 : resetWarmInProgress (current defaults) 512 : resetColdInProgress (current defaults) 1024 : resetFactoryInProgress (factory defaults) 2048 : manageInProgress (optional) 4096 : incomingTestInProgress (optional) 8192 : outgoingTestInProgress (optional) 16384 : incomingAuthorizeInProgress (optional) 32768 : outgoingAuthorizeInProgress (optional) 65536 : incomingFlowControlInProgress (optional) 131072 : outgoingFlowControlInProgress (optional) The above basic 'conditions' remember the original intent of the current command, when it results in several state transitions before arriving at the 'final' state. They augment the state info available from a variable of type 'XcmCommsMgmtState', by graphing the 'progress' of a command through the states. Usage: It is desirable that the implementor report 'conditions' of all stack layers corresponding to conceptual rows in the 'xcmCommsStackTable' accurately. 'Conditions' occur within or across 'states' in a finite state machine (FSM) implementation of a communications entity. They represent both transient and long term constraints and circumstances."
  },
  "XcmCommsStackPosition": {
    "name": "XcmCommsStackPosition",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "bottom": 1,
          "middle": 2,
          "top": 4,
          "bottomAndTop": 5,
          "lowerMux": 8,
          "bottomLowerMux": 9,
          "middleLowerMux": 10,
          "topLowerMux": 12,
          "upperMux": 16,
          "bottomUpperMux": 17,
          "middleUpperMux": 18,
          "topUpperMux": 20,
          "bottomBothMux": 25,
          "middleBothMux": 26,
          "topBothMux": 28
        }
      }
    },
    "status": "current",
    "description": "A relatively generic description of the current position of this protocol entity (ie, this layer) in a protocol stack. Composed of one or more of the following position descriptors, arithmetically added together: bottom : 1 middle : 2 top : 4 lowerMux : 8 upperMux : 16 Usage: A conceptual row in 'xcmCommsStackTable', which occupies a 'bottom' position in a protocol stack AND has a corresponding row in the 'xcmCommsStackXrefTable', should ALWAYS have valid references in 'xcmCommsStackXrefIfIndex' (to IETF MIB-II) and 'xcmCommsStackXrefHrCommDevIndex' (to IETF Host Resources MIB). Usage: A conceptual row in 'xcmCommsStackTable' which occupies a 'lowerMux' and/or an 'upperMux' position in a protocol stack shall ALWAYS have one (or two) valid corresponding conceptual rows in the 'xcmCommsMuxTable', as the conventionally used 'xcmStack[Lower|Upper]StackIndex' objects take on zero values for multiplexors (thus breaking the graph of the stack layers, without the use of the 'xcmCommsMuxTable'). Note: In many real open systems which are internet attached, IETF IP (connectionless mode) network layer has a position of: a) 'middle' - neither top nor bottom; b) 'lowerMux' - above both OSI LLC (ISO 8802-2) and OSI CONP (CCITT X.25 over LAPB) datalinks; and c) 'upperMux' - below both IETF TCP (connection mode) and IETF UDP (connectionless mode) transports."
  },
  "XcmCommsStackExtPurpose": {
    "name": "XcmCommsStackExtPurpose",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "layerOther": 11,
          "layerDataTransfer": 12,
          "layerManagement": 13,
          "layerSecurity": 14,
          "layerInterWorkingUnit": 15,
          "systemOther": 16,
          "systemDataTransfer": 17,
          "systemManagement": 18,
          "systemSecurity": 19,
          "systemInterWorkingUnit": 20
        }
      }
    },
    "status": "current",
    "description": "A relatively generic description of the current purpose of this stack layer/sublayer during normal operation. Usage: Please note that 'layerInterWorkingUnit' would correctly describe: a datalink MAC sublayer bridge (eg, IEEE 802.1D); a network layer relay (X.25 backbone switch); a network layer gateway (eg, X.25 <--> Telex IWU); or a transport layer gateway (eg, OSI COTP over X.25 <--> OSI COTP over OSI CLNP). Also note that 'systemInterWorkingUnit' would correctly describe an application layer gateway (eg, X/Open XDPA <--> Novell NDPS, for print services based on DPA, ISO 10175)."
  },
  "XcmCommsStackExtRole": {
    "name": "XcmCommsStackExtRole",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "peer": 11,
          "primary": 12,
          "secondary": 13,
          "multicaster": 14,
          "client": 15,
          "server": 16
        }
      }
    },
    "status": "current",
    "description": "A relatively generic description of the current role of this stack layer/sublayer during normal operation. Usage: The values 'peer', 'primary', and 'secondary' are standard roles for non-application layer protocols. The value 'multicaster' indicates a role of multicast host (ie, all remote systems would play roles of 'secondary'). The values 'client' and 'server', which are analogous to 'primary' and 'secondary', are normally used to refer to application layer protocols, along with 'peer' (eg, IBM SNA APPC applications)."
  },
  "XcmCommsStackExtSuite": {
    "name": "XcmCommsStackExtSuite",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "osilan": 11,
          "osiman": 12,
          "osiwan": 13,
          "internet": 14,
          "ibmsna": 15,
          "ibmbisync": 16,
          "decnet": 17,
          "appletalk": 18,
          "netware": 19,
          "vines": 20,
          "lantastic": 21,
          "lanserver": 22,
          "lanmanager": 23,
          "ntas": 24,
          "netbios": 25,
          "netbeui": 26,
          "serial": 27,
          "parallel": 28,
          "directPrint": 29
        }
      }
    },
    "status": "current",
    "description": "The current protocol suite of this protocol entity (stack layer or sublayer)."
  },
  "XcmCommsStackExtSuiteVersion": {
    "name": "XcmCommsStackExtSuiteVersion",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "osilanVersions": 110101,
          "osimanVersions": 120101,
          "osiwanVersions": 130101,
          "internetVersions": 140101,
          "ibmsnaVersions": 150101,
          "ibmbisyncVersions": 160101,
          "decnetVersions": 170101,
          "appletalkVersions": 180101,
          "appletalkPhase1": 181999,
          "appletalkPhase2": 182999,
          "netwareVersions": 190101,
          "netware2x": 192999,
          "netware3x": 193999,
          "netware4x": 194999,
          "vinesVersions": 200101,
          "lantasticVersions": 210101,
          "lanserverVersions": 220101,
          "lanmanagerVersions": 230101,
          "ntasVersions": 240101,
          "netbiosVersions": 250101,
          "netbeuiVersions": 260101,
          "serialVersions": 270101,
          "parallelVersions": 280101,
          "directPrintVersions": 290101
        }
      }
    },
    "status": "current",
    "description": "The current protocol suite version of this protocol entity (stack layer or sublayer). Usage: The following enumeration is used to unambiguously identify a specific protocol suite version (or generic version), without resort to textual strings. Note: The following enumeration values are composed of two N-digit elements (left-to-right): a) First, the two-digit enumeration value of the protocol suite (from 'XcmCommsStackExtSuite'); and b) Second, a unique four-digit identifier."
  },
  "XcmCommsStackExtLayer": {
    "name": "XcmCommsStackExtLayer",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "physical": 11,
          "datalink": 12,
          "network": 13,
          "transport": 14,
          "session": 15,
          "presentation": 16,
          "application": 17
        }
      }
    },
    "status": "current",
    "description": "The closest approximate layer in the OSI Reference Model (CCITT X.200 | ISO 7498) to the current behavior of this stack layer or sublayer. Usage: It is NOT required that this value ALWAYS be strictly accurate. A number of legacy proprietary protocol suites use unusual and irregular names for their protocols (eg, frequent assignment of relatively simplistic transport protocols to the OSI Reference Model session layer in some protocol suites). Note: The following enumeration values are biased by ten (10), for ease of use, from the original OSI Reference Model."
  },
  "XcmCommsStackExtProtocol": {
    "name": "XcmCommsStackExtProtocol",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "osilanSuite": 110101,
          "osilan8023PMD": 111103,
          "osilan8024PMD": 111104,
          "osilan8025PMD": 111105,
          "osilanFDDIPMD": 111107,
          "osilan80211PMD": 111108,
          "osilan8023PHY": 111113,
          "osilan8024PHY": 111114,
          "osilan8025PHY": 111115,
          "osilanFDDIPHY": 111117,
          "osilan80211PHY": 111118,
          "osilan8023MAC": 111203,
          "osilan8024MAC": 111204,
          "osilan8025MAC": 111205,
          "osilanFDDIMAC": 111207,
          "osilan80211MAC": 111208,
          "osilan8025SMT": 111215,
          "osilanFDDISMT": 111217,
          "osilan80211SMT": 111218,
          "osilan8022LLC": 111221,
          "osilan8022LLCSNAP": 111222,
          "osilan8021BLMMP": 111232,
          "osilan8021DBRG": 111234,
          "osilan80210SDE": 111241,
          "osimanSuite": 120101,
          "osiman8026PMD": 121106,
          "osiman8026PHY": 121116,
          "osiman8026MAC": 121206,
          "osiman8026SMT": 121216,
          "osiwanSuite": 130101,
          "osiwanHdlcABM": 131201,
          "osiwanHdlcARM": 131202,
          "osiwanHdlcNRM": 131203,
          "osiwanHdlcABME": 131211,
          "osiwanHdlcARME": 131212,
          "osiwanHdlcNRME": 131213,
          "osiwanHdlcLAPB": 131221,
          "osiwanHdlcLAPD": 131224,
          "osiwanFax": 131241,
          "osiwanPSTN": 131251,
          "osiwanISDN": 131261,
          "osiwanCLNP": 131301,
          "osiwanCONP": 131302,
          "osiwanESIS": 131303,
          "osiwanISIS": 131304,
          "osiwanCLTP": 131401,
          "osiwanCOTP": 131402,
          "osiwanCLSP": 131501,
          "osiwanCOSP": 131502,
          "osiwanCLPP": 131601,
          "osiwanCOPP": 131602,
          "osiwanACSE": 131701,
          "osiwanRTSE": 131702,
          "osiwanROSE": 131703,
          "osiwanCCR": 131704,
          "osiwanDPA": 131713,
          "osiwanFTAM": 131714,
          "osiwanVT": 131716,
          "osiwanMHS": 131740,
          "osiwanDS": 131750,
          "osiwanDAP": 131751,
          "osiwanDSP": 131752,
          "osiwanMgmt": 131770,
          "osiwanCMIP": 131771,
          "osiwanSec": 131780,
          "internetSuite": 140101,
          "internetSLIP": 141201,
          "internetPPP": 141202,
          "internetIP": 141301,
          "internetICMP": 141302,
          "internetARP": 141303,
          "internetDHCP": 141304,
          "internetBOOTP": 141305,
          "internetRARP": 141306,
          "internetUDP": 141401,
          "internetTCP": 141402,
          "internetPing": 141404,
          "internetLPR": 141503,
          "internetFTP": 141504,
          "internetSMTP": 141505,
          "internetTelnet": 141506,
          "internetDNS": 141507,
          "internetTFTP": 141508,
          "internetHTTP": 141509,
          "internetSNMP": 141510,
          "internetSNMPv1": 141511,
          "internetSNMPv2": 141512,
          "internetSunOncSuite": 141520,
          "internetSunOncNIS": 141521,
          "internetSunOncPlusNIS": 141522,
          "internetSunOncRPC": 141523,
          "internetSunOncPlusRPC": 141524,
          "internetSunTiRPC": 141525,
          "internetOsfDceSuite": 141530,
          "internetOsfDceCDS": 141531,
          "internetOsfDceRPC": 141532,
          "internetOsfDceKerberos": 141533,
          "internetOsfDmeSuite": 141540,
          "internetLDAP": 141551,
          "internetCLDAP": 141552,
          "ibmsnaSuite": 150101,
          "ibmsnaSDLC": 151201,
          "ibmsnaDLC": 151211,
          "ibmsnaDLS": 151221,
          "ibmsnaPC": 151301,
          "ibmsnaTC": 151401,
          "ibmsnaDFC": 151501,
          "ibmsnaCSC": 151502,
          "ibmsnaPUNS": 151503,
          "ibmsnaLUNS": 151504,
          "ibmsnaPS": 151601,
          "ibmsna3270PS": 151602,
          "ibmsna5250PS": 151603,
          "ibmsnaRJE": 151604,
          "ibmsnaAPPC": 151605,
          "ibmbisyncSuite": 160101,
          "ibmbisyncDLC": 161201,
          "ibmbisyncPS": 161601,
          "ibmbisync3270PS": 161602,
          "ibmbisync5250PS": 161603,
          "ibmbisyncRJE": 161604,
          "decnetSuite": 170101,
          "appletalkSuite": 180101,
          "appletalkLLAP": 181201,
          "appletalkELAP": 181202,
          "appletalkTLAP": 181203,
          "appletalkDDP": 181301,
          "appletalkAARP": 181303,
          "appletalkATP": 181401,
          "appletalkADSP": 181402,
          "appletalkRTMP": 181403,
          "appletalkAEP": 181404,
          "appletalkASP": 181501,
          "appletalkZIP": 181502,
          "appletalkPAP": 181503,
          "appletalkNBP": 181507,
          "appletalkSNMP": 181510,
          "appletalkSNMPv1": 181511,
          "appletalkSNMPv2": 181512,
          "appletalkAFP": 181601,
          "netwareSuite": 190101,
          "netwareIPX": 191301,
          "netwareSPX": 191402,
          "netwareRIP": 191403,
          "netwareEcho": 191404,
          "netwareNCP": 191501,
          "netwareNetbios": 191502,
          "netwarePServer": 191503,
          "netwareFServer": 191504,
          "netwareMHS": 191505,
          "netwareBindery": 191507,
          "netwareNDS": 191508,
          "netwareRPrinter": 191509,
          "netwareSNMP": 191510,
          "netwareSNMPv1": 191511,
          "netwareSNMPv2": 191512,
          "netwareSAP": 191591,
          "vinesSuite": 200101,
          "vinesVIP": 201301,
          "vinesVICP": 201302,
          "vinesVARP": 201303,
          "vinesIP": 201311,
          "vinesICMP": 201312,
          "vinesARP": 201313,
          "vinesVRTP": 201314,
          "vinesVIPC": 201401,
          "vinesVSPP": 201402,
          "vinesUDP": 201411,
          "vinesTCP": 201412,
          "vinesNetRPC": 201501,
          "vinesSocket": 201502,
          "vinesNetbios": 201503,
          "vinesPrint": 201701,
          "vinesFiling": 201702,
          "vinesMail": 201703,
          "vinesStreetTalk": 201704,
          "lantasticSuite": 210101,
          "lanserverSuite": 220101,
          "lanmanagerSuite": 230101,
          "ntasSuite": 240101,
          "netbiosSuite": 250101,
          "netbiosNBP": 251501,
          "netbiosSNMP": 251510,
          "netbiosSNMPv1": 251511,
          "netbiosSNMPv2": 251512,
          "netbiosSMB": 251701,
          "netbiosPClient": 251702,
          "netbiosPServer": 251703,
          "netbiosFClient": 251704,
          "netbiosFServer": 251705,
          "netbiosSAP": 251591,
          "netbeuiSuite": 260101,
          "netbeuiDatalink": 261201,
          "netbeuiLLC": 261221,
          "netbeuiDLC": 261231,
          "serialSuite": 270101,
          "parallelSuite": 280101,
          "directPrintSuite": 290101
        }
      }
    },
    "status": "current",
    "description": "The specific protocol (within a given protocol suite) currently configured for this stack layer or sublayer. Usage: The following enumeration is used to unambiguously identify a specific protocol (within a given protocol suite), without resort to textual strings. Note: The following enumeration values are composed of three two-digit elements (left-to-right): a) First, the two-digit enumeration value of the protocol suite (from 'XcmCommsStackExtSuite'); b) Second, the two-digit enumeration value of the OSI Reference Model layer (from 'XcmCommsStackExtLayer'); and c) Third, a unique two-digit identifier."
  },
  "XcmCommsAddressExtForm": {
    "name": "XcmCommsAddressExtForm",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "postal": 11,
          "voice": 12,
          "telex": 13,
          "fax": 14,
          "packet": 15,
          "email": 16,
          "fullName": 17,
          "relName": 18
        }
      }
    },
    "status": "current",
    "description": "The current address form of this protocol entity."
  },
  "XcmCommsAddressExtScope": {
    "name": "XcmCommsAddressExtScope",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "subnet": 11,
          "region": 12,
          "network": 13,
          "universe": 14
        }
      }
    },
    "status": "current",
    "description": "The current address scope of this protocol entity."
  },
  "XcmCommsAddressExtFanout": {
    "name": "XcmCommsAddressExtFanout",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "unicast": 11,
          "multicast": 12,
          "broadcast": 13,
          "universe": 14,
          "unicastMask": 15,
          "multicastMask": 16,
          "broadcastMask": 17,
          "universeMask": 18
        }
      }
    },
    "status": "current",
    "description": "The current address fan out of this protocol entity."
  },
  "XcmCommsEngineGroupSupport": {
    "name": "XcmCommsEngineGroupSupport",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": "The terse conformance statement of ALL mandatory, conditionally mandatory, and optional XCMI Comms Engine MIB object groups supported by this management agent implementation (ie, version) on this host system, specified in a bit-mask. The current set of values (which may be extended in the future) is given below: 1 : commsEngineGroup -- 2**0 2 : commsEngineExtGroup -- 2**1 4 : commsStackGroup -- 2**2 8 : commsStackExtGroup -- 2**3 16 : commsStackXrefGroup -- 2**4 32 : commsMuxGroup -- 2**5 64 : commsMuxExtGroup -- 2**6 128 : commsAddressGroup -- 2**7 256 : commsAddressExtGroup -- 2**8 512 : commsTrafficGroup -- 2**9 1024 : commsAccessGroup -- 2**10 2048 : commsMgmtGroup -- 2**11 Usage: Conforming management agents shall ALWAYS accurately report their support for XCMI Comms Engine MIB object groups."
  },
  "xCmCommsEngineDummy": {
    "name": "xCmCommsEngineDummy",
    "oid": "1.3.6.1.4.1.253.8.60.999",
    "class": "objectidentity"
  },
  "xCmCommsMgmtCommandRequest": {
    "name": "xCmCommsMgmtCommandRequest",
    "oid": "1.3.6.1.4.1.253.8.60.999.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsMgmtCommandRequest",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmCommsMgmtCommandData": {
    "name": "xCmCommsMgmtCommandData",
    "oid": "1.3.6.1.4.1.253.8.60.999.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsMgmtCommandData",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmCommsMgmtState": {
    "name": "xCmCommsMgmtState",
    "oid": "1.3.6.1.4.1.253.8.60.999.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsMgmtState",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmCommsMgmtConditions": {
    "name": "xCmCommsMgmtConditions",
    "oid": "1.3.6.1.4.1.253.8.60.999.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsMgmtConditions",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmCommsStackPosition": {
    "name": "xCmCommsStackPosition",
    "oid": "1.3.6.1.4.1.253.8.60.999.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsStackPosition",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmCommsStackExtPurpose": {
    "name": "xCmCommsStackExtPurpose",
    "oid": "1.3.6.1.4.1.253.8.60.999.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsStackExtPurpose",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmCommsStackExtRole": {
    "name": "xCmCommsStackExtRole",
    "oid": "1.3.6.1.4.1.253.8.60.999.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsStackExtRole",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmCommsStackExtSuite": {
    "name": "xCmCommsStackExtSuite",
    "oid": "1.3.6.1.4.1.253.8.60.999.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsStackExtSuite",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmCommsStackExtSuiteVersion": {
    "name": "xCmCommsStackExtSuiteVersion",
    "oid": "1.3.6.1.4.1.253.8.60.999.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsStackExtSuiteVersion",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmCommsStackExtLayer": {
    "name": "xCmCommsStackExtLayer",
    "oid": "1.3.6.1.4.1.253.8.60.999.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsStackExtLayer",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmCommsStackExtProtocol": {
    "name": "xCmCommsStackExtProtocol",
    "oid": "1.3.6.1.4.1.253.8.60.999.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsStackExtProtocol",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmCommsAddressExtForm": {
    "name": "xCmCommsAddressExtForm",
    "oid": "1.3.6.1.4.1.253.8.60.999.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsAddressExtForm",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmCommsAddressExtScope": {
    "name": "xCmCommsAddressExtScope",
    "oid": "1.3.6.1.4.1.253.8.60.999.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsAddressExtScope",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmCommsAddressExtFanout": {
    "name": "xCmCommsAddressExtFanout",
    "oid": "1.3.6.1.4.1.253.8.60.999.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsAddressExtFanout",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmCommsEngineGroupSupport": {
    "name": "xCmCommsEngineGroupSupport",
    "oid": "1.3.6.1.4.1.253.8.60.999.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmCommsEngineGroupSupport",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/XEROX-COMMS-ENGINE-TC.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 18:03:50 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "XEROX-COMMS-ENGINE-TC"
  }
}