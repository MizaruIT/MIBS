{
  "imports": {
    "class": "imports",
    "INET-ADDRESS-MIB": [
      "InetAddressType",
      "InetAddress"
    ],
    "SNMP-FRAMEWORK-MIB": [
      "SnmpAdminString"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "OBJECT-GROUP",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "mib-2",
      "iso",
      "Bits",
      "MibIdentifier",
      "Counter32",
      "NOTIFICATION-TYPE",
      "MODULE-IDENTITY",
      "Unsigned32",
      "TimeTicks",
      "Gauge32",
      "OBJECT-IDENTITY",
      "Integer32",
      "IpAddress",
      "Counter64",
      "OBJECT-TYPE"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "RowStatus",
      "TruthValue",
      "DisplayString",
      "MacAddress",
      "DateAndTime",
      "TimeStamp"
    ]
  },
  "cabhCdpMib": {
    "name": "cabhCdpMib",
    "oid": "1.3.6.1.2.1.1",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2003-06-21 00:00",
        "description": "Initial version, published as RFC xxxx."
      }
    ],
    "lastupdated": "200306210000Z",
    "organization": "IETF IPCDN Working Group",
    "contactinfo": "Kevin Luehrs Postal: Cable Television Laboratories, Inc. 400 Centennial Parkway Louisville, Colorado 80027-1266 U.S.A. Phone: +1 303-661-9100 Fax: +1 303-661-9199 E-mail: k.luehrs@cablelabs.com; mibs@cablelabs.com IETF IPCDN Working Group General Discussion: ipcdn@ietf.org Subscribe: http://www.ietf.org/mailman/listinfo/ipcdn Archive: ftp://ftp.ietf.org/ietf-mail-archive/ipcdn Co-chairs: Richard Woundy, Richard_Woundy@cable.comcast.com Jean-Francois Mule, jf.mule@cablelabs.com",
    "description": "This MIB module supplies the basic management objects for the CableHome DHCP Portal (CDP) portion of the PS database. Copyright (C) The Internet Society (2003). This version of this MIB module is part of RFC xxxx; see the RFC itself for full legal notices."
  },
  "cabhCdpObjects": {
    "name": "cabhCdpObjects",
    "oid": "1.3.6.1.2.1.1.1",
    "class": "objectidentity"
  },
  "cabhCdpBase": {
    "name": "cabhCdpBase",
    "oid": "1.3.6.1.2.1.1.1.1",
    "class": "objectidentity"
  },
  "cabhCdpAddr": {
    "name": "cabhCdpAddr",
    "oid": "1.3.6.1.2.1.1.1.2",
    "class": "objectidentity"
  },
  "cabhCdpServer": {
    "name": "cabhCdpServer",
    "oid": "1.3.6.1.2.1.1.1.3",
    "class": "objectidentity"
  },
  "cabhCdpSetToFactory": {
    "name": "cabhCdpSetToFactory",
    "oid": "1.3.6.1.2.1.1.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Reading this object always returns false(2). When the cabhCdpSetToFactory object is set to true(1), the PS must take the following actions: 1. Clear all cabhCdpLanAddrEntries in the CDP LAN Address Table. 2. The CDS must offer the factory default DHCP options at the next lease renewal time. 3. Reset the following objects to their factory default values: cabhCdpLanTransThreshold, cabhCdpLanTransAction, cabhCdpWanDataIpAddrCount, cabhCdpLanPoolStartType, cabhCdpLanPoolStart, cabhCdpLanPoolEndType, cabhCdpLanPoolEnd, cabhCdpServerNetworkNumberType, cabhCdpServerNetworkNumber, cabhCdpServerSubnetMaskType, cabhCdpServerSubnetMask, cabhCdpServerTimeOffset, cabhCdpServerRouterType, cabhCdpServerRouter, cabhCdpServerDnsAddressType, cabhCdpServerDnsAddress, cabhCdpServerSyslogAddressType, cabhCdpServerSyslogAddress, cabhCdpServerDomainName, cabhCdpServerTTL, cabhCdpServerInterfaceMTU, cabhCdpServerVendorSpecific, cabhCdpServerLeaseTime, cabhCdpServerDhcpAddressType, cabhCdpServerDhcpAddress, cabhCdpServerCommitStatus"
  },
  "cabhCdpLanTransCurCount": {
    "name": "cabhCdpLanTransCurCount",
    "oid": "1.3.6.1.2.1.1.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The current number of active leases in the cabhCdpLanAddrTable (the number of row entries in the table that have a cabhCdpLanAddrMethod value of reservationActive(2) or dynamicActive (4)). This count does not include expired leases or reservations not associated with a current lease."
  },
  "cabhCdpLanTransThreshold": {
    "name": "cabhCdpLanTransThreshold",
    "oid": "1.3.6.1.2.1.1.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65533
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The threshold number of LAN-Trans IP addresses allocated or assigned above which the PS generates an alarm condition. Whenever an attempt is made to allocate a LAN-Trans IP address when cabhCdpLanTransCurCount is greater than or equal to cabhCdpLanTransThreshold, an event is generated. A value of 0 indicates that the CDP sets the threshold at the highest number of addresses in the LAN address pool."
  },
  "cabhCdpLanTransAction": {
    "name": "cabhCdpLanTransAction",
    "oid": "1.3.6.1.2.1.1.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "noAssignment": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "normal",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The action taken when the CDS assigns a LAN-Trans address and the number of LAN-Trans addresses assigned (cabhCdpLanTransCurCount) is greater than the threshold (cabhCdpLanTransThreshold). The actions are as follows: normal - assign a LAN-Trans IP address as would normally occur if the threshold was not exceed. noAssignment - do not assign a LAN-Trans IP address"
  },
  "cabhCdpWanDataIpAddrCount": {
    "name": "cabhCdpWanDataIpAddrCount",
    "oid": "1.3.6.1.2.1.1.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 63
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This is the number of WAN-Data IP addresses the PS's CDC must attempt to acquire via DHCP."
  },
  "cabhCdpLastSetToFactory": {
    "name": "cabhCdpLastSetToFactory",
    "oid": "1.3.6.1.2.1.1.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The value of sysUpTime when cabhCdpSetToFactory was last set to true. Zero if never reset."
  },
  "cabhCdpLanAddrTable": {
    "name": "cabhCdpLanAddrTable",
    "oid": "1.3.6.1.2.1.1.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table is a list of LAN-Trans realm parameters. This table has one row entry for each allocated LAN-Trans IP address. Each row must have at least a valid cabhCdpLanAddrMethod, a cabhCdpLanAddrIpType, a unique cabhCdpLanAddrIp, and a unique cabhCdpLanAddrClientId value. Static/Manual address assignment: To create a new DHCP address reservation, the NMS creates a row with: an index comprised of a new cabhCdpLanAddrIp and its cabhCdpLanAddrIpType, a new unique cabhCdpLanAddrClientID (an empty LeaseCreateTime and empty LeaseExpireTime,) and a cabhCdpLanDataAddrRowStatus of createAndGo(4). If the syntax and values of the new row - indicating a reservation - are valid, the PS must set cabhCdpLanAddrMethod to reservationInactive(1) and cabhCdpLanDataAddrRowStatus to active(1). When the PS grants a lease for a reserved IP, it must set the cabhCdpLanAddrMethod object for that row to reservationActive(2). When a lease for a reserved IP expires, the PS must set the corresponding rows cabhCdpLanAddrMethod object to reservationInactive(1). For row entries that represent lease reservations - rows in which the cabhCdpLanAddrMethod object has a value of either reservationInactive(1) or reservationActive(2) - the cabhCdpLanAddrIpType, cabhCdpLanAddrIp, cabhCdpLanAddrClientID, cabhCdpLanAddrMethod, and cabhCdpLanAddrHostName object values must persist across PS reboots. Dynamic address assignment: When the PS grants a lease for a non-reserved IP, it must set the cabhCdpLanAddrMethod object for that row to dynamicActive(4). When a lease for a non-reserved IP expires, the PS must set the corresponding rows cabhCdpLanAddrMethod object to dynamicInactive(3). The PS must create new row entries using cabhCdpLanAddrIp values that are unique to this table. If all cabhCdpLanAddrIp values in the range defined by cabhCdpLanPoolStart and cabhCdpLanPoolEnd are in use in this table, the PS may overwrite the cabhCdpLanAddrClientId of a row that has a cabhCdpLanAddrMethod object with a value of dynamicInactive(3) with a new cabhCdpLanAddrClientId value and use that cabhCdpLanAddrIp as part of a new lease. For row entries that represent active leases - rows in which the cabhCdpLanAddrMethod object has a value of dynamicActive(4) - the cabhCdpLanAddrIpType, cabhCdpLanAddrIp, cabhCdpLanAddrClientID, cabhCdpLanAddrMethod, and cabhCdpLanAddrHostName object values must persist across PS reboots."
  },
  "cabhCdpLanAddrEntry": {
    "name": "cabhCdpLanAddrEntry",
    "oid": "1.3.6.1.2.1.1.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanAddrIpType",
        "implied": 0
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanAddrIp",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "List of general parameters pertaining to LAN-Trans IP address reservations and leases. Implementors need to be aware that if the size of cabhCdpLanAddrIp exceeds 115 octets then OIDs of column instances in this table will have more than 128 sub-identifiers and cannot be accessed using SNMPv1, SNMPv2c, or SNMPv3."
  },
  "cabhCdpLanAddrIpType": {
    "name": "cabhCdpLanAddrIpType",
    "oid": "1.3.6.1.2.1.1.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The type of IP address assigned to the LAN IP Device in the LAN-Trans Realm."
  },
  "cabhCdpLanAddrIp": {
    "name": "cabhCdpLanAddrIp",
    "oid": "1.3.6.1.2.1.1.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The address assigned to the LAN IP Device. This parameter is entered by the CDP when the CDS grants a lease to a LAN IP Device in the LAN-Trans realm and creates a row in this table. Alternatively, this parameter can be entered by the NMS through the CMP, when the NMS creates a new DHCP address reservation. Each cabhCdpLanAddrIp in the table must fall within the range of IPs defined inclusively by cabhCdpLanPoolStart and cabhCdpLanPoolEnd. The PS must return an inconsistentValue error if the NMS attempts to create a row entry with a cabhCdpLanAddrIP value that falls outside of this range or is not unique fom all existing cabhCdpLanAddrIP entries in this table. The address type of this object is specified by cabhCdpLanAddrIpType."
  },
  "cabhCdpLanAddrClientID": {
    "name": "cabhCdpLanAddrClientID",
    "oid": "1.3.6.1.2.1.1.1.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The client's (i.e., LAN IP Device's) hardware address as indicated in the chaddr field of its DHCP REQUEST message. There is a one-to-one relationship between the hardware address and the LAN IP Device. This parameter is entered by the PS (CDP) when the CDS grants a lease to a LAN IP Device in the LAN-Trans realm and creates a row in this table. Alternatively this parameter can be created by the NMS through the CMP, when the NMS creates a new DHCP address reservation by accessing the cabhCdpLanDataAddrRowStatus object with an index comprised of a unique cabhCdpLanAddrIp and creating a row with a unique cabhCdpLanAddrClientID."
  },
  "cabhCdpLanAddrLeaseCreateTime": {
    "name": "cabhCdpLanAddrLeaseCreateTime",
    "oid": "1.3.6.1.2.1.1.1.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This is the date and time that the LAN-Trans lease was created (if it has not yet been renewed) or last renewed."
  },
  "cabhCdpLanAddrLeaseExpireTime": {
    "name": "cabhCdpLanAddrLeaseExpireTime",
    "oid": "1.3.6.1.2.1.1.1.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This is the date and time that the LAN-trans lease expired or will expire."
  },
  "cabhCdpLanAddrMethod": {
    "name": "cabhCdpLanAddrMethod",
    "oid": "1.3.6.1.2.1.1.1.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "reservationInactive": 1,
          "reservationActive": 2,
          "dynamicInactive": 3,
          "dynamicActive": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The IP allocation method indicated by this row. reservationInactive(1) indicates a reserved IP that has not yet been leased or that has an expired lease. reservationActive(2) indicates a reserved IP that has an active lease. dynamicInactive(3) indicates an IP that was once dynamically assigned to a LAN-Trans device but currently has an expired lease. dynamicActive(4) indicates an IP that was dynamically assigned to a LAN-Trans device that has a current lease."
  },
  "cabhCdpLanAddrHostName": {
    "name": "cabhCdpLanAddrHostName",
    "oid": "1.3.6.1.2.1.1.1.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 80
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This is the Host Name of the LAN IP address, based on DHCP option 12."
  },
  "cabhCdpLanAddrRowStatus": {
    "name": "cabhCdpLanAddrRowStatus",
    "oid": "1.3.6.1.2.1.1.1.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The RowStatus interlock for creation and deletion of row entries. The PS must not allow the NMS to set RowStatus to notInService(2). The PS must assign a RowStatus of notInService(2) to any new row entry created with a non-unique cabhCdpLanAddrClientID value. The PS must assign a RowStatus of notReady(3) to any new row entry created without a cabhCdpLanAddrClientID. The PS will prevent modification of this tables columns and return an inconsistentValue error, if the NMS attempts to make such modifications while the RowStatus is active(1)."
  },
  "cabhCdpWanDataAddrTable": {
    "name": "cabhCdpWanDataAddrTable",
    "oid": "1.3.6.1.2.1.1.1.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains WAN-Data address realm information."
  },
  "cabhCdpWanDataAddrEntry": {
    "name": "cabhCdpWanDataAddrEntry",
    "oid": "1.3.6.1.2.1.1.1.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpWanDataAddrIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "List of general parameter for CDP WAN-Data address realm."
  },
  "cabhCdpWanDataAddrIndex": {
    "name": "cabhCdpWanDataAddrIndex",
    "oid": "1.3.6.1.2.1.1.1.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Index into table."
  },
  "cabhCdpWanDataAddrClientId": {
    "name": "cabhCdpWanDataAddrClientId",
    "oid": "1.3.6.1.2.1.1.1.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 80
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "A unique WAN-Data ClientID used when attempting the acquire a WAN-Data IP Address via DHCP."
  },
  "cabhCdpWanDataAddrIpType": {
    "name": "cabhCdpWanDataAddrIpType",
    "oid": "1.3.6.1.2.1.1.1.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ipv4",
        "format": "enum"
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The address type assigned on the WAN-Data side."
  },
  "cabhCdpWanDataAddrIp": {
    "name": "cabhCdpWanDataAddrIp",
    "oid": "1.3.6.1.2.1.1.1.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The address assigned on the WAN-Data side."
  },
  "cabhCdpWanDataAddrRenewalTime": {
    "name": "cabhCdpWanDataAddrRenewalTime",
    "oid": "1.3.6.1.2.1.1.1.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This is the time remaining before the lease expires. This is based on DHCP Option 51."
  },
  "cabhCdpWanDataAddrRowStatus": {
    "name": "cabhCdpWanDataAddrRowStatus",
    "oid": "1.3.6.1.2.1.1.1.2.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The RowStatus interlock for creation and deletion of row entries. Any writable object in a row can be modified at any time while the row is active(1). The PS must assign a RowStatus of notInService(2) to any new row entry created with a cabhCdpWanDataAddrClientId that is not unique within this table."
  },
  "cabhCdpWanDnsServerTable": {
    "name": "cabhCdpWanDnsServerTable",
    "oid": "1.3.6.1.2.1.1.1.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains the IP addresses of cable network and Internet DNS servers, in the order of preference in which the PSs CNP will query them, when it cannot resolve a DNS query using local information. Entries in this table are updated with the information contained in DHCP Option 6, received during both the WAN-Man and WAN-Data IP acquisition processes."
  },
  "cabhCdpWanDnsServerEntry": {
    "name": "cabhCdpWanDnsServerEntry",
    "oid": "1.3.6.1.2.1.1.1.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpWanDnsServerOrder",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "List of cable network and Internet DNS servers."
  },
  "cabhCdpWanDnsServerOrder": {
    "name": "cabhCdpWanDnsServerOrder",
    "oid": "1.3.6.1.2.1.1.1.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "primary": 1,
          "secondary": 2,
          "tertiary": 3
        }
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The order of preference for cable network and Internet DNS servers, as listed in DHCP option 6 (Domain Server). Any time the CDC receives valid IP address information within DHCP Option 6, as part of lease acquisition or renewal of a WAN-Man or WAN-Data IP, it must update this information into this table. As entries in DHCP Option 6 are listed in order of preference the highest priority entry in DHCP Option 6 must correspond to the row with a cabhCdpWanDataAddrDnsOrder equal to 1. If DHCP Option 6 contains 2 valid IP addresses, the PS must update the rows with cabhCdpWanDataAddrDnsOrder values of 1 and 2. If DHCP Option 6 contains 3 valid IP addresses, the PS must update rows with cabhCdpWanDataAddrDnsOrder values of 1, 2, and 3. Any DNS server information included in DHCP Option 6 beyond primary, secondary and tertiary will not be represented in this table."
  },
  "cabhCdpWanDnsServerIpType": {
    "name": "cabhCdpWanDnsServerIpType",
    "oid": "1.3.6.1.2.1.1.1.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ipv4",
        "format": "enum"
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This parameter indicates the IP address Type of a WAN DNS server."
  },
  "cabhCdpWanDnsServerIp": {
    "name": "cabhCdpWanDnsServerIp",
    "oid": "1.3.6.1.2.1.1.1.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This parameter indicates the IP address of the WAN DNS server. The type of this address is specified by cabhCdpWanDnsServerIpType."
  },
  "cabhCdpLanPoolStartType": {
    "name": "cabhCdpLanPoolStartType",
    "oid": "1.3.6.1.2.1.1.1.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ipv4",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Address type of the start of range LAN Trans IP Addresses."
  },
  "cabhCdpLanPoolStart": {
    "name": "cabhCdpLanPoolStart",
    "oid": "1.3.6.1.2.1.1.1.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "c0a8000a",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The start of range LAN Trans IP Addresses. The type of this address is specified by cabhCdpLanPoolStartType."
  },
  "cabhCdpLanPoolEndType": {
    "name": "cabhCdpLanPoolEndType",
    "oid": "1.3.6.1.2.1.1.1.3.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ipv4",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Address type of the end of range LAN Trans IP Addresses."
  },
  "cabhCdpLanPoolEnd": {
    "name": "cabhCdpLanPoolEnd",
    "oid": "1.3.6.1.2.1.1.1.3.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "c0a800fe",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The end of range for LAN-Trans IP Addresses. The type of this address is specified by cabhCdpLanPoolEndType."
  },
  "cabhCdpServerNetworkNumberType": {
    "name": "cabhCdpServerNetworkNumberType",
    "oid": "1.3.6.1.2.1.1.1.3.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ipv4",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The IP address type of the LAN-Trans network number."
  },
  "cabhCdpServerNetworkNumber": {
    "name": "cabhCdpServerNetworkNumber",
    "oid": "1.3.6.1.2.1.1.1.3.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "c0a80000",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The LAN-Trans network number. The type of this address is specified by cabhCdpServerNetworkNumberType."
  },
  "cabhCdpServerSubnetMaskType": {
    "name": "cabhCdpServerSubnetMaskType",
    "oid": "1.3.6.1.2.1.1.1.3.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ipv4",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Type of LAN-Trans Subnet Mask."
  },
  "cabhCdpServerSubnetMask": {
    "name": "cabhCdpServerSubnetMask",
    "oid": "1.3.6.1.2.1.1.1.3.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ffffff00",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Option value 1 - Value of LAN-Trans Subnet Mask."
  },
  "cabhCdpServerTimeOffset": {
    "name": "cabhCdpServerTimeOffset",
    "oid": "1.3.6.1.2.1.1.1.3.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -86400,
            "max": 86400
          }
        ]
      }
    },
    "units": "seconds",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Option value 2 - Value of LAN-Trans Time Offset from Coordinated Universal Time (UTC)."
  },
  "cabhCdpServerRouterType": {
    "name": "cabhCdpServerRouterType",
    "oid": "1.3.6.1.2.1.1.1.3.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ipv4",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Type of Address, Router for the LAN-Trans address realm."
  },
  "cabhCdpServerRouter": {
    "name": "cabhCdpServerRouter",
    "oid": "1.3.6.1.2.1.1.1.3.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "c0a80001",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Option value 3 - Router for the LAN-Trans address realm. The type of this address is specified by cabhCdpServerRouterType."
  },
  "cabhCdpServerDnsAddressType": {
    "name": "cabhCdpServerDnsAddressType",
    "oid": "1.3.6.1.2.1.1.1.3.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ipv4",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Type of IP Addresses of the LAN-Trans address realm DNS servers."
  },
  "cabhCdpServerDnsAddress": {
    "name": "cabhCdpServerDnsAddress",
    "oid": "1.3.6.1.2.1.1.1.3.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "c0a80001",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The IP Addresses of the LAN-Trans address realm DNS servers. As a default there is only one DNS server and it is the address specified in Option Value 3 - cabhCdpServerRouter. Only one address is specified. The type of this address is specified by cabhCdpServerDnsAddressType."
  },
  "cabhCdpServerSyslogAddressType": {
    "name": "cabhCdpServerSyslogAddressType",
    "oid": "1.3.6.1.2.1.1.1.3.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ipv4",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Type of IP Address of the LAN-Trans SYSLOG servers."
  },
  "cabhCdpServerSyslogAddress": {
    "name": "cabhCdpServerSyslogAddress",
    "oid": "1.3.6.1.2.1.1.1.3.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "00000000",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The IP Addresses of the LAN-Trans SYSLOG servers. As a default there are no SYSLOG Servers. The factory defaults contains the indication of no Syslog Server value equals (0.0.0.0)."
  },
  "cabhCdpServerDomainName": {
    "name": "cabhCdpServerDomainName",
    "oid": "1.3.6.1.2.1.1.1.3.16",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Option value 15 - Domain name of LAN-Trans address realm."
  },
  "cabhCdpServerTTL": {
    "name": "cabhCdpServerTTL",
    "oid": "1.3.6.1.2.1.1.1.3.17",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 64,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Option value 23 - LAN-Trans Time to Live."
  },
  "cabhCdpServerInterfaceMTU": {
    "name": "cabhCdpServerInterfaceMTU",
    "oid": "1.3.6.1.2.1.1.1.3.18",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 68,
            "max": 4096
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Option value 26 - LAN-Trans Interface MTU. if the value of this object is 0, the PS must not include this option in its DHCP offer or DHCP Ack messages to LAN IP devices"
  },
  "cabhCdpServerVendorSpecific": {
    "name": "cabhCdpServerVendorSpecific",
    "oid": "1.3.6.1.2.1.1.1.3.19",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Option value 43 - Vendor Specific Options."
  },
  "cabhCdpServerLeaseTime": {
    "name": "cabhCdpServerLeaseTime",
    "oid": "1.3.6.1.2.1.1.1.3.20",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 3600,
        "format": "decimal"
      }
    },
    "units": "seconds",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Option value 51 Lease Time for LAN IP Devices in the LAN-Trans realm (seconds)."
  },
  "cabhCdpServerDhcpAddressType": {
    "name": "cabhCdpServerDhcpAddressType",
    "oid": "1.3.6.1.2.1.1.1.3.21",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ipv4",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Option value 54 - Type of LAN-Trans DHCP server IP address."
  },
  "cabhCdpServerDhcpAddress": {
    "name": "cabhCdpServerDhcpAddress",
    "oid": "1.3.6.1.2.1.1.1.3.22",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "c0a80001",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Option value 54 - LAN-Trans DHCP server IP address. It defaults to the router address as specified in cabhCdpServerRouter. Alternatively a vendor may want to separate CDS address from router address. The type of this address is specified by cabhCdpServerDhcpAddressType."
  },
  "cabhCdpServerControl": {
    "name": "cabhCdpServerControl",
    "oid": "1.3.6.1.2.1.1.1.3.23",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "restoreConfig": 1,
          "commitConfig": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "restoreConfig",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The control for the CDS (DHCP Server) configuration. All changes to the cabhCdpServer mib objects are reflected when reading the value of the mib objects; however, those changes are NOT applied to the running configuration of the CDS until they are successfully committed via use of the cabhCdpServerControl object. If changes are made to the cabhCdpServer mib objects which are not yet successfully committed to the CDS, the cabhCdpServerControl object can be used to rollback all changes to the last valid CDS configuration and discard all intermediate changes. restoreConfig - Setting cabhCdpServerControl to this value will cause any changes to the cabhCdpServer objects not yet committed be reset to the values from the current running configuration of the CDS. commitConfig - Setting cabhCdpServerControl to this value will cause the CDS to validate and apply the valid cabhCdpServer mib settings to its running configuration. The cabhCdpServerCommitStatus object will detail the status of this operation."
  },
  "cabhCdpServerCommitStatus": {
    "name": "cabhCdpServerCommitStatus",
    "oid": "1.3.6.1.2.1.1.1.3.24",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "commitSucceeded": 1,
          "commitNeeded": 2,
          "commitFailed": 3
        }
      }
    },
    "default": {
      "default": {
        "value": "commitSucceeded",
        "format": "enum"
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Indicates the status of commiting the current cabhCdpServer mib object values to the running configuration of the CDS (DHCP Server). commitSucceeded - indicates the current cabhCdpServer mib object values are valid and have been successfully committed to the running configuration of the CDS. commitNeeded - indicates that the value of one or more objects in cabhCdpServer mib group have been changed but not yet committed to the running configuration of the CDS. commitFailed - indicates the PS was unable to commit the cabhCdpServer mib object values to the running configuration of the CDS due to conflicts in those values."
  },
  "cabhCdpNotification": {
    "name": "cabhCdpNotification",
    "oid": "1.3.6.1.2.1.1.2",
    "class": "objectidentity"
  },
  "cabhCdpNotifications": {
    "name": "cabhCdpNotifications",
    "oid": "1.3.6.1.2.1.1.2.0",
    "class": "objectidentity"
  },
  "cabhCdpConformance": {
    "name": "cabhCdpConformance",
    "oid": "1.3.6.1.2.1.1.3",
    "class": "objectidentity"
  },
  "cabhCdpCompliances": {
    "name": "cabhCdpCompliances",
    "oid": "1.3.6.1.2.1.1.3.1",
    "class": "objectidentity"
  },
  "cabhCdpGroups": {
    "name": "cabhCdpGroups",
    "oid": "1.3.6.1.2.1.1.3.2",
    "class": "objectidentity"
  },
  "cabhCdpBasicCompliance": {
    "name": "cabhCdpBasicCompliance",
    "oid": "1.3.6.1.2.1.1.3.1.3",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "cabhCdpGroup",
        "module": "CABH-IETF-CDP-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for devices that implement the CableHome Portal Services functionality."
  },
  "cabhCdpGroup": {
    "name": "cabhCdpGroup",
    "oid": "1.3.6.1.2.1.1.3.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpSetToFactory"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanTransCurCount"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanTransThreshold"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanTransAction"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpWanDataIpAddrCount"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLastSetToFactory"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanAddrClientID"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanAddrLeaseCreateTime"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanAddrLeaseExpireTime"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanAddrMethod"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanAddrHostName"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanAddrRowStatus"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpWanDataAddrClientId"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpWanDataAddrIpType"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpWanDataAddrIp"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpWanDataAddrRenewalTime"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpWanDataAddrRowStatus"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpWanDnsServerIpType"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpWanDnsServerIp"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanPoolStartType"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanPoolStart"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanPoolEndType"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpLanPoolEnd"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerNetworkNumberType"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerNetworkNumber"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerSubnetMaskType"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerSubnetMask"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerTimeOffset"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerRouterType"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerRouter"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerDnsAddressType"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerDnsAddress"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerSyslogAddressType"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerSyslogAddress"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerDomainName"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerTTL"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerInterfaceMTU"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerVendorSpecific"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerLeaseTime"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerDhcpAddressType"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerDhcpAddress"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerControl"
      },
      {
        "module": "CABH-IETF-CDP-MIB",
        "object": "cabhCdpServerCommitStatus"
      }
    ],
    "status": "current",
    "description": "Group of objects for CableHome CDP MIB."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/CABH-IETF-CDP-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:49:13 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "CABH-IETF-CDP-MIB"
  }
}