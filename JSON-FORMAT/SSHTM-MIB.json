{
  "imports": {
    "class": "imports",
    "SNMP-FRAMEWORK-MIB": [
      "SnmpAdminString"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP",
      "OBJECT-GROUP"
    ],
    "SNMPv2-SMI": [
      "Counter32",
      "mib-2",
      "snmpDomains",
      "TimeTicks",
      "MibIdentifier",
      "NOTIFICATION-TYPE",
      "IpAddress",
      "Unsigned32",
      "MODULE-IDENTITY",
      "Bits",
      "OBJECT-IDENTITY",
      "iso",
      "Gauge32",
      "OBJECT-TYPE",
      "Counter64",
      "Integer32"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION",
      "RowStatus",
      "StorageType",
      "TestAndIncr"
    ],
    "TRANSPORT-ADDRESS-MIB": [
      "TransportAddress",
      "TransportAddressType"
    ]
  },
  "sshtmMIB": {
    "name": "sshtmMIB",
    "oid": "1.3.6.1.2.1.1",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2006-10-05 00:00",
        "description": "The initial version, published in RFC XXXX. -- NOTE to RFC editor: replace XXXX with actual RFC number -- for this document and remove this note "
      }
    ],
    "lastupdated": "200610050000Z",
    "organization": "ISMS Working Group",
    "contactinfo": "WG-EMail: isms@lists.ietf.org Subscribe: isms-request@lists.ietf.org Chairs: Juergen Quittek NEC Europe Ltd. Network Laboratories Kurfuersten-Anlage 36 69115 Heidelberg Germany +49 6221 90511-15 quittek@netlab.nec.de Juergen Schoenwaelder International University Bremen Campus Ring 1 28725 Bremen Germany +49 421 200-3587 j.schoenwaelder@iu-bremen.de Co-editors: David Harrington Huawei Technologies USA 1700 Alma Drive Plano Texas 75075 USA +1 603-436-8634 ietfdbh@comcast.net Joseph Salowey Cisco Systems 2901 3rd Ave Seattle, WA 98121 USA jsalowey@cisco.com ",
    "description": "The Secure Shell Transport Model MIB Copyright (C) The Internet Society (2006). This version of this MIB module is part of RFC XXXX; see the RFC itself for full legal notices. -- NOTE to RFC editor: replace XXXX with actual RFC number -- for this document and remove this note "
  },
  "sshtmNotifications": {
    "name": "sshtmNotifications",
    "oid": "1.3.6.1.2.1.1.0",
    "class": "objectidentity"
  },
  "sshtmMIBObjects": {
    "name": "sshtmMIBObjects",
    "oid": "1.3.6.1.2.1.1.1",
    "class": "objectidentity"
  },
  "sshtmConformance": {
    "name": "sshtmConformance",
    "oid": "1.3.6.1.2.1.1.2",
    "class": "objectidentity"
  },
  "TransportAddressSSH": {
    "name": "TransportAddressSSH",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "displayhint": "1a",
    "status": "current",
    "description": "Represents either a hostname encoded in ASCII using the IDNA protocol, as specified in RFC3490, followed by a colon ':' (ASCII character 0x3A) and a decimal port number in ASCII, or an IP address followed by a colon ':' (ASCII character 0x3A) and a decimal port number in ASCII. The name SHOULD be fully qualified whenever possible. Values of this textual convention are not directly useable as transport-layer addressing information, and require runtime resolution. As such, applications that write them must be prepared for handling errors if such values are not supported, or cannot be resolved (if resolution occurs at the time of the management operation). The DESCRIPTION clause of TransportAddress objects that may have TransportAddressSSH values must fully describe how (and when) such names are to be resolved to IP addresses and vice versa. This textual convention SHOULD NOT be used directly in object definitions since it restricts addresses to a specific format. However, if it is used, it MAY be used either on its own or in conjunction with TransportAddressType or TransportDomain as a pair. When this textual convention is used as a syntax of an index object, there may be issues with the limit of 128 sub-identifiers specified in SMIv2, STD 58. In this case, the OBJECT-TYPE declaration MUST include a 'SIZE' clause to limit the number of potential instance sub-identifiers."
  },
  "transportDomainSSH": {
    "name": "transportDomainSSH",
    "oid": "1.3.6.1.6.1.1",
    "class": "objectidentity",
    "status": "current",
    "description": "The SSH transport domain. The corresponding transport address is of type TransportAddressSSH. When an SNMP entity uses the transportDomainSSH transport model, it must be capable of accepting messages up to and including 8192 octets in size. Implementation of larger values is encouraged whenever possible."
  },
  "sshtmSession": {
    "name": "sshtmSession",
    "oid": "1.3.6.1.2.1.1.1.1",
    "class": "objectidentity"
  },
  "sshtmSessionCurrent": {
    "name": "sshtmSessionCurrent",
    "oid": "1.3.6.1.2.1.1.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The current number of open sessions. "
  },
  "sshtmSessionMaxSupported": {
    "name": "sshtmSessionMaxSupported",
    "oid": "1.3.6.1.2.1.1.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum number of open sessions supported. The value zero indicates the maximum is dynamic. "
  },
  "sshtmSessionOpenErrors": {
    "name": "sshtmSessionOpenErrors",
    "oid": "1.3.6.1.2.1.1.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of times an openSession() request failed to open a Session. "
  },
  "sshtmSessionSecurityLevelNotAvailableErrors": {
    "name": "sshtmSessionSecurityLevelNotAvailableErrors",
    "oid": "1.3.6.1.2.1.1.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of times an outgoing message was discarded because a requested securityLevel could not provided. "
  },
  "sshtmSessionNoAvailableSessions": {
    "name": "sshtmSessionNoAvailableSessions",
    "oid": "1.3.6.1.2.1.1.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of times a Response message was dropped because the corresponding session was no longer available. "
  },
  "sshtmUser": {
    "name": "sshtmUser",
    "oid": "1.3.6.1.2.1.1.1.2",
    "class": "objectidentity"
  },
  "sshtmUserSpinLock": {
    "name": "sshtmUserSpinLock",
    "oid": "1.3.6.1.2.1.1.1.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TestAndIncr",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "An advisory lock used to allow several cooperating Command Generator Applications to coordinate their use of facilities to alter the sshtmUserTable. "
  },
  "sshtmUserTable": {
    "name": "sshtmUserTable",
    "oid": "1.3.6.1.2.1.1.1.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The table of users configured in the SNMP engine's Local Configuration Datastore (LCD). Most configuration of this table is expected to be done by an agent dynamically. It is possible for an SNMP management application to pre-configure the table with static information useful for translating from an SSH-specific user to a model-independent securityName, or for statically configuring the only entities authorized to receive notifications. To create a new user (i.e., to instantiate a new conceptual row in this table), it is recommended to follow this procedure: 1) GET(sshtmUserSpinLock.0) and save in sValue. 2) SET(sshtmUserSpinLock.0=sValue, sshtmUserStatus=createAndWait) 3) configure the entry 4) SET(sshtmUserStatus=active) The new user should now be available and ready to be used for SNMPv3 communication. The use of sshtmUserSpinlock is to avoid conflicts with another SNMP command generator application which may also be acting on the sshtmUserTable. "
  },
  "sshtmUserEntry": {
    "name": "sshtmUserEntry",
    "oid": "1.3.6.1.2.1.1.1.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SSHTM-MIB",
        "object": "sshtmUserAddress",
        "implied": 0
      },
      {
        "module": "SSHTM-MIB",
        "object": "sshtmUserName",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A user configured in the SNMP engine's Local Configuration Datastore (LCD) for the SSH Transport Model. "
  },
  "sshtmUserAddress": {
    "name": "sshtmUserAddress",
    "oid": "1.3.6.1.2.1.1.1.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TransportAddressSSH",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A remote SNMP engine's SSH address. "
  },
  "sshtmUserSecurityName": {
    "name": "sshtmUserSecurityName",
    "oid": "1.3.6.1.2.1.1.1.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A human readable string representing the user in Transport Model independent format. The default transformation of the sshtmUserName to the sshtmUserSecurityName and vice versa is the identity function so that the sshtmUserSecurityName is usually the same as the sshtmUserName. "
  },
  "sshtmUserName": {
    "name": "sshtmUserName",
    "oid": "1.3.6.1.2.1.1.1.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This is the user name used in the SSH_MSG_USERAUTH_REQUEST to authenticate the client. "
  },
  "sshtmUserStorageType": {
    "name": "sshtmUserStorageType",
    "oid": "1.3.6.1.2.1.1.1.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "nonVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The storage type for this conceptual row. It is an implementation issue to decide if a SET for a readOnly or permanent row is accepted at all. In some contexts this may make sense, in others it may not. If a SET for a readOnly or permanent row is not accepted at all, then a 'wrongValue' error must be returned. "
  },
  "sshtmUserStatus": {
    "name": "sshtmUserStatus",
    "oid": "1.3.6.1.2.1.1.1.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status of this conceptual row. Until instances of all corresponding columns are appropriately configured, the value of the corresponding instance of the sshtmUserStatus column is 'notReady'. The value of this object has no effect on whether other objects in this conceptual row can be modified. "
  },
  "sshtmGroups": {
    "name": "sshtmGroups",
    "oid": "1.3.6.1.2.1.1.2.1",
    "class": "objectidentity"
  },
  "sshtmCompliances": {
    "name": "sshtmCompliances",
    "oid": "1.3.6.1.2.1.1.2.2",
    "class": "objectidentity"
  },
  "sshtmGroup": {
    "name": "sshtmGroup",
    "oid": "1.3.6.1.2.1.1.2.1.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "SSHTM-MIB",
        "object": "sshtmUserSpinLock"
      },
      {
        "module": "SSHTM-MIB",
        "object": "sshtmUserSecurityName"
      },
      {
        "module": "SSHTM-MIB",
        "object": "sshtmUserStorageType"
      },
      {
        "module": "SSHTM-MIB",
        "object": "sshtmUserStatus"
      }
    ],
    "status": "current",
    "description": "A collection of objects for maintaining information of an SNMP engine which implements the SNMP Secure Shell Transport Model. "
  },
  "sshtmCompliance": {
    "name": "sshtmCompliance",
    "oid": "1.3.6.1.2.1.1.2.2.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "sshtmGroup",
        "module": "SSHTM-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for SNMP engines that support the SSHTM-MIB"
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/SSHTM-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 20:05:20 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "SSHTM-MIB"
  }
}