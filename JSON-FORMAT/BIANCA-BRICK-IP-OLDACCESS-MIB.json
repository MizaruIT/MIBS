{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "OBJECT-TYPE",
      "iso",
      "MODULE-IDENTITY",
      "Integer32",
      "Counter64",
      "Unsigned32",
      "Bits",
      "TimeTicks",
      "NOTIFICATION-TYPE",
      "Gauge32",
      "IpAddress",
      "OBJECT-IDENTITY",
      "Counter32",
      "MibIdentifier"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "org": {
    "name": "org",
    "oid": "1.3",
    "class": "objectidentity"
  },
  "dod": {
    "name": "dod",
    "oid": "1.3.6",
    "class": "objectidentity"
  },
  "internet": {
    "name": "internet",
    "oid": "1.3.6.1",
    "class": "objectidentity"
  },
  "private": {
    "name": "private",
    "oid": "1.3.6.1.4",
    "class": "objectidentity"
  },
  "enterprises": {
    "name": "enterprises",
    "oid": "1.3.6.1.4.1",
    "class": "objectidentity"
  },
  "bintec": {
    "name": "bintec",
    "oid": "1.3.6.1.4.1.272",
    "class": "objectidentity"
  },
  "bibo": {
    "name": "bibo",
    "oid": "1.3.6.1.4.1.272.4",
    "class": "objectidentity"
  },
  "biboipold": {
    "name": "biboipold",
    "oid": "1.3.6.1.4.1.272.4.5",
    "class": "objectidentity"
  },
  "ipAllowTable": {
    "name": "ipAllowTable",
    "oid": "1.3.6.1.4.1.272.4.5.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The ipAllowTable defines all allowed IP packets. Each entry describes a subset of IP Packets, which are allowed to be processed. The overall set of allowed IP packets is the union of all subsets that are described in this table. If at least one entry is defined in the ipAllowTable, only IP datagrams which are allowed by the ipAllowTable are processed by the BRICK. All other packets are refused. Please note that the ipDenyTable overwrites the ipAllowTable. IP datagrams specified in the ipDenyTable are always refused, even if they are allowed by the ipAllowTable. Creating entries: Entries are created by setting the ipAllowProtocolMode and ipAllowSrcIfIndexMode objects in one operation (on one command line). Deleting entries: Entries are deleted by setting the ipAllowProtocolMode object to 'delete'."
  },
  "ipAllowEntry": {
    "name": "ipAllowEntry",
    "oid": "1.3.6.1.4.1.272.4.5.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-OLDACCESS-MIB",
        "object": "ipAllowProtocolMode",
        "implied": 0
      },
      {
        "module": "BIANCA-BRICK-IP-OLDACCESS-MIB",
        "object": "ipAllowSrcIfIndexMode",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ipAllowProtocolMode": {
    "name": "ipAllowProtocolMode",
    "oid": "1.3.6.1.4.1.272.4.5.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dont-verify": 1,
          "verify": 2,
          "delete": 3
        }
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Specifies whether or not the protocol field of the IP datagram header should be used to determine if the datagram belongs to the subset of the entry. dont-verify(1) = don't check the protocol field; verify(2) = check the protocol field; delete(3) = delete the entry from the table"
  },
  "ipAllowProtocol": {
    "name": "ipAllowProtocol",
    "oid": "1.3.6.1.4.1.272.4.5.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "icmp": 1,
          "ggp": 3,
          "tcp": 6,
          "egp": 8,
          "pup": 12,
          "udp": 17,
          "hmp": 20,
          "xns-idp": 22,
          "rdp": 27,
          "ospf": 89
        }
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "If the ipAllowProtocolMode is set to 'verify', this object specifies the protocol of IP datagrams belonging to the subset described by this entry. Otherwise, this field has no meaning."
  },
  "ipAllowSrcIfIndexMode": {
    "name": "ipAllowSrcIfIndexMode",
    "oid": "1.3.6.1.4.1.272.4.5.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dont-verify": 1,
          "verify": 2
        }
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object specifies whether or not the originating interface of the IP datagram should be checked to determine whether a datagram belongs to the subset."
  },
  "ipAllowSrcIfIndex": {
    "name": "ipAllowSrcIfIndex",
    "oid": "1.3.6.1.4.1.272.4.5.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "If ipAllowSrcIfIndexMode is set to 'verify', then this object specifies the ifIndex of the datagrams belonging to the subset defined by this entry."
  },
  "ipAllowSrcAddr": {
    "name": "ipAllowSrcAddr",
    "oid": "1.3.6.1.4.1.272.4.5.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object specifies the set of IP addresses of datagrams that belong to the subset defined by this entry."
  },
  "ipAllowSrcMask": {
    "name": "ipAllowSrcMask",
    "oid": "1.3.6.1.4.1.272.4.5.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object specifies the set of IP addresses of data grams that belong to the subset defined by this entry."
  },
  "ipAllowSrcPortMode": {
    "name": "ipAllowSrcPortMode",
    "oid": "1.3.6.1.4.1.272.4.5.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ignore": 1,
          "specific": 2,
          "clients": 3,
          "server": 4,
          "unpriv": 5,
          "priv": 6
        }
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object specifies the range of source port numbers of IP datagrams belonging to the subset. ignore(1) = All ports: 0 ..65535; specific(2) = a specific port number i.e. ipAllowScrPort; clients(3) = clientports: 1024 .. 4999, 32768..65535; server(4) = server ports: 0..1023 5000..32767; unpriv(5) = unprivileged ports: 1024..65535; priv(6) = privileged ports: 0..1023"
  },
  "ipAllowSrcPort": {
    "name": "ipAllowSrcPort",
    "oid": "1.3.6.1.4.1.272.4.5.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "If ipAllowSrcPortMode is set to 'specific', then this object contains a specific port number. Otherwise this object is not used."
  },
  "ipAllowDstAddr": {
    "name": "ipAllowDstAddr",
    "oid": "1.3.6.1.4.1.272.4.5.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object specifies the set of IP addresses of datagrams that belong to the subset defined by this entry."
  },
  "ipAllowDstMask": {
    "name": "ipAllowDstMask",
    "oid": "1.3.6.1.4.1.272.4.5.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": " This object specifies the set of IP addresses of datagrams that belong to the subset defined by this entry."
  },
  "ipAllowDstPortMode": {
    "name": "ipAllowDstPortMode",
    "oid": "1.3.6.1.4.1.272.4.5.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ignore": 1,
          "specific": 2,
          "clients": 3,
          "server": 4,
          "unpriv": 5,
          "priv": 6
        }
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object specifies the range of destination port numbers of IP datagrams belonging to the subset. ignore(1) = All ports: 0..65535; specific(2) = a specific port number i.e. ipAllowDstPort; clients(3) = client ports: 1024..4999, 32768..65535; server(4) = server ports. 0..1023, 5000..32767; unpriv(5) = unprivileged ports: 1024..65535; priv(6) = privileged ports: 0..1023"
  },
  "ipAllowDstPort": {
    "name": "ipAllowDstPort",
    "oid": "1.3.6.1.4.1.272.4.5.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "If ipAllowDstPortMode is set to 'specific', then this object contains a specific port number. Otherwise this object is not used."
  },
  "ipAllowSrcPortRange": {
    "name": "ipAllowSrcPortRange",
    "oid": "1.3.6.1.4.1.272.4.5.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object can be used together with ipAllowSrcPort to apply the rule to a port range, instead of a single port. When ipAllowSrcPortMode is set to specific and this object is not set to -1, than the rule applies to the Range of ports from ipAllowSrcPort to ipAllowSrcPortRange. When this object is set to -1, the rule applies only to port ipAllowSrcPort."
  },
  "ipAllowDstPortRange": {
    "name": "ipAllowDstPortRange",
    "oid": "1.3.6.1.4.1.272.4.5.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object can be used together with ipAllowDstPort to apply the rule to a port range, instead of a single port. When ipAllowDstPortMode is set to specific and this object is not set to -1, than the rule applies to the Range of ports from ipAllowDstPort to ipAllowDstPortRange. When this object is set to -1, the rule applies only to port ipAllowDstPort."
  },
  "ipDenyTable": {
    "name": "ipDenyTable",
    "oid": "1.3.6.1.4.1.272.4.5.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The ipDenyTable defines all IP packets to be denied. Each entry describes a subset of IP Packets, which are denied processing. The overall set of denied IP packets is the union of all subsets that are described in this table. The ipDenyTable overwrites the ipAllowTable. IP datagrams specified in the ipDenyTable are always refused, even if they are allowed by the ipAllowTable. Creating entries: Entries are created by setting the ipDenyProtocolMode and ipDenySrcIfIndexMode objects in one operation (i.e. on one command line). Deleting entries: Entries are deleted by setting the ipDenyProtocolMode object to 'delete'."
  },
  "ipDenyEntry": {
    "name": "ipDenyEntry",
    "oid": "1.3.6.1.4.1.272.4.5.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-OLDACCESS-MIB",
        "object": "ipDenyProtocolMode",
        "implied": 0
      },
      {
        "module": "BIANCA-BRICK-IP-OLDACCESS-MIB",
        "object": "ipDenySrcIfIndexMode",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ipDenyProtocolMode": {
    "name": "ipDenyProtocolMode",
    "oid": "1.3.6.1.4.1.272.4.5.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dont-verify": 1,
          "verify": 2,
          "delete": 3
        }
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Specifies whether or not the protocol field of the IP datagram header should be used to determine if the datagram belongs to the subset of this entry. dont-verify(1) = don't check the protocol field; verify(2) = check the protocol field; delete(3) = delete the entry from the table"
  },
  "ipDenyProtocol": {
    "name": "ipDenyProtocol",
    "oid": "1.3.6.1.4.1.272.4.5.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "icmp": 1,
          "ggp": 3,
          "tcp": 6,
          "egp": 8,
          "pup": 12,
          "udp": 17,
          "hmp": 20,
          "xns-idp": 22,
          "rdp": 27,
          "ospf": 89
        }
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "If the ipDenyProtocolMode is set to 'verify', this object specifies the protocol of IP datagrams belonging to the subset described by this entry. Otherwise, this field has no meaning."
  },
  "ipDenySrcIfIndexMode": {
    "name": "ipDenySrcIfIndexMode",
    "oid": "1.3.6.1.4.1.272.4.5.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dont-verify": 1,
          "verify": 2
        }
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object specifies whether or not the originating interface of the IP datagram should be checked to determine whether a datagram belongs to this subset."
  },
  "ipDenySrcIfIndex": {
    "name": "ipDenySrcIfIndex",
    "oid": "1.3.6.1.4.1.272.4.5.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "If ipDenySrcIfIndexMode is set to 'verify', then this object specifies the ifIndex of the datagrams belonging to the subset defined by this entry."
  },
  "ipDenySrcAddr": {
    "name": "ipDenySrcAddr",
    "oid": "1.3.6.1.4.1.272.4.5.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "If ipDenySrcIfIndexMode is set to 'verify', then this object specifies the ifIndex of the datagrams belonging to the subset defined by this entry."
  },
  "ipDenySrcMask": {
    "name": "ipDenySrcMask",
    "oid": "1.3.6.1.4.1.272.4.5.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object specifies the set of IP addresses of datagrams that belong to the subset defined by this entry."
  },
  "ipDenySrcPortMode": {
    "name": "ipDenySrcPortMode",
    "oid": "1.3.6.1.4.1.272.4.5.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ignore": 1,
          "specific": 2,
          "clients": 3,
          "server": 4,
          "unpriv": 5,
          "priv": 6
        }
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object specifies the range of source port numbers of IP datagrams belonging to this subset. ignore(1) = All ports: 0..65535; specific(2) = a specific port number i.e. ipAllowDstPort; clients(3) = client ports: 1024..4999, 32768..65535; server(4) = server ports. 0..1023, 5000..32767; unpriv(5) = unprivileged ports: 1024..65535; priv(6) = privileged ports: 0..1023"
  },
  "ipDenySrcPort": {
    "name": "ipDenySrcPort",
    "oid": "1.3.6.1.4.1.272.4.5.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "If ipDenySrcPortMode is set to 'specific', then this object contains a specific port number. Otherwise this object is not used."
  },
  "ipDenyDstAddr": {
    "name": "ipDenyDstAddr",
    "oid": "1.3.6.1.4.1.272.4.5.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object specifies the set of IP addresses of datagrams that belong to the subset defined by this entry."
  },
  "ipDenyDstMask": {
    "name": "ipDenyDstMask",
    "oid": "1.3.6.1.4.1.272.4.5.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object specifies the set of IP addresses of datagrams that belong to the subset defined by this entry."
  },
  "ipDenyDstPortMode": {
    "name": "ipDenyDstPortMode",
    "oid": "1.3.6.1.4.1.272.4.5.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ignore": 1,
          "specific": 2,
          "clients": 3,
          "server": 4,
          "unpriv": 5,
          "priv": 6
        }
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object specifies the range of destination port numbers of IP datagrams belonging to the subset. ignore(1) = All ports: 0..65535; specific(2) = a specific port number i.e. ipAllowDstPort; clients(3) = client ports: 1024..4999, 32768..65535; server(4) = server ports. 0..1023, 5000..32767; unpriv(5) = unprivileged ports: 1024..65535; priv(6) = privileged ports: 0..1023"
  },
  "ipDenyDstPort": {
    "name": "ipDenyDstPort",
    "oid": "1.3.6.1.4.1.272.4.5.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "If ipDenyDstPortMode is set to 'specific', then this object contains a specific port number. Otherwise this object is not used."
  },
  "ipDenySrcPortRange": {
    "name": "ipDenySrcPortRange",
    "oid": "1.3.6.1.4.1.272.4.5.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object can be used together with ipDenySrcPort to apply the rule to a port range, instead of a single port. When ipDenySrcPortMode is set to specific and this object is not set to -1, than the rule applies to the Range of ports from ipDenySrcPort to ipDenySrcPortRange. When this object is set to -1, the rule applies only to port ipDenySrcPort."
  },
  "ipDenyDstPortRange": {
    "name": "ipDenyDstPortRange",
    "oid": "1.3.6.1.4.1.272.4.5.2.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object can be used together with ipDenyDstPort to apply the rule to a port range, instead of a single port. When ipDenyDstPortMode is set to specific and this object is not set to -1, than the rule applies to the Range of ports from ipDenyDstPort to ipDenyDstPortRange. When this object is set to -1, the rule applies only to port ipDenyDstPort."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/BIANCA-BRICK-IP-OLDACCESS-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:43:09 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "BIANCA-BRICK-IP-OLDACCESS-MIB"
  }
}