{
  "imports": {
    "class": "imports",
    "RIVERSTONE-SMI-MIB": [
      "riverstoneMibs"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "iso",
      "Unsigned32",
      "MODULE-IDENTITY",
      "OBJECT-TYPE",
      "Gauge32",
      "IpAddress",
      "TimeTicks",
      "Counter32",
      "OBJECT-IDENTITY",
      "Integer32",
      "MibIdentifier",
      "Counter64",
      "Bits",
      "NOTIFICATION-TYPE"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "rsTCMIB": {
    "name": "rsTCMIB",
    "oid": "1.3.6.1.4.1.5567.2.10",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2002-06-17 00:00",
        "description": "Revision #2. RsQueuePolicy, RsDiscardPolicy textual conventions added. These are used by RIVERSTONE-QUEUE-MIB."
      },
      {
        "revision": "2002-03-25 00:00",
        "description": "Revision #1. Provide textual conventions used in RIVERSTONE-CONFIG-MIB. (hgr)"
      }
    ],
    "lastupdated": "200206170000Z",
    "organization": "Riverstone Networks, Inc.",
    "contactinfo": "Riverstone Networks, Inc 5200 Great America Parkway Santa Clara, CA 95054 (408) 878-6500 nms-eng@riverstonenet.com http://www.riverstonenet.com",
    "description": "This mib module defines the textual conventions used in various other Riverstone MIBs."
  },
  "RSConfigErrorCode": {
    "name": "RSConfigErrorCode",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noStatus": 1,
          "timeout": 2,
          "networkError": 3,
          "noSpace": 4,
          "invalidConfig": 5,
          "commandCompleted": 6,
          "internalError": 7,
          "tftpServerError": 8
        }
      }
    },
    "status": "current",
    "description": "A unique value, greater than zero defining the config file transfer operation completion status."
  },
  "RSFileTransferProtocol": {
    "name": "RSFileTransferProtocol",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "tftp": 2,
          "rsh": 3,
          "scp": 4
        }
      }
    },
    "status": "current",
    "description": "A unique value, greater than zero defining the protocol used for file transfer operation on config files. This list may be modified for later additions."
  },
  "RSTransferStatus": {
    "name": "RSTransferStatus",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "idle": 1,
          "sending": 2,
          "receiving": 3,
          "transferComplete": 4,
          "error": 5
        }
      }
    },
    "status": "current",
    "description": "A unique value, greater than zero defining the status of the previous transfer operation, if any."
  },
  "RSChangeSessionType": {
    "name": "RSChangeSessionType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 0,
          "other": 1,
          "console": 2,
          "telnet": 3,
          "ssh": 4,
          "snmp": 5
        }
      }
    },
    "status": "current",
    "description": "A unique value, representing the session type of the change session."
  },
  "RsQueuePolicy": {
    "name": "RsQueuePolicy",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 0,
          "priorityQueuing": 1,
          "fairQueuing": 2,
          "weightedFairQueuing": 3
        }
      }
    },
    "status": "current",
    "description": "The queuing policy for each port is by default priority queuing. In priority queuing, each flow is assigned a priority. The higher priority flows go first. Within the priority queue, the flows are serviced in a first in first out order. If the higher priority queue is never empty, the other queues would starve. In fair queuing, each priority queue is serviced in a round-robin fashion. Weighted fair queuing is fair queing for which each queue is weighted. On the RS platform, priorityQueuing is known as strict priority (SP)."
  },
  "RsDiscardPolicy": {
    "name": "RsDiscardPolicy",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 0,
          "lastInFirstOut": 1,
          "randomEarlyDetection": 2,
          "weightedRandomEarlyDetection": 3
        }
      }
    },
    "status": "current",
    "description": "The policy used by a queue to determine how frames should be dropped."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/RIVERSTONE-TC-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 15:43:52 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "RIVERSTONE-TC-MIB"
  }
}