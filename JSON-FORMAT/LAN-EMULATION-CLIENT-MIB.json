{
  "imports": {
    "class": "imports",
    "IF-MIB": [
      "ifIndex",
      "InterfaceIndex"
    ],
    "RMON-MIB": [
      "OwnerString"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "enterprises",
      "Counter32",
      "NOTIFICATION-TYPE",
      "IpAddress",
      "Bits",
      "Unsigned32",
      "TimeTicks",
      "Gauge32",
      "MODULE-IDENTITY",
      "MibIdentifier",
      "iso",
      "OBJECT-IDENTITY",
      "Counter64",
      "OBJECT-TYPE",
      "Integer32"
    ],
    "SNMPv2-SMI-v1": [
      "Counter32",
      "Integer32"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ],
    "SNMPv2-TC-v1": [
      "DisplayString",
      "MacAddress",
      "RowStatus",
      "TruthValue"
    ]
  },
  "atmForum": {
    "name": "atmForum",
    "oid": "1.3.6.1.4.1.353",
    "class": "objectidentity"
  },
  "atmForumNetworkManagement": {
    "name": "atmForumNetworkManagement",
    "oid": "1.3.6.1.4.1.353.5",
    "class": "objectidentity"
  },
  "atmfLanEmulation": {
    "name": "atmfLanEmulation",
    "oid": "1.3.6.1.4.1.353.5.3",
    "class": "objectidentity"
  },
  "leClientMIB": {
    "name": "leClientMIB",
    "oid": "1.3.6.1.4.1.353.5.3.1",
    "class": "objectidentity"
  },
  "leClientMIBObjects": {
    "name": "leClientMIBObjects",
    "oid": "1.3.6.1.4.1.353.5.3.1.1",
    "class": "objectidentity"
  },
  "lecQueryObjects": {
    "name": "lecQueryObjects",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12",
    "class": "objectidentity"
  },
  "lecMacQueryObjects": {
    "name": "lecMacQueryObjects",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.1",
    "class": "objectidentity"
  },
  "lecRDQueryObjects": {
    "name": "lecRDQueryObjects",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.2",
    "class": "objectidentity"
  },
  "leClientMIBConformance": {
    "name": "leClientMIBConformance",
    "oid": "1.3.6.1.4.1.353.5.3.1.2",
    "class": "objectidentity"
  },
  "leClientMIBGroups": {
    "name": "leClientMIBGroups",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1",
    "class": "objectidentity"
  },
  "leClientMIBCompliances": {
    "name": "leClientMIBCompliances",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.2",
    "class": "objectidentity"
  },
  "AtmLaneAddress": {
    "name": "AtmLaneAddress",
    "class": "type",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 20
          }
        ]
      }
    }
  },
  "VpiInteger": {
    "name": "VpiInteger",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    }
  },
  "VciInteger": {
    "name": "VciInteger",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    }
  },
  "LeConnectionInterface": {
    "name": "LeConnectionInterface",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    }
  },
  "LecState": {
    "name": "LecState",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "initialState": 1,
          "lecsConnect": 2,
          "configure": 3,
          "join": 4,
          "initialRegistration": 5,
          "busConnect": 6,
          "operational": 7
        }
      }
    }
  },
  "LecDataFrameFormat": {
    "name": "LecDataFrameFormat",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unspecified": 1,
          "aflane8023": 2,
          "aflane8025": 3
        }
      }
    }
  },
  "LecDataFrameSize": {
    "name": "LecDataFrameSize",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unspecified": 1,
          "max1516": 2,
          "max4544": 3,
          "max9234": 4,
          "max18190": 5,
          "max1580": 6
        }
      }
    }
  },
  "LeArpTableEntryType": {
    "name": "LeArpTableEntryType",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "learnedViaControl": 2,
          "learnedViaData": 3,
          "staticVolatile": 4,
          "staticNonVolatile": 5
        }
      }
    }
  },
  "lecConfigTable": {
    "name": "lecConfigTable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table describing all of the LAN Emulation Clients implemented by this host. Each LE Client has a row in the MIB-II/RFC 1573 Interfaces table (describing the emulated packet interface it presents to higher layers). Each LE Client also has a row in this and other LEC MIB tables (describing its interface with other LAN Emulation components). This table contains configuration variables. Three extension tables contain client status, performance statistics, and information about control/multicast VCCs. Unlike hardware ports, LE Clients can be created by management. However, the RFC 1573 Interfaces table does not directly support row creation. Therefore, creating or deleting a row in the lecConfigTable is defined to have the side effect of creating or deleting corresponding rows in - the MIB-II / RFC 1573 Interfaces table, - the 'lecMappingTable', - the 'lecStatusTable', - the 'lecServerVccTable', - the 'lecStatisticsTable', and - any other dependent tables New Interfaces table rows for LAN Emulation Clients always have 'ifAdminStatus' set to 'down'. A Note On Indexing: ------------------- Most of the tables in this MIB are indexed in whole or in part by 'lecIndex' - not by 'ifIndex'. Why is there a separate index? Traditionally, ifIndex values are chosen by agents, and are permitted to change across restarts. Using ifIndex to index lecConfigTable could complicate row creation and/or cause interoperability problems (if each agent had special restrictions on ifIndex). Having a separate index avoids these problems. "
  },
  "lecConfigEntry": {
    "name": "lecConfigEntry",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each table entry contains configuration information for one LAN Emulation Client. Most of the objects are derived from Initial State Parameters in the LAN Emulation specification."
  },
  "lecIndex": {
    "name": "lecIndex",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A value which uniquely identifies this conceptual row in the lecConfigTable. If the conceptual row identified by this value of lecIndex is recreated following an agent restart, the same value of lecIndex must be used to identify the recreated row. (However, the Interfaces table index associated with the client may change.)"
  },
  "lecRowStatus": {
    "name": "lecRowStatus",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object lets network managers create and delete LAN Emulation Clients, on systems that support this optional capability. It does not control Joins and Terminations; they are controlled by 'ifAdminStatus'. However, taking rows out of service will have the side effect of changing their 'ifAdminStatus' values to 'down', thus causing any active emulated LAN connections to be terminated. Within each conceptual lecConfigTable row, objects which are writable may be modified regardless of the value of lecRowStatus. It is not necessary to set a row's status to 'notInService' first. When creating a LAN Emulation Client, it is up to the management station to determine a suitable 'lecIndex'. To facilitate interoperability, agents should not put any restrictions on the 'lecIndex' beyond the obvious ones that it be valid and unused. If you create a LAN Emulation Client via this object, it will initially have 'ifAdminStatus' = 'down' 'ifOperStatus' = 'down' 'lecInterfaceState' = 'initialState' "
  },
  "lecOwner": {
    "name": "lecOwner",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OwnerString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The entity that configured this entry and is therefore using the resources assigned to it."
  },
  "lecConfigMode": {
    "name": "lecConfigMode",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "automatic": 1,
          "manual": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "automatic",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Sections 3.4.1.1 and 5.3",
    "status": "mandatory",
    "description": "Indicates whether this LAN Emulation Client should auto-configure the next time it is (re)started. In automatic(1) mode, a client uses a LAN Emulation Configuration Server to learn the ATM address of its LAN Emulation Server, and to obtain other parameters. lecConfig{ LanType, MaxDataFrameSize, LanName } are used in the Configure request. lecConfigLesAtmAddress is ignored. In manual(2) mode, management tells the client the ATM address of its LAN Emulation Server and the values of other parameters. lecConfig{ LanType, MaxDataFrameSize, LanName } are used in the Join request. lecConfigLesAtmAddress tells the client which LES to call."
  },
  "lecConfigLanType": {
    "name": "lecConfigLanType",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LecDataFrameFormat",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "unspecified",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C2c LAN Type (configured). The data frame format which this client will use the next time it returns to the Initial State. Auto-configuring clients use this parameter in their Configure requests. Manually-configured clients use it in their Join requests. This MIB object will not be overwritten with the new value from a LE_{JOIN,CONFIGURE}_RESPONSE. Instead, lecActualLanType will be."
  },
  "lecConfigMaxDataFrameSize": {
    "name": "lecConfigMaxDataFrameSize",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LecDataFrameSize",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "unspecified",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C3c Maximum Data Frame Size (configured). The maximum data frame size which this client will use the next time it returns to the Initial State. Auto-configuring clients use this parameter in their Configure requests. Manually-configured clients use it in their Join requests. This MIB object will not be overwritten with the new value from a LE_{JOIN,CONFIGURE}_RESPONSE. Instead, lecActualMaxDataFrameSize will be."
  },
  "lecConfigLanName": {
    "name": "lecConfigLanName",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C5c ELAN Name (configured). The ELAN Name this client will use the next time it returns to the Initial State. Auto-configuring clients use this parameter in their Configure requests. Manually-configured clients use it in their Join requests. This MIB object will not be overwritten with the new value from a LE_{JOIN,CONFIGURE}_RESPONSE. Instead, lecActualLanName will be."
  },
  "lecConfigLesAtmAddress": {
    "name": "lecConfigLesAtmAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C9 LE Server ATM Address. The LAN Emulation Server which this client will use the next time it is started in manual configuration mode. When lecConfigMode is 'automatic', there is no need to set this address, and no advantage to doing so. The client will use the LECS to find a LES, putting the auto-configured address in lecActualLesAtmAddress while leaving lecConfigLesAtmAddress alone."
  },
  "lecControlTimeout": {
    "name": "lecControlTimeout",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 10,
            "max": 300
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 30,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C7 Control Time-out. Time out period used for timing out most request/response control frame interactions, as specified elsewhere [in the LAN Emulation specification]. In LANE V2.0, this value specifies the maximum cumulative timeout for an exponential backoff algorithm. This time value is expressed in seconds."
  },
  "lecMaxUnknownFrameCount": {
    "name": "lecMaxUnknownFrameCount",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 5.1.1",
    "status": "deprecated",
    "description": "This is the LANE V1.0 version of 'C10 Maximum Unknown Frame Count'. It should not be implemented except as required for backwards compatibility. It has been deprecated because LANE V2.0 permits this parameter to take values up to 20 -- a revision which doesn't seem to be allowed under rules in RFC 1902."
  },
  "lecMaxUnknownFrameTime": {
    "name": "lecMaxUnknownFrameTime",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 60
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C11 Maximum Unknown Frame Time. Within the period of time defined by the Maximum Unknown Frame Time, a LE Client will send no more than Maximum Unknown Frame Count frames to the BUS for a given unicast LAN Destination, and it must also initiate the address resolution protocol to resolve that LAN Destination. LANE V2.0 changes this to 'will send no more than Maximum Unknown Frame Count frames to the BUS ... without initiating the [LE_ARP]', implying that a LANE V2.0 client is not always required to send a LE_ARP_REQUEST along with the unknown frames. This time value is expressed in seconds."
  },
  "lecVccTimeoutPeriod": {
    "name": "lecVccTimeoutPeriod",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 1200,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C12 VCC Time-out Period. A LE Client SHOULD release any Data Direct VCC that it has not used to transmit or receive any data frames for the length of the VCC Time-out Period. This parameter is only meaningful for SVC Data Direct VCCs signalled with the Ethernet/IEEE 802.3 LE Data Direct VCC B-LLI value or the IEEE 802.5 LE Data Direct VCC B-LLI value. It should not be used for any SVC signalled with the LLC-Multiplexed B-LLI value. This time value is expressed in seconds. The default value is 20 minutes. A value of 0 seconds means that the timeout period is infinite. Negative values will be rejected by the agent."
  },
  "lecMaxRetryCount": {
    "name": "lecMaxRetryCount",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C13 Maximum Retry Count. A LE CLient MUST not retry a LE_ARP_REQUEST for a given frame's LAN destination more than Maximum Retry Count times, after the first LE_ARP_REQUEST for that same frame's LAN destination."
  },
  "lecAgingTime": {
    "name": "lecAgingTime",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 10,
            "max": 300
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 300,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C17 Aging Time. The maximum time that a LE Client will maintain an entry for a unicast LAN Destination in its LE_ARP cache in the absence of a verification of that relationship. This time value is expressed in seconds."
  },
  "lecForwardDelayTime": {
    "name": "lecForwardDelayTime",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 4,
            "max": 30
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 15,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C18 Forward Delay Time. The maximum time that a LE Client will maintain an entry for a non-local MAC address in its LE_ARP cache in the absence of a verification of that relationship, as long as the Topology Change flag C19 is true. lecForwardDelayTime SHOULD BE less than lecAgingTime. When it is not, lecAgingTime governs LE_ARP aging. This time value is expressed in seconds."
  },
  "lecExpectedArpResponseTime": {
    "name": "lecExpectedArpResponseTime",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 30
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C20 Expected LE_ARP Reponse Time. The maximum time that the LEC expects an LE_ARP_REQUEST/ LE_ARP_RESPONSE cycle to take. Used for retries and verifies. This time value is expressed in seconds."
  },
  "lecFlushTimeOut": {
    "name": "lecFlushTimeOut",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 4,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C21 Flush Time-out. Time limit to wait to receive a LE_FLUSH_RESPONSE after the LE_FLUSH_REQUEST has been sent before taking recovery action. This time value is expressed in seconds."
  },
  "lecPathSwitchingDelay": {
    "name": "lecPathSwitchingDelay",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 8
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 6,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C22 Path Switching Delay. The time since sending a frame to the BUS after which the LE Client may assume that the frame has been either discarded or delivered to the recipient. May be used to bypass the Flush protocol. This time value is expressed in seconds."
  },
  "lecLocalSegmentID": {
    "name": "lecLocalSegmentID",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 5.1.1",
    "status": "deprecated",
    "description": "C23 Local Segment ID. The segment ID of the emulated LAN. This is only required for IEEE 802.5 clients that are Source Routing bridges. This object has been deprecated and replaced by a pair of Config/Actual objects. It shouldn't be implemented except as required for backwards compatibility."
  },
  "lecMulticastSendType": {
    "name": "lecMulticastSendType",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "bestEffort": 1,
          "variableBitRate": 2,
          "constantBitRate": 3
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C24 Multicast Send VCC Type. Signalling parameter that SHOULD be used by the LE Client when establishing the Multicast Send VCC. This is the method to be used by the LE Client when specifying traffic parameters when it sets up the Multicast Send VCC for this emulated LAN."
  },
  "lecMulticastSendAvgRate": {
    "name": "lecMulticastSendAvgRate",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C25 Multicast Send VCC AvgRate. Signalling parameter that SHOULD be used by the LE Client when establishing the Multicast Send VCC. Forward and Backward Sustained Cell Rate to be requested by LE Client when setting up Multicast Send VCC, if using Variable bit rate codings."
  },
  "lecMulticastSendPeakRate": {
    "name": "lecMulticastSendPeakRate",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C26 Multicast Send VCC PeakRate. Signalling parameter that SHOULD be used by the LE Client when establishing the Multicast Send VCC. Forward and Backward Peak Cell Rate to be requested by LE Client when setting up the Multicast Send VCC when using either Variable or Constant bit rate codings."
  },
  "lecConnectionCompleteTimer": {
    "name": "lecConnectionCompleteTimer",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 4,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C28 Connection Complete Timer. Optional. In Connection Establishment this is the time period in which data or a READY_IND message is expected from a Calling Party. This time value is expressed in seconds."
  },
  "lecConfigLecsAtmAddress": {
    "name": "lecConfigLecsAtmAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "LANE 1.0 addendum",
    "status": "mandatory",
    "description": "LE Configuration Server ATM address. A manually-configured LECS address that this client may use in its attempts at auto-configuration."
  },
  "lecInitialControlTimeout": {
    "name": "lecInitialControlTimeout",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 5,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C7i Initial Control Time-out. In LANE V2.0, control time-out consists of an initial time-out of C7i seconds, a retry multiplier (or logarithmic back-off base) of C7x, and a cumulative maximum time-out of C7 seconds."
  },
  "lecControlTimeoutMultiplier": {
    "name": "lecControlTimeoutMultiplier",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 2,
            "max": 5
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 2,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C7x Control Time-out Multiplier. In LANE V2.0, control time-out consists of an initial time-out of C7i seconds, a retry multiplier (or logarithmic back-off base) of C7x, and a cumulative maximum time-out of C7 seconds."
  },
  "lecV2MaxUnknownFrameCount": {
    "name": "lecV2MaxUnknownFrameCount",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 20
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 10,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C10 Maximum Unknown Frame Count. See the description of lecMaxUnknownFrameTime above. This object may be used with both LANE V1.0 clients & LANE V2.0 clients. For LANE V1.0 clients, this value should be in the range 1..10, with a default of 1."
  },
  "lecConfigLocalSegmentID": {
    "name": "lecConfigLocalSegmentID",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C23c Local Segment ID (configured). The segment ID of the emulated LAN. This is only required for IEEE 802.5 clients that are Source Routing bridges. A setting which this client will use the next time it returns to the Initial State. This MIB object will not be overwritten with the new value from a LE_{JOIN,CONFIGURE}_RESPONSE. Instead, lecActualLocalSegmentID will be."
  },
  "lecConfigV2Capable": {
    "name": "lecConfigV2Capable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C29c V2 Capable (configured). A setting which this client will use the next time it returns to the Initial State. Indicates whether this client is set up to behave as a LANE V2 client. This MIB object will not be overwritten with the new value from a LE_{JOIN,CONFIGURE}_RESPONSE. Instead, lecActualV2Capable will be."
  },
  "lecConfigSelectiveMulticast": {
    "name": "lecConfigSelectiveMulticast",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C32c Selective Multicast (configured). A setting which this client will use the next time it returns to the Initial State. Indicates if this client is configured to register to receive specific multicast destination MAC addresses. Must not be 'true' if lecConfigV2Capable is 'false'. This MIB object will not be overwritten with the new value from a LE_{JOIN,CONFIGURE}_RESPONSE. Instead, lecActualSelectiveMulticast will be."
  },
  "lecForwardDisconnectTimeout": {
    "name": "lecForwardDisconnectTimeout",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 10,
            "max": 300
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 60,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C33 Forward Disconnect Time-out If the LE Client detects that the BUS has had no Multicast Forward VCCs to the LE Client for time Forward Disconnect Time-out, the LE Client MUST disconnect from the BUS and try to re-establish a new connection."
  },
  "lecConfigLLCMultiplexCapable": {
    "name": "lecConfigLLCMultiplexCapable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C34c LLC Multiplex Capable (configured). A setting which this client will use the next time it returns to the Initial State. Gives a network manager an optional method to disable LLC multiplexing on a LANE V2 client that supports it. Cannot be used to enable LLC multiplexing on products that do not support it. This MIB object will not be overwritten with the new value from a LE_{JOIN,CONFIGURE}_RESPONSE. Instead, lecActualLLCMultiplexCapable will be."
  },
  "lecMinReconfigureDelay": {
    "name": "lecMinReconfigureDelay",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10000
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C37 Minimum Reconfigure Delay. The minimum time that a LE client must wait before retrying reconfiguration. This setting must be less than or equal to lecMaxReconfigureDelay."
  },
  "lecMaxReconfigureDelay": {
    "name": "lecMaxReconfigureDelay",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10000
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 5000,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C38 Maximum Reconfigure Delay. The maximum time that a LE client must wait before retrying reconfiguration. This setting must be greater than or equal to lecMinReconfigureDelay."
  },
  "lecMaxBusConnectRetries": {
    "name": "lecMaxBusConnectRetries",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C39 Maximum BUS Connect Retries. The maximum number of times that a LE Client can try to establish the Default Multicast Send VCC before returning to the configuration procedure."
  },
  "lecTokenRingExplorerExclude": {
    "name": "lecTokenRingExplorerExclude",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.1.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C40 Token Ring Explorer Frame Exclude. This indicates whether or not the LE Client wishes to receive Token Ring explorer frames other than those directed to one of its registered MAC addresses. Normally, only bridges need to receive such explorer frames. This parameter only applies to token-ring ELANs. This parameter MUST NOT change without restarting the Configure phase."
  },
  "lecStatusTable": {
    "name": "lecStatusTable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A read-only table containing identification, status, and operational information about the LAN Emulation Clients this agent manages."
  },
  "lecStatusEntry": {
    "name": "lecStatusEntry",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each table entry contains information about one LAN Emulation Client."
  },
  "lecIfIndex": {
    "name": "lecIfIndex",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object identifies the logical interface number ('ifIndex') assigned to this client, and is used to identify corresponding rows in the Interfaces MIB. Note that re-initialization of the management agent may cause a client's 'lecIfIndex' to change."
  },
  "lecPrimaryAtmAddress": {
    "name": "lecPrimaryAtmAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C1 LE Client's ATM Addresses. The primary ATM address of this LAN Emulation Client. This address is used to establish the Control Direct and Multicast Send VCCs, and may also be used to set up Data Direct VCCs. A client may have additional ATM addresses for use with Data Direct VCCs. These addresses are readable via the lecAtmAddressTable."
  },
  "lecID": {
    "name": "lecID",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65279
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C14 LE Client Identifier. Each LE Client requires a LE Client Identifier (LECID) assigned by the LE Server during the Join phase. The LECID is placed in control requests by the LE Client and MAY be used for echo suppression on multicast data frames sent by that LE Client. This value MUST NOT change without terminating the LE Client and returning to the Initial state. A valid LECID MUST be in the range X'0001' through X'FEFF'. The value of this object is only meaningful for a LEC that is connected to a LES. For a LEC which does not belong to an emulated LAN, the value of this object is defined to be 0."
  },
  "lecInterfaceState": {
    "name": "lecInterfaceState",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LecState",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.3.1",
    "status": "mandatory",
    "description": "The current state of the LAN Emulation Client. Note that 'ifOperStatus' is defined to be 'up' when, and only when, 'lecInterfaceState' is 'operational'."
  },
  "lecLastFailureRespCode": {
    "name": "lecLastFailureRespCode",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "timeout": 2,
          "undefinedError": 3,
          "versionNotSupported": 4,
          "invalidRequestParameters": 5,
          "duplicateLanDestination": 6,
          "duplicateAtmAddress": 7,
          "insufficientResources": 8,
          "accessDenied": 9,
          "invalidRequesterId": 10,
          "invalidLanDestination": 11,
          "invalidAtmAddress": 12,
          "noConfiguration": 13,
          "leConfigureError": 14,
          "insufficientInformation": 15,
          "tlvNotFound": 16
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 4.2, Table 13",
    "status": "mandatory",
    "description": "Status code from the last failed Configure response or Join response. Failed responses are those for which the LE_CONFIGURE_RESPONSE / LE_JOIN_RESPONSE frame contains a non-zero code, or fails to arrive within a timeout period. If none of this client's requests have failed, this object has the value 'none'. If the failed response contained a STATUS code that is not defined in the LAN Emulation specification, this object has the value 'undefinedError'. The value 'timeout' is self-explanatory. Other failure codes correspond to those defined in the specification, although they may have different numeric values."
  },
  "lecLastFailureState": {
    "name": "lecLastFailureState",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LecState",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.3.1",
    "status": "mandatory",
    "description": "The state this client was in when it updated the 'lecLastFailureRespCode'. If 'lecLastFailureRespCode' is 'none', this object has the value initialState(1)."
  },
  "lecProtocol": {
    "name": "lecProtocol",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 4.2",
    "status": "mandatory",
    "description": "The LAN Emulation protocol which this client supports, and specifies in its LE_JOIN_REQUESTs."
  },
  "lecVersion": {
    "name": "lecVersion",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 4.2",
    "status": "mandatory",
    "description": "The LAN Emulation protocol version which this client supports, and specifies in its LE_JOIN_REQUESTs."
  },
  "lecTopologyChange": {
    "name": "lecTopologyChange",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C19 Topology Change. Boolean indication that the LE Client is using the Forward Delay Time C18, instead of the Aging Time C17, to age non-local entries in its LE_ARP cache C16. For a client which is not connected to the LES, this object is defined to have the value 'false'."
  },
  "lecConfigServerAtmAddress": {
    "name": "lecConfigServerAtmAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The ATM address of the LAN Emulation Configuration Server (if known) or the empty string (otherwise)."
  },
  "lecConfigSource": {
    "name": "lecConfigSource",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "gotAddressViaIlmi": 1,
          "usedWellKnownAddress": 2,
          "usedLecsPvc": 3,
          "didNotUseLecs": 4,
          "usedConfiguredAddress": 5,
          "configInProgress": 6
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 5.2; LANE 1.0 and LEC MIB 1.0 addendums",
    "status": "mandatory",
    "description": "Indicates whether this LAN Emulation Client used the LAN Emulation Configuration Server, and, if so, what method it used to establish the Configuration Direct VCC. The value 'configInProgress' indicates configuration is in progress, and may be used to troubleshoot LECs that get stuck in the configuration phase."
  },
  "lecActualLanType": {
    "name": "lecActualLanType",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LecDataFrameFormat",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C2 LAN Type. The data frame format that this LAN Emulation Client is using right now. This may come from * lecConfigLanType, * the LAN Emulation Configuration Server, or * the LAN Emulation Server This value is related to 'ifMtu' and 'ifType'. See the LEC management specification for more details."
  },
  "lecActualMaxDataFrameSize": {
    "name": "lecActualMaxDataFrameSize",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LecDataFrameSize",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C3 Maximum Data Frame Size. The maximum data frame size that this LAN Emulation client is using right now. This may come from * lecConfigMaxDataFrameSize, * the LAN Emulation Configuration Server, or * the LAN Emulation Server "
  },
  "lecActualLanName": {
    "name": "lecActualLanName",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C5 ELAN Name. The identity of the emulated LAN which this client last joined, or wishes to join. This may come from * lecConfigLanName, * the LAN Emulation Configuration Server, or * the LAN Emulation Server "
  },
  "lecActualLesAtmAddress": {
    "name": "lecActualLesAtmAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C9 LE Server ATM Address. The LAN Emulation Server address currently in use or most recently attempted. If no LAN Emulation Server attachment has been tried, this object's value is the zero-length string."
  },
  "lecProxyClient": {
    "name": "lecProxyClient",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "C4 Proxy. Indicates whether this client is acting as a proxy. Proxy clients are allowed to represent unregistered MAC addresses and route descriptors, and receive copies of LE_ARP_REQUEST frames for such LAN Destinations."
  },
  "lecActualLocalSegmentID": {
    "name": "lecActualLocalSegmentID",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C23 Local Segment ID. The segment ID of the emulated LAN. This is only required for IEEE 802.5 clients that are Source Routing bridges."
  },
  "lecActualV2Capable": {
    "name": "lecActualV2Capable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C29 V2 Capable. If set, the LE Client must exhibit LANE v2 behavior where it differs in its requirements from LANE v1 behavior. If clear, the LE Client must exhibit LANE v1 behavior in those cases. This variable is set or cleared according to the presence or absence of the V2 Required FLAGS bit in the LE_JOIN_RESPONSE."
  },
  "lecElanID": {
    "name": "lecElanID",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C31 ELAN-ID. The ELAN-ID to be used in all LANE LLC-multiplexed data frames sent or received by this client. This object takes the value 0 if the LES is a LANE V1.0 LES. The initial value of this object is 0."
  },
  "lecActualSelectiveMulticast": {
    "name": "lecActualSelectiveMulticast",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C32 Selective Multicast. This indicates whether or not the LE Client will register to receive specific multicast destination MAC addresses. If this flag is set, the LE Client MUST issue a LE_REGISTER_REQUEST for all of the multicast or group MAC adddresses in C15, except for the broadcast MAC address. If this variable is clear, the LE Client MUST NOT issue a LE_REGISTER_REQUEST for any multicast MAC address, and can expect to receive all multicast frames from the BUS."
  },
  "lecActualLLCMultiplexCapable": {
    "name": "lecActualLLCMultiplexCapable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C34 LLC Multiplex Capable. If set, this variable indicates that the LE Client can accept and process LLC-multiplexed Data Direct VCCs. If clear, it indicates that the LE Client will refuse to accept LLC-multiplexed Data Direct VCCs. This variable MUST be clear if the LE Client is connected to a LANE v1 LES."
  },
  "lecPreferredLesAddress": {
    "name": "lecPreferredLesAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation V2.0 LUNI specification, Section 5.1.1",
    "status": "mandatory",
    "description": "C35 Preferred LES Address. The ATM address of the preferred LE Server. This variable is set during the Configuration phase by copying the contents of the Preferred LES TLV received in the LE_CONFIGURE_RESPONSE."
  },
  "lecStoresServiceCategories": {
    "name": "lecStoresServiceCategories",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.2.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "LAN Emulation Over ATM Version 2 - LUNI Specification, Annex A (LAN Emulation Control Frame TLVs)",
    "status": "mandatory",
    "description": "Indicates whether or not the client saves Service Category TLV data from LE_ARP_RESPONSEs and makes it available through leArpTable and leRDArpTable."
  },
  "lecMappingTable": {
    "name": "lecMappingTable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table mapping the 'ifIndex' values of 'aflane8023' and 'aflane8025' interfaces to the 'lecIndex' values of the corresponding LAN Emulation Clients."
  },
  "lecMappingEntry": {
    "name": "lecMappingEntry",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each row describes one ifIndex --> lecIndex mapping."
  },
  "lecMappingIndex": {
    "name": "lecMappingIndex",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The 'lecIndex' of the client which implements the specified interface."
  },
  "lecStatisticsTable": {
    "name": "lecStatisticsTable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "An extension table containing traffic statistics for all the LAN Emulation Clients this host implements."
  },
  "lecStatisticsEntry": {
    "name": "lecStatisticsEntry",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each row in this table contains traffic statistics for one LAN Emulation client."
  },
  "lecArpRequestsOut": {
    "name": "lecArpRequestsOut",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of LE_ARP_REQUESTs sent over the LUNI by this LAN Emulation Client."
  },
  "lecArpRequestsIn": {
    "name": "lecArpRequestsIn",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of LE_ARP_REQUESTs received over the LUNI by this LAN Emulation Client. Requests may arrive on the Control Direct VCC or on the Control Distribute VCC, depending upon how the LES is implemented and the chances it has had for learning. This counter covers both VCCs."
  },
  "lecArpRepliesOut": {
    "name": "lecArpRepliesOut",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of LE_ARP_RESPONSEs sent over the LUNI by this LAN Emulation Client."
  },
  "lecArpRepliesIn": {
    "name": "lecArpRepliesIn",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of LE_ARP_RESPONSEs received over the LUNI by this LAN Emulation Client. This count includes all such replies, whether solicited or not. Replies may arrive on the Control Direct VCC or on the Control Distribute VCC, depending upon how the LES is implemented. This counter covers both VCCs."
  },
  "lecControlFramesOut": {
    "name": "lecControlFramesOut",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of control packets sent by this LAN Emulation Client over the LUNI."
  },
  "lecControlFramesIn": {
    "name": "lecControlFramesIn",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of control packets received by this LAN Emulation Client over the LUNI."
  },
  "lecSvcFailures": {
    "name": "lecSvcFailures",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of * outgoing LAN Emulation SVCs which this client tried, but failed, to open; * incoming LAN Emulation SVCs which this client tried, but failed to establish; and * incoming LAN Emulation SVCs which this client rejected for protocol or security reasons. It does not include SVC failures for LLC-multiplexed connections."
  },
  "lecFlowFailures": {
    "name": "lecFlowFailures",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of * outgoing LLC-multiplexed LAN Emulation flows which this client tried, but failed, to open; * incoming LLC-multiplexed LAN Emulation flows which this client did not accept / establish. Only failures of which the LEC is aware and which are clearly LANE-related need to be counted."
  },
  "lecEchoDiscards": {
    "name": "lecEchoDiscards",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of incoming data frames which were thrown away because they were echo frames (e. g., copies of this client's own outgoing traffic). Such discards are a normal part of LAN Emulation and not a cause for alarm. So this counter is mainly of interest for helping to estimate average frame size. Frames that are included in this count should not be included in ifInDiscards, so as to avoid setting off false alarms."
  },
  "lecFilteredMulticasts": {
    "name": "lecFilteredMulticasts",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.4.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of incoming data frames which were thrown away by the client because they were for a multicast (or group) address upper-layer software didn't want. If this counter indicates that a LEC is being loaded down with an excessive number of unwanted multicasts, one possible solution is to install LECs and LES/BUS pairs with better support for selective multicasting. Frames that are included in this count should not be included in ifInDiscards, so as to avoid setting off false alarms."
  },
  "lecServerVccTable": {
    "name": "lecServerVccTable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table identifying the Control VCCs and Multicast VCCs for each LAN Emulation Client which this host implements. For LANE 2.0 clients, the table identifies Control VCCs and Default Multicast Send VCCs."
  },
  "lecServerVccEntry": {
    "name": "lecServerVccEntry",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each row in this table describes the Control VCCs and Multicast VCCs for one LEC."
  },
  "lecConfigDirectInterface": {
    "name": "lecConfigDirectInterface",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LeConnectionInterface",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.1.1",
    "status": "mandatory",
    "description": "The interface associated with the Configuration Direct VCC. If no Configuration Direct VCC exists, this object has the value 0. Otherwise, the objects ( lecConfigDirectInterface, lecConfigDirectVpi, lecConfigDirectVci ) identify the circuit."
  },
  "lecConfigDirectVpi": {
    "name": "lecConfigDirectVpi",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VpiInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.1.1",
    "status": "mandatory",
    "description": "If the Configuration Direct VCC exists, this object contains the VPI which identifies that VCC at the point where it connects to this LE client. Otherwise, this object has the value 0."
  },
  "lecConfigDirectVci": {
    "name": "lecConfigDirectVci",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VciInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.1.1",
    "status": "mandatory",
    "description": "If the Configuration Direct VCC exists, this object contains the VCI which identifies that VCC at the point where it connects to this LE client. Otherwise, this object has the value 0."
  },
  "lecControlDirectInterface": {
    "name": "lecControlDirectInterface",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LeConnectionInterface",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.1.2",
    "status": "mandatory",
    "description": "The interface associated with the Control Direct VCC. If no Control Direct VCC exists, this object has the value 0. Otherwise, the objects ( lecControlDirectInterface, lecControlDirectVpi, lecControlDirectVci ) identify the circuit."
  },
  "lecControlDirectVpi": {
    "name": "lecControlDirectVpi",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VpiInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.1.2",
    "status": "mandatory",
    "description": "If the Control Direct VCC exists, this object contains the VPI which identifies that VCC at the point where it connects to this LE client. Otherwise, this object has the value 0."
  },
  "lecControlDirectVci": {
    "name": "lecControlDirectVci",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VciInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.1.2",
    "status": "mandatory",
    "description": "If the Control Direct VCC exists, this object contains the VCI which identifies that VCC at the point where it connects to this LE client. Otherwise, this object has the value 0."
  },
  "lecControlDistributeInterface": {
    "name": "lecControlDistributeInterface",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LeConnectionInterface",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.1.3",
    "status": "mandatory",
    "description": "The interface associated with the Control Distribute VCC. If no Control Distribute VCC has been set up to this client, this object has the value 0. Otherwise, the objects ( lecControlDistributeInterface, lecControlDistributeVpi, lecControlDistributeVci ) identify the circuit."
  },
  "lecControlDistributeVpi": {
    "name": "lecControlDistributeVpi",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VpiInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.1.3",
    "status": "mandatory",
    "description": "If the Control Distribute VCC exists, this object contains the VPI which identifies that VCC at the point where it connects to this LE client. Otherwise, this object has the value 0."
  },
  "lecControlDistributeVci": {
    "name": "lecControlDistributeVci",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VciInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.1.3",
    "status": "mandatory",
    "description": "If the Control Distribute VCC exists, this object contains the VCI which identifies that VCC at the point where it connects to this LE client. Otherwise, this object contains the value 0."
  },
  "lecMulticastSendInterface": {
    "name": "lecMulticastSendInterface",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LeConnectionInterface",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.2.2",
    "status": "mandatory",
    "description": "The interface associated with the Multicast Send VCC. If no Multicast Send VCC exists, this object has the value 0. Otherwise, the objects ( lecMulticastSendInterface, lecMulticastSendVpi, lecMulticastSendVci ) identify the circuit."
  },
  "lecMulticastSendVpi": {
    "name": "lecMulticastSendVpi",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VpiInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.2.2",
    "status": "mandatory",
    "description": "If the Multicast Send VCC exists, this object contains the VPI which identifies that VCC at the point where it connects to this LE client. Otherwise, this object has the value 0."
  },
  "lecMulticastSendVci": {
    "name": "lecMulticastSendVci",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VciInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.2.2",
    "status": "mandatory",
    "description": "If the Multicast Send VCC exists, this object contains the VCI which identifies that VCC at the point where it connects to this LE client. Otherwise, this object has the value 0."
  },
  "lecMulticastForwardInterface": {
    "name": "lecMulticastForwardInterface",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LeConnectionInterface",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.2.3",
    "status": "mandatory",
    "description": "For a LANE V1.0 client: ----------------------- The interface associated with the Multicast Forward VCC. If no Multicast Forward VCC has been set up to this client, this object has the value 0. Otherwise, the objects ( lecMulticastForwardInterface, lecMulticastForwardVpi, lecMulticastForwardVci ) identify the circuit. For a LANE V2.0 client in LANE 2.0 mode: ---------------------------------------- The value 0. There may not be a single VCC that can be identified as the 'default'."
  },
  "lecMulticastForwardVpi": {
    "name": "lecMulticastForwardVpi",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VpiInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.2.3",
    "status": "mandatory",
    "description": "For a LANE V1.0 client: ----------------------- If the Multicast Forward VCC exists, this object contains the VPI which identifies that VCC at the point where it connects to this LE client. Otherwise, this object has the value 0. For a LANE V2.0 client in LANE 2.0 mode: ---------------------------------------- The value 0."
  },
  "lecMulticastForwardVci": {
    "name": "lecMulticastForwardVci",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.5.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VciInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0, Section 2.2.2.2.3",
    "status": "mandatory",
    "description": "For a LANE V1.0 client: ----------------------- If the Multicast Forward VCC exists, this object contains the VCI which identifies that VCC at the point where it connects to this LE client. Otherwise, this object has the value 0. For a LANE V2.0 client in LANE 2.0 mode: ---------------------------------------- The value 0."
  },
  "lecAtmAddressTable": {
    "name": "lecAtmAddressTable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table listing all of the ATM addresses belonging to this host's LAN Emulation Clients."
  },
  "lecAtmAddressEntry": {
    "name": "lecAtmAddressEntry",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecIndex",
        "implied": 0
      },
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecAtmAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each row in this table describes one of a client's ATM addresses."
  },
  "lecAtmAddress": {
    "name": "lecAtmAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The ATM address this row describes. This could be either a primary address or a secondary address."
  },
  "lecAtmAddressStatus": {
    "name": "lecAtmAddressStatus",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Used to create and delete rows in this table. A management station may not change the status of a primary ATM address to 'notInService' or 'destroy' unless the client's ifAdminStatus is 'down', and the client's lecInterfaceState is 'initialState'. Secondary ATM addresses may be destroyed at any time permitted by the agent."
  },
  "lecAtmAddressMuxed": {
    "name": "lecAtmAddressMuxed",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "muxed": 1,
          "notMuxed": 2,
          "both": 3,
          "none": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates what type(s) of connections the LEC is willing to establish at this ATM address."
  },
  "lecMacAddressTable": {
    "name": "lecMacAddressTable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "This table contains entries for all of the registered MAC addresses belonging to this agent's LE clients. For all LANE clients, this includes C6 Local Unicast MAC Address(es). Each LE Client has zero or more local unicast MAC addresses. In an operational LE Client, every address in this variable MUST have been registered with the LE Server. Two LE CLients joined to the same emulated LAN MUST NOT have the same local unicast MAC address. A LE Client's MAC addresses may change during normal operations. When answering a LE_ARP_REQUEST for any address in this list, the 'Remote Address' bit in the FLAGS field of the LE_ARP_RESPONSE MUST be clear. For a LANE V2.0 client, this also includes <registered> multicast MAC addresses in C15."
  },
  "lecMacAddressEntry": {
    "name": "lecMacAddressEntry",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.7.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecIndex",
        "implied": 0
      },
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecMacAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each table row describes a (MAC address, ATM address) pair registered for a particular client."
  },
  "lecMacAddress": {
    "name": "lecMacAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.7.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A unicast or multicast MAC address that this LEC has registered with its LES. Note that the LANE V1.0 specification does not allow V1.0 clients to register multicast addresses."
  },
  "lecMacAddressAtmBinding": {
    "name": "lecMacAddressAtmBinding",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.7.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The non-multiplexed ATM address, if any, registered for 'lecMacAddress'."
  },
  "lecMacAddressMuxedAtmBinding": {
    "name": "lecMacAddressMuxedAtmBinding",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.7.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The LLC-multiplexed ATM address, if any, registered for 'lecMacAddress'."
  },
  "lecMacAddressServiceCategory": {
    "name": "lecMacAddressServiceCategory",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.7.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "LAN Emulation Over ATM Version 2 - LUNI Specification, Annex A (LAN Emulation Control Frame TLVs)",
    "status": "mandatory",
    "description": "A bitmap describing the service categories which the LEC supports for this MAC address. The bitmap is larger than the LANE 2.0 specification requires, in case room is ever needed for expansion."
  },
  "lecRouteDescrTable": {
    "name": "lecRouteDescrTable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.8",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, V1.0 and V2.0, Section 5.1.1",
    "status": "mandatory",
    "description": "This table lists all of the Local Route Descriptors which are registered by this host's LAN Emulation Clients. C8 Local Route Descriptor(s). Local Route Descriptors exist only for source-routed IEEE 802.5 LE Clients that are Source-Route Bridges. All Local Route Descriptors in any given emulated LAN MUST be unique. A LE Client MAY have zero or more Local Route Descriptors and these Local Route Descriptors MAY change during normal operation. In an operational LE Client, every Local Route Descriptor in C8 MUST have been registered with the LE Server. When answering a LE_ARP_REQUEST for any address in this list, the 'Remote Address' bit in the FLAGS field of the LE_ARP_RESPONSE MUST be clear."
  },
  "lecRouteDescrEntry": {
    "name": "lecRouteDescrEntry",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.8.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecIndex",
        "implied": 0
      },
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecRouteDescrSegmentID",
        "implied": 0
      },
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecRouteDescrBridgeNumber",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each table row describes a (Route Descriptor, ATM address) pair registered for a particular client."
  },
  "lecRouteDescrSegmentID": {
    "name": "lecRouteDescrSegmentID",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.8.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The LAN ID portion of the IEEE 802.5 route descriptor associated with this conceptual row."
  },
  "lecRouteDescrBridgeNumber": {
    "name": "lecRouteDescrBridgeNumber",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.8.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The Bridge Number portion of the IEEE 802.5 route descriptor associated with this conceptual row."
  },
  "lecRouteDescrAtmBinding": {
    "name": "lecRouteDescrAtmBinding",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.8.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The non-multiplexed ATM address, if any, registered for the IEEE 802.5 route descriptor ('lecRouteDescrSegmentID', 'lecRouteDescrBridgeNumber')."
  },
  "lecRouteDescrMuxedAtmBinding": {
    "name": "lecRouteDescrMuxedAtmBinding",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.8.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The LLC-multiplexed ATM address, if any, registered for the IEEE 802.5 route descriptor ('lecRouteDescrSegmentID', 'lecRouteDescrBridgeNumber')."
  },
  "lecRouteDescrServiceCategory": {
    "name": "lecRouteDescrServiceCategory",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.8.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "LAN Emulation Over ATM Version 2 - LUNI Specification, Annex A (LAN Emulation Control Frame TLVs)",
    "status": "mandatory",
    "description": "A bitmap describing the service categories which the LEC supports for this route descriptor. The bitmap is larger than the LANE 2.0 specification requires, in case room is ever needed for expansion."
  },
  "leArpTable": {
    "name": "leArpTable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.9",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, Section 5.1.1",
    "status": "mandatory",
    "description": "This table provides access to an ATM LAN Emulation Client's MAC-to-ATM ARP cache. It contains entries for unicast addresses and for the broadcast address. For LANE V2.0 clients whose C32 Selective Multicast flag is set, this table will also contain multicast address entries. C16 LE_ARP Cache. A table of entries, each of which establishes a relationship between a LAN Destination external to the LE Client and the ATM address to which data frames for that LAN Destination will be sent."
  },
  "leArpEntry": {
    "name": "leArpEntry",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.9.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecIndex",
        "implied": 0
      },
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "leArpMacAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An ATM LAN Emulation ARP cache entry containing information about the binding of one MAC address to one ATM address."
  },
  "leArpMacAddress": {
    "name": "leArpMacAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.9.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The MAC address for which this cache entry provides a translation. Since ATM LAN Emulation uses an ARP protocol to locate the Broadcast and Unknown Server, the value of this object could be the broadcast MAC address. Starting with LANE Version 2.0, the value could also be a multicast or group MAC address. Unicast MAC addresses should be unique within any given ATM Emulated LAN. However, there's no requirement that they be unique across disjoint emulated LANs."
  },
  "leArpAtmAddress": {
    "name": "leArpAtmAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.9.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The non-multiplexed LE Client or Broadcast/Multicast Service ATM address corresponding to the MAC address 'leArpMacAddress'. This value may be determined through the use of the LE_ARP procedure, through source address learning, or through other mechanisms. Some agents may provide write access to this object, as part of their support for 'static' LE_ARP entries. The effect of attempting to write an ATM address to a 'learned' row is explicitly undefined. Agents may disallow the write, accept the write and change the row's type, or even accept the write as-is."
  },
  "leArpIsRemoteAddress": {
    "name": "leArpIsRemoteAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.9.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether this entry is for a local or remote MAC address. In this context, 'local' means 'a MAC address that is local to the remote client', as opposed to 'one of my addresses'. true(1) The address is believed to be remote - or its local/remote status is unknown. For an entry created via the LE_ARP mechanism, this corresponds to the 'Remote address' flag being set in the LE_ARP_RESPONSE. During Topology Change periods, remote LE_ARP entries generally age out faster than others. Specifically, they are subject to the Forward Delay Time as well as to the Aging Time. false(2) The address is believed to be local - that is to say, registered with the LES by the client whose ATM address is leArpAtmAddress (and/or leArpMuxedAtmAddress). For an entry created via the LE_ARP mechanism, this corresponds to the 'Remote address' flag being cleared in the LE_ARP_RESPONSE."
  },
  "leArpEntryType": {
    "name": "leArpEntryType",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.9.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LeArpTableEntryType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "staticVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates how this LE_ARP table entry was created and whether it is aged."
  },
  "leArpRowStatus": {
    "name": "leArpRowStatus",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.9.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Lets users create and delete LE_ARP cache entries, on systems that support this capability. Normally clients will maintain their LE_ARP caches automatically. However, managers may occasionally want to create 'static' LE_ARP cache entries. Rules 1. Before a new row can become 'active', values must be supplied for the columnar objects leArpAtmAddress and leArpEntryType. The value for leArpAtmAddress may be a zero- length address if there is an ATM address in the leArpMuxedAtmAddress, and the LE_ARP row belongs to a LEC running LANE 2.0 or higher. 2. It is not necessary to set leArpRowStatus to 'notInService' in order to modify a writable object in the same conceptual row. 3. LE_ARP entries whose status is 'notReady' or 'notInService' will not be used to translate LAN Destinations to ATM Addresses. However, clients may overwrite such entries with data obtained from other sources. For example, a client which needed to transmit a data frame to a given MAC address (or via a given Route Descriptor) might find that its LE_ARP entry for the LAN Destination is 'notInService' or 'notReady'. The client might then act as if the LAN Destination was unknown - generating a LE_ARP_REQUEST, flooding the data frame to the BUS, and creating a new, 'active' LE_ARP cache entry based on the LE_ARP_RESPONSE."
  },
  "leArpMuxedAtmAddress": {
    "name": "leArpMuxedAtmAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.9.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The LLC-multiplexed LE Client or Broadcast/Multicast Service ATM address corresponding to the MAC address 'leArpMacAddress'. This value may be determined through the use of the LE_ARP procedure, through source address learning, or through other mechanisms. Some agents may provide write access to this object, as part of their support for 'static' LE_ARP entries. The effect of attempting to write an ATM address to a 'learned' row is explicitly undefined. Agents may disallow the write, accept the write and change the row's type, or even accept the write as-is."
  },
  "leArpServiceCategory": {
    "name": "leArpServiceCategory",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.9.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "reference": "LAN Emulation Over ATM Version 2 - LUNI Specification, Annex A (LAN Emulation Control Frame TLVs)",
    "status": "mandatory",
    "description": "A bitmap describing the service categories which the LEC 'lecIndex' supports. This value normally comes from the optional 'Service- Category' TLV in LANE 2.0 LE_ARP_RESPONSEs. The bitmap is larger than the LANE 2.0 specification requires, in case room is ever needed for expansion. If service categories aren't applicable, aren't known, or the implementor does not want to provide memory to store them (e.g., because they would only be used for SNMP), this object should be set to the value 0. See also the object 'lecStoresServiceCategories'."
  },
  "leRDArpTable": {
    "name": "leRDArpTable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.10",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "ATM Forum LAN Emulation Over ATM Specification, Section 5.1.1",
    "status": "mandatory",
    "description": "This table provides access to an ATM LAN Emulation Client's Route Descriptor-to-ATM ARP cache. Implementation of this table is optional for hosts that do not support emulated IEEE 802.5 Token Ring LANs, and mandatory for hosts which do. C16 LE_ARP Cache. A table of entries, each of which establishes a relationship between a LAN Destination external to the LE Client and the ATM address to which data frames for that LAN Destination will be sent."
  },
  "leRDArpEntry": {
    "name": "leRDArpEntry",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.10.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecIndex",
        "implied": 0
      },
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "leRDArpSegmentID",
        "implied": 0
      },
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "leRDArpBridgeNumber",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An ATM LAN Emulation ARP cache entry containing information about the binding of one IEEE 802.5 route descriptor to one ATM address."
  },
  "leRDArpSegmentID": {
    "name": "leRDArpSegmentID",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.10.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The LAN ID portion of the IEEE 802.5 route descriptor associated with this ARP cache entry."
  },
  "leRDArpBridgeNumber": {
    "name": "leRDArpBridgeNumber",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.10.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The Bridge Number portion of the IEEE 802.5 route descriptor associated with this ARP cache entry."
  },
  "leRDArpAtmAddress": {
    "name": "leRDArpAtmAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.10.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The non-multiplexed ATM address of the LAN Emulation Client which is associated with the route descriptor ('leRDArpSegmentID', 'leRDArpBridgeNumber'). This value may be determined through the use of the LE_ARP procedure, through source address learning, or through other mechanisms. Some agents may provide write access to this object, as part of their support for 'static' LE_ARP entries. The effect of attempting to write an ATM address to a 'learned' row is explicitly undefined. Agents may disallow the write, accept the write and change the row's type, or even accept the write as-is."
  },
  "leRDArpEntryType": {
    "name": "leRDArpEntryType",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.10.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LeArpTableEntryType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "staticVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates how this LE_ARP table entry was created and whether it is aged."
  },
  "leRDArpRowStatus": {
    "name": "leRDArpRowStatus",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.10.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Lets users create and delete LE_ARP cache entries, on systems that support this capability. Normally clients will maintain their LE_ARP caches automatically. However, managers may occasionally want to create 'static' LE_ARP cache entries. Rules 1. Before a new row can become 'active', values must be supplied for the columnar objects leRDArpAtmAddress and leRDArpEntryType. 2. It is not necessary to set leRDArpRowStatus to 'notInService' in order to modify a writable object in the same conceptual row. 3. LE_ARP entries whose status is 'notReady' or 'notInService' will not be used to translate LAN Destinations to ATM Addresses. However, clients may overwrite such entries with data obtained from other sources. For example, a client which needed to transmit a data frame to a given MAC address (or via a given Route Descriptor) might find that its LE_ARP entry for the LAN Destination is 'notInService' or 'notReady'. The client might then act as if the LAN Destination was unknown - generating a LE_ARP_REQUEST, flooding the data frame to the BUS, and creating a new, 'active' LE_ARP cache entry based on the LE_ARP_RESPONSE."
  },
  "leRDArpMuxedAtmAddress": {
    "name": "leRDArpMuxedAtmAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.10.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The LLC-multiplexed ATM address of the LAN Emulation Client which is associated with the route descriptor ('leRDArpSegmentID', 'leRDArpBridgeNumber'). This value may be determined through the use of the LE_ARP procedure, through source address learning, or through other mechanisms. Some agents may provide write access to this object, as part of their support for 'static' LE_ARP entries. The effect of attempting to write an ATM address to a 'learned' row is explicitly undefined. Agents may disallow the write, accept the write and change the row's type, or even accept the write as-is."
  },
  "leRDArpServiceCategory": {
    "name": "leRDArpServiceCategory",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.10.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "reference": "LAN Emulation Over ATM Version 2 - LUNI Specification, Annex A (LAN Emulation Control Frame TLVs)",
    "status": "mandatory",
    "description": "A bitmap describing the service categories which the LEC 'lecIndex'supports. This value normally comes from the optional 'Service- Category' TLV in LANE 2.0 LE_ARP_RESPONSEs. The bitmap is larger than the LANE 2.0 specification requires, in case room is ever needed for expansion. If service categories aren't applicable, aren't known, or the implementor does not want to provide memory to store them (e.g., because they would only be used for SNMP), this object should be set to the value 0. See also the object 'lecStoresServiceCategories'."
  },
  "leRDArpIsRemoteDescriptor": {
    "name": "leRDArpIsRemoteDescriptor",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.10.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether this entry is for a local or remote route descriptor. In this context, 'local' means 'a route descriptor that is local to the remote client', as opposed to 'one of my route descriptors'. true(1) The route descriptor is believed to be remote - or its local/remote status is unknown. For an entry created via the LE_ARP mechanism, this corresponds to the 'Remote address' flag being set in the LE_ARP_RESPONSE. false(2) The route descriptor is believed to be local - that is to say, registered with the LES by the client whose address is leRDArpAtmAddress (and/or leRDArpMuxedATMAddress). For an entry created via the LE_ARP mechanism, this corresponds to the 'Remote address' flag being cleared in the LE_ARP_RESPONSE."
  },
  "lecMcForwardTable": {
    "name": "lecMcForwardTable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.11",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table identifying Multicast Forward VCCs for LAN Emulation Version 2.0 clients."
  },
  "lecMcForwardEntry": {
    "name": "lecMcForwardEntry",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.11.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecIndex",
        "implied": 0
      },
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecMcForwardInterface",
        "implied": 0
      },
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecMcForwardVpi",
        "implied": 0
      },
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecMcForwardVci",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each row represents one Multicast Forward VCC."
  },
  "lecMcForwardInterface": {
    "name": "lecMcForwardInterface",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.11.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LeConnectionInterface",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The interface associated with the Multicast Forward VCC."
  },
  "lecMcForwardVpi": {
    "name": "lecMcForwardVpi",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.11.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VpiInteger",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The VPI which identifies the Multicast Forward VCC at the point where it connects to the LANE client."
  },
  "lecMcForwardVci": {
    "name": "lecMcForwardVci",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.11.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VciInteger",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The VCI which identifies the Multicast Forward VCC at the point where it connects to the LANE client."
  },
  "lecMcForwardVerification": {
    "name": "lecMcForwardVerification",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.11.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "implicit": 2,
          "explicit": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether the calling address for this VCC has been verified. none - No verification implicit - Calling party address was same as BUS address explicit - Client used LE_VERIFY protocol Also serves double-duty as a 'row exists' flag."
  },
  "lecMacQueryLecIndex": {
    "name": "lecMacQueryLecIndex",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The 'lecIndex' of the LEC whose MAC address binding the network management station wants to look up. When written: Triggers a new query. When read: Identifies the last LEC queried. (This value may be 0 if there have been no queries, or if a LEC has been deleted.)"
  },
  "lecMacQueryAddress": {
    "name": "lecMacQueryAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The MAC address whose binding the network management station wants to look up. When written: Triggers a new query. (Note that the SNMP agent is free to reject multicast and broadcast addresses with a 'badValue' error.) When read: Returns the last MAC address queried, or all zeroes if lecMacQueryLecIndex is 0."
  },
  "lecMacQueryStatus": {
    "name": "lecMacQueryStatus",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "unsupported": 2,
          "local": 3,
          "remote": 4,
          "unknown": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The status of the last query - one of the following: none(1) No queries have been made; therefore, other results values are invalid. unsupported(2) Queries are not supported for this LEC. local(3) The MAC address is one of the client's local MAC addresses. remote(4) The MAC address is one of the client's remote MAC addresses. unknown(5) The MAC address does not belong (is not known to belong) to the client."
  },
  "lecMacQueryAtmAddress": {
    "name": "lecMacQueryAtmAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The non-multiplexed ATM address which this client -- i.e., client 'lecMacQueryLecIndex' -- would use in a LE_ARP_RESPONSE for 'lecMacQueryAddress'. This object is only meaningful when lecMacQueryStatus is 'localMacAddress' or 'remoteMacAddress'."
  },
  "lecMacQueryMuxedAtmAddress": {
    "name": "lecMacQueryMuxedAtmAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The LLC-multiplexed ATM address which this client -- i.e., client 'lecMacQueryLecIndex' -- would use in a LE_ARP_RESPONSE for 'lecMacQueryAddress'. This object is only meaningful when lecMacQueryStatus is 'localMacAddress' or 'remoteMacAddress'."
  },
  "lecMacQueryServiceCategory": {
    "name": "lecMacQueryServiceCategory",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "LAN Emulation Over ATM Version 2 - LUNI Specification, Annex A (LAN Emulation Control Frame TLVs)",
    "status": "mandatory",
    "description": "The Service Category TLV that this client would use in a LE_ARP_RESPONSE for 'lecMacQueryAddress'. If this client wouldn't return a Service Category TLV in the LE_ARP_RESPONSE, this object should be set to zero. The bitmap is larger than the LANE 2.0 specification requires, in case room is ever needed for expansion. This object is only meaningful when lecMacQueryStatus is 'localMacAddress' or 'remoteMacAddress'."
  },
  "lecRDQueryLecIndex": {
    "name": "lecRDQueryLecIndex",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The 'lecIndex' of the LEC whose route descriptor to ATM address binding the network management station wants to look up. When written: Triggers a new query. When read: Identifies the last LEC queried. (This value may be 0 if there have been no queries, or if a LEC has been deleted.)"
  },
  "lecRDQuerySegmentID": {
    "name": "lecRDQuerySegmentID",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The LAN ID portion of the IEEE 802.5 route descriptor whose binding the network management station wants to look up. When written: Triggers a new query. When read: Returns the LAN ID portion of the last RD queried, or 0 if lecRDQueryLecIndex is 0."
  },
  "lecRDQueryBridgeNumber": {
    "name": "lecRDQueryBridgeNumber",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The bridge number portion of the IEEE 802.5 route descriptor whose binding the network management station wants to look up. When written: Triggers a new query. When read: Returns the bridge number portion of the last RD queried, or 0 if lecRDQueryLecIndex is 0."
  },
  "lecRDQueryStatus": {
    "name": "lecRDQueryStatus",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.2.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "unsupported": 2,
          "local": 3,
          "remote": 4,
          "unknown": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The status of the last query - one of the following: none(1) No queries have been made; therefore, other results values are invalid. unsupported(2) Queries are not supported for this LEC. local(3) The route descriptor is one of the client's local route descriptors. remote(4) The route descriptor is one of the client's remote route descriptors. unknown(5) The route descriptor does not belong (is not known to belong) to the client."
  },
  "lecRDQueryAtmAddress": {
    "name": "lecRDQueryAtmAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.2.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The non-multiplexed ATM address which this client -- i.e., client 'lecRDQueryLecIndex' -- would use in a LE_ARP_RESPONSE for the route descriptor ('lecRDQuerySegmentID', 'lecRDQueryBridgeNumber'). This object is only meaningful when lecRDQueryStatus is 'local' or 'remote'."
  },
  "lecRDQueryMuxedAtmAddress": {
    "name": "lecRDQueryMuxedAtmAddress",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.2.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "AtmLaneAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The LLC-multiplexed ATM address which this client -- i.e., client 'lecRDQueryLecIndex' -- would use in a LE_ARP_RESPONSE for the route descriptor ('lecRDQuerySegmentID', 'lecRDQueryBridgeNumber'). This object is only meaningful when lecRDQueryStatus is 'local' or 'remote'."
  },
  "lecRDQueryServiceCategory": {
    "name": "lecRDQueryServiceCategory",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.12.2.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "LAN Emulation Over ATM Version 2 - LUNI Specification, Annex A (LAN Emulation Control Frame TLVs)",
    "status": "mandatory",
    "description": "The Service Category TLV that this client would use in a LE_ARP_RESPONSE for the route descriptor ('lecRDQuerySegmentID', 'lecRDQueryBridgeNumber'). If this client wouldn't return a Service Category TLV in the LE_ARP_RESPONSE, this object should be set to zero. The bitmap is larger than the LANE 2.0 specification requires, in case room is ever needed for expansion. This object is only meaningful when lecRDQueryStatus is 'local' or 'remote'."
  },
  "lecTlvTable": {
    "name": "lecTlvTable",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.13",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "LAN Emulation Over ATM Version 2 - LUNI Specification, Annex A (LAN Emulation Control Frame TLVs)",
    "status": "mandatory",
    "description": "This table provides a place for an agent to store interesting TLVs associated with o Registered LAN destinations o LE_ARP entries o Query results from the LE_ARP response group o Initialization / configuration and any other categories the ATM Forum adds. Unless otherwise stated, o Entries in this table are completely optional. o An implementation may choose to keep only the TLVs which are 'interesting' to its designers, such as MPOA TLVs in LE_ARP_RESPONSEs. o TLVs which already have their own MIB objects should not be duplicated here. o Where write / create access is allowed, it is not mandatory. Implementors should document the specific lecTlvTable features of their agent."
  },
  "lecTlvEntry": {
    "name": "lecTlvEntry",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.13.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecIndex",
        "implied": 0
      },
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecTlvSetIndex",
        "implied": 0
      },
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecTlvLanDestination",
        "implied": 0
      },
      {
        "module": "LAN-EMULATION-CLIENT-MIB",
        "object": "lecTlvIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each table row describes one TLV of a related set."
  },
  "lecTlvSetIndex": {
    "name": "lecTlvSetIndex",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.13.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "layer3Tlvs": 1,
          "actualRegTlvs": 2,
          "configRegTlvs": 3,
          "leArpTlvs": 4,
          "queryTlvs": 5
        }
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "An index which helps to identify a set of TLVs, and to indicate their purpose. The value of this index defines the interpretation and use of corresponding table rows as follows: layer3Tlvs(1) ------------- This index provides access to Layer-3-Address TLVs (Initial State variable C36) used during the Initialization phase. TLVs are stored in rows ( lecIndex, 1, LAN_Destination( all '00's ), * ) These rows may be read / created / written / deleted. actualRegTlvs(2) ---------------- This index provides access to TLVs which were used to register LAN Destinations. These TLVs are associated with entries in the lecMacAddressTable and lecRouteDescrTable and stored in rows ( lecIndex, 2, LAN_Destination( lecMacAddress ), * ) ( lecIndex, 2, LAN_Destination( lecRouteDescrSegmentID, lecRouteDescrBridgeNumber ), * ) These rows may be read or deleted, but cannot be created or modified. Most implementations are expected to make them read-only. Note that TLVs that have their own objects in the associated tables SHOULD NOT appear here. LLC-Muxed-ATM-Address & Service-Category TLVs are two examples. configRegTlvs(3) ---------------- This index provides a way to set registration TLVs for unregistered LAN Destinations. Hopefully this is not something that managers will need to do a lot. TLVs are stored in rows ( lecIndex, 3, LAN_Destination( the_LAN_destination ), * ) Note that the agent might restrict the set of LAN Destinations and TLVs that it allows; for instance, to screen out the 'V2 Capable' TLV. leArpTlvs(4) ------------ This index provides access to TLVs associated with the LE_ARP cache. These TLVs are associated with leArpTable and leRDArpTable, and stored in rows ( lecIndex, 4, LAN_Destination( leArpMacAddress ), * ) ( lecIndex, 4, LAN_Destination( leRDArpSegmentID, leRDArpBridgeNumber ), * ) Agents may allow write/create access to TLVs when the type of the associated LE_ARP entry is 'staticVolatile', 'staticNonVolatile', or 'other'. Note that TLVs that have their own objects in the associated tables SHOULD NOT appear here. LLC-Muxed-ATM-Address & Service-Category TLVs are two examples. queryTlvs(5) ------------ This index provides access to TLVs associated with the last MAC Address or Route Descriptor query. TLVs are associated with lecMacQueryObjects & lecRDQueryObjects, and stored in rows ( lecIndex, 5, LAN_Destination( lecMacQueryAddress ), * ) ( lecIndex, 5, LAN_Destination( lecRDQuerySegmentID, lecRDQueryBridgeNumber ), * ) Note that TLVs that have their own objects in the associated tables SHOULD NOT appear here. LLC-Muxed-ATM-Address & Service-Category TLVs are two examples. Additional indices may be defined by the ATM Forum as needed."
  },
  "lecTlvLanDestination": {
    "name": "lecTlvLanDestination",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.13.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The MAC address or route descriptor associated with the TLV (see the description of the lecTlvSetIndex), encoded in the fashion defined in the LANE 2.0 LUNI specification (Table 16). To recap: The first two octets indicate the LAN Destination's type: 00, 01 for a MAC address; 00, 02 for a route descriptor; 00, 00 for 'no LAN Destination'. The next six octets contain either the MAC address, or four 00 octets followed by the route descriptor, or six nulls. Note: ----- In the future, the ATM Forum may extend this field for use with other types of index values, provided that each new type of index value has a unique tag. Such extensions are NOT to be considered a 'change in semantics' that requires the deprecation of the index object and the table. Network management system implementors are advised to display values whose tags they do not recognize as (formatted) hexadecimal strings."
  },
  "lecTlvIndex": {
    "name": "lecTlvIndex",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.13.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "An arbitrary index which allows a set to contain multiple TLVs."
  },
  "lecTlvType": {
    "name": "lecTlvType",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.13.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A four-octet string indicating this item's type. It consists of a three-octet OUI, followed by an octet identifying one of the organization's TLVs."
  },
  "lecTlvValue": {
    "name": "lecTlvValue",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.13.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The value - and, implicitly, the length - of the TLV."
  },
  "lecTlvRowStatus": {
    "name": "lecTlvRowStatus",
    "oid": "1.3.6.1.4.1.353.5.3.1.1.13.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Provides a way for network managers to create and delete rows in the TLV table."
  },
  "leClientConfigGroup": {
    "name": "leClientConfigGroup",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.1",
    "class": "objectidentity"
  },
  "leClientStatusGroup": {
    "name": "leClientStatusGroup",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.2",
    "class": "objectidentity"
  },
  "leClientMappingGroup": {
    "name": "leClientMappingGroup",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.3",
    "class": "objectidentity"
  },
  "leClientStatisticsGroup": {
    "name": "leClientStatisticsGroup",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.4",
    "class": "objectidentity"
  },
  "leClientServerVccGroup": {
    "name": "leClientServerVccGroup",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.5",
    "class": "objectidentity"
  },
  "leClientAtmAddressesGroup": {
    "name": "leClientAtmAddressesGroup",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.6",
    "class": "objectidentity"
  },
  "leClientMacAddressesGroup": {
    "name": "leClientMacAddressesGroup",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.7",
    "class": "objectidentity"
  },
  "leClientRouteDescriptorsGroup": {
    "name": "leClientRouteDescriptorsGroup",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.8",
    "class": "objectidentity"
  },
  "leClientArpGroup": {
    "name": "leClientArpGroup",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.9",
    "class": "objectidentity"
  },
  "leClientRDArpGroup": {
    "name": "leClientRDArpGroup",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.10",
    "class": "objectidentity"
  },
  "leClientConfigGroupV1": {
    "name": "leClientConfigGroupV1",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.11",
    "class": "objectidentity"
  },
  "leClientConfigGroupV2": {
    "name": "leClientConfigGroupV2",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.12",
    "class": "objectidentity"
  },
  "leClientStatusGroupV2": {
    "name": "leClientStatusGroupV2",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.13",
    "class": "objectidentity"
  },
  "leClientStatisticsGroupV2": {
    "name": "leClientStatisticsGroupV2",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.14",
    "class": "objectidentity"
  },
  "leClientAtmAddressesGroupV2": {
    "name": "leClientAtmAddressesGroupV2",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.15",
    "class": "objectidentity"
  },
  "leClientMacAddressesGroupV2": {
    "name": "leClientMacAddressesGroupV2",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.16",
    "class": "objectidentity"
  },
  "leClientRouteDescriptorsGroupV2": {
    "name": "leClientRouteDescriptorsGroupV2",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.17",
    "class": "objectidentity"
  },
  "leClientArpGroupV2": {
    "name": "leClientArpGroupV2",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.18",
    "class": "objectidentity"
  },
  "leClientRDArpGroupV2": {
    "name": "leClientRDArpGroupV2",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.19",
    "class": "objectidentity"
  },
  "leClientMcForwardGroup": {
    "name": "leClientMcForwardGroup",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.20",
    "class": "objectidentity"
  },
  "leClientMacQueryGroup": {
    "name": "leClientMacQueryGroup",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.21",
    "class": "objectidentity"
  },
  "leClientRDQueryGroup": {
    "name": "leClientRDQueryGroup",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.22",
    "class": "objectidentity"
  },
  "leClientTlvGroup": {
    "name": "leClientTlvGroup",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.1.23",
    "class": "objectidentity"
  },
  "leClientMIBCompliance": {
    "name": "leClientMIBCompliance",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.2.1",
    "class": "objectidentity"
  },
  "leClientMIBCompliance2": {
    "name": "leClientMIBCompliance2",
    "oid": "1.3.6.1.4.1.353.5.3.1.2.2.2",
    "class": "objectidentity"
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/aflec201.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 15:05:33 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "LAN-EMULATION-CLIENT-MIB"
  }
}