{
  "imports": {
    "class": "imports",
    "CISCO-SMI": [
      "ciscoMgmt"
    ],
    "IF-MIB": [
      "ifIndex"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "Bits",
      "NOTIFICATION-TYPE",
      "TimeTicks",
      "Gauge32",
      "IpAddress",
      "MODULE-IDENTITY",
      "MibIdentifier",
      "Counter64",
      "OBJECT-IDENTITY",
      "Unsigned32",
      "Counter32",
      "Integer32",
      "iso",
      "OBJECT-TYPE"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ],
    "SNMPv2-TC-v1": [
      "DateAndTime",
      "RowStatus"
    ]
  },
  "ciscoBertMIB": {
    "name": "ciscoBertMIB",
    "oid": "1.3.6.1.4.1.9.9.185",
    "class": "objectidentity"
  },
  "ciscoBertMIBObjects": {
    "name": "ciscoBertMIBObjects",
    "oid": "1.3.6.1.4.1.9.9.185.1",
    "class": "objectidentity"
  },
  "ciscoBertConfig": {
    "name": "ciscoBertConfig",
    "oid": "1.3.6.1.4.1.9.9.185.1.1",
    "class": "objectidentity"
  },
  "ciscoBertMIBConformance": {
    "name": "ciscoBertMIBConformance",
    "oid": "1.3.6.1.4.1.9.9.185.8",
    "class": "objectidentity"
  },
  "ciscoBertMIBCompliances": {
    "name": "ciscoBertMIBCompliances",
    "oid": "1.3.6.1.4.1.9.9.185.8.1",
    "class": "objectidentity"
  },
  "ciscoBertMIBGroups": {
    "name": "ciscoBertMIBGroups",
    "oid": "1.3.6.1.4.1.9.9.185.8.2",
    "class": "objectidentity"
  },
  "BertPatterns": {
    "name": "BertPatterns",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "allZeros": 1,
          "allOnes": 2,
          "altOneZero": 3,
          "doubleAltOnesZeros": 4,
          "oneIn4": 5,
          "oneIn8": 6,
          "oneIn16": 7,
          "threeIn24": 8,
          "inbandLoopBackActivate": 9,
          "inbandLoopBackDeactivate": 10,
          "twoE3MinusOne": 11,
          "twoE4MinusOne": 12,
          "twoE5MinusOne": 13,
          "twoE6MinusOne": 14,
          "twoE7MinusOne": 15,
          "twoE7MinusOneFT1Loopup": 16,
          "twoE7MinusOneFT1Loopdown": 17,
          "twoE9MinusOne": 18,
          "twoE10MinusOne": 19,
          "twoE11MinusOne": 20,
          "twoE15MinusOne": 21,
          "twoE17MinusOne": 22,
          "twoE18MinusOne": 23,
          "twoE20MinusOne": 24,
          "twoE20MinusOneQRSS": 25,
          "twoE21MinusOne": 26,
          "twoE22MinusOne": 27,
          "twoE23MinusOne": 28,
          "twoE25MinusOne": 29,
          "twoE28MinusOne": 30,
          "twoE29MinusOne": 31,
          "twoE31MinusOne": 32,
          "dds1pattern": 33,
          "dds2pattern": 34,
          "dds3pattern": 35,
          "dds4pattern": 36,
          "dds5pattern": 37,
          "userPattern": 38
        }
      }
    }
  },
  "cbConfTable": {
    "name": "cbConfTable",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table contains configuration, control and status parameters for performing Bit Error Rate Test (BERT) on an interface. When cbRowStatus is 'active', ifOperStatus will be set to 'testing'."
  },
  "cbConfEntry": {
    "name": "cbConfEntry",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the BERT configuration table. An entry is created for each interface running BERT by NMS. The ifIndex refers to a unique value of an interface in the ifTable on which BERT is being run. The BERT is started or stopped as by-product of creating and deleting entries in the cbConfTable."
  },
  "cbTestPattern": {
    "name": "cbTestPattern",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "BertPatterns",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The BERT pattern to be sent and expected to be received. An implementation may choose to support only selected patterns. In some implementations, this object can not be modified when the BERT is running, i.e cbRowStatus is active(1)."
  },
  "cbUserPattern": {
    "name": "cbUserPattern",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The object used for configuring the user defined pattern for BERT. This is the fixed repeating BERT pattern sent and expected to be received when the cbTestPattern object is set to 'userPattern'. The maximum length of this pattern is 32 bits. Depending on the hardware, the patterns are transmitted with least significant first or most significant bit, until pattern length is reached. This object can not be modified when the BERT is running, i.e cbRowStatus is active(1)."
  },
  "cbBertTxPatternInv": {
    "name": "cbBertTxPatternInv",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notInverted": 1,
          "inverted": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "notInverted",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This controls inversion of the transmit BERT pattern. Possible values are : notInverted(1): Pattern is transmitted normally. inverted(2): Each Mark is replaced by Space and vice versa. For predefined BERT patterns, the value for this Object may not be modified. An implementation may choose to ignore the value of this object, for BERT patterns other than 'userPattern'. When the value is ignored, the object contains the value chosen by the underlying hardware. This object can not be modified when the BERT is running i.e cbRowStatus is active(1)."
  },
  "cbBertRxPatternInv": {
    "name": "cbBertRxPatternInv",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notInverted": 1,
          "inverted": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "notInverted",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This controls inversion of the received BERT pattern. Possible values are : notInverted(1) : Pattern received is not inverted. inverted(2) : each Mark is replaced by Space and vice versa. When set to inverted(1), the received data is inverted before being processed by the pattern detector. For predefined BERT patterns, the value for this object may not be modified. An implementation may choose to ignore the value of this object, for BERT patterns other than 'userPattern'. When the value is ignored, the object contains the value chosen by the underlying hardware. This object can not be modified when the BERT is running i.e cbRowStatus is active(1)."
  },
  "cbLoopback": {
    "name": "cbLoopback",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "farEndLineLoopback": 1,
          "remoteLineLoopback": 2,
          "localLoopback": 3,
          "farEndPayloadLoopback": 4,
          "remotePayloadLoopback": 5,
          "noLoopback": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object specifies the type of loopback established. Possible values are: farEndLineLoopback(1): This loopback occurs at the CPE upon receiving a special code from the device which initiates the loopback. Upon receiving the loop activation request code, the CPE enters a Line loop mode in which it returns the entire line back to the initiator. The CPE will continue to return the data back to the initiator until it receives loopback deactivation request code. remoteLineLoopback(3): This loopback is established at the Near-end. In this loopback the entire line is looped back to the Far-end with a) bit-sequence integrity maintained, b) no change in framing, and c) no removal of bi- polar violations. localLoopback(3): This is also known as metallic loopback. This loopback is used for checking the internal circuitry of the T3/E3, T1/E1 device. Only for physical lines. farEndPayloadLoopback(4): This loopback occurs at the CPE upon receiving a special code from the device which initiates the loopback. Upon receiving the loop activation request code, CPE enters a Payload loop mode in which it returns the Payload of the received data back to the initiator. The CPE will continue to return the data back to the initiator until it receives loopback deactivation request code. remotePayloadLoopback(5): This loopback is established at the Near-end. In this loopback the signal that is returned to the Far-end consists of the payload of the received signal (with bit sequence integrity retained) and newly generated framing information. noLoopback(6): There is no loopback established on the device. "
  },
  "cbLoopbackCode": {
    "name": "cbLoopbackCode",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "nonLatchOCUwith1": 1,
          "nonLatchOCUwithout1": 2,
          "nonLatchCSU": 3,
          "nonLatchDSU": 4,
          "latchDS0Drop": 5,
          "latchDS0Line": 6,
          "latchOCU": 7,
          "latchCSU": 8,
          "latchDSU": 9,
          "latchHL96": 10,
          "v54PN127Polynomial": 11,
          "lineInband": 12,
          "lineLoopbackESF": 13,
          "localLoopback": 14,
          "noLoopbackCode": 15,
          "payloadLoopbackESF": 16,
          "lineLoopbackFEAC": 17,
          "smartJackInband": 18
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the type of the end device and the type of loopback code used. Latching Loopback: Latching Loopback is appropriate with 64 kbit/s DS0-A rate. Once invoked by a specific activation sequence, it typically remains in effect until released by another specific code sequence. non-latching loopback: Non latching activation involves continuous transmission of loopback command codes, followed by test data interspersed with command codes. The possible values are: Note: The values 1 to 14 are for farEndLoopback. cbLoopback object is farEndLoopback(1) when these values are selected. nonLatchOCUwithOneDevice(1): Non-latching OCU with one device. nonLatchOCUwithChainDevices(2): Non-latching OCU with chain of devices. nonLatchCSU(3) : Non-latching CSU. nonLatchDSU(4) : Non-latching DSU. latchDS0Drop(5) : Latching DS0-DP Drop device. latchDS0Line(6) : Latching DS0-DP line device. latchOCU(7) : Latching OCU. latchCSU(8) : Latching CSU. latchDSU(9) : Latching DSU. latchHL96(10) : Latching HL96 device. v54PN127Polynomial(11) : For fractional T1. This loopback is based on CCITT-ITU V.54 and is being used to place either a single DS0 or a DS0 Bundle(N*DS0) in loopback mode. lineInband(12) : This is used for loopback the entire T1 line at the far end. This is a repeating 5-bit pattern(00001). lineLoopbackESF(13): This loopback result in a full 1.544Mbit/s loopback of the incoming signal at the far end. The loopback is activated (latched) and deactivated by a bit sequence defined in ANSI T1.403 - 1995. This corresponds to Facility Data Link (FDL)loopbacks on a T1 channel. This causes a repeating,16-bit ESF data link code word(00001110 11111111) to the remote end requesting that it enter into a network line loopback. localLoopback(14): This is for loop back at the near end (facility end). This is used to test the internals of the device, the interface loops back the outbound traffic from SRM to SM, back to the SRM, hence testing the internal device connectivity. noLoopbackCode(15): This is for situations, where no loopback is needed for bert tests. One example is manual loop back at near or far end. payloadLoopbackESF(16): This loopback results in 1.536 Mbit/s loopback of the payload of the incoming signal at the far end. The loopback is activated (latched) and deactivated by a bit sequence defined in ANSI T1.403 - 1995. This corresponds to Facility Data Link (FDL)loopbacks on a T1 channel. This causes a repeating, 16-bit ESF data link code word(00010100 11111111) to the remote end requesting that it enter into a network payload loopback. lineLoopbackFEAC(17): Use the FEAC channel to establish a line loopback. smartJackInband(18): Inband loop code for SmartJack (a Telco owned device that represents the demarcation point of T1 service), Ref: TR-TSY-000312."
  },
  "cbSingleBitErrorInsert": {
    "name": "cbSingleBitErrorInsert",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noError": 1,
          "insertError": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "noError",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object is used for inserting single bit error in the transmitted BERT pattern. The possible values are: noError(1) : do not insert single bit errors insertError(2) : insert single bit errors. "
  },
  "cbErrorInsertionRate": {
    "name": "cbErrorInsertionRate",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noError": 1,
          "oneInTen": 2,
          "oneInHundred": 3,
          "oneInThousand": 4,
          "oneInTenThousand": 5,
          "oneInHundredThousand": 6,
          "oneInMillion": 7,
          "oneInTenMillion": 8
        }
      }
    },
    "default": {
      "default": {
        "value": "noError",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object is used for injecting continuous errors into transmitted BERT pattern. The errors are inserted in a BERT pattern sent, in order to do sanity check on receive interface in the event that no bit errors are detected. Injecting errors allows users to stress communication links and to check the functionality of error monitoring equipment along the path. Once set to send continuous errors, errors will be inserted at the configured rate until set to noError(1). The possible values are : noError(1) : no bit errors are inserted. oneInTen(2) : insert bit errors at the rate of 1 bit error per 10 bits (10^-1) transmitted. oneInHundred(3) : insert bit errors at the rate of 1 bit error per 100 bits (10^-2) transmitted. oneInThousand(4): insert bit errors at the rate of 1 bit error per 1000 bits (10^-3) transmitted. oneIn10Thousand(5): insert bit errors at the rate of 1 bit error per 10000 (10^-4) bits transmitted. oneInHundredThousand(6): insert bit errors at the rate of 1 bit error per 100000 bits (10^-5) transmitted. oneInMillion(7): insert bit errors at the rate of 1 bit error per 1000000 bits (10^-6) transmitted. oneInTenMillion(8): insert bit errors at the rate of 1 bit error per 10,000,000 (10^-7)bits transmitted. "
  },
  "cbDuration": {
    "name": "cbDuration",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 86400
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the duration for which BERT is to be run. "
  },
  "cbOperStatus": {
    "name": "cbOperStatus",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "success": 1,
          "inSync": 2,
          "outOfSync": 3,
          "inLoopback": 4,
          "clockOutOfSync": 5,
          "bertFailed": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object shows the status of BERT in the shelf. The values for this object are valid only when cbRowStatus contains active(1). Possible values for this object: success(1) : BERT is successfully completed. inSync(2) : BERT is activated and receive side is synchronized with the incoming sequence of patterns. outOfSync(3) : BERT is activated, but receive is out of synchronization with the incoming sequence. Criteria for out of synchronization state is defined in ITU document O.150. inLoopback(4): loopback establish or de-establish in progress. The type of loopback can be determined by cbLoopback. clockOutOfSync(5): When the send and receive clocks are not synchronized. bertFailed(6): BERT failed. The cbFailedReason object contains the reason for the failure."
  },
  "cbFailedReason": {
    "name": "cbFailedReason",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "aborted": 1,
          "loopbackFailed": 2,
          "interfaceStateChange": 3,
          "processorModuleStateChange": 4,
          "unknown": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object contains the reason for the BERT failure. This object gives the additional information when cbOperStatus is set to bertFailed(6). The possible values are : aborted(1) : BERT test is completed as a result of a user request. loopbackFailed(2) : loop up operation failed. interfaceStateChange(3) : interface State changed due to module state change. processorModuleStateChange(4) : Processor module changed state. unknown(5) : Failure Reason Unknown. "
  },
  "cbStartDateAndTime": {
    "name": "cbStartDateAndTime",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Date and Time when the last BERT testing is started on the interface. This object is valid only when cbRowStatus is active(1). "
  },
  "cbDS0DPCodeIteration": {
    "name": "cbDS0DPCodeIteration",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Valid only with cbLoopbackCode = latchDS0Drop. DSP-OP devices can be cross connected in the central office in a daisy chain. By this, the user has capability to put any of the devices in the chain in loopback mode. A value of 1 results in no iteration and will cause the very first device in chain to go into loop back. A value of 2 will result into one iteration and will cause the second device to go into loopback and so on. This tests the channels across multiple devices connected in a chain. "
  },
  "cbRowStatus": {
    "name": "cbRowStatus",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of this conceptual row. This object is used for create or modify or deleting an entry from this table. To create a row in this table, a manager must set this object to either createAndGo(4) or createAndWait(5). Until instances of all corresponding columns are appropriately configured, the value of the corresponding instance of the cbRowStatus is notReady(3). An entry can be deleted by setting this object to destroy(6). STARTING BERT: Two approaches: 1. set this object to createAndGo(4) with all the mandatory objects set to valid values. 2. Set this object to createAndWait(4). Reading this object at this stage returns notReady(3). Set all the other required objects with valid values. Set this object to active(1). STOP/RESTART BERT: The BERT can be stopped by setting this object to notInService(2). After setting it to notInService(2), some parameters can be modified and BERT can be started by setting this object to active(1). STOP BERT: An entry can be deleted by setting this object to destroy(6). Deleting an entry stops the BERT test. "
  },
  "cbStatsTable": {
    "name": "cbStatsTable",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table contains BERT related real time counters. Counters in this table are reset to zero every time BERT is started on this interface. "
  },
  "cbStatsEntry": {
    "name": "cbStatsEntry",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Any entry in BERT statistic table. For each instances of cbConfTable there will be an entry in the cbStatsTable. The objects in this table are valid only if cbOperStatus is inSync(2). "
  },
  "cbTxBitCountLower": {
    "name": "cbTxBitCountLower",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of bits transmitted."
  },
  "cbTxBitCountUpper": {
    "name": "cbTxBitCountUpper",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times the associated cbTxBitCountLower object has wrapped (i.e. restarted from zero)."
  },
  "cbHCTxBitCounts": {
    "name": "cbHCTxBitCounts",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of bits transmitted. This object is a 64-bit version of cbTxBitCounts. "
  },
  "cbRxBitCountLower": {
    "name": "cbRxBitCountLower",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of bits received. "
  },
  "cbRxBitCountUpper": {
    "name": "cbRxBitCountUpper",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times the associated cbRxBitCountLower counter has wrapped (i.e. restarted from zero)."
  },
  "cbHCRxBitCounts": {
    "name": "cbHCRxBitCounts",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of bits received. This object is 64-bit version of cbRxBitCounts. "
  },
  "cbRxBitErrCountLower": {
    "name": "cbRxBitErrCountLower",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of bit errors detected in the received pattern. "
  },
  "cbRxBitErrCountUpper": {
    "name": "cbRxBitErrCountUpper",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times the associated cbRxBitErrCountLower counter has wrapped (i.e. restarted from zero)."
  },
  "cbHCRxBitErrCounts": {
    "name": "cbHCRxBitErrCounts",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bit errors detected in the received pattern. This is the 64-bit version of cbRxBitErrCounts. "
  },
  "cbSyncLossCounts": {
    "name": "cbSyncLossCounts",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This is the count of number of times that synchronization has been lost since the BERT was started or restarted. "
  },
  "cbPatternLossCounts": {
    "name": "cbPatternLossCounts",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of 1 second intervals during the BER test in which pattern synchronization was not maintained for the entire second. "
  },
  "cbFrameLossCounts": {
    "name": "cbFrameLossCounts",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of 1 second intervals during the BER test in which frame synchronization was not maintained for the entire second. "
  },
  "cbESsCounts": {
    "name": "cbESsCounts",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of 1 second interval during the BER test that at least one bit error was detected in the received data pattern. "
  },
  "cbSESsCounts": {
    "name": "cbSESsCounts",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of 1 second intervals during the BER test that the Bit Error Rate was greater than 10^-3. "
  },
  "cbEFSsCounts": {
    "name": "cbEFSsCounts",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of 1 second intervals during the BER test that there were not errors detected and pattern synchronization was maintained. "
  },
  "cbErrorInjectCounts": {
    "name": "cbErrorInjectCounts",
    "oid": "1.3.6.1.4.1.9.9.185.1.1.2.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object contains the number of times error was injected."
  },
  "ciscoBertConfigGroup": {
    "name": "ciscoBertConfigGroup",
    "oid": "1.3.6.1.4.1.9.9.185.8.2.1",
    "class": "objectidentity"
  },
  "ciscoBertLoopbackGroup": {
    "name": "ciscoBertLoopbackGroup",
    "oid": "1.3.6.1.4.1.9.9.185.8.2.2",
    "class": "objectidentity"
  },
  "ciscoBertStatsGroup": {
    "name": "ciscoBertStatsGroup",
    "oid": "1.3.6.1.4.1.9.9.185.8.2.3",
    "class": "objectidentity"
  },
  "ciscoBertHCStatsGroup": {
    "name": "ciscoBertHCStatsGroup",
    "oid": "1.3.6.1.4.1.9.9.185.8.2.4",
    "class": "objectidentity"
  },
  "ciscoBertMIBCompliance": {
    "name": "ciscoBertMIBCompliance",
    "oid": "1.3.6.1.4.1.9.9.185.8.1.1",
    "class": "objectidentity"
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/CISCO-BERT-MIB-V1SMI.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 17:51:55 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "CISCO-BERT-MIB"
  }
}