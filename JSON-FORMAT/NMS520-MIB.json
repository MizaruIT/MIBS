{
  "imports": {
    "class": "imports",
    "DDS-MIB": [
      "dsu"
    ],
    "GDCCMN-MIB": [
      "gdc"
    ],
    "GDCMACRO-MIB": [
      "SCinstance"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "iso",
      "TimeTicks",
      "Bits",
      "Counter64",
      "NOTIFICATION-TYPE",
      "OBJECT-IDENTITY",
      "Gauge32",
      "MODULE-IDENTITY",
      "OBJECT-TYPE",
      "IpAddress",
      "Counter32",
      "Integer32",
      "MibIdentifier",
      "Unsigned32"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "nms520": {
    "name": "nms520",
    "oid": "1.3.6.1.4.1.498.8.2",
    "class": "objectidentity"
  },
  "nms520MIBversion": {
    "name": "nms520MIBversion",
    "oid": "1.3.6.1.4.1.498.8.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 5,
            "max": 5
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the version of the MIB. The format of the version is x.yzT, where 'x' identifies the major revision number, 'y' identifies the minor revision number, 'z' identifies the typographical revision, and T identifies the test revision. Acceptable values for the individual revision components are as follows: x: 1 - 9 y: 0 - 9 z: 0 - 9 T: A - Z Upon formal release, no designation for the test revision will be present."
  },
  "nms520UnitCfgTable": {
    "name": "nms520UnitCfgTable",
    "oid": "1.3.6.1.4.1.498.8.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The NMS520 Unit Configuration table. This table augments the GDC SC5520 Unit Configuration table, providing unit level configuration for each NMS520 device installed. For each entry in the GDC SC Unit Configuration table that represents an NMS520, there is a corresponding entry here whereby the value of the gdcSCunitCfgIndex object is equivalent to the value of the nms520unitCfgIndex object."
  },
  "nms520UnitCfgEntry": {
    "name": "nms520UnitCfgEntry",
    "oid": "1.3.6.1.4.1.498.8.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NMS520-MIB",
        "object": "nms520UnitCfgIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The NMS520 Unit Configuration table entry. The information in this entry augments the information in the corresponding entry in the GDC SC Unit Configuration table and provides unit level configuration for the installed NMS520."
  },
  "nms520UnitCfgIndex": {
    "name": "nms520UnitCfgIndex",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SCinstance",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index value which uniquely identifies the NMS520 to which this entry is applicable. This has the form of a SCinstance which defines the slot, line, and drop of the NMS520 with no sub-identifier value."
  },
  "nms520Nms510CompatibilityMode": {
    "name": "nms520Nms510CompatibilityMode",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 1,
          "enabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The NMS510 compatibility mode. This mode allows the NMS520 to behave in a manner compatible with that of the NMS510 in a DDSI multipoint circuit. If this object has the value enabled(2), then the device can be used in conjunction with an NMS510. A value of disabled(1) implies that the device is not backwardly compatible with the NMS510."
  },
  "nms520PtToPtSentryTime": {
    "name": "nms520PtToPtSentryTime",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The Point to point sentry time nms520PtToPtSentryTime, is used to control the amount of time between unsolicited alarm responses from a remote unit in a point to point application when there are no alarm conditions to report. This unsolicited response maintains the management link between the two units. These alarm responses are intrusive to data. The range is from 1 minute to 127 minutes, with 60 minutes being the default value. The value of 0(zero) minutes will disable remote alarm sentry reporting."
  },
  "nms520AlarmHystTime": {
    "name": "nms520AlarmHystTime",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 127
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The Alarm hysterysis time nms520AlarmHystTime, is used to control the amount of time a remote must wait between reporting unsolicited alarm conditions. A remote will send an unsolicited alarm response at the time of the first alarm. If second alarm occurs the remote will wait for the time specified by this object before it will send another alarm response. This time applies for both point to point and multipoint applications. The range is from 1 second to 127 seconds, with 10 seconds being the default value."
  },
  "nms520MtpointRmRspIntrvl": {
    "name": "nms520MtpointRmRspIntrvl",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The multipoint remote response interval nms520MtpointRmRspIntrvl, is used to control the amount of time between unsolicited alarm responses from a remote unit in a multipoint applications when there are no alarm conditions to report. This unsolicited response maintains the management link between the two units. The range is from 1 second to 127 seconds with 10 seconds being the default value. The value of 0(zero) seconds is disable remote alarm sentry reporting. All remotes in a multipoint application must be set the same. These alarm responses are non-intrusive to data."
  },
  "nms520DtePortType": {
    "name": "nms520DtePortType",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "rs232": 1,
          "v35": 2,
          "auto": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The value auto(3), indicates that the DTE port is automatically being detected, and set. The rs232(1), will force the DTE port to EIA/TIA-232-E, and v35(2), will force the DTE port to V.35."
  },
  "nms520DteCtsDelay": {
    "name": "nms520DteCtsDelay",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ctsOn": 1,
          "cts0mSec": 2,
          "ctsFixed3Char": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "RTS/CTS Delay options ctsOn(1) Forces both RTS and CTS On regardless of the state of the attached business equipment (the transmitter is On regardless of the status of the RTS interface lead). MIB object nms520DteCtsDelayExt is ignored. cts0mSec(2) Provides zero bits of delay between active RTS and CTS being set to active. MIB object nms520DteCtsDelayExt must be set to ext0mSec(1). ctsFix3Char(3) Provides three character bits of delay between active RTS and CTS being set to active. MIB object nms520DteCtsDelayExt must be set to ext0mSec(1)."
  },
  "nms520DteCtsDelayExt": {
    "name": "nms520DteCtsDelayExt",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ext0mSec": 1,
          "ext30mSec": 2,
          "ext60mSec": 3,
          "ext90mSec": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "RTS/CTS Delay options extension ext0mSec(1) Used to enable options cts0mSec(2) or ctsFix3Char(3) from MIB object nms520DteCtsDelay. ext30mSec(2) Provides 30 msec of delay between active RTS and CTS being set to active. MIB object nms520DteCtsDelay must be set for either cts0mSec(2) or ctsFix3Char(3). ext60mSec(3) Provides 60 msec of delay between active RTS and CTS being set to active. MIB object nms520DteCtsDelay must be set for either cts0mSec(2) or ctsFix3Char(3). ext90mSec(4) Provides 90 msec of delay between active RTS and CTS being set to active. MIB object nms520DteCtsDelay must be set for either cts0mSec(2) or ctsFix3Char(3)."
  },
  "nms520FirmwareLevel": {
    "name": "nms520FirmwareLevel",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 2,
            "max": 2
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The version number of the firmware, to allow products to know which revision is installed. The released version number is sequenced from --, A-, ... AA, ... ZZ. Test versions are numerical from 01 to 99."
  },
  "nms520DaisyChainBps": {
    "name": "nms520DaisyChainBps",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "bps75": 1,
          "bps9600": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates the data rate at which the management data is sent/received when the gdcNmsManagementSource is daisyChain(4)."
  },
  "nms520AlarmCfgCountWindow": {
    "name": "nms520AlarmCfgCountWindow",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The DDS Alarm Threshold Alarm Interval. It specifies the amount of time in minutes, 1 to 15 minutes, in which the threshold setting is to be exceeded for the alarm to occur. There is one Alarm Interval for all five alarms that require thresholds: nms520JitterAlm, nms520BpvAlm, nms520FrameLossAlm, nms520SignalToNoiseAlm and nms520RxSignalLowAlm. "
  },
  "nms520SoftReset": {
    "name": "nms520SoftReset",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "reset": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object will cause software reset in dataset."
  },
  "nms520FrontPanelInhibit": {
    "name": "nms520FrontPanelInhibit",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fpInhibited": 1,
          "fpEnabled": 2,
          "execute": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Inhibits all front panel test switches. If a test switch is activated while inhibited it will simply be ignored. If enabled via the nms520FrontPanelEnable object the test switch will function as normal."
  },
  "nms520FrontPanelEnable": {
    "name": "nms520FrontPanelEnable",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fpInhibited": 1,
          "fpEnabled": 2,
          "execute": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enables all front panel test switches. If a test switch is activated while inhibited, via the nms520FrontPanelInhibit object, it will simply be ignored. If enabled the test switch will function as normal."
  },
  "nms520HdlcInvert": {
    "name": "nms520HdlcInvert",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "invert": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Primary data invert option. Will enhance the quality of data when network does not provide B8Z5. Primarily used with DDS II 56k"
  },
  "nms520PiggyBackDetect": {
    "name": "nms520PiggyBackDetect",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "not-installed": 1,
          "installed": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "If set to 2 then either a Data Rate Adadaptor or 530 card is installed."
  },
  "nms520UnitType": {
    "name": "nms520UnitType",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "singleHeight": 1,
          "withIFP": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "with IFP(2) means that the unit has a LCD configurable display. single-height(1) means that the unit does NOT have a LCD configurable display."
  },
  "nms520ExtPortCtrlOut1": {
    "name": "nms520ExtPortCtrlOut1",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This option sets the external output state (on/off) of the current network element and displays the external output."
  },
  "nms520ExtPortCtrlOut2": {
    "name": "nms520ExtPortCtrlOut2",
    "oid": "1.3.6.1.4.1.498.8.2.2.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This option sets the external output state (on/off) of the current network element and displays the external output."
  },
  "nms520AlarmData": {
    "name": "nms520AlarmData",
    "oid": "1.3.6.1.4.1.498.8.2.4",
    "class": "objectidentity"
  },
  "nms520NoResponseAlm": {
    "name": "nms520NoResponseAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.1",
    "class": "objectidentity"
  },
  "nms520DiagRxErrAlm": {
    "name": "nms520DiagRxErrAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.2",
    "class": "objectidentity"
  },
  "nms520PowerUpAlm": {
    "name": "nms520PowerUpAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.3",
    "class": "objectidentity"
  },
  "nms520EEChkSumErrAlm": {
    "name": "nms520EEChkSumErrAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.4",
    "class": "objectidentity"
  },
  "nms520StcLoopbackAlm": {
    "name": "nms520StcLoopbackAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.5",
    "class": "objectidentity"
  },
  "nms520NoNtwkLoopCurrentAlm": {
    "name": "nms520NoNtwkLoopCurrentAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.6",
    "class": "objectidentity"
  },
  "nms520LinePairsReversedAlm": {
    "name": "nms520LinePairsReversedAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.7",
    "class": "objectidentity"
  },
  "nms520NoSignalAlm": {
    "name": "nms520NoSignalAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.8",
    "class": "objectidentity"
  },
  "nms520FpTestAlm": {
    "name": "nms520FpTestAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.9",
    "class": "objectidentity"
  },
  "nms520StreamingAlm": {
    "name": "nms520StreamingAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.10",
    "class": "objectidentity"
  },
  "nms520DSRLossAlm": {
    "name": "nms520DSRLossAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.11",
    "class": "objectidentity"
  },
  "nms520DTRLossAlm": {
    "name": "nms520DTRLossAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.12",
    "class": "objectidentity"
  },
  "nms520DTPLossAlm": {
    "name": "nms520DTPLossAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.13",
    "class": "objectidentity"
  },
  "nms520DCDLossAlm": {
    "name": "nms520DCDLossAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.14",
    "class": "objectidentity"
  },
  "nms520RXDLossAlm": {
    "name": "nms520RXDLossAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.15",
    "class": "objectidentity"
  },
  "nms520TXDLossAlm": {
    "name": "nms520TXDLossAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.16",
    "class": "objectidentity"
  },
  "nms520TmShortedAlm": {
    "name": "nms520TmShortedAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.17",
    "class": "objectidentity"
  },
  "nms520DcdShortedAlm": {
    "name": "nms520DcdShortedAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.18",
    "class": "objectidentity"
  },
  "nms520DsrShortedAlm": {
    "name": "nms520DsrShortedAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.19",
    "class": "objectidentity"
  },
  "nms520CtsShortedAlm": {
    "name": "nms520CtsShortedAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.20",
    "class": "objectidentity"
  },
  "nms520RxdShortedAlm": {
    "name": "nms520RxdShortedAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.21",
    "class": "objectidentity"
  },
  "nms520RxcShortedAlm": {
    "name": "nms520RxcShortedAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.22",
    "class": "objectidentity"
  },
  "nms520TxcShortedAlm": {
    "name": "nms520TxcShortedAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.23",
    "class": "objectidentity"
  },
  "nms520DBURequestForScanAlm": {
    "name": "nms520DBURequestForScanAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.24",
    "class": "objectidentity"
  },
  "nms520DBUOnalm": {
    "name": "nms520DBUOnalm",
    "oid": "1.3.6.1.4.1.498.8.2.4.25",
    "class": "objectidentity"
  },
  "nms520DBUFailedAlm": {
    "name": "nms520DBUFailedAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.26",
    "class": "objectidentity"
  },
  "nms520NoDSUResponseAlm": {
    "name": "nms520NoDSUResponseAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.27",
    "class": "objectidentity"
  },
  "nms520NoDTEPollingAlm": {
    "name": "nms520NoDTEPollingAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.28",
    "class": "objectidentity"
  },
  "nms520JitterAlm": {
    "name": "nms520JitterAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.29",
    "class": "objectidentity"
  },
  "nms520BpvAlm": {
    "name": "nms520BpvAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.30",
    "class": "objectidentity"
  },
  "nms520FrameLossAlm": {
    "name": "nms520FrameLossAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.31",
    "class": "objectidentity"
  },
  "nms520SignalToNoiseAlm": {
    "name": "nms520SignalToNoiseAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.32",
    "class": "objectidentity"
  },
  "nms520RxSignalLowAlm": {
    "name": "nms520RxSignalLowAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.33",
    "class": "objectidentity"
  },
  "nms520ExtInputChangeAlm": {
    "name": "nms520ExtInputChangeAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.34",
    "class": "objectidentity"
  },
  "nms520ExtInputLowAlm": {
    "name": "nms520ExtInputLowAlm",
    "oid": "1.3.6.1.4.1.498.8.2.4.35",
    "class": "objectidentity"
  },
  "nms520AlarmCfgTable": {
    "name": "nms520AlarmCfgTable",
    "oid": "1.3.6.1.4.1.498.8.2.8",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The GDC NMS520 Alarm Configuration Table."
  },
  "nms520AlarmCfgEntry": {
    "name": "nms520AlarmCfgEntry",
    "oid": "1.3.6.1.4.1.498.8.2.8.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NMS520-MIB",
        "object": "nms520AlarmCfgIndex",
        "implied": 0
      },
      {
        "module": "NMS520-MIB",
        "object": "nms520AlarmCfgIdentifier",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the GDC NMS520 alarm Configuration table."
  },
  "nms520AlarmCfgIndex": {
    "name": "nms520AlarmCfgIndex",
    "oid": "1.3.6.1.4.1.498.8.2.8.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SCinstance",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object is the index of the NMS520 Alarm Threshold Configuration table."
  },
  "nms520AlarmCfgIdentifier": {
    "name": "nms520AlarmCfgIdentifier",
    "oid": "1.3.6.1.4.1.498.8.2.8.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The unique alarm identifier assigned to this alarm type. The format of this identifier is an OBJECT IDENTIFIER that has the following format: {iso(1) org(3) dod(6) internet(1) private(4) enterprises(1) gdc(498) xxx(x) alarm(z) yyy(y) where xxx(x) is the administratively assigned family object identifier (z) is the object identifier for alarms in the family defined MIB and yyy(y) is the administratively assigned alarm type identifier for this alarm."
  },
  "nms520AlarmCfgThreshold": {
    "name": "nms520AlarmCfgThreshold",
    "oid": "1.3.6.1.4.1.498.8.2.8.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -50,
            "max": 99
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This function sets/reads the alarm threashold settings criteria. This threshold is used along with the alarm window to determine the number of instances in a given time frame for an alarm to occur before the alarm is considered active. Alarm Table Entry Threshold Range Defaults ------------------ -------------------- -------------- -------- Jitter nms520JitterAlm 0 to 99 % 9 % Bipolar Violations nms520BpvAlm 0 to 99 Count 10 Frame Loss nms520FrameLossAlm 0 to 99 Count 10 Signal to Noise Ratio nms520SignalToNoiseAlm 0 to 50 0 Receive Level Low nms520RxSignalLowAlm -50 to 6 dB -33 dB"
  },
  "nms520LineStatsTable": {
    "name": "nms520LineStatsTable",
    "oid": "1.3.6.1.4.1.498.8.2.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The DDS Line Statistics table."
  },
  "nms520LineStatsEntry": {
    "name": "nms520LineStatsEntry",
    "oid": "1.3.6.1.4.1.498.8.2.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NMS520-MIB",
        "object": "nms520LineStatsIndex",
        "implied": 0
      },
      {
        "module": "NMS520-MIB",
        "object": "nms520LineStatsInterval",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the DDS Line Statistics Table."
  },
  "nms520LineStatsIndex": {
    "name": "nms520LineStatsIndex",
    "oid": "1.3.6.1.4.1.498.8.2.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SCinstance",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "nms520LineStatsInterval": {
    "name": "nms520LineStatsInterval",
    "oid": "1.3.6.1.4.1.498.8.2.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The DDS Line Statistics Interval. It specifies the amount of time in minutes (1 to 15 minutes) the unit will use to report statistical information. The unit will record statictics every minute and hold that information for 15 minutes. Past statistics can read from 1 to 15 minutes ago. A time must be specified to read any object in the ms520LineStatsTable. "
  },
  "nms520LineStatsTxInterpretation": {
    "name": "nms520LineStatsTxInterpretation",
    "oid": "1.3.6.1.4.1.498.8.2.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "noSignal": 2,
          "notAvailable": 3,
          "overRange": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object will report the status of the line measurements, for the selected period. If noSignal(2), it will indicate that there is no receive signal availible. If notAvailable(3), it will indicate that the measurements have not completed. And if overRange(4), will indicate that the measurements taken are over measument the range. "
  },
  "nms520LineStatsTxLevel": {
    "name": "nms520LineStatsTxLevel",
    "oid": "1.3.6.1.4.1.498.8.2.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "txLevel0dB": 1,
          "txLevel6dB": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Will report the transmit Level of the line to be 0dB txLevel0dB(1), or 6dB txLevel6dB(2) as measured by the unit X minutes ago (1 to 15 miniutes) as specified by nms520LineStatsInterval. "
  },
  "nms520LineStatsRxLevel": {
    "name": "nms520LineStatsRxLevel",
    "oid": "1.3.6.1.4.1.498.8.2.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -50,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object will report the receive level measured at X minutes ago (1 to 15 miniutes) as specified by nms520LineStatsInterval. The range is between the -50dB to +6dB."
  },
  "nms520LineStatsSignalToNoiseRatio": {
    "name": "nms520LineStatsSignalToNoiseRatio",
    "oid": "1.3.6.1.4.1.498.8.2.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 50
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object will the report the signal to noise ratio measured X minutes ago(1 to 15 miniutes) as specified by nms520LineStatsInterval. The range is from 0 to 50, for the selected period. The value is absolute. "
  },
  "nms520LineStatsSignalQuality": {
    "name": "nms520LineStatsSignalQuality",
    "oid": "1.3.6.1.4.1.498.8.2.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "good": 1,
          "fair": 2,
          "bad": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object will the report the signal quality of the line measured X minutes ago (1 to 15 miniutes) as specified by nms520LineStatsInterval."
  },
  "nms520LineStatsJitter": {
    "name": "nms520LineStatsJitter",
    "oid": "1.3.6.1.4.1.498.8.2.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 99
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object will the report the percent jitter of the line measured X minutes ago (1 to 15 miniutes) as specified by nms520LineStatsInterval. The range is 0% to 99% Jitter."
  },
  "nms520LineStatsBpvCount": {
    "name": "nms520LineStatsBpvCount",
    "oid": "1.3.6.1.4.1.498.8.2.5.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 99
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object will the report the number of bipolar violation that have occured over the last X minutes (1 to 15 minutes). The range is from 0 to 99 violations. "
  },
  "nms520LineStatsFrameLossCount": {
    "name": "nms520LineStatsFrameLossCount",
    "oid": "1.3.6.1.4.1.498.8.2.5.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 99
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object will the report the numbrt of frame losses that have occured over the last X minutes (1 to 15 minutes). The range is from 0 to 99 frame losses. "
  },
  "nms520DiagCfgTable": {
    "name": "nms520DiagCfgTable",
    "oid": "1.3.6.1.4.1.498.8.2.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The NMS520 Unit Diagonostic table. "
  },
  "nms520DiagCfgEntry": {
    "name": "nms520DiagCfgEntry",
    "oid": "1.3.6.1.4.1.498.8.2.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NMS520-MIB",
        "object": "nms520DiagCfgIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The NMS520 Unit Diagonostic table entry. "
  },
  "nms520DiagCfgIndex": {
    "name": "nms520DiagCfgIndex",
    "oid": "1.3.6.1.4.1.498.8.2.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SCinstance",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index value which uniquely identifies the NMS520 to which this entry is applicable. This has the form of a SCinstance which defines the slot, line, and drop of the NMS520 with no sub-identifier value."
  },
  "nms520DiagSendCode": {
    "name": "nms520DiagSendCode",
    "oid": "1.3.6.1.4.1.498.8.2.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "sendOtherPattern": 1,
          "send511Pattern": 2,
          "send2047Pattern": 3,
          "send15BitPattern": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Configures the selftest pattern to be run during any diagonostic test involving selftest. If option SendOtherPattern is selected, then pattern will default to 15 bit if unit is set for 56k-DDS/sc-multi point else pattern will default to 511 bit for all other conditions"
  },
  "nms520DiagTestExceptions": {
    "name": "nms520DiagTestExceptions",
    "oid": "1.3.6.1.4.1.498.8.2.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noExceptions": 1,
          "blocksOutOfRange": 2,
          "bitsOutOfRange": 3,
          "blocksAndBitsOutOfRange": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates exceptions that have occurred that may affect interpretation of the test results. The value of this object is a sum. This sum initially take the value zero. Then, for each exception, the value associated with the exception is added to the sum. The exception values are: value exception 0 No errors 1 bit over range 2 block over range 4 bit and block over range"
  },
  "nms520DiagBitErrors": {
    "name": "nms520DiagBitErrors",
    "oid": "1.3.6.1.4.1.498.8.2.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The bit errors of the last diagnostic test that involved a Selftest pattern. Reading bit errors while a diagnostic test in running will cause the unit to drop out of test and invalidate the bit errors. Bit errors should be read only after the test is completed. The valid range for bit errors is 0 to 1,023, 65535 will be returned if for any reason the test was terminated early."
  },
  "nms520DiagBlockErrors": {
    "name": "nms520DiagBlockErrors",
    "oid": "1.3.6.1.4.1.498.8.2.6.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The block errors of the last diagnostic test that involved a Selftest pattern. Reading block errors while a diagnostic test in running will cause the unit to drop out of test and invalidate the block errors. Block errors should be read only after the test is completed. The valid range for block errors is 0 to 1,023, 65535 will be returned if for any reason the test was terminated early."
  },
  "nms520DiagTestReset": {
    "name": "nms520DiagTestReset",
    "oid": "1.3.6.1.4.1.498.8.2.6.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "diagnostic": 2,
          "resetTest": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object will halt the execution of any and all diagnostic test that may be running with the exception of the Network Delay Test."
  },
  "nms520DiagTimeDelay": {
    "name": "nms520DiagTimeDelay",
    "oid": "1.3.6.1.4.1.498.8.2.6.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 16383
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object reads the results of a Network Delay Test. The results are valid only after the test is completed which takes about 10 seconds. The unit for time delay is in miliseconds. The valid range for delay is 0 to 4096, 16383 will be returned if for any reason the test was terminated early. Reading this object while a test is in progress will terminate the test."
  },
  "nms520DiagExcTable": {
    "name": "nms520DiagExcTable",
    "oid": "1.3.6.1.4.1.498.8.2.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The NMS520 Unit Diagonostic table. "
  },
  "nms520DiagExcEntry": {
    "name": "nms520DiagExcEntry",
    "oid": "1.3.6.1.4.1.498.8.2.7.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "NMS520-MIB",
        "object": "nms520DiagExcIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The NMS520 Unit Diagonostic table entry. "
  },
  "nms520DiagExcIndex": {
    "name": "nms520DiagExcIndex",
    "oid": "1.3.6.1.4.1.498.8.2.7.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SCinstance",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index value which uniquely identifies the NMS520 to which this entry is applicable. This has the form of a SCinstance which defines the slot, line, and drop of the NMS520 with no sub-identifier value."
  },
  "nms520DiagExtLineloop": {
    "name": "nms520DiagExtLineloop",
    "oid": "1.3.6.1.4.1.498.8.2.7.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "lineloopOff": 1,
          "lineloopOn": 2,
          "external": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Lineloop (or Analoop) can be either a Bilaterial or Unilaterial loopback depending on option ddsDteTermaloop. To initiate a Lineloop with no Selftest SET this object and specifiy external, this will allow the data from the DTE to looped back to itself. Emun external(3) is write only. The only valid response to a READ is lineloopOn(2) or lineloopOff(1). To halt this test you must SET the nms520DiagTestReset object. Reading test results via the sc5520DiagBitErrors or nms520DiagBlockErrors objects while the test is running will also cause the test to terminate. There are no test results associated with this test. "
  },
  "nms520DiagIntLineloop": {
    "name": "nms520DiagIntLineloop",
    "oid": "1.3.6.1.4.1.498.8.2.7.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "lineloopOff": 1,
          "lineloopOn": 2,
          "blocks1": 3,
          "blocks10": 4,
          "blocks100": 5,
          "blocks500": 6,
          "blocks1000": 7,
          "blocks5000": 8,
          "blocks10000": 9,
          "blocks50000": 10
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Lineloop (or Analoop) can be either a Bilaterial or Unilaterial loopback depending on option ddsDteTermaloop. To initiate a Lineloop with Selftest SET this object and specifiy a blocksize. The blocksize indicates the number of blocks the Selftest pattern generator will run. There are 1000 bits/block. Emuns 3 through 10 are write only. The only valid responses to a READ are lineloopOn(2) or lineloopOff(1). This test will terminate after the specified number of blocks have been run. Reading test results via the nms520DiagBitErrors or nms520DiagBlockErrors objects while the test is running will cause the test to terminate prematurely and render the results invalid. Test results should be only read after the test is completed. The current Test Status can be obtained by reading this object or the nms520DiagTestStatus object on the unit under test. This test can also be terminated by seting the nms520DiagTestReset object. "
  },
  "nms520DiagIntDataloop": {
    "name": "nms520DiagIntDataloop",
    "oid": "1.3.6.1.4.1.498.8.2.7.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dataloopOff": 1,
          "dataloopOn": 2,
          "blocks1": 3,
          "blocks10": 4,
          "blocks100": 5,
          "blocks500": 6,
          "blocks1000": 7,
          "blocks5000": 8,
          "blocks10000": 9,
          "blocks50000": 10
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "To initiate a Dataloop with Selftest SET this object and specifiy a blocksize. The nms520 (the remote) unit will go into Dataloop and the master (the sc5520) unit will go into Selftest. The blocksize indicates the number of blocks the Selftest pattern generator will run. There are 1000 bits/block. Emuns 3 through 10 are write only. The only valid responses to a READ are dataloopOn(2) or dataloopOff(1). This test will terminate after the specified number of blocks have been run. Reading test results via the nms520DiagBitErrors or nms520DiagBlockErrors objects while the test is running will cause the test to terminate prematurely and render the results invalid. Test results should be read only after the test is completed and are available from the master (sc5520) unit. The current Test Status can be obtained by reading the sc5520DiagTestStatus object on the master unit, reading test status on the remote unit may interfere with the diagonostic test pattern and cause errors. This test can also be terminated by seting the nms520DiagTestReset object. "
  },
  "nms520DiagEndToEndSelftest": {
    "name": "nms520DiagEndToEndSelftest",
    "oid": "1.3.6.1.4.1.498.8.2.7.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "endToEndOff": 1,
          "endToEndOn": 2,
          "blocks1": 3,
          "blocks10": 4,
          "blocks100": 5,
          "blocks500": 6,
          "blocks1000": 7,
          "blocks5000": 8,
          "blocks10000": 9,
          "blocks50000": 10
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "To initiate an End to End Selftest(Error Rate Test) SET this object and specifiy a blocksize. Both the remote (nms520) amd master (sc5520) units will go into Selftest. The blocksize indicates the number of blocks the Selftest pattern generator will run. There are 1000 bits/block. Emuns 3 through 10 are write only. The only valid responses to a READ are selftestOn(2) or selftestOff(1). This test will terminate after the specified number of blocks have been run. Reading test results via the nms520DiagBitErrors or nms520DiagBlockErrors objects while the test is running will cause the test to terminate prematurely and render the results invalid. Test results should be read only after the test is completed and are available from both the remote (nms520) and master (sc5520) units. The current Test Status can be obtained by reading the sc5520DiagTestStatus object on the master unit, reading test status on the remote unit may interfere with the diagonostic test patternand cause errors. This test can also be terminated by seting the nms520DiagTestReset object. "
  },
  "nms520DiagNetworkDelay": {
    "name": "nms520DiagNetworkDelay",
    "oid": "1.3.6.1.4.1.498.8.2.7.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "delayTestOff": 1,
          "delayTestOn": 2,
          "runDelayTest": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "To initiate a Network Delay test SET this object and specifiy runDelayTest. Both the remote (nms520) and master (sc5520) units will go into a test to measure network delay. Emun 3 is write only. The only valid responses to a READ are delayTestOn(2) or delatTestOff(1). This test will terminate after 10 seconds. Reading test results via the nms520DelayTime object while the test is running will cause the test to terminate prematurely and render the results invalid. Test results should be read only after the test is completed and are available from the master (sc5520) unit. The current Test Status can be obtained by reading the sc5520DiagTestStatus object on the master unit, reading test status on the remote unit may interfere with the test and cause errors. This test can not be terminated early once it is started."
  },
  "nms520DiagTestStatus": {
    "name": "nms520DiagTestStatus",
    "oid": "1.3.6.1.4.1.498.8.2.7.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noTest": 1,
          "internalLineloop": 2,
          "externalDataloop": 3,
          "internalDataloop": 4,
          "serviceTestCenterLoop": 5,
          "endToend": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object gives the current diagonostic test status. noTest indicates that no diagonostic test is currently active. Reading this object while in a diagonostic test involing two units may interfere with a selftest pattern and invalidate the test results. Reading the sc5520DiagTestStatus (master unit) object during dagonostic tests involing two unit will not disrupt the test results. "
  },
  "nms520DiagExtDataloop": {
    "name": "nms520DiagExtDataloop",
    "oid": "1.3.6.1.4.1.498.8.2.7.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dataloopOff": 1,
          "dataloopOn": 2,
          "external": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "To initiate a Dataloop test with no Selftest SET this object and specifiy external, this will allow the data from the DTE attached to the far end unit (sc5520) to looped back to itself. Emun external(3) is write only. The only valid response to a READ is dataloopOn(2) or dataloopOff(1). To halt this test you must SET the nms520DiagTestReset object. Reading test results via the nms520DiagBitErrors or nms520DiagBlockErrors objects while the test is running will also cause the test to terminate. There are no test results associated with this test. Reading test status on the remote unit via nms520DiagTestStatus may interfere with the diagonostic test pattern generated from the terminal equiptment. "
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/NMS520-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:26:48 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "NMS520-MIB"
  }
}