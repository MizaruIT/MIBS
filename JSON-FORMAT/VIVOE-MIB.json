{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "OBJECT-GROUP",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "Bits",
      "OBJECT-IDENTITY",
      "Integer32",
      "iso",
      "enterprises",
      "IpAddress",
      "NOTIFICATION-TYPE",
      "MibIdentifier",
      "TimeTicks",
      "Counter32",
      "MODULE-IDENTITY",
      "OBJECT-TYPE",
      "Gauge32",
      "Unsigned32",
      "Counter64"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION",
      "MacAddress"
    ]
  },
  "vivoeMIB": {
    "name": "vivoeMIB",
    "oid": "1.3.6.1.4.1.35990.3.1",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2012-02-16 13:24",
        "description": "Issue 2, published in Def Stan 00-82 Part 1 Issue 2. Summary of corrections and additions: 1. DisplayString textual conventions modified to only allow printable characters. 2. deviceMibVersion description updated to reflect the new version number. 3. New ethernetIfIpAddressConflict object replacing the ethernetIfMtu object. 4. New deviceNatoStockNumber, deviceMode and deviceReset objects added. 5. Ranges added to the bit depth, FPS and SAP message interval objects in the video format and channel control tables. 6. New videoFormatColorimetry object added to the preset video format table. 7. New compression, ROI and RPT payload type objects added to the video format table to support default configuration start-up. 8. channelReset object allows one or more channels to be reset independently from the rest of the device. 9. channelStatus object includes single frame mode. 10. New channelColorimetry object added. 11. channelCompressionFactor changed to read-only access and loaded from videoFormatTable when setting channel. 12. New ROI bottom and right extent objects added with changes to resolution and ROI objects to support decimation and interpolation of ROIs, and scaling and cropping of display images. 13. New channelDefaultVideoFormatIndex and channelDefaultReceiveIpAddress objects added to support default configuration start-up. 14. Notification objects added for device errors and IP address conflicts. 15. Conformance group replace with groups to identify preset objects, channel configuration objects, maintenance mode objects and volatile objects."
      },
      {
        "revision": "2010-11-04 15:53",
        "description": "Initial version, published in Def Stan 00-82 Issue 1."
      }
    ],
    "lastupdated": "201202161324Z",
    "organization": "Defence Equipment and Support (DE&S) Land Equipment",
    "contactinfo": "Portfolio and Programme Support Team Defence Equipment and Support (DE&S) Land Equipment UK Ministry of Defence Email: desle-defstans@mod.uk",
    "description": "The private MIB module definition for the management and control of devices in a digital video architecture compliant with the Vetronics Infrastructure for Video Over Ethernet (VIVOE) Defence Standard. The MIB is defined in Appendix A of Def Stan 00-82 Part 1 Issue 2."
  },
  "DisplayString16": {
    "name": "DisplayString16",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "displayhint": "16a",
    "status": "current",
    "description": "This data type shall conform to the NVT ASCII character set, as defined in RFC 854, but shall be limited to only the displayable characters and shall exclude 0x00 (NUL), 0x0A (CR) and 0x0D (LF). It is based on the SNMPv2-TC DisplayString type limited to 16 displayable characters."
  },
  "DisplayString32": {
    "name": "DisplayString32",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 32
          }
        ]
      }
    },
    "displayhint": "32a",
    "status": "current",
    "description": "This data type shall conform to the NVT ASCII character set, as defined in RFC 854, but shall be limited to only the displayable characters and shall exclude 0x00 (NUL), 0x0A (CR) and 0x0D (LF). It is based on the SNMPv2-TC DisplayString type limited to 32 displayable characters."
  },
  "DisplayString64": {
    "name": "DisplayString64",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 64
          }
        ]
      }
    },
    "displayhint": "64a",
    "status": "current",
    "description": "This data type shall conform to the NVT ASCII character set, as defined in RFC 854, but shall be limited to only the displayable characters and shall exclude 0x00 (NUL), 0x0A (CR) and 0x0D (LF). It is based on the SNMPv2-TC DisplayString type limited to 64 displayable characters."
  },
  "desle": {
    "name": "desle",
    "oid": "1.3.6.1.4.1.35990",
    "class": "objectidentity"
  },
  "desleProducts": {
    "name": "desleProducts",
    "oid": "1.3.6.1.4.1.35990.3",
    "class": "objectidentity"
  },
  "deviceInfo": {
    "name": "deviceInfo",
    "oid": "1.3.6.1.4.1.35990.3.1.1",
    "class": "objectidentity"
  },
  "deviceDesc": {
    "name": "deviceDesc",
    "oid": "1.3.6.1.4.1.35990.3.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A textual description of the main function of the device, i.e. whether it is a colour camera, a sensor interface or a display interface etc."
  },
  "deviceManufacturer": {
    "name": "deviceManufacturer",
    "oid": "1.3.6.1.4.1.35990.3.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString64",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A textual name for the manufacturer of the device."
  },
  "devicePartNumber": {
    "name": "devicePartNumber",
    "oid": "1.3.6.1.4.1.35990.3.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The manufacturer's part number for the device."
  },
  "deviceSerialNumber": {
    "name": "deviceSerialNumber",
    "oid": "1.3.6.1.4.1.35990.3.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The serial number of the device."
  },
  "deviceHardwareVersion": {
    "name": "deviceHardwareVersion",
    "oid": "1.3.6.1.4.1.35990.3.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString16",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The hardware version of the device, if applicable."
  },
  "deviceSoftwareVersion": {
    "name": "deviceSoftwareVersion",
    "oid": "1.3.6.1.4.1.35990.3.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString16",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The software version of the device, if applicable."
  },
  "deviceFirmwareVersion": {
    "name": "deviceFirmwareVersion",
    "oid": "1.3.6.1.4.1.35990.3.1.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString16",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The firmware version of the device, if applicable."
  },
  "deviceMibVersion": {
    "name": "deviceMibVersion",
    "oid": "1.3.6.1.4.1.35990.3.1.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString16",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The MIB version implemented on the device. For this version of MIB the object shall be set to 'Issue 2' by the SNMP agent on the device."
  },
  "deviceType": {
    "name": "deviceType",
    "oid": "1.3.6.1.4.1.35990.3.1.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "serviceProvider": 1,
          "serviceUser": 2,
          "both": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The basic functionality of the device, whether it is a service provider (a transmitter, camera etc.) or a service user (receiver, display etc). If the device can be both a service provider and user (e.g. an image processor) the object value shall be 'both'."
  },
  "deviceUserDesc": {
    "name": "deviceUserDesc",
    "oid": "1.3.6.1.4.1.35990.3.1.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString64",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A textual description assigned by the user or the system integrator to uniquely identify the device in a system, e.g. rear driving camera, image processor etc. The object can be set (when the device is in the maintenance mode) by a manager to allow the description to be changed when the device is moved or its function reconfigured. The new value shall only become active after a reset or reboot."
  },
  "ethernetIfNumber": {
    "name": "ethernetIfNumber",
    "oid": "1.3.6.1.4.1.35990.3.1.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of Ethernet network interfaces on the device that communicate with the VIVOE system. Up to 255 interfaces may be supported."
  },
  "ethernetIfTable": {
    "name": "ethernetIfTable",
    "oid": "1.3.6.1.4.1.35990.3.1.1.12",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of Ethernet network interfaces on the device that communicate with the VIVOE system. The number of entries is specified by ethernetIfNumber."
  },
  "ethernetIfEntry": {
    "name": "ethernetIfEntry",
    "oid": "1.3.6.1.4.1.35990.3.1.1.12.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "VIVOE-MIB",
        "object": "ethernetIfIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table of Ethernet network interfaces on the device. A row in this table cannot be created or deleted by SNMP operations on columns in the table. The interface in the first column in the table shall be designated the primary interface."
  },
  "ethernetIfIndex": {
    "name": "ethernetIfIndex",
    "oid": "1.3.6.1.4.1.35990.3.1.1.12.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The index for each entry in the table of Ethernet network interfaces on the device. The index value range shall be from 1 to the number of entries is specified by ethernetIfNumber."
  },
  "ethernetIfSpeed": {
    "name": "ethernetIfSpeed",
    "oid": "1.3.6.1.4.1.35990.3.1.1.12.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "Mbps",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum speed of the Ethernet interface in Mbps (e.g. for a Gigabit Ethernet interface the value would be 1000). This figure shall not necessary reflect the actual link speed that the interface is running at if auto- negotiation has been undertaken. The actual speed for the link can be obtained from the switch port the interface is connected to."
  },
  "ethernetIfMacAddress": {
    "name": "ethernetIfMacAddress",
    "oid": "1.3.6.1.4.1.35990.3.1.1.12.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The MAC address of the Ethernet interface represented as a string of 6 octets as defined in SNMPv2-TC (i.e. a MAC address of 01:02:03:F4:F5:F6 shall be stored as 0x010203F4F5F6). A unique address shall be assigned by the device manufacturer."
  },
  "ethernetIfIpAddress": {
    "name": "ethernetIfIpAddress",
    "oid": "1.3.6.1.4.1.35990.3.1.1.12.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This is the statically assigned IP address of the interface on the device. An SNMP manager may change the IP address (if the device is in the maintenance mode) but the new value shall only become active after a reset or reboot. Def Stan 00-82 specifies the ranges from which the IP address shall be selected. The first entry in the table shall be designated as the primary interface with subsequent entries designated as secondary interfaces in a multi-interface device. All SNMP control on the device shall be undertaken using the primary interface. There is no requirement for the addresses of secondary interfaces to be on the same subnet as the primary address as long as the subnet masks are configured correctly. If the device is a service provider the last byte of the primary IP address shall also be used as the last byte of the multicast IP address that the device transmits on, as defined in Def Stan 00-82 Part 1."
  },
  "ethernetIfSubnetMask": {
    "name": "ethernetIfSubnetMask",
    "oid": "1.3.6.1.4.1.35990.3.1.1.12.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This is the subnet mask associated with the IP address of this interface. The value of the mask is an IP address with all the network bits set to 1 and all the host bits set to 0. The valid subnet masks are defined in Def Stan 00-82 Part 1. An SNMP manager may change the subnet mask (if the device is in the maintenance mode) but the new value shall only become active after a reset or reboot."
  },
  "ethernetIfIpAddressConflict": {
    "name": "ethernetIfIpAddressConflict",
    "oid": "1.3.6.1.4.1.35990.3.1.1.12.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "If the device detected conflicting IP addresses on power up or after reset it shall store the last conflicting address in this object. The object shall be sent during the IP address conflict notification procedure and shall be reset to 0.0.0.0 (when in the maintenance mode) by a manager when the notification is acknowledged."
  },
  "deviceNatoStockNumber": {
    "name": "deviceNatoStockNumber",
    "oid": "1.3.6.1.4.1.35990.3.1.1.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The NATO stock number (NSN) of the device."
  },
  "deviceMode": {
    "name": "deviceMode",
    "oid": "1.3.6.1.4.1.35990.3.1.1.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "defaultStartUp": 2,
          "maintenanceMode": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object shall be used to set the mode of the device. 1 - In the normal mode the device shall boot into a 'stopped' state and . The device shall require the channelStatus object to be set to 'start' to initiate transmission or reception of a video stream. 2 - In the default configuration start-up mode the device shall boot into a pre-defined state e.g. a service provider may automatically start transmitting a pre- defined video format or a service user may be set-up to receive a pre-defined video stream. 3 - In the maintenance mode the objects listed in the maintenanceModeGroup may be set to perform maintenance and configuration tasks on the device."
  },
  "deviceReset": {
    "name": "deviceReset",
    "oid": "1.3.6.1.4.1.35990.3.1.1.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "reset": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object can be used to initiate a reboot or reset on the device and thus enable a currently disabled video format. 1 - Normal denotes that the device is in running mode. 2 - Setting this object to 2 initiates the reboot or reset. When the device has rebooted this object shall be reset to 1 by the device."
  },
  "videoFormatInfo": {
    "name": "videoFormatInfo",
    "oid": "1.3.6.1.4.1.35990.3.1.2",
    "class": "objectidentity"
  },
  "videoFormatNumber": {
    "name": "videoFormatNumber",
    "oid": "1.3.6.1.4.1.35990.3.1.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of distinct video formats supported by the device. Up to 255 video formats may be supported."
  },
  "videoFormatTable": {
    "name": "videoFormatTable",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of all the distinct video formats supported by the device. The number of entries is specified by videoFormatNumber."
  },
  "videoFormatEntry": {
    "name": "videoFormatEntry",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table of distinct video formats supported by the device. A row in this table cannot be created or deleted by SNMP operations on columns of the table. The objects in the row can be read to determine the video formats supported and the capabilities of the device. This information can be used to determine how to control the device using the objects in channelTable."
  },
  "videoFormatIndex": {
    "name": "videoFormatIndex",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The index for each entry in the table of distinct video formats supported by the device. The index value range shall be from 1 to the number of entries is specified by videoFormatNumber."
  },
  "videoFormatType": {
    "name": "videoFormatType",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "videoChannel": 1,
          "roi": 2,
          "serviceUser": 3,
          "rawData": 4,
          "other": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The main function of the format. The types defined are: 1 - A service provider format supporting full frame video. 2 - A service provider format supporting a Region of Interest (ROI). 3 - The format is a service user format. 4 - The format is a data format using the mechanisms defined in Appendix E of Def Stan 00-82 Part 1. 5 - The format is an undefined, system specific type."
  },
  "videoFormatStatus": {
    "name": "videoFormatStatus",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object denotes whether the video format described in this entry in the table is currently enabled or disabled. The status types defined are: 1 - Enabled denotes that the video format can be used by a channel without the device needing to be reset or rebooted. A channel can therefore simply be set-up to start transmitting or receiving this video format by a manager. 2 - Disabled denotes that to use this video format the device will need to be reset or rebooted after a manager has set a channel to use the format. The channel video format shall be set using the channelVideoFormatIndex object. The device shall be reset or rebooted using either the deviceReset or channelReset objects, as appropriate. The status and performance of the channel cannot be guaranteed after it has been set to this video format until a reset or reboot has been undertaken."
  },
  "videoFormatBase": {
    "name": "videoFormatBase",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString16",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The basic video format for this entry. For uncompressed video this shall be set to 'raw' and for compressed video, the compression scheme used will be designated using the relevant IANA MIME media type specifier from the RTP payload format name (e.g. jpeg2000, H264)."
  },
  "videoFormatSampling": {
    "name": "videoFormatSampling",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString16",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The video pixel sampling format for this entry. This shall be the same as the 'sampling' parameter from the SDP description (e.g. YCbCr-4:2:2, RGB, GRAYSCALE). If not required (e.g. the format is MPEG-4 compressed) the value shall be 'none'."
  },
  "videoFormatBitDepth": {
    "name": "videoFormatBitDepth",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of bits used to encode a pixel or series of pixels for this entry. This shall be the same as the 'depth' parameter from the SDP mapping description. If not required (e.g. the format is MPEG-4 compressed) the value shall be 0."
  },
  "videoFormatFps": {
    "name": "videoFormatFps",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "units": "Frame per Second",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum number of frames per second. If the format is interlaced the number of fields per second will be twice this figure."
  },
  "videoFormatColorimetry": {
    "name": "videoFormatColorimetry",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString16",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The colorimetry specification for this entry. This shall be the same as the 'colorimetry' parameter from the SDP description (e.g. BT601-5). If not required the value shall be 'none'."
  },
  "videoFormatInterlaced": {
    "name": "videoFormatInterlaced",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "interlaced": 1,
          "progressive": 2,
          "none": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Denotes whether the video format is interlaced or progressive scan. If not required the value shall be 'none'. The scan types defined are: 1 - Interlaced. 2 - Progressive scan. 3 - None."
  },
  "videoFormatCompressionFactor": {
    "name": "videoFormatCompressionFactor",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "targetRate": 1,
          "targetQuality": 2,
          "lossless": 3,
          "none": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "If the format employs compression, this object specifies the factor on which the video compression rate is based. The compression factors defined are: 1 - Target Rate: The compression factor shall be set to achieve the target rate specified in Mbps in videoFormatCompressionRate. 2 - Target Quality: The compression factor shall be set to achieve the subjective quality factor specified in videoFormatCompressionRate. 3 - Lossless compression employed. 4 - None."
  },
  "videoFormatCompressionRate": {
    "name": "videoFormatCompressionRate",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "When the videoFormatCompressionFactor object is set to targetRate, this object shall specify the maximum target rate in Mbps. When the videoFormatCompressionFactor object is set to targetQuality, this object shall specify a subjective quality factor with 1 being the lowest quality and 16 being the highest (virtually lossless) quality. The object may be set (when in the maintenance mode) to configure a default start-up rate for the format. If the format is uncompressed the value shall be 0."
  },
  "videoFormatMaxHorzRes": {
    "name": "videoFormatMaxHorzRes",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "pixels",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum horizontal resolution supported by this video format for a service provider or a ROI."
  },
  "videoFormatMaxVertRes": {
    "name": "videoFormatMaxVertRes",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "pixels",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum vertical resolution supported by this video format for a service provider or a ROI."
  },
  "videoFormatRoiHorzRes": {
    "name": "videoFormatRoiHorzRes",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "pixels",
    "maxaccess": "read-write",
    "status": "current",
    "description": "If the format is a ROI this object shall specify the horizontal resolution of the ROI. If the format is not a ROI the value shall be 0. The relationship between this object and the other ROI objects shall determine whether the ROI is scalable and what scaling is required, as specified in Def Stan 00-82. The object may be set (when in the maintenance mode) to configure a default start-up ROI."
  },
  "videoFormatRoiVertRes": {
    "name": "videoFormatRoiVertRes",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "pixels",
    "maxaccess": "read-write",
    "status": "current",
    "description": "If the format is a ROI this object shall specify the vertical resolution of the ROI. If the format is not a ROI the value shall be 0. The relationship between this object and the other ROI objects shall determine whether the ROI is scalable and what scaling is required, as specified in Def Stan 00-82. The object may be set (when in the maintenance mode) to configure a default start-up ROI."
  },
  "videoFormatRoiOriginTop": {
    "name": "videoFormatRoiOriginTop",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "pixels",
    "maxaccess": "read-write",
    "status": "current",
    "description": "If the format is a ROI this object shall specify the top origin of the ROI. If the format is not a ROI the value shall be 0. The relationship between this object and the other ROI objects shall determine whether the ROI is scalable and what scaling is required, as specified in Def Stan 00-82. The object may be set (when in the maintenance mode) to configure a default start-up ROI."
  },
  "videoFormatRoiOriginLeft": {
    "name": "videoFormatRoiOriginLeft",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "pixels",
    "maxaccess": "read-write",
    "status": "current",
    "description": "If the format is a ROI this object shall specify the left origin of the ROI. If the format is not a ROI the value shall be 0. The relationship between this object and the other ROI objects shall determine whether the ROI is scalable and what scaling is required, as specified in Def Stan 00-82. The object may be set (when in the maintenance mode) to configure a default start-up ROI."
  },
  "videoFormatRoiExtentBottom": {
    "name": "videoFormatRoiExtentBottom",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "pixels",
    "maxaccess": "read-write",
    "status": "current",
    "description": "If the format is a scalable ROI this object shall specify the bottom extent of the ROI. If the format is not a ROI or is a non-scalable ROI the value shall be 0. The relationship between this object and the other ROI objects shall determine what scaling is required, as specified in Def Stan 00-82. The object may be set (when in the maintenance mode) to configure a default start-up ROI."
  },
  "videoFormatRoiExtentRight": {
    "name": "videoFormatRoiExtentRight",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "pixels",
    "maxaccess": "read-write",
    "status": "current",
    "description": "If the format is a scalable ROI this object shall specify the default right extent of the ROI. If the format is not a ROI or is a non-scalable ROI the value shall be 0. The relationship between this object and the other ROI objects shall determine what scaling is required, as specified in Def Stan 00-82. The object may be set (when in the maintenance mode) to configure a default start-up ROI."
  },
  "videoFormatRtpPt": {
    "name": "videoFormatRtpPt",
    "oid": "1.3.6.1.4.1.35990.3.1.2.2.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "For a service provider this is the RTP Payload Type number in the RTP header for this format. Payload Types from 0 to 95 are statically assigned or reserved, while 96 to 127 are dynamically assigned. The object may be set (when in the maintenance mode) to configure a default start-up Payload Type for the format."
  },
  "channelControl": {
    "name": "channelControl",
    "oid": "1.3.6.1.4.1.35990.3.1.3",
    "class": "objectidentity"
  },
  "channelReset": {
    "name": "channelReset",
    "oid": "1.3.6.1.4.1.35990.3.1.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "In the maintenance mode this object may be used to initiate a reboot or reset on a particular channel. This will set the channel to its default state. 0 - Normal denotes that the device is in the normal running mode. 1..254 - Setting the object to these values will initiate a reboot or reset on the specified channel When the device has rebooted or reset the channel, this object shall be reset to 0 by the device. 255 - Setting the object to 255 will initiate a reboot or reset all the channels. When the device has rebooted or reset the channels, this object shall be reset to 0 by the device."
  },
  "channelNumber": {
    "name": "channelNumber",
    "oid": "1.3.6.1.4.1.35990.3.1.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 254
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of video channels supported by the device. For a service provider channels may be multiple video streams or ROIs. For service users it may be the number of digital video streams that can be simultaneously supported. Up to 254 channels may be supported."
  },
  "channelTable": {
    "name": "channelTable",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of channels supported by the device. The number of entries is specified by channelNumber."
  },
  "channelEntry": {
    "name": "channelEntry",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "VIVOE-MIB",
        "object": "channelIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table of channels supported by the device. A row in this table cannot be created or deleted by SNMP operations on columns of the table. The objects in the row can be read to obtain the current status of the channel and set to control the functionality of the channel. For service providers, part of the multicast IP address that the service provider transmits on is derived from this number, as defined in Def Stan 00-82 Part 1."
  },
  "channelIndex": {
    "name": "channelIndex",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 254
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The index for each entry in the table of channels supported by the device. The index value range shall be from 1 to the number of entries is specified by channelNumber."
  },
  "channelType": {
    "name": "channelType",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "videoChannel": 1,
          "roi": 2,
          "serviceUser": 3,
          "rawData": 4,
          "other": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The main function of the channel. The types defined are: 1 - A service provider channel providing full frame video. 2 - A service provider channel providing a ROI. The size of the ROI is designated by channelHorzRes and channelVertRes objects and the position by the origin and extent objects. 3 - The channel is a service user channel. 4 - The channel is a data channel using the mechanisms defined in Appendix E of Def Stan 00-82 Part 1. 5 - The channel is an undefined, system specific type."
  },
  "channelUserDesc": {
    "name": "channelUserDesc",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString64",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A textual description assigned by the user or the system integrator to uniquely identify the channel on the device in a system, e.g. front LSA camera etc. The object can be set (when the device is in the maintenance mode) by a manager to allow the description to be changed when the device is moved or its function reconfigured. The new value shall only become active after a reset or reboot. This object shall also be used to set the SDP Session Name field for SAP announcement messages for the channel, when it may be combined with the deviceUserDesc object in multi-channel devices."
  },
  "channelStatus": {
    "name": "channelStatus",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "start": 1,
          "stop": 2,
          "singleFrame": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The current status of the channel. Setting the value of this object shall also be used to start or stop the encoding or decoding on the channel. Other objects shall be used to set parameters and settings on the channel before the channel is started or re-started. The status types defined are: 1 - Start encoding or decoding on the channel. 2 - Stop encoding or decoding on the channel. 3 - When the object is set to single frame, a service provider will immediately transmit a single frame of video, if this functionality is implemented."
  },
  "channelVideoFormatIndex": {
    "name": "channelVideoFormatIndex",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object cross-references the videoFormatIndex object in the videoFormatTable and may be set to select the corresponding video format for the channel. The device shall then update the objects listed in the setChannelGroup to the corresponding values for the video format. The object shall default to 0 until a video format is specified and shall always be 0 in a service user."
  },
  "channelVideoFormat": {
    "name": "channelVideoFormat",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString16",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The video format currently being processed on the channel. For uncompressed video this shall be set to 'raw' and for compressed video, the compression scheme used will be designated using the relevant IANA MIME media type specifier from the RTP payload format name (e.g. jpeg2000, H264). If the device is not processing video on the channel the value shall be 'none'."
  },
  "channelVideoSampling": {
    "name": "channelVideoSampling",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString16",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The video pixel sampling format currently being processed on the channel. This shall be the same as the 'sampling' parameter from the SDP mapping description (e.g. YCbCr-4:2:2, RGB, GRAYSCALE). If the device is not processing video on the channel or the value is not required (e.g. the format is MPEG-4 compressed) the value shall be 'none'."
  },
  "channelVideoBitDepth": {
    "name": "channelVideoBitDepth",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of bits used to encode a pixel or series of pixels in the current video format on this channel. This shall be the same as the 'depth' parameter from the SDP mapping description. If not required (e.g. the format is MPEG-4 compressed) the value shall be 0."
  },
  "channelFps": {
    "name": "channelFps",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "units": "Frames per second",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum number of frames per second for the format on this channel. If the format is interlaced the number of fields per second will be twice this figure."
  },
  "channelColorimetry": {
    "name": "channelColorimetry",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString16",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The colorimetry specification for the format on this channel. This shall be the same as the 'colorimetry' parameter from the SDP description (e.g. BT601-5). If not required the value shall be 'none'."
  },
  "channelInterlaced": {
    "name": "channelInterlaced",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "interlaced": 1,
          "progressive": 2,
          "none": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Denotes whether the video format currently be processed by the channel is interlaced or progressive scan video. If the device is not processing video on the channel the value shall be 'none'. The scan types defined are: 1 - Interlaced. 2 - Progressive scan. 3 - None."
  },
  "channelCompressionFactor": {
    "name": "channelCompressionFactor",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "targetRate": 1,
          "targetQuality": 2,
          "lossless": 3,
          "none": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The factor on which the video compression rate is based, if applicable. The compression types defined are: 1 - Target Rate: The compression factor shall be set to achieve the target rate specified in Mbps in channelCompressionRate. 2 - Target Quality: The compression factor shall be set to achieve the subjective quality factor specified in channelCompressionRate. 3 - Lossless compression employed. 4 - None."
  },
  "channelCompressionRate": {
    "name": "channelCompressionRate",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "When the channelCompressionFactor object is set to targetRate, this object shall specify the maximum target rate in Mbps. When the channelCompressionFactor object is set to targetQuality, this object shall specify a subjective quality factor with 1 being the lowest quality and 16 being the highest (virtually lossless) quality. If the device is not processing compressed video the value shall be 0. This object can be set to request a new compression rate."
  },
  "channelHorzRes": {
    "name": "channelHorzRes",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "pixels",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The current horizontal resolution of the channel. If the channel is a ROI, this object can be set to request a new horizontal resolution for the ROI. The relationship between this object and the other ROI objects shall determine whether the ROI is scalable and what scaling is required, as specified in Def Stan 00-82. If the channel is a service user, the relationship shall determine whether the image shall be scaled or cropped and how it is windowed on a display, as specified in Def Stan 00-82."
  },
  "channelVertRes": {
    "name": "channelVertRes",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "pixels",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The current vertical resolution of the channel. If the channel is a ROI, this object can be set to request a new vertical resolution for the ROI. The relationship between this object and the other ROI objects shall determine whether the ROI is scalable and what scaling is required, as specified in Def Stan 00-82. If the channel is a service user, the relationship shall determine whether the image shall be scaled or cropped and how it is windowed on a display, as specified in Def Stan 00-82."
  },
  "channelRoiOriginTop": {
    "name": "channelRoiOriginTop",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "pixels",
    "maxaccess": "read-write",
    "status": "current",
    "description": "If the channel is a ROI, this object shall specify the top origin of the ROI. The object can be set to move the ROI and the relationship between this object and the other ROI objects shall determine whether the ROI is scalable and what scaling is required, as specified in Def Stan 00-82. If the channel is a service user, the relationship shall determine whether the image shall be scaled or cropped and how it is windowed on a display, as specified in Def Stan 00-82. If the channel is a service provider the value shall be 0."
  },
  "channelRoiOriginLeft": {
    "name": "channelRoiOriginLeft",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "pixels",
    "maxaccess": "read-write",
    "status": "current",
    "description": "If the channel is a ROI, this object shall specify the left origin of the ROI. The object can be set to move the ROI and the relationship between this object and the other ROI objects shall determine whether the ROI is scalable and what scaling is required, as specified in Def Stan 00-82. If the channel is a service user, the relationship shall determine whether the image shall be scaled or cropped and how it is windowed on a display, as specified in Def Stan 00-82. If the channel is a service provider the value shall be 0."
  },
  "channelRoiExtentBottom": {
    "name": "channelRoiExtentBottom",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "pixels",
    "maxaccess": "read-write",
    "status": "current",
    "description": "If the channel is a scalable ROI, this object shall specify the bottom extent of the ROI. The object can be set to modify the ROI and the relationship between this object and the other ROI objects shall determine whether the ROI is scalable and what scaling is required, as specified in Def Stan 00-82. If the channel is a service user, the relationship shall determine whether the image shall be scaled or cropped and how it is windowed on a display, as specified in Def Stan 00-82. If the channel is a service provider or a non-scaled ROI the value shall be 0."
  },
  "channelRoiExtentRight": {
    "name": "channelRoiExtentRight",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "pixels",
    "maxaccess": "read-write",
    "status": "current",
    "description": "If the channel is a scalable ROI, this object shall specify the right extent of the ROI. The object can be set to modify the ROI and the relationship between this object and the other ROI objects shall determine whether the ROI is scalable and what scaling is required, as specified in Def Stan 00-82. If the channel is a service user, the relationship shall determine whether the image shall be scaled or cropped and how it is windowed on a display, as specified in Def Stan 00-82. If the channel is a service provider or a non-scaled ROI the value shall be 0."
  },
  "channelRtpPt": {
    "name": "channelRtpPt",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "For a service provider this is the RTP Payload Type ID in the RTP header associated with this channel. The Payload Type IDs from 0 to 95 are statically assigned or reserved in RFC 3551 to particular audio or video formats, while the IDs from 96 to 127 are dynamically assigned. The same ID can be used for multiple channels. For service users it shall be set to the RTP Payload Type ID for the RTP currently being received."
  },
  "channelReceiveIpAddress": {
    "name": "channelReceiveIpAddress",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "For a service user channel this object is the multicast IP address to receive RTP encoded video or data on and can be changed to select a new RTP stream. A service user channel shall not start processing the stream (or join the relevant multicast group) until it is re-started using the channelStatus object unless it is in the default start-up mode. If a service user channel is not currently receiving a stream or the channel is a service provider channel or ROI the value shall be null or 0.0.0.0."
  },
  "channelInterPacketDelay": {
    "name": "channelInterPacketDelay",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "units": "microseconds",
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object may be used to set the delay in microseconds between RTP packets on this channel. The time is measured from the end of the previous packet to the beginning of the next packet in the stream. The value of this object can be set (when in the maintenance mode) to request a new delay time to implement simple flow control on the network. If a service provider does not have a programmable inter- packet delay then it shall ignore this object and set it to the default value of 0. Not applicable for service users."
  },
  "channelSapMessageInterval": {
    "name": "channelSapMessageInterval",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 1000
          }
        ]
      }
    },
    "units": "milliseconds",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The interval (in milliseconds) between transmitted SAP/SDP messages. The value of this object can be set (when in the maintenance mode) to request a new interval. The default value shall be 1000 (1 second). If a service provider does not have a programmable interval then it shall ignore this object. Not applicable for service users."
  },
  "channelDefaultVideoFormatIndex": {
    "name": "channelDefaultVideoFormatIndex",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object cross-references the videoFormatIndex object in the videoFormatTable and may be set (when in the maintenance mode) to define the default video format that a service provider shall transmit if the deviceMode object is set to defaultStartUp. At start-up the device shall update all the objects listed in the setChannelGroup to the corresponding values in the default video format. If no default mode is specified or the device is a service user the value shall be 0."
  },
  "channelDefaultReceiveIpAddress": {
    "name": "channelDefaultReceiveIpAddress",
    "oid": "1.3.6.1.4.1.35990.3.1.3.3.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "For a service user channel this object is the default multicast IP address that that a service user shall receive RTP encoded video or data on at start-up if the deviceMode object is set to defaultStartUp. A service user channel shall join the relevant multicast group and start processing the stream regardless of the state of the channelStatus object. If no default is set or channel is a service provider channel the value shall be null or 0.0.0.0. The object may be set (when in the maintenance mode) to define the default receive address."
  },
  "vivoeNotifications": {
    "name": "vivoeNotifications",
    "oid": "1.3.6.1.4.1.35990.3.1.4",
    "class": "objectidentity"
  },
  "deviceError": {
    "name": "deviceError",
    "oid": "1.3.6.1.4.1.35990.3.1.4.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "VIVOE-MIB",
        "object": "deviceUserDesc"
      },
      {
        "module": "VIVOE-MIB",
        "object": "deviceMode"
      }
    ],
    "status": "current",
    "description": "This trap is sent when an unspecified error has been detected on the device. The message shall be sent using the broadcast IP address specified in Def Stan 00-82 Part 1."
  },
  "ipAddressConflict": {
    "name": "ipAddressConflict",
    "oid": "1.3.6.1.4.1.35990.3.1.4.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "VIVOE-MIB",
        "object": "ethernetIfIpAddress"
      },
      {
        "module": "VIVOE-MIB",
        "object": "ethernetIfIpAddressConflict"
      }
    ],
    "status": "current",
    "description": "This notification message is sent when an IP address conflict has been detected by the device. The notification includes the last IP address a conflict was detected on. The message shall be sent using the broadcast IP address specified in Def Stan 00-82 Part 1."
  },
  "vivoeGroups": {
    "name": "vivoeGroups",
    "oid": "1.3.6.1.4.1.35990.3.1.5",
    "class": "objectidentity"
  },
  "presetGroup": {
    "name": "presetGroup",
    "oid": "1.3.6.1.4.1.35990.3.1.5.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "VIVOE-MIB",
        "object": "deviceDesc"
      },
      {
        "module": "VIVOE-MIB",
        "object": "deviceManufacturer"
      },
      {
        "module": "VIVOE-MIB",
        "object": "devicePartNumber"
      },
      {
        "module": "VIVOE-MIB",
        "object": "deviceSerialNumber"
      },
      {
        "module": "VIVOE-MIB",
        "object": "deviceHardwareVersion"
      },
      {
        "module": "VIVOE-MIB",
        "object": "deviceSoftwareVersion"
      },
      {
        "module": "VIVOE-MIB",
        "object": "deviceFirmwareVersion"
      },
      {
        "module": "VIVOE-MIB",
        "object": "deviceMibVersion"
      },
      {
        "module": "VIVOE-MIB",
        "object": "deviceType"
      },
      {
        "module": "VIVOE-MIB",
        "object": "ethernetIfNumber"
      },
      {
        "module": "VIVOE-MIB",
        "object": "ethernetIfSpeed"
      },
      {
        "module": "VIVOE-MIB",
        "object": "ethernetIfMacAddress"
      },
      {
        "module": "VIVOE-MIB",
        "object": "deviceNatoStockNumber"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatNumber"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatType"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatStatus"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatBase"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatSampling"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatBitDepth"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatFps"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatColorimetry"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatInterlaced"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatCompressionFactor"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatMaxHorzRes"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatMaxVertRes"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelNumber"
      }
    ],
    "status": "current",
    "description": "The objects whose values shall be preset by the manufacturer of the device and cannot be subsequently changed via the MIB."
  },
  "setChannelGroup": {
    "name": "setChannelGroup",
    "oid": "1.3.6.1.4.1.35990.3.1.5.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "VIVOE-MIB",
        "object": "channelType"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelVideoFormat"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelVideoSampling"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelVideoBitDepth"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelFps"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelColorimetry"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelInterlaced"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelCompressionFactor"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelCompressionRate"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelHorzRes"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelVertRes"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelRoiOriginTop"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelRoiOriginLeft"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelRoiExtentBottom"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelRoiExtentRight"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelRtpPt"
      }
    ],
    "status": "current",
    "description": "The list of objects that a service provider shall update when setting a channel to a particular video format. In the normal mode the format shall be selected by the channelVideoFormatIndex object and by the channelDefaultVideoFormatIndex object in the default configuration start-up mode."
  },
  "maintenanceModeGroup": {
    "name": "maintenanceModeGroup",
    "oid": "1.3.6.1.4.1.35990.3.1.5.3",
    "class": "objectgroup",
    "objects": [
      {
        "module": "VIVOE-MIB",
        "object": "deviceUserDesc"
      },
      {
        "module": "VIVOE-MIB",
        "object": "ethernetIfIpAddress"
      },
      {
        "module": "VIVOE-MIB",
        "object": "ethernetIfSubnetMask"
      },
      {
        "module": "VIVOE-MIB",
        "object": "ethernetIfIpAddressConflict"
      },
      {
        "module": "VIVOE-MIB",
        "object": "deviceReset"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatCompressionRate"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatRoiHorzRes"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatRoiVertRes"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatRoiOriginTop"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatRoiOriginLeft"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatRoiExtentBottom"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatRoiExtentRight"
      },
      {
        "module": "VIVOE-MIB",
        "object": "videoFormatRtpPt"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelReset"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelUserDesc"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelInterPacketDelay"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelSapMessageInterval"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelDefaultVideoFormatIndex"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelDefaultReceiveIpAddress"
      }
    ],
    "status": "current",
    "description": "The objects whose values shall only be settable when the device is in the maintenance mode (the deviceMode object is set to maintenanceMode. If the device is not in this mode the agent shall return a resourceUnavailable error if a set operation is performed on these objects. Any values set during the maintenance mode period shall only become active after a reset, reboot or power cycle."
  },
  "volatileGroup": {
    "name": "volatileGroup",
    "oid": "1.3.6.1.4.1.35990.3.1.5.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "VIVOE-MIB",
        "object": "deviceMode"
      },
      {
        "module": "VIVOE-MIB",
        "object": "deviceReset"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelReset"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelType"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelStatus"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelVideoFormatIndex"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelVideoFormat"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelVideoSampling"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelVideoBitDepth"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelFps"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelColorimetry"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelInterlaced"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelCompressionFactor"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelCompressionRate"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelHorzRes"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelVertRes"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelRoiOriginTop"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelRoiOriginLeft"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelRoiExtentBottom"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelRoiExtentRight"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelRtpPt"
      },
      {
        "module": "VIVOE-MIB",
        "object": "channelReceiveIpAddress"
      }
    ],
    "status": "current",
    "description": "The objects whose values shall be stored in volatile memory and shall not maintained during a reset, reboot or power cycle. The values for all other objects shall be maintained during a reset, reboot or power cycle."
  },
  "notificationGroup": {
    "name": "notificationGroup",
    "oid": "1.3.6.1.4.1.35990.3.1.5.5",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "VIVOE-MIB",
        "object": "deviceError"
      },
      {
        "module": "VIVOE-MIB",
        "object": "ipAddressConflict"
      }
    ],
    "status": "current",
    "description": "The group of objects specifying the notifications (Traps) that can be sent by the device."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/VIVOE-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 19:16:49 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "VIVOE-MIB"
  }
}