{
  "imports": {
    "class": "imports",
    "RFC1230-MIB": [
      "MacAddress"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "TRAP-TYPE",
      "iso",
      "Unsigned32",
      "Integer32",
      "OBJECT-TYPE",
      "Bits",
      "Gauge32",
      "Counter32",
      "IpAddress",
      "MODULE-IDENTITY",
      "MibIdentifier",
      "enterprises",
      "TimeTicks",
      "NOTIFICATION-TYPE",
      "OBJECT-IDENTITY",
      "Counter64"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "sbe": {
    "name": "sbe",
    "oid": "1.3.6.1.4.1.1055",
    "class": "objectidentity"
  },
  "system": {
    "name": "system",
    "oid": "1.3.6.1.4.1.1055.1",
    "class": "objectidentity"
  },
  "router": {
    "name": "router",
    "oid": "1.3.6.1.4.1.1055.2",
    "class": "objectidentity"
  },
  "discovery": {
    "name": "discovery",
    "oid": "1.3.6.1.4.1.1055.3",
    "class": "objectidentity"
  },
  "fileMgmt": {
    "name": "fileMgmt",
    "oid": "1.3.6.1.4.1.1055.4",
    "class": "objectidentity"
  },
  "modempool": {
    "name": "modempool",
    "oid": "1.3.6.1.4.1.1055.6",
    "class": "objectidentity"
  },
  "endOfSBEMib": {
    "name": "endOfSBEMib",
    "oid": "1.3.6.1.4.1.1055.65535",
    "class": "objectidentity"
  },
  "syDateTime": {
    "name": "syDateTime",
    "oid": "1.3.6.1.4.1.1055.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: zero On nX: stored in clock chip Format: Century, year, month, day, hour, min, sec. each occupies one octet in binary value."
  },
  "syRAMConfigurationChangedFlag": {
    "name": "syRAMConfigurationChangedFlag",
    "oid": "1.3.6.1.4.1.1055.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "same": 1,
          "different": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: set to 'same' when booted from flash, 'different' otherwise On nX: (not needed?) in ram, field trial 2 This field is used by Workshop to determine if the RAM image currently being executed on the nX product is identical to the image in the LX's flash. Whenever part of the RAM image is changed (currently only via SNMP), this value is set to 'different' by the LX."
  },
  "syConfigurationLockFlag": {
    "name": "syConfigurationLockFlag",
    "oid": "1.3.6.1.4.1.1055.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "locked": 1,
          "unlocked": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 'unlocked(2)' This field is used by Workshop to determine whether the nX unit is enabled to allow configuration. When this field is set to locked(1), nX rejects the SET requests for all mib entries except this one. The status of this field is also indicated by the lock LED on nX."
  },
  "syModel": {
    "name": "syModel",
    "oid": "1.3.6.1.4.1.1055.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": " Default value on nX: factory setting On nX: in flash, field trial 1 The product name, hardware revision, firmware revision, and kernel revision for the nX Node product. E.G. SoHo/HW4/FW3/SW1.0V1.0 Product names - SoHo, Central, ROUTEMAN, ROUTEMANXL Hardware Rev - HW Revision number, e.g. HW4 Firmware Rev - FW Revision number, e.g. FW3 Kernel Rev - SW Release-number Version-number, e.g. SW1.0V1.0 Note: for Central we will define a second variable, syCoprocessorModel."
  },
  "syBootInfo": {
    "name": "syBootInfo",
    "oid": "1.3.6.1.4.1.1055.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal-boot-from-LAN": 1,
          "base-board-flash-corrupt": 2,
          "missing-base-board-kernel-module": 4,
          "daughter-board-flash-corrupt": 8,
          "missing-daughter-board-kernel-module": 16,
          "system-type-SoHo": 32,
          "system-type-Central": 64,
          "system-type-torte": 128,
          "system-type-ROUTEMAN": 256,
          "system-type-ROUTEMANXL": 512,
          "system-type-ROUTEMANXLl": 33280
        }
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "THIS ITEM IS NOT IMPLEMENTED!"
  },
  "syActivatedLevel": {
    "name": "syActivatedLevel",
    "oid": "1.3.6.1.4.1.1055.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Software feature activation level information. This entry is maintained and used by Workshop."
  },
  "sySerialNumber": {
    "name": "sySerialNumber",
    "oid": "1.3.6.1.4.1.1055.1.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 16,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A manufacturing only mib that will return the serial number of the board. This function is reserved for manufacturing test and may change as needed by manufacturing."
  },
  "syBaseActivationLevel": {
    "name": "syBaseActivationLevel",
    "oid": "1.3.6.1.4.1.1055.1.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "rOUTEMAN20Base": 1,
          "soHo20Base": 2,
          "central20Base": 4,
          "rOUTEMANXL20Base": 6,
          "soHoTest": 11,
          "centralTest": 12,
          "rOUTEMANTest": 13,
          "rOUTEMANXLTest": 14,
          "rOUTEMANXL201Base": 15,
          "soHo21Base": 16,
          "central21Base": 18,
          "rOUTEMAN21Base": 20,
          "rOUTEMANXL21Base": 21,
          "soHo30Dormant": 23,
          "central30Dormant": 25,
          "rOUTEMAN30Dormant": 27,
          "rOUTEMANX30Dormant": 28
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Base level software feature information. This entry is maintained by the nX unit and used by Workshop."
  },
  "routsys": {
    "name": "routsys",
    "oid": "1.3.6.1.4.1.1055.2.1",
    "class": "objectidentity"
  },
  "bridge": {
    "name": "bridge",
    "oid": "1.3.6.1.4.1.1055.2.2",
    "class": "objectidentity"
  },
  "ip": {
    "name": "ip",
    "oid": "1.3.6.1.4.1.1055.2.3",
    "class": "objectidentity"
  },
  "ipx": {
    "name": "ipx",
    "oid": "1.3.6.1.4.1.1055.2.4",
    "class": "objectidentity"
  },
  "wan": {
    "name": "wan",
    "oid": "1.3.6.1.4.1.1055.2.5",
    "class": "objectidentity"
  },
  "destination": {
    "name": "destination",
    "oid": "1.3.6.1.4.1.1055.2.6",
    "class": "objectidentity"
  },
  "user": {
    "name": "user",
    "oid": "1.3.6.1.4.1.1055.2.7",
    "class": "objectidentity"
  },
  "manager": {
    "name": "manager",
    "oid": "1.3.6.1.4.1.1055.2.8",
    "class": "objectidentity"
  },
  "holiday": {
    "name": "holiday",
    "oid": "1.3.6.1.4.1.1055.2.9",
    "class": "objectidentity"
  },
  "snmp": {
    "name": "snmp",
    "oid": "1.3.6.1.4.1.1055.2.10",
    "class": "objectidentity"
  },
  "event": {
    "name": "event",
    "oid": "1.3.6.1.4.1.1055.2.11",
    "class": "objectidentity"
  },
  "syBootOrder": {
    "name": "syBootOrder",
    "oid": "1.3.6.1.4.1.1055.2.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "enum values per octet: 1=Flash, 2=TFTP, 3=PCMCIA, 4=LAN, 0=none Default value on nX: (Flash) On nX: in flash This field has one octet for each boot source from which the nX product will attempt to boot. The first choice boot source is designated by the first byte, the second choice by the second byte, etc. In the first release there are only two boot choices, but future versions may have additional choices such as PCMCIA. If the nX detects that a boot choice is corrupted, it will ignore that choice and proceed to the next choice. The value 'none' is just used to fill any unused octets after the choices have been specified."
  },
  "syMtuMru": {
    "name": "syMtuMru",
    "oid": "1.3.6.1.4.1.1055.2.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 64,
            "max": 1500
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: 1500 On nX: both ram and flash, field trial 2 This field specifies the maximum size frame that the nX product will send or receive, either on the LAN or on a WAN port. The maximum for Ethernet is 1500, 1492 for 802.3 with SNAP. This is used by the nX product to detect error frames (i.e. too long) and during PPP negotiation. The actual transfer size is negotiated, by destination, when the connection is first made."
  },
  "syEventToLogThreshold": {
    "name": "syEventToLogThreshold",
    "oid": "1.3.6.1.4.1.1055.2.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 3 On nX: both ram and flash, field trial 2 All events generated by the nX product have an associated severity level which ranges from 1 to 10. The nX product puts events of this threshold level and above into its internal circular log file. Other events are discarded."
  },
  "syEventToTrapThreshold": {
    "name": "syEventToTrapThreshold",
    "oid": "1.3.6.1.4.1.1055.2.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 6 On nX: both ram and flash, field trial 2 All events generated by the nX product have an associated severity level which ranges from 1 to 10. For events of this threshold level and above, the nX generates an SNMP trap."
  },
  "syControlOperation": {
    "name": "syControlOperation",
    "oid": "1.3.6.1.4.1.1055.2.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "reboot": 2,
          "clear-SNMP-statistics": 3,
          "dialout": 4,
          "hangup": 5,
          "enable-port": 6,
          "disable-port": 7,
          "disable-port-after-call": 8,
          "crash": 9,
          "change-password": 10,
          "ram-to-Flash": 11,
          "start-tftp-download": 12,
          "reset-port": 13,
          "boot-override": 14,
          "display-IP-Routes": 15,
          "display-IPX-Networks": 16,
          "display-IPX-Servers": 17,
          "reboot-file-transfer": 18
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 'none' On nX: in ram, field trial 1 except for Clear-SNMP-statistics and Disable-port-after-call which are field trial 2 This object is set whenever Workshop wants the nX to perform an operation. Upon completion of the operation, the nX sets the value back to 'none'. Some operations use Control Variables as parameters for the operation. Any Control Variables must be set in the same frame as the Control Operation to insure that they are not changed by another Workshop before the operation is performed. After a Control Operation is started, the values in the Control Variables may no longer be valid. Reboot When the value is 'reboot', the nX performs an immediate reboot. Clear-SNMP-statistics When the value is 'clear-SNMP-statistics', the nX resets to zero all MIB statistics fields. Dialout When the value is 'dialout', the nX performs a dialout to the destination identified in Control Variable String One. Hangup When the value is 'hangup', the nX hangs up the non-leased line connection for the Destination identified in Control Variable String One. Enable port When the value is 'enable-port', the nX enables the port identified by Control Variable Integer One. Disable port When the value is 'disable-port', the nX disables the port identified by Control Variable Integer One. Disable-port-after-call When the value is 'disable-port-after-call', the nX disables the port identified by Control Variable Integer One immediately after the current connection terminates. This option allows gracefully taking the nX out of operation (except for leased lines). This option is not applicable to leased lines. Crash When the value is 'crash', the nX stores its RAM memory contents to a PCMCIA card for off-line debugging. Change-password When the value is 'change-password', the nX changes both the RAM and Flash password for a user. The Control Variable String One contains the following zero terminated strings in order: User Name, old User Password, and new User Password. This is the only way to change passwords, except when defining a new user. RAM-to-Flash When the value is 'RAM-to-Flash', the nX stores object values in RAM into Flash. start-tftp-download Reset-port Hangup the port, if necessary and reinitialize the modem. Display-IP-Routes Show IP routes via event logger. Display-IPX-Networks Show IPX Networks via event logger. Display-IPX-Servers Show IPX Servers via event logger."
  },
  "syControlVariableStringOne": {
    "name": "syControlVariableStringOne",
    "oid": "1.3.6.1.4.1.1055.2.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default Value on nX: N/A On nX: in ram, field trial 1 This object is used to store a DisplayString parameter to a control operation. Once the control operation is started, the value is unspecified."
  },
  "syControlVariableIntegerOne": {
    "name": "syControlVariableIntegerOne",
    "oid": "1.3.6.1.4.1.1055.2.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default Value on nX: N/A On nX: in ram, field trial 1 This object is used to store an Integer parameter to a control operation. Once the control operation is started, the value is unspecified."
  },
  "syDialinAuthentication": {
    "name": "syDialinAuthentication",
    "oid": "1.3.6.1.4.1.1055.2.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "pap": 2,
          "chap": 3,
          "paporchap": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 'none' On nX: both ram and flash. This field identifies the type of authentication negotiation that is to be performed during dialin to this destination."
  },
  "syEventToSpeakThreshold": {
    "name": "syEventToSpeakThreshold",
    "oid": "1.3.6.1.4.1.1055.2.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 6 On nX: both ram and flash, field trial 2 All events generated by the nX product have an associated severity level which ranges from 1 to 10. For events of this threshold level and above, the nX speaks the error code to the speaker."
  },
  "syNumberOfTimesToSpeak": {
    "name": "syNumberOfTimesToSpeak",
    "oid": "1.3.6.1.4.1.1055.2.1.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 3 On nX: both ram and flash, field trial 2 This item specifies the number of times an error code is spoken"
  },
  "sySaveRamToFlashState": {
    "name": "sySaveRamToFlashState",
    "oid": "1.3.6.1.4.1.1055.2.1.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "updating": 1,
          "idle": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This item specifies the state of the operation ram-to-Flash in the item syControlOperation. The valid states are: updating and idle. updating state indicates that a write to flash operation is in progress, idle state indicates idle."
  },
  "syDialbackRetryInterval": {
    "name": "syDialbackRetryInterval",
    "oid": "1.3.6.1.4.1.1055.2.1.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 10,
            "max": 120
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This item specifies the number of seconds to pause before the next dialback call from Soho will be made. Default = 10"
  },
  "syDialbackRetryLimit": {
    "name": "syDialbackRetryLimit",
    "oid": "1.3.6.1.4.1.1055.2.1.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This item specifies the number of times that Soho will retry dialback call from Soho. Default is 3."
  },
  "syReverseCallbackTimeout": {
    "name": "syReverseCallbackTimeout",
    "oid": "1.3.6.1.4.1.1055.2.1.16",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 30,
            "max": 300
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 60 (seconds) Specifies the number of seconds to wait for an expected reverse callback before redialing."
  },
  "syBridgeConfiguredFlag": {
    "name": "syBridgeConfiguredFlag",
    "oid": "1.3.6.1.4.1.1055.2.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 'yes' On nX: both ram and flash, field trial 2 If this object is 'no', syBridgeFilterFlag will be returned as 'other' by default regardless of the value that is previously set. If this is 'yes', syBridgeFilterFlag governs the bridging rule."
  },
  "syBridgeFilterFlag": {
    "name": "syBridgeFilterFlag",
    "oid": "1.3.6.1.4.1.1055.2.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "include": 2,
          "exclude": 4,
          "all": 8
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 'all' On nX: both ram and flash, field trial 2 This value indicates the bridging rule for this nX product, whether to include or exclude packets for the protocols indicated in the Bridge Sub-Table. If the value is 'all', all protocols will be bridged. If the value is 'include', only the protocols listed in the Bridge Sub-Table are to be bridged over this port. If the value is 'exclude', all packets except for the protocols listed in the Bridge Sub-Table are to be bridged."
  },
  "syBridgePriority": {
    "name": "syBridgePriority",
    "oid": "1.3.6.1.4.1.1055.2.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 32768 On nX: both ram and flash Used by the Spanning Tree Algorithm to determine who is the root bridge in the network."
  },
  "syBridgeTable": {
    "name": "syBridgeTable",
    "oid": "1.3.6.1.4.1.1055.2.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Bridge table - one copy"
  },
  "syBridgeEntry": {
    "name": "syBridgeEntry",
    "oid": "1.3.6.1.4.1.1055.2.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "syBridgeProtocol",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The bridge table information for one protocol."
  },
  "syBridgeStatus": {
    "name": "syBridgeStatus",
    "oid": "1.3.6.1.4.1.1055.2.2.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "create-request": 2,
          "under-creation": 3,
          "invalid": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indication of whether or not a valid entry."
  },
  "syBridgeProtocol": {
    "name": "syBridgeProtocol",
    "oid": "1.3.6.1.4.1.1055.2.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: none On nX: both ram and flash, field trial 2 This column item contains the protocol number for a protocol to be bridged. Bridging rules are governed by syBridgeFlag."
  },
  "mgrTimeoutForMACProtocolResponses": {
    "name": "mgrTimeoutForMACProtocolResponses",
    "oid": "1.3.6.1.4.1.1055.2.8.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 30
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 5 On nX: both ram and flash This object specifies the number of seconds Workshop will wait for a response for a message sent to an nX product before assuming that the packet was lost. If this time elapses, Workshop will resend the packet. Normally this time will be very short, but if the nX product and Workshop are separated by slow WAN links, the time will have to be increased. The nX product does not use this value."
  },
  "mgrNumberOfRetriesForMACProtocolResponses": {
    "name": "mgrNumberOfRetriesForMACProtocolResponses",
    "oid": "1.3.6.1.4.1.1055.2.8.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 3 On nX: both ram and flash This object specifies the number of times Workshop will retry sending to an nX product a message that timed out before assuming that the packet cannot be sent. If this count is reached, Workshop will stop trying to send the packet and assume that the unit is no longer responding (e.g. the connection has been terminated). The nX product does not use this value."
  },
  "mgrEventPollingInterval": {
    "name": "mgrEventPollingInterval",
    "oid": "1.3.6.1.4.1.1055.2.8.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 120 On nX: both ram and flash, field trial 2 This object specifies an interval, in seconds, at which Workshop will poll the nX product in order to obtain current data values with which to update displayed screens. The value of this object is most critical when the log file is being written to disk because if the interval is too long the nX product's circular log buffer may not be large enough to hold all events that occur between polls. (Hopefully, the nX will sequence number all log entries so Workshop can determine if some entries have been missed by Workshop.)"
  },
  "holidayMaxEntries": {
    "name": "holidayMaxEntries",
    "oid": "1.3.6.1.4.1.1055.2.9.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A value representing the maximum number of holiday entries in the holiday table."
  },
  "holidayTable": {
    "name": "holidayTable",
    "oid": "1.3.6.1.4.1.1055.2.9.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Holiday table - one copy"
  },
  "holidayEntry": {
    "name": "holidayEntry",
    "oid": "1.3.6.1.4.1.1055.2.9.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "holidayDate",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The holiday information for one date."
  },
  "holidayStatus": {
    "name": "holidayStatus",
    "oid": "1.3.6.1.4.1.1055.2.9.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "create-request": 2,
          "under-creation": 3,
          "invalid": 4,
          "modify": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indication of whether or not a valid entry."
  },
  "holidayDate": {
    "name": "holidayDate",
    "oid": "1.3.6.1.4.1.1055.2.9.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: 0 On nX: both ram and flash, field trial 2 This item specifies a day which is designated as a special dialout day. The nX uses the month and day."
  },
  "userMaxEntries": {
    "name": "userMaxEntries",
    "oid": "1.3.6.1.4.1.1055.2.7.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A value representing the maximum number of user entries in the user table."
  },
  "userTable": {
    "name": "userTable",
    "oid": "1.3.6.1.4.1.1055.2.7.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of user entries. The number of entries is given by the value of userNumber."
  },
  "userEntry": {
    "name": "userEntry",
    "oid": "1.3.6.1.4.1.1055.2.7.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "userName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A user entry containing objects of users."
  },
  "userStatus": {
    "name": "userStatus",
    "oid": "1.3.6.1.4.1.1055.2.7.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "create-request": 2,
          "under-creation": 3,
          "invalid": 4,
          "modify": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A value representing the current status of the user entry for the index value, userName."
  },
  "userName": {
    "name": "userName",
    "oid": "1.3.6.1.4.1.1055.2.7.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An octet string containing user supplied User Name which identifies a dialin user. On dialin, this is used as the login name for PAP or CHAP."
  },
  "userPassword": {
    "name": "userPassword",
    "oid": "1.3.6.1.4.1.1055.2.7.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A display string containing user supplied User Password for user identified by userName."
  },
  "userPermissions": {
    "name": "userPermissions",
    "oid": "1.3.6.1.4.1.1055.2.7.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "dial-in": 2,
          "dial-out": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A value representing the permissions the user identified by userName has, regarding access to the ports. If none(1) is specified, the user can neither dial out nor accept call. If dial-in(2) is specified, the user can dial-in. If dial-out(4) is specified, the user can dial-out. Specify dial-in(2) and dial-out(4) permissions for both dial-in and dial-out privileges."
  },
  "userCallbackType": {
    "name": "userCallbackType",
    "oid": "1.3.6.1.4.1.1055.2.7.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "fixed": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A value specifiying the type of callback to be used when user identified by userName connects. If none(1) is specified, the connection is maintained, and no callback is performed. If fixed(2) is specified, the connection is terminated after the proper authentication of the user is performed. The number stored in userPhoneNo is used to dialback."
  },
  "userPhoneNo": {
    "name": "userPhoneNo",
    "oid": "1.3.6.1.4.1.1055.2.7.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A phone number that is to be used for dialback."
  },
  "userDialInMax": {
    "name": "userDialInMax",
    "oid": "1.3.6.1.4.1.1055.2.7.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A value representing the maximum time in minutes for a dialin connection."
  },
  "userIpAddress": {
    "name": "userIpAddress",
    "oid": "1.3.6.1.4.1.1055.2.7.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " A value representing the IP Address to be used for the PPP dial-in connection."
  },
  "wanPortTable": {
    "name": "wanPortTable",
    "oid": "1.3.6.1.4.1.1055.2.5.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Each WAN port's information is contained in a row in a SNMP table. The following describes the columns in the table. Each row is uniquely identified by its Wan Port Number. (See also Port Sub-Data.)"
  },
  "wanPortEntry": {
    "name": "wanPortEntry",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "wanPortNumber",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The WAN table information for one WAN port."
  },
  "wanPortEntryStatus": {
    "name": "wanPortEntryStatus",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "create-request": 2,
          "under-creation": 3,
          "invalid": 4,
          "modify": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indication of whether or not a valid entry."
  },
  "wanPortNumber": {
    "name": "wanPortNumber",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 18
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: ascending integer, one for each hardware WAN port: 1, 2, 3A, 3B, 4A, and 4B. On nX: both ram and flash, field trial 1 This field is used to identify the Wan port to which the information in this row of the table applies."
  },
  "wanPortEnabled": {
    "name": "wanPortEnabled",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 1,
          "enabled": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: disabled On nX: both ram and flash, field trial 1 If this value is 'enabled', the Wan port is enabled. If this value is 'disabled', if the Wan port is disabled."
  },
  "wanDefaultDialinIPAddress": {
    "name": "wanDefaultDialinIPAddress",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: all zero On nX: both ram and flash, field trial 1 If IP is configured, this field is required and is used as the default IP address of the WAN port on dialin unless overridden during dialin either by an IP address from the User Table or by PPP negotiation. The same value needs to be configured at the other end of the WAN link (this could be a cause of user error, but there is no way around it)."
  },
  "wanDefaultDialinSubnetMask": {
    "name": "wanDefaultDialinSubnetMask",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: all zero Default value in Workshop: 1's, based on Default Dialin IP Address class On nX: both ram and flash, field trial 1 If the Default Dialin IP Address is used, this object is used as its Subnet Mask. Subnet masks allow the user to divide the local network into sub-networks by specifying a subnet mask. The subnet mask, combined with the Dialin IP Address field, determines which frames (packets) are sent across the WAN port during dialin. The subnet masks are all 1's from the left for a specified number of bits. On Workshop, the subnet mask will be entered as a number of bits from 0 to 32."
  },
  "wanDefaultIPXNetworkAddress": {
    "name": "wanDefaultIPXNetworkAddress",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: 0 On nX: in ram, field trial 1 If IPX is configured, this field indicates which IPX network address is being used by this port. The nX will automatically generate an address to be used during dialout and, during dialin, will accept the address from the calling node. (The nX products use the SAP tables they dynamically build to determined which network numbers are already in use.)"
  },
  "wanDefaultDialinIPXNodeAddress": {
    "name": "wanDefaultDialinIPXNodeAddress",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: 0 On nX: in ram, field trial 1 If IPX is configured, this field specifies the IPX node address that is being used by this port. The nX will automatically generate an address to be used during dialout and, during dialin, will accept the address from the calling node."
  },
  "wanDialinAllowedFlag": {
    "name": "wanDialinAllowedFlag",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX : 'yes' On nX: both ram and flash, field trial 2 If this flag is 'yes', dialin access is allowed on this port."
  },
  "wanDialoutAllowedFlag": {
    "name": "wanDialoutAllowedFlag",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX : 'yes' On nX: both ram and flash, field trial 2 If this flag is 'yes', dialout is allowed on this port."
  },
  "wanLinkLayerType": {
    "name": "wanLinkLayerType",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "async": 1,
          "sync": 2,
          "autosync": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: async On nX: both ram and flash, field trial 1 This object identifies the type of communication link that is used by this WAN port. Some data link types require further qualification."
  },
  "wanLinkLayerNRZFlag": {
    "name": "wanLinkLayerNRZFlag",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "nrz": 1,
          "nrzi": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: nrz On nX: both ram and flash If appropriate for the Link Line Type, this flag identifies whether the line is nrz or nrzi. (See Destination NRZ Flag.)"
  },
  "wanLinkLayerProtocolType": {
    "name": "wanLinkLayerProtocolType",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "ppp": 2,
          "isdn": 3,
          "x25": 4,
          "framerelaydte": 5,
          "framerelaydce": 6
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: ppp On nX: both ram and flash, This flag identifies whether the Link Line Type is ppp. Other options are not supported at this time."
  },
  "wanLinkDialupFlag": {
    "name": "wanLinkDialupFlag",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dialup": 1,
          "dedicated": 2,
          "dtr-dial": 3,
          "isdn-dialup": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: dialup dtr-dial(3) is obsolete (3/4/96) On nX: both ram and flash, field trial 1 (may be encoded into Link Layer Type) If appropriate for the Link Line Type, this flag identifies whether the line is dialup (switched), dedicated, DTR dial, or ISDN dialup link."
  },
  "wanModemName": {
    "name": "wanModemName",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 51
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: empty On nX: both ram and flash, field trial 1 This object contains the ASCII name of the modem. It is used by Workshop to determine the initialization modem string and maximum speed for this modem. This object is not used by the nX product. (If possible on Workshop, this field will be changed to something shorter, like an integer - if not will try to combine with PCMCIA Card Name.)"
  },
  "wanModemSpeed": {
    "name": "wanModemSpeed",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "twelvehundred": 1200,
          "twentyfourhundred": 2400,
          "fortyeighthundred": 4800,
          "ninetysixhundred": 9600,
          "nineteentwelve": 19200,
          "thirtyeigthfour": 38400,
          "fiftysevensix": 57600,
          "onefifteentwo": 115200
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 9600 On nX: both ram and flash, field trial 1 This object contains an indicator of the speed at which the nX product should communicate with the modem. This value cannot be larger than that obtained from the Modem File using the Modem Name. (Note: The UART does not support 14400 or 28800 directly so a higher speed must be specified and hardware handshake will be used to prevent overruns.)"
  },
  "wanModemInitializationString": {
    "name": "wanModemInitializationString",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 59
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: empty On nX: both ram and flash, field trial 1 This object contains the ASCII string that is to be sent to the modem whenever the modem is to be initialized."
  },
  "wanModemDialPrefix": {
    "name": "wanModemDialPrefix",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 19
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: empty On nX: both ram and flash, field trial 1 This is set by the user. It contains the modem's dial command (e.g. ATDT or ATDP) possibly suffixed with the dial prefix, if any, to obtain an outside phone line. (Note that the user could include the dial prefix in the Destination Phone Number instead.) For example, at SBE this would be set to '8' if the nX product's phone lines were inside lines. This string is long so it can include other items, such as billing codes, if necessary. (Will contain codes to differentiate V.25 dialing from ATDT dialing.)"
  },
  "wanPortType": {
    "name": "wanPortType",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "pcmcia": 1,
          "rs232": 2,
          "v35": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: determined by hardware Workshop no longer sets this field This value indicates whether the port is PCMCIA, or a D-shell connection - either RS232 or V.35."
  },
  "wanPCMCIACardName": {
    "name": "wanPCMCIACardName",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 63
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: empty string if card not present, else product information from card On nX: from 'ram' (actually hardware), field trial 1 Workshop no longer display this field This object returns the product information read from a PCMCIA card. If the returned value is a 0 length string, then the PCMCIA slot is empty. (60 characters available from hardware.)"
  },
  "wanIpRipReceiveAdvertisementFlag": {
    "name": "wanIpRipReceiveAdvertisementFlag",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 'yes' On nX: both ram and flash, field trial 2 If IP is configured, this object determines whether or not the nX product will accept IP RIP (Routing Information Protocol) from other routers on the network. Advertisements received will be added to the nX product's dynamic routing table."
  },
  "wanIpRipSendInterval": {
    "name": "wanIpRipSendInterval",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 30 On nX: both ram and flash, field trial 2 If IP is configured, this object determines time, in seconds, between nX broadcasts of the IP RIP destination information in its routing tables. If the value equals 0, RIP transmissions are not sent."
  },
  "wanIpxRipReceiveBroadcastFlag": {
    "name": "wanIpxRipReceiveBroadcastFlag",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: ''yes' On nX: both ram and flash, field trial 2 If IPX is configured, this object determines whether or not the nX product will accept IPX RIP (Routing Information Protocol) from other routers on the network. Broadcasts received will be added to the nX product's dynamic routing table."
  },
  "wanIpxRipSendInterval": {
    "name": "wanIpxRipSendInterval",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 60 On nX: both ram and flash, field trial 2 If IPX is configured, this object determines time, in seconds, between nX broadcasts of the IPX RIP destination information in its routing tables. If the value equals 0, RIP transmissions are not sent."
  },
  "wanIpxSapReceiveAdvertisementFlag": {
    "name": "wanIpxSapReceiveAdvertisementFlag",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: ''yes' On nX: both ram and flash, field trial 2 If IPX is configured, this object determines whether or not the nX product will accept IPX SAP advertisements from other routers on the network. Advertisements received will be added to the nX product's dynamic SAP table."
  },
  "wanIpxSapSendInterval": {
    "name": "wanIpxSapSendInterval",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 60 On nX: both ram and flash, field trial 2 If IPX is configured, this object determines time, in seconds, between nX broadcasts of the IPX SAP information in its routing tables. If the value equals 0, SAP advertisements are not sent."
  },
  "wanIpxNetbios": {
    "name": "wanIpxNetbios",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 'no' On nX: both ram and flash, field trial 2 If IPX is configured, this object determines if NetBIOS broadcasts are to be forwarded across interfaces. (It appears this is only needed if there is an application on the network that initiates a connection with a dialin client, see Shiva LanRover, page 10-6.)"
  },
  "wanISDNSwitchType": {
    "name": "wanISDNSwitchType",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "dss1": 2,
          "etsi": 3,
          "btnr": 4,
          "dass2": 5,
          "ess4": 6,
          "ess5": 7,
          "dms100": 8,
          "ni1": 9,
          "ni2": 10,
          "ni3": 11,
          "vn2": 12,
          "vn3": 13,
          "vn4": 14,
          "vn6": 15,
          "kdd": 16,
          "ins64": 17,
          "itr6": 18,
          "cornet": 19,
          "tad2": 20,
          "tad30": 21,
          "ts013": 22,
          "ts014": 23,
          "leased64s": 24,
          "leasedS01": 25,
          "leasedS02": 26,
          "leasedH0": 27,
          "leasedT1": 28,
          "leasedE1": 29
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The particular protocol type supported by the switch providing access to the ISDN network to which this subscriber interface is connected. Note: this entry definition is borrowed from the isdnSubTblSwitchType of the ISDN MIB Internet Draft"
  },
  "wanISDNCallingPhoneNoB1": {
    "name": "wanISDNCallingPhoneNoB1",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: empty This item contains the calling phone number for the ISDN B1 channel. "
  },
  "wanISDNCallingPhoneNoB2": {
    "name": "wanISDNCallingPhoneNoB2",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: empty This item contains the calling phone number for the ISDN B1 channel. "
  },
  "wanISDNSPID1": {
    "name": "wanISDNSPID1",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: empty This item contains the Service Profile Identifiers (SPID) for the ISDN B1 channel. "
  },
  "wanISDNSPID2": {
    "name": "wanISDNSPID2",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: empty This item contains the Service Profile Identifiers (SPID) for the ISDN B2 channel. "
  },
  "wanPortGroup": {
    "name": "wanPortGroup",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "group": 1,
          "non-group": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: non-group(2) This field is used to identify wether the Wan port is part of the Hunt Group. Port group is used as hunt group in TSD for reserving wan link capacity."
  },
  "wanISDNSubAddress1": {
    "name": "wanISDNSubAddress1",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: empty This item contains the subaddress for the ISDN B1 channel. "
  },
  "wanISDNSubAddress2": {
    "name": "wanISDNSubAddress2",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: empty This item contains the subaddress for the ISDN B2 channel. "
  },
  "wanISDNNTTCard": {
    "name": "wanISDNNTTCard",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: no(1) This item indicates whether this is an NTT ISDN card."
  },
  "wanISDNChannels": {
    "name": "wanISDNChannels",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "oneb": 1,
          "twob": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: oneb(1) This item indicates the number B channels supported by the ISDN card."
  },
  "wanEnableDataCompression": {
    "name": "wanEnableDataCompression",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: no. this entry indicates whether to perform data compression over the ppp connection."
  },
  "wanISDNChannelSpeed": {
    "name": "wanISDNChannelSpeed",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "cs56": 1,
          "cs64": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: cs64. This entry is used to configure the B channel speed of the ISDN card."
  },
  "wanUsageMode": {
    "name": "wanUsageMode",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.39",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "routing": 1,
          "modempool": 2,
          "share": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 1 This value indicates how the port is used for modem pooling. If 2 or 3 is set, the GSN and SSN also must be set. Note: This is a bit mapped field."
  },
  "wanModemPoolGSN": {
    "name": "wanModemPoolGSN",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.40",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The General Service Name used for this port. Used for Modem pooling"
  },
  "wanModemPoolSSN": {
    "name": "wanModemPoolSSN",
    "oid": "1.3.6.1.4.1.1055.2.5.1.2.41",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 14
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The Specific Service Name used for this port. Used for Modem pooling"
  },
  "wanIPAddressTable": {
    "name": "wanIPAddressTable",
    "oid": "1.3.6.1.4.1.1055.2.5.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "WanIPAddress table - one copy"
  },
  "wanIPAddressEntry": {
    "name": "wanIPAddressEntry",
    "oid": "1.3.6.1.4.1.1055.2.5.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "wanIPAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": " "
  },
  "wanIPAddressStatus": {
    "name": "wanIPAddressStatus",
    "oid": "1.3.6.1.4.1.1055.2.5.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "create-request": 2,
          "under-creation": 3,
          "invalid": 4,
          "modify": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indication of whether or not a valid entry."
  },
  "wanIPAddress": {
    "name": "wanIPAddress",
    "oid": "1.3.6.1.4.1.1055.2.5.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: 0 On nX: both ram and flash, field trial 2 This item specifies an IP address in the shared pool for remote dial-in user."
  },
  "wanStatPortTable": {
    "name": "wanStatPortTable",
    "oid": "1.3.6.1.4.1.1055.2.5.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Each WAN port's State and Statistical information is contained in a row in a SNMP table"
  },
  "wanStatPortEntry": {
    "name": "wanStatPortEntry",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "wanStatPortNumber",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The WAN table information for one WAN port."
  },
  "wanStatPortEntryStatus": {
    "name": "wanStatPortEntryStatus",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "create-request": 2,
          "under-creation": 3,
          "invalid": 4,
          "modify": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indication of whether or not a valid entry. This entry is used only to maintain uniformity of all table structures. User can neither delete nor add any entries in the table. Upon query, nX shall always return valid."
  },
  "wanStatPortNumber": {
    "name": "wanStatPortNumber",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 18
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Same as in wanPortNumber."
  },
  "wanStatPortState": {
    "name": "wanStatPortState",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disconnected": 1,
          "connected": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: disconnected."
  },
  "wanStatPortUserName": {
    "name": "wanStatPortUserName",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Currently connected Destination name or user name. Null if unknown."
  },
  "wanStatPortFrameTransmitted": {
    "name": "wanStatPortFrameTransmitted",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "# of frames transmitted out of this port."
  },
  "wanStatPortFrameReceived": {
    "name": "wanStatPortFrameReceived",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "# of frames received from this port."
  },
  "wanStatPortTransmitError": {
    "name": "wanStatPortTransmitError",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "# of transmit errors detected at this port."
  },
  "wanStatPortReceiveError": {
    "name": "wanStatPortReceiveError",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "# of receive errors detected at this port."
  },
  "wanStatPortTransmitQueueFull": {
    "name": "wanStatPortTransmitQueueFull",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "# of times transmit queue full detected at this port."
  },
  "wanStatPortCallOriginated": {
    "name": "wanStatPortCallOriginated",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "# of calls originated from this port. Includes both success and fail."
  },
  "wanStatPortCallAnswered": {
    "name": "wanStatPortCallAnswered",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "# of answers succeeded at this port."
  },
  "wanStatPortNoDialTone": {
    "name": "wanStatPortNoDialTone",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "# of calls failed due to no dial tone. also counted also in CallOriginated"
  },
  "wanStatPortNoAnswer": {
    "name": "wanStatPortNoAnswer",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "# of calls failed due to no answer from remote. also counted also in CallOriginated"
  },
  "wanStatPortBusyDetected": {
    "name": "wanStatPortBusyDetected",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "# of calls failed due to line busy at remote. also counted also in CallOriginated"
  },
  "wanStatPortNoCarrier": {
    "name": "wanStatPortNoCarrier",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "# of calls failed due to no carrier. also counted also in CallOriginated"
  },
  "wanStatPortModemSignal": {
    "name": "wanStatPortModemSignal",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Modem signal state. Bit masked DCD = 1, CTS =2, DTR = 4, RTS = 8, DSR =16 Bit state: 1 = On "
  },
  "wanStatPortConnDirection": {
    "name": "wanStatPortConnDirection",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dialin": 1,
          "dialout": 2,
          "dedicated": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Direction of the connection"
  },
  "wanStatPortProtoUp": {
    "name": "wanStatPortProtoUp",
    "oid": "1.3.6.1.4.1.1055.2.5.3.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This item is a bit encoded value representing various protocols, which are currently up over this connection. The encoded values are: IP(1), IPX(2), Bridging(4), Compression(8). Any combinations of these values are valid."
  },
  "wanIPAddressMaxEntry": {
    "name": "wanIPAddressMaxEntry",
    "oid": "1.3.6.1.4.1.1055.2.5.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "maximum # of entry allowed in the wanIPAddressTable."
  },
  "ipConfiguredFlag": {
    "name": "ipConfiguredFlag",
    "oid": "1.3.6.1.4.1.1055.2.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 'no' On nX: both ram and flash, field trial 1 This object is 'no' if IP is not configured for this LX-Product, 'yes' if it is configured."
  },
  "ipLANAddress": {
    "name": "ipLANAddress",
    "oid": "1.3.6.1.4.1.1055.2.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 0 On nX: both ram and flash, field trial 1 If IP is configured, this object contains the IP address for the nX product's ethernet port and the nX product itself. The user must supply this value if IP is configured. When IP is configured this value must not be 0."
  },
  "ipLANSubnetMask": {
    "name": "ipLANSubnetMask",
    "oid": "1.3.6.1.4.1.1055.2.3.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: N/A Default value in Workshop: 0 On nX: both ram and flash, field trial 1 If IP is configured, this object contains the subnet mask which the nX product will use for determining which packets are to be sent out over this LAN port. (A packet's IP address is 'anded' with the subnet mask and the result compared against the port's IP address. If there is a match, the packet is sent over the port, otherwise it isn't.)"
  },
  "ipBroadcastAddress": {
    "name": "ipBroadcastAddress",
    "oid": "1.3.6.1.4.1.1055.2.3.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 0 Default value in Workshop: 0 On nX: both ram and flash, field trial 1 If IP is configured, this object contains the IP address which the nX product will use for sending broadcast data. (The nX listens for broadcast data on broadcast addresses with both 0's and all 1's). A zero value means no broadcasts can be sent. This is used for sending RIP advertisements and for indicating which broadcasts are to be forwarded across ports."
  },
  "ipDefaultGateway": {
    "name": "ipDefaultGateway",
    "oid": "1.3.6.1.4.1.1055.2.3.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: N/A Default value in Workshop: 0 On nX: both ram and flash, field trial 2 If IP is configured, this object contains the network address to which the nX product will send all packets that it cannot determine a route for the packet from its routing tables (both static and dynamic)."
  },
  "ipRipReceiveAdvertisementFlag": {
    "name": "ipRipReceiveAdvertisementFlag",
    "oid": "1.3.6.1.4.1.1055.2.3.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 'yes' On nX: both ram and flash, field trial 2 If IP is configured, this object determines whether or not the nX product will accept IP RIP (Routing Information Protocol) from other routers on the network. Advertisements received will be added to the nX product's dynamic routing table."
  },
  "ipRipSendInterval": {
    "name": "ipRipSendInterval",
    "oid": "1.3.6.1.4.1.1055.2.3.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 30 On nX: both ram and flash, field trial 2 If IP is configured, this object determines time, in seconds, between nX broadcasts of the IP RIP destination information in its routing tables. If the value equals 0, RIP transmissions are not sent."
  },
  "ipDefaultGatewayType": {
    "name": "ipDefaultGatewayType",
    "oid": "1.3.6.1.4.1.1055.2.3.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 0,
          "lan": 1,
          "wan": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: NONE On nX: both ram and flash, field trial 2 If nX cannot determine a route for the packet from its routing table (both static and dynamic), the packet will be sent to a Default Gateway. If ipDefaultGatewayType is LAN, ipDefaultGateway address will be useed. Otherwise, the Default Gateway is located at WAN port, the packet will be forwarded to the destination defined in ipWanDestinationName or ipWanUserName."
  },
  "ipWanDestinationName": {
    "name": "ipWanDestinationName",
    "oid": "1.3.6.1.4.1.1055.2.3.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Same as destName in the Destination Table."
  },
  "ipWanUserName": {
    "name": "ipWanUserName",
    "oid": "1.3.6.1.4.1.1055.2.3.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Same as userName in the User Table."
  },
  "ipStaticRouteMaxEntry": {
    "name": "ipStaticRouteMaxEntry",
    "oid": "1.3.6.1.4.1.1055.2.3.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "maximum # of entry allowed in the ipStaticRouteTable. Default to 32."
  },
  "ipStaticRouteTable": {
    "name": "ipStaticRouteTable",
    "oid": "1.3.6.1.4.1.1055.2.3.12",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "IP Static Route table - one copy per IP port."
  },
  "ipDefaultGatewayIfType": {
    "name": "ipDefaultGatewayIfType",
    "oid": "1.3.6.1.4.1.1055.2.3.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "lan": 1,
          "wan": 2,
          "none": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: NONE If nX cannot determine a route for the packet from its routing table (both static and dynamic), the packet will be sent to a Default Gateway. If ipDefaultGatewayType is LAN, ipDefaultGateway address will be useed. Otherwise, the Default Gateway is located at WAN port, the packet will be forwarded to the destination defined in ipWanDestinationName or ipWanUserName."
  },
  "ipBroadcastForwardTypes": {
    "name": "ipBroadcastForwardTypes",
    "oid": "1.3.6.1.4.1.1055.2.3.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 0 This is a bit encoded value representing the types of IP broadcast forwarding over WAN to be enabled. This is a global setting for the NX. The mib entry destDialoutProtoSupport is used to control the IP broadcast forwarding to an invidual site. The encoded values are: NetBIOS(2), DNS(4), DHCP/BOOTP(8). Any combination of these values or NOBCASTFWD(1) are the only valid values."
  },
  "ipStaticRouteEntry": {
    "name": "ipStaticRouteEntry",
    "oid": "1.3.6.1.4.1.1055.2.3.12.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "ipStaticRouteDestinationAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The static route information for one route for this port."
  },
  "ipStaticRouteStatus": {
    "name": "ipStaticRouteStatus",
    "oid": "1.3.6.1.4.1.1055.2.3.12.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "create-request": 2,
          "under-creation": 3,
          "invalid": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indication of whether or not a valid entry."
  },
  "ipStaticRouteDestinationAddress": {
    "name": "ipStaticRouteDestinationAddress",
    "oid": "1.3.6.1.4.1.1055.2.3.12.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This is a destination network or host IP address. Packets that the nX product processes for this address will be routed as indicated by the remaining entries in this row. This value has already been 'anded' with the IP Destination Subnet Mask."
  },
  "ipStaticRouteDestinationSubnetMask": {
    "name": "ipStaticRouteDestinationSubnetMask",
    "oid": "1.3.6.1.4.1.1055.2.3.12.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Workshop should display by default the subnet mask based on class of destination IP address, the nX should not assume any default subnet value. This subnet mask is applied to destination address in packets processed by the nX product and then the resulting value is compared against the IP Destination Address. If a match is found, the packet is forwarded over the indicated destination interface."
  },
  "ipStaticRouteDestinationHopCount": {
    "name": "ipStaticRouteDestinationHopCount",
    "oid": "1.3.6.1.4.1.1055.2.3.12.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The value of this object indicates the number of hops between the nX product and the IP Destination Address. The hop count is often used as an indicator of the relative cost for using this route. This will be used by the LX to optimize the use of routes learned. By IP convention, if the hop count equals 16 the routing entry is disabled."
  },
  "ipStaticRouteDestinationName": {
    "name": "ipStaticRouteDestinationName",
    "oid": "1.3.6.1.4.1.1055.2.3.12.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Same as destName in the Destination Table."
  },
  "ipStaticRouteNetworkInterface": {
    "name": "ipStaticRouteNetworkInterface",
    "oid": "1.3.6.1.4.1.1055.2.3.12.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "lan": 1,
          "wan": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indication of which interface type to route this packet to. If LAN is defined, ipStaticRouteGateway must be defined. Otherwise, at least one of ipStaticRouteUserName and ipStaticRouteDestinationName must be defined."
  },
  "ipStaticRouteUserName": {
    "name": "ipStaticRouteUserName",
    "oid": "1.3.6.1.4.1.1055.2.3.12.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Same as userName in the User Table."
  },
  "ipStaticRouteGateway": {
    "name": "ipStaticRouteGateway",
    "oid": "1.3.6.1.4.1.1055.2.3.12.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This is the Gateway IP address of the static route."
  },
  "ipxConfiguredFlag": {
    "name": "ipxConfiguredFlag",
    "oid": "1.3.6.1.4.1.1055.2.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ipx-and-auto-learn-both-off": 1,
          "ipx-off-and-auto-learn-on": 2,
          "ipx-on-and-auto-learn-off": 3,
          "ipx-and-auto-learn-both-on": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 'ipx-and-auto-learn-both-off (1)' On nX: both ram and flash, This object reflects the state of ipx and auto-learning configuration as described by the names of the values."
  },
  "ipxNetbios": {
    "name": "ipxNetbios",
    "oid": "1.3.6.1.4.1.1055.2.4.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: no (1) This object reflects the state of NetBIOS (IPX Type20) frame forwarding for the NX. NetBIOS forwarding is enabled for a specific site only when this object is set to 'yes' and NetBIOS/IPX bit is set in the destDialoutProtoSupport object for the site."
  },
  "ipxMultiFrameTable": {
    "name": "ipxMultiFrameTable",
    "oid": "1.3.6.1.4.1.1055.2.4.9",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "IPX multifram type support, the table contains fix size of 4 entries. They can not be added or deleted."
  },
  "ipxMultiFrameEntry": {
    "name": "ipxMultiFrameEntry",
    "oid": "1.3.6.1.4.1.1055.2.4.9.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "ipxMultiFrameType",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The community information for this community."
  },
  "ipxMultiFrameStatus": {
    "name": "ipxMultiFrameStatus",
    "oid": "1.3.6.1.4.1.1055.2.4.9.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "create-request": 2,
          "under-creation": 3,
          "invalid": 4,
          "modify": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indication of whether or not a valid entry. User can only use Modify"
  },
  "ipxMultiFrameType": {
    "name": "ipxMultiFrameType",
    "oid": "1.3.6.1.4.1.1055.2.4.9.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ieee-8022": 1,
          "ieee-8023-raw": 2,
          "ieee-8022-SNAP": 3,
          "ethernet-II": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: IEEE 802.2"
  },
  "ipxMultiFrameSelectFlag": {
    "name": "ipxMultiFrameSelectFlag",
    "oid": "1.3.6.1.4.1.1055.2.4.9.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: there must be at least a entry is = yes"
  },
  "ipxMultiFrameNetworkAddress": {
    "name": "ipxMultiFrameNetworkAddress",
    "oid": "1.3.6.1.4.1.1055.2.4.9.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 0 If IPX Manual Set Network Address is set to 'yes', this object specifies the IPX Network Address that the nX product will use for packets sent to it. Normally the IPX Node Address is automatically taken from the network."
  },
  "ipxNetAddressAutoLearnStateCounter": {
    "name": "ipxNetAddressAutoLearnStateCounter",
    "oid": "1.3.6.1.4.1.1055.2.4.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 70
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: 0 If IPX is configured, and Auto learn is Yes. this object determines the time (in sec) remaining in the IPX auto learn phase. If the value is non-zero, nX auto learn is in progress. Workshop will continue to poll this mib item, and ipxMultiFrameTable."
  },
  "snmpCommunityNameTable": {
    "name": "snmpCommunityNameTable",
    "oid": "1.3.6.1.4.1.1055.2.10.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Community name table"
  },
  "snmpCommunityNameEntry": {
    "name": "snmpCommunityNameEntry",
    "oid": "1.3.6.1.4.1.1055.2.10.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "snmpCommunityName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The community information for this community."
  },
  "snmpCommunityNameStatus": {
    "name": "snmpCommunityNameStatus",
    "oid": "1.3.6.1.4.1.1055.2.10.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "create-request": 2,
          "under-creation": 3,
          "invalid": 4,
          "modify": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indication of whether or not a valid entry."
  },
  "snmpCommunityName": {
    "name": "snmpCommunityName",
    "oid": "1.3.6.1.4.1.1055.2.10.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: none On nX: both ram and flash, field trial 1 This item defines a community name to be recognized by the nX Product. For convenience of the user, Workshop will restrict community strings to be ASCII characters."
  },
  "snmpCommunityPermission": {
    "name": "snmpCommunityPermission",
    "oid": "1.3.6.1.4.1.1055.2.10.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "readonly": 1,
          "readwrite": 2,
          "lanuser": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: Three rows are defined initially, one with each of the above permissions. On nX: both ram and flash This item defines the permission level for its associated Community Name."
  },
  "snmpMacServerTable": {
    "name": "snmpMacServerTable",
    "oid": "1.3.6.1.4.1.1055.2.10.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "SNMP MAC server table - one copy"
  },
  "snmpMacServerEntry": {
    "name": "snmpMacServerEntry",
    "oid": "1.3.6.1.4.1.1055.2.10.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "snmpMacServerAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The SNMP MAC server information for one server."
  },
  "snmpMacServerStatus": {
    "name": "snmpMacServerStatus",
    "oid": "1.3.6.1.4.1.1055.2.10.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "create-request": 2,
          "under-creation": 3,
          "invalid": 4,
          "modify": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indication of whether or not a valid entry."
  },
  "snmpMacServerAddress": {
    "name": "snmpMacServerAddress",
    "oid": "1.3.6.1.4.1.1055.2.10.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: none On nX: both ram and flash, field trial 1 This item contains the MAC address of the server to which SNMP traps are to be sent. A value of zero indicates no server."
  },
  "snmpIpServerTable": {
    "name": "snmpIpServerTable",
    "oid": "1.3.6.1.4.1.1055.2.10.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "SNMP IP server table - one copy"
  },
  "snmpIpServerEntry": {
    "name": "snmpIpServerEntry",
    "oid": "1.3.6.1.4.1.1055.2.10.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "snmpIpServerAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The SNMP IP server information for one server."
  },
  "snmpIpServerStatus": {
    "name": "snmpIpServerStatus",
    "oid": "1.3.6.1.4.1.1055.2.10.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "create-request": 2,
          "under-creation": 3,
          "invalid": 4,
          "modify": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indication of whether or not a valid entry."
  },
  "snmpIpServerAddress": {
    "name": "snmpIpServerAddress",
    "oid": "1.3.6.1.4.1.1055.2.10.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: 0 On nX: both ram and flash, field trial 1 This item contains the IP address of the server to which SNMP traps are to be sent. A value of zero indicates no server."
  },
  "snmpCommunityNameMaxEntry": {
    "name": "snmpCommunityNameMaxEntry",
    "oid": "1.3.6.1.4.1.1055.2.10.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Max # of entries allowed in snmpCommunityName table"
  },
  "destTable": {
    "name": "destTable",
    "oid": "1.3.6.1.4.1.1055.2.6.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Destination table - one copy"
  },
  "destEntry": {
    "name": "destEntry",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "destName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The information for one destination."
  },
  "destStatus": {
    "name": "destStatus",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "create-request": 2,
          "under-creation": 3,
          "invalid": 4,
          "modify": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indication of whether or not a valid entry."
  },
  "destName": {
    "name": "destName",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: none On nX: both ram and flash, field trial 1 This item contains a user supplied identification for this destination. This should be something meaningful to the user, such as 'Home Office'. In a later release, User Table entries will include a destination field for dialout."
  },
  "destType": {
    "name": "destType",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "lan-to-lan": 1
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: Lan-to-Lan On nX: (not necessary in first release) both ram and flash, field trial 2 This item indicates whether the destination is a LAN or remote access. A Lan destination indicates Lan-to-Lan traffic over the link. All destinations are PPP serial communication. There will be other types, e.g. Remote-access, in later versions of the LX."
  },
  "destDialoutPhoneNumber": {
    "name": "destDialoutPhoneNumber",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: empty On nX: both ram and flash, field trial 1 This item contains the phone number that is to be used to call the destination. This string contains just the AT command set characters for the phone number. During dialout, the nX forms the entire dialout string by prefixing this item with the Modem Dial Prefix."
  },
  "destDialoutProtoSupport": {
    "name": "destDialoutProtoSupport",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 0 On nX: both ram and flash, This item is a bit encoded value representing various protocols to be enabled during the establishment of a WAN connection. The encoded values are: IP(1), IPX(2), Bridging(4), NetBIOS/IPX(8), IPBCASTFWD(16). Any combination of IP, IPX and Bridging is valid. NetBIOS/IPX is valid only if IPX bit is set. IPBCASTFWD is valid only if IP bit is set. Value zero is invalid"
  },
  "destDialoutIpxSupport": {
    "name": "destDialoutIpxSupport",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "NOTE: THIS FIELD IS NO LONGER IN USE. The field destDialoutProtoSupport is used to encode all protocols supported. Default value on nX: same as IP Configured Flag On nX: both ram and flash This item equals 'yes' if the dialout destination supports IPX, and 'no' otherwise. No IPX traffic will be routed or bridged to this destination if the value is 'no'. The IPX Configured Flag must be 'yes' for this field to be 'yes'."
  },
  "destDialoutModemSpeed": {
    "name": "destDialoutModemSpeed",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "twelvehundred": 1200,
          "twentyfourhundred": 2400,
          "fortyeighthundred": 4800,
          "ninetysixhundred": 9600,
          "nineteentwelve": 19200,
          "thirtyeigthfour": 38400,
          "fiftysevensix": 57600,
          "onefifteentwo": 115200
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 'unspecified' On nX: both ram and flash, This item allows the user to override the Modem Speed set up for the port for dialout calls to this destination. If the value of this item is 'unspecified', then the Modem Speed for the port is used. The user might specify this to shorten the time it takes for the modems to negotiate speed."
  },
  "destPppMtuMru": {
    "name": "destPppMtuMru",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 64,
            "max": 1500
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 1500 On nX: both ram and flash, field trial 2 This field can be used to override the global MTR/MTU. The user should set this field if the destination or the Wan link has special requirements. Any value less than the minimum value allowed for a port's MTR/MRU will be interpreted as an unspecified value and the MTR/MRU value for the nX will be used. (Perhaps the user could be asked for line quality and the nX or Workshop automatically determine MTU/MRU.)"
  },
  "destDialoutHandshake": {
    "name": "destDialoutHandshake",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "pap": 2,
          "chap": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 'none' On nX: both ram and flash, 'none' and 'PAP' for field trial 1 This field identifies the type of authorization negotiation that is to be performed during dialout to this destination. (On dialin, the handshake is determined by the caller.)"
  },
  "destDialoutUserName": {
    "name": "destDialoutUserName",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 0 On nX: both ram and flash, field trial 1 This value identifies a User Name for PAP or CHAP dialout to this destination. This entry is only valid if Destination Handshake if a value other than 'none'."
  },
  "destDialoutPassword": {
    "name": "destDialoutPassword",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 0 On nX: both ram and flash, field trial 1 This value identifies the user password for PAP or CHAP dialout to this destination. This entry is only valid if Destination Handshake if a value other than 'none'."
  },
  "destPorts": {
    "name": "destPorts",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 18
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default Value on nX: 0. This field indicates the port number associated with this site, if the link characteristic wanLinkDialupFlag is set to dedicated(2)."
  },
  "destMaximumDialoutConnectTime": {
    "name": "destMaximumDialoutConnectTime",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 0 On nX: both ram and flash, field trial 1 This object contains, in minutes, the maximum time to leave this connection active for dialout. After the time elapses, the nX will automatically hangup the connection, assuming the user has not already manually terminated the connection. A value of zero means there is no time limit. For any given call, this time by be shortened because of a value in the User Maximum Dialout Connect Time object. (For dialin, the maximum connect time comes from the User Table.) (If we require a default user name for the destination, we could take the maximum dialout time from the User Table.)"
  },
  "destDialoutStatus": {
    "name": "destDialoutStatus",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "dialing": 2,
          "connected": 3,
          "connection-failed": 4,
          "disconnected": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Default value on nX: none This item is used by the Workshop to determine the status of a dialout for this destination."
  },
  "destDialoutSchedule": {
    "name": "destDialoutSchedule",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 96,
            "max": 96
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 0 On nX: both ram and flash, field trial 2 This is a one-week bit map, with one bit for every 15 minutes. The string is organized a 8 groups of 12 bytes (96 bits), one group for each day of the week plus the 8th for all holidays, starting with Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Holiday. The first bit in each group is for midnight (12:00 AM) to 12:15 AM, the next for 12:15 AM to 12:30 AM, etc. If the bit for a time interval equals 1, a dialout connection to this destination is to be active during this time period. If the bit for a time interval equals 0, there is to be no dialout connection to this destination during this time period. This encoding of dialout times means dialout must be specified in 15 minutes intervals. (Depending on the user interface, Workshop may be able to reconstruct the user's input from this bit string. If it can't, it will be necessary to define an object that contains encoding for Workshop -- or change this object so it can be used by both the nX and Workshop.) This field does not apply to leased lines."
  },
  "destHolidaySchedule": {
    "name": "destHolidaySchedule",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "nodialout": 2,
          "sunday": 3,
          "monday": 4,
          "tuesday": 5,
          "wednesday": 6,
          "thursday": 7,
          "friday": 8,
          "saturday": 9
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 0 NO LONGER USED. This item specifies which day's dialout schedule is to be used for holidays. For example, this allows a person to specify that on holidays to use Sunday's dialout schedule. 'Normal' indicates that the day's standard dialout schedule is to be used. 'Nodialout' indicates that no dialout at all is to occur on holidays."
  },
  "destLinkLayerNRZFlag": {
    "name": "destLinkLayerNRZFlag",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "nrz": 1,
          "nrzi": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: nrz On nX: both ram and flash, field trial 1 (may be encoded into Link Layer Type) If appropriate for the Link Line Type, this flag identifies whether the line is nrz or nrzi. (See wan NRZ Flag.)"
  },
  "destLinkLayerProtocolType": {
    "name": "destLinkLayerProtocolType",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "ppp": 2,
          "isdn": 3,
          "x25": 4,
          "framerelaydte": 5,
          "framerelaydce": 6
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: ppp On nX: both ram and flash, This flag identifies whether the Link Line Type is ppp. Other options are not supported at this time."
  },
  "destLinkDialupFlag": {
    "name": "destLinkDialupFlag",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dialup": 1,
          "dedicated": 2,
          "dtr-dial": 3,
          "isdn-dialup": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: dialup On nX: both ram and flash, field trial 1 (may be encoded into Link Layer Type) If appropriate for the Link Line Type, this flag identifies whether the line is dialup (switched), dedicated, or DTR dial."
  },
  "destPortType": {
    "name": "destPortType",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "pcmcia": 1,
          "rs232": 2,
          "v35": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: determined by hardware On nX: from 'ram' (actually hardware), field trial 2 This value indicates whether the dest port is PCMCIA, or a D-shell connection - either RS232 or V.35."
  },
  "destLinkLayerType": {
    "name": "destLinkLayerType",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "async": 1,
          "sync": 2,
          "autosync": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: async On nX: both ram and flash, field trial 1 This object identifies the type of communication link that is used by this destination. Some data link types require further qualification."
  },
  "destDialoutStatusData": {
    "name": "destDialoutStatusData",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "It has the same format as the event messages: Message # : 2 bytes Date/Time stamping: 4 bytes (integer, msb first) Length: n bytes defining the size of the parameter list that folllows ( 0 is allowed) Message parameters: n bytes, associated with the message #. "
  },
  "destDialoutScheduleFlag": {
    "name": "destDialoutScheduleFlag",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disable": 1,
          "enable": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: disable "
  },
  "destDialinUserName": {
    "name": "destDialinUserName",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " This value identifies a User Name for PAP or CHAP dialin to this destination. "
  },
  "destDialinPassword": {
    "name": "destDialinPassword",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " This value identifies the user password for PAP or CHAP dialin to this destination."
  },
  "destMaximumDialinConnectTime": {
    "name": "destMaximumDialinConnectTime",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " This object contains, in minutes, the maximum time to leave this connection active for dialin connections. After the time elapses, the nX will automatically hangup the connection, assuming the user has not already manually terminated the connection. A value of zero means there is no time limit."
  },
  "destTSDFlag": {
    "name": "destTSDFlag",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "tsd": 1,
          "non-tsd": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Default value on nX: non-tsd This entry defines this Destination (Site) to be either a TSD or non-TSD site. If TSD site, then destTSDInactivityTime, destTSDMaxTime, and destPortGroup are meaningful. "
  },
  "destTSDInactivityTime": {
    "name": "destTSDInactivityTime",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " This object contains, in minutes, the maximum time. A value of zero means there is no time limit."
  },
  "destTSDMaxDownTime": {
    "name": "destTSDMaxDownTime",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " A value of zero means there is no time limit."
  },
  "destTSDPortGroup": {
    "name": "destTSDPortGroup",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 0. This field is used to identify the Wan port # to which this TSD entry is assigned. port group #128 is used as hunt group in TSD for reserving wan link capacity."
  },
  "destManualDialCallback": {
    "name": "destManualDialCallback",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " This item indicates whether callback is enabled in Manual Dial mode."
  },
  "destAllowDynamicIPAddr": {
    "name": "destAllowDynamicIPAddr",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "this entry indicates whether the ip address provided by the remote router (through IPCP negotiation), for the use on the local WAN port, is permitted."
  },
  "destISDNChannels": {
    "name": "destISDNChannels",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "oneb": 1,
          "twob": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This entry indicates the number B channels supported by the ISDN card (configured from the port page)."
  },
  "destDialoutPhoneNumber2": {
    "name": "destDialoutPhoneNumber2",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: empty This item contains the second phone number that is to be used to call the destination using the second ISDN B channel. This string contains just the AT command set characters for the phone number. During dialout, the nX forms the entire dialout string by prefixing this item with the Modem Dial Prefix."
  },
  "destTSDExpectCallback": {
    "name": "destTSDExpectCallback",
    "oid": "1.3.6.1.4.1.1055.2.6.1.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: no Determines whether to expect a callback. If callback is expected, re-dial should delay as specified by syReverseCallbackDelay"
  },
  "destMaxEntry": {
    "name": "destMaxEntry",
    "oid": "1.3.6.1.4.1.1055.2.6.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Max # of entries allowed in Destination table"
  },
  "destScriptTable": {
    "name": "destScriptTable",
    "oid": "1.3.6.1.4.1.1055.2.6.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Destination script table"
  },
  "destScriptEntry": {
    "name": "destScriptEntry",
    "oid": "1.3.6.1.4.1.1055.2.6.3.2",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "destinationName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Chat script information for a destination"
  },
  "destScriptEntryStatus": {
    "name": "destScriptEntryStatus",
    "oid": "1.3.6.1.4.1.1055.2.6.3.2.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "create-request": 2,
          "under-creation": 3,
          "invalid": 4,
          "modify": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indication of whether or not a valid entry."
  },
  "destinationName": {
    "name": "destinationName",
    "oid": "1.3.6.1.4.1.1055.2.6.3.2.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Same as destName in the Destination Table."
  },
  "destScriptUseFlag": {
    "name": "destScriptUseFlag",
    "oid": "1.3.6.1.4.1.1055.2.6.3.2.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disable": 1,
          "enable": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This entry indicates whether the script associated with this site should be executed or not."
  },
  "destScriptTimeout": {
    "name": "destScriptTimeout",
    "oid": "1.3.6.1.4.1.1055.2.6.3.2.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the total time limit allocated for the execution of the script to completion"
  },
  "destScriptName": {
    "name": "destScriptName",
    "oid": "1.3.6.1.4.1.1055.2.6.3.2.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This entry contains the the name of the script."
  },
  "destScript": {
    "name": "destScript",
    "oid": "1.3.6.1.4.1.1055.2.6.3.2.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This entry contains the chat script identified by the entry destScriptName."
  },
  "destScriptStartupCmd": {
    "name": "destScriptStartupCmd",
    "oid": "1.3.6.1.4.1.1055.2.6.3.2.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 31
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This entry contains the command used to indicate the service type to the ISP, if required."
  },
  "eventTable": {
    "name": "eventTable",
    "oid": "1.3.6.1.4.1.1055.2.11.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Event table - one copy "
  },
  "eventEntry": {
    "name": "eventEntry",
    "oid": "1.3.6.1.4.1.1055.2.11.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "eventGroupIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The event information of one event data."
  },
  "eventGroupIndex": {
    "name": "eventGroupIndex",
    "oid": "1.3.6.1.4.1.1055.2.11.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "index into the event log table entry. It is a reference point where the SNMP manager will issue the GET NEXT request to get the next group of events. nX needs to set this value to match the last SEQUENCE # that is returned in the eventData."
  },
  "eventData": {
    "name": "eventData",
    "oid": "1.3.6.1.4.1.1055.2.11.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A group of event log entries. Each entry will be one event with the following format: Sequence #: 2 bytes Message # : 2 bytes Date/Time stamping: 4 bytes (integer, msb first) Length: n bytes defining the size of the parameter list that follows ( 0 is allowed) Message parameters: n bytes, associated with the message #. "
  },
  "discNodeName": {
    "name": "discNodeName",
    "oid": "1.3.6.1.4.1.1055.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 19
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Node Name consists of the hardware type and MAC address as follows: SoHo-001122334455 for SoHo, Central001122334455 for Central Torte-001122334455 for Torte (not available) Rout-001122334455 for ROUTEMAN (1/2 meg version) RoutXL-001122334455 for ROUTEMANXL (1 meg version). "
  },
  "discModel": {
    "name": "discModel",
    "oid": "1.3.6.1.4.1.1055.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "soho": 256,
          "central": 257,
          "torte": 258,
          "routeman": 259,
          "routemanxl": 260
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Model contains a numeric identifier for the hardware model, as follows: 256 - SoHo, 257 - Central, 258 - Torte (not available), 259 - ROUTEMAN, 260 - ROUTEMANXL (1 meg version). "
  },
  "discProto": {
    "name": "discProto",
    "oid": "1.3.6.1.4.1.1055.3.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mac": 1,
          "ip": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Discover Protocol is the protocol over which the last Get request was received from. "
  },
  "syFMOperation": {
    "name": "syFMOperation",
    "oid": "1.3.6.1.4.1.1055.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "beginCopy": 2,
          "copyDone": 3,
          "deleteFile": 4,
          "renameFile": 5,
          "listDir": 6,
          "checkSum": 7,
          "abortCopy": 8,
          "getFileInfo": 9
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object is used to initiate a file management operation. Operations are as described below. If this object is read, other(1) will be returned."
  },
  "syFMTimeStamp": {
    "name": "syFMTimeStamp",
    "oid": "1.3.6.1.4.1.1055.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This specifies the value of sysUpTime when the most recent file management operation was initiated."
  },
  "syFMError": {
    "name": "syFMError",
    "oid": "1.3.6.1.4.1.1055.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "successful": 2,
          "inProgress": 3,
          "noResponse": 4,
          "noFile": 5,
          "noSpace": 6,
          "noPermission": 7,
          "timeout": 8,
          "badChecksum": 9,
          "badOperation": 10,
          "aborted": 11,
          "other": 12
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object identifies the results of the most recent attempt at a file operation. If no file operations have been attempted since the system was initialized, this object will have the value none(1)."
  },
  "syFileTransfer": {
    "name": "syFileTransfer",
    "oid": "1.3.6.1.4.1.1055.4.4",
    "class": "objectidentity"
  },
  "syFileInfo": {
    "name": "syFileInfo",
    "oid": "1.3.6.1.4.1.1055.4.5",
    "class": "objectidentity"
  },
  "syFileInfoVersion": {
    "name": "syFileInfoVersion",
    "oid": "1.3.6.1.4.1.1055.4.5.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 128,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The version string from a module header. Example, $Release: 2.0.4a $File: lxkernel.gz $Type: kernelFile $DateTime: 07/09/96 19:11 $ProductType: SoHo $Lic: (C)1996 SBE,Inc $Release: is a three part number X.Y.Z, e.g. 2.0.4a $File: is up to 8.3 character file name, e.g. lxkernel.gz $Type: is kernelFile or moduleFile $DateTime: is Month/DayNumber/Year TimeOfDay $ProductType: is the hardware, e.g. SoHo, Central, Routeman, RoutXL $Lic: is (C) Year(s) SBE,Inc Sound files and internal configuration files have null syFileInfoVersion strings."
  },
  "syFileInfoChecksum": {
    "name": "syFileInfoChecksum",
    "oid": "1.3.6.1.4.1.1055.4.5.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This MIB entry is used to retrieve the Information related to a file on the nX File System. The File information contains version string, checksum and length of the file. Information in this field is mapped in to the file information structure by the nX and Workshop."
  },
  "syFileInfoLength": {
    "name": "syFileInfoLength",
    "oid": "1.3.6.1.4.1.1055.4.5.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This MIB entry is used to retrieve the Information related to a file on the nX File System. The File information contains version string, checksum and length of the file. Information in this field is mapped in to the file information structure by the nX and Workshop."
  },
  "syDirTable": {
    "name": "syDirTable",
    "oid": "1.3.6.1.4.1.1055.4.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The directory entry of one file."
  },
  "syDirEntry": {
    "name": "syDirEntry",
    "oid": "1.3.6.1.4.1.1055.4.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "SBE-MIB",
        "object": "syDirName",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "syDirStatus": {
    "name": "syDirStatus",
    "oid": "1.3.6.1.4.1.1055.4.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "create-request": 2,
          "under-creation": 3,
          "invalid": 4,
          "modify": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "syDirName": {
    "name": "syDirName",
    "oid": "1.3.6.1.4.1.1055.4.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 13
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "syDirCompressSize": {
    "name": "syDirCompressSize",
    "oid": "1.3.6.1.4.1.1055.4.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "syDirVersion": {
    "name": "syDirVersion",
    "oid": "1.3.6.1.4.1.1055.4.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "syDirUncompressSize": {
    "name": "syDirUncompressSize",
    "oid": "1.3.6.1.4.1.1055.4.6.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "fileName": {
    "name": "fileName",
    "oid": "1.3.6.1.4.1.1055.4.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 13
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field contains a null terminated string in the format of nnnnnnnn.xxx (DOS format file name). The file name is used by the delete file operation, or the get file info operation."
  },
  "fileNameFrom": {
    "name": "fileNameFrom",
    "oid": "1.3.6.1.4.1.1055.4.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 13
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field contains a null terminated string in the format of nnnnnnnn.xxx (DOS format file name). The file name is the old file name used by the rename file operation."
  },
  "fileNameTo": {
    "name": "fileNameTo",
    "oid": "1.3.6.1.4.1.1055.4.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 13
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field contains a null terminated string in the format of nnnnnnnn.xxx (DOS format file name). The file name is the new file name used by the rename file operation."
  },
  "fileTransferStatus": {
    "name": "fileTransferStatus",
    "oid": "1.3.6.1.4.1.1055.4.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "inActive": 1,
          "inProgress": 2,
          "waitingCopy": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This identifies the current status of the file Transfer operation. If there is a transfer in progress, this object will have the value inProgress(2). Otherwise inactive(1) will be returned."
  },
  "fileTransferStartTime": {
    "name": "fileTransferStartTime",
    "oid": "1.3.6.1.4.1.1055.4.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This specifies the value of sysUpTime when the most recent file Transfer operation was initiated."
  },
  "fileTransferFileLength": {
    "name": "fileTransferFileLength",
    "oid": "1.3.6.1.4.1.1055.4.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This specifies the total Data Length of current file being transferred, in bytes."
  },
  "fileTransferCheckSum": {
    "name": "fileTransferCheckSum",
    "oid": "1.3.6.1.4.1.1055.4.4.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This specifies the CCITT cyclic redundancy checksum of current file being transffered."
  },
  "fileTransferDirection": {
    "name": "fileTransferDirection",
    "oid": "1.3.6.1.4.1.1055.4.4.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "copyingFromLX": 2,
          "copyingToLXRAM": 3,
          "copyingToLXFlash": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This identifies the current direction of the file Transfer operation. If there is a transfer in progress, this object will have the value copyingFromLX(2), if file is being copied to the Box. Otherwise it will have copyingToLX(1). If no transfer in progress none will be returned."
  },
  "fileTransferLastRcvTime": {
    "name": "fileTransferLastRcvTime",
    "oid": "1.3.6.1.4.1.1055.4.4.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This specifies the value of sysUpTime when the most recent file Object was received. This value is used to time out the File Transfer operation if no File Object is received within a timeout period."
  },
  "fileTransferRemoteAddr": {
    "name": "fileTransferRemoteAddr",
    "oid": "1.3.6.1.4.1.1055.4.4.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object specifies the MAC Address of the Remote management stations which initiated the file transfer."
  },
  "fileTransferRemoteFileName": {
    "name": "fileTransferRemoteFileName",
    "oid": "1.3.6.1.4.1.1055.4.4.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 12,
            "max": 12
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This specifies the path and name of a Remote file residing on the remote management station. sbeFileTransferRemoteAddr For LAN Boot this item MUST be 12 characters in length!"
  },
  "fileTransferLocalFileName": {
    "name": "fileTransferLocalFileName",
    "oid": "1.3.6.1.4.1.1055.4.4.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 12
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This specifies the name of Local File being transferred. For the File Transfer TO the remote station this becomes the name of the source file. For the FROM operation this is the name of the local file where the new file will be stored. For LAN Boot this item MUST be 12 characters in length!"
  },
  "fileTransferData": {
    "name": "fileTransferData",
    "oid": "1.3.6.1.4.1.1055.4.4.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 532,
            "max": 532
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field contains the data of the file being transfered. The data has a header inside which contains information about the file being transfered and the current data block."
  },
  "modempoolEnabled": {
    "name": "modempoolEnabled",
    "oid": "1.3.6.1.4.1.1055.6.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 1,
          "enabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: disabled On nX: both ram and flash, field trial 1 If this value is 'enabled', the modem pool is enabled. If this value is 'disabled', if the modem pool is disabled."
  },
  "modempoolNodeName": {
    "name": "modempoolNodeName",
    "oid": "1.3.6.1.4.1.1055.6.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The nodename contains the modem server name advertised in SAP and UDP broadcasts"
  },
  "modempoolProtoSupport": {
    "name": "modempoolProtoSupport",
    "oid": "1.3.6.1.4.1.1055.6.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 7
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default value on nX: 0 On nX: both ram and flash, This item is a bit encoded value representing various protocols to be used for server advertisement. The encoded values are: IP(1), IPX(2). Any combination of these values is valid. Zero is invalid"
  },
  "dummyStopperForWorkshopForGetNext": {
    "name": "dummyStopperForWorkshopForGetNext",
    "oid": "1.3.6.1.4.1.1055.65535.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/SBE-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 19:10:34 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "SBE-MIB"
  }
}