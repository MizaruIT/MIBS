{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "NOTIFICATION-TYPE",
      "Bits",
      "Counter32",
      "MODULE-IDENTITY",
      "Integer32",
      "TimeTicks",
      "Gauge32",
      "OBJECT-IDENTITY",
      "IpAddress",
      "MibIdentifier",
      "iso",
      "Counter64",
      "OBJECT-TYPE",
      "Unsigned32"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ],
    "XYLO-MIB-SMI": [
      "callmgmtTrapObj",
      "genericTrapObj",
      "anxTrapHostInfo",
      "wanTrapObj",
      "modemTrapObj"
    ]
  },
  "wanBpvThreshold": {
    "name": "wanBpvThreshold",
    "oid": "1.3.6.1.4.1.15.100.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The threshold which, when met or exceeded, triggers the wanBpvThreshTrap to be sent. Setting this object to zero (0) disables the trap. This object corresponds to NA/admin parameter bpv_threshold."
  },
  "wanOofThreshold": {
    "name": "wanOofThreshold",
    "oid": "1.3.6.1.4.1.15.100.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The threshold which, when met of exceeded, triggers the wanOofThreshTrap to be sent. Setting this object to zero (0) disables the trap. This object corresponds to NA/admin parameter oof_threshold."
  },
  "wanEsThreshold": {
    "name": "wanEsThreshold",
    "oid": "1.3.6.1.4.1.15.100.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The threshold which, when met or exceeded, triggers the wanEsThreshTrap to be sent. Setting this object to zero (0) disables the trap. This object corresponds to NA/admin parameter es_threshold."
  },
  "wanCvThreshold": {
    "name": "wanCvThreshold",
    "oid": "1.3.6.1.4.1.15.100.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The threshold which, when met or exceeded, triggers the wanCvThreshtrap to be sent. Setting this object to zero (0) disables the trap. This object corresponds to NA/admin parameter cv_threshold."
  },
  "wanEsfThreshold": {
    "name": "wanEsfThreshold",
    "oid": "1.3.6.1.4.1.15.100.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The threshold which, when met or exceeded, triggers the wanEsfThreshTrap to be sent. Setting this object to zero (0) disables the trap. This object corresponds to NA/admin parameter esf_threshold."
  },
  "wanSesThreshold": {
    "name": "wanSesThreshold",
    "oid": "1.3.6.1.4.1.15.100.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The threshold which, when met or exceeded, triggers the wanSesThreshTrap to be sent. Setting this object to zero (0) disables the trap. This object corresponds to NA/admin parameter ses_threshold."
  },
  "wanUasThreshold": {
    "name": "wanUasThreshold",
    "oid": "1.3.6.1.4.1.15.100.1.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The threshold which, when met or exceeded, triggers the wanUasThreshTrap to be sent. Setting this object to zero (0) disables the trap. This object corresponds to NA/admin parameter uas_threshold."
  },
  "wanBesThreshold": {
    "name": "wanBesThreshold",
    "oid": "1.3.6.1.4.1.15.100.1.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The threshold which, when met or exceeded, triggers the wanBesThreshTrap to be sent. Setting this object to zero (0) disables the trap. This object corresponds to NA/admin parameter bes_threshold."
  },
  "wanLofcThreshold": {
    "name": "wanLofcThreshold",
    "oid": "1.3.6.1.4.1.15.100.1.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The threshold which, when met or exceeded, triggers the wanLofcThreshTrap to be sent. Setting this object to zero (0) disables the trap. This object corresponds to NA/admin parameter lofc_threshold."
  },
  "wanCssThreshold": {
    "name": "wanCssThreshold",
    "oid": "1.3.6.1.4.1.15.100.1.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The threshold which, when met or exceeded, triggers the wanCssThreshTrap to be sent. Setting this object to zero (0) disables the trap. This object corresponds to NA/admin parameter css_threshold."
  },
  "ds0ErrorThreshold": {
    "name": "ds0ErrorThreshold",
    "oid": "1.3.6.1.4.1.15.100.1.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object defines the threshold for the number of consecutive calls that the ds0 fails to accept after which the ds0ErrorTrap is sent to the trap host(s). Setting this object to zero (0) disables the trap This object corresponds to the na/admin parameter ds0_error_threshold."
  },
  "mdmErrorTrapThresh": {
    "name": "mdmErrorTrapThresh",
    "oid": "1.3.6.1.4.1.15.100.1.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object defines the threshold for number of consecutive calls that the modem fails to accept after which the modem is busied out and wanMdmErrorThreshTrap is sent to the trap host(s). Setting this object to zero, disables the trap. Default is zero (disable). This object corresponds to modem_error_threshold NA/admin parameter."
  },
  "callBeginTrapObj": {
    "name": "callBeginTrapObj",
    "oid": "1.3.6.1.4.1.15.100.1.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enable": 1,
          "disable": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object controls the callBeginTrap trap generation by the RAC. Setting this object to disable, the RAC will not generate the callBeginTrap trap. Default is disable(2). This object corresponds to call_begin_trap NA/admin parameter."
  },
  "callEndTrapThresh": {
    "name": "callEndTrapThresh",
    "oid": "1.3.6.1.4.1.15.100.1.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object controls the callEndTrap trap generation by the RAC. Setting this object to zero (default) will disable the trap generation. Setting this object to a value other than zero, the RAC will generate the callEndTrap after than many calls has terminated. A call that has failed to connect is considered a terminated call with appropriate disconnect reason. This object can be used by the manager entity to retrieve the terminated call information from the call history MIB table. Default value is zero. This object corresponds to call_end_trap_inc NA/admin parameter."
  },
  "unexpectDisconnectTrapThresh": {
    "name": "unexpectDisconnectTrapThresh",
    "oid": "1.3.6.1.4.1.15.100.1.3.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object controls the unexpectDisconnectTrap trap generation by the RAC. Setting this object to zero (default) will disable the trap generation. Setting this object to a value other than zero, the RAC will generate the unexpectDisconnectTrap after that many calls has terminated unexpectedly. A call is considered to have disconnected unexpectedly is the call disconnect reason is: protocolError, localHangup, timeoutHDLC, maxLogonTimeout OR if the call is handled by a modem and the modem disconnect reason is : poorSignalQ, failRetrain. This object corresponds to unexpected_trap_inc NA/admin parameter."
  },
  "forcedCallDisconnectTrapThresh": {
    "name": "forcedCallDisconnectTrapThresh",
    "oid": "1.3.6.1.4.1.15.100.1.3.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object controls the forcedCallDisconnectTrap trap generation by the RAC. Setting this object to zero (default) will disable the trap generation. Setting this object to a value other than zero, the RAC will generate the forcedCallDisconnectTrap after that many calls has terminated due to timeouts. The RAC has the following timers and setting off either of these timers will generate the trap. The timers are: cliInactivityTimeout - the amount of time in minutes that the RAC (system) waits before hanging up the call. This is valid if the session is in CLI mode. Not applicable for any other sessions (PPP etc). The value of the timer is determined by the object, gpTimerCliInactivity. inactivityTimeout - the amount of time in minutes that the RAC waits before hanging up the call. The timer is independent of the mode of the session. The value of the timer is determined by the object, gpTimerInactivityTimer. netInactivityTimeout - this is similar to the inactivity timeout. This object corresponds to forced_call_inc NA/admin parameter."
  },
  "diallnkTrpEna": {
    "name": "diallnkTrpEna",
    "oid": "1.3.6.1.4.1.15.100.1.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When enabled, SNMP link up/down traps are generated for remote dialin interfaces."
  },
  "anxTrapHostMax": {
    "name": "anxTrapHostMax",
    "oid": "1.3.6.1.4.1.15.2.10.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The maximum number of rows in the trap host table."
  },
  "anxTrapHostCurEnt": {
    "name": "anxTrapHostCurEnt",
    "oid": "1.3.6.1.4.1.15.2.10.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The current number of rows in the trap host table."
  },
  "anxTrapHostNext": {
    "name": "anxTrapHostNext",
    "oid": "1.3.6.1.4.1.15.2.10.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of the next available row to be created in the trap host table. A value of zero means that the table is full and no more rows can be added."
  },
  "anxTrapHostTable": {
    "name": "anxTrapHostTable",
    "oid": "1.3.6.1.4.1.15.2.10.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of managers which to send traps."
  },
  "anxTrapHostEntry": {
    "name": "anxTrapHostEntry",
    "oid": "1.3.6.1.4.1.15.2.10.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "XYLO-TRAPOBJECTS-MIB",
        "object": "anxTrapHostIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A row in the trap host table. The column anxTrapHostStatus is used to create and delete rows in the table. Creation requires a SET PDU with objects anxTrapHostStatus, anxTrapHostAddrType, anxTrapHostNetAddr, and anxTrapHostCommunity for the new row."
  },
  "anxTrapHostIndex": {
    "name": "anxTrapHostIndex",
    "oid": "1.3.6.1.4.1.15.2.10.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of the row in the table."
  },
  "anxTrapHostStatus": {
    "name": "anxTrapHostStatus",
    "oid": "1.3.6.1.4.1.15.2.10.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "valid": 2,
          "ignore": 3,
          "delete": 4,
          "create": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object is used to create and delete rows in the table and control if they are used. The values that can be written are: valid(2)....if the current status is ignore(3), re-enable this entry for sending traps again ignore(3)...don't use this entry to send traps at this time delete(4)...deletes the row create(5)...creates a new row If the row exists, then a SET with value of create(5) returns error 'badValue'. Deleted rows go away immediately. The following values can be returned on reads: other(1)....some other case valid(2)....the row exists and is valid ignore(3)...don't use this entry to send traps at this time"
  },
  "anxTrapHostAddrType": {
    "name": "anxTrapHostAddrType",
    "oid": "1.3.6.1.4.1.15.2.10.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ip": 1
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The type of address that is stored in the object anxTrapHostNetAddr. The value is: ip(1)...IP address"
  },
  "anxTrapHostNetAddr": {
    "name": "anxTrapHostNetAddr",
    "oid": "1.3.6.1.4.1.15.2.10.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The network address (in network order) for SNMP manager that is to receive the trap."
  },
  "anxTrapHostComm": {
    "name": "anxTrapHostComm",
    "oid": "1.3.6.1.4.1.15.2.10.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The community string to use when sending a trap to this host."
  },
  "anxTrapHostAgeTime": {
    "name": "anxTrapHostAgeTime",
    "oid": "1.3.6.1.4.1.15.2.10.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The time interval in seconds used to age entries out of the trap receiver table. The default value if not specified will be 0, or infinite,never to be aged out."
  },
  "anxTrapHostPortNumber": {
    "name": "anxTrapHostPortNumber",
    "oid": "1.3.6.1.4.1.15.2.10.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The port number to send the trap to. If this is not enetered the port will default to 162"
  },
  "anxTrapHostGrouping": {
    "name": "anxTrapHostGrouping",
    "oid": "1.3.6.1.4.1.15.2.10.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A bitmask that will associate the trp host entry with one or more trap groupings: none 0x00000000 startup 0x00000001 connection 0x00000002 wan 0x00000004 call-accounting 0x00000008 ospf 0x00000010 all 0xffffffff"
  },
  "anxTrapUserName": {
    "name": "anxTrapUserName",
    "oid": "1.3.6.1.4.1.15.2.10.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A string defining the user name under attack."
  },
  "anxTrapPortIndex": {
    "name": "anxTrapPortIndex",
    "oid": "1.3.6.1.4.1.15.2.10.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A unique number from 1 to totalPorts that identifies the port under attack."
  },
  "anxTrapPortType": {
    "name": "anxTrapPortType",
    "oid": "1.3.6.1.4.1.15.2.10.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "async": 1,
          "sync": 2,
          "virtual": 3,
          "dialout": 4,
          "ethernet": 5,
          "rfc": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A enumerated string that identifies the port type under attack."
  },
  "anxTrapInetAddr": {
    "name": "anxTrapInetAddr",
    "oid": "1.3.6.1.4.1.15.2.10.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Internet address of the Annex."
  },
  "anxTrapAttackErrcode": {
    "name": "anxTrapAttackErrcode",
    "oid": "1.3.6.1.4.1.15.2.10.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "maxThreshold": 1,
          "timeThreshold": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Error code indicating the threshold reached under following circumstances. maxThreshold(1) - User has exceeded the threshold for consecutive number of attempts to log-in. timeThreshold(2) - User has exceeded the threshold for number of log-in failure over a pre-defined period."
  },
  "anxTrapAttackErrmsg": {
    "name": "anxTrapAttackErrmsg",
    "oid": "1.3.6.1.4.1.15.2.10.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Error message string."
  },
  "anxTrapDbErrcode": {
    "name": "anxTrapDbErrcode",
    "oid": "1.3.6.1.4.1.15.2.10.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "read-error": 1,
          "write-error": 2,
          "protect-error": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Error code indicating the type of error occured when ERPCD tried to access the database. read-error(1) - ERPCD cannot read the database write-error(2) - ERPCD cannot write to the database protect-error(3) - ERPCD detects wrong database protection."
  },
  "anxTrapDbErrmsg": {
    "name": "anxTrapDbErrmsg",
    "oid": "1.3.6.1.4.1.15.2.10.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Error message string giving details about the error when ERPCD tried to access the database."
  },
  "trapModemMsg": {
    "name": "trapModemMsg",
    "oid": "1.3.6.1.4.1.15.2.10.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object is send along with the modem busy out trap. This object specifies the modem which is being busied out and the reason for busying out the modem."
  },
  "operImageModemImage": {
    "name": "operImageModemImage",
    "oid": "1.3.6.1.4.1.15.2.10.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This is a trap indicating the operational image version and the modem image version."
  },
  "wanVersion": {
    "name": "wanVersion",
    "oid": "1.3.6.1.4.1.15.2.10.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This trap indicates that a wan has come up and also the version string for that wan."
  },
  "trapAfdMsg": {
    "name": "trapAfdMsg",
    "oid": "1.3.6.1.4.1.15.2.10.18",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object is sent along with the afd catastrophic trap. This object specifies the wan module which is inoperable"
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/xylo-trpobj.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 17:50:36 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "XYLO-TRAPOBJECTS-MIB"
  }
}