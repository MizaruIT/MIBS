{
  "imports": {
    "class": "imports",
    "SNMP-REPEATER-MIB": [
      "rptrAddrTrackLastSourceAddress",
      "rptrPortAdminStatus"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "MODULE-IDENTITY",
      "OBJECT-TYPE",
      "OBJECT-IDENTITY",
      "enterprises",
      "Gauge32",
      "Bits",
      "IpAddress",
      "TRAP-TYPE",
      "NOTIFICATION-TYPE",
      "MibIdentifier",
      "Integer32",
      "Unsigned32",
      "TimeTicks",
      "Counter64",
      "iso",
      "Counter32"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "hp": {
    "name": "hp",
    "oid": "1.3.6.1.4.1.11",
    "class": "objectidentity"
  },
  "nm": {
    "name": "nm",
    "oid": "1.3.6.1.4.1.11.2",
    "class": "objectidentity"
  },
  "hpSystem": {
    "name": "hpSystem",
    "oid": "1.3.6.1.4.1.11.2.3",
    "class": "objectidentity"
  },
  "netElement": {
    "name": "netElement",
    "oid": "1.3.6.1.4.1.11.2.3.7",
    "class": "objectidentity"
  },
  "icf": {
    "name": "icf",
    "oid": "1.3.6.1.4.1.11.2.14",
    "class": "objectidentity"
  },
  "MacAddress": {
    "name": "MacAddress",
    "class": "type",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    }
  },
  "TimeStamp": {
    "name": "TimeStamp",
    "class": "type",
    "type": {
      "type": "TimeTicks",
      "class": "type"
    }
  },
  "TruthValue": {
    "name": "TruthValue",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    }
  },
  "RowStatus": {
    "name": "RowStatus",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 1,
          "notInService": 2,
          "notReady": 3,
          "createAndGo": 4,
          "createAndWait": 5,
          "destroy": 6
        }
      }
    }
  },
  "TAddress": {
    "name": "TAddress",
    "class": "type",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    }
  },
  "hpicfAdmin": {
    "name": "hpicfAdmin",
    "oid": "1.3.6.1.4.1.11.2.14.10",
    "class": "objectidentity"
  },
  "hpicfDomains": {
    "name": "hpicfDomains",
    "oid": "1.3.6.1.4.1.11.2.14.10.1",
    "class": "objectidentity"
  },
  "hpicfLLCDomain": {
    "name": "hpicfLLCDomain",
    "oid": "1.3.6.1.4.1.11.2.14.10.1.1",
    "class": "objectidentity"
  },
  "bridge": {
    "name": "bridge",
    "oid": "1.3.6.1.4.1.11.2.3.7.1",
    "class": "objectidentity"
  },
  "router": {
    "name": "router",
    "oid": "1.3.6.1.4.1.11.2.3.7.2",
    "class": "objectidentity"
  },
  "hub": {
    "name": "hub",
    "oid": "1.3.6.1.4.1.11.2.3.7.5",
    "class": "objectidentity"
  },
  "chassis": {
    "name": "chassis",
    "oid": "1.3.6.1.4.1.11.2.3.7.8",
    "class": "objectidentity"
  },
  "bridge1010": {
    "name": "bridge1010",
    "oid": "1.3.6.1.4.1.11.2.3.7.1.1",
    "class": "objectidentity"
  },
  "bridgeRemote": {
    "name": "bridgeRemote",
    "oid": "1.3.6.1.4.1.11.2.3.7.1.2",
    "class": "objectidentity"
  },
  "eswitch": {
    "name": "eswitch",
    "oid": "1.3.6.1.4.1.11.2.3.7.1.3",
    "class": "objectidentity"
  },
  "icfRouterER": {
    "name": "icfRouterER",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.1",
    "class": "objectidentity"
  },
  "icfRouterTR": {
    "name": "icfRouterTR",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.2",
    "class": "objectidentity"
  },
  "icfRouterSR": {
    "name": "icfRouterSR",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.3",
    "class": "objectidentity"
  },
  "icfRouterFR": {
    "name": "icfRouterFR",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.4",
    "class": "objectidentity"
  },
  "icfRouterLR": {
    "name": "icfRouterLR",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.5",
    "class": "objectidentity"
  },
  "icfRouterBR": {
    "name": "icfRouterBR",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.6",
    "class": "objectidentity"
  },
  "icfRouterPR": {
    "name": "icfRouterPR",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.7",
    "class": "objectidentity"
  },
  "icfRouter650": {
    "name": "icfRouter650",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.8",
    "class": "objectidentity"
  },
  "icfRouter230": {
    "name": "icfRouter230",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.9",
    "class": "objectidentity"
  },
  "icfRouter250": {
    "name": "icfRouter250",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.10",
    "class": "objectidentity"
  },
  "icfRouter255": {
    "name": "icfRouter255",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.11",
    "class": "objectidentity"
  },
  "icfRouter210": {
    "name": "icfRouter210",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.12",
    "class": "objectidentity"
  },
  "icfRouter650Engine": {
    "name": "icfRouter650Engine",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.8.2",
    "class": "objectidentity"
  },
  "icfRouter650Port4E": {
    "name": "icfRouter650Port4E",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.8.3",
    "class": "objectidentity"
  },
  "icfRouter650Port4S": {
    "name": "icfRouter650Port4S",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.8.4",
    "class": "objectidentity"
  },
  "icfRouter650Port4T": {
    "name": "icfRouter650Port4T",
    "oid": "1.3.6.1.4.1.11.2.3.7.2.8.5",
    "class": "objectidentity"
  },
  "etherTwist12": {
    "name": "etherTwist12",
    "oid": "1.3.6.1.4.1.11.2.3.7.5.1",
    "class": "objectidentity"
  },
  "fiberOptic": {
    "name": "fiberOptic",
    "oid": "1.3.6.1.4.1.11.2.3.7.5.3",
    "class": "objectidentity"
  },
  "etherTwist48": {
    "name": "etherTwist48",
    "oid": "1.3.6.1.4.1.11.2.3.7.5.4",
    "class": "objectidentity"
  },
  "thinLAN": {
    "name": "thinLAN",
    "oid": "1.3.6.1.4.1.11.2.3.7.5.5",
    "class": "objectidentity"
  },
  "etherTwist24S": {
    "name": "etherTwist24S",
    "oid": "1.3.6.1.4.1.11.2.3.7.5.6",
    "class": "objectidentity"
  },
  "advStack12": {
    "name": "advStack12",
    "oid": "1.3.6.1.4.1.11.2.3.7.5.7",
    "class": "objectidentity"
  },
  "advStack24": {
    "name": "advStack24",
    "oid": "1.3.6.1.4.1.11.2.3.7.5.8",
    "class": "objectidentity"
  },
  "advStack48": {
    "name": "advStack48",
    "oid": "1.3.6.1.4.1.11.2.3.7.5.9",
    "class": "objectidentity"
  },
  "advStackVg15": {
    "name": "advStackVg15",
    "oid": "1.3.6.1.4.1.11.2.3.7.5.10",
    "class": "objectidentity"
  },
  "advStackU8": {
    "name": "advStackU8",
    "oid": "1.3.6.1.4.1.11.2.3.7.5.11",
    "class": "objectidentity"
  },
  "advStackU16": {
    "name": "advStackU16",
    "oid": "1.3.6.1.4.1.11.2.3.7.5.12",
    "class": "objectidentity"
  },
  "repeaterAgent": {
    "name": "repeaterAgent",
    "oid": "1.3.6.1.4.1.11.2.3.7.8.1",
    "class": "objectidentity"
  },
  "chassisAgents": {
    "name": "chassisAgents",
    "oid": "1.3.6.1.4.1.11.2.3.7.8.2",
    "class": "objectidentity"
  },
  "icfSensors": {
    "name": "icfSensors",
    "oid": "1.3.6.1.4.1.11.2.3.7.8.3",
    "class": "objectidentity"
  },
  "icfVgAgent": {
    "name": "icfVgAgent",
    "oid": "1.3.6.1.4.1.11.2.3.7.8.2.1",
    "class": "objectidentity"
  },
  "icfEnetAgent": {
    "name": "icfEnetAgent",
    "oid": "1.3.6.1.4.1.11.2.3.7.8.2.2",
    "class": "objectidentity"
  },
  "icfPowerSupplySensor": {
    "name": "icfPowerSupplySensor",
    "oid": "1.3.6.1.4.1.11.2.3.7.8.3.1",
    "class": "objectidentity"
  },
  "icfFanSensor": {
    "name": "icfFanSensor",
    "oid": "1.3.6.1.4.1.11.2.3.7.8.3.2",
    "class": "objectidentity"
  },
  "icfTemperatureSensor": {
    "name": "icfTemperatureSensor",
    "oid": "1.3.6.1.4.1.11.2.3.7.8.3.3",
    "class": "objectidentity"
  },
  "icfCommon": {
    "name": "icfCommon",
    "oid": "1.3.6.1.4.1.11.2.14.1",
    "class": "objectidentity"
  },
  "lastSetError": {
    "name": "lastSetError",
    "oid": "1.3.6.1.4.1.11.2.14.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unexpectedError": 100,
          "resourceLimitExceeded": 101,
          "disallowedSTPPortState": 102,
          "incompleteSetlet": 103,
          "invalidEventObject": 104,
          "disallowedRemoteDevice": 105,
          "disallowedLAPBAdrsPair": 106,
          "adrsAlreadyPresent": 107,
          "staticSectionFull": 108,
          "cantDeletePermAdrs": 109,
          "inconsistentValues": 110,
          "downloadInProgress": 111
        }
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Provide more detailed, enterprise specific error type. Any error resulting from a SET request will cause this object to be updated, and the previous value overwritten. A management entity may retrieve more detailed error information than that implied by the pdu's ErrorStatus, especially in the case of a genErr. In SNMPv2, there are several more error codes which provide most of the information that is provided by the above codes. Therefore, this object is now obsolete."
  },
  "password": {
    "name": "password",
    "oid": "1.3.6.1.4.1.11.2.14.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "This is the encrypted password for the device. The algorithm used for the encryption process is HP proprietary. Third party vendor support is provided by not setting a password on the device, and using the community name 'public'. This object is now obsolete, and is supported only on 'D' revision EtherTwist hubs and bridges and earlier. It has been superseded by icfSecurPassword."
  },
  "reset": {
    "name": "reset",
    "oid": "1.3.6.1.4.1.11.2.14.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "warm": 1,
          "cold": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "When the reset object is set to to 'warm' it results in a 'warm' reset, which does not clear the parameters in NOVRAM to factory defaults. When set to 'cold', it results in NOVRAM being set to factory defaults. When this object is set, the agent replies, dallies a short time to allow the reply to be emitted from the device, then performs the reset. When read, this object always returns 0. This object is now obsolete. It has been replaced by hpicfReset."
  },
  "selfTest": {
    "name": "selfTest",
    "oid": "1.3.6.1.4.1.11.2.14.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Self test is invoked by setting this flag to 'stExecute. When the object changes to 'stSuccess', the test has completed successfully. Icf devices will 'hard-fail' if the test does not succeed. This object is now obsolete. It has been replaced by hpicfSelfTest."
  },
  "semaphore": {
    "name": "semaphore",
    "oid": "1.3.6.1.4.1.11.2.14.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "This object allows a set of objects to be locked. The lock is only assured by the 'cooperation' of other management entities; they must wait until the lock is cleared (to value zero) prior to setting the lock. When this object is set to a management entity's IP address, if no other management entity has previously set the lock, the set will succeed. Otherwise, an error (BadValue) will be returned. It is the responsibility of the owning management entity to clear the lock when the transactions complete. To protect against a management entity failure during a locked transaction, the agent is NOT responsible for verifying which management entity is performing transactions on locked objects; thus, any management entity can clear this object at any time. The agent does not do anything with this object except disallow multiple sets of different IP addresses (unless the object has been cleared to zero). This means management entities can use this for locking any valid transactions on defined sets of objects. This object can also be used on IPX networks by specifying the low 4 bytes of the station address for the IpAddress. This object is now obsolete. Individual groups of objects now maintain their own locking mechanisms."
  },
  "discovery": {
    "name": "discovery",
    "oid": "1.3.6.1.4.1.11.2.14.1.6",
    "class": "objectidentity"
  },
  "pollResponse": {
    "name": "pollResponse",
    "oid": "1.3.6.1.4.1.11.2.14.1.6.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Flag indicating whether device should respond to multicast SNMP PDUs. When set 'true', the device will respond to multicast SNMP PDU's. Otherwise, the response is discarded."
  },
  "announceAddress": {
    "name": "announceAddress",
    "oid": "1.3.6.1.4.1.11.2.14.1.6.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "When set to any MAC multicast address, the device will transmit three identical packets, each with the MAC source set to the device's MAC address, the MAC destination to the multi-cast address, the destination SAP is F8, and the destination HP XSAP is 165D. These packets will traverse other ICF devices, allowing them to learn the port connectivity of the multicasting device."
  },
  "mapAddress": {
    "name": "mapAddress",
    "oid": "1.3.6.1.4.1.11.2.14.1.6.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "When this object is set a map address search begins. If the address is detected on only one port, then the mapPort object is set to the port number on which the address was detected. This object has been deprecated."
  },
  "mapState": {
    "name": "mapState",
    "oid": "1.3.6.1.4.1.11.2.14.1.6.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "This object will be set to 'psNone' if the address set in the mapAddress object has not been received on any of the device's interface/ports. It will be set to 'psSingle' if the mapAddress has been detected on only one interface/port. It will be set to 'psMany' if the mapAddress has been detected on more than one interface/port. This object has been deprecated."
  },
  "mapPort": {
    "name": "mapPort",
    "oid": "1.3.6.1.4.1.11.2.14.1.6.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "The port number on which the map address was detected. If map state is 'psNone' or 'psMany' then this object is not valid. This object has been deprecated."
  },
  "ipSubnetMask": {
    "name": "ipSubnetMask",
    "oid": "1.3.6.1.4.1.11.2.14.1.6.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This object is the IP subnet mask. This object is obsolete. Management applications should retrieve the ipAddrTable, which contains the ipAdEntNetMask object for each interface on the device."
  },
  "icfEvent": {
    "name": "icfEvent",
    "oid": "1.3.6.1.4.1.11.2.14.1.7",
    "class": "objectidentity"
  },
  "eventNotificationNode": {
    "name": "eventNotificationNode",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.1",
    "class": "objectidentity"
  },
  "evtIpNotify": {
    "name": "evtIpNotify",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The network address of the manager node which is to receive the event notification trap. This functionality is currently duplicated in the authorized manager list."
  },
  "evtIpxNotify": {
    "name": "evtIpxNotify",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 10,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The IPX address of the manager node which is to receive the event notification trap. This functionality is currently duplicated in the authorized manager list."
  },
  "evtTable": {
    "name": "evtTable",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "obsolete",
    "description": "A list of event entries for event processing."
  },
  "evtIndex": {
    "name": "evtIndex",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.2.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "warmStartEvent": 1,
          "coldStartEvent": 2,
          "spanTreeOrLinkBeatEvent": 3,
          "temperatureOrSegmentationEvent": 4,
          "backupLinkEvent": 5,
          "intrusionEvent": 6,
          "addressMovedEvent": 7,
          "newAddressEvent": 8,
          "rptrHealthEvent": 9,
          "rptrResetEvent": 10
        }
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The index value which uniquely identifies the event to which this entry is applicable."
  },
  "evtArm": {
    "name": "evtArm",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.2.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "This object arms and disarms events. Events are implicitly rearmed, that is, once an event occurs, it is rearmed. Sets to the intrusionEvent instance of this object are ignored, since intrusion events are actually armed through the hubSecPtAlarmEnable object."
  },
  "evtTimeSinceOccurrence": {
    "name": "evtTimeSinceOccurrence",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.2.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This object specifies the number of centiseconds since this event last occurred."
  },
  "evtThresholdTable": {
    "name": "evtThresholdTable",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "obsolete",
    "description": "A list of event entries for event processing."
  },
  "evthIndex": {
    "name": "evthIndex",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.3.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 5
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The index value which uniquely identifies the event to which this entry is applicable."
  },
  "evthArm": {
    "name": "evthArm",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.3.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "This object arms and disarms events. The notification node, the associated event object, threshold, hysteresis, and time interval should all be set before an event is armed. The objects do not need to be re-set if the existing values are acceptable. The device will refuse to arm an event with uninitialized objects. Once armed, if the threshold is met or exceeded during the event time interval, a trap PDU is sent to the eventNotificationNode. Subsequently, the monitored object must fall to or below the hysteresis before another trap can be sent via the threshold mechanism. The hysteresis may equal threshold. Events are implicitly rearmed, that is, once an event occurs, it is rearmed. Setting this object to 'on' will result in a genErr in any of the following cases: object not set; cannot set an event on this object; time interval not set; threshold not set."
  },
  "evthObject": {
    "name": "evthObject",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.3.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The data of this object is itself an OBJECT IDENTIFIER which selects the mib object and instance that is to be monitored for the event. Only types INTEGER and Counter are allowed."
  },
  "evthThreshold": {
    "name": "evthThreshold",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.3.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The threshold against which the variable specified in evthObject is tested over the time interval specified in the evthTimeInterval When the threshold is met or exceeded, the event is triggered. The event will not trigger again until the variable falls to or below the evthHysteresis value, and then meets or exceeds the threshold."
  },
  "evthHysteresis": {
    "name": "evthHysteresis",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.3.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The low value which the variable specified in evthObject must fall to or below after exceeding evthThreshold before the event can re-occur when the threshold is met or exceeded."
  },
  "evthTimeInterval": {
    "name": "evthTimeInterval",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.3.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The time interval over which the variable specified in the evthObject is sampled."
  },
  "evthTimeSinceOccurrence": {
    "name": "evthTimeSinceOccurrence",
    "oid": "1.3.6.1.4.1.11.2.14.1.7.3.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This object specifies the number of centiseconds since this event was last triggered."
  },
  "linkTest": {
    "name": "linkTest",
    "oid": "1.3.6.1.4.1.11.2.14.1.8",
    "class": "objectidentity"
  },
  "linkTestAddress": {
    "name": "linkTestAddress",
    "oid": "1.3.6.1.4.1.11.2.14.1.8.1",
    "class": "objectidentity"
  },
  "linkTest802MacAddress": {
    "name": "linkTest802MacAddress",
    "oid": "1.3.6.1.4.1.11.2.14.1.8.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "If this object is set to the MAC address of a node to link test in the same PDU that sets linkTestRepetitions to a nonzero value, the link test performed will use IEEE 802 Test frames. Note that setting more than one of linkTest802MacAddress, linkTestIpAddress, and linkTestIpxAddress to a non-null value in the same PDU will result in a genErr."
  },
  "linkTestIpAddress": {
    "name": "linkTestIpAddress",
    "oid": "1.3.6.1.4.1.11.2.14.1.8.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "If this object is set to the network address of a node to link test in the same PDU that sets linkTestRepetitions to a nonzero value, the link test performed will use ICMP Echo packets. Note that setting more than one of linkTest802MacAddress, linkTestIpAddress, and linkTestIpxAddress to a non-null value in the same PDU will result in a genErr."
  },
  "linkTestIpxAddress": {
    "name": "linkTestIpxAddress",
    "oid": "1.3.6.1.4.1.11.2.14.1.8.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 10,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "If this object is set to the IPX address of a node to link test in the same PDU that sets linkTestRepetitions to a nonzero value, the link test performed will use IPX diagnostic packets. Note that setting more than one of linkTest802MacAddress, linkTestIpAddress, and linkTestIpxAddress to a non-null value in the same PDU will result in a genErr."
  },
  "linkTestRepetitions": {
    "name": "linkTestRepetitions",
    "oid": "1.3.6.1.4.1.11.2.14.1.8.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "The number of link tests that the device is to complete. When this object is set to a non-zero value, the linkTestSuccess object is zeroed and the device begins a link test using IEEE 802.2 Test frames, ICMP Echo packets, or IPX diagnostic packets depending on the address selected. Link test results are contained in the link test success object. This object's value decrements (to zero) as the test proceeds. The test may be canceled at any point by setting this object to 0."
  },
  "linkTestSuccess": {
    "name": "linkTestSuccess",
    "oid": "1.3.6.1.4.1.11.2.14.1.8.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "For every successful link test, this counter is incremented. When link tests are completed, this counter contains the total number of successful tests."
  },
  "linkTestTimeout": {
    "name": "linkTestTimeout",
    "oid": "1.3.6.1.4.1.11.2.14.1.8.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "The time interval over which a link test response must be received, or the test is counted as failed."
  },
  "icf8023MacTable": {
    "name": "icf8023MacTable",
    "oid": "1.3.6.1.4.1.11.2.14.1.9",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "obsolete",
    "description": "A list of icf8023Mac entries."
  },
  "icf8023MacIndex": {
    "name": "icf8023MacIndex",
    "oid": "1.3.6.1.4.1.11.2.14.1.9.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The index value which uniquely identifies the port to which this entry is applicable. The port identified by a particular value of this index on a hub is the same port as identified by the same value of rptrPortIndex. Note that since this hub always has exactly 1 port group, there is no group index for this table. For a bridge, the port identified by a particular value of this index is the same port identified by the same value of ifIndex."
  },
  "icf8023MacInBroadcastPkts": {
    "name": "icf8023MacInBroadcastPkts",
    "oid": "1.3.6.1.4.1.11.2.14.1.9.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the broadcast packets received."
  },
  "icf8023MacOutBroadcastPkts": {
    "name": "icf8023MacOutBroadcastPkts",
    "oid": "1.3.6.1.4.1.11.2.14.1.9.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the broadcast packets transmitted."
  },
  "icf8023MacInMulticastPkts": {
    "name": "icf8023MacInMulticastPkts",
    "oid": "1.3.6.1.4.1.11.2.14.1.9.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the multicast packets received."
  },
  "icf8023MacOutMulticastPkts": {
    "name": "icf8023MacOutMulticastPkts",
    "oid": "1.3.6.1.4.1.11.2.14.1.9.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the multicast packets transmitted."
  },
  "icf8023MacRunts": {
    "name": "icf8023MacRunts",
    "oid": "1.3.6.1.4.1.11.2.14.1.9.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The number of media frames encountered that were too short (by ethernet/802.3 standards)."
  },
  "icf8023MacGiants": {
    "name": "icf8023MacGiants",
    "oid": "1.3.6.1.4.1.11.2.14.1.9.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The number of media frames encountered that were too long (by ethernet/802.3 standards)."
  },
  "icf8023MacMissedPktErrors": {
    "name": "icf8023MacMissedPktErrors",
    "oid": "1.3.6.1.4.1.11.2.14.1.9.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The number of frames lost due to lack of resources (e.g. ring buffers, memory buffers, etc)."
  },
  "icf8023MacExcessDeferrals": {
    "name": "icf8023MacExcessDeferrals",
    "oid": "1.3.6.1.4.1.11.2.14.1.9.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The number of times a frame could not be sent due to excess deferrals because another node was transmitting continually."
  },
  "icf8023MacTotalMediaErrors": {
    "name": "icf8023MacTotalMediaErrors",
    "oid": "1.3.6.1.4.1.11.2.14.1.9.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of all possible medium transmit and receive errors, such as crc, alignment, sequence, length, excess etc. The purpose of this object is to support aggregate LAN medium errors for event processing. Collisions and runts are not considered an error."
  },
  "icf8023MacSpuriousIntrs": {
    "name": "icf8023MacSpuriousIntrs",
    "oid": "1.3.6.1.4.1.11.2.14.1.9.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The number of times that the network interface for this port generated a spurious hardware interrupt. A non-zero value for this object indicates a potential hardware problem."
  },
  "icfDownload": {
    "name": "icfDownload",
    "oid": "1.3.6.1.4.1.11.2.14.1.10",
    "class": "objectidentity"
  },
  "icfDownloadAddress": {
    "name": "icfDownloadAddress",
    "oid": "1.3.6.1.4.1.11.2.14.1.10.1",
    "class": "objectidentity"
  },
  "icfDownloadIpAddress": {
    "name": "icfDownloadIpAddress",
    "oid": "1.3.6.1.4.1.11.2.14.1.10.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The IP address of the TFTP server to download firmware from."
  },
  "icfDownloadIpxAddress": {
    "name": "icfDownloadIpxAddress",
    "oid": "1.3.6.1.4.1.11.2.14.1.10.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 10,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The IPX address of the TFTP server to download firmware from."
  },
  "icfDownloadFilename": {
    "name": "icfDownloadFilename",
    "oid": "1.3.6.1.4.1.11.2.14.1.10.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 63
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Filename and path of file to download (maximum length of 63 characters + NULL)."
  },
  "icfHub": {
    "name": "icfHub",
    "oid": "1.3.6.1.4.1.11.2.14.2",
    "class": "objectidentity"
  },
  "hubThinlanFault": {
    "name": "hubThinlanFault",
    "oid": "1.3.6.1.4.1.11.2.14.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "When set to 'true' this object causes the Fault LED to blink if the ThinLan Port is segmented. This object has been deprecated in favor of hpRptrThinlanFault."
  },
  "hubGlobal": {
    "name": "hubGlobal",
    "oid": "1.3.6.1.4.1.11.2.14.2.2",
    "class": "objectidentity"
  },
  "hubGlobalErrors": {
    "name": "hubGlobalErrors",
    "oid": "1.3.6.1.4.1.11.2.14.2.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This counter is incremented for each packet with an error received on any port. This counter does not include runts, as they are a normal media condition. This object has been deprecated in favor of hpRptrMonGlobalErrors."
  },
  "hubGlobalCollisions": {
    "name": "hubGlobalCollisions",
    "oid": "1.3.6.1.4.1.11.2.14.2.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This counter is incremented for each collision between any two or more ports (or AUI) detected by the hub. This object has been deprecated in favor of rptrMonitorTransmitCollisions."
  },
  "hubGlobalPktFragments": {
    "name": "hubGlobalPktFragments",
    "oid": "1.3.6.1.4.1.11.2.14.2.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This counter is the sum of hubPortPktFragments for all ports. This object has been deprecated in favor of hpRptrMonGlobalFrames."
  },
  "hubGlobalRunts": {
    "name": "hubGlobalRunts",
    "oid": "1.3.6.1.4.1.11.2.14.2.2.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This counter is incremented for each runt frame received on any port. This object has been deprecated in favor of hpRptrMonGlobalRunts."
  },
  "hubGlobalGiants": {
    "name": "hubGlobalGiants",
    "oid": "1.3.6.1.4.1.11.2.14.2.2.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This counter is incremented for each giant frame received on any port. This object has been deprecated in favor of hpRptrMonGlobalFrameTooLongs."
  },
  "hubGlobalCrcErrors": {
    "name": "hubGlobalCrcErrors",
    "oid": "1.3.6.1.4.1.11.2.14.2.2.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This counter is incremented for each frame with a CRC error received on any port. This object has been deprecated in favor of hpRptrMonGlobalFCSErrors."
  },
  "hubGlobalAlignmentErrors": {
    "name": "hubGlobalAlignmentErrors",
    "oid": "1.3.6.1.4.1.11.2.14.2.2.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This counter is incremented for each frame with an alignment error received on any port. This object has been deprecated in favor of hpRptrMonGlobalAlignmentErrors."
  },
  "hubGlobalInOctets": {
    "name": "hubGlobalInOctets",
    "oid": "1.3.6.1.4.1.11.2.14.2.2.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This counter is incremented for each octet received on any port. This object has been deprecated in favor of hpRptrMonGlobalOctets."
  },
  "hubGlobalInUcastPkts": {
    "name": "hubGlobalInUcastPkts",
    "oid": "1.3.6.1.4.1.11.2.14.2.2.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This counter is incremented for each unicast packet received on any port. This counter has been deprecated in favor of hpRptrMonGlobalUcastPackets."
  },
  "hubGlobalInNUcastPkts": {
    "name": "hubGlobalInNUcastPkts",
    "oid": "1.3.6.1.4.1.11.2.14.2.2.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This counter is incremented for each non-unicast packet received on any port. This object has been deprecated in favor of hpRptrMonGlobalBcastPackets and hpRptrMonGlobalMcastPackets."
  },
  "hubGlobalInBroadcastPkts": {
    "name": "hubGlobalInBroadcastPkts",
    "oid": "1.3.6.1.4.1.11.2.14.2.2.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This counter is incremented for each broadcast packet received on any port. This object has been deprecated in favor of hpRptrMonGlobalBcastPackets."
  },
  "hubPortTable": {
    "name": "hubPortTable",
    "oid": "1.3.6.1.4.1.11.2.14.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "obsolete",
    "description": "A list of hubPort entries."
  },
  "hubPortIndex": {
    "name": "hubPortIndex",
    "oid": "1.3.6.1.4.1.11.2.14.2.3.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The index value which uniquely identifies the port to which this entry is applicable. The port identified by a particular value of this index is the same port as identified by the same value of rptrPortIndex."
  },
  "hubPortPktFragments": {
    "name": "hubPortPktFragments",
    "oid": "1.3.6.1.4.1.11.2.14.2.3.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This counter is incremented when a packet or packet fragment is encountered for a port instance. This object has been deprecated in favor of rptrMonitorPortReadableFrames."
  },
  "hubPortCollisions": {
    "name": "hubPortCollisions",
    "oid": "1.3.6.1.4.1.11.2.14.2.3.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This counter is incremented when a port is involved in a collision. This object has been deprecated in favor of rptrMonitorPortCollisions."
  },
  "hubPortSegmentation": {
    "name": "hubPortSegmentation",
    "oid": "1.3.6.1.4.1.11.2.14.2.3.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This is a flag which is 'true' if the port is currently segmented and 'false' otherwise. This object has been deprecated in favor of rptrPortAutoPartitionState."
  },
  "hubPortLinkBeatStatus": {
    "name": "hubPortLinkBeatStatus",
    "oid": "1.3.6.1.4.1.11.2.14.2.3.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This is a flag which is 'true' if link beat is detected on the port and 'false' otherwise. The value of this variable will always be 'true' when the corresponding instance of hubPortLinkBeatEnable is 'false'. This object has been deprecated in favor of rpMauMediaAvailable."
  },
  "hubPortLinkBeatEnable": {
    "name": "hubPortLinkBeatEnable",
    "oid": "1.3.6.1.4.1.11.2.14.2.3.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "When this flag is set to 'true' the port's link beat is enabled and when set to 'false' it is disabled. This object has been deprecated in favor of hpRptrPtLinkbeatEnable."
  },
  "hubPortMacAddress": {
    "name": "hubPortMacAddress",
    "oid": "1.3.6.1.4.1.11.2.14.2.3.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Each port maintains the MAC address of the node currently attached to it. This address is valid only when the port state flag is set to 'psSingle'. This object has been deprecated in favor of rptrAddrTrackNewLastSrcAddress."
  },
  "hubPortAddressState": {
    "name": "hubPortAddressState",
    "oid": "1.3.6.1.4.1.11.2.14.2.3.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The port state object may take on three values. 'psNone' means no packets have been received on the port. 'psSingle' means all packets received on the port have originated from a single MAC address. 'psMany' means that packets originating from more than one node have been received on the port. To (re)start a search for a MAC address set the port state to 'psNone'."
  },
  "hubPortPolarityReversed": {
    "name": "hubPortPolarityReversed",
    "oid": "1.3.6.1.4.1.11.2.14.2.3.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This object is used to indicate that the hub port was wired with the positive/negative polarity of its transmit and receive pairs reversed. Note that the port will continue to operate in this state, with the hub inverting the polarity internally. This object has been deprecated in favor of hpRptrPtPolarityReversed."
  },
  "hubPortLateEventDisable": {
    "name": "hubPortLateEventDisable",
    "oid": "1.3.6.1.4.1.11.2.14.2.3.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "This object indicates that the hub port was disabled as a result of excessive late collisions being caused by the end node attached to this port. This flag is cleared when the port is reenabled by setting rptrPortAdminStatus to 'enabled'."
  },
  "hubBitmaps": {
    "name": "hubBitmaps",
    "oid": "1.3.6.1.4.1.11.2.14.2.4",
    "class": "objectidentity"
  },
  "hubPortsOperStatus": {
    "name": "hubPortsOperStatus",
    "oid": "1.3.6.1.4.1.11.2.14.2.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The hubPortsOperStatus is a bit map of the state of all hub ports. The object has a 1 bit for each port that is enabled, not segmented, and linkbeat is detected. Ports on which these conditions are not true have a 0 bit. The bits are placed into the OCTET STRING in the following order: octet 0 octet 1 octet 2 ... bits 7-0 bits 7-0 bits 7-0 ... ports 1-8 ports 9-16 ports 17-24 ... Values of unused bits in the last octet are undefined. This object has been deprecated in favor of hpRptrGrpPortsAdminStatus."
  },
  "hubAddressTableMaxAge": {
    "name": "hubAddressTableMaxAge",
    "oid": "1.3.6.1.4.1.11.2.14.2.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The hubAddressTableMaxAge is the time beyond which an inactive MAC address will be removed from the hubPortMacAddress table and the hubAddressTable. Although hubAddressTableMaxAge is specified in units of 10ms time ticks, the actual resolution of this timer is 10 seconds. A value of 65535000 indicates no aging shall take place."
  },
  "hubAddressTable": {
    "name": "hubAddressTable",
    "oid": "1.3.6.1.4.1.11.2.14.2.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "deprecated",
    "description": "A list of entries present in the hub address table."
  },
  "hubAddressIndex": {
    "name": "hubAddressIndex",
    "oid": "1.3.6.1.4.1.11.2.14.2.6.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 52
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The index value which uniquely identifies the chunk to which this entry is applicable."
  },
  "hubAddressChunk": {
    "name": "hubAddressChunk",
    "oid": "1.3.6.1.4.1.11.2.14.2.6.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 408,
            "max": 408
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The hubAddressChunk object returns an opaque chunk of the address table. Each chunk can be interpreted as an array of records in the form: mac address [6 bytes], port number [2 bytes], inactivity time [4 bytes] On a Get, the returned chunk can include empty (unused) entries. Instances are chunk numbers, which start at 1 and go to 52. Each chunk can hold 34 addresses. A returned chunk might look like: Address Port Inactivity Time 080009001234 1 0 080009002345 2 10000 080009003456 1 20000 000000000000 1 0 080009009876 EMPTY 0 080009004567 EMPTY 15000 . . . 080009005678 EOL 959000 A value of EMPTY in the Port field indicates an unused (i.e. aged out) entry in the table. When the EOL (End Of List) bit is set in the Port field, that entry is the last entry in the table. It is possible for EOL to be seen in any entry. EOL (0x4000) and EMPTY (0x8000) are bit masks which are ORed with the port number in the port field of the entry. It is possible for both the EOL and EMPTY bits to be set in the same entry. The remainder of the chunk after the EOL entry will be zeroed. The inactivityTime and Address fields are meaningless if the EMPTY bit is set in the Port field. In this case, inactivityTime and Address are not guaranteed to be zeroed. The Manager may start with any chunk it likes and request the chunks in any order. It may perform multiple requests for the same chunk. The agent does not save state from previous requests. A request of chunk #1 would return the contents of the first 34 address table entries, whether they are all full, all empty, or some full and the rest empty. A request of chunk #2 will return entries #35 through #68. And so on. The address table can change between Get requests. An address' location can change, or an address could age out and then be added back in at a different location in the table. Thus, the Manager could see the address twice in the table."
  },
  "hubNumBkpLinks": {
    "name": "hubNumBkpLinks",
    "oid": "1.3.6.1.4.1.11.2.14.2.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The number of backup links configurable on this hub."
  },
  "hubBkpLinkTable": {
    "name": "hubBkpLinkTable",
    "oid": "1.3.6.1.4.1.11.2.14.2.8",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "obsolete",
    "description": "A list of backup link configuration entries. For a given backup link, the hub will periodically send a test packet to the device at the end of the link. If there are no responses (the number is configurable), the hub will enable the backup port and disable the primary port. After the primary link is fixed, the user must turn the primary port on to resume normal operation. At any time, the management station can look at rptrPortAdminStatus for the backup port to determine if it is currently in use. The backup link algorithm enables and disables the backup port by modifying rptrPortAdminStatus for that port. After the backup port has been enabled by the backup link algorithm, if the primary port is subsequently enabled via the hub console port or by a set of rptrPortAdminStatus, the backup port will be turned off and the periodic test packets will begin again. When the backup link objects are set, the backup port will be turned off, the primary port will be turned on, and the periodic test packets will be sent. The time between test packets is configurable by setting hubBackupTestTime. The number of failures needed to switch to the backup link is configured by setting hubBackupConsecutiveFails. The backup link function can be turned off by setting hubBackupPort to 0. All five of the backup link objects must be set together in a single PDU except for the case of setting hubBackupPort to 0, in which case, the hubBackupPort can be set without setting the other objects. Currently, the size of the backup link table is one; future releases may provide the ability to monitor more than one backup link."
  },
  "hubBkpLinkIndex": {
    "name": "hubBkpLinkIndex",
    "oid": "1.3.6.1.4.1.11.2.14.2.8.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The index value which uniquely identifies the backup link configuration entry to which the instance is applicable."
  },
  "hubBackupPort": {
    "name": "hubBackupPort",
    "oid": "1.3.6.1.4.1.11.2.14.2.8.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The port number of the backup link. Setting this object to zero removes the backup link configuration."
  },
  "hubPrimaryPort": {
    "name": "hubPrimaryPort",
    "oid": "1.3.6.1.4.1.11.2.14.2.8.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The port number of the primary link. It can only be set to zero if the hubBackupPort is also zero."
  },
  "hubBackupAddress": {
    "name": "hubBackupAddress",
    "oid": "1.3.6.1.4.1.11.2.14.2.8.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The MAC address of the device at the other end of the primary link which will respond to the periodic test packets sent by this hub."
  },
  "hubBackupTestTime": {
    "name": "hubBackupTestTime",
    "oid": "1.3.6.1.4.1.11.2.14.2.8.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The frequency, in time ticks, between sending the periodic test packets. The actual resolution of this timer is in seconds. The test packet response timeout is fixed at 500ms."
  },
  "hubBackupConsecutiveFails": {
    "name": "hubBackupConsecutiveFails",
    "oid": "1.3.6.1.4.1.11.2.14.2.8.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The number of test packet failures which will cause the hub to switch to the backup link (i.e., backup port turned on, primary port turned off). A value of one is generally not recomended and will cause the backup link to be enabled upon the first failure."
  },
  "hubSqeEnabled": {
    "name": "hubSqeEnabled",
    "oid": "1.3.6.1.4.1.11.2.14.2.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "When 'true', this flag indicates that SQE has been detected for the last ten agent transmits and there is a high probability that the SQE switch on the transceiver attached to the AUI port is set to Enabled, when it should be Disabled. This object has been deprecated in favor of hpRptrSqeEnabled."
  },
  "hubSecurity": {
    "name": "hubSecurity",
    "oid": "1.3.6.1.4.1.11.2.14.2.10",
    "class": "objectidentity"
  },
  "hubSecurePortTable": {
    "name": "hubSecurePortTable",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Table containing security configuration for each port."
  },
  "hubSecurePortEntry": {
    "name": "hubSecurePortEntry",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hubSecPtGroupIndex",
        "implied": 0
      },
      {
        "module": "HP-ICF",
        "object": "hubSecPtPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the hubSecurePortTable, containing the security configuration for a single port."
  },
  "hubSecPtGroupIndex": {
    "name": "hubSecPtGroupIndex",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object identifies the group containing the port for which this entry contains security configuration information."
  },
  "hubSecPtPortIndex": {
    "name": "hubSecPtPortIndex",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object identifies the port within the group for which this entry contains security configuration information."
  },
  "hubSecPtSecurityAddress": {
    "name": "hubSecPtSecurityAddress",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The desired authorized MAC address for this port. This can be either a regular station address to configure a specific address, or it can be one of the following special values to specify the address learning method: FFFF-FFFF-FFFE: learnOnce. First source MAC address heard on this port becomes the authorized address. Setting this value initiates learning of a new authorized address. When a new authorized address is learned, it will be stored in nonvolatile memory. This variable will return learnOnceConditionally to a GET operation after it has been set to this value. FFFF-FFFF-FFFD: learnOnceConditionally. This option will initiate learning of a new authorized address only if the previous hubSecPtSecurityAddress was set to a specific address or learnContinuous. No action will be performed if the previous value was already learnOnceConditionally. FFFF-FFFF-FFFC: learnContinuous. Any address heard becomes the new authorized address. When a new address is learned, it may cause an alarm, but it does not store anything in nonvolatile memory."
  },
  "hubSecPtAuthorizedAddress": {
    "name": "hubSecPtAuthorizedAddress",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MAC address of the station authorized to be on this port. This address could either have been configured by specifying a regular station address for hubSecPtSecurityAddress, or it could have been learned by the agent if hubSecPtSecurityAddress was set to one of the special values listed above. Once the agent has learned an authorized address, it will be saved across powerfails, unless the agent was configured for learnContinuous mode."
  },
  "hubSecPtPreventEavesdrop": {
    "name": "hubSecPtPreventEavesdrop",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enable": 1,
          "disable": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If enabled, unicast packets not addressed to the authorized address for this port will be scrambled."
  },
  "hubSecPtAlarmEnable": {
    "name": "hubSecPtAlarmEnable",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enable": 1,
          "disable": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If enabled, the agent will generate an intrusionTrap if a packet is received on this port with a source MAC address that is different from the hubSecPtAuthorizedAddress for this port."
  },
  "hubSecPtIntrusionFlag": {
    "name": "hubSecPtIntrusionFlag",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "intrusion": 1,
          "noIntrusion": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This flag indicates if an intrusion has occurred on this port. The Security LED on the hub will blink if any instance of this flag has the value intrusion. Setting this flag to noIntrusion will turn off the Security LED if no other ports have this flag set to intrusion. An intrusion will only cause an alarm and an intrusion log entry if this flag is equal to noIntrusion."
  },
  "hubIntruderLogTable": {
    "name": "hubIntruderLogTable",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table contains a record of the twenty most recent port security violations. The first entry in the table is the oldest."
  },
  "hubIntruderLogEntry": {
    "name": "hubIntruderLogEntry",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hubIntruderIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A row in the hubIntruderLogTable containing information about a single port security violation."
  },
  "hubIntruderIndex": {
    "name": "hubIntruderIndex",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of this entry in the intruder log table. Index 1 will always contain the oldest entry. If the table is full when a new intrusion occurs, the new entry becomes index 20, and all earlier entries are shifted down by one entry, removing the old index 1."
  },
  "hubIntruderGroup": {
    "name": "hubIntruderGroup",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object identifies the group containing the port on which this intrusion occurred."
  },
  "hubIntruderPort": {
    "name": "hubIntruderPort",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object identifies the port within the group on which this intrusion occurred. A port number of zero indicates that this entry is unused and the values for the other variables in this entry are undefined."
  },
  "hubIntruderAddress": {
    "name": "hubIntruderAddress",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object contains the source MAC address of the intruder."
  },
  "hubIntruderTime": {
    "name": "hubIntruderTime",
    "oid": "1.3.6.1.4.1.11.2.14.2.10.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of sysUpTime when the intrusion occurred. This will be zero if the agent has been reset since the intruder was detected, since sysUpTime could be misinterpreted in that case."
  },
  "hubAddressMoveLogTable": {
    "name": "hubAddressMoveLogTable",
    "oid": "1.3.6.1.4.1.11.2.14.2.11",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A log of the 20 most recent times that the agent detected that a source MAC address which had been heard on one port had moved to a different port."
  },
  "hubAddressMoveLogEntry": {
    "name": "hubAddressMoveLogEntry",
    "oid": "1.3.6.1.4.1.11.2.14.2.11.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hubAddrMoveIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A row in the hubAddressMoveLogTable containing information about a single address movement."
  },
  "hubAddrMoveIndex": {
    "name": "hubAddrMoveIndex",
    "oid": "1.3.6.1.4.1.11.2.14.2.11.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of this entry in the address movement log table. Index 1 will always contain the oldest entry. If the table is full when a new address movement occurs, the new entry becomes index 20, and all earlier entries are shifted down by one entry, removing the old index 1."
  },
  "hubAddrMoveAddress": {
    "name": "hubAddrMoveAddress",
    "oid": "1.3.6.1.4.1.11.2.14.2.11.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MAC address of the station that moved to a new port."
  },
  "hubAddrMoveOldGroup": {
    "name": "hubAddrMoveOldGroup",
    "oid": "1.3.6.1.4.1.11.2.14.2.11.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The group containing the port on which this address had been operating before it moved."
  },
  "hubAddrMoveOldPort": {
    "name": "hubAddrMoveOldPort",
    "oid": "1.3.6.1.4.1.11.2.14.2.11.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The port within the group on which this address had been operating before it moved."
  },
  "hubAddrMoveNewGroup": {
    "name": "hubAddrMoveNewGroup",
    "oid": "1.3.6.1.4.1.11.2.14.2.11.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The group containing the port that the address moved to."
  },
  "hubAddrMoveNewPort": {
    "name": "hubAddrMoveNewPort",
    "oid": "1.3.6.1.4.1.11.2.14.2.11.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The port within the group that the address moved to."
  },
  "hubLateEventMonitor": {
    "name": "hubLateEventMonitor",
    "oid": "1.3.6.1.4.1.11.2.14.2.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 1,
          "onSingle": 2,
          "onAll": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object configures the late event monitoring functionality for the hub. This mode periodically samples the rptrMonitorPortLateEvents value for each port. If the agent detects excessive late events on a port, the port will be disabled by setting the rptrPortAdminStatus for that port to 'disabled', and the hubPortLateEventDisable flag for that port will be set to 'true'. This mode is 'off' by default. Setting it to 'onSingle' enables the mode for all non-cascaded hub ports. Setting it to 'onAll' enables the mode for all hub ports, including cascaded ports."
  },
  "icfBridge": {
    "name": "icfBridge",
    "oid": "1.3.6.1.4.1.11.2.14.3",
    "class": "objectidentity"
  },
  "operationalState": {
    "name": "operationalState",
    "oid": "1.3.6.1.4.1.11.2.14.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "This object controls the forwarding nature of the bridge. In the Learning state the bridge will learn new MAC addresses, and it ages out older MAC addresses. Statically configured addresses are discarded (they do not age). In the Secure state, the bridge will not learn new MAC addresses. Statically configured addresses are forwarded (they do not age)."
  },
  "forwardDbMaxAge": {
    "name": "forwardDbMaxAge",
    "oid": "1.3.6.1.4.1.11.2.14.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The value of this object controls how long a MAC address stays in the forwarding database. See 802.1d, section 3.9.2 'Dynamic Entries'."
  },
  "addressTable": {
    "name": "addressTable",
    "oid": "1.3.6.1.4.1.11.2.14.3.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "obsolete",
    "description": "A list of address entries."
  },
  "addressIndex": {
    "name": "addressIndex",
    "oid": "1.3.6.1.4.1.11.2.14.3.3.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The index value which uniquely identifies the chunk to which this entry is applicable."
  },
  "addressChunk": {
    "name": "addressChunk",
    "oid": "1.3.6.1.4.1.11.2.14.3.3.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 410,
            "max": 410
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "This object returns an opaque chunk of the address table. The instance specifies a chunk of the address table. Each chunk can be interpreted as an array of 41 records of the form: { macAddress[6bytes], port number[2bytes], permanence[2bytes] }. Address Port Perm 00 080009001234 1 Dynamic(0x0000) 01 080009002345 2 Dynamic(0x0000) 02 000000000000 EMPTY(0x8000) Dynamic(0x0000) 03 080009003456 1 Dynamic(0x0000) 04 000000000000 1 Dynamic(0x0000) 05 080009009876 EMPTY(0x8000) Dynamic(0x0000) 06 080009004567 EMPTY(0x8000) Static(0x0008) 07 080009041d08 ... ... ... 40 080009005678 EOL(0x4000) Permanent(0x0000) A value of EMPTY in the Port field indicates an aged out table entry. A value of EOL in the Port field indicates that it is the last entry in the table. Of course, EOL will only be seen in the last entry. EOL and EMPTY are AND-able bit fields. The Disposition and Address are meaningless if Port is EMPTY. When instance=1 is used on a Set, the agent clears the table prior to setting any addresses. On subsequent Sets, the agent adds the specified addresses. If a Set starts at instance > 1, the specified addresses will be added to the table without first clearing the table. Addresses are already in the table are deleted and then readded."
  },
  "brgPortTable": {
    "name": "brgPortTable",
    "oid": "1.3.6.1.4.1.11.2.14.3.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "obsolete",
    "description": "A list of brgPort entries."
  },
  "brgPortIndex": {
    "name": "brgPortIndex",
    "oid": "1.3.6.1.4.1.11.2.14.3.4.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The index value which uniquely identifies the interface/port to which this entry is applicable. The interface/port identified by a particular value of this index is the same interface/port as identified by the same value of ifIndex."
  },
  "brgPortCacheHits": {
    "name": "brgPortCacheHits",
    "oid": "1.3.6.1.4.1.11.2.14.3.4.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the successful cache matches when looking up a destination MAC address."
  },
  "brgPortCacheMisses": {
    "name": "brgPortCacheMisses",
    "oid": "1.3.6.1.4.1.11.2.14.3.4.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the unsuccessful cache matches when looking up a destination MAC address."
  },
  "brgPortForwardedPkts": {
    "name": "brgPortForwardedPkts",
    "oid": "1.3.6.1.4.1.11.2.14.3.4.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the packets received on this port and forwarded to the other port."
  },
  "brgPortFilteredPkts": {
    "name": "brgPortFilteredPkts",
    "oid": "1.3.6.1.4.1.11.2.14.3.4.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the frames that were received on this port and filtered."
  },
  "wildcardTable": {
    "name": "wildcardTable",
    "oid": "1.3.6.1.4.1.11.2.14.3.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "obsolete",
    "description": "A list of wildcard entries."
  },
  "wildcardIndex": {
    "name": "wildcardIndex",
    "oid": "1.3.6.1.4.1.11.2.14.3.5.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The index value which uniquely identifies the interface/port to which this entry is applicable. The interface/port identified by a particular value of this index is the same interface/port as identified by the same value of ifIndex."
  },
  "wildcardFilter": {
    "name": "wildcardFilter",
    "oid": "1.3.6.1.4.1.11.2.14.3.5.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "This object contains the binary value used to filter frames. The data in the frame at the offset specified by the Wildcard offsets is XOR'ed with this object after AND'ing with the Wildcard Mask. If zero result occurs, the packet is discarded (filtered). Suppose the user specifies the following values: data: 11001010 10101010 10101010 10101010 mask: 11100000 00000000 00000000 00000000 filter: 11100000 00000000 00000000 00000000 AND'ing data with the mask gives: 11000000 00000000 00000000 00000000 XOR'ing that value with the filter gives: 00100000 00000000 00000000 00000000 The non-zero result indicates no match (don't discard). Another example: data: 10011010 10101010 10101010 10101010 mask: 10010000 00000000 00000000 00000000 filter: 10010000 00000000 00000000 00000000 AND'ing data with the mask gives: 10010000 00000000 00000000 00000000 XOR'ing that value with the filter gives: 00000000 00000000 00000000 00000000 A zero result indicates a match, so we discard (filter) the packet. The filter AND'ed with the mask must equal the filter. This is an example of a legal filter/mask pair: filter: 00010000 00000000 00000000 00000000 mask: 10010000 00000000 00000000 00000000 AND'ed: 00010000 00000000 00000000 00000000 (equals filter) Another way of saying this: if a mask bit is zero, the corresponding filter bit must be zero. The following would be an illegal pair: filter: 01110000 00000000 00000000 00000000 mask: 10010000 00000000 00000000 00000000 AND'ed: 00010000 00000000 00000000 00000000 ( != filter)"
  },
  "wildcardMask": {
    "name": "wildcardMask",
    "oid": "1.3.6.1.4.1.11.2.14.3.5.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "This object indicates which portion of the wildcardFilter is to be used in filtering. The data in the frame at the offset specified by Wildcard offsets is AND'ed with this object. The result is XOR'ed with the Wildcard Filter object. If a zero result is obtained, the packet is discarded. If an all-zeros wildcardMask is specified, a genErr is returned. Also, see mask/filter constraints in the description of the wildcardFilter object."
  },
  "wildcardOffset": {
    "name": "wildcardOffset",
    "oid": "1.3.6.1.4.1.11.2.14.3.5.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Indicates the position in a received frame which is to have the Wildcard Mask/Filter applied. The indicated packet byte is aligned with the 0th byte of the wildcard mask/filter held in network byte order. The MAC destination address starts at byte position (wildcardOffset) zero. The wildcardOffset must fall on a 2-byte boundary, 0,2,4,...,1512 (violations of this constraint result in a genErr). Filters can be aligned on non 2-byte boundaries through use of the wildcardUserOffset."
  },
  "wildcardUserOffset": {
    "name": "wildcardUserOffset",
    "oid": "1.3.6.1.4.1.11.2.14.3.5.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "This value is a byte offset from the beginning of the packet. If this offset is such that any portion of the filter extends past the end of the packet (for wildcard filtering purposes, the FCS is part of the packet), then the filter is considered not to match, and the packet is not filtered. For a particular filter, the wildcardUserOffset must be greater than or equal to the wildcardOffset. wildcardUserOffset must be between 0 and 1514, inclusive. The wildcardUserOffset, wildcardOffset pair must conform to one of the following four relationships and also be subject to the range restrictions listed above. For n = 0,..,378 Offset 4n 4n 4n 4n+2 UserOffset 4n 4n+1 4n+2 4n+3 As an example, consider four examples in the following table for locating the filter at or near the beginning of a packet: - 6 filter/mask bytes - - desired - 0 1 2 3 4 5 6 - position - A|f/m0 f/m1 f/m2 f/m3 00 00 00 |0,4,8,12,... B| 00 f/m0 f/m1 f/m2 f/m3 00 00 |1,5,9,13,... C| 00 00 f/m0 f/m1 f/m2 f/m3 00 |2,6,10,14,... D| 00 00 00 f/m0 f/m1 f/m2 f/m3|3,7,11,15,... Example A corresponds to a UserOffset/Offset pair such as 0/0 (4n/4n). Example B represents a pair such as 0/1 (4n/4n+1). Example C is 0/2 (4n/4n+2). Finally, example D is 2/3 (4n+2/4n+3). If any of the above constraints is not honored, the SET Response will indicate genErr."
  },
  "wildcardArm": {
    "name": "wildcardArm",
    "oid": "1.3.6.1.4.1.11.2.14.3.5.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "This object arms (enables) the Wildcard Filter provided all of the other wildcard objects have been set to proper values. To disarm a wildcard, only the wildcardArm object need be set."
  },
  "stp": {
    "name": "stp",
    "oid": "1.3.6.1.4.1.11.2.14.3.6",
    "class": "objectidentity"
  },
  "stpBridgeId": {
    "name": "stpBridgeId",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "A 64 bit binary bridge id composed of bridge priority and the bridge's mac address fields. see: IEEE 802.1(d) 6.8.1.1.3(1), 4.5.3.7"
  },
  "stpTopoChangeTime": {
    "name": "stpTopoChangeTime",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The time since the last topology change. see: IEEE 802.1(d) 6.8.1.1.3(2), 4.5.3.12"
  },
  "stpTopoNumChanges": {
    "name": "stpTopoNumChanges",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The number of topo changes since initialization of STP. see: IEEE 802.1(d) 6.8.1.1.3(3)"
  },
  "stpTopoChange": {
    "name": "stpTopoChange",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "A 1 bit flag broadcast by the root bridge indicating that a topology change is underway, and Stp bridges should use short term aging. see: IEEE 802.1(d) 6.8.1.1.3(4), 4.5.3.12"
  },
  "stpDesignatedRoot": {
    "name": "stpDesignatedRoot",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The binary bridge id that this bridge believes to be the root bridge for the bridged Lan. see: IEEE 802.1(d) 6.8.1.1.3(5), 4.5.3.1"
  },
  "stpRootCost": {
    "name": "stpRootCost",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The cost of the path to the root bridge from this bridge; equal to the sum of the designated cost and the path cost held for the root port. see: IEEE 802.1(d) 6.8.1.1.3(6), 4.5.3.2"
  },
  "stpRootPort": {
    "name": "stpRootPort",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The port id that this bridge believes to be the root bridge's root port for the bridged Lan. see: IEEE 802.1(d) 6.8.1.1.3(7), 4.5.3.3"
  },
  "stpCurrentMaxAge": {
    "name": "stpCurrentMaxAge",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 6,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The Max Age value received from the Root Bridge (in seconds); the Stp is currently using the value. see: IEEE 802.1(d) 6.8.1.1.3(8), 4.5.3.4"
  },
  "stpCurrentHelloTime": {
    "name": "stpCurrentHelloTime",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The Hello time value received from the Root Bridge (in seconds); the Stp records the value. see: IEEE 802.1(d) 6.8.1.1.3(9), 4.5.3.5"
  },
  "stpCurrentForwardDelay": {
    "name": "stpCurrentForwardDelay",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 4,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The forward delay value received from the Root Bridge (in seconds); the Stp is currently using the value. see: IEEE 802.1(d) 6.8.1.1.3(10), 4.5.3.6"
  },
  "stpMaxAge": {
    "name": "stpMaxAge",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 6,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The maximum age allowed of Config information for a port before a bridge will attempt to become the root (in seconds). Transmitted by this bridge when it is, or is attempting to become the root. see: IEEE 802.1(d) 6.8.1.1.3(11), 6.8.1.2.2(1), 4.5.3.8"
  },
  "stpHelloTime": {
    "name": "stpHelloTime",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The time between Config packet transmission when this bridge is, or is attempting to become the root (in seconds). Transmitted by this bridge when it is, or is attempting to become the root. see: IEEE 802.1(d) 6.8.1.1.3(12), 6.8.1.2.2(2), 4.5.3.9"
  },
  "stpForwardDelay": {
    "name": "stpForwardDelay",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 4,
            "max": 30
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The time spent in the Listening and Learning states used when this bridge is, or is attempting to become the root (in seconds). Transmitted by this bridge when it is, or is attempting to become the root. see: IEEE 802.1(d) 6.8.1.1.3(13), 6.8.1.2.2(3), 4.5.3.10"
  },
  "stpPriority": {
    "name": "stpPriority",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The upper 16 bits of the 64 bit BridgeId composed of priority and the bridge's mac address fields. see: IEEE 802.1(d) 6.8.1.2.2(4), 4.5.3.7"
  },
  "stpPortTable": {
    "name": "stpPortTable",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.15",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "obsolete",
    "description": "A list of stpPort entries."
  },
  "stpPortIndex": {
    "name": "stpPortIndex",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.15.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The index value which uniquely identifies the port to which this entry is applicable. The port identified by a particular value of this index is the same interface/port as identified by the same value of ifIndex. Not an IEEE 802.1(d) reqmt."
  },
  "stpPortState": {
    "name": "stpPortState",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.15.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The state of a port on a 2 port bridge is really the state of the bridge itself. Management is only allowed to set this object to 'stpDisabled' or 'stpBlocking'. Setting the object to 'stpDisabled' will turn off spanning tree only if the state is not 'stpBlocking' (to prevent loops). Setting the object to 'stpBlocking' will turn on spanning tree only if it was previously disabled. see: IEEE 802.1(d) 6.8.2.1.3(2), 4.4, 4.5.5.2"
  },
  "stpPortId": {
    "name": "stpPortId",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.15.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The 16 bit port id composed of priority and the port's unique id fields. see: IEEE 802.1(d) 6.8.2.1.3(3), 4.5.5.1"
  },
  "stpPortPathCost": {
    "name": "stpPortPathCost",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.15.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The contribution of the path through this port, when the port is the root port, to the total cost of the path to the root for this bridge. see: IEEE 802.1(d) 6.8.2.1.3(4), 6.8.2.3.2(2), 4.5.5.3"
  },
  "stpPortRootId": {
    "name": "stpPortRootId",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.15.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The bridge id that this port believes to be the root bridge for the bridged Lan. see: IEEE 802.1(d) 6.8.2.1.3(5), 4.5.5.4"
  },
  "stpPortDesignatedCost": {
    "name": "stpPortDesignatedCost",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.15.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The cost of the path to the root offered by the Designated Port on the LAN to which this Port is attached. see: IEEE 802.1(d) 6.8.2.1.3(6), 4.5.5.5"
  },
  "stpPortDesignatedBridge": {
    "name": "stpPortDesignatedBridge",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.15.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The Bridge Id of the designated bridge for the LAN associated with the port. see: IEEE 802.1(d) 6.8.2.1.3(7), 4.5.5.6"
  },
  "stpPortDesignatedPort": {
    "name": "stpPortDesignatedPort",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.15.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The port id of the bridge believed to be the designated port of the LAN associated with the port. see: IEEE 802.1(d) 6.8.2.1.3(8), 4.5.5.7"
  },
  "stpPortPriority": {
    "name": "stpPortPriority",
    "oid": "1.3.6.1.4.1.11.2.14.3.6.15.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The upper 8 bits of the 16 bit PortId composed of priority and the port's unique id fields. see: IEEE 802.1(d) 6.8.2.3.2(3), 4.5.5.1"
  },
  "hdlcErrorTable": {
    "name": "hdlcErrorTable",
    "oid": "1.3.6.1.4.1.11.2.14.3.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "obsolete",
    "description": "A list of hdlcError entries."
  },
  "hdlcErrorIndex": {
    "name": "hdlcErrorIndex",
    "oid": "1.3.6.1.4.1.11.2.14.3.7.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The index value which uniquely identifies the port to which this entry is applicable. The port identified by a particular value of this index is the same interface/port as identified by the same value of ifIndex. IcfBridge.HP28674: There is only one 'real' instance of this object on port 2."
  },
  "hdlcErrorIndications": {
    "name": "hdlcErrorIndications",
    "oid": "1.3.6.1.4.1.11.2.14.3.7.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Errors occurring during information transfer which required instruction from CPU for recovery. This is a serious link problem. The local node will either reset or disconnect after receiving this message."
  },
  "hdlcT1Timeouts": {
    "name": "hdlcT1Timeouts",
    "oid": "1.3.6.1.4.1.11.2.14.3.7.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "The number of times the retransmission timer (x25T1Timer) timed out."
  },
  "hdlcMissedPackets": {
    "name": "hdlcMissedPackets",
    "oid": "1.3.6.1.4.1.11.2.14.3.7.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the frames lost by the receiver because there wasn't a receive buffer."
  },
  "hdlcRcvOverruns": {
    "name": "hdlcRcvOverruns",
    "oid": "1.3.6.1.4.1.11.2.14.3.7.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the number of times the reciever's FIFO was full when the receiver was ready to put new data into the FIFO."
  },
  "hdlcXmtUnderruns": {
    "name": "hdlcXmtUnderruns",
    "oid": "1.3.6.1.4.1.11.2.14.3.7.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the number of times the transmitter has aborted a frame transmission because data was late from memory."
  },
  "hdlcProviderLostPrimitives": {
    "name": "hdlcProviderLostPrimitives",
    "oid": "1.3.6.1.4.1.11.2.14.3.7.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the number of lost control frames due to 802.3 priority processing on receive."
  },
  "hdlcRuntFrameReceives": {
    "name": "hdlcRuntFrameReceives",
    "oid": "1.3.6.1.4.1.11.2.14.3.7.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the HDLC frames received that were less than the minimum legal HDLC size."
  },
  "hdlcGiantFrameReceives": {
    "name": "hdlcGiantFrameReceives",
    "oid": "1.3.6.1.4.1.11.2.14.3.7.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the HDLC frames received that were larger than the maximum legal size that can be sent on the 802.3 LAN link."
  },
  "hdlcBadFrameReceives": {
    "name": "hdlcBadFrameReceives",
    "oid": "1.3.6.1.4.1.11.2.14.3.7.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the sum of: HDLC frames with bad checksum, and misaligned HDLC frames."
  },
  "hdlcRejectFrameReceives": {
    "name": "hdlcRejectFrameReceives",
    "oid": "1.3.6.1.4.1.11.2.14.3.7.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the HDLC reject frames received."
  },
  "hdlcRejectFrameSends": {
    "name": "hdlcRejectFrameSends",
    "oid": "1.3.6.1.4.1.11.2.14.3.7.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the HDLC reject frames sent."
  },
  "hdlcFrameRejectFrameRecs": {
    "name": "hdlcFrameRejectFrameRecs",
    "oid": "1.3.6.1.4.1.11.2.14.3.7.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of the HDLC frame reject frames (FRMR) received."
  },
  "hdlcLocalTable": {
    "name": "hdlcLocalTable",
    "oid": "1.3.6.1.4.1.11.2.14.3.8",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "obsolete",
    "description": "A list of hdlcLocal entries."
  },
  "hdlcLocalIndex": {
    "name": "hdlcLocalIndex",
    "oid": "1.3.6.1.4.1.11.2.14.3.8.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Index into Hdlc local statistics table on a per port basis. bridge.HP28674: There is only one 'real' instance of this object on port 2."
  },
  "hdlcLocalResetRequests": {
    "name": "hdlcLocalResetRequests",
    "oid": "1.3.6.1.4.1.11.2.14.3.8.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of local HDLC requests to reset current logical link."
  },
  "hdlcLocalResetConfirms": {
    "name": "hdlcLocalResetConfirms",
    "oid": "1.3.6.1.4.1.11.2.14.3.8.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of local HDLC node link reset confirmations."
  },
  "hdlcLocalConnectRequests": {
    "name": "hdlcLocalConnectRequests",
    "oid": "1.3.6.1.4.1.11.2.14.3.8.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of local HDLC node attempts to establish logical link."
  },
  "hdlcLocalConnectConfirms": {
    "name": "hdlcLocalConnectConfirms",
    "oid": "1.3.6.1.4.1.11.2.14.3.8.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of local HDLC node connect request acceptances."
  },
  "hdlcLocalDisconnectRequests": {
    "name": "hdlcLocalDisconnectRequests",
    "oid": "1.3.6.1.4.1.11.2.14.3.8.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of local HDLC node disconnect requests."
  },
  "hdlcLocalDisconnectConfirms": {
    "name": "hdlcLocalDisconnectConfirms",
    "oid": "1.3.6.1.4.1.11.2.14.3.8.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of local HDLC node disconnects granted."
  },
  "hdlcLocalState": {
    "name": "hdlcLocalState",
    "oid": "1.3.6.1.4.1.11.2.14.3.8.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Current local HDLC operational state."
  },
  "hdlcLocalAddress": {
    "name": "hdlcLocalAddress",
    "oid": "1.3.6.1.4.1.11.2.14.3.8.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "hdlcDTEAddress": 1,
          "hdlcDCEAddress": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The local HDLC address during communication with the remote node. This object is valid only if a brouter is on the remote end of the HDLC link. It can only be set to one of the two values: 'hdlcDTEAddress' or 'hdlcDTEAddress'. Furthermore, the setting of this object must be different from the setting of the hdlcRemoteHdlcAddress object. This object, along with hdlcRemoteAddress and hdlcRemoteNodeId, constitute a superobject. See hdlcRemoteNodeId for more details."
  },
  "hdlcLocalPhase": {
    "name": "hdlcLocalPhase",
    "oid": "1.3.6.1.4.1.11.2.14.3.8.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Current HDLC operational phase."
  },
  "hdlcRemoteTable": {
    "name": "hdlcRemoteTable",
    "oid": "1.3.6.1.4.1.11.2.14.3.9",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "obsolete",
    "description": "A list of hdlcRemote entries."
  },
  "hdlcRemoteIndex": {
    "name": "hdlcRemoteIndex",
    "oid": "1.3.6.1.4.1.11.2.14.3.9.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Index into Hdlc remote statistics table on a per port basis. bridge.HP28674: There is only one 'real' instance of this object on port 2."
  },
  "hdlcRemoteResetRequests": {
    "name": "hdlcRemoteResetRequests",
    "oid": "1.3.6.1.4.1.11.2.14.3.9.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of remote HDLC requests to reset current logical link."
  },
  "hdlcRemoteResetConfirms": {
    "name": "hdlcRemoteResetConfirms",
    "oid": "1.3.6.1.4.1.11.2.14.3.9.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of remote HDLC node link reset confirmations."
  },
  "hdlcRemoteConnectRequests": {
    "name": "hdlcRemoteConnectRequests",
    "oid": "1.3.6.1.4.1.11.2.14.3.9.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of remote HDLC node attempts to establish logical link."
  },
  "hdlcRemoteConnectConfirms": {
    "name": "hdlcRemoteConnectConfirms",
    "oid": "1.3.6.1.4.1.11.2.14.3.9.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of remote HDLC node connect request acceptances."
  },
  "hdlcRemoteDisconnectRequests": {
    "name": "hdlcRemoteDisconnectRequests",
    "oid": "1.3.6.1.4.1.11.2.14.3.9.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of remote HDLC node disconnect requests."
  },
  "hdlcRemoteState": {
    "name": "hdlcRemoteState",
    "oid": "1.3.6.1.4.1.11.2.14.3.9.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Current remote HDLC operational state."
  },
  "hdlcRemoteAddress": {
    "name": "hdlcRemoteAddress",
    "oid": "1.3.6.1.4.1.11.2.14.3.9.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "hdlcDTEAddress": 1,
          "hdlcDCEAddress": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "The remote HDLC address during communication with the local node. This object is valid only if a brouter is on the remote end of the HDLC link. It can only be set to one of the two values: 'hdlcDCEAddress' or 'hdlcDTEAddress'. Furthermore, the setting of this object must be different from the setting of the hdlcLocalAddress object. This object, along with hdlcLocalAddress and hdlcRemoteNodeId, constitute a superobject. See hdlcRemoteNodeId for more details."
  },
  "hdlcRemoteXidCommands": {
    "name": "hdlcRemoteXidCommands",
    "oid": "1.3.6.1.4.1.11.2.14.3.9.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of XID commands issued by remote node."
  },
  "hdlcRemoteXidResponses": {
    "name": "hdlcRemoteXidResponses",
    "oid": "1.3.6.1.4.1.11.2.14.3.9.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of XID responses issued by remote node."
  },
  "hdlcRemoteTestCommands": {
    "name": "hdlcRemoteTestCommands",
    "oid": "1.3.6.1.4.1.11.2.14.3.9.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of Test commands issued by remote node."
  },
  "hdlcRemoteTestResponses": {
    "name": "hdlcRemoteTestResponses",
    "oid": "1.3.6.1.4.1.11.2.14.3.9.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Count of Test responses issued by remote node."
  },
  "hdlcRemoteNodeId": {
    "name": "hdlcRemoteNodeId",
    "oid": "1.3.6.1.4.1.11.2.14.3.9.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Identification of the node at the opposite end of the HDLC link (eg. brouter or bridge). This object, along with hdlcLocalAddress and hdlcRemoteAddress, constitute a superobject. This object may only be set to one of the two values: 'remoteNodeBridge' or 'remoteNodeRouter'. If this object is set to 'remoteNodeUnknown', then hdlcLocalAddress and hdlcRemoteAddress need not be supplied, and will be ignored if provided. In a get, this object may report 'remoteNodeBridge', but attempts to set this object to 'remoteNodeBridge' will result in an error pdu with error type invalidData. If this object is set to 'remoteNodeRouter', then hdlcLocalAddress and hdlcRemoteAddress must be present and contiguous in the pdu in order to properly complete the superobject. The three objects may be in any order within the pdu."
  },
  "x25Table": {
    "name": "x25Table",
    "oid": "1.3.6.1.4.1.11.2.14.3.10",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "obsolete",
    "description": "A list of X25 entries."
  },
  "x25Index": {
    "name": "x25Index",
    "oid": "1.3.6.1.4.1.11.2.14.3.10.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Index into X25 remote timer table on a per port basis. bridge.HP28674: There is only one 'real' instance of this object on port 2."
  },
  "x25T1Timer": {
    "name": "x25T1Timer",
    "oid": "1.3.6.1.4.1.11.2.14.3.10.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Period of time used to timeout retransmits for X25."
  },
  "x25N2Count": {
    "name": "x25N2Count",
    "oid": "1.3.6.1.4.1.11.2.14.3.10.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 4,
            "max": 30
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Number of retries to be performed during X.25 communication."
  },
  "x25T3Timer": {
    "name": "x25T3Timer",
    "oid": "1.3.6.1.4.1.11.2.14.3.10.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Period of idle time before a disconnect is executed for X25."
  },
  "icfSecurity": {
    "name": "icfSecurity",
    "oid": "1.3.6.1.4.1.11.2.14.4",
    "class": "objectidentity"
  },
  "icfSecurPassword": {
    "name": "icfSecurPassword",
    "oid": "1.3.6.1.4.1.11.2.14.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 63
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable contains a string which is used both as the community name for the password community, and as the login password for the console port. This community name is needed for most SET operations. In addition, the variables in the ICF security group are only visible within the password community, and must use the value of this variable as the community name for GET operations. If the value of this variable is equal to the null string, the community name 'public' or the null string will be treated the same as the password community."
  },
  "icfSecurAuthAnyMgr": {
    "name": "icfSecurAuthAnyMgr",
    "oid": "1.3.6.1.4.1.11.2.14.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When this variable is set to enabled, any manager with a valid community name may perform SET operations on this device. In this configuration, entries in the icfSecurAuthMgrTable are used only for trap destinations. If this variable is set to disabled, a manager must be in the icfSecurAuthMgrTable and have a valid community name in order to perform SET operations."
  },
  "icfSecurAuthMgrTable": {
    "name": "icfSecurAuthMgrTable",
    "oid": "1.3.6.1.4.1.11.2.14.4.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table contains a list of addresses of managers that are allowed to perform SET operations on this device, and controls the destination addresses for traps. If icfSecurAuthAnyMgr is set to disabled, a manager must be in this table and use the correct community name for the password community in order to perform a GET operation on this table."
  },
  "icfSecurAuthMgrEntry": {
    "name": "icfSecurAuthMgrEntry",
    "oid": "1.3.6.1.4.1.11.2.14.4.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "icfAuthMgrIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the icfSecurAuthMgrTable containing information about a single manager."
  },
  "icfAuthMgrIndex": {
    "name": "icfAuthMgrIndex",
    "oid": "1.3.6.1.4.1.11.2.14.4.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object contains the index which uniquely identifies this entry in the icfSecurAuthMgrTable."
  },
  "icfAuthMgrIpAddress": {
    "name": "icfAuthMgrIpAddress",
    "oid": "1.3.6.1.4.1.11.2.14.4.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP address of a manager that is allowed to manage this device. Setting this variable to a nonzero value will clear the corresponding instance of the icfAuthMgrIpxAddress variable."
  },
  "icfAuthMgrIpxAddress": {
    "name": "icfAuthMgrIpxAddress",
    "oid": "1.3.6.1.4.1.11.2.14.4.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 10,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IPX address of a manager that is allowed to manage this device. Setting this variable to a valid IPX address will clear the corresponding instance of the icfAuthMgrIpAddress variable."
  },
  "icfAuthMgrRcvTraps": {
    "name": "icfAuthMgrRcvTraps",
    "oid": "1.3.6.1.4.1.11.2.14.4.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If this variable is set to enabled, any traps generated by this device will be sent to the manager indicated by the corresponding instance of either icfAuthMgrIpAddress or icfAuthMgrIpxAddress, whichever is valid."
  },
  "icfSecurIntruder": {
    "name": "icfSecurIntruder",
    "oid": "1.3.6.1.4.1.11.2.14.4.4",
    "class": "objectidentity"
  },
  "icfSecurIntruderFlag": {
    "name": "icfSecurIntruderFlag",
    "oid": "1.3.6.1.4.1.11.2.14.4.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If this object is set to 'valid', the remainder of the intruder objects contain information about an authentication failure. The Security LED on the device will blink if this flag is set to 'valid'. The intruder objects will not be overwritten as long as this flag is set to 'valid'. Setting this flag to 'invalid' will turn off the Security LED if there are no other current violations, and will allow the intruder objects to be overwritten by subsequent authentication failures."
  },
  "icfSecurIntruderIpAddress": {
    "name": "icfSecurIntruderIpAddress",
    "oid": "1.3.6.1.4.1.11.2.14.4.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address of the manager that caused the authentication failure. Only one of icfSecurIntruderIpAddress and icfSecurIntruderIPXAddress will be valid."
  },
  "icfSecurIntruderIpxAddress": {
    "name": "icfSecurIntruderIpxAddress",
    "oid": "1.3.6.1.4.1.11.2.14.4.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 10,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IPX address of the manager that caused the authentication failure. Only one of icfSecurIntruderIpAddress and icfSecurIntruderIPXAddress will be valid."
  },
  "icfSecurIntruderTime": {
    "name": "icfSecurIntruderTime",
    "oid": "1.3.6.1.4.1.11.2.14.4.4.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of sysUpTime when the authentication failure occurred. A value of 0 indicates that the agent has been reset since this authentication failure occurred."
  },
  "icfConfig": {
    "name": "icfConfig",
    "oid": "1.3.6.1.4.1.11.2.14.5",
    "class": "objectidentity"
  },
  "icfConfigIfTable": {
    "name": "icfConfigIfTable",
    "oid": "1.3.6.1.4.1.11.2.14.5.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table contains per-interface configuration information that will take effect after the next reset of the device."
  },
  "icfConfigIfEntry": {
    "name": "icfConfigIfEntry",
    "oid": "1.3.6.1.4.1.11.2.14.5.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "icfConfigIfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the icfConfigIfTable containing information about a single interface."
  },
  "icfConfigIfIndex": {
    "name": "icfConfigIfIndex",
    "oid": "1.3.6.1.4.1.11.2.14.5.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of the interface which this information contains configuration information for. The interface identified by a particular value of this index is the same interface identified by the same value of ifIndex."
  },
  "icfConfigIfIpAddress": {
    "name": "icfConfigIfIpAddress",
    "oid": "1.3.6.1.4.1.11.2.14.5.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable contains the IP address for this interface which will be used after the next reset of the device."
  },
  "icfConfigIfNetMask": {
    "name": "icfConfigIfNetMask",
    "oid": "1.3.6.1.4.1.11.2.14.5.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable contains the IP subnet mask for this interface which will be used after the next reset of the device."
  },
  "icfConfigIfDefaultGate": {
    "name": "icfConfigIfDefaultGate",
    "oid": "1.3.6.1.4.1.11.2.14.5.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable contains the IP address of the default router for this interface which will be used after the next reset of the device."
  },
  "icfConfigIpTTL": {
    "name": "icfConfigIpTTL",
    "oid": "1.3.6.1.4.1.11.2.14.5.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable contains the default IP time to live which will be used after the next reset of the device."
  },
  "icfConfigBootpEnable": {
    "name": "icfConfigBootpEnable",
    "oid": "1.3.6.1.4.1.11.2.14.5.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this flag to 'enabled' (the default) will clear any existing IP address configuration for this device, and will cause the device to use the Bootp protocol to obtain its IP configuration after the next reset. This flag must be set to 'disabled' in order to configure an IP address for the device. Setting this flag to 'disabled' will prevent the Bootp protocol from running. Setting this flag to 'disabled' when there is no IP address configured will disable the IP protocol stack on this device."
  },
  "icfDot12Draft": {
    "name": "icfDot12Draft",
    "oid": "1.3.6.1.4.1.11.2.14.8",
    "class": "objectidentity"
  },
  "icfVgRepeater": {
    "name": "icfVgRepeater",
    "oid": "1.3.6.1.4.1.11.2.14.8.1",
    "class": "objectidentity"
  },
  "icfVgBasic": {
    "name": "icfVgBasic",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1",
    "class": "objectidentity"
  },
  "icfVgBasicRptr": {
    "name": "icfVgBasicRptr",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.1",
    "class": "objectidentity"
  },
  "icfVgMACAddress": {
    "name": "icfVgMACAddress",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.2.1, aMACAddress.",
    "status": "mandatory",
    "description": "The MAC address used by the repeater when it initiates training on the uplink port. Repeaters are allowed to train with an assigned MAC address or a null (all zeroes) MAC address."
  },
  "icfVgCurrentFramingType": {
    "name": "icfVgCurrentFramingType",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "frameType88023": 1,
          "frameType88025": 2
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.2.1, aCurrentFramingType.",
    "status": "mandatory",
    "description": "The type of framing (802.3 or 802.5) currently in use by the repeater."
  },
  "icfVgDesiredFramingType": {
    "name": "icfVgDesiredFramingType",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "frameType88023": 1,
          "frameType88025": 2
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.2.1, aDesiredFramingType.",
    "status": "mandatory",
    "description": "The type of framing which will be used by the repeater after the next time it is reset. The value of this object should be preserved across repeater resets and power failures"
  },
  "icfVgFramingCapability": {
    "name": "icfVgFramingCapability",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "frameType88023": 1,
          "frameType88025": 2,
          "frameTypeEither": 3
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.2.1, aFramingCapability.",
    "status": "mandatory",
    "description": "The type of framing this repeater is capable of supporting."
  },
  "icfVgTrainingVersion": {
    "name": "icfVgTrainingVersion",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 7
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.2.1, aRMACVersion.",
    "status": "mandatory",
    "description": "The highest version bits (vvv bits) supported by the repeater during training."
  },
  "icfVgRepeaterGroupCapacity": {
    "name": "icfVgRepeaterGroupCapacity",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.2.1, aRepeaterGroupCapacity.",
    "status": "mandatory",
    "description": "The icfVgGroupCapacity is the number of groups that can be contained within the repeater. Within each managed repeater, the groups are uniquely numbered in the range from 1 to icfVgRepeaterGroupCapacity. Some groups may not be present in the repeater, in which case the actual number of groups present will be less than icfVgRepeaterGroupCapacity. The number of groups present is never greater than icfVgRepeaterGroupCapacity."
  },
  "icfVgRepeaterHealthState": {
    "name": "icfVgRepeaterHealthState",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "ok": 2,
          "rptrFailure": 3,
          "groupFailure": 4,
          "portFailure": 5,
          "generalFailure": 6
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.2.1, aRepeaterHealthState.",
    "status": "mandatory",
    "description": "The icfVgRepeaterHealthState object indicates the operational state of the repeater. The icfVgRepeaterHealthText may be consulted for more specific information about the state of the repeater's health. In the case of multiple kinds of failures (e.g., repeater failure and port failure), the value of this attribute shall reflect the highest priority failure in the following order, listed highest priority first: rptrFailure(3) groupFailure(4) portFailure(5) generalFailure(6)."
  },
  "icfVgRepeaterHealthText": {
    "name": "icfVgRepeaterHealthText",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.2.1, aRepeaterHealthText.",
    "status": "mandatory",
    "description": "The health text object is a text string that provides information relevant to the operational state of the repeater. Agents may use this string to provide detailed information on current failures, including how they were detected, and/or instructions for problem resolution. The contents are agent specific."
  },
  "icfVgRepeaterReset": {
    "name": "icfVgRepeaterReset",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noReset": 1,
          "reset": 2
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.2.2, acResetRepeater.",
    "status": "mandatory",
    "description": "Setting this object to reset(2) causes the repeater to transition to its initial state as specified in clause 12 [IEEE Draft Std 802.12]. Setting this object to noReset(1) has no effect. The agent will always return the value noReset(1) when this object is read. After receiving a request to set this variable to reset(2), the agent is allowed to delay the reset for a short period. For example, the implementor may choose to delay the reset long enough to allow the SNMP response to be transmitted. In any event, the SNMP response must be transmitted. This action does not reset the management counters defined in this document nor does it affect the icfVgPortAdminStatus parameters. Included in this action is the execution of a disruptive Self-Test with the following characteristics: a) The nature of the tests is not specified. b) The test resets the repeater but without affecting management information about the repeater. c) The test does not inject packets onto any segment. d) Packets received during the test may or may not be transferred. e) The test does not interfere with management functions. After performing this self-test, the agent will update the repeater health information (including icfVgRepeaterHealthState and icfVgRepeaterHealthText)."
  },
  "icfVgRepeaterNonDisruptTest": {
    "name": "icfVgRepeaterNonDisruptTest",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noSelfTest": 1,
          "selfTest": 2
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.2.2, acExecuteNonDisruptiveSelfTest.",
    "status": "mandatory",
    "description": "Setting this object to selfTest(2) causes the repeater to perform an agent-specific, non-disruptive self-test that has the following characteristics: a) The nature of the tests is not specified. b) The test does not change the state of the repeater or management information about the repeater. c) The test does not inject packets onto any segment. d) The test does not prevent the relay of any packets. e) The test does not interfere with management functions. After performing this test, the agent will update the repeater health information (including icfVgRepeaterHealthState and icfVgRepeaterHealthText). Note that this definition allows returning an 'okay' result after doing a trivial test. Setting this object to noSelfTest(1) has no effect. The agent will always return the value noSelfTest(1) when this object is read."
  },
  "icfVgBasicGroup": {
    "name": "icfVgBasicGroup",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.2",
    "class": "objectidentity"
  },
  "icfVgBasicGroupTable": {
    "name": "icfVgBasicGroupTable",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table containing information about groups of ports."
  },
  "icfVgBasicGroupEntry": {
    "name": "icfVgBasicGroupEntry",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "icfVgGroupIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the icfVgBasicGroupTable, containing information about a single group of ports."
  },
  "icfVgGroupIndex": {
    "name": "icfVgGroupIndex",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.4.1, aGroupID.",
    "status": "mandatory",
    "description": "This object identifies the group within the repeater for which this entry contains information. This value is never greater than icfVgRepeaterGroupCapacity."
  },
  "icfVgGroupDescr": {
    "name": "icfVgGroupDescr",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A textual description of the group. This value should include the full name and version identification of the group's hardware type and indicate how the group is differentiated from other types of groups in the repeater. 'Plug-in Module, Rev A' or 'Barney Rubble 100BaseVG 4-port socket Version 2.1' are examples of valid group descriptions. It is mandatory that this only contain printable ASCII characters."
  },
  "icfVgGroupObjectID": {
    "name": "icfVgGroupObjectID",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The vendor's authoritative identification of the group. This value may be allocated within the SMI enterprises subtree (1.3.6.1.4.1) and provides a straight-forward and unambiguous means for determining what kind of group is being managed. For example, this object could take the value 1.3.6.1.4.1.4242.1.2.14 if vendor 'Flintstones, Inc.' was assigned the subtree 1.3.6.1.4.1.4242, and had assigned the identifier 1.3.6.1.4.1.4242.1.2.14 to its 'Wilma Flintstone 6-Port Plug-in Module.'"
  },
  "icfVgGroupOperStatus": {
    "name": "icfVgGroupOperStatus",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "operational": 2,
          "malfunctioning": 3,
          "notPresent": 4,
          "underTest": 5,
          "resetInProgress": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An object that indicates the operational status of the group. A status of notPresent(4) indicates that the group is temporarily or permanently physically and/or logically not a part of the repeater. It is an implementation-specific matter as to whether the agent effectively removes notPresent entries from the table. A status of operational(2) indicates that the group is functioning, and a status of malfunctioning(3) indicates that the group is malfunctioning in some way."
  },
  "icfVgGroupLastOperStatusChange": {
    "name": "icfVgGroupLastOperStatusChange",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An object that contains the value of sysUpTime at the time that the value of the icfVgGroupOperStatus object for this group last changed. A value of zero indicates that the group's operational status has not changed since the agent last restarted."
  },
  "icfVgGroupPortCapacity": {
    "name": "icfVgGroupPortCapacity",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.4.1, aGroupPortCapacity.",
    "status": "mandatory",
    "description": "The icfVgGroupPortCapacity is the number of ports that can be contained within the group. Valid range is 1-1024. Within each group, the ports are uniquely numbered in the range from 1 to icfVgGroupPortCapacity. Some ports may not be present in a given group instance, in which case the actual number of ports present is less than icfVgGroupPortCapacity. The number of ports present is never greater than icfVgGroupPortCapacity."
  },
  "icfVgGroupCablesBundled": {
    "name": "icfVgGroupCablesBundled",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "someCablesBundled": 1,
          "noCablesBundled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.4.1, aGroupCablesBundled.",
    "status": "mandatory",
    "description": "This configuration flag is used to select either bundled or unbundled cabling. When this flag is 'someCablesBundled(1)' and the port is not promiscuous or cascaded, frames received from ports on this group and destined to go out multiple ports on this group will be buffered completely before being repeated out ports on this group. When this flag is 'noCablesBundled(2)' or the port is promiscuous or cascaded, these frames will be repeated out ports on this group as the frame is being received. Note that the value 'someCablesBundled(1)' will work in the vast majority of installations, regardless of whether or not any cables are physically in a bundle, since promiscuous and cascaded ports automatically avoid the store and forward. The main situation in which 'noCablesBundled(2)' is beneficial is when there is a large amount of multicast traffic and the cables are not in a bundle. The value of this object should be preserved across repeater resets and power failures."
  },
  "icfVgBasicPort": {
    "name": "icfVgBasicPort",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3",
    "class": "objectidentity"
  },
  "icfVgBasicPortTable": {
    "name": "icfVgBasicPortTable",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table containing information about ports."
  },
  "icfVgBasicPortEntry": {
    "name": "icfVgBasicPortEntry",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "icfVgPortGroupIndex",
        "implied": 0
      },
      {
        "module": "HP-ICF",
        "object": "icfVgPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the icfVgBasicPortTable, containing information about a single port."
  },
  "icfVgPortGroupIndex": {
    "name": "icfVgPortGroupIndex",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This object identifies the group containing the port for which this entry contains information."
  },
  "icfVgPortIndex": {
    "name": "icfVgPortIndex",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aPortID.",
    "status": "mandatory",
    "description": "This object identifies the port within the group for which this entry contains information. This value can never be greater than icfVgGroupPortCapacity for the associated group."
  },
  "icfVgPortType": {
    "name": "icfVgPortType",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "cascadeExternal": 1,
          "cascadeInternal": 2,
          "localExternal": 3,
          "localInternal": 4
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aPortType.",
    "status": "mandatory",
    "description": "Describes the type of port. One of the following: cascadeExternal - Port is an uplink with physical connections which are externally visible cascadeInternal - Port is an uplink with physical connections which are not externally visible, such as a connection to an internal backplane in a chassis localExternal - Port is a downlink or local port with externally visible connections localInternal - Port is a downlink or local port with connections which are not externally visible, such as a connection to an internal agent 'internal' is used to identify ports which place traffic into the repeater, but do not have any external connections. Note that both DTE and cascaded repeater downlinks are considered 'local' ports."
  },
  "icfVgPortAdminStatus": {
    "name": "icfVgPortAdminStatus",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aPortAdministrativeState.",
    "status": "mandatory",
    "description": "Port enable/disable function. Enabling a disabled port will cause training to be initiated. Setting this object to disabled(2) disables the port. A disabled port neither transmits nor receives. Once disabled, a port must be explicitly enabled to restore operation. A port which is disabled when power is lost or when a reset is exerted shall remain disabled when normal operation resumes."
  },
  "icfVgPortStatus": {
    "name": "icfVgPortStatus",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 1,
          "inactive": 2,
          "training": 3
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aPortStatus.",
    "status": "mandatory",
    "description": "Current status for the port as specified by the PORT_META_STATE in the port process module of clause 12 [IEEE Draft Std 802.12]. During initialization or any link warning conditions, icfVgPortStatus will be 'inactive(2)'. When Training_Up is received by the repeater on a local port (or when Training_Down is received on a cascade port), icfVgPortStatus will change to 'training(3)' and icfVgTrainingResult can be monitored to see the detailed status regarding training. When 24 consecutive good FCS packets are received and the configuration bits are OK, icfVgPortStatus will change to 'active(1)'. A disabled port shall have a port status of 'inactive(2)'."
  },
  "icfVgPortSupportedPromiscMode": {
    "name": "icfVgPortSupportedPromiscMode",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "singleModeOnly": 1,
          "singleOrPromiscMode": 2,
          "promiscModeOnly": 3
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aSupportedPromiscMode.",
    "status": "mandatory",
    "description": "This object describes whether the port hardware is capable of supporting promiscuous mode, single address mode (i.e., repeater filters unicasts not addressed to the end station attached to this port), or both. A port for which icfVgPortType is equal to 'cascadeInternal' or 'cascadeExternal' will always have a value of 'promiscModeOnly' for this object."
  },
  "icfVgPortSupportedCascadeMode": {
    "name": "icfVgPortSupportedCascadeMode",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "endNodesOnly": 1,
          "endNodesOrRepeaters": 2,
          "cascadePort": 3
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aSupportedCascadeMode.",
    "status": "mandatory",
    "description": "This object describes whether the port hardware is capable of supporting cascaded repeaters, end nodes, or both. A port for which icfVgPortType is equal to 'cascadeInternal' or 'cascadeExternal' will always have a value of 'cascadePort' for this object."
  },
  "icfVgPortAllowedTrainType": {
    "name": "icfVgPortAllowedTrainType",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "allowEndNodesOnly": 1,
          "allowPromiscuousEndNodes": 2,
          "allowEndNodesOrRepeaters": 3,
          "allowAnything": 4
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aAllowableTrainingType.",
    "status": "mandatory",
    "description": "This security object is set by the network manager to configure what type of device is permitted to connect to the port. One of the following values: allowEndNodesOnly - only non-promiscuous end nodes permitted. allowPromiscuousEndNodes - promiscuous or non- promiscuous end nodes permitted allowEndNodesOrRepeaters - repeaters or non- promiscuous end nodes permitted allowAnything - repeaters, promiscuous or non-promiscuous end nodes permitted For a port for which icfVgPortType is equal to 'cascadeInternal' or 'cascadeExternal', the corresponding instance of this object may not be set to 'allowEndNodesOnly' or 'allowPromiscuousEndNodes'. The agent must reject a SET of this object if the value includes no capabilities that are supported by this port's hardware, as defined by the values of the corresponding instances of icfVgPortSupportedPromiscMode and icfVgPortSupportedCascadeMode."
  },
  "icfVgPortLastTrainConfig": {
    "name": "icfVgPortLastTrainConfig",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 2,
            "max": 2
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aLastTrainingConfig.",
    "status": "mandatory",
    "description": "This 16 bit field contains the most recent training configuration in an error-free training frame sent by the end node connected to the port. For cascade ports, this is the responder's configuration field from the most recent error-free training response frame received in response to training initiated by this repeater. This object is formatted as follows: First Octet: Second Octet: 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ |v|v|v|0|0|0|0|0| |0|0|0|F|F|P|P|R| +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ vvv: The version of the 802.12 training protocol with which the training initiator is compliant FF: 00 = frameType88023 is requested 01 = frameType88025 is requested 10 = reserved 11 = either frameType88023 or frameType88025 is acceptable PP: 00 = request singleAddressMode 01 = request promiscuousMode 10 = reserved 11 = reserved R: 0 = request is from an end node 1 = request is from a repeater"
  },
  "icfVgPortTrainingResult": {
    "name": "icfVgPortTrainingResult",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 3,
            "max": 3
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aTrainingResult.",
    "status": "mandatory",
    "description": "This 18 bit field is used to indicate the result of training. It contains two bits which indicate if error-free training frames have been received, and it also contains the 16 bits of the most recent valid training response frame on the port. First Octet: Second Octet: Third Octet: 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ |0|0|0|0|0|0|V|G| |v|v|v|D|C|N|0|0| |0|0|0|F|F|P|P|R| +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ V: Valid: set when at least one error-free training frame has been received. Indicates the 16 training configuration bits in icfVgPortLastTrainConfig and icfVgPortTrainingResult contain valid information. This bit is cleared when icfVgPortStatus transitions to the 'inactive' or 'training' state. G: LinkGood: indicates the link hardware is OK. Set if 24 consecutive error-free training packets have been received. Cleared when a training packet with errors is received, and when icfVgPortStatus transitions to the 'inactive' or 'training' state. vvv: The version of the 802.12 training protocol with which the training responder is compliant D: 0 = no duplicate address has been detected 1 = duplicate address has been detected C: 0 = the requested configuration is compatible with the port 1 = the requested configuration is not compatible with the port. The FF, PP and R bits indicate the configuration which would be allowed (providing N = 0). N: 0 = access will be allowed, providing the configuration is compatible (C = 0). 1 = access not allowed because of security restrictions FF: 00 = frameType88023 will be used 01 = frameType88025 will be used 10 = reserved 11 = reserved PP: 00 = singleAddressMode will be used 01 = promiscuousMode will be used 10 = reserved 11 = reserved R: 0 = requested access as an end node is allowed 1 = requested access as a repeater is allowed If the port is in training, a management station can examine this object to see if any training packets have been passed successfully. If there have been any good training packets, the Valid bit will be set and the management station can examine the 16 training response bits to see if there is a duplicate address, configuration, or security problem. Note that on a repeater local port, this repeater generates the training response bits, while on the cascade port, the higher level repeater originated the training response bits."
  },
  "icfVgPortPriorityEnable": {
    "name": "icfVgPortPriorityEnable",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aPriorityEnable.",
    "status": "mandatory",
    "description": "A configuration flag used to determine whether the repeater will service high priority requests received on the port as high priority or normal priority. When 'false', high priority requests on this port will be serviced as normal priority. The value of this object should be preserved across repeater resets and power failures. The setting of this object has no effect on a cascade port."
  },
  "icfVgPortMediaType": {
    "name": "icfVgPortMediaType",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.1.3.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "pmdMissing": 3,
          "utp4": 4,
          "stp2": 5,
          "fibre": 6
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aMediaType.",
    "status": "mandatory",
    "description": "The type of physical media in use. One of the following values: other undefined unknown true state not known pmdMissing PMD device not attached utp4 4-pair unshielded twisted pair stp2 2-pair shielded twisted pair fibre 802.12 fibre optic cabling This object may be 'unknown' if the implementation is not capable of identifying the PMD media type, or whether or not the PMD is even present."
  },
  "icfVgMonitor": {
    "name": "icfVgMonitor",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2",
    "class": "objectidentity"
  },
  "icfVgMonRptr": {
    "name": "icfVgMonRptr",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.1",
    "class": "objectidentity"
  },
  "icfVgMonGroup": {
    "name": "icfVgMonGroup",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.2",
    "class": "objectidentity"
  },
  "icfVgMonPort": {
    "name": "icfVgMonPort",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.3",
    "class": "objectidentity"
  },
  "icfVgMonPortTable": {
    "name": "icfVgMonPortTable",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of performance and error statistics for the ports."
  },
  "icfVgMonPortEntry": {
    "name": "icfVgMonPortEntry",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "icfVgPortGroupIndex",
        "implied": 0
      },
      {
        "module": "HP-ICF",
        "object": "icfVgPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the icfVgMonPortTable, containing performance and error statistics for a single port."
  },
  "icfVgPortReadableFrames": {
    "name": "icfVgPortReadableFrames",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aReadableFramesReceived.",
    "status": "mandatory",
    "description": "This object is the number of good frames of valid frame length that have been received on this port. This counter is incremented by one for each frame received on the port which is not counted by icfVgPortIPMFrames or icfVgPortDataErrorFrames."
  },
  "icfVgPortReadableOctets": {
    "name": "icfVgPortReadableOctets",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aReadableOctetsReceived.",
    "status": "mandatory",
    "description": "This object is a count of the number of octets contained in good frames that have been received on this port. This counter is incremented by OctetCount for each frame received on this port which has been determined to be a readable frame (i.e. each frame counted by icfVgPortReadableFrames). Note that this counter may roll over very quickly."
  },
  "icfVgPortUnreadableOctets": {
    "name": "icfVgPortUnreadableOctets",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aOctetsInUnreadableFramesRcvd.",
    "status": "mandatory",
    "description": "This object is a count of the number of octets contained in invalid frames that have been received on this port. This counter is incremented by OctetCount for each frame received on this port which is counted by icfVgPortIPMFrames or icfVgPortDataErrorFrames. This counter can be combined with icfVgPortReadableOctets to calculate network utilization. Note that this counter may roll over very quickly."
  },
  "icfVgPortHighPriorityFrames": {
    "name": "icfVgPortHighPriorityFrames",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aHighPriorityFramesReceived.",
    "status": "mandatory",
    "description": "This object is a count of high priority frames that have been received on this port. This counter is incremented by one for each high priority frame received on this port, including readable, invalid, and training frames. This counter does not include normal priority frames which were priority promoted."
  },
  "icfVgPortHighPriorityOctets": {
    "name": "icfVgPortHighPriorityOctets",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aHighPriorityOctetsReceived.",
    "status": "mandatory",
    "description": "This object is a count of the number of octets contained in high priority frames that have been received on this port. This counter is incremented by OctetCount for each frame received on this port which is counted by icfVgPortHighPriorityFrames. Note that this counter may roll over very quickly."
  },
  "icfVgPortBroadcastFrames": {
    "name": "icfVgPortBroadcastFrames",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aBroadcastFramesReceived.",
    "status": "mandatory",
    "description": "This object is a count of broadcast packets that have been received on this port. This counter is incremented by one for each readable frame received on this port whose destination MAC address is the broadcast address. Frames counted by this counter are also counted by icfVgPortReadableFrames."
  },
  "icfVgPortMulticastFrames": {
    "name": "icfVgPortMulticastFrames",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aMulticastFramesReceived.",
    "status": "mandatory",
    "description": "This object is a count of multicast packets that have been received on this port. This counter is incremented by one for each readable frame received on this port whose destination MAC address has the group address bit set, but is not the broadcast address. Frames counted by this counter are also counted by icfVgPortReadableFrames, but not by icfVgPortBroadcastFrames"
  },
  "icfVgPortIPMFrames": {
    "name": "icfVgPortIPMFrames",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.3.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aIPMFramesReceived.",
    "status": "mandatory",
    "description": "This object is a count of the number of frames that have been received on this port with an invalid packet marker and no PMI errors. A repeater will write an invalid packet marker to the end of a frame containing errors as it is forwarded through the repeater to the other ports. This counter is incremented by one for each frame received on this port which has had an invalid packet marker added to the end of the frame. This counter indicates problems with remote cable segments, as opposed to problems with cables directly attached to this repeater."
  },
  "icfVgPortDataErrorFrames": {
    "name": "icfVgPortDataErrorFrames",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.3.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aDataErrorFramesReceived.",
    "status": "mandatory",
    "description": "This object is a count of errored frames received on this port. This counter is incremented by one for each frame received on this port with any of the following errors: FCS (with no IPM), PMI erorrs (excluding frames with an IPM error as the only PMI error), oversize (with no IPM), or undersize (with no IPM). Does not include packets counted by icfVgPortIPMFrames. This counter indicates problems with the cable directly attached to this repeater, while icfVgPorrtIPMFrames indicates problems with remote cables attached to other repeaters."
  },
  "icfVgPortPriorityPromotions": {
    "name": "icfVgPortPriorityPromotions",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.2.3.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aPriorityPromotions.",
    "status": "mandatory",
    "description": "This counter is incremented by one each time the priority promotion timer has expired on this port and a normal priority frame was priority promoted."
  },
  "icfVgAddrTrack": {
    "name": "icfVgAddrTrack",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.3",
    "class": "objectidentity"
  },
  "icfVgAddrTrackRptr": {
    "name": "icfVgAddrTrackRptr",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.3.1",
    "class": "objectidentity"
  },
  "icfVgAddrTrackGroup": {
    "name": "icfVgAddrTrackGroup",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.3.2",
    "class": "objectidentity"
  },
  "icfVgAddrTrackPort": {
    "name": "icfVgAddrTrackPort",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.3.3",
    "class": "objectidentity"
  },
  "icfVgAddrTrackTable": {
    "name": "icfVgAddrTrackTable",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.3.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Table of address mapping information about the ports."
  },
  "icfVgAddrTrackEntry": {
    "name": "icfVgAddrTrackEntry",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.3.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "icfVgPortGroupIndex",
        "implied": 0
      },
      {
        "module": "HP-ICF",
        "object": "icfVgPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the table, containing address mapping information about a single port."
  },
  "icfVgAddrLastTrainedAddress": {
    "name": "icfVgAddrLastTrainedAddress",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.3.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aLastTrainedAddress.",
    "status": "mandatory",
    "description": "This object is the MAC address of the last station which succeeded in training on this port. A cascaded repeater may train using the null address. If no stations have succeeded in training on this port since the agent began monitoring the port activity, the agent shall return a string of length zero."
  },
  "icfVgAddrTrainedAddrChanges": {
    "name": "icfVgAddrTrainedAddrChanges",
    "oid": "1.3.6.1.4.1.11.2.14.8.1.3.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aTrainedAddressChanges.",
    "status": "mandatory",
    "description": "This counter is incremented by one for each time that the icfVgAddrLastTrainedAddress object for this port has changed."
  },
  "hpicfObjects": {
    "name": "hpicfObjects",
    "oid": "1.3.6.1.4.1.11.2.14.11",
    "class": "objectidentity"
  },
  "hpicfCommon": {
    "name": "hpicfCommon",
    "oid": "1.3.6.1.4.1.11.2.14.11.1",
    "class": "objectidentity"
  },
  "hpicfChain": {
    "name": "hpicfChain",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1",
    "class": "objectidentity"
  },
  "hpicfChainMaxMembers": {
    "name": "hpicfChainMaxMembers",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The maximum number of devices that can be supported on the Distributed Management Chain from this agent."
  },
  "hpicfChainCurMembers": {
    "name": "hpicfChainCurMembers",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of devices currently on the Distributed Management Chain connected to this agent."
  },
  "hpicfChainLastChange": {
    "name": "hpicfChainLastChange",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of sysUpTime on this agent the last time a device was added to or removed from the Distributed Management Chain connected to this agent."
  },
  "hpicfChainChanges": {
    "name": "hpicfChainChanges",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A count of the number of times devices have been added to or removed from the Distributed Management Chain connected to this agent."
  },
  "hpicfChainTable": {
    "name": "hpicfChainTable",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of boxes currently connected to the same Distributed Management Chain as this agent."
  },
  "hpicfChainEntry": {
    "name": "hpicfChainEntry",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hpicfChainId",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the table describing a single box on the Distributed Management Chain connected to this device."
  },
  "hpicfChainId": {
    "name": "hpicfChainId",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An identifier which uniquely identifies this particular box. In practice, this will be a box serial number or MAC address."
  },
  "hpicfChainObjectId": {
    "name": "hpicfChainObjectId",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The authoritative identification of the box which provides an easy and unambiguous means for determining the type of box."
  },
  "hpicfChainTimestamp": {
    "name": "hpicfChainTimestamp",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of the agent's sysUpTime at which this box was last initialized. If the box has not been initialized since the last reinitialization of the agent, then this object has a zero value."
  },
  "hpicfChainHasAgent": {
    "name": "hpicfChainHasAgent",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object will contain the value 'true' if this box contains at least one network management agent capable of responding to SNMP requests, and will contain the value 'false' otherwise."
  },
  "hpicfChainThisBox": {
    "name": "hpicfChainThisBox",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object will contain the value 'true' if this entry in the chain table corresponds to the box which contains the agent which is responding to this SNMP request, and will contain the value 'false' otherwise."
  },
  "hpicfChainLocation": {
    "name": "hpicfChainLocation",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This byte is settable by a management station and is not interpreted by the agent. The intent is that a management station can use it to assign an ordering to boxes on the chain that can later be used when displaying the chain."
  },
  "hpicfChainViewTable": {
    "name": "hpicfChainViewTable",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table contains one entry for each box on the Distributed Management Chain for which this agent is able to act as a proxy."
  },
  "hpicfChainViewEntry": {
    "name": "hpicfChainViewEntry",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hpicfChainViewId",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the hpicfChainViewTable containing information about how to proxy to a single box."
  },
  "hpicfChainViewId": {
    "name": "hpicfChainViewId",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An identifier which uniquely identifies this particular box. In practice, this will be a box serial number or MAC address."
  },
  "hpicfChainViewName": {
    "name": "hpicfChainViewName",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.1.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The local name of this box. This is used by the proxy agent for the box to determine which box on the Distributed Management Chain is being addressed. If an agent does not use this method to distinguish proxy destinations, it should return a zero length octet string for this object. For SNMPv1, the destination box is specified by appending this name to the proxy agent's community name. For example, if this agent has a community with a community name of 'public', and the value of this object is 'repeater1', the community 'public/repeater1' will specify that the agent should proxy to the public community of the 'repeater1' box. The default value for this object for box-level repeaters is an ASCII hex representation of the low-order three bytes of the device MAC address."
  },
  "hpicfChassis": {
    "name": "hpicfChassis",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2",
    "class": "objectidentity"
  },
  "hpicfChassisId": {
    "name": "hpicfChassisId",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An identifier that uniquely identifies this particular chassis. This will be the same value as the instance of hpicfChainId for this chassis."
  },
  "hpicfChassisNumSlots": {
    "name": "hpicfChassisNumSlots",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of slots in this chassis."
  },
  "hpicfSlotTable": {
    "name": "hpicfSlotTable",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table that contains information on all the slots in this chassis."
  },
  "hpicfSlotEntry": {
    "name": "hpicfSlotEntry",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hpicfSlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Information about a slot in a chassis"
  },
  "hpicfSlotIndex": {
    "name": "hpicfSlotIndex",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot number within the box for which this entry contains information."
  },
  "hpicfSlotObjectId": {
    "name": "hpicfSlotObjectId",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The authoritative identification of the card plugged into this slot in this chassis. A value of { 0 0 } indicates an empty slot."
  },
  "hpicfSlotLastChange": {
    "name": "hpicfSlotLastChange",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of the agent's sysUpTime at which a card in this slot was last inserted or removed. If no module has been inserted or removed since the last reinitialization of the agent, this object has a zero value."
  },
  "hpicfSlotDescr": {
    "name": "hpicfSlotDescr",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A textual description of the card plugged into this slot in this chassis, including the product number and version information."
  },
  "hpicfEntityTable": {
    "name": "hpicfEntityTable",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table that contains information about the (logical) networking devices contained in this chassis."
  },
  "hpicfEntityEntry": {
    "name": "hpicfEntityEntry",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hpicfEntityIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Information about a single logical networking device contained in this chassis."
  },
  "hpicfEntityIndex": {
    "name": "hpicfEntityIndex",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An index that uniquely identifies the logical network device for which this entry contains information."
  },
  "hpicfEntityFunction": {
    "name": "hpicfEntityFunction",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 63
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The generic function provided by the logical network device. The value is a sum. Starting from zero, for each type of generic function that the entity performs, 2 raised to a power is added to the sum. The powers are according to the following table: Function Power other 0 repeater 1 bridge 2 router 3 agent 5 For example, an entity performing both bridging and routing functions would have a value of 12 (2^2 + 2^3)."
  },
  "hpicfEntityObjectId": {
    "name": "hpicfEntityObjectId",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The authoritative identification of the logical network device which provides an unambiguous means of determining the type of device. The value of this object is analagous to MIB-II's sysObjectId."
  },
  "hpicfEntityDescr": {
    "name": "hpicfEntityDescr",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A textual description of this device, including the product number and version information. The value of this object is analogous to MIB-II's sysDescr."
  },
  "hpicfEntityTimestamp": {
    "name": "hpicfEntityTimestamp",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of the agent's sysUpTime at which this logical network device was last reinitialized. If the entity has not been reinitialized since the last reinitialization of the agent, then this object has a zero value."
  },
  "hpicfSlotMapTable": {
    "name": "hpicfSlotMapTable",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table that contains information about which entities are in which slots in this chassis."
  },
  "hpicfSlotMapEntry": {
    "name": "hpicfSlotMapEntry",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hpicfSlotMapSlot",
        "implied": 0
      },
      {
        "module": "HP-ICF",
        "object": "hpicfSlotMapEntity",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A relationship between a slot and an entity in this chassis. Such a relationship exists if the particular slot is occupied by a physical module performing part of the function of the particular entity."
  },
  "hpicfSlotMapSlot": {
    "name": "hpicfSlotMapSlot",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A slot number within the chassis which contains (part of) this entity."
  },
  "hpicfSlotMapEntity": {
    "name": "hpicfSlotMapEntity",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The entity described in this mapping."
  },
  "hpicfSensorTable": {
    "name": "hpicfSensorTable",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table that contains information on all the sensors in this chassis"
  },
  "hpicfSensorEntry": {
    "name": "hpicfSensorEntry",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hpicfSensorIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Information about a sensor in a chassis"
  },
  "hpicfSensorIndex": {
    "name": "hpicfSensorIndex",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An index that uniquely identifies the sensor for which this entry contains information."
  },
  "hpicfSensorObjectId": {
    "name": "hpicfSensorObjectId",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The authoritative identification of the kind of sensor this is."
  },
  "hpicfSensorNumber": {
    "name": "hpicfSensorNumber",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A number which identifies a particular sensor from other sensors of the same kind. For instance, if there are many temperature sensors in this chassis, this number whould identify a particular temperature sensor in this chassis."
  },
  "hpicfSensorStatus": {
    "name": "hpicfSensorStatus",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "bad": 2,
          "warning": 3,
          "good": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Actual status indicated by the sensor."
  },
  "hpicfSensorWarnings": {
    "name": "hpicfSensorWarnings",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.6.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times hpicfSensorStatus has entered the 'warning'(3) state."
  },
  "hpicfSensorFailures": {
    "name": "hpicfSensorFailures",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.6.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times hpicfSensorStatus has entered the 'bad'(2) state."
  },
  "hpicfSensorDescr": {
    "name": "hpicfSensorDescr",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.6.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A textual description of the sensor."
  },
  "hpicfChassisAddrTable": {
    "name": "hpicfChassisAddrTable",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of network addresses for entities in this chassis. The primary use of this table is to map a specific entity address to a specific chassis. Note that this table may not be a complete list of network addresses for this entity."
  },
  "hpicfChassisAddrEntry": {
    "name": "hpicfChassisAddrEntry",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.7.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hpicfChasAddrType",
        "implied": 0
      },
      {
        "module": "HP-ICF",
        "object": "hpicfChasAddrAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry containing a single network address being used by a logical network device in this chassis."
  },
  "hpicfChasAddrType": {
    "name": "hpicfChasAddrType",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.7.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ipAddr": 1,
          "ipxAddr": 2,
          "macAddr": 3
        }
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The kind of network address represented in this entry."
  },
  "hpicfChasAddrAddress": {
    "name": "hpicfChasAddrAddress",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.7.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The network address being used by the logical network device associated with this entry, formatted according to the value of the associated instance of hpicfChasAddrType. For hpicfChasAddrType of ipAddr, this value is four octets long, with each octet representing one byte of the IP address, in network byte order. For hpicfChasAddrType of ipxAddr, this value is ten octets long, with the first four octets representing the IPX network number in network byte order, followed by the six byte host number in network byte order. For hpicfChasAddrType of macAddr, this value is six octets long, representing the MAC address in canonical order."
  },
  "hpicfChasAddrEntity": {
    "name": "hpicfChasAddrEntity",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.2.7.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An index that uniquely identifies the logical network device in this chassis that is using this network address.."
  },
  "hpicfDownload": {
    "name": "hpicfDownload",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3",
    "class": "objectidentity"
  },
  "hpicfDownloadTable": {
    "name": "hpicfDownloadTable",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of firmware downloads to this device. There will at any time be either 0 or 1 rows in this table, and the only valid index for this table is 1. It is only a table so that we may take advantage of the RowStatus textual convention for configuring the download parameters."
  },
  "hpicfDownloadEntry": {
    "name": "hpicfDownloadEntry",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hpicfDownloadIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The row in the hpicfDownloadTable containing the download parameters."
  },
  "hpicfDownloadIndex": {
    "name": "hpicfDownloadIndex",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dlInstance": 1
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index which uniquely identifies this row. The only legal value for this object is 1."
  },
  "hpicfDownloadOwnerAddress": {
    "name": "hpicfDownloadOwnerAddress",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The transport address of the management station that initiated this download attempt, formatted according to the value of the associated instance of hpicfDownloadOwnerDomain."
  },
  "hpicfDownloadOwnerDomain": {
    "name": "hpicfDownloadOwnerDomain",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The kind of transport service used by the management station that initiated this download attempt."
  },
  "hpicfDownloadTAddress": {
    "name": "hpicfDownloadTAddress",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The transport address of the node to download firmware from, formatted according to the value of the associated instance of hpicfDownloadTDomain. An attempt to modify this value will fail if the associated hpicfDownloadStatus object would be equal to 'active' both before and after the modification attempt."
  },
  "hpicfDownloadTDomain": {
    "name": "hpicfDownloadTDomain",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The kind of transport service to be used for the download. Currently supports snmpUDPDomain and snmpIPXDomain. An attempt to modify this value will fail if the associated hpicfDownloadStatus object would be equal to 'active' both before and after the modification attempt."
  },
  "hpicfDownloadFilename": {
    "name": "hpicfDownloadFilename",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 63
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Filename and path of file to download (maximum length of 63 characters + NULL). An attempt to modify this value will fail if the associated hpicfDownloadStatus object would be equal to 'active' both before and after the modification attempt."
  },
  "hpicfDownloadResetType": {
    "name": "hpicfDownloadResetType",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noReset": 1,
          "warmReset": 2,
          "factoryReset": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The type of reset to perform after completion of the firmware download. Note that not all agents will support all possible values, and there may be other agent-specific values for this object."
  },
  "hpicfDownloadErrorStatus": {
    "name": "hpicfDownloadErrorStatus",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fileNotFound": 1,
          "accessViolation": 2,
          "diskFull": 3,
          "illegalOperation": 4,
          "unknownTID": 5,
          "fileExists": 6,
          "noSuchUser": 7,
          "notDefined": 8,
          "corruptFile": 9,
          "noServer": 10,
          "tftpTimeout": 11,
          "hardwareError": 12,
          "success": 13,
          "aborted": 14,
          "inProgress": 15,
          "idle": 16,
          "erasingEeprom": 17,
          "incompleteFirmware": 18,
          "requirePowerCycle": 19,
          "cannotUpgrade": 20,
          "cannotDowngrade": 21
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of download. The first seven codes are equal to the codes defined by the TFTP protocol. 'notDefined' is the same as TFTP protocol error 0. The following are the other possible values for this object: corruptFile - the agent detected a problem with the download file format. noServer - the TFTP server at hpicfDownloadTAddress did not respond to the TFTP request. tftpTimeout - the download was aborted due to excessive timeouts. hardwareError - there was a hardware problem on the agent that forced an abort of the download (see hpicfDownloadErrorText for more detailed information). success - the download has completed successfully. aborted - the download was aborted by setting the hpicfDownloadStatus to 'notInService' or 'delete'. inProgress - the TFTP transfer is currently active. idle - means that the download has not yet started (i.e. the value of hpicfDownloadStatus has not yet been set to 'active'). erasingEeprom - the agent is currently erasing the EEPROM device. Currently only used on JetDirect agents. incompleteFirmware - the agent is running an incomplete version of firmware and requires a download. Currently only used on JetDirect agents. requirePowerCycle - the agent must be power cycled to run the newly downloaded firmware. Currently only used on JetDirect agents. cannotUpgrade - the agent's current firmware revision cannot be upgraded to the revision in the download file. cannotDowngrade - the agent's current firmware revision cannot be downgraded to the revision in the download file."
  },
  "hpicfDownloadErrorText": {
    "name": "hpicfDownloadErrorText",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A textual description of the current error status of the firmware download."
  },
  "hpicfDownloadStatus": {
    "name": "hpicfDownloadStatus",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of this download entry. This object may not be set to 'active' unless the following columnar objects exist in this row: hpicfDownloadTAddress, hpicfDownloadTDomain, hpicfDownloadFilename, and hpicfDownloadResetType."
  },
  "hpicfDownloadLogMaxSize": {
    "name": "hpicfDownloadLogMaxSize",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The maximum number of the download log entries supported by this agent. Note that 0 is a legal value for this variable."
  },
  "hpicfDownloadLogSize": {
    "name": "hpicfDownloadLogSize",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of download log entries currently in the hpicfDownloadLogTable."
  },
  "hpicfDownloadLogTable": {
    "name": "hpicfDownloadLogTable",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A log of the hpicfDownloadSize most recent download attempts to this device. The first entry in the table is the oldest."
  },
  "hpicfDownloadLogEntry": {
    "name": "hpicfDownloadLogEntry",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hpicfDlLogIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the hpicfDownloadLogTable containing information about a single download attempt."
  },
  "hpicfDlLogIndex": {
    "name": "hpicfDlLogIndex",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of this entry in the download log table. Index 1 will always contain the oldest entry. If the table is full when a download attempt is made, the new entry becomes the last entry (hpicfDownloadLogMaxSize), and all earlier entries are shifted down by one entry, removing the old index 1."
  },
  "hpicfDlLogOwnerAddress": {
    "name": "hpicfDlLogOwnerAddress",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The transport address of the management station that attempted to initiate a download of this device, formatted according to the value of hpicfDlLastOwnerDomain."
  },
  "hpicfDlLogOwnerDomain": {
    "name": "hpicfDlLogOwnerDomain",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The kind of transport service used by the management station that attempted to initiate a download of this device."
  },
  "hpicfDlLogTAddress": {
    "name": "hpicfDlLogTAddress",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The transport address of the node from which this device attempted to download firmware, formatted according to the value of hpicfDlLastTDomain."
  },
  "hpicfDlLogTDomain": {
    "name": "hpicfDlLogTDomain",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The kind of transport service which was used for the attempt to download firmware to this device."
  },
  "hpicfDlLogFilename": {
    "name": "hpicfDlLogFilename",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 63
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The filename from which this device attempted to download firmware."
  },
  "hpicfDlLogResetType": {
    "name": "hpicfDlLogResetType",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noReset": 1,
          "warmReset": 2,
          "factoryReset": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The type of reset requested to be performed after completion of the firmware download attempt."
  },
  "hpicfDlLogErrorStatus": {
    "name": "hpicfDlLogErrorStatus",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fileNotFound": 1,
          "accessViolation": 2,
          "diskFull": 3,
          "illegalOperation": 4,
          "unknownTID": 5,
          "fileExists": 6,
          "noSuchUser": 7,
          "notDefined": 8,
          "corruptFile": 9,
          "noServer": 10,
          "tftpTimeout": 11,
          "hardwareError": 12,
          "success": 13,
          "aborted": 14
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The result of the attempt to download firmware to this device. The values are the same as the corresponding values of hpicfDownloadErrorStatus."
  },
  "hpicfDlLogErrorText": {
    "name": "hpicfDlLogErrorText",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.3.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A textual description of the final error status of the attempt to download firmware to this device."
  },
  "hpicfBasic": {
    "name": "hpicfBasic",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.4",
    "class": "objectidentity"
  },
  "hpicfReset": {
    "name": "hpicfReset",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noReset": 1,
          "normalReset": 2,
          "factoryReset": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When this object is set to to 'normalReset' it results in a 'warm' reset, which does not clear the parameters in NOVRAM to factory defaults. When set to 'factoryReset', it results in NOVRAM being set to factory defaults. When this object is set, the agent replies, dallies a short time to allow the reply to be emitted from the device, then performs the reset. When read, this object always returns 'noReset'."
  },
  "hpicfSelfTest": {
    "name": "hpicfSelfTest",
    "oid": "1.3.6.1.4.1.11.2.14.11.1.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "stSuccess": 1,
          "stExecute": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Self test is invoked by setting this flag to 'stExecute'. When the object changes to 'stSuccess', the test has completed successfully. Icf devices will 'hard-fail' if the test does not succeed."
  },
  "hpicfRepeater": {
    "name": "hpicfRepeater",
    "oid": "1.3.6.1.4.1.11.2.14.11.2",
    "class": "objectidentity"
  },
  "hpRptrBasic": {
    "name": "hpRptrBasic",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1",
    "class": "objectidentity"
  },
  "hpRptrBasicGlobal": {
    "name": "hpRptrBasicGlobal",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.1",
    "class": "objectidentity"
  },
  "hpRptrEntityName": {
    "name": "hpRptrEntityName",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The local name of this repeater. This is the same value as hpicfEntityName in the case where there is Distributed Management Protocol to access this device. For SNMPv1, this name is appended to the agent community name to obtain a community name to use to specify that the agent should proxy to this repeater. For example, if this agent has a community with a community name of 'public', and the value of this object is 'repeater1', the community 'public/repeater1' will specify that the agent should proxy to the public community of the repeater1 box to obtain management information about this repeater. If an agent receives a management request where the localEntity is not specified, it will default to the local repeater on which this agent is executing."
  },
  "hpRptrThinlanFault": {
    "name": "hpRptrThinlanFault",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When set to 'true' this object causes the Fault Led to blink if the ThinLan Port is segmented."
  },
  "hpRptrSqeEnabled": {
    "name": "hpRptrSqeEnabled",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When 'true', this flag indicates that SQE has been detected for the last ten agent transmits and there is a high probability that the SQE switch on the transceiver attached to the AUI port is set to Enabled, when it should be Disabled."
  },
  "hpRptrRobustHealing": {
    "name": "hpRptrRobustHealing",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When this flag is set to 'true', it enables robust port healing mode. The 802.3 specification states that a segmented port is healed by successfully transmitting or receiving a packet on the port. This mode disables port healing on successful packet reception and requires that a packet be successfully transmitted on a port in order for a segmented port to be healed. Note that it is illegal to set this variable to 'true' on a repeater that does not have a local network management agent."
  },
  "hpRptrBasicGroup": {
    "name": "hpRptrBasicGroup",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.2",
    "class": "objectidentity"
  },
  "hpRptrBasicGroupTable": {
    "name": "hpRptrBasicGroupTable",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "HP specific extensions to the rptrGroupTable."
  },
  "hpRptrBasicGroupEntry": {
    "name": "hpRptrBasicGroupEntry",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hpRptrGrpGroupIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the table, containing HP extensions for a specific group."
  },
  "hpRptrGrpGroupIndex": {
    "name": "hpRptrGrpGroupIndex",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The group within the repeater for which this entry contains information. This object has the same value as the corresponding instance of rptrGroupIndex."
  },
  "hpRptrGrpPortsAdminStatus": {
    "name": "hpRptrGrpPortsAdminStatus",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hpRptrGrpPortsAdminStatus is a bit map of the state of the rptrPortAdminStatus object for all of the ports in this group. The object has a one bit for each port for which the value of rptrPortAdminStatus is equal to 'enabled(1)' and a zero bit for each port for which the value of rptrPortAdminStatus is equal to 'disabled(2)'. The bits are placed into the OCTET STRING in the following order: octet 0 octet 1 octet 2 ... bits 7-0 bits 7-0 bits 7-0 ... ports 1-8 ports 9-16 ports 17-24 ... Values of unused bits in the last octet are undefined."
  },
  "hpRptrGrpPortsSegStatus": {
    "name": "hpRptrGrpPortsSegStatus",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hpRptrGrpPortsSegStatus is a bit map of the state of the rptrPortAutoPartitionState of all of the ports in this group. The object has a one bit for each port for which the value of rptrPortAutoPartitionState is equal to 'notAutoPartitioned(1)' and a zero bit for each port for which the value of rptrPortAutoPartitionState is equal to 'autoPartitioned(2)'. The bits are placed into the OCTET STRING in the following order: octet 0 octet 1 octet 2 ... bits 7-0 bits 7-0 bits 7-0 ... ports 1-8 ports 9-16 ports 17-24 ... Values of unused bits in the last octet are undefined."
  },
  "hpRptrGrpPortsMediaAvailable": {
    "name": "hpRptrGrpPortsMediaAvailable",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hpRptrGrpPortsMediaAvailable is a bit map of the state of the rpMauMediaAvailable object for all of the ports in this group. The object has a one bit for each port for which the value of rpMauMediaAvailable is equal to 'available(3)' and a zero bit for each port for which the value of rpMauMediaAvailable is not equal to 'available(3)'. The bits are placed into the OCTET STRING in the following order: octet 0 octet 1 octet 2 ... bits 7-0 bits 7-0 bits 7-0 ... ports 1-8 ports 9-16 ports 17-24 ... Values of unused bits in the last octet are undefined."
  },
  "hpRptrGrpPortsLinkbeatEnabled": {
    "name": "hpRptrGrpPortsLinkbeatEnabled",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hpRptrGrpPortsLinkbeatEnabled is a bit map of the state of the hpRptrPtLinkbeatEnable object for all of the ports in this group. The object has a one bit for each port for which the value of hpRptrPtLinkbeatEnable is equal to 'true(1)' and a zero bit for each port for which the value of hpRptrPtLinkbeatEnable is equal to 'false(2)'. The bits are placed into the OCTET STRING in the following order: octet 0 octet 1 octet 2 ... bits 7-0 bits 7-0 bits 7-0 ... ports 1-8 ports 9-16 ports 17-24 ... Values of unused bits in the last octet are undefined."
  },
  "hpRptrGrpPortsOperStatus": {
    "name": "hpRptrGrpPortsOperStatus",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hpRptrGrpPortsOperStatus is a bit map of the state of all hub ports in the group. The object has a 1 bit for each port that is enabled, not segmented, and the media is available. Ports on which these conditions are not true have a 0 bit. The bits are placed into the OCTET STRING in the following order: octet 0 octet 1 octet 2 ... bits 7-0 bits 7-0 bits 7-0 ... ports 1-8 ports 9-16 ports 17-24 ... Values of unused bits in the last octet are undefined."
  },
  "hpRptrBasicPort": {
    "name": "hpRptrBasicPort",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.3",
    "class": "objectidentity"
  },
  "hpRptrBasicPtTable": {
    "name": "hpRptrBasicPtTable",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "HP specific extensions to the rptrPortTable."
  },
  "hpRptrBasicPtEntry": {
    "name": "hpRptrBasicPtEntry",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hpRptrPtGroupIndex",
        "implied": 0
      },
      {
        "module": "HP-ICF",
        "object": "hpRptrPtPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the table, containing HP extensions for a specific port."
  },
  "hpRptrPtGroupIndex": {
    "name": "hpRptrPtGroupIndex",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The group containing the port for which this entry contains information. This object has the same value as the corresponding instance of rptrPortGroupIndex."
  },
  "hpRptrPtPortIndex": {
    "name": "hpRptrPtPortIndex",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The port within the group for which this entry contains information. This object has the same value as the corresponding instance of rptrPortIndex."
  },
  "hpRptrPtLinkbeatEnable": {
    "name": "hpRptrPtLinkbeatEnable",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When this flag is set to 'true' the port's link beat is enabled and when set to 'false' it is disabled."
  },
  "hpRptrPtPolarityReversed": {
    "name": "hpRptrPtPolarityReversed",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.1.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object is used to indicate that the hub port was wired with the positive/negative polarity of its transmit and receive pairs reversed. Note that the port will continue to operate in this state, with the hub inverting the polarity internally."
  },
  "hpRptrMonitor": {
    "name": "hpRptrMonitor",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2",
    "class": "objectidentity"
  },
  "hpRptrMonitorGlobal": {
    "name": "hpRptrMonitorGlobal",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1",
    "class": "objectidentity"
  },
  "hpRptrMonCounters": {
    "name": "hpRptrMonCounters",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1",
    "class": "objectidentity"
  },
  "hpRptrMonGlobalFrames": {
    "name": "hpRptrMonGlobalFrames",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference RFC 1516 rptrMonitorPortReadableFrames and rptrMonitorGroupTotalFrames, and IEEE 802.3 Rptr Mgt, 19.2.6.2, aReadableFrames.",
    "status": "mandatory",
    "description": "The total number of frames of valid frame length that have been received on all ports in this repeater. This counter is the summation of the values of the rptrMonitorPortReadableFrames counter for all of the ports in this repeater. Equivalently, this counter is the summation of the values of the rptrMonitorGroupTotalFrames counter for all of the port groups in this repeater."
  },
  "hpRptrMonGlobalOctets": {
    "name": "hpRptrMonGlobalOctets",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference RFC 1516 rptrMonitorPortReadableOctets and rptrMonitorGroupTotalOctets, and IEEE 802.3 Rptr Mgt, 19.2.6.2, aReadableOctets.",
    "status": "mandatory",
    "description": "The total number of octets contained in the valid frames that have been received on the ports in this repeater. This counter is the summation of the values of the rptrMonitorPortReadableOctets counter for all of the ports in this repeater. Equivalently, this counter is the summation of the values of the rptrMonitorGroupTotalOctets counter for all of the port groups in this repeater."
  },
  "hpRptrMonGlobalFCSErrors": {
    "name": "hpRptrMonGlobalFCSErrors",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference RFC 1516 rptrMonitorPortFCSErrors and IEEE 802.3 Rptr Mgt, 19.2.6.2, aFrameCheckSequenceErrors.",
    "status": "mandatory",
    "description": "This counter is incremented by one for each frame received on any port with the FCSError signal asserted and the FramingError and CollisionEvent signals deasserted and whose OctetCount is greater than or equal to minFrameSize and less than or equal to maxFrameSize (Ref: 4.4.2.1, IEEE 802.3 Std). This counter is the summation of the values of the rptrMonitorPortFCSErrors counter for all of the ports in this repeater."
  },
  "hpRptrMonGlobalAlignmentErrors": {
    "name": "hpRptrMonGlobalAlignmentErrors",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference RFC 1516 rptrMonitorPortAlignmentErrors and IEEE 802.3 Rptr Mgt, 19.2.6.2, aAlignmentErrors.",
    "status": "mandatory",
    "description": "This counter is incremented by one for each frame received on any port with the FCSError and FramingError signals asserted and CollisonEvent signal deasserted and whose OctetCount is greater than or equal to minFrameSize and less than or equal to maxFrameSize (Ref: 4.4.2.1, IEEE 802.3 Std). If hpRptrMonGlobalAlignmentErrors is incremented, then the hpRptrMonGlobalFCSErorrs counter shall not be incremented for the same frame. This counter is the summation of the values of the rptrMonitorPortAlignmentErrors counter for all of the ports in this repeater."
  },
  "hpRptrMonGlobalFrameTooLongs": {
    "name": "hpRptrMonGlobalFrameTooLongs",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference RFC 1516 rptrMonitorPortFrameTooLongs and IEEE 802.3 Rptr Mgt, 19.2.6.2, aFramesTooLong",
    "status": "mandatory",
    "description": "This counter is incremented by one for each frame received on any port whose OctetCount is greater than maxFrameSize (Ref: 4.4.2.1, IEEE 802.3 Std). If hpRptrMonGlobalFrameTooLongs is incremented, then neither the hpRptrMonGlobalAlignmentErorrs nor the hpRptrMonGlobalFCSErrors counter shall be incremented for the frame. This counter is the summation of the values of the rptrMonitorPortFrameTooLongs counter for all of the ports in this repeater."
  },
  "hpRptrMonGlobalShortEvents": {
    "name": "hpRptrMonGlobalShortEvents",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference RFC 1516 rptrMonitorPortShortEvents and IEEE 802.3 Rptr Mgt, 19.2.6.2, aShortEvents.",
    "status": "mandatory",
    "description": "This counter is incremented by one for each CarrierEvent on any port with ActivityDuration less than ShortEventMaxTime. ShortEventMaxTime is greater than 74 bit times and less than 82 bit times. ShortEventMaxTime has tolerances included to provide for circuit losses between a conformance test point at the AUI and the measurement point within the state machine. This counter is the summation of the values of the rptrMonitorPortShortEvents counter for all of the ports in this repeater."
  },
  "hpRptrMonGlobalRunts": {
    "name": "hpRptrMonGlobalRunts",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference RFC 1516 rptrMonitorPortRunts and IEEE 802.3 Rptr Mgt, 19.2.6.2, aRunts.",
    "status": "mandatory",
    "description": "This counter is incremented by one for each CarrierEvent on any port that meets one of the following two conditions. Only one test need be made. a) The ActivityDuration is greater than ShortEventMaxTime and less than ValidPacketMinTime and the CollisionEvent signal is deasserted. b) The OctetCount is less than 64, the ActivityDuration is greater than ShortEventMaxTime and the CollisionEvent signal is deasserted. ValidPacketMinTime is greater than or equal to 552 bit times but less than 565 bit times. An event whose length is greater than 74 bit times but less than 82 bit times shall increment either the hpRptrMonGlobalShortEvents counter or the hpRptrMonGlobalRunts counter but not both. A CarrierEvent greater than or equal to 552 bit times but less than 565 bit times may or may not increment the hpRptrMonGlobalRunts counter. ValidPacketMinTime has tolerances included to provide for circuit losses between a conformance test point at the AUI and the measurement point within the state machine. Runts usually indicate collision fragments, a normal network event. This counter is the summation of the values of the rptrMonitorPortRunts counter for all of the ports in this repeater."
  },
  "hpRptrMonGlobalCollisions": {
    "name": "hpRptrMonGlobalCollisions",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference RFC 1516 rptrMonitorPortCollisions and IEEE 802.3 Rptr Mgt, 19.2.6.2, aCollisions.",
    "status": "mandatory",
    "description": "This counter is incremented by one for any CarrierEvent signal on any port for which the CollisionEvent signal on any port is asserted. This counter differs from rptrMonitorTransmitCollisions in that it counts all collisions seen by this repeater, even those involving only a single port on this repeater, whereas rptrMonitorTransmitCollisions counts only collisions involving multiple ports on this repeater."
  },
  "hpRptrMonGlobalLateEvents": {
    "name": "hpRptrMonGlobalLateEvents",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference RFC 1516 rptrMonitorPortLateEvents and IEEE 802.3 Rptr Mgt, 19.2.6.2, aLateEvents.",
    "status": "mandatory",
    "description": "This counter is incremented by one for each CarrierEvent on any port in which the CollIn(X) variable transitions to the value SQE (Ref: 9.6.6.2, IEEE 802.3 Std) while the ActivityDuration is greater than the LateEventThreshold. Such a CarrierEvent is counted twice, as both hpRptrMonGlobalCollisions and hpRptrMonGlobalLateEvents. The LateEventThreshold is greater than 480 bit times and less than 565 bit times. LateEventThreshold has tolerances included to permit an implementation to build a single threshold to serve as both the LateEventThreshold and ValidPacketMinTime threshold. This counter is the summation of the values of the rptrMonitorPortLateEvents counter for all of the ports in this repeater."
  },
  "hpRptrMonGlobalVeryLongEvents": {
    "name": "hpRptrMonGlobalVeryLongEvents",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference RFC 1516 rptrMonitorPortVeryLongEvents and IEEE 802.3 Rptr Mgt, 19.2.6.2, aVeryLongEvents.",
    "status": "mandatory",
    "description": "This counter is incremented by one for each CarrierEvent on any port whose ActivityDuration is greater than the MAU Jabber Lockup Protection timer TW3 (Ref: 9.6.1 & 9.6.5, IEEE 802.3 Std). Other counters may be incremented as appropriate. This counter is the summation of the values of the rptrMonitorPortVeryLongEvents counter for all of the ports in this repeater."
  },
  "hpRptrMonGlobalDataRateMismatches": {
    "name": "hpRptrMonGlobalDataRateMismatches",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference RFC 1516 rptrMonitorPortDataRateMismatches and IEEE 802.3 Rptr Mgt, 19.2.6.2, aDataRateMismatches.",
    "status": "mandatory",
    "description": "This counter is incremented by one for each frame received on any port that meets all of the following conditions: a) The CollisionEvent signal is not asserted. b) The ActivityDuration is greater than ValidPacketMinTime. c) The frequency (data rate) is detectably mismatched from the local transmit frequency. The exact degree of mismatch is vendor specific and is to be defined by the vendor for conformance testing. When this event occurs, other counters whose increment conditions were satisfied may or may not also be incremented. This counter is the summation of the values of the rptrMonitorPortDatRateMismatches counter for all of the ports in this repeater."
  },
  "hpRptrMonGlobalAutoPartitions": {
    "name": "hpRptrMonGlobalAutoPartitions",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference RFC 1516 rptrMonitorPortAutoPartitions and IEEE 802.3 Rptr Mgt, 19.2.6.2, aAutoPartitions.",
    "status": "mandatory",
    "description": "This counter is incremented by one for each time the repeater has automatically partitioned any port. The conditions that cause port partitioning are specified in the partition state machine in Section 9 of the IEEE 802.3 Std. This counter is the summation of the values of the rptrMonitorPortAutoPartitions for all of the ports in this repeater."
  },
  "hpRptrMonGlobalErrors": {
    "name": "hpRptrMonGlobalErrors",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "RFC 1516, rptrMonitorGroupTotalErrors and hpRptrMonitorPortTotalErrors.",
    "status": "mandatory",
    "description": "The total number of errors which have occured on any port in this repeater. This counter is the summation of the values of other error counters, namely: hpRptrMonGlobalFCSErrors, hpRptrMonGlobalAlignmentErrors, hpRptrMonGlobalFrameTooLongs, hpRptrMonGlobalShortEvents, hpRptrMonGlobalLateEvents, hpRptrMonGlobalVeryLongEvents, and hpRptrMonGlobalDataRateMismatches. Equivalently, this counter is the summation of the values of the rptrMonitorPortTotalErrors counter for all of the ports in this repeater, or it is the summation of the values of rptrMonitorGroupTotalErrors for all of the port groups in this repeater."
  },
  "hpRptrMonGlobalUcastPackets": {
    "name": "hpRptrMonGlobalUcastPackets",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This counter is incremented by one for each unicast packet of valid frame length received on any port. This counter is the summation of hpRptrMonPortUcastPackets for all of the ports in this repeater. This counter may not be implemented for repeaters which do not have a local network management agent."
  },
  "hpRptrMonGlobalBcastPackets": {
    "name": "hpRptrMonGlobalBcastPackets",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This counter is incremented by one for each broadcast packet of valid frame length received on any port. This counter is the summation of hpRptrMonPortBcastPackets for all of the ports in this repeater. This counter may not be implemented for repeaters which do not have a local network management agent."
  },
  "hpRptrMonGlobalMcastPackets": {
    "name": "hpRptrMonGlobalMcastPackets",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.1.1.16",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This counter is incremented by one for each multicast packet of valid frame length received on any port. This counter is the summation of hpRptrMonPortMcastPackets for all of the ports in this repeater. This counter may not be implemented for repeaters which do not have a local network management agent."
  },
  "hpRptrMonitorGroup": {
    "name": "hpRptrMonitorGroup",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.2",
    "class": "objectidentity"
  },
  "hpRptrMonitorPort": {
    "name": "hpRptrMonitorPort",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.3",
    "class": "objectidentity"
  },
  "hpRptrMonPtTable": {
    "name": "hpRptrMonPtTable",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Table of HP specific per port monitor objects."
  },
  "hpRptrMonPtEntry": {
    "name": "hpRptrMonPtEntry",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hpRptrMonPtGroupIndex",
        "implied": 0
      },
      {
        "module": "HP-ICF",
        "object": "hpRptrMonPtPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the table, containing per port objects for a single port."
  },
  "hpRptrMonPtGroupIndex": {
    "name": "hpRptrMonPtGroupIndex",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The group containing the port for which this entry contains information. This object has the same value as the corresponding instance of rptrMonitorPortGroupIndex."
  },
  "hpRptrMonPtPortIndex": {
    "name": "hpRptrMonPtPortIndex",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The port within the group for which this entry contains information. This object has the same value as the corresponding instance of rptrMonitorPortIndex."
  },
  "hpRptrMonPtUcastPackets": {
    "name": "hpRptrMonPtUcastPackets",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This counter is incremented by one for each unicast packet of valid frame length received on this port. This object may not be implemented for repeaters which do not have a local network management agent."
  },
  "hpRptrMonPtBcastPackets": {
    "name": "hpRptrMonPtBcastPackets",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This counter is incremented by one for each broadcast packet of valid frame length received on this port. This object may not be implemented for repeaters which do not have a local network management agent."
  },
  "hpRptrMonPtMcastPackets": {
    "name": "hpRptrMonPtMcastPackets",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.2.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This counter is incremented by one for each multicast packet of valid frame length received on this port. This object may not be implemented for repeaters which do not have a local network management agent."
  },
  "hpRptrAddrTrack": {
    "name": "hpRptrAddrTrack",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.3",
    "class": "objectidentity"
  },
  "hpRptrAddrTrkGlobal": {
    "name": "hpRptrAddrTrkGlobal",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.3.1",
    "class": "objectidentity"
  },
  "hpRptrAddrTrkGroup": {
    "name": "hpRptrAddrTrkGroup",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.3.2",
    "class": "objectidentity"
  },
  "hpRptrAddrTrkPort": {
    "name": "hpRptrAddrTrkPort",
    "oid": "1.3.6.1.4.1.11.2.14.11.2.3.3",
    "class": "objectidentity"
  },
  "hpicfVg": {
    "name": "hpicfVg",
    "oid": "1.3.6.1.4.1.11.2.14.11.3",
    "class": "objectidentity"
  },
  "hpVgBasic": {
    "name": "hpVgBasic",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1",
    "class": "objectidentity"
  },
  "hpVgBasicGlobal": {
    "name": "hpVgBasicGlobal",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.1",
    "class": "objectidentity"
  },
  "hpVgEntityName": {
    "name": "hpVgEntityName",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The local name of this 100BaseVG repeater. This is the same value as hpicfEntityName in the case where there is Distributed Management Protocol to access this device. For SNMPv1, this name is appended to the agent community name to obtain a community name to use to specify that the agent should proxy to this repeater. For example, if this agent has a community with a community name of 'public', and the value of this object is 'repeater1', the community 'public/repeater1' will specify that the agent should proxy to the public community of the repeater1 box to obtain management information about this repeater. If an agent receives a management request where the localEntity is not specified, it will default to the local repeater on which this agent is executing."
  },
  "hpVgBasicGroup": {
    "name": "hpVgBasicGroup",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.2",
    "class": "objectidentity"
  },
  "hpVgBasicGroupTable": {
    "name": "hpVgBasicGroupTable",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "HP specific extensions to the vgBasicGroupTable."
  },
  "hpVgBasicGroupEntry": {
    "name": "hpVgBasicGroupEntry",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hpVgGrpGroupIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the table, containing HP extensions for a specific group."
  },
  "hpVgGrpGroupIndex": {
    "name": "hpVgGrpGroupIndex",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The group within the repeater for which this entry contains information. This object has the same value as the corresponding instance of icfVgGroupIndex."
  },
  "hpVgGrpPortsAdminStatus": {
    "name": "hpVgGrpPortsAdminStatus",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hpVgGrpPortsAdminStatus is a bit map of the state of the icfVgPortAdminStatus object for all of the ports in this group. The object has a one bit for each port for which the value of icfVgPortAdminStatus is equal to 'enabled(1)' and a zero bit for each port for which the value of icfVgPortAdminStatus is equal to 'disabled(2)'. The bits are placed into the OCTET STRING in the following order: octet 0 octet 1 octet 2 ... bits 7-0 bits 7-0 bits 7-0 ... ports 1-8 ports 9-16 ports 17-24 ... Values of unused bits in the last octet are undefined."
  },
  "hpVgGrpPortsTrained": {
    "name": "hpVgGrpPortsTrained",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hpVgGrpPortsTrained is a bit map which indicates which ports in this group are currently online. The object has a one bit for each port for which meets the following conditions: 1. The value of the corresponding instance of the ifVgPortAdminStatus object is equal to 'enabled(1)'. 2. The value of the corresponding instance of the icfVgPortStatus object is equal to 'active(1)'. The object has a zero bit for each port which does not meet the above conditions. The bits are placed into the OCTET STRING in the following order: octet 0 octet 1 octet 2 ... bits 7-0 bits 7-0 bits 7-0 ... ports 1-8 ports 9-16 ports 17-24 ... Values of unused bits in the last octet are undefined."
  },
  "hpVgGrpPortsInTraining": {
    "name": "hpVgGrpPortsInTraining",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hpVgGrpPortsInTraining is a bit map which indicates which ports in this group are currently in the training state. The object has a one bit for each port which meets the following conditions: 1. The value of the corresponding instance of the ifVgPortAdminStatus object is equal to 'enabled(1)'. 2. The value of the corresponding instance of the icfVgPortStatus object is equal to 'training(3)'. The object has a zero bit for each port which does not meet the above conditions. The bits are placed into the OCTET STRING in the following order: octet 0 octet 1 octet 2 ... bits 7-0 bits 7-0 bits 7-0 ... ports 1-8 ports 9-16 ports 17-24 ... Values of unused bits in the last octet are undefined."
  },
  "hpVgGrpPortsCascaded": {
    "name": "hpVgGrpPortsCascaded",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hpVgGrpPortsCascaded is a bit map which indicates which ports in this group have trained as cascaded repeater ports. The object has a one bit for each port which meets the following conditions: 1. The value of the corresponding instance of the ifVgPortAdminStatus object is equal to 'enabled(1)'. 2. The value of the corresponding instance of the icfVgPortStatus object is equal to 'active(1)'. 3. The value of the corresponding instance of the icfVgPortType object is equal to either 'normalInternal(3)' or 'normalExternal(4)'. 4. The value of the 'R' bit in the corresponding instance of the icfVgPortTrainingResult object is equal to one. The object has a zero bit for each port which does not meet the above conditions. The bits are placed into the OCTET STRING in the following order: octet 0 octet 1 octet 2 ... bits 7-0 bits 7-0 bits 7-0 ... ports 1-8 ports 9-16 ports 17-24 ... Values of unused bits in the last octet are undefined."
  },
  "hpVgGrpPortsPromiscuous": {
    "name": "hpVgGrpPortsPromiscuous",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hpVgGrpPortsPromiscuous is a bit map which indicates which ports in this group have trained for promiscuous operation. The object has a one bit for each port which meets the following conditions: 1. The value of the corresponding instance of the ifVgPortAdminStatus object is equal to 'enabled(1)'. 2. The value of the corresponding instance of the icfVgPortStatus object is equal to 'active(1)'. 3. The value of the corresponding instance of the icfVgPortType object is equal to either 'normalInternal(3)' or 'normalExternal(4)'. 4. The value of the 'R' bit in the corresponding instance of the icfVgPortTrainingResult object is equal to zero. 5. The value of the 'PP' field in the corresponding instance of the icfVgPortTrainingResult object is equal to 01. The object has a zero bit for each port which does not meet the above conditions. The bits are placed into the OCTET STRING in the following order: octet 0 octet 1 octet 2 ... bits 7-0 bits 7-0 bits 7-0 ... ports 1-8 ports 9-16 ports 17-24 ... Values of unused bits in the last octet are undefined."
  },
  "hpVgBasicPort": {
    "name": "hpVgBasicPort",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.3",
    "class": "objectidentity"
  },
  "hpVgBasicPortTable": {
    "name": "hpVgBasicPortTable",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "HP specific extensions to the vg port table."
  },
  "hpVgBasicPortEntry": {
    "name": "hpVgBasicPortEntry",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "HP-ICF",
        "object": "hpVgPortGroupIndex",
        "implied": 0
      },
      {
        "module": "HP-ICF",
        "object": "hpVgPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "HP extended information about a specific vg port."
  },
  "hpVgPortGroupIndex": {
    "name": "hpVgPortGroupIndex",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The group that contains the port for which this entry contains information."
  },
  "hpVgPortIndex": {
    "name": "hpVgPortIndex",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1024
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The port within the group for which this entry contains information."
  },
  "hpVgPortPolarityReversed": {
    "name": "hpVgPortPolarityReversed",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object is used to indicate that the hub port was wired with the positive/negative polarity of its wire pairs reversed. Note that the port will continue to operate in this state, with the hub inverting the polarity internally."
  },
  "hpVgPortWireSkewError": {
    "name": "hpVgPortWireSkewError",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.1.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object is used to indicate that a wire skew error has been detected on this port."
  },
  "hpVgMonitor": {
    "name": "hpVgMonitor",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2",
    "class": "objectidentity"
  },
  "hpVgMonitorGlobal": {
    "name": "hpVgMonitorGlobal",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2.1",
    "class": "objectidentity"
  },
  "hpVgMonCounters": {
    "name": "hpVgMonCounters",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2.1.1",
    "class": "objectidentity"
  },
  "hpVgMonGlbReadableFrames": {
    "name": "hpVgMonGlbReadableFrames",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aReadableFramesReceived.",
    "status": "mandatory",
    "description": "This object is the total number of good frames of valid frame length that have been received on all ports in this repeater. This counter is the summation of the values of the icfVgPortReadableFrames counter for all of the ports in this repeater."
  },
  "hpVgMonGlbReadableOctets": {
    "name": "hpVgMonGlbReadableOctets",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aReadableOctetsReceived.",
    "status": "mandatory",
    "description": "This object is a count of the total number of octets contained in good frames that have been received on all ports in this repeater. This counter is the summation of the values of the icfVgPortReadableOctets counter for all of the ports in this repeater. Note that this counter may roll over very quickly."
  },
  "hpVgMonGlbUnreadableOctets": {
    "name": "hpVgMonGlbUnreadableOctets",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aOctetsInUnreadableFramesRcvd.",
    "status": "mandatory",
    "description": "This object is a count of the total number of octets contained in invalid frames that have been received on all ports in this repeater. This counter is the summation of the values of icfVgPortUnreadableOctets counter for all of the ports in this repeater. Note that this counter may roll over very quickly."
  },
  "hpVgMonGlbHighPriorityFrames": {
    "name": "hpVgMonGlbHighPriorityFrames",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aHighPriorityFramesReceived.",
    "status": "mandatory",
    "description": "This object is a count of the total number of high priority frames that have been received on all ports in this repeater. This counter is a summation of the values of the icfVgPortHighPriorityFrames counter for all of the ports in this repeater."
  },
  "hpVgMonGlbHighPriorityOctets": {
    "name": "hpVgMonGlbHighPriorityOctets",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aHighPriorityOctetsReceived.",
    "status": "mandatory",
    "description": "This object is a count of the total number of octets contained in high priority frames that have been received on all ports of this repeater. This counter is a summation of the values of the icfVgPortHighPriorityOctets counter for all of the ports in this repeater. Note that this counter may roll over very quickly."
  },
  "hpVgMonGlbBroadcastFrames": {
    "name": "hpVgMonGlbBroadcastFrames",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aBroadcastFramesReceived.",
    "status": "mandatory",
    "description": "This object is a count of the total number of broadcast packets that have been received on all ports in this repeater. This counter is a summation of the values of the icfVgPortBroadcastFrames counter for all of the ports in this repeater."
  },
  "hpVgMonGlbMulticastFrames": {
    "name": "hpVgMonGlbMulticastFrames",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2.1.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aMulticastFramesReceived.",
    "status": "mandatory",
    "description": "This object is a count of the total number of multicast packets that have been received on all ports in this repeater. This counter is a summation of the values of the icfVgPortMulticastFrames counter for all of the ports in this repeater."
  },
  "hpVgMonGlbIPMFrames": {
    "name": "hpVgMonGlbIPMFrames",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2.1.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aIPMFramesReceived.",
    "status": "mandatory",
    "description": "This object is a count of the total number of frames that have been received on all ports in this repeater with an invalid packet marker. This counter is a summation of the values of the icfVgPortIPMFrames counter for all of the ports in this repeater."
  },
  "hpVgMonGlbDataErrorFrames": {
    "name": "hpVgMonGlbDataErrorFrames",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2.1.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aDataErrorFramesReceived.",
    "status": "mandatory",
    "description": "This object is a count of the total number of errored frames received on all ports in this repeater. This counter is a summation of the values of the icfVgPortDataErrorFrames counter for all of the ports in this repeater."
  },
  "hpVgMonGlbPriorityPromotions": {
    "name": "hpVgMonGlbPriorityPromotions",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2.1.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "Reference IEEE Draft Std. 802.12, 31 October, 1994, 13.2.4.5.1, aPriorityPromotions.",
    "status": "mandatory",
    "description": "This object is a count of the total number of times the priority promotion timer has expired on any port in this repeater. This counter is a summation of the values of the icfVgPortPriorityPromotions counter for all of the ports in this repeater."
  },
  "hpVgMonitorGroup": {
    "name": "hpVgMonitorGroup",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2.2",
    "class": "objectidentity"
  },
  "hpVgMonitorPort": {
    "name": "hpVgMonitorPort",
    "oid": "1.3.6.1.4.1.11.2.14.11.3.2.3",
    "class": "objectidentity"
  },
  "hpicfGenericRepeater": {
    "name": "hpicfGenericRepeater",
    "oid": "1.3.6.1.4.1.11.2.14.11.4",
    "class": "objectidentity"
  },
  "hpGRpBasic": {
    "name": "hpGRpBasic",
    "oid": "1.3.6.1.4.1.11.2.14.11.4.1",
    "class": "objectidentity"
  },
  "hpGRpBasicGlobal": {
    "name": "hpGRpBasicGlobal",
    "oid": "1.3.6.1.4.1.11.2.14.11.4.1.1",
    "class": "objectidentity"
  },
  "hpGRpSelfHealEnable": {
    "name": "hpGRpSelfHealEnable",
    "oid": "1.3.6.1.4.1.11.2.14.11.4.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This flag controls whether or not the device will send self healing packets. Self healing packets are normally sent once per second by the agent when no other traffic is present. When there is no traffic present on a network, there is no way to detect cabling problems (or the repair of cabling problems) and status LEDs are not always correct. Enabling this flag allows the agent to detect cabling problems on an idle network. This flag can be disabled if self healing packets are not wanted. On the 100BaseVG-AnyLAN SNMP/Bridge card, these packets are addressed to a unique unused unicast station address which has been reserved by HP for this purpose. On 802.3 repeaters, these packets are self addressed. On an 802.3 repeater, this flag MUST be enabled when using the Robust Port Healing feature. Without Robust Port Healing either a good transmit or a good receive will reconnect an autopartitioned port. With Robust Port Healing the criteria is more restrictive and only a good transmit will heal a segmented port. If all ports are segmented, the repeater will not repeat anything until the agent transmits a self healing packet and reconnects the autopartitioned ports."
  },
  "hpGRpBasicGroup": {
    "name": "hpGRpBasicGroup",
    "oid": "1.3.6.1.4.1.11.2.14.11.4.1.2",
    "class": "objectidentity"
  },
  "hpGRpBasicPort": {
    "name": "hpGRpBasicPort",
    "oid": "1.3.6.1.4.1.11.2.14.11.4.1.3",
    "class": "objectidentity"
  },
  "hpGRpMonitor": {
    "name": "hpGRpMonitor",
    "oid": "1.3.6.1.4.1.11.2.14.11.4.2",
    "class": "objectidentity"
  },
  "hpGRpAddrTrack": {
    "name": "hpGRpAddrTrack",
    "oid": "1.3.6.1.4.1.11.2.14.11.4.3",
    "class": "objectidentity"
  },
  "hpicfNotifications": {
    "name": "hpicfNotifications",
    "oid": "1.3.6.1.4.1.11.2.14.12",
    "class": "objectidentity"
  },
  "hpicfCommonTraps": {
    "name": "hpicfCommonTraps",
    "oid": "1.3.6.1.4.1.11.2.14.12.1",
    "class": "objectidentity"
  },
  "hpicf8023RptrTraps": {
    "name": "hpicf8023RptrTraps",
    "oid": "1.3.6.1.4.1.11.2.14.12.2",
    "class": "objectidentity"
  },
  "hpicfVgRptrTraps": {
    "name": "hpicfVgRptrTraps",
    "oid": "1.3.6.1.4.1.11.2.14.12.3",
    "class": "objectidentity"
  },
  "hpicfGenRptrTraps": {
    "name": "hpicfGenRptrTraps",
    "oid": "1.3.6.1.4.1.11.2.14.12.4",
    "class": "objectidentity"
  },
  "hpicfChainAddition": {
    "name": "hpicfChainAddition",
    "oid": "1.3.6.1.4.1.11.2.14.12.10.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "HP-ICF",
        "object": "hpicfChainId"
      }
    ],
    "description": "An hpicfChainAddition trap indicates that a new node has been added to the Distributed Management Chain connected to this agent. The hpicfChainId returned is the identifier for the new node."
  },
  "hpicfChainRemoval": {
    "name": "hpicfChainRemoval",
    "oid": "1.3.6.1.4.1.11.2.14.12.10.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "HP-ICF",
        "object": "hpicfChainId"
      }
    ],
    "description": "An hpicfChainRemoval trap indicates that a node has been removed from the Distributed Management Chain connected to this agent. The hpicfChainId returned is the identifier for the node that was removed."
  },
  "thresholdTrap": {
    "name": "thresholdTrap",
    "oid": "1.3.6.1.4.1.11.2.14.10.0",
    "class": "notificationtype",
    "objects": [
      {
        "module": "HP-ICF",
        "object": "evthObject"
      },
      {
        "module": "HP-ICF",
        "object": "evthThreshold"
      },
      {
        "module": "HP-ICF",
        "object": "evthHysteresis"
      },
      {
        "module": "HP-ICF",
        "object": "evthTimeInterval"
      }
    ],
    "description": "A thresholdTrap(0) is specific to ICF devices. It signifies that the threshold entity in the device has detected that the object identified by evthObject has exceeded the threshold identified by evthThreshold during the time interval evthTimeInterval. After this condition occurs, it will not reoccur until the the object identified by evthObject falls below evthHysteresis for the duration of evthTimeInterval."
  },
  "stpTrap": {
    "name": "stpTrap",
    "oid": "1.3.6.1.4.1.11.2.14.30.3",
    "class": "notificationtype",
    "objects": [
      {
        "module": "HP-ICF",
        "object": "stpPortState"
      }
    ],
    "description": "A stpTrap(3) is device type specific to ICF bridges. It signifies that the Spanning Tree entity in the bridge has detected a change of state to either Blocking or Forwarding."
  },
  "temperatureTrap": {
    "name": "temperatureTrap",
    "oid": "1.3.6.1.4.1.11.2.14.30.4",
    "class": "notificationtype",
    "description": "A temperatureTrap(4) is device type specific to ICF bridges. It signifies that the bridge hardware has detected an overheated condition."
  },
  "linkBeatTrap": {
    "name": "linkBeatTrap",
    "oid": "1.3.6.1.4.1.11.2.14.20.3",
    "class": "notificationtype",
    "objects": [
      {
        "module": "HP-ICF",
        "object": "hubPortLinkBeatStatus"
      }
    ],
    "description": "A linkBeatTrap(3) is device type specific to ICF hubs. It signifies that the hub hardware has detected a change of state in a port's link beat status. The current value of the port's link beat status is returned in the PDU."
  },
  "segmentationTrap": {
    "name": "segmentationTrap",
    "oid": "1.3.6.1.4.1.11.2.14.20.4",
    "class": "notificationtype",
    "objects": [
      {
        "module": "HP-ICF",
        "object": "hubPortSegmentation"
      }
    ],
    "description": "A segmentationTrap(4) is device type specific to ICF hubs. It signifies that the hub hardware has detected a change of state in a port's segmentation status. The current value of the port's segmentation status is returned in the PDU."
  },
  "backupLinkTrap": {
    "name": "backupLinkTrap",
    "oid": "1.3.6.1.4.1.11.2.14.20.5",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SNMP-REPEATER-MIB",
        "object": "rptrPortAdminStatus"
      }
    ],
    "description": "A backupLinkTrap(5) is device type specific to most ICF hubs. It signifies that there has been a change in state of rptrPortAdminStatus for a backup port on the hub. The new value of rptrPortAdminStatus is returned in the PDU. Note that in EtherTwist hubs with revision 'D' or earlier firmware, the SNMP-REPEATER-MIB is not supported. These hubs map hub ports to interfaces in the interfaces group of RFC1213-MIB. For these hubs, the variable binding list contains ifAdminStatus for the backup port on the hub instead of rptrPortAdminStatus. Backup links are not supported on the HP28688A hub."
  },
  "intrusionTrap": {
    "name": "intrusionTrap",
    "oid": "1.3.6.1.4.1.11.2.14.20.6",
    "class": "notificationtype",
    "objects": [
      {
        "module": "HP-ICF",
        "object": "hubIntruderAddress"
      },
      {
        "module": "HP-ICF",
        "object": "hubIntruderPort"
      }
    ],
    "description": "An intrusionTrap(6) is device type specific to EtherTwist hubs with revision 'E' firmware or later and AdvanceStack hubs. It signifies that a port security violation has been detected on a port which has the hubSecPtAlarmEnable flag set to 'enabled'. The MAC address of the intruder and the port on which the intrusion occurred are returned in the PDU."
  },
  "addressMovedTrap": {
    "name": "addressMovedTrap",
    "oid": "1.3.6.1.4.1.11.2.14.20.7",
    "class": "notificationtype",
    "objects": [
      {
        "module": "HP-ICF",
        "object": "hubAddrMoveAddress"
      },
      {
        "module": "HP-ICF",
        "object": "hubAddrMoveOldGroup"
      },
      {
        "module": "HP-ICF",
        "object": "hubAddrMoveOldPort"
      },
      {
        "module": "HP-ICF",
        "object": "hubAddrMoveNewGroup"
      },
      {
        "module": "HP-ICF",
        "object": "hubAddrMoveNewPort"
      }
    ],
    "description": "An addressMovedTrap(7) is device type specific to EtherTwist hubs with revision 'E' firmware or later and AdvanceStack hubs. It signifies that a source MAC address which had been operating at one port has moved to a new port. The MAC address that moved, the group and port that the address moved from, and the group and port that the address moved to are returned in the PDU."
  },
  "newAddressTrap": {
    "name": "newAddressTrap",
    "oid": "1.3.6.1.4.1.11.2.14.20.8",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SNMP-REPEATER-MIB",
        "object": "rptrAddrTrackLastSourceAddress"
      }
    ],
    "description": "A newAddressTrap(8) is device type specific to EtherTwist hubs with revision 'E' firmware or later and AdvanceStack hubs. It signifies that a new MAC address has been detected on one of the hub's ports. The instance of rptrAddrTrackLastSourceAddress for the port with the new address is returned in the PDU."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/HP-ICF.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 18:47:53 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "HP-ICF"
  }
}