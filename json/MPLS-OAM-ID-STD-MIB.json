{
  "imports": {
    "class": "imports",
    "DIFFSERV-MIB": [
      "IndexIntegerNextFree"
    ],
    "IF-MIB": [
      "ifGeneralInformationGroup",
      "ifCounterDiscontinuityGroup",
      "InterfaceIndexOrZero"
    ],
    "MPLS-TC-STD-MIB": [
      "mplsStdMIB"
    ],
    "SNMP-FRAMEWORK-MIB": [
      "SnmpAdminString"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "OBJECT-GROUP",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "OBJECT-TYPE",
      "IpAddress",
      "MibIdentifier",
      "MODULE-IDENTITY",
      "OBJECT-IDENTITY",
      "NOTIFICATION-TYPE",
      "Bits",
      "Counter32",
      "Unsigned32",
      "Gauge32",
      "iso",
      "Integer32",
      "TimeTicks",
      "Counter64"
    ],
    "SNMPv2-TC": [
      "RowStatus",
      "TEXTUAL-CONVENTION",
      "RowPointer",
      "StorageType",
      "DisplayString"
    ]
  },
  "mplsOamIdStdMIB": {
    "name": "mplsOamIdStdMIB",
    "oid": "1.3.6.1.2.1.10.166.21",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2016-01-07 00:00",
        "description": "MPLS OAM Identifiers MIB objects for Tunnels, LSPs, Pseudowires, and Sections."
      }
    ],
    "lastupdated": "201601070000Z",
    "organization": "Multiprotocol Label Switching (MPLS) Working Group",
    "contactinfo": "Sam Aldrin Google, Inc. 1600 Amphitheatre Parkway Mountain View, CA 94043 USA Email: aldrin.ietf@gmail.com Thomas D. Nadeau Email: tnadeau@lucidvision.com Venkatesan Mahalingam Dell, Inc. 5450 Great America Parkway Santa Clara, CA 95054 USA Email: venkat.mahalingams@gmail.com Kannan KV Sampath Redeem India Email: kannankvs@gmail.com Ping Pan Infinera Sami Boutros VMware, Inc. 3401 Hillview Ave. Palo Alto, CA 94304 USA Email: sboutros@vmware.com",
    "description": "Copyright (c) 2016 IETF Trust and the persons identified as authors of the code. All rights reserved. Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info). This MIB module contains generic object definitions for MPLS OAM identifiers."
  },
  "mplsOamIdNotifications": {
    "name": "mplsOamIdNotifications",
    "oid": "1.3.6.1.2.1.10.166.21.0",
    "class": "objectidentity"
  },
  "mplsOamIdObjects": {
    "name": "mplsOamIdObjects",
    "oid": "1.3.6.1.2.1.10.166.21.1",
    "class": "objectidentity"
  },
  "mplsOamIdConformance": {
    "name": "mplsOamIdConformance",
    "oid": "1.3.6.1.2.1.10.166.21.2",
    "class": "objectidentity"
  },
  "mplsOamIdMegIndexNext": {
    "name": "mplsOamIdMegIndexNext",
    "oid": "1.3.6.1.2.1.10.166.21.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IndexIntegerNextFree",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object contains an unused value for mplsOamIdMegIndex, or a zero to indicate that none exist. Negative values are not allowed, as they do not correspond to valid values of mplsOamIdMegIndex."
  },
  "mplsOamIdMegTable": {
    "name": "mplsOamIdMegTable",
    "oid": "1.3.6.1.2.1.10.166.21.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information about the Maintenance Entity Groups (MEGs). A MEG, as mentioned in the MPLS-TP OAM framework, defines a set of one or more Maintenance Entities (MEs). MEs define a relationship between any two points of a transport path in an OAM domain to which maintenance and monitoring operations apply."
  },
  "mplsOamIdMegEntry": {
    "name": "mplsOamIdMegEntry",
    "oid": "1.3.6.1.2.1.10.166.21.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegIndex",
        "implied": 0
      }
    ],
    "reference": "1. RFC 5860: Requirements for Operations, Administration, and Maintenance (OAM) in MPLS Transport Networks, May 2010. 2. RFC 6371: Operations, Administration, and Maintenance Framework for MPLS-Based Transport Networks, September 2011, Section 3. 3. RFC 6370: MPLS Transport Profile (MPLS-TP) Identifiers, September 2011. 4. RFC 6923: MPLS Transport Profile (MPLS-TP) Identifiers Following ITU-T Conventions, May 2013.",
    "status": "current",
    "description": "An entry in this table represents an MPLS-TP MEG. An entry can be created by a network administrator or by an SNMP agent as instructed by an MPLS-TP OAM framework. When a new entry is created with mplsOamIdMegOperatorType set to ipCompatible (1), then as per RFC 6370 (MEG_ID for an LSP is LSP_ID, and MEG_ID for a PW is PW_Path_ID), MEP_ID can be automatically formed. For a co-routed bidirectional LSP, MEG_ID is A1-{Global_ID::Node_ID::Tunnel_Num}::Z9-{Global_ID:: Node_ID::Tunnel_Num}::LSP_Num. For an associated bidirectional LSP, MEG_ID is A1-{Global_ID::Node_ID::Tunnel_Num::LSP_Num}:: Z9-{Global_ID::Node_ID::Tunnel_Num::LSP_Num}. For an LSP, MEP_ID is formed using Global_ID::Node_ID::Tunnel_Num::LSP_Num. For a PW, MEG_ID is formed using AGI:: A1-{Global_ID::Node_ID::AC_ID}:: Z9-{Global_ID::Node_ID::AC_ID}. For a PW, MEP_ID is formed using AGI::Global_ID::Node_ID::AC_ID. MEP_ID is retrieved from the mplsOamIdMegServicePointer object based on the mplsOamIdMegServicePointerType value. The ICC MEG_ID for an LSP and a PW is formed using the objects mplsOamIdMegIdIcc and mplsOamIdMegIdUmc. MEP_ID can be formed using MEG_ID::MEP_Index."
  },
  "mplsOamIdMegIndex": {
    "name": "mplsOamIdMegIndex",
    "oid": "1.3.6.1.2.1.10.166.21.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Index for the conceptual row identifying a MEG within this MEG table. Managers should obtain new values for row creation in this table by reading mplsOamIdMegIndexNext."
  },
  "mplsOamIdMegName": {
    "name": "mplsOamIdMegName",
    "oid": "1.3.6.1.2.1.10.166.21.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 48
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Each MEG has a unique name amongst all those used or available to a service provider or operator. It facilitates easy identification of administrative responsibility for each MEG."
  },
  "mplsOamIdMegOperatorType": {
    "name": "mplsOamIdMegOperatorType",
    "oid": "1.3.6.1.2.1.10.166.21.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ipCompatible": 1,
          "iccBased": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "ipCompatible",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "reference": "1. RFC 6370: MPLS Transport Profile (MPLS-TP) Identifiers, September 2011. 2. RFC 6923: MPLS Transport Profile (MPLS-TP) Identifiers Following ITU-T Conventions, May 2013, Section 3.1.",
    "status": "current",
    "description": "Indicates the operator type for the MEG. Conceptual rows having 'iccBased' as the operator type MUST have valid values for the objects mplsOamIdMegIdIcc and mplsOamIdMegIdUmc when the row status is active."
  },
  "mplsOamIdMegIdCc": {
    "name": "mplsOamIdMegIdCc",
    "oid": "1.3.6.1.2.1.10.166.21.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 2
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "reference": "RFC 6923: MPLS Transport Profile (MPLS-TP) Identifiers Following ITU-T Conventions, May 2013, Section 3.",
    "status": "current",
    "description": "Global uniqueness is assured by concatenating the ICC with a Country Code (CC). The Country Code (alpha-2) is a string of two alphabetic characters represented with uppercase letters (i.e., A-Z). This object MUST contain a non-null value if the MplsOamIdMegOperatorType value is iccBased (2); otherwise, a null value with octet size 0 should be assigned."
  },
  "mplsOamIdMegIdIcc": {
    "name": "mplsOamIdMegIdIcc",
    "oid": "1.3.6.1.2.1.10.166.21.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "reference": "RFC 6923: MPLS Transport Profile (MPLS-TP) Identifiers Following ITU-T Conventions, May 2013, Section 3.1.",
    "status": "current",
    "description": "Unique code assigned to a network operator or service provider; maintained by the ITU-T. This is the ITU Carrier Code used to form the MEGID. This object MUST contain a non-null value if the MplsOamIdMegOperatorType value is iccBased (2); otherwise, a null value with octet size 0 should be assigned."
  },
  "mplsOamIdMegIdUmc": {
    "name": "mplsOamIdMegIdUmc",
    "oid": "1.3.6.1.2.1.10.166.21.1.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 7
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "reference": "RFC 6923: MPLS Transport Profile (MPLS-TP) Identifiers Following ITU-T Conventions, May 2013, Section 7.1.",
    "status": "current",
    "description": "Unique code assigned by a network operator or service provider. This code is appended to mplsOamIdMegIdIcc to form the MEGID. This object MUST contain a non-null value if the MplsOamIdMegOperatorType value is iccBased (2); otherwise, a null value with octet size 0 should be assigned."
  },
  "mplsOamIdMegServicePointerType": {
    "name": "mplsOamIdMegServicePointerType",
    "oid": "1.3.6.1.2.1.10.166.21.1.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "tunnel": 1,
          "lsp": 2,
          "pseudowire": 3,
          "section": 4
        }
      }
    },
    "default": {
      "default": {
        "value": "lsp",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "reference": "1. RFC 3812: Multiprotocol Label Switching (MPLS) Traffic Engineering (TE) Management Information Base (MIB), June 2004. 2. RFC 5601: Pseudowire (PW) Management Information Base (MIB), July 2009.",
    "status": "current",
    "description": "Indicates the service type for the MEG. If the service type indicates tunnel (1), the service pointer in the mplsOamIdMeTable points to an entry in the point-to-point mplsTunnelTable (RFC 3812). If the service type indicates lsp (2), the service pointer in the mplsOamIdMeTable points to an entry in the co-routed or associated bidirectional mplsTunnelTable. If the value is the pseudowire (3) service type, the service pointer in the mplsOamIdMeTable points to an entry in the pwTable (RFC 5601). If the value is the section (4) service type, the service pointer in the mplsOamIdMeTable points to an entry in the mplsTunnelTable (RFC 3812)."
  },
  "mplsOamIdMegMpLocation": {
    "name": "mplsOamIdMegMpLocation",
    "oid": "1.3.6.1.2.1.10.166.21.1.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "perNode": 1,
          "perInterface": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "perNode",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "reference": "RFC 6371: Operations, Administration, and Maintenance Framework for MPLS-Based Transport Networks, September 2011.",
    "status": "current",
    "description": "Indicates the MP location type for this MEG. If the value is perNode, then the MEG in the LSR supports only perNode MEPs/MIPs, i.e., only one MEP/MIP in an LSR. If the value is perInterface, then the MEG in the LSR supports perInterface MEPs/MIPs, i.e., two MEPs/MIPs in an LSR."
  },
  "mplsOamIdMegPathFlow": {
    "name": "mplsOamIdMegPathFlow",
    "oid": "1.3.6.1.2.1.10.166.21.1.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unidirectionalPointToPoint": 1,
          "coRoutedBidirectionalPointToPoint": 2,
          "associatedBidirectionalPointToPoint": 3,
          "unidirectionalPointToMultiPoint": 4
        }
      }
    },
    "default": {
      "default": {
        "value": "coRoutedBidirectionalPointToPoint",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "reference": "RFC 6371: Operations, Administration, and Maintenance Framework for MPLS-Based Transport Networks, September 2011.",
    "status": "current",
    "description": "Indicates the transport path flow for this MEG. In the case of a unidirectional point-to-point transport path, a single unidirectional ME is defined to monitor it. In the case of associated bidirectional point-to-point transport paths, two independent unidirectional MEs are defined to independently monitor each direction. In the case of co-routed bidirectional point-to-point transport paths, a single bidirectional ME is defined to monitor both directions congruently. In the case of unidirectional point-to-multipoint transport paths, a single unidirectional ME for each leaf is defined to monitor the transport path from the root to that leaf."
  },
  "mplsOamIdMegOperStatus": {
    "name": "mplsOamIdMegOperStatus",
    "oid": "1.3.6.1.2.1.10.166.21.1.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object specifies the operational status of the Maintenance Entity Group (MEG). This object is used to send the notification to the SNMP manager about the MEG. The value up (1) indicates that the MEG and its monitored path are operationally up. The value down (2) indicates that the MEG is operationally down. When the value of mplsOamIdMegOperStatus is up (1), all the bits of mplsOamIdMegSubOperStatus must be cleared. When the value of mplsOamIdMegOperStatus is down (2), at least one bit of mplsOamIdMegSubOperStatus must be set."
  },
  "mplsOamIdMegSubOperStatus": {
    "name": "mplsOamIdMegSubOperStatus",
    "oid": "1.3.6.1.2.1.10.166.21.1.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "megDown": 0,
        "meDown": 1,
        "oamAppDown": 2,
        "pathDown": 3
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object specifies the reason why the MEG operational status, as indicated by the object mplsOamIdMegOperStatus, is down. This object is used to send the notification to the SNMP manager about the MEG. The bit 0 (megDown) indicates that the MEG is down. The bit 1 (meDown) indicates that the ME table is down. The bit 2 (oamAppDown) indicates that the OAM application (LSP or PW) monitored by this MEG is down. Currently, BFD is the only supported OAM application. The bit 3 (pathDown) indicates that the underlying LSP or PW is down."
  },
  "mplsOamIdMegRowStatus": {
    "name": "mplsOamIdMegRowStatus",
    "oid": "1.3.6.1.2.1.10.166.21.1.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This variable is used to create, modify, and/or delete a row in this table. When a row in this table is in the active(1) state, no objects in that row can be modified by the agent except mplsOamIdMegRowStatus."
  },
  "mplsOamIdMegStorageType": {
    "name": "mplsOamIdMegStorageType",
    "oid": "1.3.6.1.2.1.10.166.21.1.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "volatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This variable indicates the storage type for this object. Conceptual rows having the value 'permanent' need not allow write access to any columnar objects in the row."
  },
  "mplsOamIdMeIndexNext": {
    "name": "mplsOamIdMeIndexNext",
    "oid": "1.3.6.1.2.1.10.166.21.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IndexIntegerNextFree",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object contains an unused value for mplsOamIdMeIndex, or a zero to indicate that none exist. Negative values are not allowed, as they do not correspond to valid values of mplsOamIdMeIndex."
  },
  "mplsOamIdMeMpIndexNext": {
    "name": "mplsOamIdMeMpIndexNext",
    "oid": "1.3.6.1.2.1.10.166.21.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IndexIntegerNextFree",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object contains an unused value for mplsOamIdMeMpIndex, or a zero to indicate that none exist. Negative values are not allowed, as they do not correspond to valid values of mplsOamIdMeMpIndex."
  },
  "mplsOamIdMeTable": {
    "name": "mplsOamIdMeTable",
    "oid": "1.3.6.1.2.1.10.166.21.1.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains MPLS-TP ME information. The ME is some portion of a transport path that requires management bounded by two points (called MEPs), and the relationship between those points to which maintenance and monitoring operations apply. This table is generic enough to handle MEP and MIP information within a MEG."
  },
  "mplsOamIdMeEntry": {
    "name": "mplsOamIdMeEntry",
    "oid": "1.3.6.1.2.1.10.166.21.1.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegIndex",
        "implied": 0
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMeIndex",
        "implied": 0
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMeMpIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in this table represents an MPLS-TP ME. This entry represents the ME if the source and sink MEPs are defined. An ME is a point-to-point entity. One ME has two such MEPs. A MEG is a group of one or more MEs. One MEG can have two or more MEPs. For a point-to-point LSP, one MEG has one ME, and this ME is associated with two MEPs (source and sink MEPs) within a MEG. Each mplsOamIdMeIndex value denotes the ME within a MEG. In the case of unidirectional point-to-point transport paths, a single unidirectional ME is defined to monitor it, and mplsOamIdMeServicePointer points to a unidirectional point-to-point path. In the case of associated bidirectional point-to-point transport paths, two independent unidirectional MEs are defined to independently monitor each direction, and each mplsOamIdMeServicePointer MIB object points to a unique unidirectional transport path. This has implications for transactions that terminate at or query a MIP, as a return path from a MIP to a source MEP does not necessarily exist within the MEG. In the case of co-routed bidirectional point-to-point transport paths, a single bidirectional ME is defined to monitor both directions congruently, and the mplsOamIdMeServicePointer MIB object points to a co-routed bidirectional point-to-point transport path. In the case of unidirectional point-to-multipoint transport paths, a single unidirectional ME for each leaf is defined to monitor the transport path from the root to that leaf, and each leaf has different transport path information in the mplsOamIdMeServicePointer MIB object. Note that the MplsOamIdMeEntry should be created manually once the MEG is configured for OAM operations."
  },
  "mplsOamIdMeIndex": {
    "name": "mplsOamIdMeIndex",
    "oid": "1.3.6.1.2.1.10.166.21.1.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Uniquely identifies an ME index within a MEG. Managers should obtain new values for row creation in this table by reading mplsOamIdMeIndexNext."
  },
  "mplsOamIdMeMpIndex": {
    "name": "mplsOamIdMeMpIndex",
    "oid": "1.3.6.1.2.1.10.166.21.1.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Indicates the Maintenance Point (MP) index that is used to create multiple MEPs in a node of a single ME. The value of this object can be the MEP index or the MIP index. Managers should obtain new values for row creation in this table by reading mplsOamIdMeMpIndexNext."
  },
  "mplsOamIdMeName": {
    "name": "mplsOamIdMeName",
    "oid": "1.3.6.1.2.1.10.166.21.1.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 48
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object denotes the ME name. Each ME has a unique name within a MEG."
  },
  "mplsOamIdMeMpIfIndex": {
    "name": "mplsOamIdMeMpIfIndex",
    "oid": "1.3.6.1.2.1.10.166.21.1.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-create",
    "reference": "1. RFC 6371: Operations, Administration, and Maintenance Framework for MPLS-Based Transport Networks, September 2011. 2. RFC 2863: The Interfaces Group MIB, June 2000.",
    "status": "current",
    "description": "Indicates the MP interface. If the mplsOamIdMegMpLocation object value is perNode (1), the MP interface index should point to the incoming interface or outgoing interface, or be zero (to indicate that the MP OAM packets are initiated from the forwarding engine). If the mplsOamIdMegMpLocation object value is perInterface (2), the MP interface index should point to the incoming interface or outgoing interface."
  },
  "mplsOamIdMeSourceMepIndex": {
    "name": "mplsOamIdMeSourceMepIndex",
    "oid": "1.3.6.1.2.1.10.166.21.1.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Indicates the source MEP index of the ME. This object should be configured if the mplsOamIdMegOperatorType object in the mplsOamIdMegEntry is configured as iccBased (2). If the MEG is configured for an IP-based operator, the value of this object should be set to zero, and the MEP ID will be automatically derived from the service identifiers (MPLS-TP LSP/PW Identifier)."
  },
  "mplsOamIdMeSinkMepIndex": {
    "name": "mplsOamIdMeSinkMepIndex",
    "oid": "1.3.6.1.2.1.10.166.21.1.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Indicates the sink MEP index of the ME. This object should be configured if the mplsOamIdMegOperatorType object in the mplsOamIdMegEntry is configured as iccBased (2). If the MEG is configured for an IP-based operator, the value of this object should be set to zero, and the MEP ID will be automatically derived from the service identifiers (MPLS-TP LSP/PW Identifier)."
  },
  "mplsOamIdMeMpType": {
    "name": "mplsOamIdMeMpType",
    "oid": "1.3.6.1.2.1.10.166.21.1.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mep": 1,
          "mip": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "mep",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Indicates the MP type within the MEG. The object should have the value mep (1) only in the ingress or egress nodes of the transport path. The object can have the value mip (2) in the intermediate nodes and possibly in the egress nodes of the transport path."
  },
  "mplsOamIdMeMepDirection": {
    "name": "mplsOamIdMeMepDirection",
    "oid": "1.3.6.1.2.1.10.166.21.1.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2,
          "notApplicable": 3
        }
      }
    },
    "default": {
      "default": {
        "value": "down",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Indicates the direction of the MEP. This object should be configured if mplsOamIdMeMpType is configured as mep (1); otherwise, notApplicable (3) is set."
  },
  "mplsOamIdMeServicePointer": {
    "name": "mplsOamIdMeServicePointer",
    "oid": "1.3.6.1.2.1.10.166.21.1.5.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowPointer",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This variable represents a pointer to the MPLS-TP transport path. This value MUST point at an entry in the mplsTunnelEntry if mplsOamIdMegServicePointerType is configured as tunnel (1), lsp (2), or section (4), or at an entry in the pwEntry if mplsOamIdMegServicePointerType is configured as pseudowire (3). Note: This service pointer object is placed in the ME table instead of the MEG table, since it will be useful in the point-to-multipoint case, where each ME will point to different branches of a point-to-multipoint tree."
  },
  "mplsOamIdMeRowStatus": {
    "name": "mplsOamIdMeRowStatus",
    "oid": "1.3.6.1.2.1.10.166.21.1.5.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This variable is used to create, modify, and/or delete a row in this table. When a row in this table is in the active(1) state, no objects in that row can be modified by the agent except mplsOamIdMeRowStatus."
  },
  "mplsOamIdMeStorageType": {
    "name": "mplsOamIdMeStorageType",
    "oid": "1.3.6.1.2.1.10.166.21.1.5.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "volatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This variable indicates the storage type for this object. Conceptual rows having the value 'permanent' need not allow write access to any columnar objects in the row."
  },
  "mplsOamIdDefectCondition": {
    "name": "mplsOamIdDefectCondition",
    "oid": "1.3.6.1.2.1.10.166.21.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegName"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMeName"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegOperStatus"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegSubOperStatus"
      }
    ],
    "status": "current",
    "description": "This notification is sent whenever the operational status of the MEG is changed."
  },
  "mplsOamIdCompliances": {
    "name": "mplsOamIdCompliances",
    "oid": "1.3.6.1.2.1.10.166.21.2.1",
    "class": "objectidentity"
  },
  "mplsOamIdGroups": {
    "name": "mplsOamIdGroups",
    "oid": "1.3.6.1.2.1.10.166.21.2.2",
    "class": "objectidentity"
  },
  "mplsOamIdModuleFullCompliance": {
    "name": "mplsOamIdModuleFullCompliance",
    "oid": "1.3.6.1.2.1.10.166.21.2.1.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "ifGeneralInformationGroup",
        "module": "IF-MIB"
      },
      {
        "object": "ifCounterDiscontinuityGroup",
        "module": "IF-MIB"
      },
      {
        "object": "mplsOamIdMegGroup",
        "module": "MPLS-OAM-ID-STD-MIB"
      },
      {
        "object": "mplsOamIdMeGroup",
        "module": "MPLS-OAM-ID-STD-MIB"
      },
      {
        "object": "mplsOamIdNotificationObjectsGroup",
        "module": "MPLS-OAM-ID-STD-MIB"
      },
      {
        "object": "mplsOamIdNotificationGroup",
        "module": "MPLS-OAM-ID-STD-MIB"
      }
    ],
    "status": "current",
    "description": "Compliance statement for agents that provide full support for the MPLS-TP-OAM-STD-MIB. Such devices can then be monitored and also be configured using this MIB module."
  },
  "mplsOamIdModuleReadOnlyCompliance": {
    "name": "mplsOamIdModuleReadOnlyCompliance",
    "oid": "1.3.6.1.2.1.10.166.21.2.1.2",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "mplsOamIdMegGroup",
        "module": "MPLS-OAM-ID-STD-MIB"
      },
      {
        "object": "mplsOamIdMeGroup",
        "module": "MPLS-OAM-ID-STD-MIB"
      },
      {
        "object": "mplsOamIdNotificationObjectsGroup",
        "module": "MPLS-OAM-ID-STD-MIB"
      },
      {
        "object": "mplsOamIdNotificationGroup",
        "module": "MPLS-OAM-ID-STD-MIB"
      }
    ],
    "status": "current",
    "description": "Compliance statement for agents that only provide read-only support for the MPLS-TP-OAM-STD-MIB module."
  },
  "mplsOamIdMegGroup": {
    "name": "mplsOamIdMegGroup",
    "oid": "1.3.6.1.2.1.10.166.21.2.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegIndexNext"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegName"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegOperatorType"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegIdCc"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegIdIcc"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegIdUmc"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegServicePointerType"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegMpLocation"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegOperStatus"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegSubOperStatus"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegPathFlow"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegRowStatus"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegStorageType"
      }
    ],
    "status": "current",
    "description": "Collection of objects needed for MPLS MEG information."
  },
  "mplsOamIdMeGroup": {
    "name": "mplsOamIdMeGroup",
    "oid": "1.3.6.1.2.1.10.166.21.2.2.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMeIndexNext"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMeMpIndexNext"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMeName"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMeMpIfIndex"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMeSourceMepIndex"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMeSinkMepIndex"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMeMpType"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMeMepDirection"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMeServicePointer"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMeRowStatus"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMeStorageType"
      }
    ],
    "status": "current",
    "description": "Collection of objects needed for MPLS ME information."
  },
  "mplsOamIdNotificationObjectsGroup": {
    "name": "mplsOamIdNotificationObjectsGroup",
    "oid": "1.3.6.1.2.1.10.166.21.2.2.3",
    "class": "objectgroup",
    "objects": [
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegOperStatus"
      },
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdMegSubOperStatus"
      }
    ],
    "status": "current",
    "description": "Collection of objects needed to implement notifications."
  },
  "mplsOamIdNotificationGroup": {
    "name": "mplsOamIdNotificationGroup",
    "oid": "1.3.6.1.2.1.10.166.21.2.2.4",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "MPLS-OAM-ID-STD-MIB",
        "object": "mplsOamIdDefectCondition"
      }
    ],
    "status": "current",
    "description": "Set of notifications implemented in this module."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/MPLS-OAM-ID-STD-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 17:10:28 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "MPLS-OAM-ID-STD-MIB"
  }
}