{
  "imports": {
    "class": "imports",
    "IF-MIB": [
      "InterfaceIndex",
      "ifIndex"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "MODULE-IDENTITY",
      "NOTIFICATION-TYPE",
      "Unsigned32",
      "iso",
      "OBJECT-TYPE",
      "Counter32",
      "TimeTicks",
      "MibIdentifier",
      "Gauge32",
      "OBJECT-IDENTITY",
      "Bits",
      "Integer32",
      "Counter64",
      "IpAddress"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ],
    "Zhone": [
      "zhoneInterfaceGroup",
      "zhoneModules"
    ],
    "Zhone-TC": [
      "ZhoneShelfValue",
      "ZhoneAdminString",
      "ZhoneRowStatus",
      "ZhoneSlotValue"
    ]
  },
  "zhoneRedundantLine": {
    "name": "zhoneRedundantLine",
    "oid": "1.3.6.1.4.1.5504.6.9",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2000-09-12 18:01",
        "description": "V01.00.00 - Initial Release"
      },
      {
        "revision": "2000-10-25 16:46",
        "description": "V01.00.01 - re-generated"
      },
      {
        "revision": "2000-11-03 19:43",
        "description": "Added IfIndex type identifier in Zhone Keyword markup for Line Profile index value"
      },
      {
        "revision": "2000-11-06 18:53",
        "description": "V01.00.04 - Fix OID numbering"
      }
    ],
    "lastupdated": "200011031722Z",
    "organization": "Zhone Technologies",
    "contactinfo": " Postal: Zhone Technologies, Inc. @ Zhone Way 7001 Oakport Street Oakland, CA 94621 USA Toll-Free: +1 877-ZHONE20 (+1 877-946-6320) Tel: +1-510-777-7000 Fax: +1-510-777-7001 E-mail: support@zhone.com",
    "description": "The Zhone Interface Group MIB defines variables for managing related groups of interfaces and allows pairs of lines to be grouped for redundancy. Note that the channelized entities (i.e. DS1 channels on a DS3 line) will not be included in this table."
  },
  "InterfaceIndexOrZero": {
    "name": "InterfaceIndexOrZero",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "displayhint": "d",
    "status": "current",
    "description": "This textual convention is an extension of the InterfaceIndex convention. The latter defines a greater than zero value used to identify an interface or interface sub-layer in the managed system. This extension permits the additional value of zero. the value zero is object-specific and must therefore be defined as part of the description of any object which uses this syntax. Examples of the usage of zero might include situations where interface was unknown, or when none or all interfaces need to be referenced."
  },
  "nextLineGroupId": {
    "name": "nextLineGroupId",
    "oid": "1.3.6.1.4.1.5504.3.6.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The next available line group id which can be used by the manager when creating a line group. A 'get' to this field, causes the number to be returned and the value to be incremented for the next requester. The range for nextLineGroupId is 0..2147483647 where the value 0 indicates that no unassigned entries are available."
  },
  "lineProfileTable": {
    "name": "lineProfileTable",
    "oid": "1.3.6.1.4.1.5504.3.6.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The table which contains Zhone-specific descriptions of each physical line. There is one entry for each physical line in the system and it's primary use is for a user to specify redundant lines in the system. An entry is automatically created by the associated driver whenever a new card is inserted in the system (specifically when an ifindex value is allocated for this port). Statistics, admin state, and operational state can be obtained by the matching ifEntry. This line is part of a redundancy group if the lgRedundancyGroupId is non-zero. This value is a cross-reference to the maching line redundancy group table and must be created by the user. In order for a line/ifEntry to be admin'd active, this line MUST be part of a line redundancy group (even if no redundancy is being configured)."
  },
  "lineProfileEntry": {
    "name": "lineProfileEntry",
    "oid": "1.3.6.1.4.1.5504.3.6.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "The entry describing a single physical line in the line profile table."
  },
  "lpDescription": {
    "name": "lpDescription",
    "oid": "1.3.6.1.4.1.5504.3.6.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneAdminString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A descriptive name the user can enter. It is not used by the operating software and more than likely the user only should modify the description in the ifTable. "
  },
  "lpPhysicalShelf": {
    "name": "lpPhysicalShelf",
    "oid": "1.3.6.1.4.1.5504.3.6.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneShelfValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The physical address or number of the shelf where desired line is located. A Zhone system is limited to a maximum of 255 shelves. The first shelf in a system is shelf 1."
  },
  "lpPhysicalSlot": {
    "name": "lpPhysicalSlot",
    "oid": "1.3.6.1.4.1.5504.3.6.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneSlotValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The physical slot number on which the the card containing the port for the line profile is located. Zhone shelves are currently limited to a maximum of 17 slots numbered 1-17."
  },
  "lpPhysicalPort": {
    "name": "lpPhysicalPort",
    "oid": "1.3.6.1.4.1.5504.3.6.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 262143
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The port number defines the physical port number on the selected shel/slot for the line profile. Port numbering begins with 1 and are numbered sequentially. The valid range of port numbers is 1..262143. lpPhysicalPort 0 is invalid."
  },
  "lpPhysicalSubPort": {
    "name": "lpPhysicalSubPort",
    "oid": "1.3.6.1.4.1.5504.3.6.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The lpPhysicalSubPort is used to identify multiple logical ports on a physical port that require their own line profiles. Value of 0 indicates there is no lpPhysicalsubPort"
  },
  "lpRedundancyGroupId": {
    "name": "lpRedundancyGroupId",
    "oid": "1.3.6.1.4.1.5504.3.6.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The matching id of the line redundancy group (lgId) of which this line is a part. This field must be set, even if the line is not a redundant pair but is being utilized in the system. The user may have lines configured but not part of a redundancy group which just means this line is in the process of being configured. When the line profile is initially created, it is NOT part of a line redundancy group (value =0)."
  },
  "lineGroupTable": {
    "name": "lineGroupTable",
    "oid": "1.3.6.1.4.1.5504.3.6.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The lineGroupTable contains descriptions of the redundancy relationship between lines. Each of the two lines are given a weight between 1 and 10 which is used to determine their role. Each line is referenced by an ID (ifIndex) used to access the ifEntry and lineProfile tables. The use of Primary/Secondary naming convention is arbitrary and specifying either does not guarantee any particular line having additional priority. The sole determination of which line is active is the weighting level, thus where if both are equal, which ever line becomes active remains active until an error condition occurs. Table entries are created only by the user when they add/make a line part of a redundancy group. Non- Redundancy configurations require one of the entries (primary or secondary) to be populated. It is possible to have a redundancy group entry with both fields not configured (0), however, the state must be Admin down for this group. Activation requests in this state will cause an error return."
  },
  "lineGroupEntry": {
    "name": "lineGroupEntry",
    "oid": "1.3.6.1.4.1.5504.3.6.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ZHONE-GEN-LINE-REDUNDANCY",
        "object": "lgId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A line group entry describes a pair of redundant lines."
  },
  "lgId": {
    "name": "lgId",
    "oid": "1.3.6.1.4.1.5504.3.6.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The line group entry id. This is a unique number that is obtained by the nextLineGroupId field. The range for lgId is 1..2147483647 and the range for nextLineGroupId is 0..2147483647 where the value 0 indicates that no unassigned entries are available."
  },
  "lgName": {
    "name": "lgName",
    "oid": "1.3.6.1.4.1.5504.3.6.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneAdminString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The name of this entry. This value is the one utilized by the user when referencing this line group. This is performed so the user does not have to know the numeric id's that has been assigned to this group entry. Because of this, this value is unique within the line group table and must never be null. Changing this name is not allowed unless any references to it are deleted in any associated records (i.e. subscriber mib). Required by row creation."
  },
  "lgPrimaryLineId": {
    "name": "lgPrimaryLineId",
    "oid": "1.3.6.1.4.1.5504.3.6.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The id entered in the line profile table for the profile of the primary line. The default value of 0 indicates no primary line is configured. When this field is set, the matching lineProfile entry will also be updated. Note that the matching entry (ifIndex) must be admin'd down before this field can be modified. Required by row creation."
  },
  "lgPrimaryWeight": {
    "name": "lgPrimaryWeight",
    "oid": "1.3.6.1.4.1.5504.3.6.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 10
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 5,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The preference for this line to be active. A value of 1 is low preference, and 10 is high. Default is 5 to match the secondary line so the default is that both lines are equal and whichever becomes active first remains the active line until an error condition occurs. Value of 0 is reserved."
  },
  "lgSecondaryLineId": {
    "name": "lgSecondaryLineId",
    "oid": "1.3.6.1.4.1.5504.3.6.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The name as entered in the line profile table for the profile of the secondary line. The default value of 0 indicates that no secondary line is configured. When this field is set, the matching lineProfile entry will also be updated. Note that the matching entry (ifIndex) must be admin'd down before this field can be modified."
  },
  "lgSecondaryWeight": {
    "name": "lgSecondaryWeight",
    "oid": "1.3.6.1.4.1.5504.3.6.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 10
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 5,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The preference for this line to be active. A value of 1 is low preference, and 10 is high. Default is 5 to match the primary line so that the default is that both lines are equal and whichever line becomes active first remains the active line until an error condition occurs. Value of 0 is reserved."
  },
  "lgGroupAdminState": {
    "name": "lgGroupAdminState",
    "oid": "1.3.6.1.4.1.5504.3.6.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "down": 1,
          "up": 2,
          "lockActive": 3
        }
      }
    },
    "default": {
      "default": {
        "value": "down",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The line group admin status - 'up' status is when the group is in use and the lines in the group can become active. In this state, line parameters may not be changed. - 'down' status is set to down the entire line group. A redundant switch does not occur and in the down state line group parameters may be cahnged and the entire line group may be deleted. - 'lockAtive' status is set to allow the inactive member of the line group to be modified. In this state the active line is uneffected, however, if an error occurs on the active line that would result in a redundant switch, the switch will not occur."
  },
  "lgGroupOperState": {
    "name": "lgGroupOperState",
    "oid": "1.3.6.1.4.1.5504.3.6.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "inactive": 1,
          "active": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The state of this line group. Normally, this state will match the admin state of this group except during the activation phase of the group or if 'all' active lines in the group are down (admin'd or due to a fault) - 'inactive' status is returned when the line group is not active or inoperable. - 'active' status is returned if at least one line is active and operational in the group."
  },
  "lgActiveLineId": {
    "name": "lgActiveLineId",
    "oid": "1.3.6.1.4.1.5504.3.6.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The currently active line (ifindex) for this Group. 0 indicates no active lines."
  },
  "lgRowStatus": {
    "name": "lgRowStatus",
    "oid": "1.3.6.1.4.1.5504.3.6.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneRowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "A line group entry can only be created if both the lgName and line group id is specified. An entry in this table CANNOT be deleted unless the admin state is down and both the primary and secondary line id fields are 0 (no lines are part of this group). lgName, lgPrimaryLineId, and lgPrimaryWeight are required for row creation."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/ZHONE-GEN-LINE-REDUNDANCY.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 17:30:28 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "ZHONE-GEN-LINE-REDUNDANCY"
  }
}