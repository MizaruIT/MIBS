{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "OBJECT-TYPE",
      "IpAddress",
      "MODULE-IDENTITY",
      "MibIdentifier",
      "Counter32",
      "Gauge32",
      "iso",
      "TimeTicks",
      "Integer32",
      "Counter64",
      "enterprises",
      "Bits",
      "Unsigned32",
      "OBJECT-IDENTITY",
      "NOTIFICATION-TYPE"
    ],
    "SNMPv2-TC": [
      "PhysAddress",
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "compaq": {
    "name": "compaq",
    "oid": "1.3.6.1.4.1.232",
    "class": "objectidentity"
  },
  "cpqnCommon": {
    "name": "cpqnCommon",
    "oid": "1.3.6.1.4.1.232.121",
    "class": "objectidentity"
  },
  "cpqnMibModules": {
    "name": "cpqnMibModules",
    "oid": "1.3.6.1.4.1.232.121.1",
    "class": "objectidentity"
  },
  "cpqnUnitControl": {
    "name": "cpqnUnitControl",
    "oid": "1.3.6.1.4.1.232.121.2",
    "class": "objectidentity"
  },
  "cpqnVersionInformation": {
    "name": "cpqnVersionInformation",
    "oid": "1.3.6.1.4.1.232.121.3",
    "class": "objectidentity"
  },
  "cpqnAccessControl": {
    "name": "cpqnAccessControl",
    "oid": "1.3.6.1.4.1.232.121.4",
    "class": "objectidentity"
  },
  "cpqnTrapDestinations": {
    "name": "cpqnTrapDestinations",
    "oid": "1.3.6.1.4.1.232.121.5",
    "class": "objectidentity"
  },
  "cpqnNetworkInfo": {
    "name": "cpqnNetworkInfo",
    "oid": "1.3.6.1.4.1.232.121.6",
    "class": "objectidentity"
  },
  "cpqnBootpConfig": {
    "name": "cpqnBootpConfig",
    "oid": "1.3.6.1.4.1.232.121.7",
    "class": "objectidentity"
  },
  "CpqnRowStatus": {
    "name": "CpqnRowStatus",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "row-valid": 1,
          "row-invalid": 2
        }
      }
    }
  },
  "IpxAddress": {
    "name": "IpxAddress",
    "class": "type",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 10,
            "max": 10
          }
        ]
      }
    }
  },
  "cpqnMibModuleTable": {
    "name": "cpqnMibModuleTable",
    "oid": "1.3.6.1.4.1.232.121.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table contains a list of all the MIB modules actively supported by a unit's agent. This includes any standard RFC and Compaq enterprise MIBs."
  },
  "cpqnMibModuleEntry": {
    "name": "cpqnMibModuleEntry",
    "oid": "1.3.6.1.4.1.232.121.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CPQNUNIF-MIB",
        "object": "cpqnMibModuleIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "There is one entry defined for each separate MIB module the agent supports."
  },
  "cpqnMibModuleIndex": {
    "name": "cpqnMibModuleIndex",
    "oid": "1.3.6.1.4.1.232.121.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index for this entry."
  },
  "cpqnMibModuleDescr": {
    "name": "cpqnMibModuleDescr",
    "oid": "1.3.6.1.4.1.232.121.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This is a short textual description of the MIB module for this entry. Examples could be RFC 1213 MIB-II or Compaq Unified MIB."
  },
  "cpqnMibModuleOid": {
    "name": "cpqnMibModuleOid",
    "oid": "1.3.6.1.4.1.232.121.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This is the OID representing the base node of the MIB for this entry. The base node of a MIB is defined here as the first MIB node that is not defined in another MIB. For example, the base node OID for RMON is MIB-II.RMON or 1.3.6.1.2.1.16."
  },
  "cpqnUnitReset": {
    "name": "cpqnUnitReset",
    "oid": "1.3.6.1.4.1.232.121.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "running": 1,
          "reset": 2,
          "warm-start": 3,
          "reset-to-factory-values": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this object to reset(2) causes the unit to reset in the most complete manner possible. Any hardware units that can be reset, will be. If possible, this will be done using a hardware reset; if not, then the unit will perform a software re-initialization. All non-durable information, including counter values, will be lost. All durable information is retained. The value returned for this object will ALWAYS be running(1). After receiving a request to set this variable to reset(2), the unit may delay the reset for a short period. This is done to respond to the SNMP set request. The warm-start(3) setting has the same behavior. Note that not all units support warm-start(3). If not supported, a unit will return a BAD VALUE error. For more information on the meaning and semantics of 'reset' and 'warm-start', see the User's Guide for the unit. Setting this object to reset-to-factory-values(4) will cause all configurable parameters to be reset to the factory settings. Note that all user-configured information will be lost: this includes the system description, passwords, community names, the contents of the access control table (cpqnCommunityAccessTable), and default routes. See the unit's documentation for information on factory settings."
  },
  "cpqnPrimarySerialPort": {
    "name": "cpqnPrimarySerialPort",
    "oid": "1.3.6.1.4.1.232.121.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object indicates which entry in the cpqnSerialPortTable is the primary serial port. For a list of the functions and features provided on a unit's primary serial port, see the unit's documentation."
  },
  "cpqnSerialPortTable": {
    "name": "cpqnSerialPortTable",
    "oid": "1.3.6.1.4.1.232.121.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "There is one entry in this table for each serial port on the unit."
  },
  "cpqnSerialPortEntry": {
    "name": "cpqnSerialPortEntry",
    "oid": "1.3.6.1.4.1.232.121.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CPQNUNIF-MIB",
        "object": "cpqnSPortIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "This entry provides information and objects to control a serial port."
  },
  "cpqnSPortIndex": {
    "name": "cpqnSPortIndex",
    "oid": "1.3.6.1.4.1.232.121.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of this row."
  },
  "cpqnSPortIfIndex": {
    "name": "cpqnSPortIfIndex",
    "oid": "1.3.6.1.4.1.232.121.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object indicates which entry in the MIB-II interface table this serial port corresponds to. If this value is zero (0), then this serial port DOES NOT have an associated MIB-II interface. This object will only be non-zero for serial ports which support SLIP, PPP or a similar protocol."
  },
  "cpqnSPortModemInitStringEnable": {
    "name": "cpqnSPortModemInitStringEnable",
    "oid": "1.3.6.1.4.1.232.121.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: If this object is enabled(1) then after a power up or reset the unit will transmit the modem init string out the primary serial port in order to initialize the modem. This will occur at the baud rate value of cpqnSPortBaudRate. Note that some units have more sophisticated modem support features. For more information on how a unit supports modems, see the unit's documentation."
  },
  "cpqnSPortModemInitString": {
    "name": "cpqnSPortModemInitString",
    "oid": "1.3.6.1.4.1.232.121.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: This object contains a Modem Initialization String which is used to configure a modem on this port to the desired mode. Refer to the unit-specific documentation for information on the factory setting for this object and for other information on how the unit supports modems."
  },
  "cpqnSPortModemAutoNegotiateState": {
    "name": "cpqnSPortModemAutoNegotiateState",
    "oid": "1.3.6.1.4.1.232.121.2.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: If enabled(1), the unit automatically detects the baud rate of incoming calls and will adjust the baud rate on this port to match. This is accomplished by watching for the connect indication strings from a modem attached to the port. For more information on how a unit supports modems, see the unit's documentation."
  },
  "cpqnSPortBaudRate": {
    "name": "cpqnSPortBaudRate",
    "oid": "1.3.6.1.4.1.232.121.2.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: This is the current baud rate for the port. Its value must match a cpqnBaudRate entry in cpqnSupportBaudRateTable. Note that this value can automatically change if cpqnSPortModemAutoNegotiateState is set to enabled(1)."
  },
  "cpqnSupportedBaudRateTable": {
    "name": "cpqnSupportedBaudRateTable",
    "oid": "1.3.6.1.4.1.232.121.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of supported baud rates for this unit."
  },
  "cpqnSupportedBaudRateEntry": {
    "name": "cpqnSupportedBaudRateEntry",
    "oid": "1.3.6.1.4.1.232.121.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CPQNUNIF-MIB",
        "object": "cpqnBaudRatePortIndex",
        "implied": 0
      },
      {
        "module": "CPQNUNIF-MIB",
        "object": "cpqnBaudRateIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "There is one entry defined for each supported baud rate for each serial port."
  },
  "cpqnBaudRatePortIndex": {
    "name": "cpqnBaudRatePortIndex",
    "oid": "1.3.6.1.4.1.232.121.2.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index into the cpqnSerialPortTable table identifying the port this entry applies to."
  },
  "cpqnBaudRateIndex": {
    "name": "cpqnBaudRateIndex",
    "oid": "1.3.6.1.4.1.232.121.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of this row."
  },
  "cpqnBaudRate": {
    "name": "cpqnBaudRate",
    "oid": "1.3.6.1.4.1.232.121.2.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The supported baud rate for the port indexed by cpqnBaudRatePortIndex."
  },
  "CpqnVersionType": {
    "name": "CpqnVersionType",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "hardware": 2,
          "software": 3
        }
      }
    }
  },
  "CpqnVersionStep": {
    "name": "CpqnVersionStep",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "engineering": 2,
          "alpha": 3,
          "beta": 4,
          "prototype": 5,
          "pilot": 6,
          "pre-production": 7,
          "production": 8,
          "post-production": 9,
          "simple-revision": 10
        }
      }
    }
  },
  "cpqnVersionTable": {
    "name": "cpqnVersionTable",
    "oid": "1.3.6.1.4.1.232.121.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table contains a list of hardware and/or software components resident in the unit."
  },
  "cpqnVersionEntry": {
    "name": "cpqnVersionEntry",
    "oid": "1.3.6.1.4.1.232.121.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CPQNUNIF-MIB",
        "object": "cpqnVersionIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "There is one entry defined for each hardware and/or software component."
  },
  "cpqnVersionIndex": {
    "name": "cpqnVersionIndex",
    "oid": "1.3.6.1.4.1.232.121.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index into the version table."
  },
  "cpqnVersionType": {
    "name": "cpqnVersionType",
    "oid": "1.3.6.1.4.1.232.121.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpqnVersionType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The component's type."
  },
  "cpqnVersionDesc": {
    "name": "cpqnVersionDesc",
    "oid": "1.3.6.1.4.1.232.121.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A brief description of the component. This object may be empty."
  },
  "cpqnVersionMajor": {
    "name": "cpqnVersionMajor",
    "oid": "1.3.6.1.4.1.232.121.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MAJOR version number of the component. This is always a value between 0 and 255 and should be interpreted as a decimal number. An example is version 2.14 where 2 is the major version number."
  },
  "cpqnVersionMinor": {
    "name": "cpqnVersionMinor",
    "oid": "1.3.6.1.4.1.232.121.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MINOR version number of the component. This is always a value between 0 and 99 and should be interpreted as a two-digit decimal number. An example is version 2.01 where 1 is the minor version number. Another example is version 2.1 where 10 is the minor version number."
  },
  "cpqnVersionStep": {
    "name": "cpqnVersionStep",
    "oid": "1.3.6.1.4.1.232.121.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpqnVersionStep",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The STEP identifier for the associated component. This value indicates the level or class of the component, such as prototype, production, or beta."
  },
  "cpqnVersionRev": {
    "name": "cpqnVersionRev",
    "oid": "1.3.6.1.4.1.232.121.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The REVISION of the step for the associated component. An example is version 1.00B3 where 3 is the revision number."
  },
  "cpqnVersionSerialNumber": {
    "name": "cpqnVersionSerialNumber",
    "oid": "1.3.6.1.4.1.232.121.3.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this component. The format of this object is dependent on the unit type. Refer to the unit-specific documentation for more information. This object is empty for components which do not have a serial number."
  },
  "cpqnVersionUnitId": {
    "name": "cpqnVersionUnitId",
    "oid": "1.3.6.1.4.1.232.121.3.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This is a number that uniquely identifies which unit in a collection of one or more units that this entry applies to. For example, this unit may be part of a stack, or a plug-in card in a chassis. For units that are not part of a collection (standalone) this value is always a 1."
  },
  "cpqnVersionParentIndex": {
    "name": "cpqnVersionParentIndex",
    "oid": "1.3.6.1.4.1.232.121.3.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A component represented by an entry in this table may be a sub-component of another entity or unit. In this case, the value of this object indicates this entry's parent entry in this table. For example, a plug-in uplink card may be plugged into unit #3 of a stack of repeaters. In this case, this value would contain the index into this table which has a cpqnVersionUnitId of 3. If this entry has no parent, then this object contains the value zero."
  },
  "cpqnAclTelnetControl": {
    "name": "cpqnAclTelnetControl",
    "oid": "1.3.6.1.4.1.232.121.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: This object controls the Telnet feature of the unit. If this object is set to disabled(2), then Telnet is disabled and no Telnet session can be initiated, regardless of the settings of other access control mechanisms. If this object is enabled(1), then Telnet sessions can be initiated and are subject to the other access control mechanisms."
  },
  "cpqnCommunityAccessIPTable": {
    "name": "cpqnCommunityAccessIPTable",
    "oid": "1.3.6.1.4.1.232.121.4.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table contains objects which control access to the agent over IP. Access is restricted to only the hosts listed in this table. If a station does not have read-write-allow-telnet(4) access to a unit, then this table is not accessible, e.g. GET or SET messages accessing this table from stations will have an authentication error returned. GET NEXTs on this MIB from such stations will simply skip over this table. Care must be taken when modifying this table. A network management station can inadvertently modify this table so that it no longer has read-write-allow-telnet(4) access. If this occurs, then this table can only be modified from another network management station with write access, via telnet, or via a direct connection to the unit's primary serial port. Access to this unit via SNMP and Telnet can also be blocked if all the entries in this table and the cpqnCommunityAccessIPXTable are deleted. In this case, this table can only be modified via a direct connection via the primary serial port using the unit's user interface. This table can be set to factory values using the user interface accessed by Telnet or a direct connection to the unit's primary serial port. This table will also be set to factory values when cpqnUnitReset is set to reset-to-factory-values(4)."
  },
  "cpqnCommAccessIPEntry": {
    "name": "cpqnCommAccessIPEntry",
    "oid": "1.3.6.1.4.1.232.121.4.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CPQNUNIF-MIB",
        "object": "cpqnAclIPIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "There is one entry defined for each host-community pair."
  },
  "cpqnAclIPIndex": {
    "name": "cpqnAclIPIndex",
    "oid": "1.3.6.1.4.1.232.121.4.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index to this entry."
  },
  "cpqnAclIPRowStatus": {
    "name": "cpqnAclIPRowStatus",
    "oid": "1.3.6.1.4.1.232.121.4.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpqnRowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The status of this row entry. Rows are added to this table using 'row sets'. When a row is added, this object must be set to row-valid(1). To delete a row from this table, set this object for the row to row-invalid(2). Row sets for new rows with a row status set to row-invalid(2) return a BAD VALUE error. This object will always read as row-valid(1). If no more rows can be added to the end of the table, then a row set to create a new row will return BAD VALUE. When rows are deleted from this table, the indexes of the other rows do not change. In other words, this table can be 'sparse' or have 'holes'. Deleted entries can be re-created using a row set with a row status of row-valid(1)."
  },
  "cpqnAclIPAddrMask": {
    "name": "cpqnAclIPAddrMask",
    "oid": "1.3.6.1.4.1.232.121.4.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: This mask is applied to the source address of received SNMP/IP messages. If the masked address matches cpqnAclIPAddrMatch and the community in the SNMP packet matches the community name in cpqnAclIPCommunity for the row, then the SNMP request will be serviced by the unit's agent. The transmitting node's access to this unit's MIB tables is determined by the cpqnAclIPRights. For example, assuming cpqnAclIPAddrMask = 255.255.255.000, cpqnAclIPAddrMatch = 198.085.034.000, and cpqnAclCommunity = compaq, then a SNMP request coming from 198.85.34.72 with community compaq will pass whereas a request from 120.1.2.4 with community compaq will fail."
  },
  "cpqnAclIPAddrMatch": {
    "name": "cpqnAclIPAddrMatch",
    "oid": "1.3.6.1.4.1.232.121.4.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The Masked address must match this value."
  },
  "cpqnAclIPCommunity": {
    "name": "cpqnAclIPCommunity",
    "oid": "1.3.6.1.4.1.232.121.4.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The community string that is required for any requests coming from this host. The default value for this object is 'public'."
  },
  "cpqnAclIPRights": {
    "name": "cpqnAclIPRights",
    "oid": "1.3.6.1.4.1.232.121.4.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no-access": 1,
          "read-only-prevent-telnet": 2,
          "read-only-allow-telnet": 3,
          "read-write-allow-telnet": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: This object controls the access granted to SNMP requests which match a mask/match and community name string. no-access(1) means that that address/community name pair has neither SNMP/IP nor Telnet access. read-only-prevent-telnet(2) allows only read access to MIB objects and disallows Telnet access. read-only-allow-telnet(3) also allows only read access, but the station can initiate a Telnet session. read-write-allow-telnet(4) allows full access to the device's MIB and allows the station to initiate a Telnet session. NOTE: Telnet access is either allowed or disallowed. Generally, devices do not have read-only telnet sessions. This mechanism does not preclude the use of a password for Telnet access."
  },
  "cpqnCommunityAccessIPXTable": {
    "name": "cpqnCommunityAccessIPXTable",
    "oid": "1.3.6.1.4.1.232.121.4.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table contains objects which control SNMP/IPX access to the agent. Access is restricted to only the hosts listed in this table. If a station does not have read-write(3) access to a unit, then this table is not accessible,e.g. GET or SET messages accessing this table from stations will have an authentication error returned. GET NEXTs on this MIB from such stations will simply skip over this table. Care must be taken when modifying this table. A network management station can inadvertently modify this table so that it no longer has read-write(3) access. If this occurs, then this table can only be modified from another network management station with write access, via telnet, or via a direct connection to the unit's primary serial port. Access to this unit via SNMP and Telnet can also be blocked if all the entries in this table and the cpqnCommunityAccessIPTable are deleted. In this case, this table can only be modified via a direct connection via the primary serial port using the unit's user interface. This table can be set to factory values using the user interface accessed by Telnet or a direct connection to the unit's primary serial port. This table will also be set to factory values when cpqnUnitReset is set to reset-to-factory-values(4)."
  },
  "cpqnCommAccessIPXEntry": {
    "name": "cpqnCommAccessIPXEntry",
    "oid": "1.3.6.1.4.1.232.121.4.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CPQNUNIF-MIB",
        "object": "cpqnAclIPXIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "There is one entry defined for each host-community pair."
  },
  "cpqnAclIPXIndex": {
    "name": "cpqnAclIPXIndex",
    "oid": "1.3.6.1.4.1.232.121.4.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index to this entry."
  },
  "cpqnAclIPXRowStatus": {
    "name": "cpqnAclIPXRowStatus",
    "oid": "1.3.6.1.4.1.232.121.4.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpqnRowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The status of this row entry. Rows are added to this table using 'row sets'. When a row is added, this object must be set to row-valid(1). To delete a row from this table, set this object for the row to row-invalid(2). Row sets for new rows with a row status set to row-invalid(2) return a BAD VALUE error. This object will always read as row-valid(1). If no more rows can be added to the end of the table, then a row set to create a new row will return BAD VALUE. When rows are deleted from this table, the indexes of the other rows do not change. In other words, this table can be 'sparse' or have 'holes'. Deleted entries can be re-created using a row set with a row status of row-valid(1)."
  },
  "cpqnAclIPXAddrMask": {
    "name": "cpqnAclIPXAddrMask",
    "oid": "1.3.6.1.4.1.232.121.4.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpxAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: This mask is applied to the source address of received SNMP messages. If the masked address matches cpqnAclIPXAddrMask and the community in the SNMP packet matches the community name in cpqnAclIPXCommunity for the row, then the SNMP request will be serviced by the unit's agent. The transmitting node's access to this unit's MIB tables is determined by the cpqnAclIPXRights. For example, 0081CCAB:00805FEAE01D is an IPX address which could be matched with a mask of 00FFFFFF:000000000000. Due to the nature of IPX address, the node address of an IPX address mask are simply 0's. This controls SNMP access by IPX network number only."
  },
  "cpqnAclIPXAddrMatch": {
    "name": "cpqnAclIPXAddrMatch",
    "oid": "1.3.6.1.4.1.232.121.4.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpxAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The Masked address must match this value."
  },
  "cpqnAclIPXCommunity": {
    "name": "cpqnAclIPXCommunity",
    "oid": "1.3.6.1.4.1.232.121.4.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The community string that is required for any requests coming from this host. The default value for this object is 'public'."
  },
  "cpqnAclIPXRights": {
    "name": "cpqnAclIPXRights",
    "oid": "1.3.6.1.4.1.232.121.4.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no-access": 1,
          "read-only-access": 2,
          "read-write-access": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: This object controls the access granted to SNMP/IPX requests which match a mask/match and community name string. no-access(1) means that that address/community name pair has no SNMP/IPX access. read-only(2) allows only read access to MIB objects. read-write(3) allows full access to the device's MIB."
  },
  "cpqnIPTrapDestTable": {
    "name": "cpqnIPTrapDestTable",
    "oid": "1.3.6.1.4.1.232.121.5.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of IP trap destination entries."
  },
  "cpqnIPTrapDestEntry": {
    "name": "cpqnIPTrapDestEntry",
    "oid": "1.3.6.1.4.1.232.121.5.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CPQNUNIF-MIB",
        "object": "cpqnIPTrapDestIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A destination entry which defines the IP address to which traps are sent for a community."
  },
  "cpqnIPTrapDestIndex": {
    "name": "cpqnIPTrapDestIndex",
    "oid": "1.3.6.1.4.1.232.121.5.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A value that uniquely identifies this IPTrapDestEntry."
  },
  "cpqnIPTrapDestRowStatus": {
    "name": "cpqnIPTrapDestRowStatus",
    "oid": "1.3.6.1.4.1.232.121.5.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpqnRowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The status of this row entry. Rows are added to this table using 'row sets'. When a row is added, this object must be set to row-valid(1). To delete a row from this table, set this object for the row to row-invalid(2). Row sets for new rows with a row status set to row-invalid(2) return a BAD VALUE error. This object will always read as row-valid(1). If no more rows can be added to the end of the table, then a row set to create a new row will return BAD VALUE. When rows are deleted from this table, the indexes of the other rows do not change. In other words, this table can be 'sparse' or have 'holes'. Deleted entries can be re-created using a row set with a row status of row-valid(1)."
  },
  "cpqnIPTrapDestCommunity": {
    "name": "cpqnIPTrapDestCommunity",
    "oid": "1.3.6.1.4.1.232.121.5.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: A community name to which this destination IP address belongs."
  },
  "cpqnIPTrapDestAddress": {
    "name": "cpqnIPTrapDestAddress",
    "oid": "1.3.6.1.4.1.232.121.5.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The IP address to send traps to on behalf of this entry."
  },
  "cpqnIPXTrapDestTable": {
    "name": "cpqnIPXTrapDestTable",
    "oid": "1.3.6.1.4.1.232.121.5.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of IPX trap destination entries."
  },
  "cpqnIPXTrapDestEntry": {
    "name": "cpqnIPXTrapDestEntry",
    "oid": "1.3.6.1.4.1.232.121.5.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CPQNUNIF-MIB",
        "object": "cpqnIPXTrapDestIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A destination entry which defines the IPX address to which traps are sent for a community."
  },
  "cpqnIPXTrapDestIndex": {
    "name": "cpqnIPXTrapDestIndex",
    "oid": "1.3.6.1.4.1.232.121.5.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A value that uniquely identifies this IPXTrapDestEntry."
  },
  "cpqnIPXTrapDestRowStatus": {
    "name": "cpqnIPXTrapDestRowStatus",
    "oid": "1.3.6.1.4.1.232.121.5.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpqnRowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The status of this row entry. Rows are added to this table using 'row sets'. When a row is added, this object must be set to row-valid(1). To delete a row from this table, set this object for the row to row-invalid(2). Row sets for new rows with a row status set to row-invalid(2) return a BAD VALUE error. This object will always read as row-valid(1). If no more rows can be added to the end of the table, then a row set to create a new row will return BAD VALUE. When rows are deleted from this table, the indexes of the other rows do not change. In other words, this table can be 'sparse' or have 'holes'. Deleted entries can be re-created using a row set with a row status of row-valid(1)."
  },
  "cpqnIPXTrapDestCommunity": {
    "name": "cpqnIPXTrapDestCommunity",
    "oid": "1.3.6.1.4.1.232.121.5.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: A community name to which this destination IPX address belongs."
  },
  "cpqnIPXTrapDestAddress": {
    "name": "cpqnIPXTrapDestAddress",
    "oid": "1.3.6.1.4.1.232.121.5.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpxAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The IPX address to send traps to on behalf of this entry. IPX traps are sent to the standard IPX SNMP socket number."
  },
  "cpqnIpNetworkTable": {
    "name": "cpqnIpNetworkTable",
    "oid": "1.3.6.1.4.1.232.121.6.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table describes IP network information for each management agent interface. This could include all possible bridge groups and the SLIP interface"
  },
  "cpqnIpNetworkEntry": {
    "name": "cpqnIpNetworkEntry",
    "oid": "1.3.6.1.4.1.232.121.6.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CPQNUNIF-MIB",
        "object": "cpqnIpIfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "There is one entry for each agent interface which describes the IP protocol information on that interface."
  },
  "cpqnIpIfIndex": {
    "name": "cpqnIpIfIndex",
    "oid": "1.3.6.1.4.1.232.121.6.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This is the ifIndex value of an interface in the MIB-II interface table for which this table entry applies."
  },
  "cpqnIpPhysAddr": {
    "name": "cpqnIpPhysAddr",
    "oid": "1.3.6.1.4.1.232.121.6.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The physical address of the management agent interface. This is usually an interfaces IEEE MAC Address. For IEEE MAC address, the value will be 6 bytes in network byte order. For interfaces which do not have such physical address (e.g., SLIP interfaces), this object will one zero byte."
  },
  "cpqnIpAddr": {
    "name": "cpqnIpAddr",
    "oid": "1.3.6.1.4.1.232.121.6.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The IP Address of this Agent interface."
  },
  "cpqnIpNetMask": {
    "name": "cpqnIpNetMask",
    "oid": "1.3.6.1.4.1.232.121.6.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The IP Subnet Mask of this Agent interface."
  },
  "cpqnIpRouter": {
    "name": "cpqnIpRouter",
    "oid": "1.3.6.1.4.1.232.121.6.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The IP Address of the next hop Router (default Gateway) used by this interface."
  },
  "cpqnIpFrameType": {
    "name": "cpqnIpFrameType",
    "oid": "1.3.6.1.4.1.232.121.6.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "not-applicable": 1,
          "ethernet-ii": 2,
          "ieee-802-2-snap": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: Except when booting up, an agent communicates over IP using a single frame type defining the type of network that the IP traffic is running on: Ethernet_II or IEEE 802.2_SNAP. When the agent is performing BOOTP, it may not assume any frame type and can attempt to BOOTP over both types. (see cpqnBootpEnable) It will use the frame type that the first BOOTP response uses for the rest of its communication. The frame type of the BOOTP response will be stored by this object. For interfaces that do not have an Ethernet frame type, e.g., the serial port, the frame type is always not-applicable(1)."
  },
  "cpqnIpAutoDiscoveryStatus": {
    "name": "cpqnIpAutoDiscoveryStatus",
    "oid": "1.3.6.1.4.1.232.121.6.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "discover": 1,
          "do-not-discover": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: This object allows a user to enable the unit to send out periodic ICMP Pings to ensure that the unit's IP Address is contained in the ARP cache of its default gateway (cpqnIpRouter, if any!). If the user sets the state to discover(1), then the unit will issue ICMP Pings at a rate defined by cpqnIpPingPacketRate. If the user selects do-not-discover(2) then the unit does not send any ICMP Pings and may not be autodiscovered by IP based management applications."
  },
  "cpqnIpPingPktRate": {
    "name": "cpqnIpPingPktRate",
    "oid": "1.3.6.1.4.1.232.121.6.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 55,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: This object determines the rate (in seconds) at which ICMP Pings are sent out by the unit to ensure that its IP Address remains in the ARP cache of the unit's default gateway (cpqnIpRouter). This object is useful only if cpqnIPAutoDiscoveryStatus is set to discover(1)."
  },
  "cpqnIpInfoSave": {
    "name": "cpqnIpInfoSave",
    "oid": "1.3.6.1.4.1.232.121.6.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ignore-changes": 1,
          "write-changes-to-nvram": 2,
          "values-changed": 3,
          "values-valid": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this object allows the changes made to any of the settable objects in this table to be written into non-volatile memory. The changes will not take effect nor be written into non-volatile memory until this object is set; therefore, until that time, the changes are stored but not used. This object will return values-valid(4) unless some object has been changed but the changes were not written to non-volatile memory. In this case it will return values-changed(3) until the changes are written to non-volatile memory."
  },
  "cpqnIpxNetworkTable": {
    "name": "cpqnIpxNetworkTable",
    "oid": "1.3.6.1.4.1.232.121.6.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table describes IPX network information for each agent interface."
  },
  "cpqnIpxNetworkEntry": {
    "name": "cpqnIpxNetworkEntry",
    "oid": "1.3.6.1.4.1.232.121.6.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CPQNUNIF-MIB",
        "object": "cpqnIpxIfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "There is one entry for each agent interface which describes the IPX protocol information on that interface."
  },
  "cpqnIpxIfIndex": {
    "name": "cpqnIpxIfIndex",
    "oid": "1.3.6.1.4.1.232.121.6.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This is the ifIndex value of an interface in the MIB-II interface table for which this table entry applies."
  },
  "cpqnIpxPhysAddr": {
    "name": "cpqnIpxPhysAddr",
    "oid": "1.3.6.1.4.1.232.121.6.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The physical address of the management agent interface. This is usually an interfaces IEEE MAC Address. For IEEE MAC address, the value will be 6 bytes in network byte order. For interfaces which do not have such physical address (e.g., SLIP interfaces), this object will one zero byte."
  },
  "cpqnIpxFrameType": {
    "name": "cpqnIpxFrameType",
    "oid": "1.3.6.1.4.1.232.121.6.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "not-applicable": 1,
          "ethernet-ii": 2,
          "ethernet-802-3-raw": 3,
          "ieee-802-2": 4,
          "ieee-802-2-snap": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The frame type with which IPX communication originating from the unit will take place. The unit will respond to a packet using the same frame type as was used in the request. This frame type comes into effect on any packet that is generated by the unit not in response to another external packet. An example is a SNMP Trap."
  },
  "cpqnIpxNetworkNumber": {
    "name": "cpqnIpxNetworkNumber",
    "oid": "1.3.6.1.4.1.232.121.6.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "DURABLE: The IPX Network number for this interface. If this object is 00000000, then the unit has not yet determined the network number."
  },
  "cpqnIpxSAPBcastStatus": {
    "name": "cpqnIpxSAPBcastStatus",
    "oid": "1.3.6.1.4.1.232.121.6.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "do-ipx-SAPs": 1,
          "no-ipx-SAPs": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: The unit may generate IPX SAP broadcasts. This allows the unit to be auto-discovered. By setting this object to do-ipx-SAPs(1), the unit will generate SAP broadcasts at a rate of one every 60 seconds. By setting this object to no-ipx-SAPs(2), the hub will not generate SAP broadcasts."
  },
  "cpqnBootpTable": {
    "name": "cpqnBootpTable",
    "oid": "1.3.6.1.4.1.232.121.7.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of BOOTP configuration information for each management agent interface. This table controls the BOOTP behavior of the basic booting system. Other software components installed in a unit may also do BOOTP. This table does not control those components."
  },
  "cpqnBootpEntry": {
    "name": "cpqnBootpEntry",
    "oid": "1.3.6.1.4.1.232.121.7.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "CPQNUNIF-MIB",
        "object": "cpqnBootpIfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A list of BOOTP configuration information for each management agent interface."
  },
  "cpqnBootpIfIndex": {
    "name": "cpqnBootpIfIndex",
    "oid": "1.3.6.1.4.1.232.121.7.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This is the ifIndex value of an interface in the MIB-II interface table for which this table entry applies."
  },
  "cpqnBootpEnable": {
    "name": "cpqnBootpEnable",
    "oid": "1.3.6.1.4.1.232.121.7.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disable-bootp": 1,
          "enable-bootp-ethernet-ii": 2,
          "enable-bootp-ieee-802-2-snap": 3,
          "enable-bootp-both": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: This object allows the user to enable/disable generation of BOOTP requests on the interface specified by cpqnBootpIfIndex. BOOTP requests can be generated over the SNAP frame type, Ethernet-II frame type, or both."
  },
  "cpqnBootpRetries": {
    "name": "cpqnBootpRetries",
    "oid": "1.3.6.1.4.1.232.121.7.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: This determines the number of BOOTP requests that will be transmitted from the interface indicated by cpqnBootpIfIndex. This object is used in conjunction with the cpqnBootpRetryInterval object. If both frame types are enabled, then for each try, two BOOTP frames will be generated, one for each frame type. WARNING: Remember that while the unit is booting up, management may not be available, so be careful in selecting the number of retries and the interval for BOOTP. If these values are large, then the SNMP agent could be delayed in starting up by a significant time."
  },
  "cpqnBootpRetryInterval": {
    "name": "cpqnBootpRetryInterval",
    "oid": "1.3.6.1.4.1.232.121.7.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 5,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DURABLE: This object allows the user to set the time period (in seconds) between the transmission of BOOTP requests on the interface specified by cpqnBootpIfIndex. This object is used in conjunction with the cpqnBootpRetries object. WARNING: Remember that while the unit is booting up, management may not be available, so be careful in selecting the number of retries and the interval for BOOTP. If these values are large, then the SNMP agent could be delayed in starting up by a significant time."
  },
  "cpqnBootpServerIpAddr": {
    "name": "cpqnBootpServerIpAddr",
    "oid": "1.3.6.1.4.1.232.121.7.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address of the BOOTP Server that last responded on the interface indicated by cpqnBootpIfIndex. If no BOOTP server has responded, then this object will be '0.0.0.0'."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/unified.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 15:27:42 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "CPQNUNIF-MIB"
  }
}