{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "Integer32",
      "NOTIFICATION-TYPE",
      "OBJECT-TYPE",
      "IpAddress",
      "Gauge32",
      "OBJECT-IDENTITY",
      "Bits",
      "MibIdentifier",
      "MODULE-IDENTITY",
      "TimeTicks",
      "Unsigned32",
      "Counter32",
      "Counter64",
      "iso"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "org": {
    "name": "org",
    "oid": "1.3",
    "class": "objectidentity"
  },
  "dod": {
    "name": "dod",
    "oid": "1.3.6",
    "class": "objectidentity"
  },
  "internet": {
    "name": "internet",
    "oid": "1.3.6.1",
    "class": "objectidentity"
  },
  "private": {
    "name": "private",
    "oid": "1.3.6.1.4",
    "class": "objectidentity"
  },
  "enterprises": {
    "name": "enterprises",
    "oid": "1.3.6.1.4.1",
    "class": "objectidentity"
  },
  "bintec": {
    "name": "bintec",
    "oid": "1.3.6.1.4.1.272",
    "class": "objectidentity"
  },
  "bibo": {
    "name": "bibo",
    "oid": "1.3.6.1.4.1.272.4",
    "class": "objectidentity"
  },
  "biboip": {
    "name": "biboip",
    "oid": "1.3.6.1.4.1.272.4.5",
    "class": "objectidentity"
  },
  "ipDns": {
    "name": "ipDns",
    "oid": "1.3.6.1.4.1.272.4.5.20",
    "class": "objectidentity"
  },
  "ipDnsDhcpAssign": {
    "name": "ipDnsDhcpAssign",
    "oid": "1.3.6.1.4.1.272.4.5.20.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "self": 2,
          "global": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable determines the assignment policy, when a BinTec router acts as a DHCP-server and is asked for nameserver addresses. Possible values: none (1), -- Donut send any nameserver -addresses self (2), -- Send own address as the only nameserver global(3) -- Send ns-addresses from global admin table."
  },
  "ipDnsIpcpAssign": {
    "name": "ipDnsIpcpAssign",
    "oid": "1.3.6.1.4.1.272.4.5.20.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "self": 2,
          "global": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable determines the assignment policy, when a BinTec router is asked for nameservers during IPCP negotiation. Possible values: none (1), -- Donut send any nameserver addresses self (2), -- Send own address as the only nameserver global(3) -- Send ns-addresses from global admin table."
  },
  "ipDnsUsePosCache": {
    "name": "ipDnsUsePosCache",
    "oid": "1.3.6.1.4.1.272.4.5.20.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Decides, whether positive caching is performed or not."
  },
  "ipDnsUseNegCache": {
    "name": "ipDnsUseNegCache",
    "oid": "1.3.6.1.4.1.272.4.5.20.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Decides, whether negative caching is performed or not."
  },
  "ipDnsMaxCacheSize": {
    "name": "ipDnsMaxCacheSize",
    "oid": "1.3.6.1.4.1.272.4.5.20.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Defines the maximum number of entries in the DNS table. If this limit is reached, the dynamic entries are discarded according to the lru order, if a new entry is to be added."
  },
  "ipDnsPositiveTtl": {
    "name": "ipDnsPositiveTtl",
    "oid": "1.3.6.1.4.1.272.4.5.20.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The time to live used for a positive cache entry, if the responding nameserver does not tell it explicitly (i.e. TTL=0)."
  },
  "ipDnsNegativeTtl": {
    "name": "ipDnsNegativeTtl",
    "oid": "1.3.6.1.4.1.272.4.5.20.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The time to live used for negative cache entries."
  },
  "ipDnsDefaultIfIndex": {
    "name": "ipDnsDefaultIfIndex",
    "oid": "1.3.6.1.4.1.272.4.5.20.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The index of the interface (from the pppTable) whose nameserver should be requested by default, if nothing else works. -1 defines no default interface for DNS forwarding."
  },
  "ipDnsNumReceives": {
    "name": "ipDnsNumReceives",
    "oid": "1.3.6.1.4.1.272.4.5.20.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets received."
  },
  "ipDnsNumInvalids": {
    "name": "ipDnsNumInvalids",
    "oid": "1.3.6.1.4.1.272.4.5.20.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of invalid packets received."
  },
  "ipDnsNumRequests": {
    "name": "ipDnsNumRequests",
    "oid": "1.3.6.1.4.1.272.4.5.20.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of questions received. If a packet is received, this variable is incremented by the number of question records contained in the packet."
  },
  "ipDnsNumCacheHits": {
    "name": "ipDnsNumCacheHits",
    "oid": "1.3.6.1.4.1.272.4.5.20.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times a question could be answered immediately due to a cache entry."
  },
  "ipDnsNumForwards": {
    "name": "ipDnsNumForwards",
    "oid": "1.3.6.1.4.1.272.4.5.20.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of questions forwarded to other name servers."
  },
  "ipDnsNumOks": {
    "name": "ipDnsNumOks",
    "oid": "1.3.6.1.4.1.272.4.5.20.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of requests answered successfully."
  },
  "ipDnsNumFails": {
    "name": "ipDnsNumFails",
    "oid": "1.3.6.1.4.1.272.4.5.20.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of requests answered with a SERVFAIL packet."
  },
  "ipDnsDynamicGlobals": {
    "name": "ipDnsDynamicGlobals",
    "oid": "1.3.6.1.4.1.272.4.5.20.17",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object determines, if the global name servers in table admin are being overwritten each time a name server has been negotiated successfully via IPCP or not Possible values: yes (1), -- Overwrite global name servers each time a -- name server has been negotiated successfully -- via IPCP no (2) -- Never overwrite global name servers."
  },
  "ipDnsTable": {
    "name": "ipDnsTable",
    "oid": "1.3.6.1.4.1.272.4.5.20.16",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Contains both static and temporary entries of DNS records "
  },
  "ipDnsEntry": {
    "name": "ipDnsEntry",
    "oid": "1.3.6.1.4.1.272.4.5.20.16.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-DNS-MIB",
        "object": "ipDnsEntName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Contains either DNS routing-information or DNS-caching- information, depending on the values of the ip-address and interface-index fields"
  },
  "ipDnsEntName": {
    "name": "ipDnsEntName",
    "oid": "1.3.6.1.4.1.272.4.5.20.16.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "DNS-name"
  },
  "ipDnsEntIpaddr": {
    "name": "ipDnsEntIpaddr",
    "oid": "1.3.6.1.4.1.272.4.5.20.16.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The ip-address, 0.0.0.0 for a not resolved or wildcard entry"
  },
  "ipDnsEntIfIndex": {
    "name": "ipDnsEntIfIndex",
    "oid": "1.3.6.1.4.1.272.4.5.20.16.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The index of the interface (from the pppTable) whose nameserver should be requested for this entry. If this field contains a negative value, the static nameservers are queried."
  },
  "ipDnsEntResponse": {
    "name": "ipDnsEntResponse",
    "oid": "1.3.6.1.4.1.272.4.5.20.16.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ignore": 1,
          "negative": 2,
          "positive": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Response for queries matching this entry"
  },
  "ipDnsEntStatic": {
    "name": "ipDnsEntStatic",
    "oid": "1.3.6.1.4.1.272.4.5.20.16.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2,
          "delete": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Determines, whether the entry is static (yes), dynamic(no) (ttl is decremented) or marked for discard (delete)"
  },
  "ipDnsEntTtl": {
    "name": "ipDnsEntTtl",
    "oid": "1.3.6.1.4.1.272.4.5.20.16.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The remaining time-to-live of the entry in seconds. This Field is only used, if the type of the entry is dynamic."
  },
  "ipDnsEntLru": {
    "name": "ipDnsEntLru",
    "oid": "1.3.6.1.4.1.272.4.5.20.16.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This Field is only used, if the type of the entry is dynamic. It is an internal value determining the order, in whch dynamic entries are discarded in case of a full dns table (last-recently-used). Internally, it represents the number of seconds elapsed since 01.01.1970."
  },
  "ipDnsEntHash": {
    "name": "ipDnsEntHash",
    "oid": "1.3.6.1.4.1.272.4.5.20.16.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hash value for the name field. This value is re-compted at boot time and may change due to changing hash algorithms."
  },
  "ipDnsEntRefCount": {
    "name": "ipDnsEntRefCount",
    "oid": "1.3.6.1.4.1.272.4.5.20.16.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Counts the number of times the entry has been referenced. For immediate entries it resembles the number of times a question could be answered due to this entry, for entries pointing to another nameserver, the number of times, the associated interface has been tried to pull up."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/BIANCA-BRICK-DNS-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 15:22:14 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "BIANCA-BRICK-DNS-MIB"
  }
}