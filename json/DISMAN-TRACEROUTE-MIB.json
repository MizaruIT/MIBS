{
  "imports": {
    "class": "imports",
    "DISMAN-PING-MIB": [
      "OperationResponseStatus"
    ],
    "IF-MIB": [
      "InterfaceIndexOrZero"
    ],
    "INET-ADDRESS-MIB": [
      "InetAddressType",
      "InetAddress"
    ],
    "SNMP-FRAMEWORK-MIB": [
      "SnmpAdminString"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE",
      "OBJECT-GROUP"
    ],
    "SNMPv2-SMI": [
      "mib-2",
      "Gauge32",
      "Integer32",
      "OBJECT-IDENTITY",
      "Bits",
      "IpAddress",
      "OBJECT-TYPE",
      "TimeTicks",
      "MibIdentifier",
      "MODULE-IDENTITY",
      "NOTIFICATION-TYPE",
      "Unsigned32",
      "iso",
      "Counter32",
      "Counter64"
    ],
    "SNMPv2-TC": [
      "DateAndTime",
      "TruthValue",
      "TEXTUAL-CONVENTION",
      "RowStatus",
      "DisplayString",
      "StorageType"
    ]
  },
  "traceRouteMIB": {
    "name": "traceRouteMIB",
    "oid": "1.3.6.1.2.1.81",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2000-09-21 00:00",
        "description": "Initial version, published as RFC 2925."
      }
    ],
    "lastupdated": "200009210000Z",
    "organization": "IETF Distributed Management Working Group",
    "contactinfo": "Kenneth White International Business Machines Corporation Network Computing Software Division Research Triangle Park, NC, USA E-mail: wkenneth@us.ibm.com",
    "description": "The Traceroute MIB (DISMAN-TRACEROUTE-MIB) provides access to the traceroute capability at a remote host."
  },
  "traceRouteNotifications": {
    "name": "traceRouteNotifications",
    "oid": "1.3.6.1.2.1.81.0",
    "class": "objectidentity"
  },
  "traceRouteObjects": {
    "name": "traceRouteObjects",
    "oid": "1.3.6.1.2.1.81.1",
    "class": "objectidentity"
  },
  "traceRouteConformance": {
    "name": "traceRouteConformance",
    "oid": "1.3.6.1.2.1.81.2",
    "class": "objectidentity"
  },
  "traceRouteImplementationTypeDomains": {
    "name": "traceRouteImplementationTypeDomains",
    "oid": "1.3.6.1.2.1.81.3",
    "class": "objectidentity"
  },
  "traceRouteUsingUdpProbes": {
    "name": "traceRouteUsingUdpProbes",
    "oid": "1.3.6.1.2.1.81.3.1",
    "class": "objectidentity",
    "status": "current",
    "description": "Indicates that an implementation is using UDP probes to perform the traceroute operation."
  },
  "traceRouteMaxConcurrentRequests": {
    "name": "traceRouteMaxConcurrentRequests",
    "oid": "1.3.6.1.2.1.81.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 10,
        "format": "decimal"
      }
    },
    "units": "requests",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The maximum number of concurrent active traceroute requests that are allowed within an agent implementation. A value of 0 for this object implies that there is no limit for the number of concurrent active requests in effect."
  },
  "traceRouteCtlTable": {
    "name": "traceRouteCtlTable",
    "oid": "1.3.6.1.2.1.81.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Defines the Remote Operations Traceroute Control Table for providing the capability of invoking traceroute from a remote host. The results of traceroute operations can be stored in the traceRouteResultsTable, traceRouteProbeHistoryTable, and the traceRouteHopsTable."
  },
  "traceRouteCtlEntry": {
    "name": "traceRouteCtlEntry",
    "oid": "1.3.6.1.2.1.81.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlOwnerIndex",
        "implied": 0
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlTestName",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Defines an entry in the traceRouteCtlTable. The first index element, traceRouteCtlOwnerIndex, is of type SnmpAdminString, a textual convention that allows for use of the SNMPv3 View-Based Access Control Model (RFC 2575 [11], VACM) and allows an management application to identify its entries. The second index, traceRouteCtlTestName (also an SnmpAdminString), enables the same management application to have multiple requests outstanding."
  },
  "traceRouteCtlOwnerIndex": {
    "name": "traceRouteCtlOwnerIndex",
    "oid": "1.3.6.1.2.1.81.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "To facilitate the provisioning of access control by a security administrator using the View-Based Access Control Model (RFC 2575, VACM) for tables in which multiple users may need to independently create or modify entries, the initial index is used as an 'owner index'. Such an initial index has a syntax of SnmpAdminString, and can thus be trivially mapped to a securityName or groupName as defined in VACM, in accordance with a security policy. When used in conjunction with such a security policy all entries in the table belonging to a particular user (or group) will have the same value for this initial index. For a given user's entries in a particular table, the object identifiers for the information in these entries will have the same subidentifiers (except for the 'column' subidentifier) up to the end of the encoded owner index. To configure VACM to permit access to this portion of the table, one would create vacmViewTreeFamilyTable entries with the value of vacmViewTreeFamilySubtree including the owner index portion, and vacmViewTreeFamilyMask 'wildcarding' the column subidentifier. More elaborate configurations are possible."
  },
  "traceRouteCtlTestName": {
    "name": "traceRouteCtlTestName",
    "oid": "1.3.6.1.2.1.81.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The name of a traceroute test. This is locally unique, within the scope of an traceRouteCtlOwnerIndex."
  },
  "traceRouteCtlTargetAddressType": {
    "name": "traceRouteCtlTargetAddressType",
    "oid": "1.3.6.1.2.1.81.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ipv4",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the type of host address to be used on the traceroute request at the remote host."
  },
  "traceRouteCtlTargetAddress": {
    "name": "traceRouteCtlTargetAddress",
    "oid": "1.3.6.1.2.1.81.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the host address used on the traceroute request at the remote host. The host address type can be determined by the examining the value of the corresponding traceRouteCtlTargetAddressType index element. A value for this object MUST be set prior to transitioning its corresponding traceRouteCtlEntry to active(1) via traceRouteCtlRowStatus."
  },
  "traceRouteCtlByPassRouteTable": {
    "name": "traceRouteCtlByPassRouteTable",
    "oid": "1.3.6.1.2.1.81.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The purpose of this object is to optionally enable bypassing the route table. If enabled, the remote host will bypass the normal routing tables and send directly to a host on an attached network. If the host is not on a directly-attached network, an error is returned. This option can be used to perform the traceroute operation to a local host through an interface that has no route defined (e.g., after the interface was dropped by routed)."
  },
  "traceRouteCtlDataSize": {
    "name": "traceRouteCtlDataSize",
    "oid": "1.3.6.1.2.1.81.1.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65507
          }
        ]
      }
    },
    "units": "octets",
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the size of the data portion of a traceroute request in octets. A traceroute request is essentially transmitted by encoding a UDP datagram into a IP packet. So subtracting the size of a UDP header (8 octets) and the size of a IP header (20 octets) yields a maximum of 65507 octets."
  },
  "traceRouteCtlTimeOut": {
    "name": "traceRouteCtlTimeOut",
    "oid": "1.3.6.1.2.1.81.1.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 60
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 3,
        "format": "decimal"
      }
    },
    "units": "seconds",
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the time-out value, in seconds, for a traceroute request."
  },
  "traceRouteCtlProbesPerHop": {
    "name": "traceRouteCtlProbesPerHop",
    "oid": "1.3.6.1.2.1.81.1.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 3,
        "format": "decimal"
      }
    },
    "units": "probes",
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the number of times to reissue a traceroute request with the same time-to-live (TTL) value."
  },
  "traceRouteCtlPort": {
    "name": "traceRouteCtlPort",
    "oid": "1.3.6.1.2.1.81.1.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 33434,
        "format": "decimal"
      }
    },
    "units": "UDP Port",
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the UDP port to send the traceroute request to. Need to specify a port that is not in use at the destination (target) host. The default value for this object is the IANA assigned port, 33434, for the traceroute function."
  },
  "traceRouteCtlMaxTtl": {
    "name": "traceRouteCtlMaxTtl",
    "oid": "1.3.6.1.2.1.81.1.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 30,
        "format": "decimal"
      }
    },
    "units": "time-to-live value",
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the maximum time-to-live value."
  },
  "traceRouteCtlDSField": {
    "name": "traceRouteCtlDSField",
    "oid": "1.3.6.1.2.1.81.1.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "reference": "Refer to RFC 2474 for the definition of the Differentiated Services Field and to RFC 1812 Section 5.3.2 for Type of Service (TOS).",
    "status": "current",
    "description": "Specifies the value to store in the Differentiated Services (DS) Field in the IP packet used to encapsulate the traceroute probe. The DS Field is defined as the Type of Service (TOS) octet in a IPv4 header or as the Traffic Class octet in a IPv6 header. The value of this object must be a decimal integer in the range from 0 to 255. This option can be used to determine what effect an explicit DS Field setting has on a traceroute response. Not all values are legal or meaningful. DS Field usage is often not supported by IP implementations. A value of 0 means that the function represented by this option is not supported. Useful TOS octet values are probably '16' (low delay) and '8' ( high throughput)."
  },
  "traceRouteCtlSourceAddressType": {
    "name": "traceRouteCtlSourceAddressType",
    "oid": "1.3.6.1.2.1.81.1.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "unknown",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the type of the source address, traceRouteCtlSourceAddress, to be used at a remote host when performing a traceroute operation."
  },
  "traceRouteCtlSourceAddress": {
    "name": "traceRouteCtlSourceAddress",
    "oid": "1.3.6.1.2.1.81.1.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Use the specified IP address (which must be given as an IP number, not a hostname) as the source address in outgoing probe packets. On hosts with more than one IP address, this option can be used to force the source address to be something other than the primary IP address of the interface the probe packet is sent on. If the IP address is not one of this machine's interface addresses, an error is returned and nothing is sent. A zero length octet string value for this object disables source address specification. The address type (InetAddressType) that relates to this object is specified by the corresponding value of traceRouteCtlSourceAddressType."
  },
  "traceRouteCtlIfIndex": {
    "name": "traceRouteCtlIfIndex",
    "oid": "1.3.6.1.2.1.81.1.2.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Setting this object to an interface's ifIndex prior to starting a remote traceroute operation directs the traceroute probes to be transmitted over the specified interface. A value of zero for this object implies that this option is not enabled."
  },
  "traceRouteCtlMiscOptions": {
    "name": "traceRouteCtlMiscOptions",
    "oid": "1.3.6.1.2.1.81.1.2.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Enables an application to specify implementation dependent options."
  },
  "traceRouteCtlMaxFailures": {
    "name": "traceRouteCtlMaxFailures",
    "oid": "1.3.6.1.2.1.81.1.2.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 5,
        "format": "decimal"
      }
    },
    "units": "timeouts",
    "maxaccess": "read-create",
    "status": "current",
    "description": "The value of this object indicates the maximum number of consecutive timeouts allowed before terminating a remote traceroute request. A value of either 255 (maximum hop count/possible TTL value) or a 0 indicates that the function of terminating a remote traceroute request when a specific number of successive timeouts are detected is disabled."
  },
  "traceRouteCtlDontFragment": {
    "name": "traceRouteCtlDontFragment",
    "oid": "1.3.6.1.2.1.81.1.2.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "This object enables setting of the don't fragment flag (DF) in the IP header for a probe. Use of this object enables performing a manual PATH MTU test."
  },
  "traceRouteCtlInitialTtl": {
    "name": "traceRouteCtlInitialTtl",
    "oid": "1.3.6.1.2.1.81.1.2.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The value of this object specifies the initial TTL value to use. This enables bypassing the initial (often well known) portion of a path."
  },
  "traceRouteCtlFrequency": {
    "name": "traceRouteCtlFrequency",
    "oid": "1.3.6.1.2.1.81.1.2.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "seconds",
    "maxaccess": "read-create",
    "status": "current",
    "description": "The number of seconds to wait before repeating a traceroute test as defined by the value of the various objects in the corresponding row. The number of hops in a single traceroute test is determined by the value of the corresponding traceRouteCtlProbesPerHop object. After a single test completes the number of seconds as defined by the value of traceRouteCtlFrequency MUST elapse before the next traceroute test is started. A value of 0 for this object implies that the test as defined by the corresponding entry will not be repeated."
  },
  "traceRouteCtlStorageType": {
    "name": "traceRouteCtlStorageType",
    "oid": "1.3.6.1.2.1.81.1.2.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "nonVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The storage type for this conceptual row. Conceptual rows having the value 'permanent' need not allow write-access to any columnar objects in the row."
  },
  "traceRouteCtlAdminStatus": {
    "name": "traceRouteCtlAdminStatus",
    "oid": "1.3.6.1.2.1.81.1.2.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "disabled",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Reflects the desired state that an traceRouteCtlEntry should be in: enabled(1) - Attempt to activate the test as defined by this traceRouteCtlEntry. disabled(2) - Deactivate the test as defined by this traceRouteCtlEntry. Refer to the corresponding traceRouteResultsOperStatus to determine the operational state of the test defined by this entry."
  },
  "traceRouteCtlDescr": {
    "name": "traceRouteCtlDescr",
    "oid": "1.3.6.1.2.1.81.1.2.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "00",
        "format": "hex"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The purpose of this object is to provide a descriptive name of the remote traceroute test."
  },
  "traceRouteCtlMaxRows": {
    "name": "traceRouteCtlMaxRows",
    "oid": "1.3.6.1.2.1.81.1.2.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 50,
        "format": "decimal"
      }
    },
    "units": "rows",
    "maxaccess": "read-create",
    "status": "current",
    "description": "The maximum number of entries allowed in the traceRouteProbeHistoryTable. An implementation of this MIB will remove the oldest entry in the traceRouteProbeHistoryTable to allow the addition of an new entry once the number of rows in the traceRouteProbeHistoryTable reaches this value. Old entries are not removed when a new test is started. Entries are added to the traceRouteProbeHistoryTable until traceRouteCtlMaxRows is reached before entries begin to be removed. A value of 0 for this object disables creation of traceRouteProbeHistoryTable entries."
  },
  "traceRouteCtlTrapGeneration": {
    "name": "traceRouteCtlTrapGeneration",
    "oid": "1.3.6.1.2.1.81.1.2.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "pathChange": 0,
        "testFailure": 1,
        "testCompletion": 2
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The value of this object determines when and if to to generate a notification for this entry: pathChange(0) - Generate a traceRoutePathChange notification when the current path varies from a previously determined path. testFailure(1) - Generate a traceRouteTestFailed notification when the full path to a target can't be determined. testCompletion(2) - Generate a traceRouteTestCompleted notification when the path to a target has been determined. The value of this object defaults to zero, indicating that none of the above options have been selected."
  },
  "traceRouteCtlCreateHopsEntries": {
    "name": "traceRouteCtlCreateHopsEntries",
    "oid": "1.3.6.1.2.1.81.1.2.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The current path for a traceroute test is kept in the traceRouteHopsTable on a per hop basis when the value of this object is true(1)."
  },
  "traceRouteCtlType": {
    "name": "traceRouteCtlType",
    "oid": "1.3.6.1.2.1.81.1.2.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "(1, 3, 6, 1, 2, 1, 81, 3, 1)",
        "format": "oid"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The value of this object is used either to report or select the implementation method to be used for performing a traceroute operation. The value of this object may be selected from traceRouteImplementationTypeDomains. Additional implementation types should be allocated as required by implementers of the DISMAN-TRACEROUTE-MIB under their enterprise specific registration point and not beneath traceRouteImplementationTypeDomains."
  },
  "traceRouteCtlRowStatus": {
    "name": "traceRouteCtlRowStatus",
    "oid": "1.3.6.1.2.1.81.1.2.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "reference": "See definition of RowStatus in RFC 2579, 'Textual Conventions for SMIv2.'",
    "status": "current",
    "description": "This object allows entries to be created and deleted in the traceRouteCtlTable. Deletion of an entry in this table results in all corresponding (same traceRouteCtlOwnerIndex and traceRouteCtlTestName index values) traceRouteResultsTable, traceRouteProbeHistoryTable, and traceRouteHopsTable entries being deleted. A value MUST be specified for traceRouteCtlTargetAddress prior to a transition to active(1) state being accepted. Activation of a remote traceroute operation is controlled via traceRouteCtlAdminStatus and not by transitioning of this object's value to active(1). Transitions in and out of active(1) state are not allowed while an entry's traceRouteResultsOperStatus is active(1) with the exception that deletion of an entry in this table by setting its RowStatus object to destroy(6) will stop an active traceroute operation. The operational state of an traceroute operation can be determined by examination of the corresponding traceRouteResultsOperStatus object."
  },
  "traceRouteResultsTable": {
    "name": "traceRouteResultsTable",
    "oid": "1.3.6.1.2.1.81.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Defines the Remote Operations Traceroute Results Table for keeping track of the status of a traceRouteCtlEntry. An entry is added to the traceRouteResultsTable when an traceRouteCtlEntry is started by successful transition of its traceRouteCtlAdminStatus object to enabled(1). An entry is removed from the traceRouteResultsTable when its corresponding traceRouteCtlEntry is deleted."
  },
  "traceRouteResultsEntry": {
    "name": "traceRouteResultsEntry",
    "oid": "1.3.6.1.2.1.81.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlOwnerIndex",
        "implied": 0
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlTestName",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Defines an entry in the traceRouteResultsTable. The traceRouteResultsTable has the same indexing as the traceRouteCtlTable in order for a traceRouteResultsEntry to correspond to the traceRouteCtlEntry that caused it to be created."
  },
  "traceRouteResultsOperStatus": {
    "name": "traceRouteResultsOperStatus",
    "oid": "1.3.6.1.2.1.81.1.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Reflects the operational state of an traceRouteCtlEntry: enabled(1) - Test is active. disabled(2) - Test has stopped."
  },
  "traceRouteResultsCurHopCount": {
    "name": "traceRouteResultsCurHopCount",
    "oid": "1.3.6.1.2.1.81.1.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type"
    },
    "units": "hops",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Reflects the current TTL value (range from 1 to 255) for a remote traceroute operation. Maximum TTL value is determined by traceRouteCtlMaxTtl."
  },
  "traceRouteResultsCurProbeCount": {
    "name": "traceRouteResultsCurProbeCount",
    "oid": "1.3.6.1.2.1.81.1.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge32",
      "class": "type"
    },
    "units": "probes",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Reflects the current probe count (1..10) for a remote traceroute operation. The maximum probe count is determined by traceRouteCtlProbesPerHop."
  },
  "traceRouteResultsIpTgtAddrType": {
    "name": "traceRouteResultsIpTgtAddrType",
    "oid": "1.3.6.1.2.1.81.1.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This objects indicates the type of address stored in the corresponding traceRouteResultsIpTgtAddr object."
  },
  "traceRouteResultsIpTgtAddr": {
    "name": "traceRouteResultsIpTgtAddr",
    "oid": "1.3.6.1.2.1.81.1.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This objects reports the IP address associated with a traceRouteCtlTargetAddress value when the destination address is specified as a DNS name. The value of this object should be a zero length octet string when a DNS name is not specified or when a specified DNS name fails to resolve."
  },
  "traceRouteResultsTestAttempts": {
    "name": "traceRouteResultsTestAttempts",
    "oid": "1.3.6.1.2.1.81.1.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "tests",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The current number of attempts to determine a path to a target. The value of this object MUST be started at 0."
  },
  "traceRouteResultsTestSuccesses": {
    "name": "traceRouteResultsTestSuccesses",
    "oid": "1.3.6.1.2.1.81.1.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "tests",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The current number of attempts to determine a path to a target that have succeeded. The value of this object MUST be reported as 0 when no attempts have succeeded."
  },
  "traceRouteResultsLastGoodPath": {
    "name": "traceRouteResultsLastGoodPath",
    "oid": "1.3.6.1.2.1.81.1.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The date and time when the last complete path was determined."
  },
  "traceRouteProbeHistoryTable": {
    "name": "traceRouteProbeHistoryTable",
    "oid": "1.3.6.1.2.1.81.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Defines the Remote Operations Traceroute Results Table for storing the results of a traceroute operation. An implementation of this MIB will remove the oldest entry in the traceRouteProbeHistoryTable to allow the addition of an new entry once the number of rows in the traceRouteProbeHistoryTable reaches the value specified by traceRouteCtlMaxRows."
  },
  "traceRouteProbeHistoryEntry": {
    "name": "traceRouteProbeHistoryEntry",
    "oid": "1.3.6.1.2.1.81.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlOwnerIndex",
        "implied": 0
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlTestName",
        "implied": 0
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteProbeHistoryIndex",
        "implied": 0
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteProbeHistoryHopIndex",
        "implied": 0
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteProbeHistoryProbeIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Defines a table for storing the results of a traceroute operation. Entries in this table are limited by the value of the corresponding traceRouteCtlMaxRows object. The first two index elements identify the traceRouteCtlEntry that a traceRouteProbeHistoryEntry belongs to. The third index element selects a single traceroute operation result. The fourth and fifth indexes select the hop and the probe for a particular traceroute operation."
  },
  "traceRouteProbeHistoryIndex": {
    "name": "traceRouteProbeHistoryIndex",
    "oid": "1.3.6.1.2.1.81.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "An entry in this table is created when the result of a traceroute probe is determined. The initial 2 instance identifier index values identify the traceRouteCtlEntry that a probe result (traceRouteProbeHistoryEntry) belongs to. An entry is removed from this table when its corresponding traceRouteCtlEntry is deleted. An implementation MUST start assigning traceRouteProbeHistoryIndex values at 1 and wrap after exceeding the maximum possible value as defined by the limit of this object ('ffffffff'h)."
  },
  "traceRouteProbeHistoryHopIndex": {
    "name": "traceRouteProbeHistoryHopIndex",
    "oid": "1.3.6.1.2.1.81.1.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Indicates which hop in a traceroute path that the probe's results are for. The value of this object is initially determined by the value of traceRouteCtlInitialTtl."
  },
  "traceRouteProbeHistoryProbeIndex": {
    "name": "traceRouteProbeHistoryProbeIndex",
    "oid": "1.3.6.1.2.1.81.1.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Indicates the index of a probe for a particular hop in a traceroute path. The number of probes per hop is determined by the value of the corresponding traceRouteCtlProbesPerHop object."
  },
  "traceRouteProbeHistoryHAddrType": {
    "name": "traceRouteProbeHistoryHAddrType",
    "oid": "1.3.6.1.2.1.81.1.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This objects indicates the type of address stored in the corresponding traceRouteProbeHistoryHAddr object."
  },
  "traceRouteProbeHistoryHAddr": {
    "name": "traceRouteProbeHistoryHAddr",
    "oid": "1.3.6.1.2.1.81.1.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The address of a hop in a traceroute path. This object is not allowed to be a DNS name. The value of the corresponding object, traceRouteProbeHistoryHAddrType, indicates this object's IP address type."
  },
  "traceRouteProbeHistoryResponse": {
    "name": "traceRouteProbeHistoryResponse",
    "oid": "1.3.6.1.2.1.81.1.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "milliseconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "The amount of time measured in milliseconds from when a probe was sent to when its response was received or when it timed out. The value of this object is reported as 0 when it is not possible to transmit a probe."
  },
  "traceRouteProbeHistoryStatus": {
    "name": "traceRouteProbeHistoryStatus",
    "oid": "1.3.6.1.2.1.81.1.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OperationResponseStatus",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The result of a traceroute operation made by a remote host for a particular probe."
  },
  "traceRouteProbeHistoryLastRC": {
    "name": "traceRouteProbeHistoryLastRC",
    "oid": "1.3.6.1.2.1.81.1.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The last implementation method specific reply code received. Traceroute is usually implemented by transmitting a series of probe packets with increasing time-to-live values. A probe packet is a UDP datagram encapsulated into an IP packet. Each hop in a path to the target (destination) host rejects the probe packets (probe's TTL too small, ICMP reply) until either the maximum TTL is exceeded or the target host is received."
  },
  "traceRouteProbeHistoryTime": {
    "name": "traceRouteProbeHistoryTime",
    "oid": "1.3.6.1.2.1.81.1.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Timestamp for when this probe results were determined."
  },
  "traceRouteHopsTable": {
    "name": "traceRouteHopsTable",
    "oid": "1.3.6.1.2.1.81.1.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Defines the Remote Operations Traceroute Hop Table for keeping track of the results of traceroute tests on a per hop basis."
  },
  "traceRouteHopsEntry": {
    "name": "traceRouteHopsEntry",
    "oid": "1.3.6.1.2.1.81.1.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlOwnerIndex",
        "implied": 0
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlTestName",
        "implied": 0
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteHopsHopIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Defines an entry in the traceRouteHopsTable. The first two index elements identify the traceRouteCtlEntry that a traceRouteHopsEntry belongs to. The third index element, traceRouteHopsHopIndex, selects a hop in a traceroute path."
  },
  "traceRouteHopsHopIndex": {
    "name": "traceRouteHopsHopIndex",
    "oid": "1.3.6.1.2.1.81.1.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Specifies the hop index for a traceroute hop. Values for this object with respect to the same traceRouteCtlOwnerIndex and traceRouteCtlTestName MUST start at 1 and increase monotonically. The traceRouteHopsTable keeps the current traceroute path per traceRouteCtlEntry if enabled by setting the corresponding traceRouteCtlCreateHopsEntries to true(1). All hops (traceRouteHopsTable entries) in a traceroute path MUST be updated at the same time when a traceroute operation completes. Care needs to be applied when either a path changes or can't be determined. The initial portion of the path, up to the first hop change, MUST retain the same traceRouteHopsHopIndex values. The remaining portion of the path SHOULD be assigned new traceRouteHopsHopIndex values."
  },
  "traceRouteHopsIpTgtAddressType": {
    "name": "traceRouteHopsIpTgtAddressType",
    "oid": "1.3.6.1.2.1.81.1.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This objects indicates the type of address stored in the corresponding traceRouteHopsIpTargetAddress object."
  },
  "traceRouteHopsIpTgtAddress": {
    "name": "traceRouteHopsIpTgtAddress",
    "oid": "1.3.6.1.2.1.81.1.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object reports the IP address associated with the hop. A value for this object should be reported as a numeric IP address and not as a DNS name."
  },
  "traceRouteHopsMinRtt": {
    "name": "traceRouteHopsMinRtt",
    "oid": "1.3.6.1.2.1.81.1.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The minimum traceroute round-trip-time (RTT) received for this hop. A value of 0 for this object implies that no RTT has been received."
  },
  "traceRouteHopsMaxRtt": {
    "name": "traceRouteHopsMaxRtt",
    "oid": "1.3.6.1.2.1.81.1.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum traceroute round-trip-time (RTT) received for this hop. A value of 0 for this object implies that no RTT has been received."
  },
  "traceRouteHopsAverageRtt": {
    "name": "traceRouteHopsAverageRtt",
    "oid": "1.3.6.1.2.1.81.1.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The current average traceroute round-trip-time (RTT) for this hop."
  },
  "traceRouteHopsRttSumOfSquares": {
    "name": "traceRouteHopsRttSumOfSquares",
    "oid": "1.3.6.1.2.1.81.1.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object contains the sum of all traceroute responses received for this hop. Its purpose is to enable standard deviation calculation."
  },
  "traceRouteHopsSentProbes": {
    "name": "traceRouteHopsSentProbes",
    "oid": "1.3.6.1.2.1.81.1.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The value of this object reflects the number of probes sent for this hop during this traceroute test. The value of this object should start at 0."
  },
  "traceRouteHopsProbeResponses": {
    "name": "traceRouteHopsProbeResponses",
    "oid": "1.3.6.1.2.1.81.1.5.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Number of responses received for this hop during this traceroute test. This value of this object should start at 0."
  },
  "traceRouteHopsLastGoodProbe": {
    "name": "traceRouteHopsLastGoodProbe",
    "oid": "1.3.6.1.2.1.81.1.5.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DateAndTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Date and time was the last response was received for a probe for this hop during this traceroute test."
  },
  "traceRoutePathChange": {
    "name": "traceRoutePathChange",
    "oid": "1.3.6.1.2.1.81.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlTargetAddressType"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlTargetAddress"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteResultsIpTgtAddrType"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteResultsIpTgtAddr"
      }
    ],
    "status": "current",
    "description": "The path to a target has changed."
  },
  "traceRouteTestFailed": {
    "name": "traceRouteTestFailed",
    "oid": "1.3.6.1.2.1.81.0.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlTargetAddressType"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlTargetAddress"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteResultsIpTgtAddrType"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteResultsIpTgtAddr"
      }
    ],
    "status": "current",
    "description": "Could not determine the path to a target."
  },
  "traceRouteTestCompleted": {
    "name": "traceRouteTestCompleted",
    "oid": "1.3.6.1.2.1.81.0.3",
    "class": "notificationtype",
    "objects": [
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlTargetAddressType"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlTargetAddress"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteResultsIpTgtAddrType"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteResultsIpTgtAddr"
      }
    ],
    "status": "current",
    "description": "The path to a target has just been determined."
  },
  "traceRouteCompliances": {
    "name": "traceRouteCompliances",
    "oid": "1.3.6.1.2.1.81.2.1",
    "class": "objectidentity"
  },
  "traceRouteGroups": {
    "name": "traceRouteGroups",
    "oid": "1.3.6.1.2.1.81.2.2",
    "class": "objectidentity"
  },
  "traceRouteCompliance": {
    "name": "traceRouteCompliance",
    "oid": "1.3.6.1.2.1.81.2.1.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "traceRouteGroup",
        "module": "DISMAN-TRACEROUTE-MIB"
      },
      {
        "object": "traceRouteTimeStampGroup",
        "module": "DISMAN-TRACEROUTE-MIB"
      },
      {
        "object": "traceRouteNotificationsGroup",
        "module": "DISMAN-TRACEROUTE-MIB"
      },
      {
        "object": "traceRouteHopsTableGroup",
        "module": "DISMAN-TRACEROUTE-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for the DISMAN-TRACEROUTE-MIB."
  },
  "traceRouteGroup": {
    "name": "traceRouteGroup",
    "oid": "1.3.6.1.2.1.81.2.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteMaxConcurrentRequests"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlTargetAddressType"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlTargetAddress"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlByPassRouteTable"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlDataSize"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlTimeOut"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlProbesPerHop"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlPort"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlMaxTtl"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlDSField"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlSourceAddressType"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlSourceAddress"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlIfIndex"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlMiscOptions"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlMaxFailures"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlDontFragment"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlInitialTtl"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlFrequency"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlStorageType"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlAdminStatus"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlMaxRows"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlTrapGeneration"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlDescr"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlCreateHopsEntries"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlType"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteCtlRowStatus"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteResultsOperStatus"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteResultsCurHopCount"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteResultsCurProbeCount"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteResultsIpTgtAddrType"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteResultsIpTgtAddr"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteResultsTestAttempts"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteResultsTestSuccesses"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteProbeHistoryHAddrType"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteProbeHistoryHAddr"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteProbeHistoryResponse"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteProbeHistoryStatus"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteProbeHistoryLastRC"
      }
    ],
    "status": "current",
    "description": "The group of objects that comprise the remote traceroute operation."
  },
  "traceRouteTimeStampGroup": {
    "name": "traceRouteTimeStampGroup",
    "oid": "1.3.6.1.2.1.81.2.2.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteResultsLastGoodPath"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteProbeHistoryTime"
      }
    ],
    "status": "current",
    "description": "The group of DateAndTime objects."
  },
  "traceRouteNotificationsGroup": {
    "name": "traceRouteNotificationsGroup",
    "oid": "1.3.6.1.2.1.81.2.2.3",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRoutePathChange"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteTestFailed"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteTestCompleted"
      }
    ],
    "status": "current",
    "description": "The notifications which are required to be supported by implementations of this MIB."
  },
  "traceRouteHopsTableGroup": {
    "name": "traceRouteHopsTableGroup",
    "oid": "1.3.6.1.2.1.81.2.2.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteHopsIpTgtAddressType"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteHopsIpTgtAddress"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteHopsMinRtt"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteHopsMaxRtt"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteHopsAverageRtt"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteHopsRttSumOfSquares"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteHopsSentProbes"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteHopsProbeResponses"
      },
      {
        "module": "DISMAN-TRACEROUTE-MIB",
        "object": "traceRouteHopsLastGoodProbe"
      }
    ],
    "status": "current",
    "description": "The group of objects that comprise the traceRouteHopsTable."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/rfc2925.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 15:50:07 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "DISMAN-TRACEROUTE-MIB"
  }
}