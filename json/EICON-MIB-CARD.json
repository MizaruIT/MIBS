{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-MIB": [
      "sysName"
    ],
    "SNMPv2-SMI": [
      "Counter64",
      "TRAP-TYPE",
      "TimeTicks",
      "OBJECT-IDENTITY",
      "Unsigned32",
      "enterprises",
      "OBJECT-TYPE",
      "Integer32",
      "MODULE-IDENTITY",
      "IpAddress",
      "Bits",
      "NOTIFICATION-TYPE",
      "iso",
      "Counter32",
      "Gauge32",
      "MibIdentifier"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "eicon": {
    "name": "eicon",
    "oid": "1.3.6.1.4.1.434",
    "class": "objectidentity"
  },
  "management": {
    "name": "management",
    "oid": "1.3.6.1.4.1.434.2",
    "class": "objectidentity"
  },
  "mibv2": {
    "name": "mibv2",
    "oid": "1.3.6.1.4.1.434.2.2",
    "class": "objectidentity"
  },
  "module": {
    "name": "module",
    "oid": "1.3.6.1.4.1.434.2.2.4",
    "class": "objectidentity"
  },
  "card": {
    "name": "card",
    "oid": "1.3.6.1.4.1.434.2.2.2",
    "class": "objectidentity"
  },
  "OperState": {
    "name": "OperState",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "disabled": 2,
          "ready": 3,
          "active": 4,
          "busy": 5
        }
      }
    }
  },
  "CardAdminState": {
    "name": "CardAdminState",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "start": 1,
          "stop": 2,
          "dump": 3,
          "test": 4,
          "invalid": 5,
          "reset": 6
        }
      }
    }
  },
  "ActionState": {
    "name": "ActionState",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "done": 1,
          "failed": 2,
          "in-progress": 3
        }
      }
    }
  },
  "EiconCardType": {
    "name": "EiconCardType",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ect-NONE": 1,
          "ect-PC-NA": 2,
          "ect-PC-DNA": 3,
          "ect-PC-SPNA": 4,
          "ect-MC-SPCC": 5,
          "ect-PC-DPNA": 6,
          "ect-PC-EC": 7,
          "ect-PC-ECHSI": 8,
          "ect-PC-QPNA": 9,
          "ect-PC-MPNA": 10,
          "ect-MC-EC": 11,
          "ect-MC-HSI": 12,
          "ect-XX-DIGI": 13,
          "ect-MC-IMC": 14,
          "ect-PC-IMC": 15,
          "ect-MC-MPNA": 16,
          "ect-PC-HSI1M": 17,
          "ect-MC-HSI1M": 18,
          "ect-NB-HSI1M": 19,
          "ect-PC-EC1M": 20,
          "ect-MC-EC1M": 21,
          "ect-NB-EC1M": 22,
          "ect-NB-IMC": 23,
          "ect-NB-SPCC": 24,
          "ect-NB-EC": 25,
          "ect-PC-ACC8": 26,
          "ect-PC-ISDN": 27,
          "ect-PC-DPNA2M": 28,
          "ect-PC-MPNA2M": 29,
          "ect-MC-MPNA2M": 30,
          "ect-MC-SPCC2": 31,
          "ect-PP-IMC": 32,
          "ect-MC-ISDN": 33,
          "ect-PP-EC": 34,
          "ect-PC-HSI2": 35,
          "ect-PC-S51": 36,
          "ect-PC-S52": 37
        }
      }
    }
  },
  "CardRef": {
    "name": "CardRef",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 6
          }
        ]
      }
    }
  },
  "PortRef": {
    "name": "PortRef",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 48
          }
        ]
      }
    }
  },
  "PositiveInteger": {
    "name": "PositiveInteger",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    }
  },
  "cardNumberOfCards": {
    "name": "cardNumberOfCards",
    "oid": "1.3.6.1.4.1.434.2.2.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "PositiveInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of EiconCards seen by the Agent."
  },
  "cardTable": {
    "name": "cardTable",
    "oid": "1.3.6.1.4.1.434.2.2.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The table of EiconCards as seen by the agent."
  },
  "cardEntry": {
    "name": "cardEntry",
    "oid": "1.3.6.1.4.1.434.2.2.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "EICON-MIB-CARD",
        "object": "cardIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The set of attributes for one EiconCard."
  },
  "cardIndex": {
    "name": "cardIndex",
    "oid": "1.3.6.1.4.1.434.2.2.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CardRef",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The ID of the EiconCard provided by the local administrator"
  },
  "cardName": {
    "name": "cardName",
    "oid": "1.3.6.1.4.1.434.2.2.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The name of the EiconCard given by the local administration."
  },
  "cardType": {
    "name": "cardType",
    "oid": "1.3.6.1.4.1.434.2.2.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "EiconCardType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The type of the EiconCard. The value '0' indicates that the row is invalid."
  },
  "cardOperState": {
    "name": "cardOperState",
    "oid": "1.3.6.1.4.1.434.2.2.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OperState",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The EiconCard operational state."
  },
  "cardAdminStateCtr": {
    "name": "cardAdminStateCtr",
    "oid": "1.3.6.1.4.1.434.2.2.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CardAdminState",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The administrative state of the EiconCard. Management station can modify the value of that parameter in order to perform a specific action on the EiconCard. Value 'start' is used to start the EiconCard, value 'stop' is used to stop the EiconCard. Value 'dump' is used to dump the EiconCard and value 'test' is used to test the EiconCard hardware. Before the EiconCard is started, the Agent will read the name of the configuration file directory to be used from the srvDomainConfigDir. Agent will respond to that request immediately and start the action. The Management station will poll the cardActionState variable to find out the results of the action and the cardActionError variable to find the error code in the case of the action failure. If the action produces an output file, then the mib variable cardActionOutputFile has to be initialized by the Management station."
  },
  "cardDomainConfigDirName": {
    "name": "cardDomainConfigDirName",
    "oid": "1.3.6.1.4.1.434.2.2.2.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The name of the directory in the ESS from which the current configuration file of the card has been taken. The Agent will intialize this value (equal to srvDomainConfigDir) after the card has been successfully started."
  },
  "cardLoadTime": {
    "name": "cardLoadTime",
    "oid": "1.3.6.1.4.1.434.2.2.2.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time elapsed in seconds since the card was loaded."
  },
  "cardActionState": {
    "name": "cardActionState",
    "oid": "1.3.6.1.4.1.434.2.2.2.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ActionState",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the operation performed on the card by the Agent as a result of setting the values to the cardAdminStateCtr. The Management station will poll that variable after initiating an action on the card. The value done(1) indicates that the action terminated successfully. The value failed(2) indicates that the action terminated with an error. In this case the variable cardActionError indicates the error code."
  },
  "cardActionError": {
    "name": "cardActionError",
    "oid": "1.3.6.1.4.1.434.2.2.2.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The error code displayed by an unsuccessful operation."
  },
  "cardActionOutputFile": {
    "name": "cardActionOutputFile",
    "oid": "1.3.6.1.4.1.434.2.2.2.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The name of file which contains the output of the requested action, ex. 'dump' or 'test'. The default filename is dump<x> or test<x>; where <x> is the card number"
  },
  "cardProtocols": {
    "name": "cardProtocols",
    "oid": "1.3.6.1.4.1.434.2.2.2.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The mask indicating which protocols are installed on the card. snapc=0x10, snafm=0x20, appc=0x40, llc=0x80, xport_iso=0x200, xport_tgx=0x400, netview=0x800"
  },
  "cardHardwareTable": {
    "name": "cardHardwareTable",
    "oid": "1.3.6.1.4.1.434.2.2.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The table of the EiconCards as seen by the Agent."
  },
  "cardHardwareEntry": {
    "name": "cardHardwareEntry",
    "oid": "1.3.6.1.4.1.434.2.2.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "EICON-MIB-CARD",
        "object": "cardHardCardRef",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The set of hardware attributes for each card."
  },
  "cardHardCardRef": {
    "name": "cardHardCardRef",
    "oid": "1.3.6.1.4.1.434.2.2.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CardRef",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The ID of the EiconCard that should match the cardIndex from the cardTable."
  },
  "cardHardMemAddr": {
    "name": "cardHardMemAddr",
    "oid": "1.3.6.1.4.1.434.2.2.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The EiconCard memory segment address."
  },
  "cardHardIoAddr": {
    "name": "cardHardIoAddr",
    "oid": "1.3.6.1.4.1.434.2.2.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 9999
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The EiconCard IO address."
  },
  "cardHardIntrLevel": {
    "name": "cardHardIntrLevel",
    "oid": "1.3.6.1.4.1.434.2.2.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 99
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The EiconCard interrupt level."
  },
  "cardHardNbOfPorts": {
    "name": "cardHardNbOfPorts",
    "oid": "1.3.6.1.4.1.434.2.2.2.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PortRef",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of ports on the EiconCard."
  },
  "cardHardSlotNumber": {
    "name": "cardHardSlotNumber",
    "oid": "1.3.6.1.4.1.434.2.2.2.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot number for MicroChannel."
  },
  "cardHardVersion": {
    "name": "cardHardVersion",
    "oid": "1.3.6.1.4.1.434.2.2.2.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hardware version of the EiconCard."
  },
  "cardHardSerialNb": {
    "name": "cardHardSerialNb",
    "oid": "1.3.6.1.4.1.434.2.2.2.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PositiveInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The EiconCard serial number."
  },
  "cardHardComponents": {
    "name": "cardHardComponents",
    "oid": "1.3.6.1.4.1.434.2.2.2.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The names of special hardware components."
  },
  "cardSoftwareTable": {
    "name": "cardSoftwareTable",
    "oid": "1.3.6.1.4.1.434.2.2.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The table of all software modules (.elm) that are configured for all EiconCards seen by the Agent. The configuration file from the directory srvProductLocalDirName will be used by the Agent to provide that information"
  },
  "cardSoftwareEntry": {
    "name": "cardSoftwareEntry",
    "oid": "1.3.6.1.4.1.434.2.2.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "EICON-MIB-CARD",
        "object": "cardSoftCardRef",
        "implied": 0
      },
      {
        "module": "EICON-MIB-CARD",
        "object": "cardSoftModuleIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The set of attributes for one software module and one card."
  },
  "cardSoftCardRef": {
    "name": "cardSoftCardRef",
    "oid": "1.3.6.1.4.1.434.2.2.2.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CardRef",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The ID of the EiconCard; should match the cardIndex from the cardTable."
  },
  "cardSoftModuleIndex": {
    "name": "cardSoftModuleIndex",
    "oid": "1.3.6.1.4.1.434.2.2.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PositiveInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The module index number given by the Agent."
  },
  "cardSoftModuleName": {
    "name": "cardSoftModuleName",
    "oid": "1.3.6.1.4.1.434.2.2.2.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The module name."
  },
  "cardSoftVersion": {
    "name": "cardSoftVersion",
    "oid": "1.3.6.1.4.1.434.2.2.2.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The module version string found inside the module."
  },
  "cardSoftDateProd": {
    "name": "cardSoftDateProd",
    "oid": "1.3.6.1.4.1.434.2.2.2.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The module production date found inside the module."
  },
  "cardSoftRealSize": {
    "name": "cardSoftRealSize",
    "oid": "1.3.6.1.4.1.434.2.2.2.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PositiveInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The module size (in bytes). If the value is '0' then this entry is invalid."
  },
  "cardBiosSessionTable": {
    "name": "cardBiosSessionTable",
    "oid": "1.3.6.1.4.1.434.2.2.2.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The table of all sessions handled by the BIOS task for all cards."
  },
  "cardBiosSessionEntry": {
    "name": "cardBiosSessionEntry",
    "oid": "1.3.6.1.4.1.434.2.2.2.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "EICON-MIB-CARD",
        "object": "cardBiosSsnCardRef",
        "implied": 0
      },
      {
        "module": "EICON-MIB-CARD",
        "object": "cardBiosSsnIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The set of attributes for one session and one card."
  },
  "cardBiosSsnCardRef": {
    "name": "cardBiosSsnCardRef",
    "oid": "1.3.6.1.4.1.434.2.2.2.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CardRef",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The ID of the EiconCard; should match the cardIndex from the cardTable."
  },
  "cardBiosSsnIndex": {
    "name": "cardBiosSsnIndex",
    "oid": "1.3.6.1.4.1.434.2.2.2.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PositiveInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The session index given by the Agent."
  },
  "cardBiosSsnLsn": {
    "name": "cardBiosSsnLsn",
    "oid": "1.3.6.1.4.1.434.2.2.2.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PositiveInteger",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The logical (BIOS) session number."
  },
  "cardBiosSsnPortRef": {
    "name": "cardBiosSsnPortRef",
    "oid": "1.3.6.1.4.1.434.2.2.2.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PortRef",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The reference of the port where the session is established; should match the portIndex from the portTable."
  },
  "cardBiosSsnOperState": {
    "name": "cardBiosSsnOperState",
    "oid": "1.3.6.1.4.1.434.2.2.2.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "listening": 2,
          "calling": 3,
          "connected": 4,
          "hangingup": 5,
          "hungup": 6,
          "aborted": 7,
          "wait-for-user": 8
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the session."
  },
  "cardBiosSsnProtocol": {
    "name": "cardBiosSsnProtocol",
    "oid": "1.3.6.1.4.1.434.2.2.2.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "sdlc": 2,
          "snapc": 3,
          "snafm": 4,
          "appc": 5,
          "dlc": 6,
          "dialer": 7,
          "xportiso": 8,
          "xporttgx": 9,
          "sndcf": 10,
          "x25": 11,
          "hdlc": 12,
          "frbs": 13,
          "conmgr": 14,
          "remoteec": 15
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The protocol used by the session."
  },
  "cardBiosSsnApplName": {
    "name": "cardBiosSsnApplName",
    "oid": "1.3.6.1.4.1.434.2.2.2.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The session Application Name"
  },
  "cardBiosSsnStartTime": {
    "name": "cardBiosSsnStartTime",
    "oid": "1.3.6.1.4.1.434.2.2.2.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time elapsed in seconds since session esablishment time."
  },
  "cardTrapHeartbeatLost": {
    "name": "cardTrapHeartbeatLost",
    "oid": "1.3.6.1.4.1.4340.21",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "EICON-MIB-CARD",
        "object": "cardIndex"
      }
    ],
    "description": "The 'cardTrapHeartbeatLost' trap indicates that a EiconCard stopped sending statics to the Agent."
  },
  "cardTrapStateChange": {
    "name": "cardTrapStateChange",
    "oid": "1.3.6.1.4.1.4340.22",
    "class": "notificationtype",
    "objects": [
      {
        "module": "SNMPv2-MIB",
        "object": "sysName"
      },
      {
        "module": "EICON-MIB-CARD",
        "object": "cardIndex"
      },
      {
        "module": "EICON-MIB-CARD",
        "object": "cardOperState"
      }
    ],
    "description": "The generic Internal trap indicates that the EiconCard has changed state."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/EICON-MIB-CARD.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 18:54:52 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "EICON-MIB-CARD"
  }
}