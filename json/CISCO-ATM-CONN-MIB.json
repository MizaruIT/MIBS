{
  "imports": {
    "class": "imports",
    "ATM-MIB": [
      "AtmTrafficDescrParamIndex",
      "atmVplVpi",
      "atmVclVci",
      "atmVclVpi"
    ],
    "CISCO-ATM-IF-MIB": [
      "NsapAtmAddr"
    ],
    "CISCO-ATM-RM-MIB": [
      "LsPerVcqThresholdGroup"
    ],
    "CISCO-SMI": [
      "ciscoExperiment"
    ],
    "IF-MIB": [
      "ifIndex"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "Bits",
      "Unsigned32",
      "MODULE-IDENTITY",
      "TimeTicks",
      "NOTIFICATION-TYPE",
      "OBJECT-IDENTITY",
      "MibIdentifier",
      "Gauge32",
      "Integer32",
      "IpAddress",
      "Counter32",
      "OBJECT-TYPE",
      "Counter64",
      "iso"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ],
    "SNMPv2-TC-v1": [
      "TruthValue",
      "TimeStamp",
      "RowStatus"
    ]
  },
  "ciscoAtmConnMIB": {
    "name": "ciscoAtmConnMIB",
    "oid": "1.3.6.1.4.1.9.10.13",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBObjects": {
    "name": "ciscoAtmConnMIBObjects",
    "oid": "1.3.6.1.4.1.9.10.13.1",
    "class": "objectidentity"
  },
  "ciscoAtmVpl": {
    "name": "ciscoAtmVpl",
    "oid": "1.3.6.1.4.1.9.10.13.1.1",
    "class": "objectidentity"
  },
  "ciscoAtmVcl": {
    "name": "ciscoAtmVcl",
    "oid": "1.3.6.1.4.1.9.10.13.1.2",
    "class": "objectidentity"
  },
  "ciscoAtmSvp": {
    "name": "ciscoAtmSvp",
    "oid": "1.3.6.1.4.1.9.10.13.1.3",
    "class": "objectidentity"
  },
  "ciscoAtmSvc": {
    "name": "ciscoAtmSvc",
    "oid": "1.3.6.1.4.1.9.10.13.1.4",
    "class": "objectidentity"
  },
  "ciscoAtmSnoopVc": {
    "name": "ciscoAtmSnoopVc",
    "oid": "1.3.6.1.4.1.9.10.13.1.5",
    "class": "objectidentity"
  },
  "ciscoAtmSnoopVp": {
    "name": "ciscoAtmSnoopVp",
    "oid": "1.3.6.1.4.1.9.10.13.1.6",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBConformance": {
    "name": "ciscoAtmConnMIBConformance",
    "oid": "1.3.6.1.4.1.9.10.13.3",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBCompliances": {
    "name": "ciscoAtmConnMIBCompliances",
    "oid": "1.3.6.1.4.1.9.10.13.3.1",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBGroups": {
    "name": "ciscoAtmConnMIBGroups",
    "oid": "1.3.6.1.4.1.9.10.13.3.2",
    "class": "objectidentity"
  },
  "InterfaceIndexOrZero": {
    "name": "InterfaceIndexOrZero",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    }
  },
  "CastType": {
    "name": "CastType",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "pointToPoint": 1,
          "pointToMultiPointRoot": 2,
          "pointToMultiPointLeaf": 3
        }
      }
    }
  },
  "ConfigType": {
    "name": "ConfigType",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "permanent": 2,
          "switch": 3,
          "soft": 4,
          "softPassive": 5
        }
      }
    }
  },
  "SpanType": {
    "name": "SpanType",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "transit": 2,
          "terminate": 3,
          "both": 4
        }
      }
    }
  },
  "EnableStatus": {
    "name": "EnableStatus",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enable": 1,
          "disable": 2
        }
      }
    }
  },
  "UpcStatus": {
    "name": "UpcStatus",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "passing": 1,
          "tagging": 2,
          "dropping": 3,
          "localShaping": 4
        }
      }
    }
  },
  "ConnState": {
    "name": "ConnState",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "setup": 1,
          "release": 2,
          "notInstalled": 3,
          "down": 4,
          "up": 5
        }
      }
    }
  },
  "Location": {
    "name": "Location",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "calling": 2,
          "called": 3
        }
      }
    }
  },
  "Direction": {
    "name": "Direction",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "p2pCallingSide": 2,
          "p2pCalledSide": 3,
          "p2mpRoot": 4,
          "p2mpLeaf": 5
        }
      }
    }
  },
  "SnoopDirType": {
    "name": "SnoopDirType",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "transmit": 1,
          "receive": 2
        }
      }
    }
  },
  "ciscoAtmVplTable": {
    "name": "ciscoAtmVplTable",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The Virtual Path Link extension Table."
  },
  "ciscoAtmVplEntry": {
    "name": "ciscoAtmVplEntry",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      },
      {
        "module": "ATM-MIB",
        "object": "atmVplVpi",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": " An entry in the Vpl table.This entry is used to model a bi-directional Vpl. This table augments the atmVplTable defined in RFC 1695. However it uses ifIndex and atmVplVpi as an Index for historical reasons. The entries are created/deleted as a by-product of creating and deleting entries in the atmVplTable."
  },
  "ciscoAtmVplCastType": {
    "name": "ciscoAtmVplCastType",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CastType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "pointToPoint",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Vpl type is either a point to point connection or point to multipoint root or leaf."
  },
  "ciscoAtmVplSpanType": {
    "name": "ciscoAtmVplSpanType",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SpanType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "transit",
        "format": "enum"
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": " Vpl span is either a transit one or a terminating one."
  },
  "ciscoAtmVplConfigType": {
    "name": "ciscoAtmVplConfigType",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ConfigType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "permanent",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Vpl type is either a PVC, SVC, Soft PVC or Soft Passive half leg. The half leg can be set to Passive through user configuration only."
  },
  "ciscoAtmVplRxUpcMode": {
    "name": "ciscoAtmVplRxUpcMode",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UpcStatus",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "passing",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Usage Parameter Control opeartion is pass,tag,drop or local shaping at this connection."
  },
  "ciscoAtmVplConnState": {
    "name": "ciscoAtmVplConnState",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ConnState",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The connection state of this VPL. "
  },
  "ciscoAtmVplOamLoopbkTxInterval": {
    "name": "ciscoAtmVplOamLoopbkTxInterval",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 5,
            "max": 60
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 5,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Frequency of OAM loopback cells generated."
  },
  "ciscoAtmVplOamSegmentLoopback": {
    "name": "ciscoAtmVplOamSegmentLoopback",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "EnableStatus",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "disable",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable segment loopback on this virtual path."
  },
  "ciscoAtmVplOamEndLoopback": {
    "name": "ciscoAtmVplOamEndLoopback",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "EnableStatus",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "disable",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable end to end loopback on this virtual path."
  },
  "ciscoAtmVplOamAisEnable": {
    "name": "ciscoAtmVplOamAisEnable",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "EnableStatus",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "disable",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable Alarm Indication Signal OAM cell generation if the interafce goes down on a crossconnect virtual path."
  },
  "ciscoAtmVplOamRdiEnable": {
    "name": "ciscoAtmVplOamRdiEnable",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "EnableStatus",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "disable",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable Remote Defect Indication OAM cell generation if an Alarm Indication Signal OAM cell is received."
  },
  "ciscoAtmVplInstallTime": {
    "name": "ciscoAtmVplInstallTime",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time stamp derived from sysUpTime when this VPL gets created. The VPL entries are created/deleted as a by-product of creating and deleting entries in the atmVplTable defined in RFC1695."
  },
  "ciscoAtmVplInCells": {
    "name": "ciscoAtmVplInCells",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells received on this VPL."
  },
  "ciscoAtmVplOutCells": {
    "name": "ciscoAtmVplOutCells",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells transmitted on this VPL."
  },
  "ciscoAtmVplCrossIfIndex": {
    "name": "ciscoAtmVplCrossIfIndex",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "For point to point, this is the cross-connected VPL's ifIndex of this VPL. For point to multi-point connection, this will be the root VPL's ifIndex for a leaf VPL entry in the multicast chain, or it's the 1st leaf for a root VPL entry. If it's zero, it means it's not cross-connected yet. Atomically set ciscoAtmVplConnState, ciscoAtmVplCrossIfIndex and ciscoAtmVplCrossVpi will create or delete a cross connection to crossed half leg of this ciscoAtmVplCrossIfindex and ciscoAtmVplCrossVpi for p2p PVP, or add or drop a multicast connection of this ciscoAtmVplCrossIfindex and ciscoAtmVplCrossVpi to/from the root on the multicast chain for p2mp PVP."
  },
  "ciscoAtmVplCrossVpi": {
    "name": "ciscoAtmVplCrossVpi",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This specifies the VPI value of the VPL to which this VPL is cross-connected. For point to multi-point connection, this is the root VPL's VPI for the leaf entry. Similarly it is the 1st leaf's VPI value for the root entry."
  },
  "ciscoAtmVplNextLeafIfIndex": {
    "name": "ciscoAtmVplNextLeafIfIndex",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "For point to point, this is zero i.e. not used. For point to multi-point connection, this will be the next leaf VPL's ifIndex on the multicast chain. This will be 0 if this is the root VPL entry. If it's zero for a leaf VPL, it means this is the last leaf."
  },
  "ciscoAtmVplNextLeafVpi": {
    "name": "ciscoAtmVplNextLeafVpi",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "For point to point, this is zero i.e. not used. This apply only to point to multi-point connection, this will be the next leaf VPL's VPI on the multicast chain."
  },
  "ciscoAtmVplRemoteAddr": {
    "name": "ciscoAtmVplRemoteAddr",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "NsapAtmAddr",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Soft PVP target address if this is the calling side Soft PVP source address if this is called side. Atomically set ConnState, RemoteAddr and RemoteVpi will create or delete a soft PVP. Atomically set ConnState, RemoteAddr without RemoteVpi will also create or delete a soft PVP but let target switch assign the vpi."
  },
  "ciscoAtmVplRemoteVpi": {
    "name": "ciscoAtmVplRemoteVpi",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Soft PVP target VPI in calling side. 0 in called side."
  },
  "ciscoAtmVplLocation": {
    "name": "ciscoAtmVplLocation",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Location",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicate calling or called side of a soft PVP. If ciscoAtmVplConfigType is not soft then ciscoAtmVplLocation value should be ignored."
  },
  "ciscoAtmVplSlowRetryIntv": {
    "name": "ciscoAtmVplSlowRetryIntv",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Soft PVP slow retry interval time in seconds."
  },
  "ciscoAtmVplNumAttempts": {
    "name": "ciscoAtmVplNumAttempts",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of retries made to install this soft PVP connection. If ciscoAtmVplConfigType is not soft then ciscoAtmVplNumAttempts value should be ignored."
  },
  "ciscoAtmVplLastReleaseCause": {
    "name": "ciscoAtmVplLastReleaseCause",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 127
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "ATM Forum's UNI3.0/3.1 Speicifcation",
    "status": "mandatory",
    "description": "Value of the Cause field of the Cause Information Element in the last Release Signalling message received for this SPVP. Indicates the reason for the Release. ciscoAtmVplConfigType is not soft then ciscoAtmVplLastReleaseCause value should be ignored."
  },
  "ciscoAtmVplLogicalPortDef": {
    "name": "ciscoAtmVplLogicalPortDef",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notLogicalIf": 1,
          "isLogicalIf": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "notLogicalIf",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether the VPC at this VPL interface is an Atm Logical Port interface."
  },
  "ciscoAtmVplLogicalPortIndex": {
    "name": "ciscoAtmVplLogicalPortIndex",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The ifTable index of the Atm logical port interface associated with this VPL. Only valid if the value of atmVplLogicalPortDef is isLogicalIf, and the VPL row is active."
  },
  "ciscoAtmVplUpcViolations": {
    "name": "ciscoAtmVplUpcViolations",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of nonconforming cells detected by Usage Parameter Control (UPC) for cells received on this VPL. On LS1010 systems, this counter is valid only if equipped with the Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVplEpdTpdCellDrops": {
    "name": "ciscoAtmVplEpdTpdCellDrops",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Never implemented."
  },
  "ciscoAtmVplEpdTpdPacketDrops": {
    "name": "ciscoAtmVplEpdTpdPacketDrops",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Never implemented."
  },
  "ciscoAtmVplEpdTpdPacketsIn": {
    "name": "ciscoAtmVplEpdTpdPacketsIn",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Never implemented."
  },
  "ciscoAtmVplClp1Drops": {
    "name": "ciscoAtmVplClp1Drops",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Never implemented."
  },
  "ciscoAtmVplDefaultRxUpcTolerance": {
    "name": "ciscoAtmVplDefaultRxUpcTolerance",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "If the tolerance (CDVT for CBR, ABR, UBR connections, Maximum Burst Size for VBR connectons) requested for Usage Parameter Control is not explicitly specified in VPL creation, this object contains the default that is used. If tolerance is explicitly specified in VPL creation, it can be found in the Traffic Table row specified by atmVplReceiveTrafficDescrIndex, and the value of this object is -1."
  },
  "ciscoAtmVplDefaultRxUpcVbrCdvt": {
    "name": "ciscoAtmVplDefaultRxUpcVbrCdvt",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "If the Cell Delay Variation Tolerance (CDVT) requested for Usage Parameter Control for a VBR connection is not explicitly specified in VPL creation, this object contains the default that is used. If CDVT is explicitly specified in VPL creation, it can be found in the Traffic Table row specified by atmVplReceiveTrafficDescrIndex, and the value of this object is -1."
  },
  "ciscoAtmVplLsPerVcqWrrWeight": {
    "name": "ciscoAtmVplLsPerVcqWrrWeight",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Configure the weighting specified for a VP half-leg within a service class to make the scheduling decision among other active VPLs in the service class. This is for transmit on the VPL on the interface. This parameter only applies to transit VPs. This object is defined only when the switch is equipped with the Lightstream per-VC queueing chipset."
  },
  "ciscoAtmVplLsPerVcqTunnelIsShaped": {
    "name": "ciscoAtmVplLsPerVcqTunnelIsShaped",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Determines whether this is to be a -shaped- VP, per the Lightstream per-VC queueing chipset. If the value specified is TRUE, the VP is to be a shaped VP Tunnel. Such a VP cannot be cross-connected. This object is defined only when the switch is equipped with the Lightstream per-VC queueing chipset."
  },
  "ciscoAtmVplLsPerVcqXmtQueuedCells": {
    "name": "ciscoAtmVplLsPerVcqXmtQueuedCells",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of cells received on this VPL and residing on the per-connection queue. Note that this value is not valid until the VPL is in an active cross-connect. This object is defined only when the switch is equipped with the Lightstream per-VC queueing chipset."
  },
  "ciscoAtmVplLsPerVcQThreshGrp": {
    "name": "ciscoAtmVplLsPerVcQThreshGrp",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LsPerVcqThresholdGroup",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Threshold Group to which the cell-queue for cells received by this VP are queued. This object is defined only when the switch is equipped with the Lightstream per-VC queueing chipset."
  },
  "ciscoAtmVplInClp0Cells": {
    "name": "ciscoAtmVplInClp0Cells",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells with the CLP bit clear received on this VPL. Note that these cells may subsequently be discarded. This counter is valid only: - if the VPL is not a Logical Interface (tunnel). - on LS1010 systems, only those equipped with Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVplInClp1Cells": {
    "name": "ciscoAtmVplInClp1Cells",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells with the CLP bit set received on this VPL. Note that these cells may subsequently be discarded. This counter is valid only: - if the VPL is not a Logical Interface (tunnel). - on LS1010 systems, only those equipped with Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVplOutClp0Cells": {
    "name": "ciscoAtmVplOutClp0Cells",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.39",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells with the CLP bit clear transmitted on this VPL. This counter is valid only: - if the VPL is not a Logical Interface (tunnel). - on LS1010 systems, only those equipped with the Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVplOutClp1Cells": {
    "name": "ciscoAtmVplOutClp1Cells",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.40",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells with the CLP bit set transmitted on this VPL. This counter is valid only: - if the VPL is not a Logical Interface (tunnel). - on LS1010 systems, only those equipped with the Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVplCellDrops": {
    "name": "ciscoAtmVplCellDrops",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.41",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells received on this VPL, but discarded. This counter is valid only: - if the VPL is not a Logical Interface (tunnel). - on LS1010 systems, only those equipped with Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVplClp0VcqFullCellDrops": {
    "name": "ciscoAtmVplClp0VcqFullCellDrops",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.43",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells received on this VPL with the CLP bit clear, discarded because the per-VC queue limit is exceeded. This counter is valid only: - if the VPL is not a Logical Interface (tunnel). - on LS1010 systems, only those equipped with Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVplVcqClpThreshCellDrops": {
    "name": "ciscoAtmVplVcqClpThreshCellDrops",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.44",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells received on this VPL, discarded because the discard threshold (as opposed to the queue-limit) is exceeded on the per-VC queue, and the CLP bit is set. This counter is valid only: - if the VPL is not a Logical Interface (tunnel). - on LS1010 systems, only those equipped with Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVplLsPerVcqTunnelIsHierarchical": {
    "name": "ciscoAtmVplLsPerVcqTunnelIsHierarchical",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.45",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Determines whether this is to be a -Hierarchical- VP, per the Lightstream per-VC queueing chipset. If the value specified is TRUE, the VP is to be a Hierarchical VP Tunnel. Such a VP cannot be cross-connected. This object is defined on a LS1010 only when the switch is equipped with the Lightstream per-VC queueing chipset."
  },
  "ciscoAtmVplRxNegTraffDescrIndex": {
    "name": "ciscoAtmVplRxNegTraffDescrIndex",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.46",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmTrafficDescrParamIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the entry in the atmTrafficDescrParamTable which contains negotiated traffic parameters applied to the receive direction of this VPL. This object is not instantiated if this VPL is not the calling side of a soft VP, or if there was no traffic negotiation."
  },
  "ciscoAtmVplTxNegTraffDescrIndex": {
    "name": "ciscoAtmVplTxNegTraffDescrIndex",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.47",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmTrafficDescrParamIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the entry in the atmTrafficDescrParamTable which contains negotiated traffic parameters applied to the transmit direction of this VPL. This object is not instantiated if this VPL is not the calling side of a soft VP, or if there was no traffic negotiation."
  },
  "ciscoAtmVplSwFabOutCells": {
    "name": "ciscoAtmVplSwFabOutCells",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.48",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells transmitted on this VPL by the Switch Fabric. This object is not instantiated on systems that do not have support for collecting such statistics."
  },
  "ciscoAtmVplSwFabOutClp0Cells": {
    "name": "ciscoAtmVplSwFabOutClp0Cells",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.49",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells with the CLP bit clear transmitted on this VPL by the Switch Fabric. This object is not instantiated for a VPL that is a logical interface (VP Tunnel). This object is not instantiated on systems that do not have support for collecting such statistics."
  },
  "ciscoAtmVplSwFabOutClp1Cells": {
    "name": "ciscoAtmVplSwFabOutClp1Cells",
    "oid": "1.3.6.1.4.1.9.10.13.1.1.1.1.50",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells with the CLP bit set transmitted on this VPL by the Switch Fabric. This object is not instantiated for a VPL that is a logical interface (VP Tunnel). This object is not instantiated on systems that do not have support for collecting such statistics."
  },
  "ciscoAtmVclTable": {
    "name": "ciscoAtmVclTable",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The Virtual Channel Link extension Table."
  },
  "ciscoAtmVclEntry": {
    "name": "ciscoAtmVclEntry",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      },
      {
        "module": "ATM-MIB",
        "object": "atmVclVpi",
        "implied": 0
      },
      {
        "module": "ATM-MIB",
        "object": "atmVclVci",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": " An entry in the Vcl table.This entry is used to model a bi-directional Vcl. This table augments the atmVclTable defined in RFC 1695. However it uses ifIndex, atmVclVpi and atmVclVci as an Index for historical reasons. The entries are created/deleted as a by-product of creating and deleting entries in the atmVclTable."
  },
  "ciscoAtmVclCastType": {
    "name": "ciscoAtmVclCastType",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CastType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "pointToPoint",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Vcl type is either a point to point connection or point to multipoint root or leaf."
  },
  "ciscoAtmVclSpanType": {
    "name": "ciscoAtmVclSpanType",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SpanType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "transit",
        "format": "enum"
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": " Vcl span is either a transit one or a terminating one."
  },
  "ciscoAtmVclConfigType": {
    "name": "ciscoAtmVclConfigType",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ConfigType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "permanent",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Vcl type is either a PVC, SVC, Soft PVC or Soft Passive half leg. The half leg can be set to Passive through user configuration only."
  },
  "ciscoAtmVclRxUpcMode": {
    "name": "ciscoAtmVclRxUpcMode",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UpcStatus",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "passing",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Usage Parameter Control opeartion is pass,tag,drop or local shaping at this connection."
  },
  "ciscoAtmVclEpdEnable": {
    "name": "ciscoAtmVclEpdEnable",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "EnableStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Early Packet Discard opeartion is enabled or disabled specified at this connection."
  },
  "ciscoAtmVclConnState": {
    "name": "ciscoAtmVclConnState",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ConnState",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The connection state of this VCL."
  },
  "ciscoAtmVclOamLoopbkTxInterval": {
    "name": "ciscoAtmVclOamLoopbkTxInterval",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 5,
            "max": 60
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 5,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Frequency of OAM loopback cell are generated on this virtual channel."
  },
  "ciscoAtmVclOamSegmentLoopback": {
    "name": "ciscoAtmVclOamSegmentLoopback",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "EnableStatus",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "disable",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable segment loopback on this virtual channel."
  },
  "ciscoAtmVclOamEndLoopback": {
    "name": "ciscoAtmVclOamEndLoopback",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "EnableStatus",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "disable",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable end to end loopback on this virtual channel."
  },
  "ciscoAtmVclOamAisEnable": {
    "name": "ciscoAtmVclOamAisEnable",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "EnableStatus",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "disable",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable Alarm Indication Signal OAM cell generation if the interafce goes down on a crossconnect virtual channel."
  },
  "ciscoAtmVclOamRdiEnable": {
    "name": "ciscoAtmVclOamRdiEnable",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "EnableStatus",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "disable",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable Remote Defect Indication OAM cell generation if an Alarm Indication Signal OAM cell is received."
  },
  "ciscoAtmVclInstallTime": {
    "name": "ciscoAtmVclInstallTime",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time stamp derived from sysUpTime when this VCL gets created. The VCL entries are created/deleted as a by-product of creating and deleting entries in the atmVclTable defined in RFC1695."
  },
  "ciscoAtmVclInCells": {
    "name": "ciscoAtmVclInCells",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells received on this VCL."
  },
  "ciscoAtmVclOutCells": {
    "name": "ciscoAtmVclOutCells",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells transmitted on this VCL."
  },
  "ciscoAtmVclCrossIfIndex": {
    "name": "ciscoAtmVclCrossIfIndex",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "For point to point, this is the cross-connected VCL's ifIndex of this VCL. For point to multi-point connection, this will be the root VCL's ifIndex for a leaf VCL entry in the multicast chain, or it's the 1st leaf VCL for a root VCL entry. If it's zero, it means it's not cross-connected yet. Atomically set ciscoAtmVclConnState, ciscoAtmVclCrossIfindex, ciscoAtmVclCrossVpi and ciscoAtmVclCrossVci will create or delete a cross connection to crossed half leg of this ciscoAtmVclCrossIfindex, ciscoAtmVclCrossVpi and ciscoAtmVclCrossVci for p2p PVC, or add or drop a multicast connection to/from the root of this ciscoAtmVclCrossIfindex, ciscoAtmVclCrossVpi and ciscoAtmVclCrossVci on the multicast chain for p2mp PVC."
  },
  "ciscoAtmVclCrossVpi": {
    "name": "ciscoAtmVclCrossVpi",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This specifies the VPI value of the VCL to which this VCL is cross-connected. For point to multi-point connection, this is the root VCL's VPI for the leaf entry. Similarly it is the 1st leaf's VPI value for the root entry."
  },
  "ciscoAtmVclCrossVci": {
    "name": "ciscoAtmVclCrossVci",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This specifies the VCI value of the VCL to which this VCL is cross-connected. For point to multi-point connection, this is the root VCL's VCI for the leaf entry. Similarly it is the 1st leaf's VCI value for the root entry."
  },
  "ciscoAtmVclNextLeafIfIndex": {
    "name": "ciscoAtmVclNextLeafIfIndex",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "For point to point, this is zero i.e. not used. For point to multi-point connection, this will be the next leaf VCL's ifIndex on the multicast chain. This will be 0 if this is the root VCL entry. If it's zero for a leaf VCL, it means this is the last leaf."
  },
  "ciscoAtmVclNextLeafVpi": {
    "name": "ciscoAtmVclNextLeafVpi",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "For point to point, this is zero i.e. not used. This apply only to point to multi-point connection, this will be the next leaf VCL's VPI on the multicast chain."
  },
  "ciscoAtmVclNextLeafVci": {
    "name": "ciscoAtmVclNextLeafVci",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "For point to point, this is zero i.e. not used. This apply only to point to multi-point connection, this will be the next leaf VCL's VCI on the multicast chain."
  },
  "ciscoAtmVclAalEncapFlag": {
    "name": "ciscoAtmVclAalEncapFlag",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "aal5Snap": 2,
          "aal5Nlpid": 3,
          "aal5FrNlpid": 4,
          "aal5Mux": 5,
          "aal34Smds": 6,
          "aalQsAal": 7,
          "aal5Ilmi": 8,
          "aal5Lane": 9,
          "aal5Pnni": 10
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Encapsulation type for terminating VC."
  },
  "ciscoAtmVclAalEncapProtocol": {
    "name": "ciscoAtmVclAalEncapProtocol",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "ip": 2,
          "xns": 3,
          "appletalk": 4,
          "clns": 5,
          "decnet": 6,
          "novell": 7,
          "apollo": 8,
          "vines": 9
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Protocol for terminating VC if EncapFlag is aal5Mux."
  },
  "ciscoAtmVclAalUserVcType": {
    "name": "ciscoAtmVclAalUserVcType",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "boxConfigure": 2,
          "busForward": 3,
          "busSend": 4,
          "clientConfigure": 5,
          "clientData": 6,
          "clientDirect": 7,
          "clientDistribute": 8,
          "clientForward": 9,
          "clientSend": 10,
          "configure": 11,
          "serverConfigure": 12,
          "serverDirect": 13,
          "serverDistribute": 14
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Following is the list of user virtual circuit types in case aal5Lane encapusation on this virtual channel. boxConfigure -- The shared Server/Client end of a Configure VCC busForward -- The BUS end of the Data Forward VCC busSend -- The BUS end of the Data Send VCC clientConfigure -- The LE Client end of the Configure Direct VCC clientData -- One end of the Data Direct VCC clientDirect -- The LE Client end of the Control Direct VCC clientDistribute -- The LE Client end of the Control Distribute VCC clientForward -- The LE Client end of the Multicast Forward VCC clientSend -- The LE Client end of the Multicast Send VCC configure -- The Config Server end of any Configure VCC serverConfigure -- The LE Server end of the Configure VCC serverDirect -- The LE Server end of the Control Direct VCC."
  },
  "ciscoAtmVclAtmInArpInterval": {
    "name": "ciscoAtmVclAtmInArpInterval",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 60
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Time interval in minutes to send InArp on a PVC for IP over ATM. 0 will disable the InArp for this pvc."
  },
  "ciscoAtmVclRemoteAddr": {
    "name": "ciscoAtmVclRemoteAddr",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "NsapAtmAddr",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Soft PVC target address if this is the calling side Soft PVC source address if this is called side. Atomically set ConnState, RemoteAddr, RemoteVpi and RemoteVci will create or delete a soft PVC. Atomically set ConnState, RemoteAddr without RemoteVpi, Remote Vci will also create or delete a soft PVC but let target switch assign the vpi and vci."
  },
  "ciscoAtmVclRemoteVpi": {
    "name": "ciscoAtmVclRemoteVpi",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Soft PVC target VPI in calling side. 0 in called side."
  },
  "ciscoAtmVclRemoteVci": {
    "name": "ciscoAtmVclRemoteVci",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Soft PVC target VCI in calling side. 0 in called side."
  },
  "ciscoAtmVclLocation": {
    "name": "ciscoAtmVclLocation",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Location",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicate calling or called side of a soft PVC. If ciscoAtmVclConfigType is not soft then ciscoAtmVclLocation value should be ignored."
  },
  "ciscoAtmVclSlowRetryIntv": {
    "name": "ciscoAtmVclSlowRetryIntv",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Soft PVC slow retry interval in seconds."
  },
  "ciscoAtmVclNumAttempts": {
    "name": "ciscoAtmVclNumAttempts",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of retries made to install this soft PVC connection. If ciscoAtmVclConfigType is not soft then ciscoAtmVclNumAttempts value should be ignored."
  },
  "ciscoAtmVclLastReleaseCause": {
    "name": "ciscoAtmVclLastReleaseCause",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 127
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value of the Cause field of the Cause Information Element in the last Release Signalling message received for this SPVC. Indicates the reason for the Release. ciscoAtmVclConfigType is not soft then ciscoAtmVclLastReleaseCause value should be ignored."
  },
  "ciscoAtmVclUpcViolations": {
    "name": "ciscoAtmVclUpcViolations",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of nonconforming cells detected by Usage Parameter Control (UPC) for cells received on this VCL. On LS1010 systems, this counter is valid only on those equipped with the Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVclEpdTpdCellDrops": {
    "name": "ciscoAtmVclEpdTpdCellDrops",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Never implemented."
  },
  "ciscoAtmVclEpdTpdPacketDrops": {
    "name": "ciscoAtmVclEpdTpdPacketDrops",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of EPD/TPD packet drops of packets received on this VCL. This counter is valid only: - if EPD is enabled on this VCL. - on LS1010 systems, only those equipped with the Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVclEpdTpdPacketsIn": {
    "name": "ciscoAtmVclEpdTpdPacketsIn",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of packets received in their entirety on this VPL. This counter is valid only: - if EPD is enabled on this VCL. - on LS1010 systems, only those equipped with the Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVclClp1Drops": {
    "name": "ciscoAtmVclClp1Drops",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Never implemented."
  },
  "ciscoAtmVclDefaultRxUpcTolerance": {
    "name": "ciscoAtmVclDefaultRxUpcTolerance",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "If the tolerance (CDVT for CBR, ABR, UBR connections, Maximum Burst Size for VBR connectons) requested for Usage Parameter Control is not explicitly specified in VCL creation, this object contains the default that is used.If tolerance is explicitly specified in VCL creation, it can be found in the Traffic Table row specified by atmVclReceiveTrafficDescrIndex, and the value of this object is -1."
  },
  "ciscoAtmVclDefaultRxUpcVbrCdvt": {
    "name": "ciscoAtmVclDefaultRxUpcVbrCdvt",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.39",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "If the Cell Delay Variation Tolerance (CDVT) requested for Usage Parameter Control for a VBR connection is not explicitly specified in VCL creation, this object contains the default that is used. If CDVT is explicitly specified in VCL creation, it can be found in the Traffic Table row specified by atmVclReceiveTrafficDescrIndex, and the value of this object is -1."
  },
  "ciscoAtmVclLsPerVcqWrrWeight": {
    "name": "ciscoAtmVclLsPerVcqWrrWeight",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.40",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Configure the weighting specified for a VC half-leg within a service class to make the scheduling decision among other active VCLs in the service class. This is for transmit on the VCL on the interface. This object is defined only when the switch is equipped with the Lightstream per-VC queueing chipset."
  },
  "ciscoAtmVclLsPerVcqXmtQueuedCells": {
    "name": "ciscoAtmVclLsPerVcqXmtQueuedCells",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.41",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of cells received on this VCL and residing on the per-connection queue. Note that this value is not valid until the VCL is in an active cross-connect. This object is defined only when the switch is equipped with the Lightstream per-VC queueing chipset."
  },
  "ciscoAtmVclLsPerVcQThreshGrp": {
    "name": "ciscoAtmVclLsPerVcQThreshGrp",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.42",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LsPerVcqThresholdGroup",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Threshold Group to which the cell-queue for cells received by this VC are queued. Note that this value is not valid until the VCL is in an active cross-connect. This object is defined only when the switch is equipped with the Lightstream per-VC queueing chipset."
  },
  "ciscoAtmVclInClp0Cells": {
    "name": "ciscoAtmVclInClp0Cells",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.43",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells with the CLP bit clear received on this VCL. Note that these cells may subsequently be discarded. This counter is valid only: - on LS1010 systems, only those equipped with Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVclInClp1Cells": {
    "name": "ciscoAtmVclInClp1Cells",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.44",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells with the CLP bit set received on this VCL. Note that these cells may subsequently be discarded. This counter is valid only: - on LS1010 systems, only those equipped with Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVclOutClp0Cells": {
    "name": "ciscoAtmVclOutClp0Cells",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.45",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells with the CLP bit clear transmitted on this VCL. This counter is valid only: - on LS1010 systems, only those equipped with Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVclOutClp1Cells": {
    "name": "ciscoAtmVclOutClp1Cells",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.46",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells with the CLP bit set transmitted on this VCL. This counter is valid only: - on LS1010 systems, only those equipped with Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVclCellDrops": {
    "name": "ciscoAtmVclCellDrops",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.47",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells received on this VCL, but discarded. This counter is valid only: - on LS1010 systems, only those equipped with Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVclClp0VcqFullCellDrops": {
    "name": "ciscoAtmVclClp0VcqFullCellDrops",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.48",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells received on this VCL with the CLP bit clear, discarded because the per-VC queue limit is exceeded. This counter is valid only: - if EPD is disabled on the VCL. - on LS1010 systems, only those equipped with Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVclVcqClpThreshCellDrops": {
    "name": "ciscoAtmVclVcqClpThreshCellDrops",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.49",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells received on this VCL, discarded because the discard threshold (as opposed to the queue-limit) is exceeded on the per-VC queue, and the CLP bit is set. This counter is valid only: - if EPD is disabled on the VCL. - on LS1010 systems, only those equipped with Feature Card - Per Flow Queueing."
  },
  "ciscoAtmVclRxNegTraffDescrIndex": {
    "name": "ciscoAtmVclRxNegTraffDescrIndex",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.50",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmTrafficDescrParamIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the entry in the atmTrafficDescrParamTable which contains negotiated traffic parameters applied to the receive direction of this VCL. This object is not instantiated if this VCL is not the calling side of a soft VC, or if there was no traffic negotiation."
  },
  "ciscoAtmVclTxNegTraffDescrIndex": {
    "name": "ciscoAtmVclTxNegTraffDescrIndex",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.51",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AtmTrafficDescrParamIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the entry in the atmTrafficDescrParamTable which contains negotiated traffic parameters applied to the transmit direction of this VCL. This object is not instantiated if this VCL is not the calling side of a soft VC, or if there was no traffic negotiation."
  },
  "ciscoAtmVclSwFabOutCells": {
    "name": "ciscoAtmVclSwFabOutCells",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.52",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells transmitted on this VCL by the Switch Fabric. This object is not instantiated on systems that do not have support for collecting such statistics."
  },
  "ciscoAtmVclSwFabOutClp0Cells": {
    "name": "ciscoAtmVclSwFabOutClp0Cells",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.53",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells with the CLP bit clear transmitted on this VCL by the Switch Fabric. This object is not instantiated on systems that do not have support for collecting such statistics."
  },
  "ciscoAtmVclSwFabOutClp1Cells": {
    "name": "ciscoAtmVclSwFabOutClp1Cells",
    "oid": "1.3.6.1.4.1.9.10.13.1.2.1.1.54",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of cells with the CLP bit set transmitted on this VCL by the Switch Fabric. This object is not instantiated on systems that do not have support for collecting such statistics."
  },
  "ciscoAtmSvpAddrTable": {
    "name": "ciscoAtmSvpAddrTable",
    "oid": "1.3.6.1.4.1.9.10.13.1.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Switched virtual path link address table."
  },
  "ciscoAtmSvpAddrEntry": {
    "name": "ciscoAtmSvpAddrEntry",
    "oid": "1.3.6.1.4.1.9.10.13.1.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ATM-CONN-MIB",
        "object": "ciscoAtmSvpAddr",
        "implied": 0
      },
      {
        "module": "CISCO-ATM-CONN-MIB",
        "object": "ciscoAtmSvpVpi",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": " An entry in the Switched Vrtual Path address table."
  },
  "ciscoAtmSvpAddr": {
    "name": "ciscoAtmSvpAddr",
    "oid": "1.3.6.1.4.1.9.10.13.1.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 20,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "It depends on the direction.This could be p2pCallingSide address on a called side VPL, or p2pCalledSide address on a calling side VPL or p2mpRoot address on a p2mp leaf side VPL or p2mpLeaf address on a p2mp root side VPL."
  },
  "ciscoAtmSvpVpi": {
    "name": "ciscoAtmSvpVpi",
    "oid": "1.3.6.1.4.1.9.10.13.1.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This SVP's VPI value on this interface."
  },
  "ciscoAtmSvpDirection": {
    "name": "ciscoAtmSvpDirection",
    "oid": "1.3.6.1.4.1.9.10.13.1.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Direction",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicate whether this VPL is calling side, called side, root or leaf for this address."
  },
  "ciscoAtmSvcAddrTable": {
    "name": "ciscoAtmSvcAddrTable",
    "oid": "1.3.6.1.4.1.9.10.13.1.4.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Switched virtual channel link address table."
  },
  "ciscoAtmSvcAddrEntry": {
    "name": "ciscoAtmSvcAddrEntry",
    "oid": "1.3.6.1.4.1.9.10.13.1.4.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      },
      {
        "module": "CISCO-ATM-CONN-MIB",
        "object": "ciscoAtmSvcAddr",
        "implied": 0
      },
      {
        "module": "CISCO-ATM-CONN-MIB",
        "object": "ciscoAtmSvcVpi",
        "implied": 0
      },
      {
        "module": "CISCO-ATM-CONN-MIB",
        "object": "ciscoAtmSvcVci",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": " An entry in the SVC address table."
  },
  "ciscoAtmSvcAddr": {
    "name": "ciscoAtmSvcAddr",
    "oid": "1.3.6.1.4.1.9.10.13.1.4.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 20,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "It depends on the direction.This could be p2pCallingSide address on a called side VCL, or p2pCalledSide address on a calling side VCL or p2mpRoot address on a p2mp leaf side VCL or p2mpLeaf address on a p2mp root side VCL."
  },
  "ciscoAtmSvcVpi": {
    "name": "ciscoAtmSvcVpi",
    "oid": "1.3.6.1.4.1.9.10.13.1.4.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This SVC's VPI value on this interface."
  },
  "ciscoAtmSvcVci": {
    "name": "ciscoAtmSvcVci",
    "oid": "1.3.6.1.4.1.9.10.13.1.4.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This SVC's VCI value on this interface."
  },
  "ciscoAtmSvcDirection": {
    "name": "ciscoAtmSvcDirection",
    "oid": "1.3.6.1.4.1.9.10.13.1.4.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Direction",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicate whether this VCL is calling side, called side, root or leaf for this address."
  },
  "ciscoAtmSnoopVcTable": {
    "name": "ciscoAtmSnoopVcTable",
    "oid": "1.3.6.1.4.1.9.10.13.1.5.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Snooping VC Table."
  },
  "ciscoAtmSnoopVcEntry": {
    "name": "ciscoAtmSnoopVcEntry",
    "oid": "1.3.6.1.4.1.9.10.13.1.5.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      },
      {
        "module": "ATM-MIB",
        "object": "atmVclVpi",
        "implied": 0
      },
      {
        "module": "ATM-MIB",
        "object": "atmVclVci",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the Snoop VC table. This entry models a VC snooping connection. The ifIndex indicates the snooping interface, the atmVclVpi and atmVclVci specifies the VPI and VCI value of the snooping connection. To create or destroy a snooping connection at an ATM interface, the following procedures are used: Configure VC Snooping A snooping connection is configured in one step by a set-request with all necessary snoop parameter values and set-request to the object ciscoAtmSnoopVcRowStatus to createAndGo(4). This may fail for the following reasons: - The selected snooping VPI/VCI values are unavailable, - The selected snooping VPI/VCI values are in use. - The selected snooping interface is CPU interface. - The selected snooped connection doesn't exist. - There is no traffic in the selected snoop direction. - Resource failure during configuration of snooping connection. De-Configure VC Snooping A snooping connection is deconfigured by a set-request to the object ciscoAtmSnoopVcRowStatus to destroy(6), and the agent releases all associated resources."
  },
  "ciscoAtmSnoopVcSnoopedIfIndex": {
    "name": "ciscoAtmSnoopVcSnoopedIfIndex",
    "oid": "1.3.6.1.4.1.9.10.13.1.5.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This specifies the ifIndex of the snooped interface."
  },
  "ciscoAtmSnoopVcSnoopedVpi": {
    "name": "ciscoAtmSnoopVcSnoopedVpi",
    "oid": "1.3.6.1.4.1.9.10.13.1.5.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This specifies the VPI value of the snooped connection endpoint."
  },
  "ciscoAtmSnoopVcSnoopedVci": {
    "name": "ciscoAtmSnoopVcSnoopedVci",
    "oid": "1.3.6.1.4.1.9.10.13.1.5.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This specifies the VCI value of the snooped connection endpoint."
  },
  "ciscoAtmSnoopVcDir": {
    "name": "ciscoAtmSnoopVcDir",
    "oid": "1.3.6.1.4.1.9.10.13.1.5.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnoopDirType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "receive",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This specifies the traffic direction at the snooped connection endpoint."
  },
  "ciscoAtmSnoopVcState": {
    "name": "ciscoAtmSnoopVcState",
    "oid": "1.3.6.1.4.1.9.10.13.1.5.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ConnState",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The connection state of this Snooping connetion."
  },
  "ciscoAtmSnoopVcRowStatus": {
    "name": "ciscoAtmSnoopVcRowStatus",
    "oid": "1.3.6.1.4.1.9.10.13.1.5.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "active",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object is used to create a new row or delete an existing row in this table. This gives the way to configure one-shot per-vc snooping connection"
  },
  "ciscoAtmSnoopVpTable": {
    "name": "ciscoAtmSnoopVpTable",
    "oid": "1.3.6.1.4.1.9.10.13.1.6.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Snooping VP Table."
  },
  "ciscoAtmSnoopVpEntry": {
    "name": "ciscoAtmSnoopVpEntry",
    "oid": "1.3.6.1.4.1.9.10.13.1.6.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      },
      {
        "module": "ATM-MIB",
        "object": "atmVplVpi",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry in the Snoop VP table. This entry models a VP snooping connection. The ifIndex indicates the snooping interface, the atmVclVpi specifies the VPI value of the snooping connection. To create or destroy a snooping connection at an ATM interface, the following procedures are used: Configure VP Snooping A snooping connection is configured in one step by a set-request with all necessary snoop parameter values and set-request to the object ciscoAtmSnoopVpRowStatus to createAndGo(4). This may fail for the following reasons: - The selected snooping VPI values are unavailable, - The selected snooping VPI values are in use. - The selected snooping interface is CPU interface. - The selected snooped connection doesn't exist. - There is no traffic in the selected snoop direction. - Resource failure during configuration of snooping connection. De-Configure VP Snooping A snooping connection is deconfigured by a set-request to the object ciscoAtmSnoopVpRowStatus to destroy(6), and the agent releases all associated resources."
  },
  "ciscoAtmSnoopVpSnoopedIfIndex": {
    "name": "ciscoAtmSnoopVpSnoopedIfIndex",
    "oid": "1.3.6.1.4.1.9.10.13.1.6.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This specifies the ifIndex of the snooped interface."
  },
  "ciscoAtmSnoopVpSnoopedVpi": {
    "name": "ciscoAtmSnoopVpSnoopedVpi",
    "oid": "1.3.6.1.4.1.9.10.13.1.6.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This specifies the VPI value of the snooped connection endpoint."
  },
  "ciscoAtmSnoopVpDir": {
    "name": "ciscoAtmSnoopVpDir",
    "oid": "1.3.6.1.4.1.9.10.13.1.6.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnoopDirType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "receive",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This specifies the traffic direction at the snooped connection endpoint."
  },
  "ciscoAtmSnoopVpState": {
    "name": "ciscoAtmSnoopVpState",
    "oid": "1.3.6.1.4.1.9.10.13.1.6.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ConnState",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The connection state of this Snooping connection ."
  },
  "ciscoAtmSnoopVpRowStatus": {
    "name": "ciscoAtmSnoopVpRowStatus",
    "oid": "1.3.6.1.4.1.9.10.13.1.6.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "active",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object is used to create a new row or delete an existing row in this table. This gives the way to configure one-shot per-vp snooping connection"
  },
  "ciscoAtmSvcFrameDiscardUsesAal5Ie": {
    "name": "ciscoAtmSvcFrameDiscardUsesAal5Ie",
    "oid": "1.3.6.1.4.1.9.10.13.1.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "true",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Determines mechanism to use on interfaces to specify frame discard. Specifying a value of true causes the presence of the AAL5 IE to influence whether frame discard is used on an SVC. If AAL5 IE is present in a received SETUP, frame discard is used. Specifying a value of false results in no influence on presence of the frame discard by the AAL5 IE."
  },
  "ciscoAtmConnMIBGroup": {
    "name": "ciscoAtmConnMIBGroup",
    "oid": "1.3.6.1.4.1.9.10.13.3.2.1",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBGroup2": {
    "name": "ciscoAtmConnMIBGroup2",
    "oid": "1.3.6.1.4.1.9.10.13.3.2.2",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBGroup3": {
    "name": "ciscoAtmConnMIBGroup3",
    "oid": "1.3.6.1.4.1.9.10.13.3.2.3",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBlsPerVcqGroup": {
    "name": "ciscoAtmConnMIBlsPerVcqGroup",
    "oid": "1.3.6.1.4.1.9.10.13.3.2.4",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBlsFcPfqGroup": {
    "name": "ciscoAtmConnMIBlsFcPfqGroup",
    "oid": "1.3.6.1.4.1.9.10.13.3.2.5",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBlsPerVcqGroup2": {
    "name": "ciscoAtmConnMIBlsPerVcqGroup2",
    "oid": "1.3.6.1.4.1.9.10.13.3.2.6",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBNegTraffGroup": {
    "name": "ciscoAtmConnMIBNegTraffGroup",
    "oid": "1.3.6.1.4.1.9.10.13.3.2.7",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBlsFcPfqGroup1": {
    "name": "ciscoAtmConnMIBlsFcPfqGroup1",
    "oid": "1.3.6.1.4.1.9.10.13.3.2.8",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBCompliance": {
    "name": "ciscoAtmConnMIBCompliance",
    "oid": "1.3.6.1.4.1.9.10.13.3.1.1",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBCompliance2": {
    "name": "ciscoAtmConnMIBCompliance2",
    "oid": "1.3.6.1.4.1.9.10.13.3.1.2",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBCompliance3": {
    "name": "ciscoAtmConnMIBCompliance3",
    "oid": "1.3.6.1.4.1.9.10.13.3.1.3",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBCompliance4": {
    "name": "ciscoAtmConnMIBCompliance4",
    "oid": "1.3.6.1.4.1.9.10.13.3.1.4",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBCompliance5": {
    "name": "ciscoAtmConnMIBCompliance5",
    "oid": "1.3.6.1.4.1.9.10.13.3.1.5",
    "class": "objectidentity"
  },
  "ciscoAtmConnMIBCompliance6": {
    "name": "ciscoAtmConnMIBCompliance6",
    "oid": "1.3.6.1.4.1.9.10.13.3.1.6",
    "class": "objectidentity"
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/CISCO-ATM-CONN-MIB-V1SMI.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 19:24:05 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "CISCO-ATM-CONN-MIB"
  }
}