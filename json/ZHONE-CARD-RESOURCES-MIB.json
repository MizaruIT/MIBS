{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "OBJECT-GROUP",
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "iso",
      "OBJECT-TYPE",
      "Unsigned32",
      "Counter32",
      "Counter64",
      "NOTIFICATION-TYPE",
      "TimeTicks",
      "Integer32",
      "IpAddress",
      "OBJECT-IDENTITY",
      "MODULE-IDENTITY",
      "Gauge32",
      "MibIdentifier",
      "Bits"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ],
    "Zhone": [
      "zhoneShelfIndex",
      "zhoneCard",
      "zhoneModules",
      "zhoneSlotIndex"
    ],
    "Zhone-TC": [
      "ZhoneAdminString",
      "ZhoneCardType",
      "ZhoneDiagAction"
    ]
  },
  "zhoneCardResourcesModule": {
    "name": "zhoneCardResourcesModule",
    "oid": "1.3.6.1.4.1.5504.6.4",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2011-10-24 14:47",
        "description": "add zhoneExternalRelayNormalState field"
      },
      {
        "revision": "2011-10-12 12:44",
        "description": "Add more objects to cardResourcesEntry"
      },
      {
        "revision": "2011-08-24 15:33",
        "description": "Add zhoneMxkAlarmInputTrap"
      },
      {
        "revision": "2010-07-13 10:41",
        "description": "Added zhoneTrapProcessorUsage"
      },
      {
        "revision": "2009-05-12 07:58",
        "description": "Replaced cardResourceTable.cardPweTrafficMode with cardResourceTable.cardPweTimingMode, also modifying allowed values, defaulted to none."
      },
      {
        "revision": "2009-04-24 08:51",
        "description": "Added cardResourceTable.cardPweTrafficMode to support timing modes which may require rtp headers in packets."
      },
      {
        "revision": "2008-10-22 03:11",
        "description": "Changing MTAC names to TAC."
      },
      {
        "revision": "2007-08-15 17:30",
        "description": "Add znidResources."
      },
      {
        "revision": "2006-10-17 15:03",
        "description": "Deprecate cardLineVoltage and cardVpiVciRange (moved to zhoneSysCardSoftwareConfig)"
      },
      {
        "revision": "2006-09-28 11:42",
        "description": "Add field vpiVciRange to card profile"
      },
      {
        "revision": "2005-10-11 16:47",
        "description": "V01.05.24 - Replaced cardAtmAvailableBandwidthPercentage (read-only OID 17, not used) with cardLineVoltage"
      },
      {
        "revision": "2005-10-05 11:16",
        "description": "V01.05.23 - Added new services to ZhoneServiceIDs."
      },
      {
        "revision": "2005-05-23 14:22",
        "description": "V01.05.21 -- Change zrgBatteryRelayStatus from notify to read-only"
      },
      {
        "revision": "2004-04-15 13:27",
        "description": "V01.05.20 - Change cardProcessorIdle and cardProcessorUsage from TimeTicks to Integer32 since they are percentage values."
      },
      {
        "revision": "2003-12-22 12:14",
        "description": "V01.05.19 - Added ZRG power trap to monitor the state of power supply for the ZRG boards"
      },
      {
        "revision": "2003-11-21 15:18",
        "description": "V01.05.18 - Added zhoneExternalRelayName to zhoneExternalAlarmTrap OBJECTs"
      },
      {
        "revision": "2002-10-29 15:30",
        "description": "V01.05.17 - change cardInterfaceType to use ZhoneCardType from Zhone-TC.mib"
      },
      {
        "revision": "2002-10-24 17:24",
        "description": "V01.05.16 - import zhonecardtype from zhone-tc.mib"
      },
      {
        "revision": "2002-07-09 11:27",
        "description": "V01.05.15 - Add memory state notification"
      },
      {
        "revision": "2002-06-07 17:38",
        "description": "V01.05.14 - Added malcT1E1Tdm, malcAdslAc6, malcAdslAc6Post, malcAdslAc6Splt, malcAdslAc6AnxB and malcAdslAc6AnxBSplt. Changed malcAdslAc5B to malcAdslAc5AnxB."
      },
      {
        "revision": "2002-05-24 12:58",
        "description": "V01.05.13 - added malcAdslAc5B card type"
      },
      {
        "revision": "2002-03-22 14:55",
        "description": "V01.05.12 - added malcOc3 card type"
      },
      {
        "revision": "2001-11-16 18:11",
        "description": "V01.05.11 - added malcAdslAc5(5010) card type"
      },
      {
        "revision": "2001-10-23 11:10",
        "description": "V01.05.10 - added tdmT1e1 card type."
      },
      {
        "revision": "2001-10-09 10:00",
        "description": "V01.05.09 - added malcDs3 card type."
      },
      {
        "revision": "2001-10-08 13:36",
        "description": "V01.05.08 - added malcPots900 card type."
      },
      {
        "revision": "2001-10-04 12:26",
        "description": "V01.05.07 - moved card-atm-configuration to genSystem.mib"
      },
      {
        "revision": "2001-09-17 16:50",
        "description": "V01.05.06 - Added s300 ST1 CSU type"
      },
      {
        "revision": "2001-09-07 16:40",
        "description": "V01.05.05 - Added ATM configuration support"
      },
      {
        "revision": "2001-09-06 16:03",
        "description": "V01.05.04 - Added two new values for cardSwStatus."
      },
      {
        "revision": "2001-09-05 20:38",
        "description": "V01.05.03 - moved card-line-type to genSystem and added missing card types."
      },
      {
        "revision": "2001-08-29 11:23",
        "description": "V01.05.02 Add sechtor300 card types"
      },
      {
        "revision": "2001-08-09 10:43",
        "description": "V01.05.01 Add Card Line Type"
      },
      {
        "revision": "2001-07-26 10:47",
        "description": "V01.05.00 -- added cardServices"
      },
      {
        "revision": "2001-07-20 13:20",
        "description": "V01.04.00 - Add zhoneExternalRelay Objects"
      },
      {
        "revision": "2000-09-12 10:59",
        "description": "V01.00.00 - Initial Release"
      },
      {
        "revision": "2000-09-20 11:00",
        "description": "V01.00.01 - ZOI 1560"
      },
      {
        "revision": "2000-11-11 10:59",
        "description": "V01.01.00 - Add wireless card type"
      },
      {
        "revision": "2000-11-21 18:31",
        "description": "V01.02.00 - Redo sw card load/upgrade"
      },
      {
        "revision": "2000-12-01 12:18",
        "description": "V01.02.01 - Change markup to reflect latest MIB layout."
      },
      {
        "revision": "2000-12-18 19:11",
        "description": "V01.02.02 - added back enum value upgradeOnReset to cardSwAdmin"
      },
      {
        "revision": "2001-01-22 14:56",
        "description": "V01.02.03 - Add MALC card types."
      },
      {
        "revision": "2001-03-27 10:29",
        "description": "V01.02.04 - Added Default Values for cardAdminStatus, cardAdminStatsEnable, and cardSwAdmin."
      },
      {
        "revision": "2001-04-06 14:25",
        "description": "V01.03.00 - Add Services Table Add card subtype Remove ts3atm card type as oc3Atm covers both ds3 and ds3. cardInterfaceType further refines this."
      },
      {
        "revision": "2001-04-27 11:49",
        "description": "V01.03.01 - add atmTrnkCr under cardZhoneType, cardInterfaceType"
      },
      {
        "revision": "2001-05-24 13:15",
        "description": "V01.03.02 - Add card subtype oc3AtmMm Substitude oc3Atm card type as oc3AtmSm."
      }
    ],
    "lastupdated": "201110241558Z",
    "organization": "Zhone Technologies",
    "contactinfo": " Postal: Zhone Technologies, Inc. @ Zhone Way 7001 Oakport Street Oakland, CA 94621 USA Toll-Free: +1 877-ZHONE20 (+1 877-946-6320) Tel: +1-510-777-7000 Fax: +1-510-777-7001 E-mail: support@zhone.com",
    "description": "Contains the resources utilized on a per CPU basis. Note that in a single cpu system, this data represents the entire system."
  },
  "Kbytes": {
    "name": "Kbytes",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": "Memory size expressed in kilobytes (1024 bytes)"
  },
  "ZhoneServiceId": {
    "name": "ZhoneServiceId",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dspResource": 1,
          "numberService": 2,
          "tadService": 3,
          "aal2Resource": 4,
          "ctrpCallResource": 5,
          "callControlResource": 6,
          "mprrResource": 7,
          "mamaResource": 8,
          "raFtdResource": 9,
          "voiceCall": 10,
          "shelfControllerService": 11,
          "snmpMasterAgent": 12,
          "trapService": 13,
          "informationServices": 14,
          "lineResource": 15,
          "ifCfgMgrResource": 16,
          "logServer": 17,
          "cardServer": 18,
          "dhcpServer": 19,
          "filterUpdate": 20,
          "ringGenerator": 21,
          "zhoneRouteTableService": 22,
          "pppResourceProvider": 23,
          "rootDirectoryService": 24,
          "cssService": 25,
          "sipResource": 26,
          "mgcpResource": 27,
          "npRedundantServer": 28
        }
      }
    },
    "status": "current",
    "description": "Identifer of a Zhone service. The following services are allowed: dspResource(1) DSP Resources numberService(2) Service to provide unique numbers to the system. NOT ADDED BY A USER BUT AUTOMATICALLY STARTED. tadService(3) Time and Date Service aal2Resource(4) ATM AAL2 Resource Manager ctrpCallResource(5) Call Termination Resource Provider callControlResource(6) Call Control Services mprrResource(7) Voice Media Provider mamaResource(8 IP Port Mapping service raFtdResource(9) IP forwarding engine voiceCall(10) Voice Call Processing Manager shelfControllerService(11) Shelf Controller snmpMasterAgent(12) SNMP Master Agent trapService(13) Trap Server informationServices(14) Persistent Information Storage Manager lineResource(15) Line Resource Registry ifCfgMgrResource(16) Interface Configuration Manager logServer(17) Logging Services= cardServer(18) Card Redundancy Manager dhcpServer(19) DHCP Server filterUpdate(20) IP Filtering ringGenerator(21) Ring Generator Service zhoneRouteTableService(22) ZAP Route Table Service pppResourceProvider(23) PPP Manager rootDirectoryService(24) Root Directory Services cssService(25) Config Sync Service sipResource(26) Session Interface Protocol Resource mgcpResource(27) Media Gateway Control Protocol Resource npRedundantServer(28) Network Processor Redundant Server"
  },
  "cardResourceTable": {
    "name": "cardResourceTable",
    "oid": "1.3.6.1.4.1.5504.3.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table of unit/card status and functions for each card in A BAN system. Functions include software download management. The maximum cards in a BAN is 255 shelves x 17 cards per shelf, a typical configuration will consist of several hundred cards. A single card system will use shelf/slot index of 1,1 and will not be identifiable as a single card system based on the shelf, slot indices."
  },
  "cardResourceEntry": {
    "name": "cardResourceEntry",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "Zhone",
        "object": "zhoneShelfIndex",
        "implied": 0
      },
      {
        "module": "Zhone",
        "object": "zhoneSlotIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry per card or a singe row for a single CPU/card system."
  },
  "cardIdentification": {
    "name": "cardIdentification",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Textual description of the unit/card or access device type."
  },
  "cardZhoneType": {
    "name": "cardZhoneType",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneCardType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The numerical representation of what unit/card type is present."
  },
  "cardMfgSerialNumber": {
    "name": "cardMfgSerialNumber",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The manufacturing serial number for this unit/card."
  },
  "cardMfgCLEICode": {
    "name": "cardMfgCLEICode",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "CLEI code for the unit/card if defined, otherwise the value will be set to zero (0) by the card."
  },
  "cardMfgRevisionCode": {
    "name": "cardMfgRevisionCode",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Manufacturing hardware revision code for the unit/card."
  },
  "cardMfgBootRevision": {
    "name": "cardMfgBootRevision",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Revision level of any permenant (PROM) or semi- permenant (flash) code on the unit/card. This code is generally used as a bootstrap loader."
  },
  "cardPostResults": {
    "name": "cardPostResults",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Results string generated by unit/card that displays the results of the POST (power-on-self-test). The first item in the text string indicates the overall results of the test. 'Pass' or 'Fail'. The reminder of the string enumerates the results of each test which will vary by unit/card type or may only enumerate failed tests."
  },
  "cardAdminStatus": {
    "name": "cardAdminStatus",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "operational": 1,
          "disable": 2,
          "maintenance": 3,
          "warmreset": 4,
          "reset": 5
        }
      }
    },
    "default": {
      "default": {
        "value": "operational",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Specifies the adminstrative status of the unit/card as follows: operational: the unit/card enters the operational state if able. In the operational state the unit/card is able to accept requests from other elements in the BAN or if a standalone device is processing requests from the WAN or local interfaces. disable: the unit/card ceases to accept requests from other elements. If the unit/card is operational and recieves this command it will complete processing of open requests if able. maintenance: enter a special maintenance state if available - if not available enter the disabled state and set adminStatus to disabled. warmreset - perform a warm reset of system software that does not reinitialize or reset hardware resources. reset - perform an immediate full reset, following a successful reset the unit/card should enter the operational state."
  },
  "cardOperStatus": {
    "name": "cardOperStatus",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "operating": 2,
          "nonoperating": 3,
          "maintenance": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Indicates the operational status of the unit/card as follows: unknown: the card is in an unknown or error state operating: software has been loaded and is operating, the unit/card is accepting requests from other system elements or if a standalone unit it is processing requests form the WAN or local interfaces. non-operating: unit/card is not operating due to internal errors or it has been disabled by the management system. maintenance: the unit/card is in the maintenance state."
  },
  "cardAdminStatsEnable": {
    "name": "cardAdminStatsEnable",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enable": 1,
          "disable": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "enable",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Enable the collection and forwarding of historical statistics on the unit/card. The default value is disabled. Note this value should be logically 'anded' with the the system statistics enbale to determine if the collection and forwarding of statistics should actually be enabled. Default value is 'disabled'."
  },
  "cardUpTime": {
    "name": "cardUpTime",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The amount of time since this unit/card was last initialized (warm or full reset). The units are in 100ths of a second."
  },
  "cardProcessorType": {
    "name": "cardProcessorType",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A string is returned that describes the processor type used on the unit/card."
  },
  "cardPortStatus": {
    "name": "cardPortStatus",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Summary of the status of all physical ports on the unit/card. Each port is identified by it's ifTable index and the status is indicated as up|down|unknown."
  },
  "cardInterfaceType": {
    "name": "cardInterfaceType",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneCardType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This field is used to identify which interface types are s upported for a given card. In the case where a card has exactly one possible interface (such as the ethernet card) this field is exactly the same as the cardResourceCardType field. For polymorphic trunk cards this field reflects the interface card type which is installed."
  },
  "cardAtmManualAal2bw": {
    "name": "cardAtmManualAal2bw",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": "0",
        "format": "bin"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This field is used to configure the resources for AAL2 for both high and low priority interfaces as the percentage of total available resources. Remainder of the resources would be used for AAL5.This field will be used if cardAtmConfiguration is entered as manual. This variable is not supported in this release. "
  },
  "cardAtmManualAal2h": {
    "name": "cardAtmManualAal2h",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": "0",
        "format": "bin"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This field is used to configure the resources for high priorty AAL2 interface as the percentage of total bandwidth allocated for AAL2. This field will be used if cardAtmConfiguration is entered as manual. This variable is not supported in this release. "
  },
  "cardLineVoltage": {
    "name": "cardLineVoltage",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "line-voltage-not-used": 1,
          "line-voltage-60-volts": 2,
          "line-voltage-68-volts": 3,
          "line-voltage-95-volts": 4,
          "line-voltage-100-volts": 5,
          "line-voltage-110-volts": 6
        }
      }
    },
    "default": {
      "default": {
        "value": "line-voltage-not-used",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "DEPRECATED - use zhoneSysCardLineVoltage Specifies the voltage supplied to all lines(ports) of this card. Used on ISDN line cards."
  },
  "cardVpiVciRange": {
    "name": "cardVpiVciRange",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "vpivci-range-not-applicable": 1,
          "vpivci-range-vpi-15-vci-63": 2,
          "vpivci-range-vpi-7-vci-127": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "DEPRECATED - use zhoneSysCardVpiVciRange. The maximum vpi and vci values that may be used for this card."
  },
  "cardPweTimingMode": {
    "name": "cardPweTimingMode",
    "oid": "1.3.6.1.4.1.5504.3.3.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "source-differential": 2,
          "source-adaptive": 3,
          "remote-differential": 4,
          "remote-adaptive": 5
        }
      }
    },
    "default": {
      "default": {
        "value": "none",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Describes PWE timing origin and mode of timing recovery: none - no reference clock required, or PWE not supported. source-differential - the local Provider Edge (PE) device supplies the reference signal for differential recovery. source-adaptive - the local PE device participates in the adaptive clock recovery scheme. remote-differential - the remote PE device supplies the reference signal for differential recovery. remote-adaptive - the local PE device participates in the adaptive clock recovery scheme."
  },
  "cardSoftwareTable": {
    "name": "cardSoftwareTable",
    "oid": "1.3.6.1.4.1.5504.3.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Information about the software running on this unit(system) or card."
  },
  "cardSoftwareEntry": {
    "name": "cardSoftwareEntry",
    "oid": "1.3.6.1.4.1.5504.3.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "augmention": {
      "name": "cardSoftwareEntry",
      "module": "ZHONE-CARD-RESOURCES-MIB",
      "object": "cardResourceEntry"
    },
    "status": "current",
    "description": "A augmented table of the unit resource table specific for software information."
  },
  "cardSwRunningVers": {
    "name": "cardSwRunningVers",
    "oid": "1.3.6.1.4.1.5504.3.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The software version that is currently running on this card. This object complies to the Zhone software revision syntax."
  },
  "cardSwUpgradeVers": {
    "name": "cardSwUpgradeVers",
    "oid": "1.3.6.1.4.1.5504.3.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneAdminString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "If warm upgrade is supported, this is the version of software that is loaded on the card that will be switched to with a warm upgrade. This value is set by the card sw after a loadUpgradeSoftware command is completed successfully. "
  },
  "cardSwAdmin": {
    "name": "cardSwAdmin",
    "oid": "1.3.6.1.4.1.5504.3.3.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "loadUpgradeSw": 1,
          "upgradeNow": 2,
          "upgradeOnReset": 3,
          "reloadCurrRev": 4
        }
      }
    },
    "default": {
      "default": {
        "value": "reloadCurrRev",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": " Some items are only valid if warm upgrade is supported. loadUpgradeSoftware: the unit/card should request a load of the upgrade software from the previously downloaded on to the system. If an upgrade version of software is not available or the server(s) is unable to respond to the load request the card will set the cardSwStaus to upgradeloadFailed (warm upgrade only - this is ignored if warm upgrade is not supported). upgradeNow: the unit/card should upgrade to the already loaded upgrade software if warm upgrade is supported or reboot and load the upgrade software if warm upgrade is not supported. If the upgrade software has not been loaded or there is no grade software load available, the unit/card will set the cardSwStatus to upgradeFailed. When this value is set, the zhoneSysCardSwUpgradeEnable field is set to true in the genSystem mib associated with this card. upgradeOnReset: the unit/card will upgrade to the already loaded software the next time it is initialized. If the upgrade software is not loaded the card will set the cardSwStatus to upgradeFailed following reset. reloadCurrVers: the will re-initialize and load the previous version of code prior to the upgrade (which is either the 'specific' version or default version of software depending upon what has been provisioned) See the genSystem mib for details. When this value is set, the zhoneSysCardSwUpgradeEnable field is set to false. "
  },
  "cardSwStatus": {
    "name": "cardSwStatus",
    "oid": "1.3.6.1.4.1.5504.3.3.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "upgradeLoadSuccessful": 1,
          "loadingSw": 2,
          "upgrading": 3,
          "upgradeLoadFailed": 4,
          "upgradeFailed": 5,
          "upgradeImageNotAvail": 6,
          "pendingUpgradeOnReset": 7,
          "upgradeNotRequested": 8
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The upgrade status is indicated as follows: upgradeLoadSuccessful: following the setting of cardSwAdmin to loadUpgradeSw this status indicates the load to memory or storage was successful. loadingSw: the unit/card is loading upgrade software from the internal software load service (warm upgrade only). upgrading: the unit/card is in the process of switching to the upgrade software (warm upgrade only). upgradeLoadFailed: the upgrade version software load was not able to complete due to an error or the unit has determined the downloaded software to be invalid. upgradeFailed: the upgrade was not able to complete due a load error, invalid version loaded or upgrade software was loaded and unable to initialize. The unit/card has reverted to the 'current' version of software. upgradeImageNotAvail - The upgrade image is not available on this system. pendingUpgradeOnReset : The unit/card needs a reboot to upgrade to the already loaded software . upgradeNotRequested : The upgrade image is available on the system but the cardSwAdmin is not set to perform upgrade. "
  },
  "cardRuntimeTable": {
    "name": "cardRuntimeTable",
    "oid": "1.3.6.1.4.1.5504.3.3.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Augment table of the unit/card resource but specific to the runtime status information."
  },
  "cardRuntimeEntry": {
    "name": "cardRuntimeEntry",
    "oid": "1.3.6.1.4.1.5504.3.3.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "augmention": {
      "name": "cardRuntimeEntry",
      "module": "ZHONE-CARD-RESOURCES-MIB",
      "object": "cardResourceEntry"
    },
    "status": "current",
    "description": "A row definition for the runtime software state/status."
  },
  "cardPeakMemUsage": {
    "name": "cardPeakMemUsage",
    "oid": "1.3.6.1.4.1.5504.3.3.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Kbytes",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum physical memory that has been allocated at any time by the unit/card."
  },
  "cardAvailMem": {
    "name": "cardAvailMem",
    "oid": "1.3.6.1.4.1.5504.3.3.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Kbytes",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The amount of physical memory that is unallocated and not in use by the unit/card."
  },
  "cardTotalMem": {
    "name": "cardTotalMem",
    "oid": "1.3.6.1.4.1.5504.3.3.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Kbytes",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The amount of physical memory contained by the unit/card."
  },
  "cardProcessorIdle": {
    "name": "cardProcessorIdle",
    "oid": "1.3.6.1.4.1.5504.3.3.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Percentage of time the CPU has spent executing tasks with priority of 200 or less. Tasks with priority of 200 or less (the higher the number, the lower the priority) are considered idle tasks."
  },
  "cardProcessorUsage": {
    "name": "cardProcessorUsage",
    "oid": "1.3.6.1.4.1.5504.3.3.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Percentage of time the CPU has spent executing tasks with priority of 199 or higher."
  },
  "cardMemStatus": {
    "name": "cardMemStatus",
    "oid": "1.3.6.1.4.1.5504.3.3.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ramMemOK": 1,
          "ramMemLow": 2,
          "flashMemOK": 3,
          "flashMemLow": 4,
          "flashMemOut": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Memory status of the card sent with memory trap. A trap is sent when each condition occurs. 1 - ramMemOK less then 90% of ram is used 2 - ramMemLow more then 90% of ram is used 3 - flashMemOK enough flash for maximum database 4 - flashMemLow not enough flash for maximum database 5 - flashMemOut no more flash memory, data no longer persistent "
  },
  "cardProcessorHighUsage": {
    "name": "cardProcessorHighUsage",
    "oid": "1.3.6.1.4.1.5504.3.3.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Percentage of time the CPU has spent executing tasks with priority of 001 to 099."
  },
  "cardProcessorServicesUsage": {
    "name": "cardProcessorServicesUsage",
    "oid": "1.3.6.1.4.1.5504.3.3.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Percentage of time the CPU has spent executing tasks with priority of 100 to 179."
  },
  "cardProcessorFrameworkUsage": {
    "name": "cardProcessorFrameworkUsage",
    "oid": "1.3.6.1.4.1.5504.3.3.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Percentage of time the CPU has spent executing tasks with priority of 180 to 199."
  },
  "cardProcessorLowUsage": {
    "name": "cardProcessorLowUsage",
    "oid": "1.3.6.1.4.1.5504.3.3.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Percentage of time the CPU has spent executing tasks with priority of 200 to 250."
  },
  "zhoneCardServices": {
    "name": "zhoneCardServices",
    "oid": "1.3.6.1.4.1.5504.3.3.4",
    "class": "objectidentity"
  },
  "cardServicesTable": {
    "name": "cardServicesTable",
    "oid": "1.3.6.1.4.1.5504.3.3.4.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This contains the table of services configured to be running on this card. The card runs services that are either customer visible (can be configured by the user) or those that the customer can select which card to be run on. This table lists all services running on this card but only those services customer viewable can be modified. This table is only supported on multi-card systems (i.e. BAN)."
  },
  "cardServicesEntry": {
    "name": "cardServicesEntry",
    "oid": "1.3.6.1.4.1.5504.3.3.4.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "Zhone",
        "object": "zhoneShelfIndex",
        "implied": 0
      },
      {
        "module": "Zhone",
        "object": "zhoneSlotIndex",
        "implied": 0
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardServiceId",
        "implied": 0
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardServiceInstance",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A row in this table represents a redundant service that is running on this card."
  },
  "cardServiceId": {
    "name": "cardServiceId",
    "oid": "1.3.6.1.4.1.5504.3.3.4.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneServiceId",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "Identifies the service. The Servide ID, together with a Service Instance, uniquely identify a service running on a particular card. "
  },
  "cardServiceInstance": {
    "name": "cardServiceInstance",
    "oid": "1.3.6.1.4.1.5504.3.3.4.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "The instance of this service that is running on the card. For example, if multiple versions of a service is running, this will be the differentiator. In the case of routing domains, this would be the rdIndex. In most cases this value is 0 which is allowed even though this field is used as an INDEX."
  },
  "cardServiceChangeTime": {
    "name": "cardServiceChangeTime",
    "oid": "1.3.6.1.4.1.5504.3.3.4.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Represents the time that service entered the current cardServiceStatus. Value is in system ticks."
  },
  "cardServiceStatus": {
    "name": "cardServiceStatus",
    "oid": "1.3.6.1.4.1.5504.3.3.4.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unAvailable": 1,
          "inActive": 2,
          "standBy": 3,
          "active": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The status for this particular service instance. The possible values are: unAvailable (1) - The service is unavailable for unknown reasons. This is an error situation. This value may not be supported by the device. inActive (2) - This service instance is waiting in line to become standby. There may be 0 or more services of this type in this state. standBy (3) - Next in line to become active if the current active service should fail. If there's more than one service instance running, there will be one instance in standby mode. active (4) - The current active service performing this function."
  },
  "activeServicesTable": {
    "name": "activeServicesTable",
    "oid": "1.3.6.1.4.1.5504.3.3.4.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The table of active services running on the system"
  },
  "activeServicesEntry": {
    "name": "activeServicesEntry",
    "oid": "1.3.6.1.4.1.5504.3.3.4.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardServiceId",
        "implied": 0
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardServiceInstance",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A row in this table represents an active service running on a card."
  },
  "activeServiceShelf": {
    "name": "activeServiceShelf",
    "oid": "1.3.6.1.4.1.5504.3.3.4.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Identifies the shelf where the active service is running."
  },
  "activeServiceSlot": {
    "name": "activeServiceSlot",
    "oid": "1.3.6.1.4.1.5504.3.3.4.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Identifies the slot where the active service is running."
  },
  "activeServiceChangeTime": {
    "name": "activeServiceChangeTime",
    "oid": "1.3.6.1.4.1.5504.3.3.4.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Represents the time that service became Active. Value is in system ticks."
  },
  "standbyServicesTable": {
    "name": "standbyServicesTable",
    "oid": "1.3.6.1.4.1.5504.3.3.4.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The table of standby services running on the system"
  },
  "standbyServicesEntry": {
    "name": "standbyServicesEntry",
    "oid": "1.3.6.1.4.1.5504.3.3.4.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardServiceId",
        "implied": 0
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardServiceInstance",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A row in this table represents a standby service running on a card.."
  },
  "standbyServiceShelf": {
    "name": "standbyServiceShelf",
    "oid": "1.3.6.1.4.1.5504.3.3.4.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Identifies the shelf where the standby service is running."
  },
  "standbyServiceSlot": {
    "name": "standbyServiceSlot",
    "oid": "1.3.6.1.4.1.5504.3.3.4.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Identifies the slot where the standby service is running."
  },
  "standbyServiceChangeTime": {
    "name": "standbyServiceChangeTime",
    "oid": "1.3.6.1.4.1.5504.3.3.4.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Represents the time that service became Standby. Value is in system ticks. "
  },
  "zhoneTrapCardServices": {
    "name": "zhoneTrapCardServices",
    "oid": "1.3.6.1.4.1.5504.3.3.4.4",
    "class": "objectidentity",
    "status": "current",
    "description": "Traps related to Card Services"
  },
  "zhoneTrapCardServicesV2Traps": {
    "name": "zhoneTrapCardServicesV2Traps",
    "oid": "1.3.6.1.4.1.5504.3.3.4.4.0",
    "class": "objectidentity",
    "status": "current",
    "description": "This object identity adds a zero(0) for the next to last sub-identifier which should be used for new SNMPv2 Traps."
  },
  "zhoneCardServicesStatusChange": {
    "name": "zhoneCardServicesStatusChange",
    "oid": "1.3.6.1.4.1.5504.3.3.4.4.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardServiceStatus"
      }
    ],
    "status": "current",
    "description": "This trap is generated whenever a redundancy state change occurs."
  },
  "zhoneCardServicesStandbyReady": {
    "name": "zhoneCardServicesStandbyReady",
    "oid": "1.3.6.1.4.1.5504.3.3.4.4.0.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "standbyServiceShelf"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "standbyServiceSlot"
      }
    ],
    "status": "current",
    "description": "This trap indicates that all services on the standby card are synchronized with their active couterparts, and that the card is fully ready as the standby."
  },
  "zhoneExternalRelay": {
    "name": "zhoneExternalRelay",
    "oid": "1.3.6.1.4.1.5504.3.3.8",
    "class": "objectidentity",
    "status": "current",
    "description": "The following defines the information pertinent for external relays."
  },
  "zhoneExternalRelayTable": {
    "name": "zhoneExternalRelayTable",
    "oid": "1.3.6.1.4.1.5504.3.3.8.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A Table of External Relay Interface status for handling relays on a card and for the TAC card,this is of 12 Rows."
  },
  "zhoneExternalRelayEntry": {
    "name": "zhoneExternalRelayEntry",
    "oid": "1.3.6.1.4.1.5504.3.3.8.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "Zhone",
        "object": "zhoneShelfIndex",
        "implied": 0
      },
      {
        "module": "Zhone",
        "object": "zhoneSlotIndex",
        "implied": 0
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zhoneExternalRelayId",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "One entry for each relay on a card."
  },
  "zhoneExternalRelayName": {
    "name": "zhoneExternalRelayName",
    "oid": "1.3.6.1.4.1.5504.3.3.8.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ZhoneAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A provisionable name which may used in referring to an external relay. This external relay name should be unique on the box.If not set , it defaults to a unique value <relay x/y/z> where x=shelf number, y=slot , and z=relayId. "
  },
  "zhoneExternalRelayState": {
    "name": "zhoneExternalRelayState",
    "oid": "1.3.6.1.4.1.5504.3.3.8.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "relayStateOpen": 1,
          "relayStateClosed": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The object describes the state of the external relays. An external relay may have one of two states: relayStateOpen(1) indicates that the external relay is open or is not connected. relayStateClosed(2) indicates that the external relay is closed."
  },
  "zhoneExternalRelayNormalState": {
    "name": "zhoneExternalRelayNormalState",
    "oid": "1.3.6.1.4.1.5504.3.3.8.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notSpecified": 1,
          "normallyOpen": 2,
          "normallyClosed": 3
        }
      }
    },
    "default": {
      "default": {
        "value": "notSpecified",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Specifies whether relay is normally open or normally closed. The other state will then generate an alarm. A value of not-specified is valid for MTAC and 1U cards, where alarms are not present in the central alarm manager. For the mxk i/o alarm board relays, a value should be present for all relays that are in use."
  },
  "zhoneExternalRelayMappingTable": {
    "name": "zhoneExternalRelayMappingTable",
    "oid": "1.3.6.1.4.1.5504.3.3.8.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table is used to map an external relay name to the relay Id. This table contains all entries for relays defined in the system. For example, if 2 TAC cards are present there will be 24 entries in this table."
  },
  "zhoneExternalRelayMappingEntry": {
    "name": "zhoneExternalRelayMappingEntry",
    "oid": "1.3.6.1.4.1.5504.3.3.8.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zhoneExternalRelayName",
        "implied": 1
      }
    ],
    "status": "current",
    "description": "One row for each relay."
  },
  "zhoneExternalRelayId": {
    "name": "zhoneExternalRelayId",
    "oid": "1.3.6.1.4.1.5504.3.3.8.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 12
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A numeric identifier which identifies the relay."
  },
  "zhoneTrapExternalRelay": {
    "name": "zhoneTrapExternalRelay",
    "oid": "1.3.6.1.4.1.5504.3.3.8.3",
    "class": "objectidentity",
    "status": "current",
    "description": "Traps defined for the external relays."
  },
  "zhoneTrapExternalRelayV2Traps": {
    "name": "zhoneTrapExternalRelayV2Traps",
    "oid": "1.3.6.1.4.1.5504.3.3.8.3.0",
    "class": "objectidentity",
    "status": "current",
    "description": "In order to make this a v2 trap (0)."
  },
  "zhoneExternalAlarmTrap": {
    "name": "zhoneExternalAlarmTrap",
    "oid": "1.3.6.1.4.1.5504.3.3.8.3.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zhoneExternalRelayName"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zhoneExternalRelayState"
      }
    ],
    "status": "current",
    "description": "This trap is thrown when the state of an external TAC card relay changes."
  },
  "zhoneMxkAlarmInputTrap": {
    "name": "zhoneMxkAlarmInputTrap",
    "oid": "1.3.6.1.4.1.5504.3.3.8.3.0.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zhoneExternalRelayName"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zhoneExternalRelayState"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zhoneExternalRelayNormalState"
      }
    ],
    "status": "current",
    "description": "This trap is thrown when the state of an MXK I/O Alarm Card relay changes."
  },
  "zhoneCardCompliances": {
    "name": "zhoneCardCompliances",
    "oid": "1.3.6.1.4.1.5504.3.3.9",
    "class": "objectidentity"
  },
  "zhoneCardGroups": {
    "name": "zhoneCardGroups",
    "oid": "1.3.6.1.4.1.5504.3.3.9.1",
    "class": "objectidentity"
  },
  "zhoneCardResourcesGroup": {
    "name": "zhoneCardResourcesGroup",
    "oid": "1.3.6.1.4.1.5504.3.3.9.1.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardIdentification"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardZhoneType"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardMfgSerialNumber"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardMfgCLEICode"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardMfgRevisionCode"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardMfgBootRevision"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardPostResults"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardAdminStatus"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardOperStatus"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardAdminStatsEnable"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardUpTime"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardProcessorType"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardPortStatus"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardInterfaceType"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardSwRunningVers"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardSwUpgradeVers"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardSwAdmin"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardSwStatus"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardPeakMemUsage"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardAvailMem"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardTotalMem"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardProcessorIdle"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardProcessorUsage"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardProcessorServicesUsage"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardProcessorFrameworkUsage"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardProcessorLowUsage"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardProcessorHighUsage"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardMemStatus"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardPweTimingMode"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "zhoneExternalRelayGroup": {
    "name": "zhoneExternalRelayGroup",
    "oid": "1.3.6.1.4.1.5504.3.3.9.1.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zhoneExternalRelayName"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zhoneExternalRelayState"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zhoneExternalRelayId"
      }
    ],
    "status": "current",
    "description": "This group contains objects associated with the zhone external relay interface."
  },
  "zhoneExternalAlarmTrapGroup": {
    "name": "zhoneExternalAlarmTrapGroup",
    "oid": "1.3.6.1.4.1.5504.3.3.9.1.3",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zhoneExternalAlarmTrap"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zhoneMxkAlarmInputTrap"
      }
    ],
    "status": "current",
    "description": "This group contains trap definitions associated with the external relays."
  },
  "zhoneTrapCardMemV2Traps": {
    "name": "zhoneTrapCardMemV2Traps",
    "oid": "1.3.6.1.4.1.5504.3.3.10",
    "class": "objectidentity",
    "status": "current",
    "description": "Memory Trap"
  },
  "zhoneTrapCardMemGroup": {
    "name": "zhoneTrapCardMemGroup",
    "oid": "1.3.6.1.4.1.5504.3.3.10.1",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zhoneTrapCardMemStatus"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zhoneTrapProcessorUsage"
      }
    ],
    "status": "current",
    "description": "Memory trap"
  },
  "zhoneTrapCardMemStatus": {
    "name": "zhoneTrapCardMemStatus",
    "oid": "1.3.6.1.4.1.5504.3.3.10.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardMemStatus"
      }
    ],
    "status": "current",
    "description": "Memory notification"
  },
  "zhoneTrapProcessorUsage": {
    "name": "zhoneTrapProcessorUsage",
    "oid": "1.3.6.1.4.1.5504.3.3.10.3",
    "class": "notificationtype",
    "objects": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "cardProcessorUsage"
      }
    ],
    "status": "current",
    "description": "Notification sent when CPU Usage crosses a predetermined threshold value."
  },
  "zrgResources": {
    "name": "zrgResources",
    "oid": "1.3.6.1.4.1.5504.3.3.11",
    "class": "objectidentity",
    "status": "current",
    "description": "Description. The following defines the information pertinent for ZRG boards."
  },
  "zrgBatteryRelayStatus": {
    "name": "zrgBatteryRelayStatus",
    "oid": "1.3.6.1.4.1.5504.3.3.11.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "normalMode": 0,
        "batteryON": 1,
        "batteryLOW": 2,
        "batteryBAD": 3,
        "batteryGone": 4,
        "noUPS": 5
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Description. The object describes the state of the ZRG board power supply. The power may have one or two states from the following states: normalMode(0) indicates that the load is receiving power from commercial power batteryON(1) indicates that the load is receiving power from battery. batteryLOW(2) indicates that the battery has been reduced to the point that roughly 20% of the available runtime is available. batteryBAD(3) indicates that the battery has failed it's periodic test. The battery should be replaced as system availability has been compromised. batteryGone(4) indicates that the battery is disconnected. Load will not be supported if the commercial power fails. noUPS(5) indicates that the UPS unit is disconnected. Load will not be supported if the commercial power fails. "
  },
  "zrgTrapBatteryRelay": {
    "name": "zrgTrapBatteryRelay",
    "oid": "1.3.6.1.4.1.5504.3.3.11.2",
    "class": "objectidentity",
    "status": "current",
    "description": "Traps defined for the ZRG power source/state."
  },
  "zrgBatterRelayTrapV2": {
    "name": "zrgBatterRelayTrapV2",
    "oid": "1.3.6.1.4.1.5504.3.3.11.2.0",
    "class": "objectidentity",
    "status": "current",
    "description": "In order to make this a v2 trap (0)."
  },
  "zrgBatteryRelayNotification": {
    "name": "zrgBatteryRelayNotification",
    "oid": "1.3.6.1.4.1.5504.3.3.11.2.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "zrgBatteryRelayStatus"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "znidResources": {
    "name": "znidResources",
    "oid": "1.3.6.1.4.1.5504.3.3.14",
    "class": "objectidentity",
    "status": "current",
    "description": "ZNID Resources."
  },
  "znidBatteryStatus": {
    "name": "znidBatteryStatus",
    "oid": "1.3.6.1.4.1.5504.3.3.14.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "normal": 0,
        "onBatteryPower": 1,
        "batteryPowerLow": 2,
        "replaceBattery": 3,
        "batteryRemoved": 4,
        "noUPS": 5
      }
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "ZNID Battery Status object used for notification reporting."
  },
  "znidSerialNumber": {
    "name": "znidSerialNumber",
    "oid": "1.3.6.1.4.1.5504.3.3.14.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "ZNID Battery Status object used for notification reporting."
  },
  "znidNotificationObjects": {
    "name": "znidNotificationObjects",
    "oid": "1.3.6.1.4.1.5504.3.3.14.3",
    "class": "objectidentity",
    "status": "current",
    "description": "ZNID notification objects."
  },
  "znidNotifications": {
    "name": "znidNotifications",
    "oid": "1.3.6.1.4.1.5504.3.3.14.3.0",
    "class": "objectidentity",
    "status": "current",
    "description": "ZNID notifications."
  },
  "znidBatteryStatusNotification": {
    "name": "znidBatteryStatusNotification",
    "oid": "1.3.6.1.4.1.5504.3.3.14.3.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "znidSerialNumber"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "znidBatteryStatus"
      }
    ],
    "status": "current",
    "description": "ZNID battery status notification."
  },
  "znidNotificationGroup": {
    "name": "znidNotificationGroup",
    "oid": "1.3.6.1.4.1.5504.3.3.14.3.1",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "znidBatteryStatusNotification"
      }
    ],
    "status": "current",
    "description": "ZNID notification group."
  },
  "znidOjectGroup": {
    "name": "znidOjectGroup",
    "oid": "1.3.6.1.4.1.5504.3.3.14.3.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "znidBatteryStatus"
      },
      {
        "module": "ZHONE-CARD-RESOURCES-MIB",
        "object": "znidSerialNumber"
      }
    ],
    "status": "current",
    "description": "ZNID object group."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/ZHONE-CARD-RESOURCES-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 18:16:58 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "ZHONE-CARD-RESOURCES-MIB"
  }
}