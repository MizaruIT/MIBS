{
  "imports": {
    "class": "imports",
    "Cajun-ROOT": [
      "cjnMgmt"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "Bits",
      "IpAddress",
      "MODULE-IDENTITY",
      "Gauge32",
      "OBJECT-TYPE",
      "TimeTicks",
      "Counter32",
      "NOTIFICATION-TYPE",
      "Unsigned32",
      "OBJECT-IDENTITY",
      "iso",
      "MibIdentifier",
      "Integer32",
      "Counter64"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "RowStatus",
      "DisplayString",
      "TruthValue"
    ]
  },
  "cjnIpAListMgmt": {
    "name": "cjnIpAListMgmt",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5",
    "class": "moduleidentity",
    "lastupdated": "9902110000Z",
    "organization": "Lucent's Concord Technology Center (CTC)",
    "contactinfo": "Tim Lai -- twlai@lucent.com Raj Duggal (Group Leader) -- rduggal@lucent.com Ira Steckler -- isteckler@lucent.com",
    "description": "The IP Access List Table for the Cajun Router."
  },
  "ipACListCtlTable": {
    "name": "ipACListCtlTable",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table is used to add/delete access list. This table maintain a list of access lists in the system. Each access list is made up of a group of access rule. The access rules are stored in the ipACRuleTable."
  },
  "ipACListCtlEntry": {
    "name": "ipACListCtlEntry",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IP-ACCESS-LIST-MIB",
        "object": "ipACListCtlName",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "The information concerning one of the IP access list."
  },
  "ipACListCtlName": {
    "name": "ipACListCtlName",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 25
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Entry Name. Access List Name. If this instance is a string that represent a number, the following rules applies: 1 to 99 - ipACListCtlType must set to standard 101 to 199 - ipACListCtlType must set to extended others - cannot be created If this instance is a string that does not represent a number, the ipACListCtlType must be set before ipACListCtlStatus becomes active."
  },
  "ipACListCtlType": {
    "name": "ipACListCtlType",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Type of Access List: unset (0) standard (1) extended (2) This instance cannot be changed once ipACListCtlStatus becomes active. The value of this instance must compile with the rule listed in the ipACListCtlName instance."
  },
  "ipACListCtlStatus": {
    "name": "ipACListCtlStatus",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "For creation/deletion of IP access control statement. active (1) -- is set when both ipACListCtlName and ipACListCtlType is set. notInService (2) -- is set when ipACListCtlName or ipACListCtlType is not set. notReady (3) createAndGo (4) -- is set on creating new access list. createAndWait (5) destroy (6) -- is set on destroying an existed access list. The management should inspect the ipACRuleTable and delete all the related entries. An entry in the ipACRuleTable is related to this entry if ipACListCtlName equals ipACRuleName."
  },
  "ipACRuleTable": {
    "name": "ipACRuleTable",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table is used to add/delete individual access rule statement in an access list."
  },
  "ipACRuleEntry": {
    "name": "ipACRuleEntry",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IP-ACCESS-LIST-MIB",
        "object": "ipACRuleName",
        "implied": 0
      },
      {
        "module": "IP-ACCESS-LIST-MIB",
        "object": "ipACRuleSubIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "The ipAccessRuleEntry control all the conditional fields and its parameters for an access rule."
  },
  "ipACRuleName": {
    "name": "ipACRuleName",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 25
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Entry Name. Access List Name. This object identifies which access list this access rule belongs to. This object shall identify the instance of the ipACListCtlEntry object. "
  },
  "ipACRuleSubIndex": {
    "name": "ipACRuleSubIndex",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 128
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Entry sub index. Each access list entry may has multiple rules. This sub index identified each rule."
  },
  "ipACRuleOwner": {
    "name": "ipACRuleOwner",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "local": 1,
          "external": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "local",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The string identifies the media which was used to create/modify this access rule. Local indicates creation via web, cli or snmp. external indicates an external client (ie. CajunRules)"
  },
  "ipACRuleSrcAddr": {
    "name": "ipACRuleSrcAddr",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The IP address of the source address. A value of 0 in ipACListSrcMask indicates this is a DON'T CARE field."
  },
  "ipACRuleSrcAddrWild": {
    "name": "ipACRuleSrcAddrWild",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This field specifies the wildcard of the source IP address."
  },
  "ipACRuleSrcMask": {
    "name": "ipACRuleSrcMask",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The instance is not writable if the corresponding ipACListCtlType is standard. The MASK address of the source address. A value of 0 indicates this field and ipACListSrcAddr are DON'T CARE"
  },
  "ipACRuleSrcMaskWild": {
    "name": "ipACRuleSrcMaskWild",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The instance is not writable if the corresponding ipACListCtlType is standard. This field specifies the wildcard of the source IP mask."
  },
  "ipACRuleDstAddr": {
    "name": "ipACRuleDstAddr",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The instance is not writable if the corresponding ipACListCtlType is standard. The IP address of the destination address. A value of 0 in ipAccessListDstMask indicates this is a DON'T CARE field."
  },
  "ipACRuleDstAddrWild": {
    "name": "ipACRuleDstAddrWild",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The instance is not writable if the corresponding ipACListCtlType is standard. This field specifies the wildcard of the destination IP address."
  },
  "ipACRuleDstMask": {
    "name": "ipACRuleDstMask",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The instance is not writable if the corresponding ipACListCtlType is standard. The MASK address of the destination address. A value of 0 indicates this field and ipACListDstAddr are DON'T CARE"
  },
  "ipACRuleDstMaskWild": {
    "name": "ipACRuleDstMaskWild",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The instance is not writable if the corresponding ipACListCtlType is standard. This field specifies the wildcard of the destination IP mask."
  },
  "ipACRuleOperation": {
    "name": "ipACRuleOperation",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "filter": 1,
          "forwardPriority1": 2,
          "forwardPriority2": 3,
          "forwardPriority3": 4,
          "forwardPriority4": 5,
          "forwardPriority5": 6,
          "forwardPriority6": 7,
          "forwardPriority7": 8,
          "forwardPriority8": 9,
          "forwardNoChange": 10
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "How to operate the IP ACCESS CONTROL statement, on the receiving packet."
  },
  "ipACRuleProtocol": {
    "name": "ipACRuleProtocol",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65537
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The instance is not writable if the corresponding ipACListCtlType is standard. Over which protocol does the IP ACCESS CONTROL statement activate. A value of 65536 is don't care. A value of 65537 means both TCP and UDP. Note: Cajun P550 does not allow ipACListProtocol equal to TCP or UDP because of hardware limitation. This limitation will be lift in the future."
  },
  "ipACRuleL4SrcPortMin": {
    "name": "ipACRuleL4SrcPortMin",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65536
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The instance is not writable if the corresponding ipACListCtlType is standard. If ipACRuleProtocol is TCP(6), UDP(17), or TCP & UDP(65536), this field and ipACListL4SrcPortMax specifies a range of source ports. This field specifies the lower bound of the port range for the access rule. A value of 65536 is don't care. This field has no meaning if ipACRuleProtocol is not TCP(6), UDP(17), or TCP & UDP(65536), and it should be 65536. "
  },
  "ipACRuleL4SrcPortMax": {
    "name": "ipACRuleL4SrcPortMax",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65536
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The instance is not writable if the corresponding ipACListCtlType is standard. If ipACRuleProtocol is TCP(6), UDP(17), or TCP & UDP(65536), this field and ipACListL4SrcPortMin specifies a range of source ports. This field specifies the upper bound of the port range for the access rule. A value of 65536 is don't care. This field has no meaning if ipACRuleProtocol is not TCP(6), UDP(17), or TCP & UDP(65536), and it should be 65536. "
  },
  "ipACRuleL4DestPortMin": {
    "name": "ipACRuleL4DestPortMin",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65536
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The instance is not writable if the corresponding ipACListCtlType is standard. If ipACRuleProtocol is TCP(6), UDP(17), or TCP & UDP(65536), this field and ipACListL4DestPortMax specifies a range of destination ports. This field specifies the lower bound of the port range for the access rule. A value of 65536 is don't care. This field has no meaning if ipACRuleProtocol is not TCP(6), UDP(17), or TCP & UDP(65536), and it should be 65536. "
  },
  "ipACRuleL4DestPortMax": {
    "name": "ipACRuleL4DestPortMax",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65536
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The instance is not writable if the corresponding ipACListCtlType is standard. If ipACRuleProtocol is TCP(6), UDP(17), or TCP & UDP(65536), this field and ipACListL4DestPortMin specifies a range of destination ports. This field specifies the upper bound of the port range for the access rule. A value of 65536 is don't care. This field has no meaning if ipACRuleProtocol is not TCP(6), UDP(17), or TCP & UDP(65536), and it should be 65536. "
  },
  "ipACRuleStatus": {
    "name": "ipACRuleStatus",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "For create/delete of a IP access rule statement. active (1) notInService (2) notReady (3) createAndGo (4) createAndWait (5) destroy (6) createAndWait and createAndGo is set on creating new access list. destory is set on destroying access rule. active is set when all the required instance is set in the entry."
  },
  "ipACRuleEstablished": {
    "name": "ipACRuleEstablished",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This field indicates an established TCP connection."
  },
  "ipACRuleLog": {
    "name": "ipACRuleLog",
    "oid": "1.3.6.1.4.1.1751.2.43.3.5.2.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This field indicates whether the access-list should log information."
  },
  "cjnIpForwardCtlMgt": {
    "name": "cjnIpForwardCtlMgt",
    "oid": "1.3.6.1.4.1.1751.2.43.3.6",
    "class": "objectidentity"
  },
  "ipForwardCtlEnabled": {
    "name": "ipForwardCtlEnabled",
    "oid": "1.3.6.1.4.1.1751.2.43.3.6.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The object control the enable or disable the forwarding control mechanism in the system."
  },
  "ipForwardCtlACName": {
    "name": "ipForwardCtlACName",
    "oid": "1.3.6.1.4.1.1751.2.43.3.6.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 25
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object identifies which access list to use for IP forward control. This object shall identify the instance of the ipACListCtlEntry object. "
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/IP-ACCESS-LIST-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 20:00:31 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "IP-ACCESS-LIST-MIB"
  }
}