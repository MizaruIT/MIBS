{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "Bits",
      "Counter64",
      "OBJECT-IDENTITY",
      "enterprises",
      "OBJECT-TYPE",
      "NOTIFICATION-TYPE",
      "Counter32",
      "MibIdentifier",
      "IpAddress",
      "TimeTicks",
      "Unsigned32",
      "MODULE-IDENTITY",
      "Integer32",
      "iso",
      "Gauge32"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "ibm": {
    "name": "ibm",
    "oid": "1.3.6.1.4.1.2",
    "class": "objectidentity"
  },
  "ibmProd": {
    "name": "ibmProd",
    "oid": "1.3.6.1.4.1.2.6",
    "class": "objectidentity"
  },
  "systemsMonitor6000": {
    "name": "systemsMonitor6000",
    "oid": "1.3.6.1.4.1.2.6.12",
    "class": "objectidentity"
  },
  "smProgramInformation": {
    "name": "smProgramInformation",
    "oid": "1.3.6.1.4.1.2.6.12.1",
    "class": "objectidentity"
  },
  "smMlmNetworkInformation": {
    "name": "smMlmNetworkInformation",
    "oid": "1.3.6.1.4.1.2.6.12.3",
    "class": "objectidentity"
  },
  "smMlmThreshold": {
    "name": "smMlmThreshold",
    "oid": "1.3.6.1.4.1.2.6.12.5",
    "class": "objectidentity"
  },
  "smMlmAnalysis": {
    "name": "smMlmAnalysis",
    "oid": "1.3.6.1.4.1.2.6.12.6",
    "class": "objectidentity"
  },
  "smMlmFilter": {
    "name": "smMlmFilter",
    "oid": "1.3.6.1.4.1.2.6.12.7",
    "class": "objectidentity"
  },
  "smMlmAlias": {
    "name": "smMlmAlias",
    "oid": "1.3.6.1.4.1.2.6.12.8",
    "class": "objectidentity"
  },
  "smMlmTrapDestination": {
    "name": "smMlmTrapDestination",
    "oid": "1.3.6.1.4.1.2.6.12.9",
    "class": "objectidentity"
  },
  "smMlmAdministration": {
    "name": "smMlmAdministration",
    "oid": "1.3.6.1.4.1.2.6.12.10",
    "class": "objectidentity"
  },
  "smMlmStatusMonitor": {
    "name": "smMlmStatusMonitor",
    "oid": "1.3.6.1.4.1.2.6.12.12",
    "class": "objectidentity"
  },
  "smMlmDiscovery": {
    "name": "smMlmDiscovery",
    "oid": "1.3.6.1.4.1.2.6.12.13",
    "class": "objectidentity"
  },
  "smMlmProgramData": {
    "name": "smMlmProgramData",
    "oid": "1.3.6.1.4.1.2.6.12.1.1",
    "class": "objectidentity"
  },
  "smMlmResourceUsage": {
    "name": "smMlmResourceUsage",
    "oid": "1.3.6.1.4.1.2.6.12.1.2",
    "class": "objectidentity"
  },
  "smMlmProgramMessages": {
    "name": "smMlmProgramMessages",
    "oid": "1.3.6.1.4.1.2.6.12.1.3",
    "class": "objectidentity"
  },
  "smMlmProgramEnvironmentVars": {
    "name": "smMlmProgramEnvironmentVars",
    "oid": "1.3.6.1.4.1.2.6.12.1.4",
    "class": "objectidentity"
  },
  "smMlmProgramDescription": {
    "name": "smMlmProgramDescription",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.1",
    "class": "objectidentity"
  },
  "smMlmProgramControl": {
    "name": "smMlmProgramControl",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.2",
    "class": "objectidentity"
  },
  "smMlmProgramLog": {
    "name": "smMlmProgramLog",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.3",
    "class": "objectidentity"
  },
  "smMlmProgramDataCollection": {
    "name": "smMlmProgramDataCollection",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.4",
    "class": "objectidentity"
  },
  "smMlmProgramSetableTestObjects": {
    "name": "smMlmProgramSetableTestObjects",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.5",
    "class": "objectidentity"
  },
  "smMlmProgramTrapLog": {
    "name": "smMlmProgramTrapLog",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.6",
    "class": "objectidentity"
  },
  "smMlmProgramName": {
    "name": "smMlmProgramName",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Official name of the Mid-Level Manager."
  },
  "smMlmProgramNumber": {
    "name": "smMlmProgramNumber",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Program number for the Mid-Level Manager."
  },
  "smMlmProgramVersion": {
    "name": "smMlmProgramVersion",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Version number of the Mid-Level Manager."
  },
  "smMlmProgramCompilationDate": {
    "name": "smMlmProgramCompilationDate",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Date and time when the Mid-Level Manager was compiled."
  },
  "smMlmProgramUpTime": {
    "name": "smMlmProgramUpTime",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Time (in hundredths of a second) since the Mid-Level Manager was last re-initialized."
  },
  "smMlmProgramContact": {
    "name": "smMlmProgramContact",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Textual identification of the contact person for the Mid-Level Manager on this managed node and information on how to contact this person."
  },
  "smMlmProgramControlLocalConfigurationFile": {
    "name": "smMlmProgramControlLocalConfigurationFile",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Name of a local configuration file. When this field is set to a file name and smMlmProgramControlSaveConfiguration is set to true, a local configuration file is written to the path specified. When the Mid-Level Manager is reinitialized this file may be used as a configuration file if the '-i' option is used in conjunction with a '-c <configpath>', where the <configpath> corresponds to the path of this local configuration file. This can be thought of as a 'Save As...' file to record the current configuration for future rollback if necessary."
  },
  "smMlmProgramControlSavedFlags": {
    "name": "smMlmProgramControlSavedFlags",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Saved flags which will be used to start the agent. This field can be modified to be used with the smMlmProgramControlReInitializeMonitor function. The flags are saved in the file: /usr/etc/midmand.flags. On NT the flags are saved in the file: smv2/mlmv2.flg (for mlmv2)."
  },
  "smMlmProgramControlAgentAddress": {
    "name": "smMlmProgramControlAgentAddress",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Address of the box where MLM is running. This address is used while generating traps."
  },
  "smMlmProgramControlMaxTcpTrapQueue": {
    "name": "smMlmProgramControlMaxTcpTrapQueue",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.2.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Maximum number of Tcp traps which are queued when the Tcp connection is down. Default value is 2048."
  },
  "smMlmProgramControlPercentMultiplier": {
    "name": "smMlmProgramControlPercentMultiplier",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.2.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "reserved."
  },
  "smMlmProgramControlSamplesPerInterval": {
    "name": "smMlmProgramControlSamplesPerInterval",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.2.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of samples per interval to use for baselining and statistics. Default value is 10."
  },
  "smMlmProgramControlMaxOutstandingPingRequests": {
    "name": "smMlmProgramControlMaxOutstandingPingRequests",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.2.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The maximum number of outstanding ping requests allowed for status checking. Default is 32."
  },
  "smMlmProgramControlRetryCount": {
    "name": "smMlmProgramControlRetryCount",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.2.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default number of retries for actions that can be retried. Not implemented."
  },
  "smMlmProgramControlTimeout": {
    "name": "smMlmProgramControlTimeout",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.2.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Default number of timeout for actions that can timeout. Not implemented."
  },
  "smMlmProgramControlCurrentFlags": {
    "name": "smMlmProgramControlCurrentFlags",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.2.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Current flags which were used to start or re-initialize the agent."
  },
  "smMlmProgramControlReinitFlags": {
    "name": "smMlmProgramControlReinitFlags",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.2.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Re-intialize flags which will be used to start the agent. This field can be modified to be used with the smMlmProgramControlReInitializeMonitor function. For NT, this variable provides the time the Mid-Level Manager was last initialized. A SET to this will reinitialize the program. New command-line parameters can optionally be provided on the set. If no value is passed on the set (or if the 'last initialized' time string is passed), the Mid-Level Manager will reinitialize using original command-line parameters."
  },
  "smMlmProgramControlReInitializeMonitor": {
    "name": "smMlmProgramControlReInitializeMonitor",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.2.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "false": 1,
          "trueReinit": 2,
          "trueSaved": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Allows the re-initializaton of the Mid-Level Manager Agent. Setting to trueReinit(2) uses the flags in smMlmProgramControlReinitFlags as the start-up flags. Setting to trueSaved(3) uses the flags in smMlmProgramControlSavedFlags as the start-up flags. The value of this variable returns to false once the re-start has occurred."
  },
  "smMlmProgramControlSaveConfiguration": {
    "name": "smMlmProgramControlSaveConfiguration",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.2.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "false": 1,
          "true": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this variable to true(2) results in the current Mid-Level Manager Agent configuration being saved to the file specified by the value of the smMlmProgramControl LocalConfigurationFile variable. The value of this variable returns to false once the configuration is saved."
  },
  "smMlmProgramLogFileName": {
    "name": "smMlmProgramLogFileName",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "File name for logging information in the Mid-Level Manager Agent. The type of information being logged depends on the trace mask (ie. smMlmProgramLogMask)."
  },
  "smMlmProgramLogFileSize": {
    "name": "smMlmProgramLogFileSize",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Current size of the log file in bytes."
  },
  "smMlmProgramLogMaxFileSize": {
    "name": "smMlmProgramLogMaxFileSize",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.3.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Maximum size of the log file in kilobytes."
  },
  "smMlmProgramLogNumFiles": {
    "name": "smMlmProgramLogNumFiles",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.3.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Maximum number of log files to keep. When the data log file is full, it is rolled over to <logFilename>1. Files are rolled up until the number of files specified by this field exists (ie. <LogFilename>1 becomes <LogFilename>2, etc.)."
  },
  "smMlmProgramLogFileBehavior": {
    "name": "smMlmProgramLogFileBehavior",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.3.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "wrapFlush": 1,
          "wrapNoflush": 2,
          "nowrapFlush": 3,
          "nowrapNoflush": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field determines what is done when the maximum file size is exceeded and the number of log files specified already exists. If wrap is specified, then the oldest log file is removed, all other files are rolled up, and logging continues into a new file. If nowrap is specified, no more data will be logged until either the log file name is changed or the existing files are renamed (or removed). Flushing refers to whether or not each log entry is immediately written to the log file or whether the log data is written out in large chunks containing multiple log entries. Flushing allows the log file to always contain the latest log entries. However, CPU time can be saved if flushing is not activated."
  },
  "smMlmProgramLogMask": {
    "name": "smMlmProgramLogMask",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.3.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The log mask field is used to indicate the type of information that is being logged. The log mask may contain the following literals: none logs nothing inform logs informational messages warning logs warning messages error logs error messages base logs Remote Manager base information command logs command table information filter logs filter table information analysis logs analysis table information threshold logs threshold table information polling logs MIB variable polling information smux logs SMUX interface traffic binary logs packets sent/received in binary call logs all internal functions called all logs all information For NT the log mask may contain the following literals: binary - logs packets sent/received in binary also invokes the call literal, call - logs all internal functions called, all - logs all information, screen - logs information to the screen"
  },
  "smMlmProgramDataCollectionFileName": {
    "name": "smMlmProgramDataCollectionFileName",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The data collection filename refers to the file used to store the data associated with the entries in the threshold table. The corresponding threshold table entry must have it's state set to enabledStoreOnly or enabledThresholdStore in order for data to be collected."
  },
  "smMlmProgramDataCollectionFileSize": {
    "name": "smMlmProgramDataCollectionFileSize",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the current size of the collection file in bytes."
  },
  "smMlmProgramDataCollectionMaxFileSize": {
    "name": "smMlmProgramDataCollectionMaxFileSize",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Maximum size of the data collection file in kilobytes. The action taken when the collection file contains this MaxFileSize Kbytes is determined by the data collection FileBehavior MIB variable."
  },
  "smMlmProgramDataCollectionNumFiles": {
    "name": "smMlmProgramDataCollectionNumFiles",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.4.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field refers to the number of collection files to keep. When the data collection file is full, <collFilename> is rolled up to <collFilename>1 (where <collFilename> refers to the file defined by the DataCollectionFileName MIB variable). Files are 'rolled up' until the number of files specified by this field exists (ie. <collFilename>1 becomes <collFilename>2, etc.)."
  },
  "smMlmProgramDataCollectionFileBehavior": {
    "name": "smMlmProgramDataCollectionFileBehavior",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.4.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "wrapFlush": 1,
          "wrapNoflush": 2,
          "nowrapFlush": 3,
          "nowrapNoflush": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field determines what is done when the maximum file size is exceeded AND the number of collection files specified already exists. If wrap is specified, then the oldest collection file is removed, all other files are rolled up, and collection continues into a new file. If nowrap is specified, no more data will be collected until either the collection file name is changed or the existing files are renamed (or removed). Flushing refers to whether or not each collection entry is immediately written to the log file or whether the collection data is written out in large chunks containing multiple collection entries. Flushing allows the collection file to always contain the latest collection entries. However, CPU time can be saved if flushing is not activated."
  },
  "smMlmProgramTrapLogFileName": {
    "name": "smMlmProgramTrapLogFileName",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.6.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "File name for logging information about traps that are received by the Mid-Level Manager. The type of information being logged depends on the trace mask (ie. smMlmProgramTrapLogMask)."
  },
  "smMlmProgramTrapLogFileSize": {
    "name": "smMlmProgramTrapLogFileSize",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.6.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Current size of the trap log file in bytes."
  },
  "smMlmProgramTrapLogMaxFileSize": {
    "name": "smMlmProgramTrapLogMaxFileSize",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.6.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Maximum size of the trap log file in kilobytes."
  },
  "smMlmProgramTrapLogNumFiles": {
    "name": "smMlmProgramTrapLogNumFiles",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.6.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Maximum number of trap log files to keep. When the log file is full, it is rolled over to <traplogFilename>1. Files are rolled up until the number of files specified by this field exists (ie. <trapLogFilename>1 becomes <trapLogFilename>2, etc.)."
  },
  "smMlmProgramTrapLogFileBehavior": {
    "name": "smMlmProgramTrapLogFileBehavior",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.6.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "wrapFlush": 1,
          "wrapNoflush": 2,
          "nowrapFlush": 3,
          "nowrapNoflush": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field determines what is done when the maximum file size is exceeded and the number of trap log files specified already exists. If wrap is specified, then the oldest trap log file is removed, all other files are rolled up, and logging continues into a new file. If nowrap is specified, no more data will be logged until either the trap log file name is changed or the existing files are renamed (or removed). Flushing refers to whether or not each log entry is immediately written to the trap log file or whether the log data is written out in large chunks containing multiple log entries. Flushing allows the trap log file to always contain the latest log entries. However, CPU time can be saved if flushing is not activated."
  },
  "smMlmProgramTrapLogMask": {
    "name": "smMlmProgramTrapLogMask",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.6.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": " Not yet implemented ."
  },
  "smMlmProgramControlSetableInteger": {
    "name": "smMlmProgramControlSetableInteger",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.5.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A settable integer with no function."
  },
  "smMlmProgramControlSetableCounter": {
    "name": "smMlmProgramControlSetableCounter",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.5.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A settable counter with no function."
  },
  "smMlmProgramControlSetableGauge": {
    "name": "smMlmProgramControlSetableGauge",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.5.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A settable gauge with no function."
  },
  "smMlmProgramControlSetableIpAddress": {
    "name": "smMlmProgramControlSetableIpAddress",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.5.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A settable IP address with no function."
  },
  "smMlmProgramControlSetableTimeTicks": {
    "name": "smMlmProgramControlSetableTimeTicks",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.5.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A settable TimeTicks with no function."
  },
  "smMlmProgramControlSetableOctetString": {
    "name": "smMlmProgramControlSetableOctetString",
    "oid": "1.3.6.1.4.1.2.6.12.1.1.5.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A settable DisplayString with no function."
  },
  "smMlmResourceUsageTable": {
    "name": "smMlmResourceUsageTable",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Mid-Level Manager resource utilization table."
  },
  "smMlmResourceUsageEntry": {
    "name": "smMlmResourceUsageEntry",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmResourceUsageName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains a different resource summary."
  },
  "smMlmResourceUsageName": {
    "name": "smMlmResourceUsageName",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Self, child, and total."
  },
  "smMlmResourceUsageUserTime": {
    "name": "smMlmResourceUsageUserTime",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Amount of CPU time in user mode since start-up."
  },
  "smMlmResourceUsageSystemTime": {
    "name": "smMlmResourceUsageSystemTime",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Amount of CPU time in system mode since start-up."
  },
  "smMlmResourceUsageTotalTime": {
    "name": "smMlmResourceUsageTotalTime",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Total CPU time for process since start-up."
  },
  "smMlmResourceUsageMaxrss": {
    "name": "smMlmResourceUsageMaxrss",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Maximum resident set size."
  },
  "smMlmResourceUsageIxrss": {
    "name": "smMlmResourceUsageIxrss",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Integral size (kilobyte-seconds)."
  },
  "smMlmResourceUsageIdrss": {
    "name": "smMlmResourceUsageIdrss",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Unshared resident set size (kilobyte-seconds)."
  },
  "smMlmResourceUsageIsrss": {
    "name": "smMlmResourceUsageIsrss",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Unshared stack set size (kilobyte-seconds). Not supported on HP-UX"
  },
  "smMlmResourceUsageMinflt": {
    "name": "smMlmResourceUsageMinflt",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Page faults serviced without I/O activity."
  },
  "smMlmResourceUsageMajflt": {
    "name": "smMlmResourceUsageMajflt",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Page faults serviced with I/O activity."
  },
  "smMlmResourceUsageNSwap": {
    "name": "smMlmResourceUsageNSwap",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of times a process swapped."
  },
  "smMlmResourceUsageInBlock": {
    "name": "smMlmResourceUsageInBlock",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of times a file system performed input."
  },
  "smMlmResourceUsageOutBlock": {
    "name": "smMlmResourceUsageOutBlock",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of times a file system performed output."
  },
  "smMlmResourceUsageMsgsnd": {
    "name": "smMlmResourceUsageMsgsnd",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of IPC messages sent."
  },
  "smMlmResourceUsageMsgrcv": {
    "name": "smMlmResourceUsageMsgrcv",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of IPC messages received."
  },
  "smMlmResourceUsageNSignals": {
    "name": "smMlmResourceUsageNSignals",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of signals received."
  },
  "smMlmResourceUsageVcsw": {
    "name": "smMlmResourceUsageVcsw",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of voluntary context switches."
  },
  "smMlmResourceUsageIcsw": {
    "name": "smMlmResourceUsageIcsw",
    "oid": "1.3.6.1.4.1.2.6.12.1.2.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of involuntary context switches."
  },
  "smMlmProgramMessagesTable": {
    "name": "smMlmProgramMessagesTable",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Mid-Level Manager information and error messages."
  },
  "smMlmProgramMessagesEntry": {
    "name": "smMlmProgramMessagesEntry",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmProgramMessagesRowNumber",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains a different message summary."
  },
  "smMlmProgramMessagesRowNumber": {
    "name": "smMlmProgramMessagesRowNumber",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Table index - no real meaning."
  },
  "smMlmProgramMessagesTime": {
    "name": "smMlmProgramMessagesTime",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Time at which the message was generated."
  },
  "smMlmProgramMessagesText": {
    "name": "smMlmProgramMessagesText",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Text of the message. Truncated after 80 bytes"
  },
  "smMlmProgramMessagesTimeStamp": {
    "name": "smMlmProgramMessagesTimeStamp",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Time (in seconds) at which message was generated."
  },
  "smMlmProgramDataCollectTable": {
    "name": "smMlmProgramDataCollectTable",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Mid-Level Manager information and error messages."
  },
  "smMlmProgramDataCollectEntry": {
    "name": "smMlmProgramDataCollectEntry",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmProgramDataCollectRowNumber",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains a different message summary."
  },
  "smMlmProgramDataCollectRowNumber": {
    "name": "smMlmProgramDataCollectRowNumber",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Table index - no real meaning."
  },
  "smMlmProgramDataCollectTime": {
    "name": "smMlmProgramDataCollectTime",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Time at which the message was generated."
  },
  "smMlmProgramDataCollectText": {
    "name": "smMlmProgramDataCollectText",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Text of the message. Truncated after 80 bytes"
  },
  "smMlmProgramDataCollectTimeStamp": {
    "name": "smMlmProgramDataCollectTimeStamp",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Time (in seconds) at which message was generated."
  },
  "smMlmProgramTrapTable": {
    "name": "smMlmProgramTrapTable",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Mid-Level Manager information and error messages."
  },
  "smMlmProgramTrapEntry": {
    "name": "smMlmProgramTrapEntry",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmProgramTrapRowNumber",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains a different message summary."
  },
  "smMlmProgramTrapRowNumber": {
    "name": "smMlmProgramTrapRowNumber",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Table index - no real meaning."
  },
  "smMlmProgramTrapTime": {
    "name": "smMlmProgramTrapTime",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Time at which the message was generated."
  },
  "smMlmProgramTrapText": {
    "name": "smMlmProgramTrapText",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Text of the message. Truncated after 80 bytes"
  },
  "smMlmProgramTrapTimeStamp": {
    "name": "smMlmProgramTrapTimeStamp",
    "oid": "1.3.6.1.4.1.2.6.12.1.3.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Time (in seconds) at which message was generated."
  },
  "smMlmProgramEnvHostAddress": {
    "name": "smMlmProgramEnvHostAddress",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Host Address of the system running Mid-Level Manager."
  },
  "smMlmProgramEnvHostName": {
    "name": "smMlmProgramEnvHostName",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Host name of the system running Mid-Level Manager."
  },
  "smMlmProgramEnvHostDomainName": {
    "name": "smMlmProgramEnvHostDomainName",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Domain name of the Mid-Level Manager."
  },
  "smMlmProgramEnvTableVars": {
    "name": "smMlmProgramEnvTableVars",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4",
    "class": "objectidentity"
  },
  "smMlmProgramEnvThresholdTableVars": {
    "name": "smMlmProgramEnvThresholdTableVars",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5",
    "class": "objectidentity"
  },
  "smMlmProgramEnvThresholdName": {
    "name": "smMlmProgramEnvThresholdName",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This field is not accessible. It is inserted in MIB to obtain an object id for the environment variable containing the threshold table entry command name. The object id of the environment variable is carried in the threshold trap."
  },
  "smMlmProgramEnvThresholdArmState": {
    "name": "smMlmProgramEnvThresholdArmState",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This field is not accessible. It is inserted in MIB to obtain an object id for the environment variable that indicates whether the threshold is in arm or rearm state. The object id of the environment variable is carried in the threshold trap."
  },
  "smMlmProgramEnvThresholdCondition": {
    "name": "smMlmProgramEnvThresholdCondition",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This field is not accessible. It is inserted in MIB to obtain an object id for the environment variable containing the condition operation for threshold value. The object id of the environment variable is carried in the threshold trap."
  },
  "smMlmProgramEnvThresholdValue": {
    "name": "smMlmProgramEnvThresholdValue",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This field is not accessible. It is inserted in MIB to obtain an object id for the environment variable containing the value of the condition against which the variable value is tested. The object id of the environment variable is carried in the threshold trap."
  },
  "smMlmProgramEnvThresholdNode": {
    "name": "smMlmProgramEnvThresholdNode",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This field is not accessible. It is inserted in MIB to obtain an object id for the environment variable containing the name of the node which was polled. The object id of the environment variable is carried in the threshold trap."
  },
  "smMlmProgramEnvThresholdProxy": {
    "name": "smMlmProgramEnvThresholdProxy",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This field is not accessible. It is inserted in MIB to obtain an object id for the environment variable containing the name of the proxy on the node which was polled. Null if not a proxy. The object id of the environment variable is carried in the threshold trap."
  },
  "smMlmProgramEnvThresholdAddressNode": {
    "name": "smMlmProgramEnvThresholdAddressNode",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This field is not accessible. It is inserted in MIB to obtain an object id for the environment variable containing the address of the node which was polled. The object id of the environment variable is carried in the threshold trap."
  },
  "smMlmProgramEnvThresholdDomainName": {
    "name": "smMlmProgramEnvThresholdDomainName",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This field is not accessible. It is inserted in MIB to obtain an object id for the environment variable containing the domain name of the node which was polled. The object id of the environment variable is carried in the threshold trap."
  },
  "smMlmProgramEnvThresholdPort": {
    "name": "smMlmProgramEnvThresholdPort",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This field is not accessible. It is inserted in MIB to obtain an object id for the environment variable containing the port corresponding to the subagent or the proxy agent at the node which was polled. The object id of the environment variable is carried in the threshold trap."
  },
  "smMlmProgramEnvThresholdVarId": {
    "name": "smMlmProgramEnvThresholdVarId",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This field is not accessible. It is inserted in MIB to obtain an object id for the environment variable containing the object Identifier of the variable polled. The object id of the environment variable is carried in the threshold trap."
  },
  "smMlmProgramEnvThresholdVarType": {
    "name": "smMlmProgramEnvThresholdVarType",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This field is not accessible. It is inserted in MIB to obtain an object id for the environment variable containing the type of the variable polled. The object id of the environment variable is carried in the threshold trap."
  },
  "smMlmProgramEnvThresholdVarValue": {
    "name": "smMlmProgramEnvThresholdVarValue",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This field is not accessible. It is inserted in MIB to obtain an object id for the environment variable containing the value of the variable polled. The object id of the environment variable is carried in the threshold trap."
  },
  "smMlmProgramEnvThresholdSeverity": {
    "name": "smMlmProgramEnvThresholdSeverity",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This field is not accessible. It is inserted in MIB to obtain an object id for the environment variable containing the value of the rearm or arm severity. The object id of the environment variable is carried in the threshold trap."
  },
  "smMlmProgramEnvThresholdVarInstance": {
    "name": "smMlmProgramEnvThresholdVarInstance",
    "oid": "1.3.6.1.4.1.2.6.12.1.4.4.5.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This field is not accessible. It is inserted in MIB to obtain an object id for the environment variable containing the object Identifier instance of the variable polled. The object id of the environment variable is carried in the threshold trap."
  },
  "smMlmNetworkSessionInformation": {
    "name": "smMlmNetworkSessionInformation",
    "oid": "1.3.6.1.4.1.2.6.12.3.1",
    "class": "objectidentity"
  },
  "smMlmNetworkIfStatusInformation": {
    "name": "smMlmNetworkIfStatusInformation",
    "oid": "1.3.6.1.4.1.2.6.12.3.2",
    "class": "objectidentity"
  },
  "smMlmNetworkSessionCount": {
    "name": "smMlmNetworkSessionCount",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of open sessions."
  },
  "smMlmNetworkSessionTable": {
    "name": "smMlmNetworkSessionTable",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Session table - list of nodes with which this agent is communicating."
  },
  "smMlmNetworkSessionEntry": {
    "name": "smMlmNetworkSessionEntry",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmNetworkSessionName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains objects for a particular device"
  },
  "smMlmNetworkSessionName": {
    "name": "smMlmNetworkSessionName",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Name or IP address of the node in the Mid-Level Manager monitor session."
  },
  "smMlmNetworkSessionCurrentState": {
    "name": "smMlmNetworkSessionCurrentState",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "down": 1,
          "up": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Last known state of session"
  },
  "smMlmNetworkSessionLastStateChange": {
    "name": "smMlmNetworkSessionLastStateChange",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Time at which session state last changed."
  },
  "smMlmNetworkSessionLastPollAttempt": {
    "name": "smMlmNetworkSessionLastPollAttempt",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Time at which session was last polled."
  },
  "smMlmNetworkSessionAddressFamily": {
    "name": "smMlmNetworkSessionAddressFamily",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unix": 1,
          "inet": 2,
          "implink": 3,
          "pup": 4,
          "chaos": 5,
          "ns": 6,
          "osi": 7,
          "ecma": 8,
          "datakit": 9,
          "ccitt": 10,
          "sna": 11,
          "decnet": 12,
          "dli": 13,
          "lat": 14,
          "hylink": 15,
          "appletalk": 16,
          "route": 17,
          "link": 18,
          "xtpPseudo": 19,
          "intf": 20,
          "rif": 21,
          "netware": 22,
          "reserved23": 23,
          "reserved24": 24,
          "reserved25": 25,
          "reserved26": 26,
          "reserved27": 27,
          "reserved28": 28,
          "reserved29": 29,
          "reserved30": 30,
          "reserved31": 31,
          "reserved32": 32,
          "unknown": 65535
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Address family used to communicate with session"
  },
  "smMlmNetworkSessionNetAddress": {
    "name": "smMlmNetworkSessionNetAddress",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Remote Address of session."
  },
  "smMlmNetworkSessionTransmitAttempts": {
    "name": "smMlmNetworkSessionTransmitAttempts",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of send transmit attempts made on session."
  },
  "smMlmNetworkSessionPacketsReceived": {
    "name": "smMlmNetworkSessionPacketsReceived",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of packets received on session."
  },
  "smMlmNetworkSessionLastTransmitTime": {
    "name": "smMlmNetworkSessionLastTransmitTime",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Last Time at which a transmission was sent"
  },
  "smMlmNetworkSessionLastReceiveTime": {
    "name": "smMlmNetworkSessionLastReceiveTime",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Last Time at which a packet was received"
  },
  "smMlmNetworkSessionMinimumResponseTime": {
    "name": "smMlmNetworkSessionMinimumResponseTime",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Minimum round-trip time to session since start-up."
  },
  "smMlmNetworkSessionRecentAverageResponseTime": {
    "name": "smMlmNetworkSessionRecentAverageResponseTime",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Average response time for the most recent queries."
  },
  "smMlmNetworkSessionLifeTimeAverageResponseTime": {
    "name": "smMlmNetworkSessionLifeTimeAverageResponseTime",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Average response time since start-up."
  },
  "smMlmNetworkSessionMaximumResponseTime": {
    "name": "smMlmNetworkSessionMaximumResponseTime",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Maximum round-trip time to session since start-up."
  },
  "smMlmNetworkSessionMinimumResponseTimeStamp": {
    "name": "smMlmNetworkSessionMinimumResponseTimeStamp",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Time stamp at which the SessionMinimumResponseTime was set."
  },
  "smMlmNetworkSessionMaximumResponseTimeStamp": {
    "name": "smMlmNetworkSessionMaximumResponseTimeStamp",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Time stamp at which the SessionMaximumResponseTime was set."
  },
  "smMlmNetworkSessionProxyAddress": {
    "name": "smMlmNetworkSessionProxyAddress",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Proxy Address of session, if session is with a proxy agent."
  },
  "smMlmNetworkSessionPort": {
    "name": "smMlmNetworkSessionPort",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Remote port of session."
  },
  "smMlmNetworkSessionDomainName": {
    "name": "smMlmNetworkSessionDomainName",
    "oid": "1.3.6.1.4.1.2.6.12.3.1.2.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Domain Name of session."
  },
  "smMlmNetworkIfStatusTable": {
    "name": "smMlmNetworkIfStatusTable",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Interface status table. This table is used to store the status and status checking protocol (ie. ICMP for IP) for each interface. This table is populated as a direct result of entries in the smMlmStatusMonitorTable."
  },
  "smMlmNetworkIfStatusEntry": {
    "name": "smMlmNetworkIfStatusEntry",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmNetworkIfStatusAddressFamily",
        "implied": 0
      },
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmNetworkIfStatusRawNetAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains objects for a status checking policy. The configuration specified is applied to all nodes and interfaces in the specified host."
  },
  "smMlmNetworkIfStatusAddressFamily": {
    "name": "smMlmNetworkIfStatusAddressFamily",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unix": 1,
          "inet": 2,
          "implink": 3,
          "pup": 4,
          "chaos": 5,
          "ns": 6,
          "osi": 7,
          "ecma": 8,
          "datakit": 9,
          "ccitt": 10,
          "sna": 11,
          "decnet": 12,
          "dli": 13,
          "lat": 14,
          "hylink": 15,
          "appletalk": 16,
          "route": 17,
          "link": 18,
          "xtpPseudo": 19,
          "intf": 20,
          "rif": 21,
          "netware": 22,
          "reserved23": 23,
          "reserved24": 24,
          "reserved25": 25,
          "reserved26": 26,
          "reserved27": 27,
          "reserved28": 28,
          "reserved29": 29,
          "reserved30": 30,
          "reserved31": 31,
          "reserved32": 32,
          "unknown": 65535
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates the transport protocol used and determines the status checking protocol to be used."
  },
  "smMlmNetworkIfStatusRawNetAddress": {
    "name": "smMlmNetworkIfStatusRawNetAddress",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field specifies the address of the interface in octets."
  },
  "smMlmNetworkIfStatusNetAddress": {
    "name": "smMlmNetworkIfStatusNetAddress",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field specifies the address of the interface as a printable string."
  },
  "smMlmNetworkIfStatusHostName": {
    "name": "smMlmNetworkIfStatusHostName",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field specifies the hostname that corresponds to the address specified in the smMlmNetworkIfStatusNetAddress field."
  },
  "smMlmNetworkIfStatusMonitorEntryName": {
    "name": "smMlmNetworkIfStatusMonitorEntryName",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field is used to correlate this entry with the status monitor entry that governs the status checking of this interface."
  },
  "smMlmNetworkIfStatusMonitorFrequency": {
    "name": "smMlmNetworkIfStatusMonitorFrequency",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The frequency at which the interface is being status checked. This field reflects the frequency configured in the governing status monitoring entry. It is displayed for information purposes only. In order to change this field the corresponding governing status entry's frequency must be changed or a new status entry may be introduced for this interface which overrides the existing entry."
  },
  "smMlmNetworkIfStatusCurrentState": {
    "name": "smMlmNetworkIfStatusCurrentState",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "down": 2,
          "up": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates the current status of the interface."
  },
  "smMlmNetworkIfStatusLastStateChange": {
    "name": "smMlmNetworkIfStatusLastStateChange",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field displays the date/time string of the last state change."
  },
  "smMlmNetworkIfStatusLastStatusCheck": {
    "name": "smMlmNetworkIfStatusLastStatusCheck",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field displays the date/time string of the last time the interface status was checked."
  },
  "smMlmNetworkIfStatusLastResponseTime": {
    "name": "smMlmNetworkIfStatusLastResponseTime",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field displays the date/time string of the last time the status response was received."
  },
  "smMlmNetworkIfStatusResetRoundTripStats": {
    "name": "smMlmNetworkIfStatusResetRoundTripStats",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "false": 1,
          "true": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this field to true(1) will reset the counts for packets sent/received and last/max/min/avg roundtrip times."
  },
  "smMlmNetworkIfStatusNumRequestsTransmitted": {
    "name": "smMlmNetworkIfStatusNumRequestsTransmitted",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains a count of the total number of status request packets sent since the entry was instantiated (or the statistics were reset)."
  },
  "smMlmNetworkIfStatusNumResponsesReceived": {
    "name": "smMlmNetworkIfStatusNumResponsesReceived",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains a count of the total number of status response packets received since the entry was instantiated (or the statistics were reset)."
  },
  "smMlmNetworkIfStatusLastRoundTripTime": {
    "name": "smMlmNetworkIfStatusLastRoundTripTime",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the number of time ticks from the time the status packet was sent until its response was received."
  },
  "smMlmNetworkIfStatusAvgRoundTripTime": {
    "name": "smMlmNetworkIfStatusAvgRoundTripTime",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the average round trip time of the status packets received since the entry was instantiated (or the statistics were reset)."
  },
  "smMlmNetworkIfStatusMinRoundTripTime": {
    "name": "smMlmNetworkIfStatusMinRoundTripTime",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the minimum round trip time of the status packets received since the entry was instantiated (or the statistics were reset)."
  },
  "smMlmNetworkIfStatusMinRoundTripTimeStamp": {
    "name": "smMlmNetworkIfStatusMinRoundTripTimeStamp",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the time stamp for the minimum round trip time."
  },
  "smMlmNetworkIfStatusMaxRoundTripTime": {
    "name": "smMlmNetworkIfStatusMaxRoundTripTime",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the maximum round trip time of the status packets received since the entry was instantiated (or the statistics were reset)."
  },
  "smMlmNetworkIfStatusMaxRoundTripTimeStamp": {
    "name": "smMlmNetworkIfStatusMaxRoundTripTimeStamp",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the time stamp for the maximum round trip time."
  },
  "smMlmNetworkIfStatusLastUp": {
    "name": "smMlmNetworkIfStatusLastUp",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field displays the date/time string of the last up time."
  },
  "smMlmNetworkIfStatusLastDown": {
    "name": "smMlmNetworkIfStatusLastDown",
    "oid": "1.3.6.1.4.1.2.6.12.3.2.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field displays the date/time string of the last down time."
  },
  "smMlmThresholdTable": {
    "name": "smMlmThresholdTable",
    "oid": "1.3.6.1.4.1.2.6.12.5.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Threshold table."
  },
  "smMlmThresholdEntry": {
    "name": "smMlmThresholdEntry",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmThresholdName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains objects for a particular threshold."
  },
  "smMlmThresholdState": {
    "name": "smMlmThresholdState",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabledThresholdOnly": 3,
          "enabledStoreOnly": 4,
          "enabledThresholdStore": 5,
          "disabled": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "State for the threshold operation. The store operation allows the saving of the MIB variable data in a file during the threshold polling process. The threshold operation checks the value of retrieved variables against a threshold; these operations can be combined. When the threshold entry is enabled, it may participate based on threshold activation or deactivation times. The threshold entry is participating if the smMlmThresholdParticipationState is set to active."
  },
  "smMlmThresholdName": {
    "name": "smMlmThresholdName",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field is used as a label and as the SNMP instance identifier for variables in this row. The threshold name is appended to the row variable to uniquely identify the instance variable. For example, the instance of smMlmThresholdState (object ID .1.3.6.1.4.1.2.6.12.5.1.1.1) for a threshold entry named A is 65, with the full object identifier being .1.3.6.1.4.1.2.6.12.5.1.1.1.65. Each octet in in smMlmThresholdName is a value in dot notation for the variable."
  },
  "smMlmThresholdDescription": {
    "name": "smMlmThresholdDescription",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This is a description of the threshold being performed for the benefit of administrators only; it is not used by the agent."
  },
  "smMlmThresholdOwnerID": {
    "name": "smMlmThresholdOwnerID",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Owner ID (IP address or hostname) who generated this entry (not currently used)."
  },
  "smMlmThresholdLocalRemoteMIBVariable": {
    "name": "smMlmThresholdLocalRemoteMIBVariable",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the MIB variable or expression on which thresholding is to be performed, in dotted numeric notation, followed by an instance identifier. For example, to perform threshold checking mib-2.interfaces.ifTable.ifEntry.ifInErrors (object ID .1.3.6.1.2.1.2.2.1.14) for interface 1, this field would contain .1.3.6.1.2.1.2.2.1.14.1. To perform threshold checking on all instances of a variable, an asterisk can be used. In the previous example, to perform threshold checking on all interfaces, the object ID .1.3.6.1.2.1.2.2.1.14.* would be entered. The instance ID can also be a non-numeric string, in which case each octet in the string is converted to an object identifier. For example, to threshold on the smMlmSystemFileSystemPercentUsed variable (object ID .1.3.6.1.4.1.2.6.12.2.5.2.1.4) for the /usr directory, .1.3.6.1.4.1.2.6.12.2.5.2.1.4./usr would be placed in this field since the Remote Manager filesystem table uses the directory name as the index. Most of the tables supported by the Remote Manager use a name as an index, so using the character form of the name provides a simple way to specify an instance identifier. Threshold MIB variable expressions can be any expression comprised of local or remote node MIB variables with the following high to low precedence and left to right associativity of operators: () : grouping - : unary minus * : multiplication, / : division, % : remainder + : addition, - : subtraction << : bitwise left shift, >> : bitwise right shift & : bitwise AND ^ : bitwise exclusive OR | : bitwise inclusive OR Expression evaluation/operators are based on standard c program execution. Counter MIB variables default to the delta value, calculated by subtracting the old MIB value from the current MIB value. Integer and gauge MIB variables default to the current value returned. The two functions @delta() and @value() can be used to override the above defaults. Displaystrings can be converted to a real value using the @delta() and @value() functions. Built-in functions available within expressions include: @sum(MIB variable expression, MIB variable expression, ...) - returns the sum of all values. @avg(MIB variable expression, MIB variable expression, ...) - returns the average of all values. @min(MIB variable expression, MIB variable expression, ...) - returns the minimum of all values. @max(MIB variable expression, MIB variable expression, ...) - returns the maximum of all values. @diff(MIB variable expression, MIB variable expression) - returns the positive difference in the two expressions. @delta(MIB variable expression) - uses the delta value calculated by subtracting the last returned MIB variable value from the current MIB variable value. This function can be used to force delta calculations on integer, gauge, and displaystring MIB variables. @value(MIB variable expression) - uses the current MIB variable value. This function can be used to force the use of actual values for counter MIB variables. @numInst(MIB variable expression) - returns the number of instances found for the MIB variable expression. @abs(MIB variable expression) - returns the positive value of the expression. @rand() - returns a random number between 0 and 42949667295. The \\ character can be used as an escape character in the object ID to input the special character: period(.). For example: .1.3.6.1.2.1.2.2.1.14.1.\\. replaces the \\. with the integer 46, the ASCII decimal value for period(.). Agent Policy Manager (APM) uses the special string: {NV_x.x.x.x} as part of the object ID and the periods within the string ARE converted to the ASCII decimal value of 46. In other words, the periods are treated as characters instead of object ID delimiters. When using the Mid-Level Manager, if a name followed by a colon is prepended to the object identifier, it is taken to be an alias for a group of nodes (if defined in the Remote Manager Alias Table) or the name of a remote node. For example, entering aixnm007:1.3.6.1.2.1.2.2.1.14.* will cause threshold checking to be performed on all instances of ifInErrors on machine aixnm007. If aixnm007 is defined in the Alias Table as an alias for a group of machines, threshold checking of these variables will be done for every machine in the group."
  },
  "smMlmThresholdCondition": {
    "name": "smMlmThresholdCondition",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Condition operation for the threshold value. [type keyword] [statistics keyword] condition Allowed conditions are: =, >, >=, >+, <, <=, <-, !=, !, ~, ~=, !~, !~=, &, |, changes, doesNotChange, exists, and doesNotExist. The ~(LIKE) condition is for extended regular expression checking on strings. The style of the regular expression is of the format for the ed or egrep command. The ~(LIKE) is case insensitive, while the ~=(LIKE CASE) is case sensitive. The >+ and <- condition checks for a value increase(>+) above or a value decrease(<-) below the threshold value on consecutive polls. Once the condition is met the rearm condition is also checked on consecutive polls. The change condition causes a watchdog operation to be performed. That is, if the value changes between consecutive polls, the condition is satisfied. (The threshold value is ignored in this case). Similarly, the exist/doesNotExist checks for the actual existence of the MIB variable; this is useful for checking for the existence of rows in a table. The & and | conditions cause the MIB variable value to be ANDed/Ored with threshold value; if the result is nonzero, the condition is met and the trap and/or command to execute is performed. NOTE: Thresholds for Counter variables are computed by calculating the change(delta) in the sampled values and comparing this against the threshold value. In the case of Gauge and INTEGER variables, the actual value of the variable is checked against the threshold value. The statistics keywords 'iMax', 'iMin', 'iAvg', 'iSd', 'iVar', 'iRate', 'Max', 'Min', 'Avg', 'Sd', and 'Var' if placed in front of the condition (and separated from if by a space) allows the use of the interval or lifetime maximum, minimum, average, standard deviation, variance, and rate. These values are calculated for each MIB variable returned in the threshold. For the interval keywords the sampling interval is defined by the MIB variable: smMlmProgramControlSamplesPerInterval. For example, if the smMlmProgramControlSamplesPerInterval is 10 then the 'iAvg' keyword is the average value of the last ten samples returned to the threshold for each MIB value. The type keywords 'delta' and 'value', if placed in front of the condition or statistics keywords (and separated from it by a space) will override this default behavior. For example, a condition of 'value >' will cause threshold checking to be performed against the actual value rather than the change in the value even if the selected MIB variable is a Counter; a condition of 'delta >' causes the change in the variable (from the previous value) to be checked against the threshold, regardless of the type of the variable."
  },
  "smMlmThresholdValue": {
    "name": "smMlmThresholdValue",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the value against which retrieved variables are checked. The type of check which is done depends on the type of the retrieved variable. If the variable is numeric (INTEGER, Counter, etc.) this field is presumed to be a number, and a numeric comparison is performed using the specified threshold condition. If the retrieved variable is a DisplayString (OCTET STRING) and the 'value' keyword is used on the condition then both the retrieved variable and this field can be converted to a floating point number, a floating-point comparison is done; otherwise a string comparison is done. If the ~(LIKE) or ~=(LIKE CASE) condition is used then the value can be an extended regular expression. A value expression is also allowed to be specified. The expression can be any expression comprised of the following functions: 'Min' - lifetime minimum 'iMin' - interval minimum 'Max' - lifetime maximum 'iMax' - interval maximum 'Avg' - lifetime average 'iAvg' - interval average 'Sd' - lifetime standard 'iSd' - interval standard deviation deviation 'Var' - lifetime variance 'iVar' - interval variance 'Smpls' - lifetime samples 'iSmpls' - interval samples 'sTime' - sample time in secs 'iTime' - interval time in secs 'iRate' - rate of change over the interval The interval is defined by the MIB variable: smMlmProgramControlSamplesPerInterval. The expression has the following high to low precedence and left to right associativity of operators: () : grouping - : unary minus * : multiplication, / : division, % : remainder + : addition, - : subtraction << : bitwise left shift, >> : bitwise right shift & : bitwise AND ^ : bitwise exclusive OR | : bitwise inclusive OR Expression evaluation/operators are based on standard c program execution. For example: Avg+2*Sd is the average value over the lifetime of the threshold plus two times the standard deviation."
  },
  "smMlmThresholdPollTime": {
    "name": "smMlmThresholdPollTime",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Threshold polling time. Polling units are decimal values appended by the unit: d - day, h - hour, m - minute, or s - second. If no unit is appended, the value is minutes. Multiple values/units are allowed (i.e. 1h45m = 1 hour, 45 minutes). The default poll time is 1 minute."
  },
  "smMlmThresholdLastValue": {
    "name": "smMlmThresholdLastValue",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Last threshold value retrieved, in human-readable form. If more than one numeric value was retrieved for the threshold (because an alias was used or because multiple instances were retrieved), this field contains a note to see the Threshold Results Table for multiple results."
  },
  "smMlmThresholdIntegerDataMax": {
    "name": "smMlmThresholdIntegerDataMax",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Not Implemented."
  },
  "smMlmThresholdIntegerDataMin": {
    "name": "smMlmThresholdIntegerDataMin",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Not Implemented."
  },
  "smMlmThresholdIntegerDataAvg": {
    "name": "smMlmThresholdIntegerDataAvg",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Not Implemented."
  },
  "smMlmThresholdArmSeverity": {
    "name": "smMlmThresholdArmSeverity",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the severity for the trap which is to be sent when an arm condition is met. Default is 1."
  },
  "smMlmThresholdReArmSeverity": {
    "name": "smMlmThresholdReArmSeverity",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the severity for the trap which is to be sent when a rearm condition is met. Default is 0."
  },
  "smMlmThresholdResultIndex": {
    "name": "smMlmThresholdResultIndex",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "integer": 2,
          "counter": 3,
          "gauge": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Index to point to the expression result type. The index defines how the expression is evaluated, either using signed arithmetic for integer or unsigned arithmetic for counter and gauge. The result for counter wraps on overflow or underflow; the result for gauge latches at 0 for underflow or 4294967295 for overflow. Default value is integer."
  },
  "smMlmThresholdResultsTableState": {
    "name": "smMlmThresholdResultsTableState",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When enabled the threshold result(s) are stored in the Threshold Result Table. When disabled, no entries are generated for the Threshold Result Table. Default is enabled."
  },
  "smMlmThresholdTrapDescription": {
    "name": "smMlmThresholdTrapDescription",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A human-readable description for the trap to be generated; this description is sent in the trap for operator use. The environment variables listed below, pre-appended with a $ sign, are allowed in the trap description field. SM6K_HOSTNAME={hostname running subagent} SM6K_DOMAIN_NAME={fully qualified hostname} SM6K_HOST_ADDRESS={ip address} SM6K_INSTANCE_NAME={instance string of row} SM6K_INSTANCE_ID={instance ASCII octet value of row} SM6K_THRESHOLD_CONDITION={condition in the threshold} SM6K_THRESHOLD_VALUE={threshold value} SM6K_THRESHOLD_ARMSTATE={-1 for arm, 0 for rearm} SM6K_THRESHOLD_THROTTLE_COUNT={count for arm or rearm} SM6K_THRESHOLD_NODE={node on which threshold condition was met} SM6K_THRESHOLD_VAR_OID={Object ID of variable for the threshold} SM6K_THRESHOLD_VAR_INSTANCE={instance for Object ID} SM6K_THRESHOLD_VAR_TYPE={Integer|Counter|Gauge} SM6K_THRESHOLD_VAR_VALUE={value of variable for the threshold} SM6K_THRESHOLD_VAR_OLDVALUE={previous value of variable} SM6K_THRESHOLD_SEVERITY={severity of threshold condition}"
  },
  "smMlmThresholdArmEnterprise": {
    "name": "smMlmThresholdArmEnterprise",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the SNMP enterprise id for the trap which is to be sent when a threshold condition is met. If this is not set, a default will be used."
  },
  "smMlmThresholdSpecificTrap": {
    "name": "smMlmThresholdSpecificTrap",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies a specific trap number to be sent when a threshold condition is met. If this value is zero, no trap will be sent."
  },
  "smMlmThresholdCommandToExecute": {
    "name": "smMlmThresholdCommandToExecute",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Command to execute when threshold is met. A value of blank means no command is to be executed on a threshold met condition. Environment variables which are available on execution are: SM6K_HOSTNAME={hostname running subagent} SM6K_DOMAIN_NAME={fully qualified hostname} SM6K_HOST_ADDRESS={ip address} SM6K_INSTANCE_NAME={instance string of row} SM6K_INSTANCE_ID={instance ASCII octet value of row} SM6K_EXECUTION_REASON=Threshold SM6K_THRESHOLD_CONDITION={condition in the threshold} SM6K_THRESHOLD_VALUE={threshold value} SM6K_THRESHOLD_ARMSTATE={-1 for arm, 0 for rearm} SM6K_THRESHOLD_THROTTLE_COUNT={count for arm or rearm} SM6K_THRESHOLD_NODE={node on which threshold condition was met} SM6K_THRESHOLD_VAR_OID={Object ID of variable for the threshold} SM6K_THRESHOLD_VAR_INSTANCE={instance for Object ID} SM6K_THRESHOLD_VAR_TYPE={Integer|Counter|Gauge} SM6K_THRESHOLD_VAR_VALUE={value of variable for the threshold} SM6K_THRESHOLD_VAR_OLDVALUE={previous value of variable} SM6K_THRESHOLD_SEVERITY={severity of threshold condition}"
  },
  "smMlmThresholdReArmCondition": {
    "name": "smMlmThresholdReArmCondition",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Condition operation for the rearm threshold value. [type keyword] [statistics keyword] condition Allowed conditions are: =, >, >=, >+, <, <=, <-, !=, !, ~, ~=, !~, !~=, &, |, changes, doesNotChange, exists, and doesNotExist. Checking against the rearm condition is started when a threshold is reached and is stopped when the rearm condition is met. Once the rearm condition is met, the threshold condition operation is restarted. The ~(LIKE) condition is for extended regular expression checking on strings. The style of the regular expression is of the format for the ed or egrep command. The ~(LIKE) is case insensitive, while the ~=(LIKE CASE) is case sensitive. The >+ and <- condition checks for a value increase(>+) above or a value decrease(<-) below the threshold value on consecutive polls. Once the condition is met the arm condition is also checked on consecutive polls. NOTE: Thresholds for Counter variables are computed by calculating the change per second in the sampled values and comparing these against the threshold value. In the case of Gauge and INTEGER variables, the actual value of the variable is checked against the threshold value. The statistics keywords 'iMax', 'iMin', 'iAvg', 'iSd', 'iVar', 'iRate', 'Max', 'Min', 'Avg', 'Sd', and 'Var' if placed in front of the condition (and separated from if by a space) allows the use of the interval or lifetime maximum, minimum, average, standard deviation, variance, and rate. These values are calculated for each MIB variable returned in the threshold. For the interval keywords the sampling interval is defined by the MIB variable: smMlmProgramControlSamplesPerInterval. For example, if the smMlmProgramControlSamplesPerInterval is 10 then the 'iAvg' keyword is the average value of the last ten samples returned to the threshold for each MIB value. The type keywords 'delta' and 'value', if placed in front of the condition or statistics keywords (and separated from it by a space) will override this default behavior. For example, a condition of 'value >' will cause threshold checking to be performed against the actual value rather than the change in the value even if the selected MIB variable is a Counter; a condition of 'delta >' causes the change in the variable (from the previous value) to be checked against the threshold, regardless of the type of the variable."
  },
  "smMlmThresholdReArmValue": {
    "name": "smMlmThresholdReArmValue",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the value against which retrieved variables are checked. The type of check which is done depends on the type of the retrieved variable. If the variable is numeric (INTEGER, Counter, etc.) this field is presumed to be a number, and a numeric comparison is performed using the specified threshold condition. If the retrieved variable is a DisplayString (OCTET STRING) and the 'value' keyword is used on the condition then both the retrieved variable and this field can be converted to a floating point number, a floating-point comparison is done; otherwise a string comparison is done. If the ~(LIKE) or ~=(LIKE CASE) condition is used then the value can be an extended regular expression. A value expression is also allowed to be specified. The expression can be any expression comprised of the following functions: 'Min' - lifetime minimum 'iMin' - interval minimum 'Max' - lifetime maximum 'iMax' - interval maximum 'Avg' - lifetime average 'iAvg' - interval average 'Sd' - lifetime standard 'iSd' - interval standard deviation deviation 'Var' - lifetime variance 'iVar' - interval variance 'Smpls' - lifetime samples 'iSmpls' - interval samples 'sTime' - sample time in secs 'iTime' - interval time in secs 'iRate' - rate of change over the interval The interval is defined by the MIB variable: smMlmProgramControlSamplesPerInterval. The expression has the following high to low precedence and left to right associativity of operators: () : grouping - : unary minus * : multiplication, / : division, % : remainder + : addition, - : subtraction << : bitwise left shift, >> : bitwise right shift & : bitwise AND ^ : bitwise exclusive OR | : bitwise inclusive OR Expression evaluation/operators are based on standard c program execution. For example: Avg+2*Sd is the average value over the lifetime of the threshold plus two times the standard deviation."
  },
  "smMlmThresholdReArmTrapDescription": {
    "name": "smMlmThresholdReArmTrapDescription",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Trap description for the generated rearm trap. The environment variables listed below, pre-appended with a $ sign, are allowed in the trap description field. SM6K_HOSTNAME={hostname running subagent} SM6K_DOMAIN_NAME={fully qualified hostname} SM6K_HOST_ADDRESS={ip address} SM6K_INSTANCE_NAME={instance string of row} SM6K_INSTANCE_ID={instance ASCII octet value of row} SM6K_THRESHOLD_CONDITION={condition in the threshold} SM6K_THRESHOLD_VALUE={threshold value} SM6K_THRESHOLD_ARMSTATE={-1 for arm, 0 for rearm} SM6K_THRESHOLD_THROTTLE_COUNT={count for arm or rearm} SM6K_THRESHOLD_NODE={node on which threshold condition was met} SM6K_THRESHOLD_VAR_OID={Object ID of variable for the threshold} SM6K_THRESHOLD_VAR_INSTANCE={instance for Object ID} SM6K_THRESHOLD_VAR_TYPE={Integer|Counter|Gauge} SM6K_THRESHOLD_VAR_VALUE={value of variable for the threshold} SM6K_THRESHOLD_VAR_OLDVALUE={previous value of variable} SM6K_THRESHOLD_SEVERITY={severity of threshold condition}"
  },
  "smMlmThresholdReArmEnterprise": {
    "name": "smMlmThresholdReArmEnterprise",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the SNMP enterprise id for the trap which is to be sent when a rearm condition is met. If this is not set, a default will be used."
  },
  "smMlmThresholdReArmSpecificTrap": {
    "name": "smMlmThresholdReArmSpecificTrap",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies a specific trap number to be sent when a rearm condition is met. If this value is zero, no trap will be sent."
  },
  "smMlmThresholdReArmCommandToExecute": {
    "name": "smMlmThresholdReArmCommandToExecute",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Command to execute when the rearm threshold is met. A value of blank means no command will be executed on a rearm threshold met condition. Environment variables which are available on execution are: SM6K_HOSTNAME={hostname running subagent} SM6K_DOMAIN_NAME={fully qualified hostname} SM6K_HOST_ADDRESS={ip address} SM6K_INSTANCE_NAME={instance string of row} SM6K_INSTANCE_ID={instance ASCII octet value of row} SM6K_EXECUTION_REASON=Threshold SM6K_THRESHOLD_CONDITION={condition in the threshold} SM6K_THRESHOLD_VALUE={threshold value} SM6K_THRESHOLD_ARMSTATE={-1 for arm, 0 for rearm} SM6K_THRESHOLD_THROTTLE_COUNT={count for arm or rearm} SM6K_THRESHOLD_NODE={node on which threshold condition was met} SM6K_THRESHOLD_VAR_OID={Object ID of variable for the threshold} SM6K_THRESHOLD_VAR_INSTANCE={instance for Object ID} SM6K_THRESHOLD_VAR_TYPE={integer|counter|gauge} SM6K_THRESHOLD_VAR_VALUE={value of variable for the threshold} SM6K_THRESHOLD_VAR_OLDVALUE={previous value of variable} SM6K_THRESHOLD_SEVERITY={severity of threshold condition}"
  },
  "smMlmThresholdLastChangedSession": {
    "name": "smMlmThresholdLastChangedSession",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the name of the last node for which a threshold arm/rearm condition was met."
  },
  "smMlmThresholdStandardError": {
    "name": "smMlmThresholdStandardError",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains informational and error messages for this threshold entry."
  },
  "smMlmThresholdLastResponseTime": {
    "name": "smMlmThresholdLastResponseTime",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the last time a (valid or invalid) response was received to a poll request."
  },
  "smMlmThresholdResponseCount": {
    "name": "smMlmThresholdResponseCount",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of responses received to date."
  },
  "smMlmThresholdTimeoutCount": {
    "name": "smMlmThresholdTimeoutCount",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of timeout conditions, indicating no response or an overrun condition (polling speed faster than the response time from the node(s) being queried)."
  },
  "smMlmThresholdNoValueCount": {
    "name": "smMlmThresholdNoValueCount",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of responses received containing no values. These responses may be caused by an invalid community name, by a remote SNMP subagent being down, or by a thresholding on a variable for which no instances exist."
  },
  "smMlmThresholdArmConditionMetCount": {
    "name": "smMlmThresholdArmConditionMetCount",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the total count that the arm condition has been met."
  },
  "smMlmThresholdReArmConditionMetCount": {
    "name": "smMlmThresholdReArmConditionMetCount",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the total count that the rearm condition has been met."
  },
  "smMlmThresholdThrottleArmCount": {
    "name": "smMlmThresholdThrottleArmCount",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the number of consecutive arm conditions which must be met before the threshold is armed. The ThresholdPollTime times the ThresholdThrottleArmCount minus 1 is the time interval in which the arm condition has been met. A value of 0 defaults to 1."
  },
  "smMlmThresholdThrottleReArmCount": {
    "name": "smMlmThresholdThrottleReArmCount",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the number of consecutive rearm conditions which must be met before the threshold is rearmed. The ThresholdPollTime times the ThresholdThrottleReArmCount minus 1 is the time interval in which the rearm condition has been met. A value of 0 defaults to 1."
  },
  "smMlmThresholdParticipationState": {
    "name": "smMlmThresholdParticipationState",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 2,
          "notEnabled": 1,
          "inactive": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field indicates whether or not the entry is participating in the threshold. When the threshold entry is active, it is participating. When the threshold rule is inactive, it is not participating in the threshold, but will be participating when the activation time arrives. The participation state can be inactive only if activation/deactivation days are specified. Otherwise, the participation state is activated when the smMlmThresholdState field is set to enabled. If this field is set to notEnabled, the smMlmThresholdState field is not set to enabled."
  },
  "smMlmThresholdActivationTime": {
    "name": "smMlmThresholdActivationTime",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the time to activate the threshold (ie. change the participation state from inactive to active). The format should be HH:MM where HH represents the hour (integer between 0 and 23) and MM represents the minute (integer between 0 and 59) to activate the threshold. A value all blanks will be interpreted as 00:00."
  },
  "smMlmThresholdActivationDayOfWeek": {
    "name": "smMlmThresholdActivationDayOfWeek",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.39",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the days of the week to activate the threshold at the time specified in the ActivationTime field (ie. change the participation state from inactive to active). The day of the week may be one of three literals: none - Doesn't Activate weekdays - Activates threshold entry on MTWThF all - Activates threshold entry every day SuMTWThFS Alternatively, the days of the week may be specified as a list of numbers between 0 and 6 (Sunday = 0, Monday = 1, ..., Saturday = 6). The expression '1,3,5' would activate the threshold entry at the specified time on MWF."
  },
  "smMlmThresholdDeactivationTime": {
    "name": "smMlmThresholdDeactivationTime",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.40",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the time to deactivate the threshold (ie. change the participation state from active to inactive). The format should be HH:MM where HH represents the hour (integer between 0 and 23) and MM represents the minute (integer between 0 and 59) to deactivate the threshold. A value all blanks will be interpreted as 00:00."
  },
  "smMlmThresholdDeactivationDayOfWeek": {
    "name": "smMlmThresholdDeactivationDayOfWeek",
    "oid": "1.3.6.1.4.1.2.6.12.5.1.1.41",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the days of the week to deactivate the threshold at the time specified in the DeactivationTime field (ie. change the participation state from active to inactive). The day of the week may be one of three literals: none - Doesn't deactivate weekdays - Dectivates threshold entry on MTWThF all - Deactivates threshold entry every day SuMTWThFS Alternatively, the days of the week may be specified as a list of numbers between 0 and 6 (Sunday = 0, Monday = 1, ..., Saturday = 6). The expression '1,3,5' would deactivate the threshold entry at the specified time on MWF."
  },
  "smMlmThresholdArmInfoTable": {
    "name": "smMlmThresholdArmInfoTable",
    "oid": "1.3.6.1.4.1.2.6.12.5.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Threshold Arm Information table. This table provides the threshold arm status information. The table will be updated based on the results of the threshold condition checking. possible actions are as follows: * adds a new entry if in arm condition, threshold met, and no entry found. * removes an entry if in arm condition, threshold not met, and entry found, or if in rearm condition, and threshold met"
  },
  "smMlmThresholdArmInfoEntry": {
    "name": "smMlmThresholdArmInfoEntry",
    "oid": "1.3.6.1.4.1.2.6.12.5.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmThresholdArmInfoName",
        "implied": 0
      },
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmThresholdArmInfoIpAddress",
        "implied": 0
      },
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmThresholdArmInfoIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains the threshold name, node's IP address, and the mib's oid."
  },
  "smMlmThresholdArmInfoName": {
    "name": "smMlmThresholdArmInfoName",
    "oid": "1.3.6.1.4.1.2.6.12.5.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field is the name of the threshold."
  },
  "smMlmThresholdArmInfoIpAddress": {
    "name": "smMlmThresholdArmInfoIpAddress",
    "oid": "1.3.6.1.4.1.2.6.12.5.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address of the node."
  },
  "smMlmThresholdArmInfoObjectID": {
    "name": "smMlmThresholdArmInfoObjectID",
    "oid": "1.3.6.1.4.1.2.6.12.5.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The oid of the mib variable."
  },
  "smMlmThresholdArmInfoIndex": {
    "name": "smMlmThresholdArmInfoIndex",
    "oid": "1.3.6.1.4.1.2.6.12.5.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field is simply used to append to the threshold name and IP address for uniqueness."
  },
  "smMlmThresholdResultsTable": {
    "name": "smMlmThresholdResultsTable",
    "oid": "1.3.6.1.4.1.2.6.12.5.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Threshold results table. This table provides the value results from the threshold table. The table is updated based on the results of the threshold table calculations. Possible actions are as follows: * adds a new entry if a new node/instance is found for the calculation. * removes an entry if a node/instance is not found for the previous calculation."
  },
  "smMlmThresholdResultsEntry": {
    "name": "smMlmThresholdResultsEntry",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmThresholdResultsName",
        "implied": 0
      },
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmThresholdResultsIpAddress",
        "implied": 0
      },
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmThresholdResultsIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains the threshold name, node's IP address, and the mib var's instance."
  },
  "smMlmThresholdResultsName": {
    "name": "smMlmThresholdResultsName",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field is the name of the threshold results."
  },
  "smMlmThresholdResultsIpAddress": {
    "name": "smMlmThresholdResultsIpAddress",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address of the node."
  },
  "smMlmThresholdResultsInstanceID": {
    "name": "smMlmThresholdResultsInstanceID",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The instance identifier of the mib variable."
  },
  "smMlmThresholdResultsIndex": {
    "name": "smMlmThresholdResultsIndex",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field is simply used to append to the threshold name and IP address for uniqueness."
  },
  "smMlmThresholdResultsResultTimeStamp": {
    "name": "smMlmThresholdResultsResultTimeStamp",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the date when the result was updated."
  },
  "smMlmThresholdResultsResultIndex": {
    "name": "smMlmThresholdResultsResultIndex",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "displaystring": 1,
          "integer": 2,
          "counter": 3,
          "gauge": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Index to point to output result type. The index defines how the expression is evaluated, either using signed arithmetic for integer or unsigned arithmetic for counter and gauge. The result for counter wraps on overflow or underflow; the result for gauge latches at 0 for underflow or 4294967295 for overflow. If the result is a string then the statistic information is not applicable."
  },
  "smMlmThresholdResultsIntegerResult": {
    "name": "smMlmThresholdResultsIntegerResult",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Integer result based on signed arithmetic."
  },
  "smMlmThresholdResultsCounterResult": {
    "name": "smMlmThresholdResultsCounterResult",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Counter result based on unsigned arithmetic; this wraps at the maximum or minimum value."
  },
  "smMlmThresholdResultsGaugeResult": {
    "name": "smMlmThresholdResultsGaugeResult",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Gauge result based on unsigned arithmetic; this latches at the maximum or minimum value."
  },
  "smMlmThresholdResultsDisplayStringResult": {
    "name": "smMlmThresholdResultsDisplayStringResult",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Display result as a displayable string. This string is generated based on the ResultsIndex for the type of the resultant expression: integer, counter, or gauge."
  },
  "smMlmThresholdResultsResetStats": {
    "name": "smMlmThresholdResultsResetStats",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "false": 1,
          "true": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this field to true(1) will reset all the statistics information for this result."
  },
  "smMlmThresholdResultsLifeTimeIntegerMin": {
    "name": "smMlmThresholdResultsLifeTimeIntegerMin",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results life time integer minimum"
  },
  "smMlmThresholdResultsLifeTimeIntegerMax": {
    "name": "smMlmThresholdResultsLifeTimeIntegerMax",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results life time integer maximum"
  },
  "smMlmThresholdResultsLifeTimeIntegerAvg": {
    "name": "smMlmThresholdResultsLifeTimeIntegerAvg",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results life time integer data average"
  },
  "smMlmThresholdResultsLifeTimeIntegerStdDeviation": {
    "name": "smMlmThresholdResultsLifeTimeIntegerStdDeviation",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results life time integer standard deviation"
  },
  "smMlmThresholdResultsLifeTimeCounterGaugeMin": {
    "name": "smMlmThresholdResultsLifeTimeCounterGaugeMin",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results life time counter/gauge minimum"
  },
  "smMlmThresholdResultsLifeTimeCounterGaugeMax": {
    "name": "smMlmThresholdResultsLifeTimeCounterGaugeMax",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results life time counter/gauge maximum"
  },
  "smMlmThresholdResultsLifeTimeCounterGaugeAvg": {
    "name": "smMlmThresholdResultsLifeTimeCounterGaugeAvg",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results life time counter/gauge data average"
  },
  "smMlmThresholdResultsLifeTimeCounterGaugeStdDeviation": {
    "name": "smMlmThresholdResultsLifeTimeCounterGaugeStdDeviation",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results life time counter/gauge standard deviation"
  },
  "smMlmThresholdResultsLifeTimeSamples": {
    "name": "smMlmThresholdResultsLifeTimeSamples",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results life time samples"
  },
  "smMlmThresholdResultsLifeTimeSeconds": {
    "name": "smMlmThresholdResultsLifeTimeSeconds",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results life time seconds"
  },
  "smMlmThresholdResultsLifeTimeMinTimeStamp": {
    "name": "smMlmThresholdResultsLifeTimeMinTimeStamp",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the date when the life time integer or counter/gauge minimum value was recorded."
  },
  "smMlmThresholdResultsLifeTimeMaxTimeStamp": {
    "name": "smMlmThresholdResultsLifeTimeMaxTimeStamp",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the date when the lifetime integer or counter/gauge maximum value was recorded."
  },
  "smMlmThresholdResultsIntervalIntegerMin": {
    "name": "smMlmThresholdResultsIntervalIntegerMin",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results interval integer minimum"
  },
  "smMlmThresholdResultsIntervalIntegerMax": {
    "name": "smMlmThresholdResultsIntervalIntegerMax",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results interval integer maximum"
  },
  "smMlmThresholdResultsIntervalIntegerAvg": {
    "name": "smMlmThresholdResultsIntervalIntegerAvg",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results interval integer data average"
  },
  "smMlmThresholdResultsIntervalIntegerStdDeviation": {
    "name": "smMlmThresholdResultsIntervalIntegerStdDeviation",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results interval integer standard deviation"
  },
  "smMlmThresholdResultsIntervalCounterGaugeMin": {
    "name": "smMlmThresholdResultsIntervalCounterGaugeMin",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results interval counter/gauge minimum"
  },
  "smMlmThresholdResultsIntervalCounterGaugeMax": {
    "name": "smMlmThresholdResultsIntervalCounterGaugeMax",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results interval counter/gauge maximum"
  },
  "smMlmThresholdResultsIntervalCounterGaugeAvg": {
    "name": "smMlmThresholdResultsIntervalCounterGaugeAvg",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results interval counter/gauge data average"
  },
  "smMlmThresholdResultsIntervalCounterGaugeStdDeviation": {
    "name": "smMlmThresholdResultsIntervalCounterGaugeStdDeviation",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results interval counter/gauge standard deviation"
  },
  "smMlmThresholdResultsIntervalSamples": {
    "name": "smMlmThresholdResultsIntervalSamples",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results interval samples"
  },
  "smMlmThresholdResultsIntervalSeconds": {
    "name": "smMlmThresholdResultsIntervalSeconds",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results interval seconds"
  },
  "smMlmThresholdResultsIntervalRate": {
    "name": "smMlmThresholdResultsIntervalRate",
    "oid": "1.3.6.1.4.1.2.6.12.5.3.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Results interval seconds rate of change"
  },
  "smMlmFilterDefaultAction": {
    "name": "smMlmFilterDefaultAction",
    "oid": "1.3.6.1.4.1.2.6.12.7.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "sendTraps": 1,
          "blockTraps": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Global default as to whether or not the traps received are to be sent or blocked. If the trap matches a filter entry, the action specified is taken. If the trap doesn't match a filter entry and sendTraps is specified, the trap destinations from the trap destination table are used."
  },
  "smMlmFilterUdpTrapReception": {
    "name": "smMlmFilterUdpTrapReception",
    "oid": "1.3.6.1.4.1.2.6.12.7.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicator of whether or not the Mid-Level Manager Agent should connect to the snmp trap socket using UDP. If enabled (1), the traps will be read from the udp port. If disabled (2), only traps generated by the Mid-Level Manager (e.g. thresholding, status, discovery traps) and traps read from the tcp socket will be filtered by the Mid-Level Manager. Note: This field cannot be set to enabled if another process on the host is already receiving traps (ie. the manager). Conversely, another process on the host (ie. the manager) will not be able to receive traps if this field is set to enabled. Therefore, if a manager is running on the same host as the Mid-Level Manager, this field should be set to disabled. If this field is set to enabled and any other process is connected to the port specified by the UdpTrapReceptionPort then UpdTrapReceptionStatus variable is set to portBusy. To check the availability of the port, this field should be disabled and then set to enabled."
  },
  "smMlmFilterTotalTrapsReceived": {
    "name": "smMlmFilterTotalTrapsReceived",
    "oid": "1.3.6.1.4.1.2.6.12.7.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Current count of the number of traps that have been received by the Mid-Level Manager. This count is reset to zero whenever both the UdpTrapReception MIB variable and the TcpTrapReception MIB variable are set to disabled (from a enabled state)."
  },
  "smMlmFilterTable": {
    "name": "smMlmFilterTable",
    "oid": "1.3.6.1.4.1.2.6.12.7.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Entries defining a particular filter. Each entry may be thought of as a single filter. Each filter is evaluated against each incoming trap. When the filter criteria matches the trap, the corresponding filter actions are taken. The table is indexed by the smMlmFilterName field."
  },
  "smMlmFilterEntry": {
    "name": "smMlmFilterEntry",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmFilterName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains the components for a particular filter."
  },
  "smMlmFilterState": {
    "name": "smMlmFilterState",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 3,
          "disabled": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "State for the filter rule. When the state is set to invalid, the filter is deleted. When the filter entry is set to disabled, the filter is dormant. When the filter rule is enabled, it may participate in the filter rule base. The filter rule is participating if the smMlmFilterParticipationState is set to active."
  },
  "smMlmFilterParticipationState": {
    "name": "smMlmFilterParticipationState",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 2,
          "notEnabled": 1,
          "inactive": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field indicates whether or not the rule is participating in the filter rule base. When the filter rule is active, it is participating. When the filter rule is inactive, it is not participating in the filter rule base, but will be participating when the activation time arrives. The participation state can be inactive only if activation/deactivation days are specified. Otherwise, the participation state is activated when the smMlmFilterState field is set to enabled. If this field is set to notEnabled, the smMlmFilterState field is not set to enabled."
  },
  "smMlmFilterName": {
    "name": "smMlmFilterName",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field contains the name for a particular filter. The instance identifier associated with every field in the filter entry is derived from the name (dot separated ASCII codes). Therefore, this name must be unique among all other filter names."
  },
  "smMlmFilterDescription": {
    "name": "smMlmFilterDescription",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Description of the filter. This field should contain a general description of what the filter accomplishes. A user should be able to read this information and know what filtering is being done as well as why it is being done."
  },
  "smMlmFilterAction": {
    "name": "smMlmFilterAction",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "sendTraps": 1,
          "blockTraps": 2,
          "throttleTraps": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field is used to determine whether or not the matching trap is forwarded on to a manager station. If sendTraps is specified, then the trap destinations specified in the filter are included in the list of destinations to which the trap is forwarded. If blockTraps is specified, then the trap will not be forwarded unless another filter is matched that specifies the trap is to be sent. When this field is set to ThrottleTraps, the throttle expression needs to be evaluated in order to decide whether to send or block the received trap."
  },
  "smMlmFilterEntryEnterpriseExpression": {
    "name": "smMlmFilterEntryEnterpriseExpression",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field is used to match the rule against the enterpriseID contained in the received trap. This is the default enterpriseID expression. If in the specific trap expression, this particular specific trap number does not have any enterpriseID associated with it for matching then the trap is matched with this rule. The entry may be an alias name (from the smMlmAlias table), an enterpriseID in dot notation, or an enterpriseID with a wildcard value (terminated by an asterisk). The enterpriseID in dot notation should be fully qualified. An enterpriseID with a wildcard value matches any enterpriseID with the same partial enterpriseID."
  },
  "smMlmFilterAgentAddrExpression": {
    "name": "smMlmFilterAgentAddrExpression",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field is used to match against the address of the agent that generated the trap. For the Mid-Level Manager, the agent address expression is a comma separated list of: 1) an smMlmAliasName (from the smMlmAlias table) 2) a resolvable hostname 3) an ipAddress expression. If the agent address expression contains an smMlmAliasName or hostname, the addresses to check the trap against are determined each time a trap is received. An ipAddress expression contains four dot separated sub-expressions that can be either: 1) a decimal number between 0 and 255 2) an inclusive range of numbers between 0 and 255 specified by [#-#] (ie. [0-127]) 3) an asterisk (which is simply interpreted as [0-255]). An example ipAddress expression is '9.67.[128-130].*'."
  },
  "smMlmFilterGenericExpression": {
    "name": "smMlmFilterGenericExpression",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field is used to match against the generic trap number contained in the received trap. This field allows a comma separated list of generic trap numbers. If specific trap numbers are to be checked, a 6 (ie. enterprise-specific trap) must be encoded in the generic expression. The generic traps are: 0 - Cold Start 1 - Warm Start 2 - Link Down 3 - Link Up 4 - Authentication Failure 5 - EGP Neighbor Loss 6 - Enterprise Specific"
  },
  "smMlmFilterSpecificExpression": {
    "name": "smMlmFilterSpecificExpression",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field is used to match against the specific trap number contained in the received trap along with the enterpriseID. This allows specific traps numbers to be grouped with enterpriseID. This field allows a comma separated list of specific groups or specific trap numbers or range of specific traps. A range of specific trap numbers may be specified by using the range format of '[#-#]' (ie. [100-199]). A group of specific trap numbers or range with EnterpriseID can be specified using the grouping format 'EnterpriseID(x,y,[a-b])' example: .1.3.6.1.4.1.2.6.12( 15, 20, [100-199]) This field will only be checked if a 6 (ie. enterprise-specific trap) is contained in the generic trap expression."
  },
  "smMlmFilterVariableExpression": {
    "name": "smMlmFilterVariableExpression",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field is used to match trap against the environment variables, set on the basis of MIB variables and other information flowing in the trap. The expression can be any expression with left operand as environment variable name( prepended with $) and right operand as values of variables or regular expression, with the following operators: () : grouping && : logical and || : logical or == : equal to != : not equal to < : less than <= : less than equal to > : greater than >= : greater than equal to ! : negation The precedence and associativity of operators is same as in c language and expression evaluation is based on standard c program execution. Set of environment variables that can be used in the expression are: SM6K_HOSTNAME={hostname running subagent} SM6K_DOMAIN_NAME={fully qualified hostname} SM6K_HOST_ADDRESS={ip address} SM6K_INSTANCE_NAME={instance string of row} SM6K_INSTANCE_ID={instance ASCII octet value of row} SM6K_EXECUTION_REASON=Filter_Matched|Filter_Armed| Filter_Disarmed SM6K_TRAP_ENTERPRISE={enterprise ID from the trap} SM6K_TRAP_AGENT_ADDRESS={IP address of the sending agent} SM6K_TRAP_GENERIC_NUM={generic trap number of the trap} SM6K_TRAP_SPECIFIC_NUM={specific trap number of the trap} SM6K_TRAP_TIME_TICKS={time ticks since the sending agent was started} SM6K_NUM_TRAP_VARS={number of MIB variables in the trap} SM6K_TRAP_VAR_OBJ_ID#={Object ID for MIB variable in trap} SM6K_TRAP_VAR_TYPE#=INTEGER|Counter|Gauge|TimeTicks| IpAddress|OCTET_STRING|Opaque| OBJECT_IDENTIFIER|NULL|Unknown SM6K_TRAP_VAR_VALUE#={value of the MIB object} where the # is replaced by the trap variable's positional number in the trap (starting at 1). Values can be in the form of integer, dot notation or string or hex string. If it is a string it should be within quotes. Format of regular expression is: RE:expression (within double quotes), where 'expression' is the extended regular expression in the style of ed or egrep command. example: Check for trap number 22 from System Information Agent. ( $SM6K_TRAP_ENTERPRISE == .1.3.6.1.4.1.2.6.12) && ( $SM6K_TRAP_SPECIFIC_NUM == 22 ) If the expression evaluates to TRUE, then the trap is matched."
  },
  "smMlmFilterTotalTrapsMatched": {
    "name": "smMlmFilterTotalTrapsMatched",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the number of traps that have matched this filter. This count is reset to zero whenever the filter entry's state is set to enabled (from the disabled state)."
  },
  "smMlmFilterActivationTime": {
    "name": "smMlmFilterActivationTime",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the time to activate the filter (ie. change the participation state from inactive to active). The format should be HH:MM where HH represents the hour (integer between 0 and 23) and MM represents the minute (integer between 0 and 59) to activate the filter. A value all blanks will be interpreted as 00:00."
  },
  "smMlmFilterActivationDayOfWeek": {
    "name": "smMlmFilterActivationDayOfWeek",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the days of the week to activate the filter at the time specified in the ActivationTime field (ie. change the participation state from inactive to active). The day of the week may be one of three literals: none - Doesn't Activate weekdays - Activates filter entry on MTWThF all - Activates filter entry every day SuMTWThFS Alternatively, the days of the week may be specified as a list of numbers between 0 and 6 (Sunday = 0, Monday = 1, ..., Saturday = 6). The expression '1,3,5' would activate the filter entry at the specified time on MWF."
  },
  "smMlmFilterDeactivationTime": {
    "name": "smMlmFilterDeactivationTime",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the time to deactivate the filter (ie. change the participation state from active to inactive). The format should be HH:MM where HH represents the hour (integer between 0 and 23) and MM represents the minute (integer between 0 and 59) to deactivate the filter. A value all blanks will be interpreted as 00:00."
  },
  "smMlmFilterDeactivationDayOfWeek": {
    "name": "smMlmFilterDeactivationDayOfWeek",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the days of the week to deactivate the filter at the time specified in the DeactivationTime field (ie. change the participation state from active to inactive). The day of the week may be one of three literals: none - Doesn't deactivate weekdays - Dectivates filter entry on MTWThF all - Deactivates filter entry every day SuMTWThFS Alternatively, the days of the week may be specified as a list of numbers between 0 and 6 (Sunday = 0, Monday = 1, ..., Saturday = 6). The expression '1,3,5' would deactivate the filter entry at the specified time on MWF."
  },
  "smMlmFilterTrapDestinations": {
    "name": "smMlmFilterTrapDestinations",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the destinations for any traps that match the filter criteria specified. This field allows ip addresses, alias names (from the smMlmAlias table) or resolvable hostnames separated by commas. If this field is left blank, the trap will be sent to the trap destinations specified in the smMlmTrapDestination table. Each host listed can specify a destination port number and protocol (tcp or udp ) or service name using the format: x+y/z where x can be ip address or hostname or alias name y can be port number or protocol or service name z can be port number or protocol. example: testhost+162/tcp or 9.67.162.81+udp/162 If the port or protocol is not specified then default value is used. The default port number is '162' and default protocol is 'udp'."
  },
  "smMlmFilterMatchedCommand": {
    "name": "smMlmFilterMatchedCommand",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the command to be executed when a received trap matches the filter. A set of environment variables are defined that contain information from the received trap. They may be used by the command that is executed. The following environment variables pertain to the Mid-Level Manager filter: SM6K_HOSTNAME={hostname running subagent} SM6K_DOMAIN_NAME={fully qualified hostname} SM6K_HOST_ADDRESS={ip address} SM6K_INSTANCE_NAME={instance string of row} SM6K_INSTANCE_ID={instance ASCII octet value of row} SM6K_EXECUTION_REASON=Filter_Matched|Filter_Armed| Filter_Disarmed The following environment variables pertain to the received trap: SM6K_TRAP_ENTERPRISE={enterprise ID from the trap} SM6K_TRAP_AGENT_ADDRESS={IP address of the sending agent} SM6K_TRAP_GENERIC_NUM={generic trap number of the trap} SM6K_TRAP_SPECIFIC_NUM={specific trap number of the trap} SM6K_TRAP_TIME_TICKS={time ticks since the sending agent was started} SM6K_NUM_TRAP_VARS={number of MIB variables in the trap} In addition, for each variable flowing in the trap: SM6K_TRAP_VAR_OBJ_ID#={Object ID for MIB variable in trap} SM6K_TRAP_VAR_TYPE#=INTEGER|Counter|Gauge|TimeTicks| IpAddress|OCTET_STRING|Opaque| OBJECT_IDENTIFIER|NULL|Unknown SM6K_TRAP_VAR_VALUE#={value of the MIB object} where the # is replaced by the trap variable's positional number in the trap (starting at 1) For more information see the accompanying documentation."
  },
  "smMlmFilterMatchedTrapDescription": {
    "name": "smMlmFilterMatchedTrapDescription",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Not implemented"
  },
  "smMlmFilterMatchedTrapEnterprise": {
    "name": "smMlmFilterMatchedTrapEnterprise",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Not implemented"
  },
  "smMlmFilterMatchedSpecificTrap": {
    "name": "smMlmFilterMatchedSpecificTrap",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Not implemented"
  },
  "smMlmFilterThrottleType": {
    "name": "smMlmFilterThrottleType",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "sendFirstN": 1,
          "sendAfterN": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field is used to indicate whether the throttle sends the first N matching traps (sendFirstN) or sends after receiving N matching traps (sendAfterN). The value of N is specified by the smMlmFilterThrottleArmTrapCount."
  },
  "smMlmFilterThrottleArmTrapCount": {
    "name": "smMlmFilterThrottleArmTrapCount",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the number of matching traps to receive before throttling is armed. This is the N referred to in the FilterThrottleType field."
  },
  "smMlmFilterThrottleArmedCommand": {
    "name": "smMlmFilterThrottleArmedCommand",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the command to execute when the ThrottleArmTrapCount number of traps have been received (ie. when the throttle is ARMED). A set of environment variables are defined that contain information from the received trap. They may be used by the command that is executed. The following environment variables pertain to the Mid-Level Manager filter: SM6K_HOSTNAME={hostname running subagent} SM6K_DOMAIN_NAME={fully qualified hostname} SM6K_HOST_ADDRESS={ip address} SM6K_INSTANCE_NAME={instance string of row} SM6K_INSTANCE_ID={instance ASCII octet value of row} SM6K_EXECUTION_REASON=Filter_Armed SM6K_THROTTLE_ARM_COUNT={value of ThrottleArmTrapCount} SM6K_THROTTLE_DISARM_COUNT={value of ThrottleDisarmTrapCount} SM6K_THROTTLE_DISARM_TIMER={value of ThrottleDisarmTimer} The following environment variables pertain to the received trap: SM6K_TRAP_ENTERPRISE={enterprise ID from the trap} SM6K_TRAP_AGENT_ADDRESS={IP address of the sending agent} SM6K_TRAP_GENERIC_NUM={generic trap number of the trap} SM6K_TRAP_SPECIFIC_NUM={specific trap number of the trap} SM6K_TRAP_TIME_TICKS={time ticks since the sending agent was started} SM6K_NUM_TRAP_VARS={number of MIB variables in the trap} In addition, for each variable flowing in the trap: SM6K_TRAP_VAR_OBJ_ID#={Object ID for MIB variable in trap} SM6K_TRAP_VAR_TYPE#=INTEGER|Counter|Gauge|TimeTicks| IpAddress|OCTET_STRING|Opaque| OBJECT_IDENTIFIER|NULL|Unknown SM6K_TRAP_VAR_VALUE#={value of the MIB object} where the # is replaced by the trap variable's positional number in the trap (starting at 1)."
  },
  "smMlmFilterThrottleArmedTrapDescription": {
    "name": "smMlmFilterThrottleArmedTrapDescription",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Not implemented"
  },
  "smMlmFilterThrottleArmedTrapEnterprise": {
    "name": "smMlmFilterThrottleArmedTrapEnterprise",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Not implemented"
  },
  "smMlmFilterThrottleArmedSpecificTrap": {
    "name": "smMlmFilterThrottleArmedSpecificTrap",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Not implemented"
  },
  "smMlmFilterThrottleDisarmTimer": {
    "name": "smMlmFilterThrottleDisarmTimer",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the time period to elapse before the throttle is disarmed (reset). It is important to note that if smMlmThrottleDisarmTrapCount is set to a value greater than 0, the amount of time specified may not elapse before the throttle is disarmed. This time period is from the time the throttle is started (ie. from the time the first matching trap is received), not from the time the throttle is armed. Therefore, it is possible that the throttle will not be armed before the throttle is disarmed (reset). In this case, the disarm command is NOT executed."
  },
  "smMlmFilterThrottleDisarmTrapCount": {
    "name": "smMlmFilterThrottleDisarmTrapCount",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the delta number of traps to receive before the throttle is disarmed. This field value is a delta and only refers to the number of matching traps received AFTER the throttle has been armed. It is important to note that if the smMlmThrottleDisarmTimer is set, the number of matching traps specified may not occur before the throttle is disarmed."
  },
  "smMlmFilterThrottleDisarmedCommand": {
    "name": "smMlmFilterThrottleDisarmedCommand",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the command to execute when the throttle is DISARMED. The throttle is disarmed when either 1) the smMlmThrottleDisarmTrapCount matching traps have occurred after the throttle was armed, or 2) the smMlmFilterThrottleDisarmTimer has expired. NOTE: If the above mentioned timer expires and the throttle is NOT currently ARMED, the throttle is reset, but this disarm command is NOT executed. So, the disarm command is only executed if the throttle is armed before being disarmed. A set of environment variables are defined that contain information from the received trap. They may be used by the command that is executed. The following environment variables pertain to the Mid-Level Manager filter: SM6K_HOSTNAME={hostname running subagent} SM6K_DOMAIN_NAME={fully qualified hostname} SM6K_HOST_ADDRESS={ip address} SM6K_INSTANCE_NAME={instance string of row} SM6K_INSTANCE_ID={instance ASCII octet value of row} SM6K_EXECUTION_REASON=Filter_Disarmed SM6K_THROTTLE_ARM_COUNT={value of ThrottleArmTrapCount} SM6K_THROTTLE_DISARM_COUNT={value of ThrottleDisarmTrapCount} SM6K_THROTTLE_DISARM_TIMER={value of ThrottleDisarmTimer} The following environment variables pertain to the received trap: SM6K_TRAP_ENTERPRISE={enterprise ID from the trap} SM6K_TRAP_AGENT_ADDRESS={IP address of the sending agent} SM6K_TRAP_GENERIC_NUM={generic trap number of the trap} SM6K_TRAP_SPECIFIC_NUM={specific trap number of the trap} SM6K_TRAP_TIME_TICKS={time ticks since the sending agent was started} SM6K_NUM_TRAP_VARS={number of MIB variables in the trap} In addition, for each variable flowing in the trap: SM6K_TRAP_VAR_OBJ_ID#={Object ID for MIB variable in trap} SM6K_TRAP_VAR_TYPE#=INTEGER|Counter|Gauge|TimeTicks| IpAddress|OCTET_STRING|Opaque| OBJECT_IDENTIFIER|NULL|Unknown SM6K_TRAP_VAR_VALUE#={value of the MIB object} where the # is replaced by the trap variable's positional number in the trap (starting at 1)."
  },
  "smMlmFilterThrottleDisarmedTrapDescription": {
    "name": "smMlmFilterThrottleDisarmedTrapDescription",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Not implemented"
  },
  "smMlmFilterThrottleDisarmedTrapEnterprise": {
    "name": "smMlmFilterThrottleDisarmedTrapEnterprise",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Not implemented"
  },
  "smMlmFilterThrottleDisarmedSpecificTrap": {
    "name": "smMlmFilterThrottleDisarmedSpecificTrap",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Not implemented"
  },
  "smMlmFilterThrottleState": {
    "name": "smMlmFilterThrottleState",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disarmed": 1,
          "armed": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field is not supported."
  },
  "smMlmFilterThrottleTimeStarted": {
    "name": "smMlmFilterThrottleTimeStarted",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field is not supported."
  },
  "smMlmFilterThrottleTrapCount": {
    "name": "smMlmFilterThrottleTrapCount",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field is not supported."
  },
  "smMlmFilterMessages": {
    "name": "smMlmFilterMessages",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Contains informational and error messages for this filter rule."
  },
  "smMlmFilterThrottleCriteria": {
    "name": "smMlmFilterThrottleCriteria",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "byNodeAndTrapType": 1,
          "byNode": 2,
          "byTrapType": 3,
          "byNone": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field is used to indicate whether the throttle is to be applied on a per node and trap type basis (byNodeAndTrapType) or only per node basis (byNode) or only per trap type basis (byTrapType) or on all traps that match the filter rule (byNone)."
  },
  "smMlmFilterThrottleVariables": {
    "name": "smMlmFilterThrottleVariables",
    "oid": "1.3.6.1.4.1.2.6.12.7.4.1.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field is used to set additional criteria for variables of which the traps will be throttled. These variables are contained in the trap and the position of the variable or variables is specified as a comma seperated list. A range of specific trap variables may be specified by using the range format of '[#-#]' (ie. [100-199]). For example, 1,[4-10],15, means the throttle uses variable binding postitions 1,4,5,6,7,8,9,10, and 15 as the additional throttle criteria."
  },
  "smMlmFilterTcpTrapReception": {
    "name": "smMlmFilterTcpTrapReception",
    "oid": "1.3.6.1.4.1.2.6.12.7.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicator of whether or not the Mid-Level Manager should connect to the tcp trap socket. If enabled(1), the traps will be read from the socket. If disabled(2), only traps generated by the Mid-Level Manager (e.g. thresholding, status, discovery traps) and traps received from the UDP socket will be filtered by the Mid-Level Manager. Note: This field cannot be set to enabled if another process on the host is already listening to the configured TCP port (i.e. the manager). Conversely, another process on the host (ie. the manager) will not be able to receive traps if this field is set to enabled. Therefore, if a manager is running on the same host as the Mid-Level Manager, this field should be set to disabled. If this field is set to enabled and any other process is connected to the port specified by the TcpTrapReceptionPort then TcpTrapReceptionStatus variable is set to portBusy. To recheck the availability of the port, this field should be disabled and then reset to enabled."
  },
  "smMlmFilterTcpReceptionStatus": {
    "name": "smMlmFilterTcpReceptionStatus",
    "oid": "1.3.6.1.4.1.2.6.12.7.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "portBusy": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The status is set to enabled if TcpTrapReception is enabled if the Mid-Level Manager is able to connect to the TCP port. If TcpTrapReception is disabled then this status is set to disabled. This field is to portBusy when TcpTrapReception is enabled, but the Mid-Level Manager could not connect to the TcpTrapReceptionPort."
  },
  "smMlmFilterUdpReceptionStatus": {
    "name": "smMlmFilterUdpReceptionStatus",
    "oid": "1.3.6.1.4.1.2.6.12.7.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "portBusy": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The status is set to enabled if UdpTrapReception is enabled if the Mid-Level Manager is able to connect to the UDP port. If UdpTrapReception is disabled then this status is set to disabled. This field is to portBusy when UdpTrapReception is enabled, but the Mid-Level Manager could not connect to the UdpTrapReceptionPort."
  },
  "smMlmFilterUdpTrapReceptionPort": {
    "name": "smMlmFilterUdpTrapReceptionPort",
    "oid": "1.3.6.1.4.1.2.6.12.7.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the port number on which the MLM receives snmp traps via UDP."
  },
  "smMlmFilterTcpTrapReceptionPort": {
    "name": "smMlmFilterTcpTrapReceptionPort",
    "oid": "1.3.6.1.4.1.2.6.12.7.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the port number on which the MLM receives snmp traps via TCP."
  },
  "smMlmFilterTrapReceptionMessages": {
    "name": "smMlmFilterTrapReceptionMessages",
    "oid": "1.3.6.1.4.1.2.6.12.7.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Contains informational and error messages about trap reception fields."
  },
  "smMlmAliasTable": {
    "name": "smMlmAliasTable",
    "oid": "1.3.6.1.4.1.2.6.12.8.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Alias table."
  },
  "smMlmAliasEntry": {
    "name": "smMlmAliasEntry",
    "oid": "1.3.6.1.4.1.2.6.12.8.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmAliasName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains objects for a particular alias."
  },
  "smMlmAliasState": {
    "name": "smMlmAliasState",
    "oid": "1.3.6.1.4.1.2.6.12.8.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 3,
          "invalid": 2,
          "disabled": 1
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "State of the alias entry: disabled (1), invalid (2), or enabled (3)."
  },
  "smMlmAliasName": {
    "name": "smMlmAliasName",
    "oid": "1.3.6.1.4.1.2.6.12.8.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Name that can be used in the threshold and analysis MIB variable definitions to allow multiple remote node retrieval of the MIB variable value."
  },
  "smMlmAliasList": {
    "name": "smMlmAliasList",
    "oid": "1.3.6.1.4.1.2.6.12.8.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "List of alias names, host names, or IP addresses separated by white space or commas."
  },
  "smMlmAliasResolvedList": {
    "name": "smMlmAliasResolvedList",
    "oid": "1.3.6.1.4.1.2.6.12.8.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Expanded alias."
  },
  "smMlmTrapDestinationTable": {
    "name": "smMlmTrapDestinationTable",
    "oid": "1.3.6.1.4.1.2.6.12.9.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Trap destination table. This table is used to define the trap destinations for traps to be forwarded by the filtering piece of the subagent. It does not replace or update filtering entries in the snmpd.conf file. If filtering is being used, the snmpd.conf file should be setup to send traps to loopback."
  },
  "smMlmTrapDestinationEntry": {
    "name": "smMlmTrapDestinationEntry",
    "oid": "1.3.6.1.4.1.2.6.12.9.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmTrapDestinationName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains objects for a particular trap destination."
  },
  "smMlmTrapDestinationState": {
    "name": "smMlmTrapDestinationState",
    "oid": "1.3.6.1.4.1.2.6.12.9.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 3,
          "disabled": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "State for the trap destination entry. Enabling this trap destination causes the traps being filtered to use this destination as a default destination (ie. the filtering entry may override where traps are to be sent)."
  },
  "smMlmTrapDestinationName": {
    "name": "smMlmTrapDestinationName",
    "oid": "1.3.6.1.4.1.2.6.12.9.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field is simply used as the name of this entry."
  },
  "smMlmTrapDestinationHost": {
    "name": "smMlmTrapDestinationHost",
    "oid": "1.3.6.1.4.1.2.6.12.9.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the hosts to which filtered traps are forwarded. It may be a list containing alias names (contained in the smMlmAlias table), resolvable hostnames, or IP Addresses. Each name in the list should be separated by a comma or white space. Each host listed can specify a destination port number and protocol (tcp or udp ) or service name using the format: x+y/z where x can be ip address or hostname or alias name y can be port number or protocol or service name z can be port number or protocol. example: testhost+162/tcp or 9.67.162.81+udp/162 If the port or protocol is not specified then default value is used. The default port number is '162' and default protocol is 'udp'."
  },
  "smMlmTrapDestinationMask": {
    "name": "smMlmTrapDestinationMask",
    "oid": "1.3.6.1.4.1.2.6.12.9.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This mask is used as a global filtering mechanism. The mask is used to indicate which traps are to be sent to the Destination Host. Bits 0 through 6, when read from LEFT to RIGHT, correspond to generic trap numbers 0 through 6. The generic traps are as follows: 0 - Cold Start 1 - Warm Start 2 - Link Down 3 - Link Up 4 - Authentication Failure 5 - EGP Neighbor Loss 6 - Enterprise Specific This field should be set to 254 to send all traps that the filter passes to the trap destination table. To send only linkDown (2) and linkUp (3) traps, the mask could be set to 48 (ie. 0011 0000)."
  },
  "smMlmTrapDestinationParticipationState": {
    "name": "smMlmTrapDestinationParticipationState",
    "oid": "1.3.6.1.4.1.2.6.12.9.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 2,
          "notEnabled": 1,
          "inactive": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field indicates whether or not the destination is participating in the trap forwarding. When the destination is active, it is participating. When the destination is inactive, it is not participating, but will be participating when the activation time arrives. The participation state can be inactive only if activation/deactivation days are specified. Otherwise, the participation state is activated when the smMlmTrapDestinationState field is set to enabled. If this field is set to notEnabled, the smMlmTrapDestinationState field is not set to enabled."
  },
  "smMlmTrapDestinationActivationTime": {
    "name": "smMlmTrapDestinationActivationTime",
    "oid": "1.3.6.1.4.1.2.6.12.9.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the time to activate the trap destination. (i.e. changes the participation state from inactive to active). The format should be HH:MM where HH represents the hour (integer between 0 and 23) and MM represents the minute (integer between 0 and 59) to activate the destination. A value of all blanks will be interpreted as 00:00."
  },
  "smMlmTrapDestinationActivationDayOfWeek": {
    "name": "smMlmTrapDestinationActivationDayOfWeek",
    "oid": "1.3.6.1.4.1.2.6.12.9.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the days of the week to activate the trap destination at the time specified in the ActivationTime field (ie. change the participation state from inactive to active). The day of the week may be one of three literals: none - Doesn't activate weekdays - Activates destination entry on MTWThF all - Activates destination entry every day SuMTWThFS Alternatively, the days of the week may be specified as a list of numbers between 0 and 6 (Sunday = 0, Monday = 1, ..., Saturday = 6). The expression '1,3,5' would activate the destination entry at the specified time on MWF."
  },
  "smMlmTrapDestinationDeactivationTime": {
    "name": "smMlmTrapDestinationDeactivationTime",
    "oid": "1.3.6.1.4.1.2.6.12.9.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the time to deactivate the destination. (ie. change the participation state from active to inactive). The format should be HH:MM where HH represents the hour (integer between 0 and 23) and MM represents the minute (integer between 0 and 59) to deactivate the destination. A value all blanks will be interpreted as 00:00."
  },
  "smMlmTrapDestinationDeactivationDayOfWeek": {
    "name": "smMlmTrapDestinationDeactivationDayOfWeek",
    "oid": "1.3.6.1.4.1.2.6.12.9.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the days of the week to deactivate the trap destination at the time specified in the DeactivationTime field (ie. change the participation state from active to inactive). The day of the week may be one of three literals: none - Doesn't deactivate weekdays - Dectivates destination on MTWThF all - Deactivates destination every day SuMTWThFS Alternatively, the days of the week may be specified as a list of numbers between 0 and 6 (Sunday = 0, Monday = 1, ..., Saturday = 6). The expression '1,3,5' would deactivate the destination entry at the specified time on MWF."
  },
  "smMlmTrapDestinationMessages": {
    "name": "smMlmTrapDestinationMessages",
    "oid": "1.3.6.1.4.1.2.6.12.9.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Contains informational and error messages for this trap destination entry."
  },
  "smMlmAdministrationTable": {
    "name": "smMlmAdministrationTable",
    "oid": "1.3.6.1.4.1.2.6.12.10.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Table of user information."
  },
  "smMlmAdministrationEntry": {
    "name": "smMlmAdministrationEntry",
    "oid": "1.3.6.1.4.1.2.6.12.10.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmAdministrationFieldName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains objects for a particular administrative community."
  },
  "smMlmAdministrationFieldState": {
    "name": "smMlmAdministrationFieldState",
    "oid": "1.3.6.1.4.1.2.6.12.10.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2,
          "outDated": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indication that administrative information is either valid (1), invalid (2), or outdated (3). Note: Setting state to invalid will delete the row."
  },
  "smMlmAdministrationFieldName": {
    "name": "smMlmAdministrationFieldName",
    "oid": "1.3.6.1.4.1.2.6.12.10.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Name of administrative information. There should be a corporate-wide policy on naming information in order to avoid possible naming conflicts."
  },
  "smMlmAdministrationFieldOwner": {
    "name": "smMlmAdministrationFieldOwner",
    "oid": "1.3.6.1.4.1.2.6.12.10.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Owner of this piece of administrative information."
  },
  "smMlmAdministrationFieldDescription": {
    "name": "smMlmAdministrationFieldDescription",
    "oid": "1.3.6.1.4.1.2.6.12.10.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Description of the administrative information."
  },
  "smMlmAdministrationFieldValue": {
    "name": "smMlmAdministrationFieldValue",
    "oid": "1.3.6.1.4.1.2.6.12.10.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The actual administrative information."
  },
  "smMlmStatusMonitorTable": {
    "name": "smMlmStatusMonitorTable",
    "oid": "1.3.6.1.4.1.2.6.12.12.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Status monitor table. This table is used to define the status checking policies for interfaces."
  },
  "smMlmStatusMonitorEntry": {
    "name": "smMlmStatusMonitorEntry",
    "oid": "1.3.6.1.4.1.2.6.12.12.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmStatusMonitorName",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains objects for a status checking policy. The configuration specified is applied to all nodes and interfaces in the specified host."
  },
  "smMlmStatusMonitorState": {
    "name": "smMlmStatusMonitorState",
    "oid": "1.3.6.1.4.1.2.6.12.12.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 3,
          "disabled": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "State for the status monitor entry. Enabling this status monitor entry causes the interfaces contained in the host (or group) specified to be checked using the specified parameters (eg. interval, timeout, retries, ...)."
  },
  "smMlmStatusMonitorName": {
    "name": "smMlmStatusMonitorName",
    "oid": "1.3.6.1.4.1.2.6.12.12.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field is simply used as the name of this entry."
  },
  "smMlmStatusMonitorDescription": {
    "name": "smMlmStatusMonitorDescription",
    "oid": "1.3.6.1.4.1.2.6.12.12.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field is used to describe the entry. Used for annotative purposes only."
  },
  "smMlmStatusMonitorAddressFamily": {
    "name": "smMlmStatusMonitorAddressFamily",
    "oid": "1.3.6.1.4.1.2.6.12.12.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "inet": 2,
          "unix": 1,
          "implink": 3,
          "pup": 4,
          "chaos": 5,
          "ns": 6,
          "osi": 7,
          "ecma": 8,
          "datakit": 9,
          "ccitt": 10,
          "sna": 11,
          "decnet": 12,
          "dli": 13,
          "lat": 14,
          "hylink": 15,
          "appletalk": 16,
          "route": 17,
          "link": 18,
          "xtpPseudo": 19,
          "intf": 20,
          "rif": 21,
          "netware": 22,
          "reserved23": 23,
          "reserved24": 24,
          "reserved25": 25,
          "reserved26": 26,
          "reserved27": 27,
          "reserved28": 28,
          "reserved29": 29,
          "reserved30": 30,
          "reserved31": 31,
          "reserved32": 32,
          "unknown": 65535
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates the address family of the address specified. Currently, only inet(2) is supported. Any other address family will be treated as an invalid value."
  },
  "smMlmStatusMonitorGroup": {
    "name": "smMlmStatusMonitorGroup",
    "oid": "1.3.6.1.4.1.2.6.12.12.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the group of interfaces to which the status monitor entry is applied. It may be an alias name (contained in the smMlmAlias table), resolvable hostname, or network address."
  },
  "smMlmStatusMonitorResolvedGroup": {
    "name": "smMlmStatusMonitorResolvedGroup",
    "oid": "1.3.6.1.4.1.2.6.12.12.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field shows the resolved group of interfaces to which the status monitor entry is applied. If the entry is disabled, this field is blank."
  },
  "smMlmStatusMonitorUnresolvedGroup": {
    "name": "smMlmStatusMonitorUnresolvedGroup",
    "oid": "1.3.6.1.4.1.2.6.12.12.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field shows the group of interfaces that the status monitor entry was not able to resolve. This field contains any string entered that either did not match an alias name, was not a host name or an IP address. It is possible that a name shown in this field is the result of resolving an alias name and the resulting names were not hostnames or IP addresses."
  },
  "smMlmStatusMonitorFrequency": {
    "name": "smMlmStatusMonitorFrequency",
    "oid": "1.3.6.1.4.1.2.6.12.12.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This indicates how often to status check the interfaces that this policy governs. Frequency units are decimal values appended by the unit: d - day, h - hour, m - minute, s - second, u - millisecond. If no unit is appended, the value is minutes. Multiple values/units are allowed (i.e. 1m30s = 1 minute, 30 seconds). The default frequency is 5 minutes."
  },
  "smMlmStatusMonitorTimeout": {
    "name": "smMlmStatusMonitorTimeout",
    "oid": "1.3.6.1.4.1.2.6.12.12.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This indicates the number of seconds wait for a response to the status request before retrying the request. The default timeout is 1 second."
  },
  "smMlmStatusMonitorMaxAttempts": {
    "name": "smMlmStatusMonitorMaxAttempts",
    "oid": "1.3.6.1.4.1.2.6.12.12.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This indicates the total number of times to try the status request if no response is received. The default is 3 attempts."
  },
  "smMlmStatusMonitorMessages": {
    "name": "smMlmStatusMonitorMessages",
    "oid": "1.3.6.1.4.1.2.6.12.12.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains informational and error messages for this status monitor entry."
  },
  "smMlmDiscoveryState": {
    "name": "smMlmDiscoveryState",
    "oid": "1.3.6.1.4.1.2.6.12.13.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 1,
          "enabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable is used to indicate whether the Mid-Level Manager should engage in discovery activity. Once enabled(2), the MLM will discover any nodes with which it communicates. However, additional discovery capabilities may be configured using the Sensor and BroadcastSearch fields."
  },
  "smMlmDiscoverySensor": {
    "name": "smMlmDiscoverySensor",
    "oid": "1.3.6.1.4.1.2.6.12.13.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 1,
          "passiveSensing": 2,
          "activeSensing": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field indicates whether or not the Mid-Level Manager should watch network packets in order to ascertain which nodes are currently on the network. This field is only used if the DiscoverySwitch field is enabled. If this field is set to passiveSensing(2), then only packets received will be examined for new nodes. If this field is set to activeSensing(3), then not only will received packets be examined, but any hints contained in those received packets will be investigated by querying those hint addresses. It is recommended that activeSensing(3) be used to more rapidly discover your network."
  },
  "smMlmDiscoverySensorMaxReads": {
    "name": "smMlmDiscoverySensorMaxReads",
    "oid": "1.3.6.1.4.1.2.6.12.13.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 8,
            "max": 512
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Maximum number of packets which discovery reads at one time. The higher this number is, the faster nodes will be discovered, but the more processing time will be required. The default for this field is 128."
  },
  "smMlmDiscoverySensorMaxInterval": {
    "name": "smMlmDiscoverySensorMaxInterval",
    "oid": "1.3.6.1.4.1.2.6.12.13.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Discovery uses an adaptive algorithm in deciding how often to search for new nodes; as more nodes are discovered, the frequency at which the discovery process listens decreases. This variable sets the maximum time between listening intervals. The maximum read interval is specified using decimal values appended by the unit: d - day, h - hour, m - minute, s - second, u - millisecond. If no unit is appended, the value is minutes. Multiple values/units are allowed (i.e. 1m30s = 1 minute, 30 seconds). The default for this field is 5m (5 minutes)."
  },
  "smMlmDiscoveryBroadcastSearch": {
    "name": "smMlmDiscoveryBroadcastSearch",
    "oid": "1.3.6.1.4.1.2.6.12.13.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 1,
          "enabledOnce": 2,
          "enabledRepeated": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicator of whether or not the AIX Mid-Level Manager should perform a broadcast query to determine which machines are on the network at the configured BroadcastSearchTime, on the configured BroadcastSearchDays. It is a good idea to perform a broadcast search to discover nodes that are not initiating communication (e.g. file servers, bridges, hubs, etc.). In addition, this should be done at least as often as the NodeExpirationPeriod to avoid deleting them from the DiscoveryTable. If enabledOnce(2), then the broadcast search is only done once - at the next configured time and day. This field is then automatically set back to disabled(1) after the broadcast search is initiated. If enabledRepeated, then the broadcast search is done periodically at each configured time and day. The time and day to perform the broadcast search are configured using the ActiveSearchTime and ActiveSearchDay fields. It is a good idea to configure a broadcast search to be done at least as often as the configured NodeExpirationPeriod."
  },
  "smMlmDiscoveryBroadcastSearchTime": {
    "name": "smMlmDiscoveryBroadcastSearchTime",
    "oid": "1.3.6.1.4.1.2.6.12.13.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the time to perform a broadcast request to determine who is on the network. This will cause a traffic burst to occur, so ideally it should be done at a time when low traffic levels are expected on the local network. The format should be HH:MM where HH represents the hour (integer between 0 and 23) and MM represents the minute (integer between 0 and 59) to perform the active search. If this field is set to all blanks, it will be interpreted as 00:00 (midnight)."
  },
  "smMlmDiscoveryBroadcastSearchDays": {
    "name": "smMlmDiscoveryBroadcastSearchDays",
    "oid": "1.3.6.1.4.1.2.6.12.13.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the days of the week to perform the broadcast search at the time specified in the BroadcastSearchTime field (ie. send out an active request). The day of the week may be one of three literals: none - Broadcast search will never be done weekdays - Broadcast search on MTWThF all - Broadcast search every day SuMTWThFS Alternatively, the days of the week may be specified as a list of numbers between 0 and 6 (Sunday = 0, Monday = 1, ..., Saturday = 6). The expression '1,3,5' would cause a broadcast search to be done at the specified time on Monday, Wednesday, and Friday."
  },
  "smMlmDiscoveryBroadcastSearchNow": {
    "name": "smMlmDiscoveryBroadcastSearchNow",
    "oid": "1.3.6.1.4.1.2.6.12.13.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "false": 1,
          "true": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When set to true(2), a broadcast search for which machines are on the network is initiated immediately. It may take up to 15 seconds to realize results from this operation if the Sensor is not enabled. Setting this field when the DiscoverySwitch is set to disabled causes the broadcast query to be done, but no responses are recorded."
  },
  "smMlmDiscoveryNodeExpirationPeriod": {
    "name": "smMlmDiscoveryNodeExpirationPeriod",
    "oid": "1.3.6.1.4.1.2.6.12.13.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the amount of time a node remains in the table of discovered nodes. Setting this field allows nodes that have not been heard from to be removed from the discovered nodes table. If this field is blank, nodes are NEVER removed from the discovered nodes table. However, if the same Network Address is used with a new MAC Address, the MAC address of the existing entry is changed and a trap is sent. The node expiration period is specified using decimal values appended by the unit: d - day, h - hour, m - minute, s - second, u - millisecond. If no unit is appended, the value is minutes. Multiple values/units are allowed (i.e. 1h45m = 1 hour, 45 minutes). The default for this field is 7d (7 days). It is a good idea to perform an active search at least as often as this node expiration time period to avoid losing nodes that are not initiating communication (e.g. file servers, bridges, hubs, etc.). However, nodes of this type that are being status checked by the status checker table will continue to exist."
  },
  "smMlmDiscoveryNotificationFrequency": {
    "name": "smMlmDiscoveryNotificationFrequency",
    "oid": "1.3.6.1.4.1.2.6.12.13.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field specifies the amount of time before a new/old node trap is sent. This allows many new nodes to be sent in the same trap, thus reducing notification traffic. The default is 1m (1 minute)."
  },
  "smMlmDiscoveryNumberOfAddresses": {
    "name": "smMlmDiscoveryNumberOfAddresses",
    "oid": "1.3.6.1.4.1.2.6.12.13.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains the number of addresses that have been discovered (i.e. the number of entries in the DiscoveryTable)."
  },
  "smMlmDiscoveryMaxBridges": {
    "name": "smMlmDiscoveryMaxBridges",
    "oid": "1.3.6.1.4.1.2.6.12.13.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This field contains the maximum number of rings away from the current ring that a node can be on and still be discovered. For example, if this number is 0, only nodes on the local ring will be discovered. Note that this is only effective for token rings; Ethernet frames do not contain routing information in the MAC frame header."
  },
  "smMlmDiscoveryMessages": {
    "name": "smMlmDiscoveryMessages",
    "oid": "1.3.6.1.4.1.2.6.12.13.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field contains messages concerning the discovery component of Mid-Level Manager."
  },
  "smMlmDiscoveryTable": {
    "name": "smMlmDiscoveryTable",
    "oid": "1.3.6.1.4.1.2.6.12.13.50",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Entries define a node that was detected to occur on the local network. The table is indexed by the smMlmDiscoveryAddressFamily, smMlmDiscoveryNetAddress fields."
  },
  "smMlmDiscoveryEntry": {
    "name": "smMlmDiscoveryEntry",
    "oid": "1.3.6.1.4.1.2.6.12.13.50.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmDiscoveryAddressFamily",
        "implied": 0
      },
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmDiscoveryRawNetAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains the nodes detected on the local network."
  },
  "smMlmDiscoveryAddressFamily": {
    "name": "smMlmDiscoveryAddressFamily",
    "oid": "1.3.6.1.4.1.2.6.12.13.50.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unix": 1,
          "inet": 2,
          "implink": 3,
          "pup": 4,
          "chaos": 5,
          "ns": 6,
          "osi": 7,
          "ecma": 8,
          "datakit": 9,
          "ccitt": 10,
          "sna": 11,
          "decnet": 12,
          "dli": 13,
          "lat": 14,
          "hylink": 15,
          "appletalk": 16,
          "route": 17,
          "link": 18,
          "xtpPseudo": 19,
          "intf": 20,
          "rif": 21,
          "netware": 22,
          "reserved23": 23,
          "reserved24": 24,
          "reserved25": 25,
          "reserved26": 26,
          "reserved27": 27,
          "reserved28": 28,
          "reserved29": 29,
          "reserved30": 30,
          "reserved31": 31,
          "reserved32": 32,
          "unknown": 65535
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This indicates the transport protocol used and determines the output format of the network address."
  },
  "smMlmDiscoveryRawNetAddress": {
    "name": "smMlmDiscoveryRawNetAddress",
    "oid": "1.3.6.1.4.1.2.6.12.13.50.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field specifies the address of the discovered node as octets."
  },
  "smMlmDiscoveryNetAddress": {
    "name": "smMlmDiscoveryNetAddress",
    "oid": "1.3.6.1.4.1.2.6.12.13.50.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field specifies the printable address of the discovered node."
  },
  "smMlmDiscoveryRawMACAddress": {
    "name": "smMlmDiscoveryRawMACAddress",
    "oid": "1.3.6.1.4.1.2.6.12.13.50.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field specifies the MAC Address of the discovered node as octets."
  },
  "smMlmDiscoveryMACAddress": {
    "name": "smMlmDiscoveryMACAddress",
    "oid": "1.3.6.1.4.1.2.6.12.13.50.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field specifies the printable MAC Address of the node."
  },
  "smMlmDiscoveryRawTransposedMACAddress": {
    "name": "smMlmDiscoveryRawTransposedMACAddress",
    "oid": "1.3.6.1.4.1.2.6.12.13.50.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The transposed MAC address is the MAC address with the bits in each byte of the address reversed, so that the least significant bit is now the most significant bit and vice versa. This is useful for token ring addresses since these addresses are usually represented in non-canonical form rather than the canonical form specified in the IEEE 802 specification and used by Ethernet, where the bit that travels first on the LAN is placed in the least significant bit as it appears in memory."
  },
  "smMlmDiscoveryTransposedMACAddress": {
    "name": "smMlmDiscoveryTransposedMACAddress",
    "oid": "1.3.6.1.4.1.2.6.12.13.50.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field is the printable form of the transposed MAC address."
  },
  "smMlmDiscoveryTimeLastSeen": {
    "name": "smMlmDiscoveryTimeLastSeen",
    "oid": "1.3.6.1.4.1.2.6.12.13.50.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field specifies the last time that the discovery process encountered this address. Addresses that are are not seen for the period of time defined in the smMlmDiscoveryExpirationTime parameter are removed from this table."
  },
  "smMlmDiscoveryRawRoutingInformation": {
    "name": "smMlmDiscoveryRawRoutingInformation",
    "oid": "1.3.6.1.4.1.2.6.12.13.50.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field specifies the routing information to a node; it is valid only for token ring interfaces. It contains multiple routing information segments separated with two zero bytes. The length of each segment is present in the routing control field (the first byte of each segment)."
  },
  "smMlmDiscoveryRoutingInformation": {
    "name": "smMlmDiscoveryRoutingInformation",
    "oid": "1.3.6.1.4.1.2.6.12.13.50.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This field displays the known routes to a node, in the form: [Route 1] [Route 2] ... [Route n]. Each route entry has the form: [RCF: (Ring)/Bridge->(Ring)/Bridge->...(Ring)] where RCF is the hexadecimal representation of the route control field in the packet from which this route was discovered (in hexadecimal), Ring is the bridge number, and Bridge is the bridge number. Note that this information is only displayed for token rings."
  },
  "smMlmAnalysisTable": {
    "name": "smMlmAnalysisTable",
    "oid": "1.3.6.1.4.1.2.6.12.6.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "obsolete",
    "description": "Analysis table."
  },
  "smMlmAnalysisEntry": {
    "name": "smMlmAnalysisEntry",
    "oid": "1.3.6.1.4.1.2.6.12.6.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MIDLEVELMGR-MIB",
        "object": "smMlmAnalysisName",
        "implied": 0
      }
    ],
    "status": "obsolete",
    "description": "Each entry contains objects for a particular analysis."
  },
  "smMlmAnalysisState": {
    "name": "smMlmAnalysisState",
    "oid": "1.3.6.1.4.1.2.6.12.6.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 3,
          "disabled": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "State for the analysis operation: disabled (1), invalid (2), or enabled (3)."
  },
  "smMlmAnalysisName": {
    "name": "smMlmAnalysisName",
    "oid": "1.3.6.1.4.1.2.6.12.6.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Analysis name for use as a label and row instance. The selection of a row in the table uses the analysis name as the instance for row selection. The analysis name is appended to the row variable to uniquely identify the instance variable. For example, the instance of smMlmAnalysisState is smMlmAnalysisState.smMlmAnalysisName, where each octet in smMlmAnalysisName is a value in dot notation for the variable."
  },
  "smMlmAnalysisDescription": {
    "name": "smMlmAnalysisDescription",
    "oid": "1.3.6.1.4.1.2.6.12.6.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Analysis description for the analysis operation."
  },
  "smMlmAnalysisOwnerID": {
    "name": "smMlmAnalysisOwnerID",
    "oid": "1.3.6.1.4.1.2.6.12.6.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Owner ID (IP address or hostname) who generated the command entry. This must be initialized by the user."
  },
  "smMlmAnalysisLocalRemoteMIBVariableExpression": {
    "name": "smMlmAnalysisLocalRemoteMIBVariableExpression",
    "oid": "1.3.6.1.4.1.2.6.12.6.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Analysis MIB variable expression. The expression can be any expression comprised of local or remote (MLM only) node MIB variables with the following high to low precedence and left to right associativity of operators: () : grouping - : unary minus * : multiplication, / : division, % : remainder + : addition, - : subtraction << : bitwise left shift, >> : bitwise right shift & : bitwise AND ^ : bitwise exclusive OR | : bitwise inclusive OR Expression evaluation/operators are based on standard c program execution. Counter MIB variables default to the delta value, calculated by subtracting the old MIB value from the current MIB value. Integer and gauge MIB variables default to the current value returned. The two functions @delta() and @value() can be used to override the above defaults. Displaystrings can be converted to a real value using the @delta() and @value() functions. Built-in functions available within expressions include: @sum(MIB variable expression, MIB variable expression, ...) - returns the sum of all values. @avg(MIB variable expression, MIB variable expression, ...) - returns the average of all values. @min(MIB variable expression, MIB variable expression, ...) - returns the minimum of all values. @max(MIB variable expression, MIB variable expression, ...) - returns the maximum of all values. @diff(MIB variable expression, MIB variable expression) - returns the positive difference in the two expressions. @delta(MIB variable expression) - uses the delta value calculated by subtracting the last returned MIB variable value from the current MIB variable value. This function can be used to force delta calculations on integer, gauge, and displaystring MIB variables. @value(MIB variable expression) - uses the current MIB variable value. This function can be used to force the use of actual values for counter MIB variables. @numInst(MIB variable expression) - returns the number of instances found for the MIB variable expression. @abs(MIB variable expression) - returns the positive value of the expression. @rand() - returns a random number between 0 and 42949667295. To use remote MIB variables, the alias name, host name, or IP address can be pre-appended to the MIB variable binding. Also, the object ID can accept a wildcard value (*). When MIB variables resolve to multiple values or nodes outside of the built-in functions, all resolved values are averaged before use in the expression. For example, routers:.1.2.3.4.5.0/100, would result in the averaging of all values returned for this aliased MIB variable before the division by 100 operation is performed."
  },
  "smMlmAnalysisPollTime": {
    "name": "smMlmAnalysisPollTime",
    "oid": "1.3.6.1.4.1.2.6.12.6.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Analysis polling time. Polling units are decimal values appended by the unit: d - day, h - hour, m - minute, s - second, or u - millisecond. If no unit is appended, the value is minutes. Multiple values/units are allowed (i.e. 1h45m = 1 hour, 45 minutes). The default and minimum poll time is 1 minute. This polling value is used only by the MIB variable polling center for retrieval of the local or remote MIB variable for caching. This is required so that the MIB variable values are cached and not requested with GET requests when the expression is evaluated."
  },
  "smMlmAnalysisResultIndex": {
    "name": "smMlmAnalysisResultIndex",
    "oid": "1.3.6.1.4.1.2.6.12.6.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "integer": 2,
          "counter": 3,
          "gauge": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "obsolete",
    "description": "Index to point to command output result type. The index defines how the expression is evaluated, either using signed arithmetic for integer or unsigned arithmetic for counter and gauge. The result for counter wraps on overflow or underflow; the result for gauge latches at 0 for underflow or 4294967295 for overflow."
  },
  "smMlmAnalysisIntegerResult": {
    "name": "smMlmAnalysisIntegerResult",
    "oid": "1.3.6.1.4.1.2.6.12.6.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Integer result based on signed arithmetic."
  },
  "smMlmAnalysisCounterResult": {
    "name": "smMlmAnalysisCounterResult",
    "oid": "1.3.6.1.4.1.2.6.12.6.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Counter result based on unsigned arithmetic; this wraps at the maximum or minimum value."
  },
  "smMlmAnalysisGaugeResult": {
    "name": "smMlmAnalysisGaugeResult",
    "oid": "1.3.6.1.4.1.2.6.12.6.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Gauge result based on unsigned arithmetic; this latches at the maximum or minimum value."
  },
  "smMlmAnalysisDisplayStringResult": {
    "name": "smMlmAnalysisDisplayStringResult",
    "oid": "1.3.6.1.4.1.2.6.12.6.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Display result as a displayable string. This string is generated based on the ResultIndex for the type of the resultant expression: integer, counter, or gauge."
  },
  "smMlmAnalysisReturnCode": {
    "name": "smMlmAnalysisReturnCode",
    "oid": "1.3.6.1.4.1.2.6.12.6.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Return code from the evaluation of the expression."
  },
  "smMlmAnalysisStandardError": {
    "name": "smMlmAnalysisStandardError",
    "oid": "1.3.6.1.4.1.2.6.12.6.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "obsolete",
    "description": "Standard error output from the evaluation of the expression."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/MIDLEVELMGR-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:05:26 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "MIDLEVELMGR-MIB"
  }
}