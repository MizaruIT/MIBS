{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "enterprises",
      "IpAddress",
      "Unsigned32",
      "iso",
      "NOTIFICATION-TYPE",
      "internet",
      "OBJECT-IDENTITY",
      "Gauge32",
      "Integer32",
      "MODULE-IDENTITY",
      "Bits",
      "OBJECT-TYPE",
      "TimeTicks",
      "MibIdentifier",
      "Counter64",
      "Counter32"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "mgmt": {
    "name": "mgmt",
    "oid": "1.3.6.1.2",
    "class": "objectidentity"
  },
  "mib_2": {
    "name": "mib_2",
    "oid": "1.3.6.1.2.1",
    "class": "objectidentity"
  },
  "directory": {
    "name": "directory",
    "oid": "1.3.6.1.1",
    "class": "objectidentity"
  },
  "experimental": {
    "name": "experimental",
    "oid": "1.3.6.1.3",
    "class": "objectidentity"
  },
  "private": {
    "name": "private",
    "oid": "1.3.6.1.4",
    "class": "objectidentity"
  },
  "enterprises": {
    "name": "enterprises",
    "oid": "1.3.6.1.4.1",
    "class": "objectidentity"
  },
  "dec": {
    "name": "dec",
    "oid": "1.3.6.1.4.1.36",
    "class": "objectidentity"
  },
  "ema": {
    "name": "ema",
    "oid": "1.3.6.1.4.1.36.2",
    "class": "objectidentity"
  },
  "decMIBextension": {
    "name": "decMIBextension",
    "oid": "1.3.6.1.4.1.36.2.18",
    "class": "objectidentity"
  },
  "elanext": {
    "name": "elanext",
    "oid": "1.3.6.1.4.1.36.2.18.1",
    "class": "objectidentity"
  },
  "efddi": {
    "name": "efddi",
    "oid": "1.3.6.1.4.1.36.2.18.1.1",
    "class": "objectidentity"
  },
  "esystem": {
    "name": "esystem",
    "oid": "1.3.6.1.4.1.36.2.18.1.2",
    "class": "objectidentity"
  },
  "einterfaces": {
    "name": "einterfaces",
    "oid": "1.3.6.1.4.1.36.2.18.1.3",
    "class": "objectidentity"
  },
  "ebridge": {
    "name": "ebridge",
    "oid": "1.3.6.1.4.1.36.2.18.1.4",
    "class": "objectidentity"
  },
  "eauth": {
    "name": "eauth",
    "oid": "1.3.6.1.4.1.36.2.18.1.5",
    "class": "objectidentity"
  },
  "efddiSMT": {
    "name": "efddiSMT",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.1",
    "class": "objectidentity"
  },
  "efddiMAC": {
    "name": "efddiMAC",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2",
    "class": "objectidentity"
  },
  "efddiPORT": {
    "name": "efddiPORT",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.3",
    "class": "objectidentity"
  },
  "efddiSMTTable": {
    "name": "efddiSMTTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of SMT entries. The number of entries is given by smtNumber, defined in [1]."
  },
  "efddiSMTEntry": {
    "name": "efddiSMTEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "eSMTIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A collection of objects containing information for a given SMT link."
  },
  "eSMTIndex": {
    "name": "eSMTIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the SMT Index. The value of this object is the same as the snmpFddiSMTIndex, defined in [1], for this smt entity."
  },
  "eSMTStationType": {
    "name": "eSMTStationType",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "sas": 1,
          "dac": 2,
          "sac": 3,
          "nac": 4,
          "das": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Station Type Identification."
  },
  "eSMTTracesReceived": {
    "name": "eSMTTracesReceived",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of PC Traces received by this station."
  },
  "efddiMACTable": {
    "name": "efddiMACTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of MAC entries. The number of entries is given by macNumber, defined in [1]."
  },
  "efddiMACEntry": {
    "name": "efddiMACEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "eMACSMTIndex",
        "implied": 0
      },
      {
        "module": "DEC-ElanConc",
        "object": "eMACIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A collection of objects containing information for a given MAC entity."
  },
  "eMACSMTIndex": {
    "name": "eMACSMTIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of the SMT index associated with this MAC. The value of this object is the same as the snmpFddiMACSMTIndex, defined in [1], for this MAC entity."
  },
  "eMACIndex": {
    "name": "eMACIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the MAC Index. The value of this object is the same as the snmpFddiMACIndex, defined in [1], for this MAC entity."
  },
  "eMACLinkIndex": {
    "name": "eMACLinkIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The SMT Resource Index."
  },
  "eMACLinkState": {
    "name": "eMACLinkState",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "offMaint": 1,
          "offReady": 2,
          "offFaultRecovery": 3,
          "onRingInit": 4,
          "onRingRun": 5,
          "broken": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The current state of the link."
  },
  "eMACRingPurgerState": {
    "name": "eMACRingPurgerState",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "purgerOff": 1,
          "candidate": 2,
          "nonPurger": 3,
          "purger": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The current Ring Purger state."
  },
  "eMACRingPurgerEnable": {
    "name": "eMACRingPurgerEnable",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If true, this Link will participate in the Ring Purger Election and, if elected, perform the Ring Purger function."
  },
  "eMACRingPurgeErrors": {
    "name": "eMACRingPurgeErrors",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times the MAC PurgeError Event bit was set."
  },
  "eMACFrameStripMode": {
    "name": "eMACFrameStripMode",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "saMatch": 1,
          "bridgeStrip": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Method of frame removal used by this station."
  },
  "eMACFCIStripErrors": {
    "name": "eMACFCIStripErrors",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times a Frame Content Independent Strip operation was terminated by receipt of a token."
  },
  "eMACRingErrorReason": {
    "name": "eMACRingErrorReason",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noReason": 1,
          "ringInitInitiated": 6,
          "ringInitReceived": 7,
          "ringBeaconingInitiated": 8,
          "daDetected": 9,
          "duplicateTokenDetected": 10,
          "ringPurgeError": 11,
          "bridgeStripError": 12,
          "ringOpOscillation": 13,
          "directedBeaconReceived": 14,
          "pcTraceInitiated": 15,
          "pcTraceReceived": 16
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Reason for last ring disturbance."
  },
  "eMACRingInitializationsInitiated": {
    "name": "eMACRingInitializationsInitiated",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of Ring Claim Processes initiated by this link entity."
  },
  "eMACRingInitializationsReceived": {
    "name": "eMACRingInitializationsReceived",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of Ring Claim Processes or Ring Beaconing Processes initiated by a remote link entity and detected by this link entity."
  },
  "eMACRingBeaconingInitiated": {
    "name": "eMACRingBeaconingInitiated",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Ring Beacon Processes initiated by this link entity."
  },
  "eMACDuplicateAddressTestFailures": {
    "name": "eMACDuplicateAddressTestFailures",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times the duplicate address test failed."
  },
  "eMACDuplicateTokensDetected": {
    "name": "eMACDuplicateTokensDetected",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times this link entity detected a duplicate token."
  },
  "eMACUpstreamNbrDuplAddressFlag": {
    "name": "eMACUpstreamNbrDuplAddressFlag",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2,
          "unknown": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The upstream neighbor's duplicate address status, as reported by the NIF frame. Unknown if no NIF frame has been received yet."
  },
  "eMACTracesInitiated": {
    "name": "eMACTracesInitiated",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of PC Traces initiated by this station."
  },
  "eMACRestrictedTokenTimeout": {
    "name": "eMACRestrictedTokenTimeout",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The restricted token timeout, which limits how long a single restricted mode dialog may last before being terminated."
  },
  "eMACFrameStatusErrors": {
    "name": "eMACFrameStatusErrors",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames received on the line that had the E (error detected) indicator set or a missing E indicator."
  },
  "eMACFrameAlignmentErrors": {
    "name": "eMACFrameAlignmentErrors",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames received on the line that contained an odd number of symbols; that is, a non-integral number of octets."
  },
  "eMACTransmitUnderruns": {
    "name": "eMACTransmitUnderruns",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.2.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number oftimes an underrun occured because the device's transmit FIFO became empty due to insufficient memory. In other words, the device was trying to transmit but could not get into memory fast enough."
  },
  "efddiPORTTable": {
    "name": "efddiPORTTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of PORT entries. The number of entries is given by portNumber, defined in [1]."
  },
  "efddiPORTEntry": {
    "name": "efddiPORTEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ePORTSMTIndex",
        "implied": 0
      },
      {
        "module": "DEC-ElanConc",
        "object": "ePORTIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A collection of objects containing information for a given PORT entity."
  },
  "ePORTSMTIndex": {
    "name": "ePORTSMTIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of the SMT index associated with this port. The value of this object is the same as the snmpFddiPORTSMTIndex, defined in [1], for this PORT entity."
  },
  "ePORTIndex": {
    "name": "ePORTIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the PORT Index. The value of this object is the same as the snmpFddiPORTIndex, defined in [1], for this PORT entity."
  },
  "ePORTPHYIndex": {
    "name": "ePORTPHYIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The SMT Resource index. Index of the PHY resource used to identify the PHY PORT in ANSI SMT frames."
  },
  "ePORTPMDType": {
    "name": "ePORTPMDType",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "pmdNone": 1,
          "pmdMM": 2,
          "pmdSM": 3,
          "pmdLC": 4,
          "pmdTHN": 5,
          "pmdSTP": 6,
          "pmdUTP": 7
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The physical media type of the PORT."
  },
  "ePORTPHYState": {
    "name": "ePORTPHYState",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "offmaintenance": 1,
          "broken": 2,
          "offready": 3,
          "wait": 4,
          "starting": 5,
          "failed": 6,
          "watch": 7,
          "inuse": 8
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The PHY state."
  },
  "ePORTRejectReason": {
    "name": "ePORTRejectReason",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noReason": 1,
          "lctLocal": 2,
          "lctRemote": 3,
          "lctBoth": 4,
          "lemFailure": 5,
          "topologyRules": 6,
          "tneExpired": 7,
          "remoteReject": 8,
          "tracesInProgress": 9,
          "tracesReceived": 10,
          "standby": 11,
          "lctProtocol": 12
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The current reject reason."
  },
  "ePORTConnectionsCompleted": {
    "name": "ePORTConnectionsCompleted",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Physical Connections established for this PHY PORT."
  },
  "ePORTTNEExpRejects": {
    "name": "ePORTTNEExpRejects",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.3.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times a physical disconnection took place because the TNE Noise Timer expired."
  },
  "ePORTElasticityBufferErrors": {
    "name": "ePORTElasticityBufferErrors",
    "oid": "1.3.6.1.4.1.36.2.18.1.1.3.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of ELM Chip EBUFF_ERROR events."
  },
  "esysChar": {
    "name": "esysChar",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.1",
    "class": "objectidentity"
  },
  "esysStatus": {
    "name": "esysStatus",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.2",
    "class": "objectidentity"
  },
  "esysCounters": {
    "name": "esysCounters",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.3",
    "class": "objectidentity"
  },
  "esysRomVersion": {
    "name": "esysRomVersion",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The version number of the software stored in ROM."
  },
  "esysInitSwitch": {
    "name": "esysInitSwitch",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "reset": 2,
          "resetWithDefaults": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object allows the management action of initializing a device and forcing it to run selftest. It can also be used to reset all information added to the device's NVRAM. When read, it returns a value of other(1)."
  },
  "esysResetDefaultsSwitch": {
    "name": "esysResetDefaultsSwitch",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object is the state of a hardware switch which, when true, causes the device to reset its parameters to the factory defaults when initialized."
  },
  "esysGatewayAddress": {
    "name": "esysGatewayAddress",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object allows the setting of a default gateway address for this device."
  },
  "esysTrapAddressTable": {
    "name": "esysTrapAddressTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.1.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of IP Addresses to which this device will send traps."
  },
  "esysTrapEntry": {
    "name": "esysTrapEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.1.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "esysTrapAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry contains an IP Address to which all SNMP Traps will be sent by this device."
  },
  "esysTrapAddress": {
    "name": "esysTrapAddress",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.1.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "An IP Address to which all SNMP traps generated by this device will be sent."
  },
  "esysUpdateSwitch": {
    "name": "esysUpdateSwitch",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A software switch that, when set to True, instructs the device to accept a down-line loaded firmware upgrade. If false, the device will not accept upgrades."
  },
  "esysLastLoadHost": {
    "name": "esysLastLoadHost",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The physical address of the last host, if any, that responded to the device's request for a downline load of software."
  },
  "esysDeviceState": {
    "name": "esysDeviceState",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "init": 1,
          "operate": 2,
          "broken": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The operational state of the device."
  },
  "esysDeviceBrokenReason": {
    "name": "esysDeviceBrokenReason",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "selftestFail": 2,
          "onlineDiagFail": 3,
          "firmwareFail": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The reason that the Device State is BROKEN. If current state is not BROKEN and the Unsolicited Resets counter is nonzero, this object show reason for last failure."
  },
  "esysNvramFailed": {
    "name": "esysNvramFailed",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A flag, that, when set to True, indicates that the NVRAM failed selftest following the last initialization of the device."
  },
  "esysPowerups": {
    "name": "esysPowerups",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times this device was powered on. Power Ups, Management Resets and Unsolicited Resets are all mutually exclusive."
  },
  "esysMgmtResets": {
    "name": "esysMgmtResets",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of times the device was initialized with a management command using esysInitSwitch. Power Ups, Management Resets and Unsolicited Resets are all mutually exclusive."
  },
  "esysUnsolicitedResets": {
    "name": "esysUnsolicitedResets",
    "oid": "1.3.6.1.4.1.36.2.18.1.2.3.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of times the device initialized itself after encountering a fatal error. Power Ups, Management Resets and Unsolicited Resets are all mutually exclusive."
  },
  "eifTable": {
    "name": "eifTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of interface entries. The number of entries is given by ifNumber, defined in [2]."
  },
  "eifEntry": {
    "name": "eifEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "eifIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A collection of objects containing information for a given interface."
  },
  "eifIndex": {
    "name": "eifIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the Interface. The value of this object is the same as the ifIndex, defined in [2], for this interface."
  },
  "eifBadFramesReceived": {
    "name": "eifBadFramesReceived",
    "oid": "1.3.6.1.4.1.36.2.18.1.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of frames received with a bad frame check sequence."
  },
  "eifReceiveOverrun": {
    "name": "eifReceiveOverrun",
    "oid": "1.3.6.1.4.1.36.2.18.1.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of times that the device received a frame loss indication from the hardware on the interface."
  },
  "eifOversizeFrames": {
    "name": "eifOversizeFrames",
    "oid": "1.3.6.1.4.1.36.2.18.1.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of frames received on the interface that were larger than the maximum legal size."
  },
  "eifTransmitFramesError": {
    "name": "eifTransmitFramesError",
    "oid": "1.3.6.1.4.1.36.2.18.1.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of frames that were transmitted with an error on the line."
  },
  "eifMgmtSetsAllowedSwitch": {
    "name": "eifMgmtSetsAllowedSwitch",
    "oid": "1.3.6.1.4.1.36.2.18.1.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This hardware switch, when true, allows write access to the device."
  },
  "ebrChar": {
    "name": "ebrChar",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1",
    "class": "objectidentity"
  },
  "ebrStat": {
    "name": "ebrStat",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.2",
    "class": "objectidentity"
  },
  "ebrCoun": {
    "name": "ebrCoun",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.3",
    "class": "objectidentity"
  },
  "ebrSpan": {
    "name": "ebrSpan",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.4",
    "class": "objectidentity"
  },
  "ebrInterfaces": {
    "name": "ebrInterfaces",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5",
    "class": "objectidentity"
  },
  "ebrTwoPortStatic": {
    "name": "ebrTwoPortStatic",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.6",
    "class": "objectidentity"
  },
  "ebrMultiPortStatic": {
    "name": "ebrMultiPortStatic",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.7",
    "class": "objectidentity"
  },
  "ebrTwoProtoFilt": {
    "name": "ebrTwoProtoFilt",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8",
    "class": "objectidentity"
  },
  "ebrMultiProtoFilt": {
    "name": "ebrMultiProtoFilt",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9",
    "class": "objectidentity"
  },
  "ebrMultiFiltSw": {
    "name": "ebrMultiFiltSw",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.10",
    "class": "objectidentity"
  },
  "ebrNTP": {
    "name": "ebrNTP",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.11",
    "class": "objectidentity"
  },
  "ebrLB100SpanningTreeVer": {
    "name": "ebrLB100SpanningTreeVer",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The version number of the Spanning Tree algorithm used by the bridge when in the LAN Bridge 100 Spanning Tree mode."
  },
  "ebr802SpanningTreeVer": {
    "name": "ebr802SpanningTreeVer",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The version number of the Spanning Tree algorithm used by the bridge when in the 802.1d Spanning Tree mode."
  },
  "ebrMaxForwardingDBEntries": {
    "name": "ebrMaxForwardingDBEntries",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The maximum number of address entries that the bridge can store in its volatile memory."
  },
  "ebrMaxNVForwardingDBEntries": {
    "name": "ebrMaxNVForwardingDBEntries",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The maximum number of permanent address entries that the bridge canstore in its NVRAM."
  },
  "ebrMaxProtocolDBEntries": {
    "name": "ebrMaxProtocolDBEntries",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The maximum number of protocol entries that the bridge can store in its protocol database. These entries control the handling of frames based on their Ethernet PT, IEEE 802.2 DSAP or IEEE 802 SNAP Protocol ID."
  },
  "ebrMaxNVProtocolDBEntries": {
    "name": "ebrMaxNVProtocolDBEntries",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The maximum number of protocol entries that the bridge can store in its nonvolatile memory. These are retained after a power-down."
  },
  "ebrForwardingDBPurgeThreshold": {
    "name": "ebrForwardingDBPurgeThreshold",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of active and inactive address entries that will trigger a purge of the inactive entries."
  },
  "ebrPortTestPassedThreshold": {
    "name": "ebrPortTestPassedThreshold",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of consecutive successful self-tests needed before the bridge considers a line to be operational."
  },
  "ebrPortTestInterval": {
    "name": "ebrPortTestInterval",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The interval, in seconds, at which the bridge will run selftests on a line that is in the BROKEN state."
  },
  "ebrTopologyChangeTimer": {
    "name": "ebrTopologyChangeTimer",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of seconds remaining, if this is the Root, for which Topology Change will be propagated in Hello messages."
  },
  "ebrManualFilterSwitch": {
    "name": "ebrManualFilterSwitch",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A switch that controls address filtering. When true, the bridge purges the learned entries from its forwarding database, stops its learning process, and forwards only frames with destination and source addresses that have been specified via management."
  },
  "ebrFragmentationSwitch": {
    "name": "ebrFragmentationSwitch",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A switch that controls whether fragmentation is performed by the bridge when a large IP frame is received on a datalink that supports a higer frame size than the other datalink."
  },
  "ebrRemoveMgmtAddress": {
    "name": "ebrRemoveMgmtAddress",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "true": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object allows the action of removing all management entered addresses from the forwarding database when set to true(2). When read, it returns a value of other(1)."
  },
  "ebrRemoveMgmtProto": {
    "name": "ebrRemoveMgmtProto",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.1.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "true": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object allows the action of removing all management entered protocols from the protocol database when set to true(2). When read, it returns a value of other(1)."
  },
  "ebrCurrForwardingDBEntries": {
    "name": "ebrCurrForwardingDBEntries",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of address entries in the bridge's volatile memory. These will be lost upon loss of power."
  },
  "ebrCurrNVForwardingDBEntries": {
    "name": "ebrCurrNVForwardingDBEntries",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of address entries in the bridge's NVRAM. These will be retained after loss of power."
  },
  "ebrCurrProtocolDBEntries": {
    "name": "ebrCurrProtocolDBEntries",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of protocol entries that are stored in the bridge's protocol database. These control the handling of frames based on their Ethernet protocol type, IEEE 802.2 DSAP, or 802 SNAP Protocol ID."
  },
  "ebrCurrNVProtocolDBEntries": {
    "name": "ebrCurrNVProtocolDBEntries",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.2.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of protocol entries in the bridge's NVRAM. These are retained after a power loss."
  },
  "ebrMgmtHeardPort": {
    "name": "ebrMgmtHeardPort",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.2.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The port on which this command was received."
  },
  "ebrLB100BeingPolled": {
    "name": "ebrLB100BeingPolled",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.2.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The address of the LAN Bridge 100 mode bridge that sent this bridge into the LAN Bridge 100 Spanning Tree mode. If this bridge is the Root, this object indicates the bridge that will be polled periodically to determine if it is still necessary to stay in this Spanning Tree mode."
  },
  "ebrInactiveForwardingDBEntries": {
    "name": "ebrInactiveForwardingDBEntries",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.2.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of inactive address entries in the bridge's forwarding database. The bridge marks an address entry inactive when the entry is aged out."
  },
  "ebrTimeSinceForwardingDBPurged": {
    "name": "ebrTimeSinceForwardingDBPurged",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.2.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of seconds since the bridge cleared the forwarding database of inactive entries."
  },
  "ebrTimeSinceLastHello": {
    "name": "ebrTimeSinceLastHello",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.2.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of seconds since the bridge last sent a Hello message."
  },
  "ebrDeviceFramesLost": {
    "name": "ebrDeviceFramesLost",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames addressed to the bridge itself that the bridge discarded because it did not have sufficient receive buffers available."
  },
  "ebrSpanningTreeModeChanges": {
    "name": "ebrSpanningTreeModeChanges",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that the bridge switched from the 802.1d Spanning Tree mode to the LB100 Spanning Tree mode."
  },
  "ebrBestRootAge": {
    "name": "ebrBestRootAge",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The age, in hundereths of seconds, of the Hello message that established the best root."
  },
  "ebrTopologyChangeFlag": {
    "name": "ebrTopologyChangeFlag",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A flag that indicates whether a Topology Change is currently in effect on the extended LAN."
  },
  "ebrTellParentFlag": {
    "name": "ebrTellParentFlag",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A flag that indicates if the bridge is attempting to propagate a topology change towards the Root."
  },
  "ebrForwardingDBShortAgingTime": {
    "name": "ebrForwardingDBShortAgingTime",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.4.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of seconds that the bridge keeps learned entries active while a topology change is in effect."
  },
  "ebrBadHelloLimit": {
    "name": "ebrBadHelloLimit",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.4.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of hello intervals during which the bridge receives one or more bad hellos on a line, before the bridge performs a test on the link. A bad Hello message is one that contains inferior information that is received on a port on which this bridge is Designated."
  },
  "ebrBadHelloResetTimer": {
    "name": "ebrBadHelloResetTimer",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.4.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of Hello intervals without bad Hellos that the bridge will wait before it resets its bad Hello count to zero."
  },
  "ebrNoFrameInterval": {
    "name": "ebrNoFrameInterval",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.4.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The The number of seconds of inactivity on a line that will cause the bridge to run a test on that line. The bridge considers a line to be inactive if it does not receive any frames on that line."
  },
  "ebrLB100PollTime": {
    "name": "ebrLB100PollTime",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.4.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of seconds that a Root bridge in LAN Bridge 100 mode waits between polling the LAN Bridge 100 that is keeping it in this mode. This polling is done to determine whether the LB100 is still present on the extended LAN."
  },
  "ebrLB100ResponseTimeout": {
    "name": "ebrLB100ResponseTimeout",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.4.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of seconds that a Root in LAN Bridge 100 Spanning Tree mode will wait for a response from the LAN Bridge 100 which is keeping it in this mode, before which it will assume that the LB100 is no longer on the extended LAN."
  },
  "ebrLB100SpanningTreeCompat": {
    "name": "ebrLB100SpanningTreeCompat",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.4.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "autoSelect": 1,
          "ieee802": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A switch that controls the Spanning Tree mode used by the bridge. If in Auto-Select mode, the bridge will go into 802 Spanning Tree mode by default, but will switch to LB100 mode as soon as a LB100 is detected. In 802 Spanning Tree mode, the bridge will stay in 802 mode."
  },
  "ebrIfTable": {
    "name": "ebrIfTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of interface entries. The number of entries is given by ifNumber, defined in [2]."
  },
  "ebrIfEntry": {
    "name": "ebrIfEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ebrIfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A collection of objects containing information for a given interface."
  },
  "ebrIfIndex": {
    "name": "ebrIfIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the Interface. The value of this object is the same as the ifIndex, defined in [2], for this interface."
  },
  "ebrIfLinkBrokenReason": {
    "name": "ebrIfLinkBrokenReason",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noFault": 1,
          "possibleInternalFault": 2,
          "possibleExternalFault": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The reason why the link was last broken. A possible internal fault(1) indicates a problem with the bridge line itself, a possible external fault(2), indicates a problem with the transmission medium to which the line is attached."
  },
  "ebrIfPortRestarts": {
    "name": "ebrIfPortRestarts",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times the bridge restarted the line."
  },
  "ebrIfUnknownDAReceived": {
    "name": "ebrIfUnknownDAReceived",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames received on this line for which the bridge had no address entry in its forwarding database."
  },
  "ebrIfFramesAddrFiltered": {
    "name": "ebrIfFramesAddrFiltered",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames filtered by the bridge on this port because of address entries in the forwarding database."
  },
  "ebrIfMultiFramesFiltered": {
    "name": "ebrIfMultiFramesFiltered",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames with multicast destination addresses that were received on the line on the line and filtered by the bridge."
  },
  "ebrIfFramesProtocolFiltered": {
    "name": "ebrIfFramesProtocolFiltered",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames received on this line that the bridge discarded because of entries set by management in the protocol database."
  },
  "ebrIfDeviceFramesSent": {
    "name": "ebrIfDeviceFramesSent",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames originating from the bridge itself that were transmitted on this line."
  },
  "ebrIfDeviceFramesReceived": {
    "name": "ebrIfDeviceFramesReceived",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames addressed to the bridge itself that were received on this line."
  },
  "ebrIfDeviceBytesSent": {
    "name": "ebrIfDeviceBytesSent",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes in the frames originating from the bridge that were transmitted on this line."
  },
  "ebrIfDeviceBytesReceived": {
    "name": "ebrIfDeviceBytesReceived",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes in the frames addressed to the bridge itself that were received on this line."
  },
  "ebrIfDeviceFramesLost": {
    "name": "ebrIfDeviceFramesLost",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames received on the line addressed to the bridge itself discarded by the bridge because it did not have internal buffers to store them."
  },
  "ebrIfMultiBytesSent": {
    "name": "ebrIfMultiBytesSent",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes in Multicast Frames sent, as reported in ifOutNUcastPkts [2]."
  },
  "ebrIfMultiBytesReceived": {
    "name": "ebrIfMultiBytesReceived",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes in Multicast Frames received, as reported in ifInNUcastPkts[2]."
  },
  "ebrIfMultiDeviceFramesSent": {
    "name": "ebrIfMultiDeviceFramesSent",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames with multicast destination addresses transmitted by the bridge itself on the line."
  },
  "ebrIfMultiDeviceFramesReceived": {
    "name": "ebrIfMultiDeviceFramesReceived",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames with multicast destination addresses received by the bridge itslef on the line."
  },
  "ebrIfMultiDeviceBytesSent": {
    "name": "ebrIfMultiDeviceBytesSent",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes in ebrIfMultiDeviceFramesReceived."
  },
  "ebrIfMultiDeviceBytesReceived": {
    "name": "ebrIfMultiDeviceBytesReceived",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes in ebrIfMultiDeviceFramesReceived."
  },
  "ebrIfBadBytesReceived": {
    "name": "ebrIfBadBytesReceived",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes in frames received that had a bad frame check sequence."
  },
  "ebrIfBadHelloLimitExceeded": {
    "name": "ebrIfBadHelloLimitExceeded",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that the Bad Hellos on the line exceeded the Bad Hello limit."
  },
  "ebrIfEtherTable": {
    "name": "ebrIfEtherTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "optional",
    "description": "A list of interface entries for an Ethernet port."
  },
  "ebrIfEtherEntry": {
    "name": "ebrIfEtherEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ebrIfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A collection of objects containing information for a given interface."
  },
  "ebrIfEthIndex": {
    "name": "ebrIfEthIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the Interface. The value of this object is the same as the ifIndex, defined in [2], for this interface."
  },
  "ebrIfEthPhysicalMediumType": {
    "name": "ebrIfEthPhysicalMediumType",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "stdAUIInterface": 1,
          "thinwireInterface": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The type of physical medium to which this line is attached."
  },
  "ebrIfEthCollisionPresenceTestSwitch": {
    "name": "ebrIfEthCollisionPresenceTestSwitch",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A switch that informs the bridge whether the transceiver on this line is using the Collision Presence Test (CPT), commonly known as heartbeat. It must be enabled if the line's transceiver has CPT."
  },
  "ebrIfEthCollisionTestFailed": {
    "name": "ebrIfEthCollisionTestFailed",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that a Collision Presence Test (CPT) signal was not detected within 4 microseconds after a transmission on the line. This counter is valid only if ebrIfEthCollisionPresenceTestSwitch is set to true for this line."
  },
  "ebrIfEthFramingError": {
    "name": "ebrIfEthFramingError",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that a frame received on the line contained both a noninteger multiple of 8 bits and a CRC error."
  },
  "ebrIfEthLengthError": {
    "name": "ebrIfEthLengthError",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of 802.3 frames received that contained a Length field inconsistent with the actual number of data bytes in the packet."
  },
  "ebrIfEthTransmitMultipleCollisions": {
    "name": "ebrIfEthTransmitMultipleCollisions",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that the bridge had to retry transmission of a frame on the line. This was because of collisions during transmission due to congestion on the physical medium."
  },
  "ebrIfEthCarrierLoss": {
    "name": "ebrIfEthCarrierLoss",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that the bridge detected a loss of the carrier signal while transmitting a frame on the line."
  },
  "ebrIfEthCollisionLimitExceeded": {
    "name": "ebrIfEthCollisionLimitExceeded",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that the bridge failed to transmit a frame on this line after 16 attempts, the collision limit."
  },
  "ebrIfFddiTable": {
    "name": "ebrIfFddiTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of interface entries for an FDDI port."
  },
  "ebrIfFddiEntry": {
    "name": "ebrIfFddiEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ebrIfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A collection of objects containing information for a given interface."
  },
  "ebrIfFddiIndex": {
    "name": "ebrIfFddiIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the Interface. The value of this object is the same as the ifIndex, defined in [2], for this interface."
  },
  "ebrIfFddiUnprocessedErrorPackets": {
    "name": "ebrIfFddiUnprocessedErrorPackets",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that an error frame was received on thisline but the bridge did not have time to decipher it."
  },
  "ebrIfFddiIpDatagramsFragmented": {
    "name": "ebrIfFddiIpDatagramsFragmented",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number or large IP Datagrams that were fragmented into smaller frames because they did not fit into legal size packets on the smaller datalink after translation."
  },
  "ebrIfFddiIpDontFragment": {
    "name": "ebrIfFddiIpDontFragment",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of large IP datagrams that could not be fragmented because the DONT-FRAGMENT bit was set in the IP header."
  },
  "ebrIfFddiIpIllegalHeaderLength": {
    "name": "ebrIfFddiIpIllegalHeaderLength",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of large IP datagrams that were discarded instead of being fragmented because the IP header was of illegal length."
  },
  "ebrIfFddiIpIllegalSize": {
    "name": "ebrIfFddiIpIllegalSize",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of large IP datagrams that were discarded instead of being fragmented because the IP header indicated a length greater than the number of actual bytes in the received datagram."
  },
  "ebrIfSpanTable": {
    "name": "ebrIfSpanTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of interface entries for an FDDI port."
  },
  "ebrIfSpanEntry": {
    "name": "ebrIfSpanEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ebrIfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A collection of objects containing information for a given interface."
  },
  "ebrIfSpIndex": {
    "name": "ebrIfSpIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the Interface. The value of this object is the same as the ifIndex, defined in [2], for this interface."
  },
  "ebrIfSpDesigRootAge": {
    "name": "ebrIfSpDesigRootAge",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The age, in hundreths of seconds, of the last Hello message received from the designated bridge on the line."
  },
  "ebrIfSpForwardDelayTimer": {
    "name": "ebrIfSpForwardDelayTimer",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The time remaining, in hundreths of seconds, before the bridge will leave the Learning State of Preforwarding, and enter the Forwarding State."
  },
  "ebrIfSpBadHelloCount": {
    "name": "ebrIfSpBadHelloCount",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Hello intervals during which at least one Bad Hello was received."
  },
  "ebrIfSpPossibleLoopFlag": {
    "name": "ebrIfSpPossibleLoopFlag",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A flag that indicates whether the bridge detected a loop condition on this line."
  },
  "ebrIfSpTopologyChangeAckFlag": {
    "name": "ebrIfSpTopologyChangeAckFlag",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.5.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A flag that indicates whether a topology change notification received on a link that we are designated on needs to be acknowledged."
  },
  "ebrTwoPortStaticTable": {
    "name": "ebrTwoPortStaticTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.6.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table that contains static destination and source address filtering information about unicast and multicast addresses for 2-port bridges."
  },
  "ebrTwoPortStaticEntry": {
    "name": "ebrTwoPortStaticEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.6.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ebrTwoPortAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Information about a specific MAC address for which the bridge has some static forwarding and/or filtering information."
  },
  "ebrTwoPortAddress": {
    "name": "ebrTwoPortAddress",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.6.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The destination/source MAC Address in a frame to which this entry's filtering information applies."
  },
  "ebrTwoPortPortNum": {
    "name": "ebrTwoPortPortNum",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.6.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The Port Number to which this address will be locked-down, if the status is lockDown. Otherwise, this field has a value of 0."
  },
  "ebrTwoPortStatus": {
    "name": "ebrTwoPortStatus",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.6.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "lockDown": 1,
          "hello": 2,
          "invalid": 3,
          "filter": 4,
          "forward": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of this entry. The meanings of the values are: lockDown(1) : This address is 'locked-down' to the port specified by the ebrTwoPortPortNum field. This address will be allowed to source frames only from the specified port, and frames destined to this address will be sent out only on the specified port. hello(2) : This is the address used by the bridge in the destination field of Spanning Tree Hellos. It is not a writeable value. invalid(3) : Writing this value to the object removes the corresponding entry. filter(4) : Frames with this address in the source or destination field will be filtered by the bridge. forward(5) : Frames with this address in the destination field will be forwarded by the bridge."
  },
  "ebrMultiPortStaticTable": {
    "name": "ebrMultiPortStaticTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.7.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table that contains static destination and source address filtering information about unicast and multicast addresses for multi-port bridges."
  },
  "ebrMultiPortStaticEntry": {
    "name": "ebrMultiPortStaticEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.7.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ebrMultiPortAddress",
        "implied": 0
      },
      {
        "module": "DEC-ElanConc",
        "object": "ebrMultiPortReceivePort",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Information about a specific MAC address for which the bridge has some static forwarding and/or filtering information."
  },
  "ebrMultiPortAddress": {
    "name": "ebrMultiPortAddress",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.7.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The destination/source MAC Address in a frame to which this entry's filtering information applies."
  },
  "ebrMultiPortReceivePort": {
    "name": "ebrMultiPortReceivePort",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.7.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The port from which a frame must be received to use the corresponding ebrMultiPortAllowedToGoTo field. A value of zero indicates that this entry applies on all ports of the bridge."
  },
  "ebrMultiPortAllowedToGoTo": {
    "name": "ebrMultiPortAllowedToGoTo",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.7.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The set of ports to which frames received from a specific port and sourced from or destined to the address specified by ebrMultiPortAddress are allowed to be forwarded. Each octet within the value of this object specifies a set of eight ports, with the first octet specifying ports 1 through 8, the second octet specifying port 9 through 16 etc. Within each octet, the most significant bit represents the lowest numbered port, and the least significant bit represents the highest numbered port. If a bit has a value of '1', then the corresponding port is included in the set of ports; the port is not included if its bit has a value of '0'."
  },
  "ebrMultiPortPortNum": {
    "name": "ebrMultiPortPortNum",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.7.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The Port Number to which this address will be locked-down, if the status is lockDown. Otherwise, this field has a value of zero."
  },
  "ebrMultiPortStatus": {
    "name": "ebrMultiPortStatus",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.7.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "portMask": 1,
          "lockDown": 2,
          "maskAndLock": 3,
          "hello": 4,
          "filter": 5,
          "invalid": 6
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of this entry. The meanings of the values are: portMask(1) : The static filtering for this address is specified by the MultiPortAllowedToGoTo field. lockDown(2) : The static filtering for this address is specified as 'locked-down' to the port specified by the ebrMultiPortPortNum field. This address will be allowed to source frames only from the specified port, and frames destined to this address will be sent out only on the specified port. maskAndLock(3) : The static filtering for this address is specified by both the ebrMultiPortAllowedToGoTo as well as 'locked-down' as explained above for 'lockDown(2)'. hello(4) : This is the address used by the bridge in the destination field of Spanning Tree Hellos. It is not a writeable value. filter(5) : This address will be filtered on all ports. invalid(6) : Writing this value to the object removes the corresponding entry."
  },
  "ebrTwoProtoEnetFilterOther": {
    "name": "ebrTwoProtoEnetFilterOther",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forward": 1,
          "filter": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Action taken by the bridge on Ethernet protocol types other than those specified in the ebrTwoEnetProtoTable. "
  },
  "ebrTwoProtoSapFilterOther": {
    "name": "ebrTwoProtoSapFilterOther",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forward": 1,
          "filter": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Action taken by the bridge on 802.2 DSAPs other than those specified in the ebrTwoSapProtoTable. "
  },
  "ebrTwoProtoSnapFilterOther": {
    "name": "ebrTwoProtoSnapFilterOther",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forward": 1,
          "filter": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Action taken by the bridge on the 5-byte SNAP PIDs other than those specified in the ebrTwoSnapProtoTable. "
  },
  "ebrTwoEnetProtoTable": {
    "name": "ebrTwoEnetProtoTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table that contains filtering information about Ethernet protocol types for 2-port bridges."
  },
  "ebrTwoEnetProtoEntry": {
    "name": "ebrTwoEnetProtoEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ebrTwoEnetProtoType",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table that contains filtering information about Ethernet protocol types for 2-port bridges."
  },
  "ebrTwoEnetProtoType": {
    "name": "ebrTwoEnetProtoType",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 2,
            "max": 2
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The protocol type in a frame to which this entry's filtering information applies."
  },
  "ebrTwoEnetProtoStatus": {
    "name": "ebrTwoEnetProtoStatus",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forward": 1,
          "filter": 2,
          "invalid": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Action taken by bridge when it sees this ethernet protocol type in a received frame. The meanings of the values are: forward(1) : Frames received with this protocol type are allowed to be forwarded. filter(2) : Frames received with this protocol type should be filtered. invalid(3) : Writing this value to the object removes the corresponding entry."
  },
  "ebrTwoSapProtoTable": {
    "name": "ebrTwoSapProtoTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table that contains filtering information about 802.2 SAPs in the DSAP field for 2-port bridges."
  },
  "ebrTwoSapProtoEntry": {
    "name": "ebrTwoSapProtoEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ebrTwoSapIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table that contains filtering information about 802.2 SAPs in the DSAP field for 2-port bridges."
  },
  "ebrTwoSapIndex": {
    "name": "ebrTwoSapIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Index of the SAP table."
  },
  "ebrTwoSapValue": {
    "name": "ebrTwoSapValue",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 1
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The 802.2 DSAP in a frame to which this entry's filtering information applies."
  },
  "ebrTwoSapStatus": {
    "name": "ebrTwoSapStatus",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forward": 1,
          "filter": 2,
          "invalid": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Action taken by bridge when it sees this 802.2 SAP in the DSAP field of a received frame. The meanings of the values are: forward(1) : Frames received with this sap are allowed to be forwarded. filter(2) : Frames received with this sap should be filtered. invalid(3) : Writing this value to the object removes the corresponding entry."
  },
  "ebrTwoSnapProtoTable": {
    "name": "ebrTwoSnapProtoTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table that contains filtering information about 5-byte SNAP PIDs for 2-port bridges."
  },
  "ebrTwoSnapProtoEntry": {
    "name": "ebrTwoSnapProtoEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ebrTwoSnapIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table that contains filtering information about 5-byte SNAP PIDs for 2-port bridges."
  },
  "ebrTwoSnapIndex": {
    "name": "ebrTwoSnapIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index into the SNAP table."
  },
  "ebrTwoSnapValue": {
    "name": "ebrTwoSnapValue",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 5,
            "max": 5
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The SNAP PID in an 802 frame to which this entry's filtering information applies."
  },
  "ebrTwoSnapStatus": {
    "name": "ebrTwoSnapStatus",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.8.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forward": 1,
          "filter": 2,
          "invalid": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Action taken by bridge when it sees this SNAP PID in a received 802 frame. The meanings of the values are: forward(1) : Frames received with this snap are allowed to be forwarded. filter(2) : Frames received with this snap should be filtered. invalid(3) : Writing this value to the object removes the corresponding entry."
  },
  "ebrMultiEnetProtoTable": {
    "name": "ebrMultiEnetProtoTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table that contains filtering information about Ethernet protocol types for multi-port bridges."
  },
  "ebrMultiEnetProtoEntry": {
    "name": "ebrMultiEnetProtoEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ebrMultiEnetProtoType",
        "implied": 0
      },
      {
        "module": "DEC-ElanConc",
        "object": "ebrMultiEnetReceivePort",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table that contains filtering information about Ethernet protocol types for multi-port bridges."
  },
  "ebrMultiEnetProtoType": {
    "name": "ebrMultiEnetProtoType",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 2,
            "max": 2
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The protocol type in a frame to which this entry's filtering information applies."
  },
  "ebrMultiEnetReceivePort": {
    "name": "ebrMultiEnetReceivePort",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The port from which a frame must be received to use the corresponding ebrMultiPortEnetProtoType field. A value of zero indicates that this entry applies on all ports of the bridge."
  },
  "ebrMultiEnetAllowedToGoTo": {
    "name": "ebrMultiEnetAllowedToGoTo",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The set of ports to which frames received from a specific port and containing the protocol type specified by ebrMultiEnetProtoType are allowed to be forwarded. Each octet within the value of this object specifies a set of eight ports, with the first octet specifying ports 1 through 8, the second octet specifying port 9 through 16 etc. Within each octet, the most significant bit represents the lowest numbered port, and the least significant bit represents the highest numbered port. If a bit has a value of '1', then the corresponding port is included in the set of ports; the port is not included if its bit has a value of '0'."
  },
  "ebrMultiEnetStatus": {
    "name": "ebrMultiEnetStatus",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "invalid": 2,
          "filter": 3,
          "forward": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object, when read, always returns a value of other(1). Writing invalid(2) to the object removes the corresponding entry."
  },
  "ebrMultiSapProtoTable": {
    "name": "ebrMultiSapProtoTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table that contains filtering information about 802.2 SAPs in the DSAP field for multi-port bridges."
  },
  "ebrMultiSapProtoEntry": {
    "name": "ebrMultiSapProtoEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ebrMultiSapValue",
        "implied": 0
      },
      {
        "module": "DEC-ElanConc",
        "object": "ebrMultiSapReceivePort",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table that contains filtering information about 802.2 SAPs in the DSAP field for multi-port bridges."
  },
  "ebrMultiSapValue": {
    "name": "ebrMultiSapValue",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 1
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The 802.2 DSAP in a frame to which this entry's filtering information applies."
  },
  "ebrMultiSapReceivePort": {
    "name": "ebrMultiSapReceivePort",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The port from which a frame must be received to use the corresponding ebrMultiPortSapProtoType field. A value of zero indicates that this entry applies on all ports of the bridge."
  },
  "ebrMultiSapAllowedToGoTo": {
    "name": "ebrMultiSapAllowedToGoTo",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The set of ports to which frames received from a specific port and containing the DSAP in an 802 frame specified by ebrMultiSapValue are allowed to be forwarded. Each octet within the value of this object specifies a set of eight ports, with the first octet specifying ports 1 through 8, the second octet specifying port 9 through 16 etc. Within each octet, the most significant bit represents the lowest numbered port, and the least significant bit represents the highest numbered port. If a bit has a value of '1', then the corresponding port is included in the set of ports; the port is not included if its bit has a value of '0'."
  },
  "ebrMultiSapStatus": {
    "name": "ebrMultiSapStatus",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "invalid": 2,
          "filter": 3,
          "forward": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object, when read, always returns a value of other(1). Writing invalid(2) to the object removes the corresponding entry."
  },
  "ebrMultiSnapProtoTable": {
    "name": "ebrMultiSnapProtoTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table that contains filtering information about 5-byte SNAP PIDs for multi-port bridges."
  },
  "ebrMultiSnapProtoEntry": {
    "name": "ebrMultiSnapProtoEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ebrMultiSnapValue",
        "implied": 0
      },
      {
        "module": "DEC-ElanConc",
        "object": "ebrMultiSnapReceivePort",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A table that contains filtering information about 5-byte SNAP PIDs for multi-port bridges."
  },
  "ebrMultiSnapValue": {
    "name": "ebrMultiSnapValue",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 5,
            "max": 5
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The SNAP PID in an 802 frame to which this entry's filtering information applies."
  },
  "ebrMultiSnapReceivePort": {
    "name": "ebrMultiSnapReceivePort",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The port from which a frame must be received to use the corresponding ebrMultiPortSnapProtoType field. A value of zero indicates that this entry applies on all ports of the bridge."
  },
  "ebrMultiSnapAllowedToGoTo": {
    "name": "ebrMultiSnapAllowedToGoTo",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The set of ports to which frames received from a specific port and containing the SNAP PID in an 802 frame specified by ebrMultiSnapValue are allowed to be forwarded. Each octet within the value of this object specifies a set of eight ports, with the first octet specifying ports 1 through 8, the second octet specifying port 9 through 16 etc. Within each octet, the most significant bit represents the lowest numbered port, and the least significant bit represents the highest numbered port. If a bit has a value of '1', then the corresponding port is included in the set of ports; the port is not included if its bit has a value of '0'."
  },
  "ebrMultiSnapStatus": {
    "name": "ebrMultiSnapStatus",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.9.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "invalid": 2,
          "filter": 3,
          "forward": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object, when read, always returns a value of other(1). Writing invalid(2) to the object removes the corresponding entry."
  },
  "ebrMultiSwTable": {
    "name": "ebrMultiSwTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.10.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of interface entries. The number of entries is given by ifNumber, defined in [2]."
  },
  "ebrMultiSwEntry": {
    "name": "ebrMultiSwEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.10.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ebrMultiSwIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A collection of objects containing information for a given interface."
  },
  "ebrMultiSwIndex": {
    "name": "ebrMultiSwIndex",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.10.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Identifies the Interface to which this entry applies."
  },
  "ebrMultiSwManualFilter": {
    "name": "ebrMultiSwManualFilter",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.10.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A switch that controls address filtering. When true, the bridge purges the learned entries from its forwarding database, stops its learning process, and forwards only frames with destination and source addresses that have been specified via management."
  },
  "ebrMultiSwProtoEnetOther": {
    "name": "ebrMultiSwProtoEnetOther",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.10.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forward": 1,
          "filter": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Action taken by the bridge on Ethernet protocol types other than those specified in the ebrMultiEnetProtoTable."
  },
  "ebrMultiSwProtoSapOther": {
    "name": "ebrMultiSwProtoSapOther",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.10.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forward": 1,
          "filter": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Action taken by the bridge on 802.2 DSAPs other than those specified in the ebrMultiSapProtoTable."
  },
  "ebrMultiSwProtoSnapOther": {
    "name": "ebrMultiSwProtoSnapOther",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.10.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forward": 1,
          "filter": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Action taken by the bridge on the 5-byte SNAP PIDs other than those specified in the ebrMultiSnapProtoTable."
  },
  "ebrNTPTable": {
    "name": "ebrNTPTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.11.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of Ethernet protocol types which will selectively be translated in such a way as to guarantee that the form in which a packet was received - Ethernet PT or 802.3 with 1042 format and this PT - will be retained across a pair of these bridges."
  },
  "ebrNTPEntry": {
    "name": "ebrNTPEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.11.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "ebrNTPtype",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A list of NTP protocol type entries."
  },
  "ebrNTPtype": {
    "name": "ebrNTPtype",
    "oid": "1.3.6.1.4.1.36.2.18.1.4.11.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A protocol type in the NTP table."
  },
  "eauth1": {
    "name": "eauth1",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1",
    "class": "objectidentity"
  },
  "eauthTrapCommunity": {
    "name": "eauthTrapCommunity",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 32,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The community string used in SNMP Trap PDUs."
  },
  "eauthTrapUserTable": {
    "name": "eauthTrapUserTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of addresses to which traps will be sent and associated information."
  },
  "eauthTrapUserEntry": {
    "name": "eauthTrapUserEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "eauthTrapUserAddr",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Objects containing information for a given trap address."
  },
  "eauthTrapUserAddr": {
    "name": "eauthTrapUserAddr",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "An IP Address to which all SNMP Trap messages will be sent."
  },
  "eauthTrapUserStatus": {
    "name": "eauthTrapUserStatus",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Writing invalid(2) to this object removes the corresponding entry. When read, this object always returns a value of other(1)."
  },
  "eauthReadOnlyCommunity": {
    "name": "eauthReadOnlyCommunity",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 32,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The community string used to identify an SNMP community with access rights of Read-only."
  },
  "eauthReadOnlyUserTable": {
    "name": "eauthReadOnlyUserTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of Read-only users and associated information."
  },
  "eauthReadOnlyUserEntry": {
    "name": "eauthReadOnlyUserEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "eauthReadOnlyUserAddr",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Objects containing information for a given Read-only user."
  },
  "eauthReadOnlyUserAddr": {
    "name": "eauthReadOnlyUserAddr",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "An IP Address, or a set of IP addresses, which has Read-only SNMP access to this agent. If this object is used as a wildcard, bits corresponding to the zero bits in the corresponding euthReadOnlyUserMask are treated as don't-care."
  },
  "eauthReadOnlyUserMask": {
    "name": "eauthReadOnlyUserMask",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A 32-bit mask which is applied to (ANDed with) the source IP address of an incoming SNMP message. If the result of the mask is equal to eauthReadOnlyUserAddr, the message is considered to have come from a user who has Read-only access. This allows wildcarding, for example, for all NMS's on a given subnet. For fully specified IP addresses required to be in this community, this mask may be set to all 1's."
  },
  "eauthReadOnlyUserStatus": {
    "name": "eauthReadOnlyUserStatus",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Writing invalid(2) to this object removes the corresponding entry. When read, this object always returns a value of other(1)."
  },
  "eauthReadWriteCommunity": {
    "name": "eauthReadWriteCommunity",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 32,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The community string used to identify an SNMP community with access rights of Read-Write."
  },
  "eauthReadWriteUserTable": {
    "name": "eauthReadWriteUserTable",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of Read-Write users and associated information."
  },
  "eauthReadWriteUserEntry": {
    "name": "eauthReadWriteUserEntry",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DEC-ElanConc",
        "object": "eauthReadWriteUserAddr",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Objects containing information for a given Read-Write user."
  },
  "eauthReadWriteUserAddr": {
    "name": "eauthReadWriteUserAddr",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "An IP Address, or a set of IP addresses, which has Read-Write SNMP access to this agent. If this object is used as a wildcard, bits corresponding to the zero bits in the corresponding euthReadWriteUserMask are treated as don't-care."
  },
  "eauthReadWriteUserMask": {
    "name": "eauthReadWriteUserMask",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A 32-bit mask which is applied to (ANDed with) the source IP address of an incoming SNMP message. If the result of the mask is equal to eauthReadWriteUserAddr, the message is considered to have come from a user who has Read-Write access. This allows wildcarding, for example, for all NMS's on a given subnet. For fully specified IP addresses required to be in this community, this mask may be set to all 1's."
  },
  "eauthReadWriteUserStatus": {
    "name": "eauthReadWriteUserStatus",
    "oid": "1.3.6.1.4.1.36.2.18.1.5.1.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Writing invalid(2) to this object removes the corresponding entry. When read, this object always returns a value of other(1)."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/DEC-ElanConc.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 19:57:40 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "DEC-ElanConc"
  }
}