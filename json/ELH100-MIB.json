{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "Gauge32",
      "Bits",
      "OBJECT-IDENTITY",
      "IpAddress",
      "Counter32",
      "MODULE-IDENTITY",
      "enterprises",
      "Unsigned32",
      "Integer32",
      "Counter64",
      "OBJECT-TYPE",
      "NOTIFICATION-TYPE",
      "TimeTicks",
      "iso",
      "MibIdentifier"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION",
      "PhysAddress"
    ]
  },
  "cabletron": {
    "name": "cabletron",
    "oid": "1.3.6.1.4.1.52",
    "class": "objectidentity"
  },
  "cabletronOEM": {
    "name": "cabletronOEM",
    "oid": "1.3.6.1.4.1.52.259",
    "class": "objectidentity"
  },
  "cabletronRepeaters": {
    "name": "cabletronRepeaters",
    "oid": "1.3.6.1.4.1.52.259.10",
    "class": "objectidentity"
  },
  "cabletronELH100": {
    "name": "cabletronELH100",
    "oid": "1.3.6.1.4.1.52.259.10.3",
    "class": "objectidentity"
  },
  "cabletronELH100Common": {
    "name": "cabletronELH100Common",
    "oid": "1.3.6.1.4.1.52.259.10.3.1",
    "class": "objectidentity"
  },
  "cabletronELH100BasicCapability": {
    "name": "cabletronELH100BasicCapability",
    "oid": "1.3.6.1.4.1.52.259.10.3.2",
    "class": "objectidentity"
  },
  "cabletronELH100PerfMonCapability": {
    "name": "cabletronELH100PerfMonCapability",
    "oid": "1.3.6.1.4.1.52.259.10.3.3",
    "class": "objectidentity"
  },
  "cabletronELH100SwitchCapability": {
    "name": "cabletronELH100SwitchCapability",
    "oid": "1.3.6.1.4.1.52.259.10.3.4",
    "class": "objectidentity"
  },
  "cabletronELH100BackupCapability": {
    "name": "cabletronELH100BackupCapability",
    "oid": "1.3.6.1.4.1.52.259.10.3.5",
    "class": "objectidentity"
  },
  "cabletronELH100SecurityCapability": {
    "name": "cabletronELH100SecurityCapability",
    "oid": "1.3.6.1.4.1.52.259.10.3.6",
    "class": "objectidentity"
  },
  "elh100System": {
    "name": "elh100System",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.1",
    "class": "objectidentity"
  },
  "elh100MajorVer": {
    "name": "elh100MajorVer",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Software major version"
  },
  "elh100MinorVer": {
    "name": "elh100MinorVer",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Software minor version"
  },
  "elh100HardwareVer": {
    "name": "elh100HardwareVer",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Hardware version of system board"
  },
  "elh100CommunityMgt": {
    "name": "elh100CommunityMgt",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.2",
    "class": "objectidentity"
  },
  "elh100CommunityTable": {
    "name": "elh100CommunityTable",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Community table"
  },
  "elh100CommunityEntry": {
    "name": "elh100CommunityEntry",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ELH100-MIB",
        "object": "elh100CommunityIndex",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "elh100CommunityIndex": {
    "name": "elh100CommunityIndex",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Index in community table."
  },
  "elh100CommunityRowCreation": {
    "name": "elh100CommunityRowCreation",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of this row entry. Before add a row into table, it should be created first. Set Valid(1) to a row will create this row. To delete a row from this table, set this object for the row to invalid(2). Row sets for new rows with a row status set to invalid(2) return a BAD VALUE error. This object will always read as valid(1). If no more rows can be added to the end of the table, then a row set to create a new row will return BAD VALUE. When rows are deleted from this table, the indexes of the other rows do not change. In other words, this table can be 'sparse' or have 'holes'. Deleted entries can be re-created using a row set with a row status of valid(1)."
  },
  "elh100CommunityString": {
    "name": "elh100CommunityString",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The community string that is required for any requests coming from this host. The default value for this object is 'public'."
  },
  "elh100CommunityStatus": {
    "name": "elh100CommunityStatus",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "invalid": 1,
          "readOnly": 2,
          "readWrite": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Access mode of the community."
  },
  "elh100TrapManagerMgt": {
    "name": "elh100TrapManagerMgt",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.3",
    "class": "objectidentity"
  },
  "elh100TrapManagerTable": {
    "name": "elh100TrapManagerTable",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of IP trap destination entries."
  },
  "elh100TrapMgtEntry": {
    "name": "elh100TrapMgtEntry",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ELH100-MIB",
        "object": "elh100TrapMgtIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A destination entry which defines the IP address to which traps are sent for a community."
  },
  "elh100TrapMgtIndex": {
    "name": "elh100TrapMgtIndex",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A value that uniquely identifies this IPTrap Entry."
  },
  "elh100TrapMgtRowCreation": {
    "name": "elh100TrapMgtRowCreation",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "valid": 1,
          "invalid": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of this row entry. Before add a row into table, it should be created first. Set valid(1) to a row will create this row. To delete a row from this table, set this object for the row to invalid(2). Row sets for new rows with a row status set to invalid(2) return a BAD VALUE error. This object will always read as valid(1). If no more rows can be added to the end of the table, then a row set to create a new row will return BAD VALUE. When rows are deleted from this table, the indexes of the other rows do not change. In other words, this table can be 'sparse' or have 'holes'. Deleted entries can be re-created using a row set with a row status of valid(1)."
  },
  "elh100TrapMgtCommunityString": {
    "name": "elh100TrapMgtCommunityString",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.3.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A community name to which this destination IP address belongs."
  },
  "elh100TrapMgtIpAddress": {
    "name": "elh100TrapMgtIpAddress",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.3.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP address to send traps to on behalf of this entry."
  },
  "elh100DownloadMgt": {
    "name": "elh100DownloadMgt",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.4",
    "class": "objectidentity"
  },
  "elh100DownloadServerIP": {
    "name": "elh100DownloadServerIP",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The file server of the download file"
  },
  "elh100DownloadFilename": {
    "name": "elh100DownloadFilename",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The file name to download"
  },
  "elh100DownloadMode": {
    "name": "elh100DownloadMode",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "permanent": 1,
          "temporary": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Permanent upgrade stores download software into permanent storage of the agent device. Temporary upgrade just put download software in RAM, often for a test only."
  },
  "elh100DownloadAction": {
    "name": "elh100DownloadAction",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.4.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "run": 1,
          "noRun": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "elh100DownloadAction triggers the download operation. The run option starts new software execution after download is complete. The noRun option does not start new software execution. The new software will be effective after next restart. Note that noRun option is useful only when the download is permanent."
  },
  "elh100Restart": {
    "name": "elh100Restart",
    "oid": "1.3.6.1.4.1.52.259.10.3.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A write to restart the machine. Only three values are accepted: normal -- 0, coldstart -- 1, warmstart -- 2."
  },
  "cabletronELH100StackInfo": {
    "name": "cabletronELH100StackInfo",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.1",
    "class": "objectidentity"
  },
  "stackInusedIP": {
    "name": "stackInusedIP",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address which is in used in the Dual-Speed Hub system. "
  },
  "stackInusedNetMask": {
    "name": "stackInusedNetMask",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The subnet mask which is in used in the Dual-Speed Hub system."
  },
  "stackInusedGateway": {
    "name": "stackInusedGateway",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The prefered gateway used to send traps."
  },
  "stackBootpIP": {
    "name": "stackBootpIP",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address of the BOOTP server that last responded. If no BOOP server has responded, then this object will be '0.0.0.0'."
  },
  "stackTemporalIP": {
    "name": "stackTemporalIP",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Used to change the IP address of the Dual-Speed Hub system. "
  },
  "stackTemporalNetMask": {
    "name": "stackTemporalNetMask",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Used to change the subnet mask of the Dual-Speed Hub system. "
  },
  "stackTemporalGateway": {
    "name": "stackTemporalGateway",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Used to change the prefered gateway to send traps."
  },
  "stackBootpEnable": {
    "name": "stackBootpEnable",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disable-bootp": 1,
          "enable-bootp": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object allows the users to enable/disable generation of BOOTP requests."
  },
  "ipInformationReset": {
    "name": "ipInformationReset",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noReset": 1,
          "reset": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting the stackIP, stackNetMask,stackGateway, and stackBootUpIP will not make these parameters take effect immediately. They will take effect when ipInformationReset is set to reset(2)."
  },
  "stackHealthMonitor": {
    "name": "stackHealthMonitor",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 256,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "< FOR cabletronELH100 Dual-Speed Hub DEFINITION : > There are two kinds of hub : 12 ports need (1+ 12 + 1 + 1 + 1 + 1 +1 +1 +1) 20 bytes and 24 ports need (1+ 24 + 1 + 1 + 1 + 1 +1 +1 +1) 32 bytes The maximun size : 256 bytes (total for 8 hubs)=8 hub * (1+ 24 + 1 + 1 + 1 +1 +1 +1 +1) byte | byte256 byte255......................byte2 byte1 | bit7 bit6 ... bit1 bit0 Use the first byte of each hub to indicate whether 20 or 32 bytes is used. BYTE 1: total number ports of a hub 00001100 : 12 ports | | bit7... bit0 00011000 : 24 ports | | bit7... bit0 For 12 ports hub BYTE 2 - 13 : port status for port 1 - 12 port *BYTE 2 : port status for port 1 bit 0-4 : LED status bit 0 : link status 0 - no link; 1 - link bit 1 : partition status 0 - no part.; 1 - part. bit 2 : port operation status 0 - disabled; 1 - enabled bit 3-4 : port type status 00 - not present 01 - tenMb 10 - onehundredMb 11 - reserved bit 5-7 : reserved BYTE 14-25 :reserved BYTE 26 : Expansion Port (EP) status1 bit 0-3: EP Type 0000 - not present 0010 - Internal Switch 0011 - External 100Base-TX 0100 - External 100Base-FX(ST) 0101 - External 100Base-FX(SC) 0110 - Internal + External 100Base-TX 0111 - Internal + External 100Base-FX(ST) 1000 - Internal + External 100Base-FX(SC) 1001 - Unknown switch module 1010 - Undertermined bit 4-7: reserved BYTE 27 : Expansion Port (EP) status2 bit 0-3 : LED status bit 0 : 10M port status 0 - disable; 1 - enable bit 1 : 100M port status 0 - disable; 1 - enable bit 2 : uplink port status 0 - disable; 1 - enable bit 3 : Uplink port half/full duplex status 1 - full duplex; 0 - half duplex bit 4 : EP collision led status 0 - off; 1 - on bit 5-6 : bit 3 : tx LED status 0 - off; 1 - tx on bit 4 : rx LED status 0 - off; 1 - rx on bit 7-8 : reserved BYTE 28 : tenMb segment traffic/collision bit 0-1 : tenMb traffic LED status 00 - no traffic 01 - low traffic 10 - middle traffic 11 - high traffic bit 2-5 : tenMb collision LED status 0000 - none 0001 - 1 % 0010 - 3 % 0011 - 5 % 0100 - 10 % 0101 - >= 15 % bit 6-7 : reserved BYTE 29 : onehundredMb segment traffic/collision /Power/Switch LED status bit 0-1 : onehundredMb traffic LED status 00 - no traffic 01 - low traffic 10 - middle traffic 11 - high traffic bit 2-5 : onehundredMb collision LED status 0000 - none 0001 - 1 % 0010 - 3 % 0011 - 5 % 0100 - 10 % 0101 - >= 15 % bit 6 : Power LED 0 - OFF; 1 - ON bit 7 : Switch LED 0 - OFF; 1 - ON BYTE 30 :SNMP agent & switch status bit 0: internal switch bit 0 - not exist; 1 - exist bit 1: internal switch status 0 - inactive; 1 - active bit 2: expension switch bit 0 - bad; 1 - good bit 3: expension switch status 0 - inactive; 1 - active bit 4: agent bit 0 - not exist; 1 - exist bit 5 : master status 0 - Slave; 1 - Master bit 6 - 7 : reserved BYTE 31 : Rmon status bit 0 : rmon bit 0 - not exist; 1 - exist bit 1 - 2 :rmon segment 00 - all stack 01 - segment tenMb 10 - segment onehundredMb 11 - reserved bit 3 - 5 : RMON group Status 000 - not-present 001 - disabled 010 - Rmon-4Group 011 - Rmon-7Group 100 - Rmon-all 101 to 111 - reserved bit 6 -7 : reserved BYTE 32 : Hub Position(Hub ID)/Bus Termination bit 0 - 3 : hub position 0000 - invalid 0001 - 1 0010 - 2 0011 - 3 0100 - 4 0101 - 5 0110 - 6 0111 - 7 1000 - 8 1001 to 1111 - reserved bit 4 : termination status 0 - not end hub 1 - end hub in the stack bit 5 - 7 : reserved For 24 ports hub BYTE 2 - 25 : port status for port 1 - 24 port *BYTE 2 : port status for port 1 bit 0-4 : LED status bit 0 : link status 0 - no link; 1 - link bit 1 : partition status 0 - no part.; 1 - part. bit 2 : port operation status 0 - disabled; 1 - enabled bit 3-4 : port type status 00 - not present 01 - tenMb 10 - onehundredMb 11 - reserved bit 5-7 : reserved BYTE 26 : Expansion Port (EP) status1 bit 0-3: EP Type 0000 - not present 0010 - Internal Switch 0011 - External 100Base-TX 0100 - External 100Base-FX(ST) 0101 - External 100Base-FX(SC) 0110 - Internal + External 100Base-TX 0111 - Internal + External 100Base-FX(ST) 1000 - Internal + External 100Base-FX(SC) 1001 - Unknown switch module 1010 - Undertermined bit 4-7: reserved BYTE 27 : Expansion Port (EP) status2 bit 0-3 : LED status bit 0 : 10M port status 0 - disable; 1 - enable bit 1 : 100M port status 0 - disable; 1 - enable bit 2 : uplink port status 0 - disable; 1 - enable bit 3 : Uplink port half/full duplex status 1 - full duplex; 0 - half duplex bit 4 : EP collision led status 0 - off; 1 - on bit 5-6 : bit 3 : tx LED status 0 - off; 1 - tx on bit 4 : rx LED status 0 - off; 1 - rx on bit 7-8 : reserved BYTE 28 : tenMb segment traffic/collision bit 0-1 : tenMb traffic LED status 00 - no traffic 01 - low traffic 10 - middle traffic 11 - high traffic bit 2-5 : tenMb collision LED status 0000 - none 0001 - 1 % 0010 - 3 % 0011 - 5 % 0100 - 10 % 0101 - >= 15 % bit 6-7 : reserved BYTE 29 : onehundredMb segment traffic/collision /Power/Switch LED status bit 0-1 : onehundredMb traffic LED status 00 - no traffic 01 - low traffic 10 - middle traffic 11 - high traffic bit 2-5 : onehundredMb collision LED status 0000 - none 0001 - 1 % 0010 - 3 % 0011 - 5 % 0100 - 10 % 0101 - >= 15 % bit 6 : Power LED 0 - OFF; 1 - ON bit 7 : Switch LED 0 - OFF; 1 - ON BYTE 30 :SNMP agent & switch status bit 0: internal switch bit 0 - not exist; 1 - exist bit 1: internal switch status 0 - inactive; 1 - active bit 2: expension switch bit 0 - bad; 1 - good bit 3: expension switch status 0 - inactive; 1 - active bit 4: agent bit 0 - not exist; 1 - exist bit 5 : master status 0 - Slave; 1 - Master bit 6 - 7 : reserved BYTE 31 : Rmon status bit 0 : rmon bit 0 - not exist; 1 - exist bit 1 - 2 :rmon segment 00 - all stack 01 - segment tenMb 10 - segment onehundredMb 11 - reserved bit 3 - 5 : RMON group Status 000 - not-present 001 - disabled 010 - Rmon-4Group 011 - Rmon-7Group 100 - Rmon-all 101 to 111 - reserved bit 6 -7 : reserved BYTE 32 : Hub Position(Hub ID)/Bus Termination bit 0 - 3 : hub position 0000 - invalid 0001 - 1 0010 - 2 0011 - 3 0100 - 4 0101 - 5 0110 - 6 0111 - 7 1000 - 8 1001 to 1111 - reserved bit 4 : termination status 0 - not end hub 1 - end hub in the stack bit 5 - 7 : reserved"
  },
  "cabletronELH100AgentInfo": {
    "name": "cabletronELH100AgentInfo",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.2",
    "class": "objectidentity"
  },
  "nicAttachSegment": {
    "name": "nicAttachSegment",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The ifIndex of the segment to which the agent's Ethernet NIC (Network Interface Controller) is connected. ifIndex 1 is the 100Mbps NIC; ifIndex 2 is the 10Mbps NIC. The factory setting is ifIndex 1."
  },
  "serialNumberTable": {
    "name": "serialNumberTable",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table defines the unit serial numbers tracked by the agent. A maximum of 6 serial numbers are tracked."
  },
  "serialNumberEntry": {
    "name": "serialNumberEntry",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ELH100-MIB",
        "object": "sNIndex",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "sNIndex": {
    "name": "sNIndex",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of the serial number being referenced. Indexes are always sequential, starting with 1."
  },
  "serialNumber": {
    "name": "serialNumber",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number. Every ELH100 unit has a unique serial number."
  },
  "sNCurrentUnitID": {
    "name": "sNCurrentUnitID",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The current unit ID of the unit with this serial number. If the unit with this serial number is not currently in the stack, this object's value is 255. If this object does not match sNIndex, it may mean that the unit has been moved. The configurations in the following tables may be affected: backplaneTable portTable switchPortTable backupPortTable intrusionTable rptrPortTable (RFC2108)"
  },
  "telnetMaxSessions": {
    "name": "telnetMaxSessions",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The maximum number of Telnet sessions that may be active at one time. The factory setting is 2."
  },
  "telnetAutoLogoutEnable": {
    "name": "telnetAutoLogoutEnable",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.2.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this object to enabled(1) causes the agent to automatically close Telnet sessions when no activity has occurred for telnetAutoLogoutTimeout minutes. Setting this object to disabled(2) disables automatic logout. The factory setting is enabled(1)."
  },
  "telnetAutoLogoutTimeout": {
    "name": "telnetAutoLogoutTimeout",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.2.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 99
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of minutes of inactivity after which the agent may automatically close a Telnet session. Telnet auto-logout is active only when telnetAutoLogoutEnable is set to enabled(1). The factory setting is 10 minutes."
  },
  "vT100RefreshInterval": {
    "name": "vT100RefreshInterval",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.2.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "seconds5": 5,
          "seconds30": 30,
          "seconds60": 60,
          "seconds120": 120,
          "seconds180": 180,
          "seconds300": 300
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The interval for automatic statistics refresh for VT100 screens. The factory setting is seconds30(30)."
  },
  "cabletronELH100gGroupInfo": {
    "name": "cabletronELH100gGroupInfo",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3",
    "class": "objectidentity"
  },
  "groupTable": {
    "name": "groupTable",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table defines basic configuration information for each unit in the stack."
  },
  "groupEntry": {
    "name": "groupEntry",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ELH100-MIB",
        "object": "groupID",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "groupID": {
    "name": "groupID",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The group ID of the group being referenced. Groups are numbered in top-down order, with the top group being group 1. Attempts to reference nonexistent groups are rejected with an error-status of noSuchName(2)."
  },
  "groupType": {
    "name": "groupType",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notPresent": 1,
          "unknown": 2,
          "elh100-12tx": 3,
          "elh100-24tx": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The type of group."
  },
  "groupCounterReset": {
    "name": "groupCounterReset",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noReset": 1,
          "reset": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this object to reset(2) causes the agent to reset all RFC1757 and RFC2108 counters for all ports on this group. This object always returns noReset(1) when read. Attempts to set this object to noReset(1) are rejected with an error-status of badValue(3)."
  },
  "mgmtModuleStatus": {
    "name": "mgmtModuleStatus",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notPresent": 1,
          "active": 2,
          "standby": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The status of this group's management module. Only one management module in a stack is allowed to act as the active agent. A value of notPresent(1) indicates that there is no management module in this group. A value of active(2) means that this group's management module is acting as the stack's active agent. A value of standby(3) means that this group contains a management module, but it is not the active agent."
  },
  "mgmtModuleDatabaseVersion": {
    "name": "mgmtModuleDatabaseVersion",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 64,
            "max": 64
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The configuration database version number of this managing agent. If a management module is not present, this object's value is a zero-length string. Each management agent contains a database version that is determined by the version of the agent's firmware. Different firmware versions MAY or MAY NOT have the same database version number. Usually a database version number changes only when new features are added. Database version numbers are used to determine which components of non-volatile configuration may be synchronized between active and standby management modules. A component belonging to a higher (newer) database version may not be present in a lower (older) database version; in this case, the component will not be updated in the older database."
  },
  "switchModuleType": {
    "name": "switchModuleType",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notPresent": 1,
          "unknown": 2,
          "internalSwitch10-100": 3,
          "mediaTX-10-100": 4,
          "mediaFX-SC": 5,
          "mediaFX-ST": 6,
          "switchMediaTX-10-100": 7,
          "switchMediaFX-SC": 8,
          "switchMediaFX-ST": 9
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The type of the switch module."
  },
  "switchModuleActive": {
    "name": "switchModuleActive",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 1,
          "notActive": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether or not a switch module is active. In order to avoid network loops, the switch hardware allows only one switch to bridge the stack's common 10Mbps and 100Mbps backplanes. Redundant switches are automatically disabled. Note that this restriction does not apply to switches that bridge one or more micro-isolated segments. Individual switch ports may be administratively enabled/disabled using the object switchPortAdminStatus. If the switch is hardware-disabled, the switch is disabled no matter what its administrative status."
  },
  "backplaneTable": {
    "name": "backplaneTable",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table provides backplane isolation/connection status for each unit's 100Mbps and 10Mbps segments."
  },
  "backplaneEntry": {
    "name": "backplaneEntry",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ELH100-MIB",
        "object": "backplaneGroupID",
        "implied": 0
      },
      {
        "module": "ELH100-MIB",
        "object": "backplaneSegmentID",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "backplaneGroupID": {
    "name": "backplaneGroupID",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The group ID of the segment being referenced. Groups are numbered in top-down order, with the top group being group 1. Attempts to reference nonexistent groups are rejected with an error-status of noSuchName(2)."
  },
  "backplaneSegmentID": {
    "name": "backplaneSegmentID",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "tenMbps": 10,
          "oneHundredMbps": 100
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The segment ID of the segment being referenced."
  },
  "backplaneIsolated": {
    "name": "backplaneIsolated",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.3.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "isolated": 1,
          "attached": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of the segment's connection to the backplane bus. The factory setting is attached(2)."
  },
  "cabletronELH100PortInfo": {
    "name": "cabletronELH100PortInfo",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.4",
    "class": "objectidentity"
  },
  "portTable": {
    "name": "portTable",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.4.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table defines basic configuration information for each repeater port in the stack."
  },
  "portEntry": {
    "name": "portEntry",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.4.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ELH100-MIB",
        "object": "portGroupID",
        "implied": 0
      },
      {
        "module": "ELH100-MIB",
        "object": "portID",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "portGroupID": {
    "name": "portGroupID",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.4.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 6
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The group ID of the repeater port being referenced. Groups are numbered in top-down order, with the top group being group 1. Attempts to reference nonexistent groups are rejected with an error-status of noSuchName(2)."
  },
  "portID": {
    "name": "portID",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.4.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The port ID of the repeater port being referenced."
  },
  "portLinkSpeed": {
    "name": "portLinkSpeed",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.4.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noLink": 1,
          "tenMbps": 10,
          "oneHundredMbps": 100
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The speed at which the port is currently operating. If there is no link on the port, this object returns noLink(1)."
  },
  "portSpeedConfig": {
    "name": "portSpeedConfig",
    "oid": "1.3.6.1.4.1.52.259.10.3.2.4.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "autoNegotiate": 1,
          "tenMbps": 10,
          "oneHundredMbps": 100
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Selects the speed at which the port operates. The factory setting is autoNegotiate(1)."
  },
  "cabletronELH100PerfMonAgentInfo": {
    "name": "cabletronELH100PerfMonAgentInfo",
    "oid": "1.3.6.1.4.1.52.259.10.3.3.1",
    "class": "objectidentity"
  },
  "perfMonAgentCRCErrors": {
    "name": "perfMonAgentCRCErrors",
    "oid": "1.3.6.1.4.1.52.259.10.3.3.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of valid-length packets with CRC errors received on the agent's MAC port."
  },
  "perfMonAgentAlignmentErrors": {
    "name": "perfMonAgentAlignmentErrors",
    "oid": "1.3.6.1.4.1.52.259.10.3.3.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of valid-length packets with alignment errors received on the agent's MAC port."
  },
  "perfMonAgentCollisions": {
    "name": "perfMonAgentCollisions",
    "oid": "1.3.6.1.4.1.52.259.10.3.3.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of collisions detected on the agent's MAC port."
  },
  "perfMonAgentTotalPortIsolates": {
    "name": "perfMonAgentTotalPortIsolates",
    "oid": "1.3.6.1.4.1.52.259.10.3.3.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times the agent's MAC port became isolated. Port isolation occurs only during 100Mbps operation."
  },
  "perfMonAgentSymbolErrors": {
    "name": "perfMonAgentSymbolErrors",
    "oid": "1.3.6.1.4.1.52.259.10.3.3.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets with symbol errors received on the agent's MAC port. Symbol errors occur only during 100Mbps operation."
  },
  "cabletronELH100SwitchInfo": {
    "name": "cabletronELH100SwitchInfo",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.1",
    "class": "objectidentity"
  },
  "switchPortTable": {
    "name": "switchPortTable",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table provides configuration information about each port on each switch module in the stack."
  },
  "switchPortEntry": {
    "name": "switchPortEntry",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ELH100-MIB",
        "object": "switchPortGroupID",
        "implied": 0
      },
      {
        "module": "ELH100-MIB",
        "object": "switchPortID",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "switchPortGroupID": {
    "name": "switchPortGroupID",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The group ID of the switch module port being referenced. Groups are numbered in top-down order, with the top group being group 1. If a switch module is not installed on the group, then a GetNextRequest skips the entry. Attempts to reference nonexistent groups are rejected with an error-status of noSuchName(2)."
  },
  "switchPortID": {
    "name": "switchPortID",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 3
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The port ID of the switch module port being referenced. Port 1 is always the internal 100Mbps port. Port 2 is always the internal 10Mbps port; note that this port is inactive on media modules. Port 3 is always the external port; note that this port is inactive on internal switch modules."
  },
  "switchPortAdminStatus": {
    "name": "switchPortAdminStatus",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The administrative status of the port. Setting this object to enabled(1) enables the port. Setting this object to disabled(2) disables the port. On media modules, port 2 (the internal 10Mbps port) cannot be managed. The external port cannot be managed on any module. In these cases, attempts to set this object are rejected with an error-status of badValue(3). The factory setting for manageable ports is enabled(1). Note that if switchModuleActive is notActive(2), then the switch is disabled no matter what its administrative status."
  },
  "switchPortSpeed": {
    "name": "switchPortSpeed",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noLink": 1,
          "tenMbps": 10,
          "oneHundredMbps": 100
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The speed at which the switch port is currently operating. If the port is inactive (port 2 on media modules and port 3 on internal switch modules), noLink(1) is returned."
  },
  "switchPortDuplex": {
    "name": "switchPortDuplex",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "halfDuplex": 1,
          "fullDuplex": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The duplex mode in which the switch port is currently operating. If the port is inactive (port 2 on media modules and port 3 on internal switch modules), notApplicable(3) is returned."
  },
  "switchPortLink": {
    "name": "switchPortLink",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "link": 1,
          "noLink": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates if link is detected on the port. If the port is inactive (port 2 on media modules and port 3 on internal switch modules), noLink(2) is returned."
  },
  "cabletronELH100SwitchStatsInfo": {
    "name": "cabletronELH100SwitchStatsInfo",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2",
    "class": "objectidentity"
  },
  "switchPortStatsTable": {
    "name": "switchPortStatsTable",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table provides statistics on each port on each switch module in the stack. Note that statistics for the external port on media and switch/media modules are unavailable to the agent and are reported as 0. Statistics for port 2 (the internal 10Mbps port) on media modules are also reported as 0."
  },
  "switchPortStatsEntry": {
    "name": "switchPortStatsEntry",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ELH100-MIB",
        "object": "switchPortStatsGroupID",
        "implied": 0
      },
      {
        "module": "ELH100-MIB",
        "object": "switchPortStatsID",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "switchPortStatsGroupID": {
    "name": "switchPortStatsGroupID",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The group ID of the switch module port being referenced. If the group is not present, or if there is no switch module installed in the group, GetRequests and SetRequests are rejected with an error-status of noSuchName(2). GetNextRequests skip entries for nonexistent modules."
  },
  "switchPortStatsID": {
    "name": "switchPortStatsID",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 3
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The port ID of the switch module port being referenced. Port 1 is always the internal 100Mbps port. Port 2 is always the internal 10Mbps port. Port 3 is always the external port. Note that port 2 is inactive on media modules and port 3 is inactive on internal switch modules. Note: Statistics for the external port are unavailable to the agent and are reported as 0."
  },
  "switchPortReadableFrames": {
    "name": "switchPortReadableFrames",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of valid frames received by the port."
  },
  "switchPortReadableOctets": {
    "name": "switchPortReadableOctets",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of octets (bytes) in all valid frames received by the port."
  },
  "switchPortFCSErrors": {
    "name": "switchPortFCSErrors",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of valid-length frames received by the port that had FCS (frame check sequence) errors."
  },
  "switchPortAlignmentErrors": {
    "name": "switchPortAlignmentErrors",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of valid-length frames received by the port that had alignment errors."
  },
  "switchPortFramesTooLong": {
    "name": "switchPortFramesTooLong",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames received by the port that were longer than 1518 bytes."
  },
  "switchPortShortEvents": {
    "name": "switchPortShortEvents",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames received by the port that were shorter than 82 bits."
  },
  "switchPortRunts": {
    "name": "switchPortRunts",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of frames received by the port that were longer than 82 bits but shorter than 512 bits (64 bytes)."
  },
  "switchPortCollisions": {
    "name": "switchPortCollisions",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of collisions detected on the port."
  },
  "switchPortLateEvents": {
    "name": "switchPortLateEvents",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of collisions detected on the port that occurred later than 512 bit-times into the transmission of a packet."
  },
  "switchPortVeryLongEvents": {
    "name": "switchPortVeryLongEvents",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times any activity continued for more than 4 to 7.5 milliseconds."
  },
  "switchPortDataRateMismatches": {
    "name": "switchPortDataRateMismatches",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times the incoming data rate mismatched the local clock source enough to cause a FIFO overflow or underflow."
  },
  "switchPortAutoPartitions": {
    "name": "switchPortAutoPartitions",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times this port was auto-partitioned by the hardware. In 100Mbps mode, a port auto-partitions when it detects more than 60 consecutive collisions. In 10Mbps mode, a port auto-partitions after 32 consecutive collisions."
  },
  "switchPortBroadcastPackets": {
    "name": "switchPortBroadcastPackets",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good broadcast frames received by the port."
  },
  "switchPortMulticastPackets": {
    "name": "switchPortMulticastPackets",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good multicast (not broadcast) frames received by the port."
  },
  "switchPortIsolates": {
    "name": "switchPortIsolates",
    "oid": "1.3.6.1.4.1.52.259.10.3.4.2.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times this port was auto-isolated by the hardware. This occurs only during 100Mbps operation. A port auto-isolates when it transmits more than 2 consecutive false carrier events."
  },
  "cabletronELH100BackupInfo": {
    "name": "cabletronELH100BackupInfo",
    "oid": "1.3.6.1.4.1.52.259.10.3.5.1",
    "class": "objectidentity"
  },
  "backupPortTable": {
    "name": "backupPortTable",
    "oid": "1.3.6.1.4.1.52.259.10.3.5.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table allows configuration of backup port pairs."
  },
  "backupPortEntry": {
    "name": "backupPortEntry",
    "oid": "1.3.6.1.4.1.52.259.10.3.5.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ELH100-MIB",
        "object": "backupIndex",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "backupIndex": {
    "name": "backupIndex",
    "oid": "1.3.6.1.4.1.52.259.10.3.5.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 72
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of the Backup table entry being referenced. Indexes may be nonconsecutive."
  },
  "backupPriPortGroup": {
    "name": "backupPriPortGroup",
    "oid": "1.3.6.1.4.1.52.259.10.3.5.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Group ID of the primary port. Attempts to set this object to a nonexistent group are rejected with an error-status of badValue(3). If this object belongs to an empty entry, it returns a value of 255."
  },
  "backupPriPortPort": {
    "name": "backupPriPortPort",
    "oid": "1.3.6.1.4.1.52.259.10.3.5.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Port number of the primary port. Attempts to set this object to a nonexistent port are rejected with an error-status of badValue(3). If this object belongs to an empty entry, it returns a value of 255."
  },
  "backupSecPortGroup": {
    "name": "backupSecPortGroup",
    "oid": "1.3.6.1.4.1.52.259.10.3.5.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Group ID of the secondary port. The secondary port may be on any group in the stack. Attempts to set this object to a nonexistent unit are rejected with an error-status of badValue(3). If this object belongs to an empty entry, it returns a value of 255."
  },
  "backupSecPortPort": {
    "name": "backupSecPortPort",
    "oid": "1.3.6.1.4.1.52.259.10.3.5.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Port number of the secondary port. Attempts to set this object to a nonexistent port are rejected with an error-status of badValue(3). If this object belongs to an empty entry, it returns a value of 255."
  },
  "backupPortAction": {
    "name": "backupPortAction",
    "oid": "1.3.6.1.4.1.52.259.10.3.5.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "inactive": 1,
          "active": 2,
          "standby": 3,
          "backup": 4,
          "invalid": 5,
          "delete": 6
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of backup port monitoring for this port pair. Setting this object to active(2) enables the primary port, disables the secondary port, and activates backup port monitoring. Once backup port monitoring is activated, the value of this object is reported as standby(3) until a triggering event occurs. A triggering event may be loss of link after link was active, port auto-partition, or port auto-isolate (100Mbps ports only). After a triggering event occurs, the primary port is disabled, the secondary port is enabled, and the value of this object is reported as backup(4). A RFC2108 rptrHealthInfo trap is transmitted. To re-enable the primary port and re-activate backup port monitoring, set this object to active(2). To disable backup port monitoring for the port pair, set this object to inactive(1). To remove the port pair from the backup table, set this object to delete(6). The enable/disable statuses of the ports do not change when they are deactivated or deleted; use rptrPortAdminStatus (RFC2108) to set the ports to the desired state. A value of invalid(5) indicates that one or both of the units for which this entry was originally configured is not currently in the stack. Backup port monitoring is disabled. The agent makes this determination by tracking the serial numbers on the units in the stack. The values standby(3), backup(4), and invalid(5) are read-only. Attempts to set this object to either of these values are rejected with an error-status of badValue(3)."
  },
  "cabletronELH100SecurityInfo": {
    "name": "cabletronELH100SecurityInfo",
    "oid": "1.3.6.1.4.1.52.259.10.3.6.1",
    "class": "objectidentity"
  },
  "securityTable": {
    "name": "securityTable",
    "oid": "1.3.6.1.4.1.52.259.10.3.6.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table allows configuration of port-level intrusion detection."
  },
  "securityEntry": {
    "name": "securityEntry",
    "oid": "1.3.6.1.4.1.52.259.10.3.6.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ELH100-MIB",
        "object": "securityGroupID",
        "implied": 0
      },
      {
        "module": "ELH100-MIB",
        "object": "securityPortID",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "securityGroupID": {
    "name": "securityGroupID",
    "oid": "1.3.6.1.4.1.52.259.10.3.6.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The group ID of the port being referenced. Groups are numbered in top-down order, with the top group being group 1. Attempts to reference nonexistent units are rejected with an error-status of noSuchName(2)."
  },
  "securityPortID": {
    "name": "securityPortID",
    "oid": "1.3.6.1.4.1.52.259.10.3.6.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The port ID of the port being referenced. Attempts to reference nonexistent ports are rejected with an error-status of noSuchName(2)."
  },
  "securityAddr": {
    "name": "securityAddr",
    "oid": "1.3.6.1.4.1.52.259.10.3.6.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The authorized MAC address for this port. This address may be configured through auto-learning if securityAutoLearnAction is set to active(2). Otherwise, the authorized MAC address may be configured by a SetRequest on this object. SNMP SetRequests are rejected unless securityAutoLearnAction is set to inactive(1)."
  },
  "securityAutoLearnAction": {
    "name": "securityAutoLearnAction",
    "oid": "1.3.6.1.4.1.52.259.10.3.6.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "inactive": 1,
          "active": 2,
          "learned": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Selects the auto-learning function for the port. Setting this object to inactive(1) disables auto-learning; the user must set securityAddr in order to specify the authorized MAC address. Setting this object to active(2) enables auto-learning of the port's authorized MAC address. The agent first sets the authorized MAC address to 0, then learns the source address of the first error-free frame received by the port. The newly-learned authorized address is reflected in securityAddr, and the status of this object changes to learned(3). The value learned(3) is read-only. Attempts to set this object to learned(3) are rejected with an error-status of badValue(3)."
  },
  "securityEnable": {
    "name": "securityEnable",
    "oid": "1.3.6.1.4.1.52.259.10.3.6.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "inactive": 1,
          "warningAndDisable": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this object to warningAndDisable(2) enables intrusion detection on the port. When an intruder is detected, a RFC2108 rptrInfoHealth trap is transmitted and the port is disabled. An intruder is detected only after it transmits a packet. A passive (non-transmitting) intruder cannot be detected. Setting this object to inactive(1) disables intrusion detection for the port."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/ELH100-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:04:53 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "ELH100-MIB"
  }
}