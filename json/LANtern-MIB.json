{
  "imports": {
    "class": "imports",
    "RFC1215-MIB": [
      "TRAP-TYPE"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "Gauge32",
      "iso",
      "TimeTicks",
      "NOTIFICATION-TYPE",
      "Counter32",
      "enterprises",
      "Bits",
      "MibIdentifier",
      "Integer32",
      "MODULE-IDENTITY",
      "OBJECT-IDENTITY",
      "OBJECT-TYPE",
      "Counter64",
      "Unsigned32",
      "IpAddress"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "novell": {
    "name": "novell",
    "oid": "1.3.6.1.4.1.23",
    "class": "objectidentity"
  },
  "productType": {
    "name": "productType",
    "oid": "1.3.6.1.4.1.23.1",
    "class": "objectidentity"
  },
  "mibDoc": {
    "name": "mibDoc",
    "oid": "1.3.6.1.4.1.23.2",
    "class": "objectidentity"
  },
  "networkMonitor": {
    "name": "networkMonitor",
    "oid": "1.3.6.1.4.1.23.1.1",
    "class": "objectidentity"
  },
  "ethernetLANtern": {
    "name": "ethernetLANtern",
    "oid": "1.3.6.1.4.1.23.1.1.1",
    "class": "objectidentity"
  },
  "lantern": {
    "name": "lantern",
    "oid": "1.3.6.1.4.1.23.2.1",
    "class": "objectidentity"
  },
  "lanternAdmin": {
    "name": "lanternAdmin",
    "oid": "1.3.6.1.4.1.23.2.1.1",
    "class": "objectidentity"
  },
  "lanternEthernet": {
    "name": "lanternEthernet",
    "oid": "1.3.6.1.4.1.23.2.1.2",
    "class": "objectidentity"
  },
  "lanternTokenRing": {
    "name": "lanternTokenRing",
    "oid": "1.3.6.1.4.1.23.2.1.3",
    "class": "objectidentity"
  },
  "lanternIp": {
    "name": "lanternIp",
    "oid": "1.3.6.1.4.1.23.2.1.4",
    "class": "objectidentity"
  },
  "lantern802dot2": {
    "name": "lantern802dot2",
    "oid": "1.3.6.1.4.1.23.2.1.5",
    "class": "objectidentity"
  },
  "lanternIpx": {
    "name": "lanternIpx",
    "oid": "1.3.6.1.4.1.23.2.1.6",
    "class": "objectidentity"
  },
  "lanternProtocols": {
    "name": "lanternProtocols",
    "oid": "1.3.6.1.4.1.23.2.1.10",
    "class": "objectidentity"
  },
  "Time": {
    "name": "Time",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type"
    }
  },
  "DisplayString": {
    "name": "DisplayString",
    "class": "type",
    "type": {
      "type": "OCTET STRING",
      "class": "type"
    }
  },
  "PhysAddress": {
    "name": "PhysAddress",
    "class": "type",
    "type": {
      "type": "OCTET STRING",
      "class": "type"
    }
  },
  "Seconds": {
    "name": "Seconds",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type"
    }
  },
  "adminIdentification": {
    "name": "adminIdentification",
    "oid": "1.3.6.1.4.1.23.2.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "An identifying ASCII string may be attached to the LANtern network monitor by writing adminIdentification. Conversely, the LANtern network monitor may be identified by reading adminIdentification. adminIdentification is stored in nonvolatile RAM."
  },
  "adminDateAndTime": {
    "name": "adminDateAndTime",
    "oid": "1.3.6.1.4.1.23.2.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Reading adminDateAndTime returns the current date and time in use by the LANtern network monitor. The LANtern network monitor's date and time may be adjusted at any time by writing to adminDateAndTime. However, although the new value is updated correctly as time advances, it does not replace the previous value until the LANtern network monitor is restarted. adminDateAndTime is stored in the clock/calendar chip."
  },
  "adminTimeZone": {
    "name": "adminTimeZone",
    "oid": "1.3.6.1.4.1.23.2.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A DisplayString defining the time zone of the LANtern network monitor. adminTimeZone is neither parsed nor used by the LANtern network monitor, it is merely stored and divulged upon request. It is strongly recommended that adminTimeZone be used to store time zone information in a manner identical to the UNIX System V time zone environment variable (TZ). This standard approach would permit interoperability with network management consoles from multiple vendors. adminTimeZone is stored in nonvolatile RAM."
  },
  "adminPowerOnTime": {
    "name": "adminPowerOnTime",
    "oid": "1.3.6.1.4.1.23.2.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time when the LANtern network monitor was last powered on or restarted."
  },
  "adminPowerOffTime": {
    "name": "adminPowerOffTime",
    "oid": "1.3.6.1.4.1.23.2.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time when the LANtern network monitor was last powered off or restarted. The value is 0 (midnight, 1 January 1900) after a cold start."
  },
  "adminNetworkDataLink": {
    "name": "adminNetworkDataLink",
    "oid": "1.3.6.1.4.1.23.2.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ethernetDIX": 1
        }
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The type of data link encapsulation to be used on the monitored network. adminNetworkDataLink may be written at any time; however, the change does not take effect until the LANtern network monitor is restarted. When adminNetworkDataLink is read, it returns the value currently in use, regardless of any previous writes. adminNetworkDataLink is stored in nonvolatile RAM."
  },
  "adminNetworkIPAddr": {
    "name": "adminNetworkIPAddr",
    "oid": "1.3.6.1.4.1.23.2.1.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "c044cd01",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP address to be used by the LANtern network monitor on the monitored network. adminNetworkIPAddr may be written at any time; however, the change does not take effect until the LANtern network monitor is restarted. When adminNetworkIPAddr is read, it returns the IP address currently in use, regardless of any previous writes. adminNetworkIPAddr is stored in nonvolatile RAM. On start up, if the LANtern does not have an IP address, it will attempt to acquire one via BOOTP and/or RARP. If neither method is successful, the address 192.68.205.1 is used."
  },
  "adminNetworkSubnetMask": {
    "name": "adminNetworkSubnetMask",
    "oid": "1.3.6.1.4.1.23.2.1.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ffffff80",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The subnet mask for the monitored network. adminNetworkSubnetMask may be written at any time; however, the change does not take effect until the LANtern network monitor is restarted. When adminNetworkSubnetMask is read, it returns the subnet mask currently in use, regardless of any previous writes. adminNetworkSubnetMask is stored in nonvolatile RAM. When the value 0.0.0.0 is stored in this variable, the LANtern assumes no subnetting. This value is acquired via BOOTP if the value of adminNetworkIPAddr is acquired via BOOTP. If neither BOOTP nor RARP succeeds in acquiring adminNetworkIPAddr, the value 255.255.255.128 is used"
  },
  "adminNetworkGateway": {
    "name": "adminNetworkGateway",
    "oid": "1.3.6.1.4.1.23.2.1.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "00000000",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP address of a gateway directly connected to the monitored network (the LANtern network monitor's default gateway). adminNetworkGateway may be written at any time; however, the change does not take effect until the LANtern network monitor is restarted. When adminNetworkGateway is read it returns the gateway IP address currently in use, regardless of any previous writes. adminNetworkGateway is stored in nonvolatile RAM."
  },
  "adminClientTable": {
    "name": "adminClientTable",
    "oid": "1.3.6.1.4.1.23.2.1.1.10",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table providing data on all authorized LANtern clients. The table is accessed by adminClientIPAddr. A new entry may be created by writing to a nonexistent instance. Note that adminClientIPAddr is set implicitly from this write; it cannot be written directly. An entry may subsequently be deleted by writing (any value) to adminClientDelete. adminClientTable is stored in nonvolatile RAM. Default: a single entry with: adminClientIPAddr.0.0.0.0=0.0.0.0, adminClientIPMask.0.0.0.0=0.0.0.0, adminClientCommunities.0.0.0.0=7"
  },
  "adminClientEntry": {
    "name": "adminClientEntry",
    "oid": "1.3.6.1.4.1.23.2.1.1.10.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LANtern-MIB",
        "object": "adminClientIPAddr",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Data about each authorized client."
  },
  "adminClientIPAddr": {
    "name": "adminClientIPAddr",
    "oid": "1.3.6.1.4.1.23.2.1.1.10.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address (or portion thereof) of a station authorized to access the LANtern network monitor."
  },
  "adminClientIPMask": {
    "name": "adminClientIPMask",
    "oid": "1.3.6.1.4.1.23.2.1.1.10.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ffffffff",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A 32-bit mask that is bitwise anded with the candidate client's IP address before attempting to match against adminClientIPAddr."
  },
  "adminClientCommunities": {
    "name": "adminClientCommunities",
    "oid": "1.3.6.1.4.1.23.2.1.1.10.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 4,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A bit array where the presence of a particular bit indicates that use of that particular community name is permitted. Bit Community 2^0 administrator 2^1 logger 2^2 monitor."
  },
  "adminClientDelete": {
    "name": "adminClientDelete",
    "oid": "1.3.6.1.4.1.23.2.1.1.10.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "write-only",
    "status": "mandatory",
    "description": "A write (any value) causes the table entry to be deleted."
  },
  "adminUnauthorizedIPAddr": {
    "name": "adminUnauthorizedIPAddr",
    "oid": "1.3.6.1.4.1.23.2.1.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The IP address of the station that generated the authentication failure."
  },
  "adminUnauthorizedCommunity": {
    "name": "adminUnauthorizedCommunity",
    "oid": "1.3.6.1.4.1.23.2.1.1.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The community name string used in the PDU that generated the authentication failure."
  },
  "adminNotificationTable": {
    "name": "adminNotificationTable",
    "oid": "1.3.6.1.4.1.23.2.1.1.13",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of all stations wishing to receive traps from the LANtern network monitor; accessed by adminNotificationIPAddr. A new entry may be created by writing to a nonexistent instance. Note that adminNotificationIPAddr is set implicitly from this write; it cannot be written directly. An entry may subsequently be deleted by writing (any value) to adminNotificationDelete adminNotificationTable is stored in nonvolatile RAM."
  },
  "adminNotificationEntry": {
    "name": "adminNotificationEntry",
    "oid": "1.3.6.1.4.1.23.2.1.1.13.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LANtern-MIB",
        "object": "adminNotificationIPAddr",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Data for each station on the notification list."
  },
  "adminNotificationIPAddr": {
    "name": "adminNotificationIPAddr",
    "oid": "1.3.6.1.4.1.23.2.1.1.13.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address of the station wishing to receive traps from the LANtern network monitor."
  },
  "adminNotificationStatus": {
    "name": "adminNotificationStatus",
    "oid": "1.3.6.1.4.1.23.2.1.1.13.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "primaryContact": 1,
          "backupContact": 2
        }
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Traps are sent to all primaryContacts who have the corresponding bit set in adminNotificationTrapMask. Traps are sent to backupContacts only if they have the corresponding bit set in adminNotificationTrapMask and if a confirmed delivery to a station naming it as backup failed. Default: primaryContact(1)"
  },
  "adminNotificationTrapMask": {
    "name": "adminNotificationTrapMask",
    "oid": "1.3.6.1.4.1.23.2.1.1.13.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A bit array specifying which traps the station wishes to receive. Bit Trap 2^0 warmStart 2^1 cableFailure 2^2 reserved 2^3 duplicateIPAddr 2^4 utilizationAlarm 2^5 errorsAlarm 2^6 broadcastsAlarm 2^7 collisionsAlarm 2^8 authenticationFailure 2^9 hostInactive 2^10 hostActive 2^11 newHost 2^12 hostLimitExceeded"
  },
  "adminNotificationConfirmMask": {
    "name": "adminNotificationConfirmMask",
    "oid": "1.3.6.1.4.1.23.2.1.1.13.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A bit array specifying which traps the station wishes to receive with confirmed delivery. Any bits set must also be set in adminNotificationTrapMask. If a trap sent with confirmed delivery is not acknowledged within adminNotificationTimeout seconds it is sent again. After adminNotificationRetries attempts to deliver the trap, the LANtern network monitor gives up, and tries to deliver it to the station specified by adminNotificationBackup."
  },
  "adminNotificationTimeout": {
    "name": "adminNotificationTimeout",
    "oid": "1.3.6.1.4.1.23.2.1.1.13.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Seconds",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 10,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "For traps with confirmed delivery, adminNotificationTimeout specifies the interval (in seconds) between retries."
  },
  "adminNotificationRetries": {
    "name": "adminNotificationRetries",
    "oid": "1.3.6.1.4.1.23.2.1.1.13.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 2,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "For traps with confirmed delivery, adminNotificationRetries specifies the number of retries that should be attempted before giving up and trying to deliver the trap to adminNotificationBackupIPAddr."
  },
  "adminNotificationBackupIPAddr": {
    "name": "adminNotificationBackupIPAddr",
    "oid": "1.3.6.1.4.1.23.2.1.1.13.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "00000000",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "For traps with confirmed delivery, adminNotificationBackupIPAddr specifies the IP address of a backup station (also in adminNotificationTable) to be contacted should delivery of the trap to this station fail. Default: 0.0.0.0 (no backup)"
  },
  "adminNotificationDelete": {
    "name": "adminNotificationDelete",
    "oid": "1.3.6.1.4.1.23.2.1.1.13.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "write-only",
    "status": "mandatory",
    "description": "A write (any value) causes the table entry to be deleted."
  },
  "adminTrapHandle": {
    "name": "adminTrapHandle",
    "oid": "1.3.6.1.4.1.23.2.1.1.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A unique handle that is generated for each trap issued and that is passed in the trap-PDU along with any other variable bindings."
  },
  "adminTrapAcknowledge": {
    "name": "adminTrapAcknowledge",
    "oid": "1.3.6.1.4.1.23.2.1.1.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "write-only",
    "status": "mandatory",
    "description": "A trap is acknowledged by writing the value of adminTrapHandle passed in the trap-PDU to adminTrapAcknowledge."
  },
  "adminDownLoadFile": {
    "name": "adminDownLoadFile",
    "oid": "1.3.6.1.4.1.23.2.1.1.16",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The name of the executable file to be downloaded from adminDownLoadServer."
  },
  "adminDownLoadServer": {
    "name": "adminDownLoadServer",
    "oid": "1.3.6.1.4.1.23.2.1.1.17",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The name of the file server from which to download a new executable image (adminDownLoadFile)."
  },
  "adminDownload": {
    "name": "adminDownload",
    "oid": "1.3.6.1.4.1.23.2.1.1.18",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "temporaryChange": 1,
          "permanentChange": 2,
          "downloadSuccess": 3,
          "tftpFailed": 4,
          "badFile": 5,
          "tftpUndefined": 6,
          "tftpFileNotFound": 7,
          "tftpAccessViolation": 8,
          "tftpIllegalOperation": 10,
          "tftpUnknownTransferID": 11
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A write to adminDownload of temporaryChange(1) or permanentChange(2) causes the LANtern network monitor to discontinue its normal functions and perform a TFTP read of the file specified by adminDownLoadFile from the server specified by adminDownLoadServer into RAM. Upon successful completion of the file transfer, the new image is written to the flash EPROM memory (permanentChange only), destroying the previous image. The LANtern network monitor then performs a warm restart to activate the new image. A read of adminDownLoad returns the status of the last download. The values temporaryChange(1) and permanentChange(2) indicate a download is in progress. tftpFailed(4) indicates the server failed to respond or the transfer timed out. badFile(5) occurs if the LANtern network monitor determines the downloaded file has been corrupted or is not a LANtern executable. All other error codes are the values defined by the TFTP protocol [RFC 783], offset by six. Note: adminDownloadFile and adminDownLoadServer must be set prior (separate PDU) to setting adminDownLoad."
  },
  "adminReset": {
    "name": "adminReset",
    "oid": "1.3.6.1.4.1.23.2.1.1.19",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "coldRestart": 1,
          "warmRestart": 2
        }
      }
    },
    "maxaccess": "write-only",
    "status": "mandatory",
    "description": "A write to adminReset causes the LANtern network monitor to discontinue its normal functions and commence a restart sequence. The contents of RAM, including all counters and statistics, are lost. A coldRestart destroys the contents of the nonvolatile RAM and causes the LANtern network monitor to start up exactly as if power was supplied for the first time. This is equivalent to supplying power to the LANtern network monitor while holding the hardware reset button depressed. A warmRestart preserves the contents of the nonvolatile RAM and causes the LANtern network monitor to start up exactly as if the reset button had been pressed (or power was being restored after an outage)."
  },
  "adminSerialDataLink": {
    "name": "adminSerialDataLink",
    "oid": "1.3.6.1.4.1.23.2.1.1.20",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "slip": 1
        }
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The type of data link encapsulation to be used on the serial line. adminSerialDataLink may be written at any time; however, the change does not take effect until the LANtern network monitor is restarted. When adminSerialDataLink is read, it returns the value currently in use, regardless of any previous writes. adminSerialDataLink is stored in nonvolatile RAM."
  },
  "adminSerialIPAddr": {
    "name": "adminSerialIPAddr",
    "oid": "1.3.6.1.4.1.23.2.1.1.21",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "c044cd81",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP address currently in use by the LANtern network monitor on the serial channel. adminSerialIPAddr may be written at any time; however, the change does not take effect until the LANtern network monitor is restarted. When adminSerialIPAddr is read, it returns the IP address currently in use, regardless of any previous writes. adminSerialIPAddr is stored in nonvolatile RAM."
  },
  "adminSerialSubnetMask": {
    "name": "adminSerialSubnetMask",
    "oid": "1.3.6.1.4.1.23.2.1.1.22",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ffffff80",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The subnet mask for the serial channel. adminSerialSubnetMask may be written at any time; however, the change does not take effect until the LANtern network monitor is restarted. When this variable is read, it returns the subnet mask currently in use, regardless of any previous writes. When the value 0.0.0.0 is stored in this variable, the LANtern assumes no subnetting. adminSerialSubnetMask is stored in nonvolatile RAM."
  },
  "adminSerialBaudRate": {
    "name": "adminSerialBaudRate",
    "oid": "1.3.6.1.4.1.23.2.1.1.23",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "baud300": 1,
          "baud1200": 2,
          "baud2400": 3,
          "baud4800": 4,
          "baud7200": 5,
          "baud9600": 6,
          "baud19200": 7,
          "baud38400": 8
        }
      }
    },
    "default": {
      "default": {
        "value": 3,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A codification of the baud rate to be used on the serial line for incoming calls or when the line is directly connected. Change does not switch line speed until next state change of modem or reset. adminSerialBaudRate is stored in nonvolatile RAM."
  },
  "adminSerialTimeout": {
    "name": "adminSerialTimeout",
    "oid": "1.3.6.1.4.1.23.2.1.1.24",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Seconds",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 60,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Once a phone connection has been established, the LANtern network monitor maintains that connection until either the other end hangs up or adminSerialTimeout seconds elapses with no communication. adminSerialTimeout is stored in nonvolatile RAM."
  },
  "adminSerialConnection": {
    "name": "adminSerialConnection",
    "oid": "1.3.6.1.4.1.23.2.1.1.25",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "modem": 1,
          "direct": 2
        }
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The type of connection used by the serial line. adminSerialConnection may be written at any time; however, the change does not take effect until the LANtern network monitor is restarted. When adminSerialConnection is read, it returns the value currently in use, regardless of any previous writes. adminSerialConnection is stored in nonvolatile RAM."
  },
  "adminSerialFlowControl": {
    "name": "adminSerialFlowControl",
    "oid": "1.3.6.1.4.1.23.2.1.1.26",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "rts-cts": 2
        }
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The type of flow control used on the serial line. adminSerialFlowControl may be written at any time; however, the change does not take effect until the LANtern network monitor is restarted. When adminSerialFlowControl is read, it returns the value currently in use, regardless of any previous writes. adminSerialFlowControl is stored in nonvolatile RAM."
  },
  "adminModemControl": {
    "name": "adminModemControl",
    "oid": "1.3.6.1.4.1.23.2.1.1.27",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "#^ATS0=1 Q0 V1 X4 &S1 &D2^M^1AT &W0\r\n                     &Y0^M#^1ATDT#^2+++^2ATH0^M#",
        "format": "string"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A delimited string containing commands to initialize, dial, and hang up the modem. See Section 3.1.2 for more details on the format of this string. adminModemControl may be written at any time; however, the change does not take effect until the LANtern network monitor is restarted. When adminModemControl is read, it returns the value currently in use, regardless of any previous writes. adminModemControl is stored in nonvolatile RAM."
  },
  "adminModemConnect": {
    "name": "adminModemConnect",
    "oid": "1.3.6.1.4.1.23.2.1.1.28",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "#19200#CONNECT 19200#9600#CONNECT\r\n                     9600#4800#CONNECT 4800#2400#CONNECT\r\n                     2400#1200#CONNECT 1200#300#CONNECT#",
        "format": "string"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A delimited string containing baud rates and modem responses when it connects at particular baud rates. See Section 3.1.2 for more details on the format of this string. adminModemConnect may be written at any time; however, the change does not take effect until the LANtern network monitor is restarted. When adminModemConnect is read, it returns the value currently in use, regardless of any previous writes. adminModemConnect is stored in nonvolatile RAM."
  },
  "adminModemNoConnect": {
    "name": "adminModemNoConnect",
    "oid": "1.3.6.1.4.1.23.2.1.1.29",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "#NO DIALTONE#NO CARRIER#BUSY#VOICE#TIMEOUT#",
        "format": "string"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A delimited string containing baud rates and modem responses when it connects at particular baud rates. See Section 3 for more details on the format of this string. adminModemNoConnect may be written at any time; however, the change does not take effect until the LANtern network monitor is restarted. When adminModemNoConnect is read, it returns the value currently in use, regardless of any previous writes. adminModemNoConnect is stored in nonvolatile RAM."
  },
  "adminGatewayControl": {
    "name": "adminGatewayControl",
    "oid": "1.3.6.1.4.1.23.2.1.1.30",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "gateway-off": 1,
          "gateway-on": 2
        }
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A switch to enable or disable IP gatewaying between the serial line and the network. See Section 3 for more details on the format of this string. adminGatewayControl may be written at any time; however, the change does not take effect until the LANtern network monitor is restarted. When adminGatewayControl is read, it returns the value currently in use, regardless of any previous writes. adminGatewayControl is stored in nonvolatile RAM."
  },
  "adminPhoneTable": {
    "name": "adminPhoneTable",
    "oid": "1.3.6.1.4.1.23.2.1.1.31",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table that provides information about each possible phone connection that can be made over the serial channel. The table is accessed by adminPhoneIPAddr. A new entry can be created by writing to a nonexistent instance. Note that adminPhoneIPAddr is set implicitly from this write. adminPhoneIPAddr cannot be written directly. An entry may subsequently be deleted by writing (any value) to adminPhoneDelete. See Section 3 for more details about using the phone table. adminPhoneTable is stored in nonvolatile RAM."
  },
  "adminPhoneEntry": {
    "name": "adminPhoneEntry",
    "oid": "1.3.6.1.4.1.23.2.1.1.31.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LANtern-MIB",
        "object": "adminPhoneIPAddr",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Data for a particular phone connection that can be established over the serial channel."
  },
  "adminPhoneIPAddr": {
    "name": "adminPhoneIPAddr",
    "oid": "1.3.6.1.4.1.23.2.1.1.31.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address of the machine or IP network (SLIP gateway) at adminPhoneNumber."
  },
  "adminPhoneIPMask": {
    "name": "adminPhoneIPMask",
    "oid": "1.3.6.1.4.1.23.2.1.1.31.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "00000000",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP subnet mask to be used when communicating over this phone connection. When the value 0.0.0.0 is stored in this variable, the LANtern network monitor assumes no subnetting. Default: 0.0.0.0 (no subnetting)"
  },
  "adminPhoneLocalIPAddr": {
    "name": "adminPhoneLocalIPAddr",
    "oid": "1.3.6.1.4.1.23.2.1.1.31.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "00000000",
        "format": "hex"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP address the LANtern network monitor uses for its serial port while communicating over this phone connection."
  },
  "adminPhoneNumber": {
    "name": "adminPhoneNumber",
    "oid": "1.3.6.1.4.1.23.2.1.1.31.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The phone number string the modem uses to dial the machine with IP address adminPhoneIPAddr."
  },
  "adminPhoneConnectionProtocol": {
    "name": "adminPhoneConnectionProtocol",
    "oid": "1.3.6.1.4.1.23.2.1.1.31.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "An ASCII string specifying the logon sequence once the phone is connected."
  },
  "adminPhoneDelete": {
    "name": "adminPhoneDelete",
    "oid": "1.3.6.1.4.1.23.2.1.1.31.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "write-only",
    "status": "mandatory",
    "description": "A write (any value) causes the table entry to be deleted."
  },
  "eNetworkEvents": {
    "name": "eNetworkEvents",
    "oid": "1.3.6.1.4.1.23.2.1.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of network events (good packets, error packets, and collisions) observed since counter initialization. A network event is any activity on the network in which signal transitions cause carrier sense to be active for more than 0.5 microseconds. Carrier sense dropouts that occur during collisions, and sometimes at the beginning or end of packets, are filtered out to ensure that an individual packet is counted only once."
  },
  "eGoodPkts": {
    "name": "eGoodPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of legally formed packets received by the network controller since counter initialization."
  },
  "eBroadcastPkts": {
    "name": "eBroadcastPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good packets with the broadcast address as the destination address."
  },
  "eMulticastPkts": {
    "name": "eMulticastPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good packets with a multicast address as the destination address. The broadcast address is not included."
  },
  "eUnicastPkts": {
    "name": "eUnicastPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good packets with an individual host address as the destination address."
  },
  "ePkts64to127Octets": {
    "name": "ePkts64to127Octets",
    "oid": "1.3.6.1.4.1.23.2.1.2.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good packets between 64 and 127 octets in length, including the CRC."
  },
  "ePkts128to255Octets": {
    "name": "ePkts128to255Octets",
    "oid": "1.3.6.1.4.1.23.2.1.2.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good packets between 128 and 255 octets in length, including the CRC."
  },
  "ePkts256to511Octets": {
    "name": "ePkts256to511Octets",
    "oid": "1.3.6.1.4.1.23.2.1.2.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good packets between 256 and 511 octets in length, including CRC."
  },
  "ePkts512to1023Octets": {
    "name": "ePkts512to1023Octets",
    "oid": "1.3.6.1.4.1.23.2.1.2.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good packets between 512 and 1023 octets in length, including CRC."
  },
  "ePkts1024to1518Octets": {
    "name": "ePkts1024to1518Octets",
    "oid": "1.3.6.1.4.1.23.2.1.2.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good packets between 1024 and 1518 octets in length, including CRC."
  },
  "eErrors": {
    "name": "eErrors",
    "oid": "1.3.6.1.4.1.23.2.1.2.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of errors detected since counter initialization. It is the sum of a CRC/Alignment errors, Oversize errors, Undersize errors, and Jabbers, as defined below."
  },
  "eCRCAlignErrors": {
    "name": "eCRCAlignErrors",
    "oid": "1.3.6.1.4.1.23.2.1.2.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of legal size packets with a bad Frame Check Sequence (FCS) received by the network controller since counter initialization."
  },
  "eUndersizePkts": {
    "name": "eUndersizePkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of undersize packets received by the network controller since counter initialization. An undersize packet is one that is less than 64 octets long (including CRC) and is otherwise well formed."
  },
  "eOversizePkts": {
    "name": "eOversizePkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of oversize packets received by the network controller since counter initialization. An oversize packet is one that is longer than 1518 octets (including CRC) and is otherwise well-formed."
  },
  "eJabbers": {
    "name": "eJabbers",
    "oid": "1.3.6.1.4.1.23.2.1.2.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of packets longer than 1518 octets with a bad Frame Check Sequence (FCS) received by the network controller since counter initialization."
  },
  "eCollisions": {
    "name": "eCollisions",
    "oid": "1.3.6.1.4.1.23.2.1.2.16",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of local collisions observed since counter initialization. A local collision is a collision or other 'signal quality error' event that occurs on the segment to which the LANtern network monitor is attached."
  },
  "eFragments": {
    "name": "eFragments",
    "oid": "1.3.6.1.4.1.23.2.1.2.17",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of packets shorter than 64 octets with a bad Frame Check Sequence (FCS) received by the network controller since counter initialization."
  },
  "eOctets": {
    "name": "eOctets",
    "oid": "1.3.6.1.4.1.23.2.1.2.18",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of octets on the network in good packets. The source/destination address, the type/length field, and the CRC are included. This measurement gives a good indication of useful network throughput."
  },
  "eTimeUSecs": {
    "name": "eTimeUSecs",
    "oid": "1.3.6.1.4.1.23.2.1.2.19",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Time in microseconds. If read in the same PDU as other counters, this can be used to accurately compute statistics over time."
  },
  "eCarrierUSecs": {
    "name": "eCarrierUSecs",
    "oid": "1.3.6.1.4.1.23.2.1.2.20",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of microseconds during which carrier was detected on the cable. This can be used in conjunction with eTimeUSecs to accurately compute network utilization over time."
  },
  "eHistoryBuckets": {
    "name": "eHistoryBuckets",
    "oid": "1.3.6.1.4.1.23.2.1.2.21",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of discrete time intervals (or buckets) over which the logged data is saved. This number is a constant."
  },
  "eHistoryInterval": {
    "name": "eHistoryInterval",
    "oid": "1.3.6.1.4.1.23.2.1.2.22",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Seconds",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 3600
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 900,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The interval, in seconds, represented by each bucket. eHistoryInterval is stored in nonvolatile RAM."
  },
  "eHistoryTable": {
    "name": "eHistoryTable",
    "oid": "1.3.6.1.4.1.23.2.1.2.23",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A log of the network events that occurred during each of the preceding eHistoryBuckets intervals of length eHistoryInterval."
  },
  "eHistoryEntry": {
    "name": "eHistoryEntry",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LANtern-MIB",
        "object": "eHistoryIntervalStart",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each logged counter has the same semantics as the counter with a similar name defined above, except that each counter records only those events that occurred during the log interval. The remaining log entries are defined below."
  },
  "eHistoryNetworkEvents": {
    "name": "eHistoryNetworkEvents",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of network events (good packets, error packets, and collisions) observed during the interval. A network event is any activity on the network in which signal transitions cause carrier sense to be active for more than 0.5 microseconds. Carrier sense dropouts that occur during collisions, and sometimes at the beginning or end of packets, are filtered out to ensure that an individual packet is counted only once."
  },
  "eHistoryGoodPkts": {
    "name": "eHistoryGoodPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of legally formed packets received by the network controller during the interval."
  },
  "eHistoryBroadcastPkts": {
    "name": "eHistoryBroadcastPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets with the broadcast address as the destination address received during the interval."
  },
  "eHistoryMulticastPkts": {
    "name": "eHistoryMulticastPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets with a multicast address as the destination address received during the interval. The broadcast address is not included."
  },
  "eHistoryUnicastPkts": {
    "name": "eHistoryUnicastPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets with an individual host address as the destination address received during the interval."
  },
  "eHistoryPkts64to127Octets": {
    "name": "eHistoryPkts64to127Octets",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets between 64 and 127 octets in length, including the CRC received during the interval."
  },
  "eHistoryPkts128to255Octets": {
    "name": "eHistoryPkts128to255Octets",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets between 128 and 255 octets in length, including the CRC received during the interval."
  },
  "eHistoryPkts256to511Octets": {
    "name": "eHistoryPkts256to511Octets",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets between 256 and 511 octets in length, including CRC received during the interval."
  },
  "eHistoryPkts512to1023Octets": {
    "name": "eHistoryPkts512to1023Octets",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets between 512 and 1023 octets in length, including CRC received during the interval."
  },
  "eHistoryPkts1024to1518Octets": {
    "name": "eHistoryPkts1024to1518Octets",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets between 1024 and 1518 octets in length, including CRC received during the interval."
  },
  "eHistoryErrors": {
    "name": "eHistoryErrors",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of errors detected during the interval. It is the sum of a CRC/Alignment errors, Oversize errors, Undersize errors, and Jabbers, as defined below."
  },
  "eHistoryCRCAlignErrors": {
    "name": "eHistoryCRCAlignErrors",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of legal size packets with a bad Frame Check Sequence (FCS) received by the network controller during the interval."
  },
  "eHistoryUndersizePkts": {
    "name": "eHistoryUndersizePkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of undersize packets received by the network controller during the interval. An undersize packet is one that is less than 64 octets long (including CRC) and is otherwise well formed."
  },
  "eHistoryOversizePkts": {
    "name": "eHistoryOversizePkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of oversize packets received by the network controller during the interval. An oversize packet is one that is longer than 1518 octets (including CRC) and is otherwise well- formed."
  },
  "eHistoryJabbers": {
    "name": "eHistoryJabbers",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets longer than 1518 octets with a bad Frame Check Sequence (FCS) received by the network controller during the interval."
  },
  "eHistoryCollisions": {
    "name": "eHistoryCollisions",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of local collisions observed during the interval. A local collision is a collision or other 'signal quality error' event that occurs on the segment to which the LANtern network monitor is attached."
  },
  "eHistoryFragments": {
    "name": "eHistoryFragments",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets shorter than 64 octets with a bad Frame Check Sequence (FCS) received by the network controller during the interval."
  },
  "eHistoryOctets": {
    "name": "eHistoryOctets",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of octets on the network in good packets during the interval. The source/destination address, the type/length field, and the CRC are included. This measurement gives a good indication of useful network throughput."
  },
  "eHistoryUtilization": {
    "name": "eHistoryUtilization",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The average network utilization during this interval, in tenths of a percent."
  },
  "eHistoryIntervalStart": {
    "name": "eHistoryIntervalStart",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time of the start of the interval represented by the data in this bucket. This is the same as eHistoryIntervalEnd of the previous bucket."
  },
  "eHistoryIntervalEnd": {
    "name": "eHistoryIntervalEnd",
    "oid": "1.3.6.1.4.1.23.2.1.2.23.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time of the end of the interval represented by the data in this bucket. This is the same as eHistoryIntervalStart of the next bucket."
  },
  "eAlarmTable": {
    "name": "eAlarmTable",
    "oid": "1.3.6.1.4.1.23.2.1.2.24",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of critical gauges for which an alarm is generated, if one exceeds its predetermined thresholds. The table is accessed by gauge type. The user-settable parameters of eAlarmTable are stored in nonvolatile RAM."
  },
  "eAlarmEntry": {
    "name": "eAlarmEntry",
    "oid": "1.3.6.1.4.1.23.2.1.2.24.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LANtern-MIB",
        "object": "eAlarmType",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Parameters for each alarmed gauge."
  },
  "eAlarmType": {
    "name": "eAlarmType",
    "oid": "1.3.6.1.4.1.23.2.1.2.24.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "percentUtilization": 1,
          "percentErrors": 2,
          "percentBroadcasts": 3,
          "percentCollisions": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Defines the network parameter being monitored by this gauge. percentUtilization: Average percent utilization. percentErrors: Errors as a percentage of total packets (good packets + errors). percentBroadcasts: Broadcast packets as a percentage of total good packets. percentCollisions: Local collisions as a percentage of total network events."
  },
  "eAlarmValue": {
    "name": "eAlarmValue",
    "oid": "1.3.6.1.4.1.23.2.1.2.24.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value, in tenths of one percent, of the monitored network parameter computed over the previous sampling interval."
  },
  "eAlarmState": {
    "name": "eAlarmState",
    "oid": "1.3.6.1.4.1.23.2.1.2.24.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disarmed": 1,
          "armed": 2
        }
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If the gauge is enabled, its value is computed and an alarm (trap-PDU) is generated if either of its thresholds is exceeded. Otherwise, its value is not computed. eAlarmState is stored in nonvolatile RAM."
  },
  "eAlarmSampleTime": {
    "name": "eAlarmSampleTime",
    "oid": "1.3.6.1.4.1.23.2.1.2.24.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Seconds",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 3600
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The interval, in seconds, over which eAlarmValue is sampled. eAlarmSampleTime is stored in nonvolatile RAM."
  },
  "eAlarmMinTraffic": {
    "name": "eAlarmMinTraffic",
    "oid": "1.3.6.1.4.1.23.2.1.2.24.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 100,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The minimum value the denominator of the alarm equation must achieve during the sample interval before the LANtern network monitor updates eAlarmValue. This can be used to prevent spurious alarms caused by very low traffic. eAlarmMinTraffic is stored in nonvolatile RAM."
  },
  "eAlarmLowThreshold": {
    "name": "eAlarmLowThreshold",
    "oid": "1.3.6.1.4.1.23.2.1.2.24.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The low threshold for eAlarmValue, in tenths of one percent. eAlarmLowThreshold is stored in nonvolatile RAM."
  },
  "eAlarmHighThreshold": {
    "name": "eAlarmHighThreshold",
    "oid": "1.3.6.1.4.1.23.2.1.2.24.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 1000,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The high threshold for eAlarmValue, in tenths of one percent. eAlarmHighThreshold is stored in nonvolatile RAM."
  },
  "eAlarmLowDelta": {
    "name": "eAlarmLowDelta",
    "oid": "1.3.6.1.4.1.23.2.1.2.24.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 50,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The delta value used to offset the gauge value when the low threshold is passed, in tenths of one percent. eAlarmLowDelta is stored in nonvolatile RAM."
  },
  "eAlarmHighDelta": {
    "name": "eAlarmHighDelta",
    "oid": "1.3.6.1.4.1.23.2.1.2.24.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 50,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The delta value used to offset the gauge value when the high threshold is passed. eAlarmHighDelta is stored in nonvolatile RAM."
  },
  "eAlarmLowWaterMark": {
    "name": "eAlarmLowWaterMark",
    "oid": "1.3.6.1.4.1.23.2.1.2.24.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The lowest value seen for eAlarmValue, in tenths of one percent. This can be reset by writing to eAlarmLowWaterMark. The value written is ignored, and eAlarmLowWaterMark is set to the current value of eAlarmValue."
  },
  "eAlarmHighWaterMark": {
    "name": "eAlarmHighWaterMark",
    "oid": "1.3.6.1.4.1.23.2.1.2.24.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The highest value seen for eAlarmValue, in tenths of one percent. This can be reset by writing to eAlarmHighWaterMark. The value written is ignored, and eAlarmHighWaterMark is set to the current value of eAlarmValue."
  },
  "eAlarmLowSetTime": {
    "name": "eAlarmLowSetTime",
    "oid": "1.3.6.1.4.1.23.2.1.2.24.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time eAlarmLowWaterMark was last set. This value is NULL until the first time eAlarmLowWaterMark is set."
  },
  "eAlarmHighSetTime": {
    "name": "eAlarmHighSetTime",
    "oid": "1.3.6.1.4.1.23.2.1.2.24.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time eAlarmHighWaterMark was last set. This value is NULL until the first time eAlarmHighWaterMark is set."
  },
  "eHostNewHostAlarm": {
    "name": "eHostNewHostAlarm",
    "oid": "1.3.6.1.4.1.23.2.1.2.25",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 1,
          "enabled": 2
        }
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If enabled, the LANtern network monitor generates a newHost trap whenever a new host first transmits on the network segment. Note that eHostNewHostAlarm is NOT stored in nonvolatile RAM, and returns to its default setting whenever the LANtern network monitor is reset (or powered-on)."
  },
  "eHostTableEntries": {
    "name": "eHostTableEntries",
    "oid": "1.3.6.1.4.1.23.2.1.2.26",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of entries currently in eHostTable and eHostTTable."
  },
  "eHostPurge": {
    "name": "eHostPurge",
    "oid": "1.3.6.1.4.1.23.2.1.2.27",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Writing a date and time to eHostPurge causes the LANtern network monitor to purge all host table entries eHostTable where the date and time of both the most recent transmission and reception is earlier than that specified. All matrix entries (eMatrixSDTable and eMatrixDSTable) associated with the deleted host entries are also deleted. Hosts with the purge disable flag set are not deleted. Reading this variable returns the date and time of the last purge. The value returned is 0 (midnight 1 January 1900), if the table has never been purged. "
  },
  "eHostTable": {
    "name": "eHostTable",
    "oid": "1.3.6.1.4.1.23.2.1.2.28",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Statistical data for each host seen on the network, accessed by MAC address. Entries may be 'preloaded' into the table by writing to eHostControl for the appropriate instance, which also creates a corresponding entry in eHostTTable and sets the date and time of first transmit to the current date and time. An entry can be deleted from the table by writing (any value) to eHostDelete. This also deletes the corresponding entry from eHostTTable and all entries from eMatrixSDTable and eMatrixDSTable that reference that host."
  },
  "eHostEntry": {
    "name": "eHostEntry",
    "oid": "1.3.6.1.4.1.23.2.1.2.28.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LANtern-MIB",
        "object": "eHostAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Statistical data for each host seen on the network, accessed by eHostAddress."
  },
  "eHostAddress": {
    "name": "eHostAddress",
    "oid": "1.3.6.1.4.1.23.2.1.2.28.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MAC layer physical address of the host."
  },
  "eHostInPkts": {
    "name": "eHostInPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.28.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good packets transmitted to this address."
  },
  "eHostOutPkts": {
    "name": "eHostOutPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.28.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good packets transmitted by this host."
  },
  "eHostInOctets": {
    "name": "eHostInOctets",
    "oid": "1.3.6.1.4.1.23.2.1.2.28.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of octets in good packets transmitted to this address."
  },
  "eHostOutOctets": {
    "name": "eHostOutOctets",
    "oid": "1.3.6.1.4.1.23.2.1.2.28.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of octets in good packets transmitted by this host."
  },
  "eHostInErrors": {
    "name": "eHostInErrors",
    "oid": "1.3.6.1.4.1.23.2.1.2.28.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of error (CRC, undersize, or oversize) packets transmitted to this address."
  },
  "eHostOutErrors": {
    "name": "eHostOutErrors",
    "oid": "1.3.6.1.4.1.23.2.1.2.28.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of error (CRC, undersize, or oversize) packets transmitted by this host."
  },
  "eHostProtocols": {
    "name": "eHostProtocols",
    "oid": "1.3.6.1.4.1.23.2.1.2.28.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A bit array where each bit indicates a protocol that was seen in a packet transmitted by that host. The protocols currently monitored are: Bit Protocol 2^0 Unrecognized protocol (none of the following) 2^1 DOD (IP, ARP, RARP) 2^2 ISO 2^3 DEC 2^4 NetWare 2^5 AppleTalk (AppleTalk, AppleTalk ARP) 2^6 XNS 2^7 SNA 2^8 VINES"
  },
  "eHostFirstTransmit": {
    "name": "eHostFirstTransmit",
    "oid": "1.3.6.1.4.1.23.2.1.2.28.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time of the first good transmission by this host. If the host has not transmitted, this value is 0"
  },
  "eHostLastTransmit": {
    "name": "eHostLastTransmit",
    "oid": "1.3.6.1.4.1.23.2.1.2.28.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time of the most recent transmission by this host. If the host has not transmitted, this value is 0"
  },
  "eHostLastReceive": {
    "name": "eHostLastReceive",
    "oid": "1.3.6.1.4.1.23.2.1.2.28.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The data and time of the most recent transmission to this address."
  },
  "eHostControl": {
    "name": "eHostControl",
    "oid": "1.3.6.1.4.1.23.2.1.2.28.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A collection of control bits and bit fields. These fields are grouped into one object to reduce network traffic (especially over the serial line) during startup. Writing to eHostControl may be used to pre-load entries into the table. This also has the side effect of inhibiting newHost traps for that host. BITS MEANING 2^0-2^2 3-bit host timeout code 0 - host timeout disabled 1 - 1 minute 2 - 2 minutes 3 - 4 minutes 4 - 8 minutes 5 - 16 minutes 6 - 32 minutes 7 - 64 minutes 2^3 onSegmentBit: if set, host is on LANtern's segment. 2^7 inhibitPurgeBit: if set, inhibit purge for this host."
  },
  "eHostDelete": {
    "name": "eHostDelete",
    "oid": "1.3.6.1.4.1.23.2.1.2.28.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "write-only",
    "status": "mandatory",
    "description": "An entry may be deleted from eHostTable by writing (any value) to eHostDelete. Note that this overrides the purge disable flag in eHostControl. Any entries in the matrix tables (eMatrixSDTable and eMatrixDSTable) that reference the host being deleted also are deleted."
  },
  "eHostTTable": {
    "name": "eHostTTable",
    "oid": "1.3.6.1.4.1.23.2.1.2.29",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Statistical data for each host that has transmitted on the network; accessed by eHostTFirstTransmit (and an ordinal number to resolve ambiguities)."
  },
  "eHostTEntry": {
    "name": "eHostTEntry",
    "oid": "1.3.6.1.4.1.23.2.1.2.29.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The contents are identical to those described for eHostTable above except that the access for eHostTControl is read-only for all communities. The table is accessed by eHostTFirstTransmit (and an ordinal number to resolve ambiguities)"
  },
  "eHostTAddress": {
    "name": "eHostTAddress",
    "oid": "1.3.6.1.4.1.23.2.1.2.29.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MAC layer physical address of the host."
  },
  "eHostTInPkts": {
    "name": "eHostTInPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.29.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good packets transmitted to this address."
  },
  "eHostTOutPkts": {
    "name": "eHostTOutPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.29.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good packets transmitted by this host."
  },
  "eHostTInOctets": {
    "name": "eHostTInOctets",
    "oid": "1.3.6.1.4.1.23.2.1.2.29.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of octets in good packets transmitted to this address."
  },
  "eHostTOutOctets": {
    "name": "eHostTOutOctets",
    "oid": "1.3.6.1.4.1.23.2.1.2.29.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of octets in good packets transmitted by this host."
  },
  "eHostTInErrors": {
    "name": "eHostTInErrors",
    "oid": "1.3.6.1.4.1.23.2.1.2.29.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of error (CRC, undersize, or oversize) packets transmitted to this address."
  },
  "eHostTOutErrors": {
    "name": "eHostTOutErrors",
    "oid": "1.3.6.1.4.1.23.2.1.2.29.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of error (CRC, undersize, or oversize) packets transmitted by this host."
  },
  "eHostTProtocols": {
    "name": "eHostTProtocols",
    "oid": "1.3.6.1.4.1.23.2.1.2.29.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A bit array where each bit indicates a protocol that was seen in a packet transmitted by that host. The protocols currently monitored are: Bit Protocol 2^0 Unrecognized protocol (none of the following) 2^1 DOD (IP, ARP, RARP) 2^2 ISO 2^3 DEC 2^4 NetWare 2^5 AppleTalk (AppleTalk, AppleTalk ARP) 2^6 XNS 2^7 SNA 2^8 VINES"
  },
  "eHostTFirstTransmit": {
    "name": "eHostTFirstTransmit",
    "oid": "1.3.6.1.4.1.23.2.1.2.29.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time of the first good transmission by this host. If the host has not transmitted, this value is 0"
  },
  "eHostTLastTransmit": {
    "name": "eHostTLastTransmit",
    "oid": "1.3.6.1.4.1.23.2.1.2.29.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time of the most recent transmission by this host. If the host has not transmitted, this value is 0"
  },
  "eHostTLastReceive": {
    "name": "eHostTLastReceive",
    "oid": "1.3.6.1.4.1.23.2.1.2.29.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The data and time of the most recent transmission to this address."
  },
  "eHostTControl": {
    "name": "eHostTControl",
    "oid": "1.3.6.1.4.1.23.2.1.2.29.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A collection of control bits and bit fields. These fields are grouped into one object to reduce network traffic (especially over the serial line) during startup. Writing to eHostControl may be used to pre-load entries into the table. This also has the side effect of inhibiting newHost traps for that host. BITS MEANING 2^0-2^2 3-bit host timeout code 0 - host timeout disabled 1 - 1 minute 2 - 2 minutes 3 - 4 minutes 4 - 8 minutes 5 - 16 minutes 6 - 32 minutes 7 - 64 minutes 2^3 onSegmentBit: if set, host is on LANtern's segment. 2^7 inhibitPurgeBit: if set, inhibit purge for this host."
  },
  "eMatrixTableEntries": {
    "name": "eMatrixTableEntries",
    "oid": "1.3.6.1.4.1.23.2.1.2.30",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of entries currently in eMatrixSDTable and eMatrixDSTable."
  },
  "eMatrixPurge": {
    "name": "eMatrixPurge",
    "oid": "1.3.6.1.4.1.23.2.1.2.31",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Writing a date and time to eMatrixPurge causes the LANtern network monitor to purge all matrix (eMatrixSDTable and eMatrixDSTable) table entries where the date and time of most recent transmission is earlier than the specified time. The whole table can be purged by writing a time later than the current time. Reading this variable returns the time of most recent manual or automatic purge. The value returned is 0 (midnight 1 January 1900), if the table has never been purged."
  },
  "eMatrixSDTable": {
    "name": "eMatrixSDTable",
    "oid": "1.3.6.1.4.1.23.2.1.2.32",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of network traffic sent from one particular source host to one particular destination host. A particular object instance is accessed by appending the source host address followed by the destination host address. This allows the table to be traversed with the source address as the major key and the destination address as the minor key. An entry may be deleted from the table by writing to eMatrixSDDelete."
  },
  "eMatrixSDEntry": {
    "name": "eMatrixSDEntry",
    "oid": "1.3.6.1.4.1.23.2.1.2.32.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LANtern-MIB",
        "object": "eMatrixSDSourceAddress",
        "implied": 0
      },
      {
        "module": "LANtern-MIB",
        "object": "eMatrixSDDestAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The statistics for traffic in a particular direction between two hosts on the network."
  },
  "eMatrixSDSourceAddress": {
    "name": "eMatrixSDSourceAddress",
    "oid": "1.3.6.1.4.1.23.2.1.2.32.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MAC layer physical address of the source host."
  },
  "eMatrixSDDestAddress": {
    "name": "eMatrixSDDestAddress",
    "oid": "1.3.6.1.4.1.23.2.1.2.32.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MAC layer physical address of the destination host."
  },
  "eMatrixSDPkts": {
    "name": "eMatrixSDPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.32.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets sent from eMatrixSDSourceAddress to eMatrixSDDestAddress."
  },
  "eMatrixSDOctets": {
    "name": "eMatrixSDOctets",
    "oid": "1.3.6.1.4.1.23.2.1.2.32.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of octets in good packets sent from eMatrixSDSourceAddress to eMatrixSDDestAddress."
  },
  "eMatrixSDErrors": {
    "name": "eMatrixSDErrors",
    "oid": "1.3.6.1.4.1.23.2.1.2.32.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of error (CRC/align/undersize/oversize) packets sent from eMatrixSDSourceAddress to eMatrixSDDestAddress."
  },
  "eMatrixSDProtocols": {
    "name": "eMatrixSDProtocols",
    "oid": "1.3.6.1.4.1.23.2.1.2.32.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A bit array where each bit indicates a protocol that was seen in a packet sent from eMatrixSDSourceAddress to eMatrixSDDestAddress. The protocols currently monitored are: Bit Protocol 2^0 Unrecognized protocol (none of the following) 2^1 DOD (IP, ARP, RARP) 2^2 ISO 2^3 DEC 2^4 NetWare 2^5 AppleTalk (AppleTalk, AppleTalk ARP) 2^6 XNS 2^7 SNA 2^8 VINES"
  },
  "eMatrixSDFirstTransmit": {
    "name": "eMatrixSDFirstTransmit",
    "oid": "1.3.6.1.4.1.23.2.1.2.32.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time the first transmission from eMatrixSDSourceAddress to eMatrixSDDestAddress."
  },
  "eMatrixSDLastTransmit": {
    "name": "eMatrixSDLastTransmit",
    "oid": "1.3.6.1.4.1.23.2.1.2.32.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time of the most recent transmission from eMatrixSDSourceAddress to eMatrixSDDestAddress."
  },
  "eMatrixSDDelete": {
    "name": "eMatrixSDDelete",
    "oid": "1.3.6.1.4.1.23.2.1.2.32.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "write-only",
    "status": "mandatory",
    "description": "A write (any value) causes the table entry to be deleted."
  },
  "eMatrixDSTable": {
    "name": "eMatrixDSTable",
    "oid": "1.3.6.1.4.1.23.2.1.2.33",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of network traffic sent from one particular source host to one particular destination host. A particular object instance is accessed by appending the destination address followed by the source address. This allows the table to be traversed with the destination address as the major key and the source address as the minor key. An entry may be deleted from the table by writing to eMatrixDSDelete."
  },
  "eMatrixDSEntry": {
    "name": "eMatrixDSEntry",
    "oid": "1.3.6.1.4.1.23.2.1.2.33.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LANtern-MIB",
        "object": "eMatrixDSDestAddress",
        "implied": 0
      },
      {
        "module": "LANtern-MIB",
        "object": "eMatrixDSSourceAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The contents of the table are identical to those described above for eMatrixSDTable."
  },
  "eMatrixDSSourceAddress": {
    "name": "eMatrixDSSourceAddress",
    "oid": "1.3.6.1.4.1.23.2.1.2.33.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MAC layer physical address of the source host."
  },
  "eMatrixDSDestAddress": {
    "name": "eMatrixDSDestAddress",
    "oid": "1.3.6.1.4.1.23.2.1.2.33.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MAC layer physical address of the destination host."
  },
  "eMatrixDSPkts": {
    "name": "eMatrixDSPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.33.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets sent from eMatrixDSSourceAddress to eMatrixDSDestAddress."
  },
  "eMatrixDSOctets": {
    "name": "eMatrixDSOctets",
    "oid": "1.3.6.1.4.1.23.2.1.2.33.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of octets in good packets sent from eMatrixDSSourceAddress to eMatrixDSDestAddress."
  },
  "eMatrixDSErrors": {
    "name": "eMatrixDSErrors",
    "oid": "1.3.6.1.4.1.23.2.1.2.33.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of error (CRC/align/undersize/oversize) packets sent from eMatrixDSSourceAddress to eMatrixDSDestAddress."
  },
  "eMatrixDSProtocols": {
    "name": "eMatrixDSProtocols",
    "oid": "1.3.6.1.4.1.23.2.1.2.33.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A bit array where each bit indicates a protocol that was seen in a packet sent from eMatrixDSSourceAddress to eMatrixDSDestAng defining the time zone of thee protocols currently monitored are: Bit Protocol 2^0 Unrecognized protocol (none of the following) 2^1 DOD (IP, ARP, RARP) 2^2 ISO 2^3 DEC 2^4 NetWare 2^5 AppleTalk (AppleTalk, AppleTalk ARP) 2^6 XNS 2^7 SNA 2^8 VINES"
  },
  "eMatrixDSFirstTransmit": {
    "name": "eMatrixDSFirstTransmit",
    "oid": "1.3.6.1.4.1.23.2.1.2.33.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time the first transmission from eMatrixDSSourceAddress to eMatrixDSDestAddress."
  },
  "eMatrixDSLastTransmit": {
    "name": "eMatrixDSLastTransmit",
    "oid": "1.3.6.1.4.1.23.2.1.2.33.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time of the most recent transmission from eMatrixDSSourceAddress to eMatrixDSDestAddress."
  },
  "eMatrixDSDelete": {
    "name": "eMatrixDSDelete",
    "oid": "1.3.6.1.4.1.23.2.1.2.33.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "write-only",
    "status": "mandatory",
    "description": "A write (any value) causes the table entry to be deleted."
  },
  "eMediaCheckInterval": {
    "name": "eMediaCheckInterval",
    "oid": "1.3.6.1.4.1.23.2.1.2.34",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Seconds",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 3600
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The LANtern network monitor performs a periodic cable check every eMediaCheckInterval seconds. If eMediaCheckInterval is zero, periodic cable checks are not performed. eMediaCheckInterval is stored in nonvolatile RAM."
  },
  "eMediaStatus": {
    "name": "eMediaStatus",
    "oid": "1.3.6.1.4.1.23.2.1.2.35",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "cableOk": 1,
          "transceiverCableBad": 2,
          "ethernetCableBad": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Reading eMediaStatus returns the most recent cable check, automatic or manual. Writing any value causby the LANtern network . This object is also passed in the cableFailure trap-PDU."
  },
  "eHostLimit": {
    "name": "eHostLimit",
    "oid": "1.3.6.1.4.1.23.2.1.2.37",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The maximum number of unicast addresses which the LANtern host table holds. A value of 0 indicates that there is no limit other than memory constraints. The value 0 will be returned by LANtern and the value 32 will be returned by LANtern LTD."
  },
  "eOnSegmentPkts": {
    "name": "eOnSegmentPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.38",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of the number of packets which were transmitted between hosts on the same segment as the LANtern."
  },
  "eOnSegmentOctets": {
    "name": "eOnSegmentOctets",
    "oid": "1.3.6.1.4.1.23.2.1.2.39",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of the number of octets in packets which were transmitted between hosts on the same segment as the LANtern."
  },
  "eDepartingPkts": {
    "name": "eDepartingPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.40",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of the number of packets which were transmitted by hosts on the same segment as the LANtern to hosts on other segments."
  },
  "eDepartingOctets": {
    "name": "eDepartingOctets",
    "oid": "1.3.6.1.4.1.23.2.1.2.41",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of the number of octets in packets which were transmitted by hosts on the same segment as the LANtern to hosts on other segments."
  },
  "eArrivingPkts": {
    "name": "eArrivingPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.42",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of the number of packets which were transmitted by hosts on other segments to hosts on the same segment as the LANtern."
  },
  "eArrivingOctets": {
    "name": "eArrivingOctets",
    "oid": "1.3.6.1.4.1.23.2.1.2.43",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of the number of octets in packets which were transmitted by hosts on other segments to hosts on the same segment as the LANtern."
  },
  "eThruPkts": {
    "name": "eThruPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.44",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of the number of packets seen on the LANtern's segment which were transmitted between hosts which are not on the LANtern's segment."
  },
  "eThruOctets": {
    "name": "eThruOctets",
    "oid": "1.3.6.1.4.1.23.2.1.2.45",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of the number of octets in packets seen on the LANtern's segment which were transmitted between hosts which are not on the LANtern's segment."
  },
  "eHostDeletes": {
    "name": "eHostDeletes",
    "oid": "1.3.6.1.4.1.23.2.1.2.46",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A count of the number of hosts which have been deleted since the LANtern was powered on."
  },
  "eHostOTable": {
    "name": "eHostOTable",
    "oid": "1.3.6.1.4.1.23.2.1.2.47",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Statistical data for each host that has transmitted on the network; accessed by eHostOOrderIndex. This table exists to permit rapid downloading of the host table."
  },
  "eHostOEntry": {
    "name": "eHostOEntry",
    "oid": "1.3.6.1.4.1.23.2.1.2.47.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LANtern-MIB",
        "object": "eHostOOrderIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The contents are identical to those described for eHostTable above except that the access for eHostOControl is read-only for all communities and eHostOOrderIndex appears only in this table."
  },
  "eHostOAddress": {
    "name": "eHostOAddress",
    "oid": "1.3.6.1.4.1.23.2.1.2.47.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MAC layer physical address of the host."
  },
  "eHostOInPkts": {
    "name": "eHostOInPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.47.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good packets transmitted to this address."
  },
  "eHostOOutPkts": {
    "name": "eHostOOutPkts",
    "oid": "1.3.6.1.4.1.23.2.1.2.47.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of good packets transmitted by this host."
  },
  "eHostOInOctets": {
    "name": "eHostOInOctets",
    "oid": "1.3.6.1.4.1.23.2.1.2.47.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of octets in good packets transmitted to this address."
  },
  "eHostOOutOctets": {
    "name": "eHostOOutOctets",
    "oid": "1.3.6.1.4.1.23.2.1.2.47.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of octets in good packets transmitted by this host."
  },
  "eHostOInErrors": {
    "name": "eHostOInErrors",
    "oid": "1.3.6.1.4.1.23.2.1.2.47.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of error (CRC, undersize, or oversize) packets transmitted to this address."
  },
  "eHostOOutErrors": {
    "name": "eHostOOutErrors",
    "oid": "1.3.6.1.4.1.23.2.1.2.47.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of error (CRC, undersize, or oversize) packets transmitted by this host."
  },
  "eHostOProtocols": {
    "name": "eHostOProtocols",
    "oid": "1.3.6.1.4.1.23.2.1.2.47.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A bit array where each bit indicates a protocol that was seen in a packet transmitted by that host. The protocols currently monitored are: Bit Protocol 2^0 Unrecognized protocol (none of the following) 2^1 DOD (IP, ARP, RARP) 2^2 ISO 2^3 DEC 2^4 NetWare 2^5 AppleTalk (AppleTalk, AppleTalk ARP) 2^6 XNS 2^7 SNA 2^8 VINES"
  },
  "eHostOFirstTransmit": {
    "name": "eHostOFirstTransmit",
    "oid": "1.3.6.1.4.1.23.2.1.2.47.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time of the first good transmission by this host. If the host has not transmitted, this value is 0"
  },
  "eHostOLastTransmit": {
    "name": "eHostOLastTransmit",
    "oid": "1.3.6.1.4.1.23.2.1.2.47.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time of the most recent transmission by this host. If the host has not transmitted, this value is 0"
  },
  "eHostOLastReceive": {
    "name": "eHostOLastReceive",
    "oid": "1.3.6.1.4.1.23.2.1.2.47.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The data and time of the most recent transmission to this address."
  },
  "eHostOControl": {
    "name": "eHostOControl",
    "oid": "1.3.6.1.4.1.23.2.1.2.47.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A collection of control bits and bit fields. These fields are grouped into one object to reduce network traffic (especially over the serial line) during startup. Writing to eHostControl may be used to pre-load entries into the table. This also has the side effect of inhibiting newHost traps for that host. BITS MEANING 2^0-2^2 3-bit host timeout code 0 - host timeout disabled 1 - 1 minute 2 - 2 minutes 3 - 4 minutes 4 - 8 minutes 5 - 16 minutes 6 - 32 minutes 7 - 64 minutes 2^3 onSegmentBit: if set, host is on LANtern's segment. 2^7 inhibitPurgeBit: if set, inhibit purge for this host."
  },
  "eHostOOrderIndex": {
    "name": "eHostOOrderIndex",
    "oid": "1.3.6.1.4.1.23.2.1.2.47.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A (dense) ordinal that uniquely defines an entry in the eHostOTable table."
  },
  "ipPingTarget": {
    "name": "ipPingTarget",
    "oid": "1.3.6.1.4.1.23.2.1.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "write-only",
    "status": "mandatory",
    "description": "Writing an IP address to ipPingTarget causes the LANtern network monitor to ping that host (using ICMP Echo). When the LANtern network monitor receives the echo response, a pingNotification trap is issued to the host that requested the ping. The data passed with the trap are ipPingTarget and ipPingDuration. Note: There is a separate instance of this variable (indexed by the IP address of the host to receive the notification) for each ping outstanding. This is best illustrated by an example; suppose one wants to request the LANtern to ping host 130.57.1.2 and send the ping notification trap to host 130.57.8.9. Accordingly, a set request as follows has the desired effect: ipPingTarget.130.57.8.9 = 130.57.1.2"
  },
  "ipPingDuration": {
    "name": "ipPingDuration",
    "oid": "1.3.6.1.4.1.23.2.1.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The elapsed time between the LANtern network monitor's issuance of the Ping and its receipt of the response. This data is passed with the pingNotification trap. Note: There is a separate instance of this variable (indexed by the IP address of the host to receive the notification) for each ping outstanding. This is best illustrated by an example; suppose one wants to request the LANtern to ping host 130.57.1.2 and send the ping notification trap to host 130.57.8.9. Accordingly, a set request as follows has the desired effect: ipPingDuration.130.57.8.9 = 130.57.1.2"
  },
  "ipDupeCheck": {
    "name": "ipDupeCheck",
    "oid": "1.3.6.1.4.1.23.2.1.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 1,
          "enabled": 2
        }
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enables or disables duplicate IP address checking. ipDupeCheck may be written at any time; however, the change does not take effect until the LANtern network monitor is restarted. When ipDupeCheck is read, it returns the current state of duplicate IP address checking, regardless of any previous writes. ipDupeCheck is stored in nonvolatile RAM."
  },
  "ipDupeTable": {
    "name": "ipDupeTable",
    "oid": "1.3.6.1.4.1.23.2.1.4.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Table of active duplicate IP address alarms, accessed by IP address."
  },
  "ipDupeEntry": {
    "name": "ipDupeEntry",
    "oid": "1.3.6.1.4.1.23.2.1.4.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LANtern-MIB",
        "object": "ipDupeIPAddr",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Data pertinent to the duplicate IP address alarm."
  },
  "ipDupeIPAddr": {
    "name": "ipDupeIPAddr",
    "oid": "1.3.6.1.4.1.23.2.1.4.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address that was observed being used by more than one host."
  },
  "ipDupeGoodMACAddr": {
    "name": "ipDupeGoodMACAddr",
    "oid": "1.3.6.1.4.1.23.2.1.4.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The physical network address of the host that is authorized to use the IP address. Initially, this is the host that was first seen to use the IP address. Once an alarm has been generated, the administrator may override this assumption by writing the real authorized physical address to ipDupeGoodMACAddr."
  },
  "ipDupeBadMACAddr": {
    "name": "ipDupeBadMACAddr",
    "oid": "1.3.6.1.4.1.23.2.1.4.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The physical network address of the host that is erroneously using the IP address."
  },
  "ipDupeTime": {
    "name": "ipDupeTime",
    "oid": "1.3.6.1.4.1.23.2.1.4.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Time",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The date and time the duplicate usage of the IP address was detected."
  },
  "ipDupeClear": {
    "name": "ipDupeClear",
    "oid": "1.3.6.1.4.1.23.2.1.4.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "sanctionGood": 1,
          "sanctionBad": 2,
          "sanctionNeither": 3
        }
      }
    },
    "maxaccess": "write-only",
    "status": "mandatory",
    "description": "When the condition causing the alarm has been fixed, the administrator should clear the alarm by writing to alarmDupIpClear. Either of the two MAC addresses can be sanctioned or, alternatively, all knowledge of that IP address can be purged by specifying sanctionNeither."
  },
  "ipMACToIPTable": {
    "name": "ipMACToIPTable",
    "oid": "1.3.6.1.4.1.23.2.1.4.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table containing mappings from physical media addresses to IP addresses; accessed by ipMACToIPMACAddr. ipMACToIPIPAddr is also required as a secondary index to resolve ambiguities since any given physical address may have more than one IP address. Note that this table is a by-product of duplicate IP address checking and, as such, is subject to the following limitations: the table has no entries if ipDupeCheck is disabled, data is available only for hosts on the (LANtern network monitor's) local subnet, and data is available only for hosts that have successfully transmitted an IP packet while the LANtern network monitor has been monitoring the segment. An entry may be deleted by writing (any value) to ipMACToIPDelete."
  },
  "ipMACToIPEntry": {
    "name": "ipMACToIPEntry",
    "oid": "1.3.6.1.4.1.23.2.1.4.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "LANtern-MIB",
        "object": "ipMACToIPMACAddr",
        "implied": 0
      },
      {
        "module": "LANtern-MIB",
        "object": "ipMACToIPIPAddr",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The mapping from a physical media address to an IP address."
  },
  "ipMACToIPMACAddr": {
    "name": "ipMACToIPMACAddr",
    "oid": "1.3.6.1.4.1.23.2.1.4.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The physical media address."
  },
  "ipMACToIPIPAddr": {
    "name": "ipMACToIPIPAddr",
    "oid": "1.3.6.1.4.1.23.2.1.4.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The IP address."
  },
  "ipMACToIPDelete": {
    "name": "ipMACToIPDelete",
    "oid": "1.3.6.1.4.1.23.2.1.4.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "write-only",
    "status": "mandatory",
    "description": " An entry may be deleted from ipMACToIPTable by writing (any value) to ipMACToIPDelete. This also deletes the entry in the ipDupeTable for the same IP address if such an entry exists."
  },
  "ieee8022TestTarget": {
    "name": "ieee8022TestTarget",
    "oid": "1.3.6.1.4.1.23.2.1.5.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "write-only",
    "status": "mandatory",
    "description": "Writing an ethernet address to ieee8022TestTarget causes the LANtern to send an 802.2 Test packet to that address."
  },
  "ipxDiagnosticTarget": {
    "name": "ipxDiagnosticTarget",
    "oid": "1.3.6.1.4.1.23.2.1.6.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "write-only",
    "status": "mandatory",
    "description": "Writing an ethernet address to ipxDiagnosticTarget causes the LANtern to send two diagnostic packets, one in ethernet frame format, and the other in 802.3 frame format."
  },
  "protoUnknownPkts": {
    "name": "protoUnknownPkts",
    "oid": "1.3.6.1.4.1.23.2.1.10.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of packets observed with an unknown protocol."
  },
  "protoUnknownOctets": {
    "name": "protoUnknownOctets",
    "oid": "1.3.6.1.4.1.23.2.1.10.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of octets in packets observed with an unknown protocol."
  },
  "protoTCPIPPkts": {
    "name": "protoTCPIPPkts",
    "oid": "1.3.6.1.4.1.23.2.1.10.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of packets observed with a protocol from the TCP/IP suite (IP, ARP, and RARP)."
  },
  "protoTCPIPOctets": {
    "name": "protoTCPIPOctets",
    "oid": "1.3.6.1.4.1.23.2.1.10.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of octets in packets observed with a protocol from the TCP/IP suite (IP, ARP, and RARP)."
  },
  "protoISOPkts": {
    "name": "protoISOPkts",
    "oid": "1.3.6.1.4.1.23.2.1.10.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of packets observed with a protocol from the ISO suite."
  },
  "protoISOOctets": {
    "name": "protoISOOctets",
    "oid": "1.3.6.1.4.1.23.2.1.10.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of octets in packets observed with a protocol from the ISO suite."
  },
  "protoDECPkts": {
    "name": "protoDECPkts",
    "oid": "1.3.6.1.4.1.23.2.1.10.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of packets observed with a protocol from the Digital Equipment Corporation protocol suite."
  },
  "protoDECOctets": {
    "name": "protoDECOctets",
    "oid": "1.3.6.1.4.1.23.2.1.10.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of octets in packets observed with a protocol from the Digital Equipment Corporation protocol suite."
  },
  "protoNetWarePkts": {
    "name": "protoNetWarePkts",
    "oid": "1.3.6.1.4.1.23.2.1.10.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of packets observed with a protocol from the NetWare suite."
  },
  "protoNetWareOctets": {
    "name": "protoNetWareOctets",
    "oid": "1.3.6.1.4.1.23.2.1.10.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of octets in packets observed with a protocol from the NetWare suite."
  },
  "protoAppleTalkPkts": {
    "name": "protoAppleTalkPkts",
    "oid": "1.3.6.1.4.1.23.2.1.10.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of packets observed with a protocol from the AppleTalk suite."
  },
  "protoAppleTalkOctets": {
    "name": "protoAppleTalkOctets",
    "oid": "1.3.6.1.4.1.23.2.1.10.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of octets in packets observed with a protocol from the AppleTalk suite."
  },
  "protoXNSPkts": {
    "name": "protoXNSPkts",
    "oid": "1.3.6.1.4.1.23.2.1.10.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of packets observed with a protocol from the XNS suite."
  },
  "protoXNSOctets": {
    "name": "protoXNSOctets",
    "oid": "1.3.6.1.4.1.23.2.1.10.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of octets in packets observed with a protocol from the XNS suite."
  },
  "protoSNAPkts": {
    "name": "protoSNAPkts",
    "oid": "1.3.6.1.4.1.23.2.1.10.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of packets observed with a protocol from the SNA suite."
  },
  "protoSNAOctets": {
    "name": "protoSNAOctets",
    "oid": "1.3.6.1.4.1.23.2.1.10.16",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of octets in packets observed with a protocol from the SNA suite."
  },
  "protoVINESPkts": {
    "name": "protoVINESPkts",
    "oid": "1.3.6.1.4.1.23.2.1.10.17",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of packets observed with a protocol from the Banyan VINES suite."
  },
  "protoVINESOctets": {
    "name": "protoVINESOctets",
    "oid": "1.3.6.1.4.1.23.2.1.10.18",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of octets in packets observed with a protocol from the Banyan VINES suite."
  },
  "cableFailure": {
    "name": "cableFailure",
    "oid": "1.3.6.1.4.1.23.1.1.10.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "LANtern-MIB",
        "object": "adminTrapHandle"
      },
      {
        "module": "LANtern-MIB",
        "object": "adminDateAndTime"
      },
      {
        "module": "LANtern-MIB",
        "object": "eMediaStatus"
      }
    ],
    "description": "A cableFailure(1) trap is generated whenever the LANtern network monitor detects a fault with the network cable."
  },
  "pingNotification": {
    "name": "pingNotification",
    "oid": "1.3.6.1.4.1.23.1.1.10.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "LANtern-MIB",
        "object": "adminTrapHandle"
      },
      {
        "module": "LANtern-MIB",
        "object": "adminDateAndTime"
      },
      {
        "module": "LANtern-MIB",
        "object": "ipPingTarget"
      },
      {
        "module": "LANtern-MIB",
        "object": "ipPingDuration"
      }
    ],
    "description": "A pingNotification(2) trap is generated whenever the LANtern network monitor receives the echo response to a proxy ping."
  },
  "duplicateIPAddr": {
    "name": "duplicateIPAddr",
    "oid": "1.3.6.1.4.1.23.1.1.10.3",
    "class": "notificationtype",
    "objects": [
      {
        "module": "LANtern-MIB",
        "object": "adminTrapHandle"
      },
      {
        "module": "LANtern-MIB",
        "object": "adminDateAndTime"
      },
      {
        "module": "LANtern-MIB",
        "object": "ipDupeIPAddr"
      },
      {
        "module": "LANtern-MIB",
        "object": "ipDupeGoodMACAddr"
      },
      {
        "module": "LANtern-MIB",
        "object": "ipDupeBadMACAddr"
      }
    ],
    "description": "A duplicateIPAddr(3) trap is generated whenever the LANtern network monitor first detects more than one host using the same IP address."
  },
  "utilizationAlarm": {
    "name": "utilizationAlarm",
    "oid": "1.3.6.1.4.1.23.1.1.10.4",
    "class": "notificationtype",
    "objects": [
      {
        "module": "LANtern-MIB",
        "object": "adminTrapHandle"
      },
      {
        "module": "LANtern-MIB",
        "object": "adminDateAndTime"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmType"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmValue"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmLowThreshold"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmHighThreshold"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmSampleTime"
      }
    ],
    "description": "A utilizationAlarm(4) trap is generated whenever the percent utilization parameter enters or leaves an alarm condition as defined by the thresholds set in the eAlarmTable."
  },
  "errorsAlarm": {
    "name": "errorsAlarm",
    "oid": "1.3.6.1.4.1.23.1.1.10.5",
    "class": "notificationtype",
    "objects": [
      {
        "module": "LANtern-MIB",
        "object": "adminTrapHandle"
      },
      {
        "module": "LANtern-MIB",
        "object": "adminDateAndTime"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmType"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmValue"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmLowThreshold"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmHighThreshold"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmSampleTime"
      }
    ],
    "description": "An errorsAlarm(5) trap is generated whenever the percent errors parameter enters or leaves an alarm condition as defined by the thresholds set in the eAlarmTable."
  },
  "broadcastsAlarm": {
    "name": "broadcastsAlarm",
    "oid": "1.3.6.1.4.1.23.1.1.10.6",
    "class": "notificationtype",
    "objects": [
      {
        "module": "LANtern-MIB",
        "object": "adminTrapHandle"
      },
      {
        "module": "LANtern-MIB",
        "object": "adminDateAndTime"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmType"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmValue"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmLowThreshold"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmHighThreshold"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmSampleTime"
      }
    ],
    "description": "A broadcastsAlarm(6) trap is generated whenever the percent broadcasts parameter enters or leaves an alarm condition as defined by the thresholds set in the eAlarmTable."
  },
  "collisionsAlarm": {
    "name": "collisionsAlarm",
    "oid": "1.3.6.1.4.1.23.1.1.10.7",
    "class": "notificationtype",
    "objects": [
      {
        "module": "LANtern-MIB",
        "object": "adminTrapHandle"
      },
      {
        "module": "LANtern-MIB",
        "object": "adminDateAndTime"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmType"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmValue"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmLowThreshold"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmHighThreshold"
      },
      {
        "module": "LANtern-MIB",
        "object": "eAlarmSampleTime"
      }
    ],
    "description": "A collisionsAlarm(7) trap is generated whenever the percent collisions parameter enters or leaves an alarm condition as defined by the thresholds set in the eAlarmTable."
  },
  "hostInactive": {
    "name": "hostInactive",
    "oid": "1.3.6.1.4.1.23.1.1.10.9",
    "class": "notificationtype",
    "objects": [
      {
        "module": "LANtern-MIB",
        "object": "adminTrapHandle"
      },
      {
        "module": "LANtern-MIB",
        "object": "adminDateAndTime"
      },
      {
        "module": "LANtern-MIB",
        "object": "eHostAddress"
      }
    ],
    "description": "A hostInactive(9) trap is generated whenever the LANtern network monitor first detects that a monitored host has not transmitted for the specified interval. The LANtern will attempt to verify that the host is actually dead by pinging it before generating the trap."
  },
  "hostActive": {
    "name": "hostActive",
    "oid": "1.3.6.1.4.1.23.1.1.10.10",
    "class": "notificationtype",
    "objects": [
      {
        "module": "LANtern-MIB",
        "object": "adminTrapHandle"
      },
      {
        "module": "LANtern-MIB",
        "object": "adminDateAndTime"
      },
      {
        "module": "LANtern-MIB",
        "object": "eHostAddress"
      }
    ],
    "description": "A hostActive(10) trap is generated whenever the LANtern network monitor first detects that a monitored host has begun transmitting again (after being inactive)."
  },
  "newHost": {
    "name": "newHost",
    "oid": "1.3.6.1.4.1.23.1.1.10.11",
    "class": "notificationtype",
    "objects": [
      {
        "module": "LANtern-MIB",
        "object": "adminTrapHandle"
      },
      {
        "module": "LANtern-MIB",
        "object": "adminDateAndTime"
      },
      {
        "module": "LANtern-MIB",
        "object": "eHostAddress"
      }
    ],
    "description": "A newHost(11) trap is generated whenever the LANtern network monitor first detects a new host transmitting on its network segment."
  },
  "hostLimitExceeded": {
    "name": "hostLimitExceeded",
    "oid": "1.3.6.1.4.1.23.1.1.10.12",
    "class": "notificationtype",
    "objects": [
      {
        "module": "LANtern-MIB",
        "object": "adminTrapHandle"
      },
      {
        "module": "LANtern-MIB",
        "object": "adminDateAndTime"
      },
      {
        "module": "LANtern-MIB",
        "object": "eHostAddress"
      }
    ],
    "description": "A hostLimitExceeded(12) trap is generated the first time the LANtern exceeds its host limit. eHostAddress is the address of the host which caused the limit to be exceeded."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/LANtern-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 18:42:16 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "LANtern-MIB"
  }
}