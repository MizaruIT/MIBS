{
  "imports": {
    "class": "imports",
    "IF-MIB": [
      "InterfaceIndexOrZero"
    ],
    "MPLS-LSR-STD-MIB": [
      "MplsIndexType"
    ],
    "MPLS-TC-STD-MIB": [
      "MplsLsrIdentifier",
      "MplsTunnelInstanceIndex",
      "MplsTunnelIndex",
      "MplsLdpIdentifier"
    ],
    "PW-STD-MIB": [
      "pwIndex"
    ],
    "PW-TC-STD-MIB": [
      "PwIndexType"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "OBJECT-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "MibIdentifier",
      "OBJECT-IDENTITY",
      "Unsigned32",
      "Counter32",
      "OBJECT-TYPE",
      "mib-2",
      "Counter64",
      "Integer32",
      "TimeTicks",
      "Gauge32",
      "Bits",
      "IpAddress",
      "iso",
      "NOTIFICATION-TYPE",
      "MODULE-IDENTITY"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "StorageType",
      "TEXTUAL-CONVENTION"
    ]
  },
  "pwMplsStdMIB": {
    "name": "pwMplsStdMIB",
    "oid": "1.3.6.1.2.1.181",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2009-06-12 00:00",
        "description": "First published as RFC 5602. "
      }
    ],
    "lastupdated": "200906120000Z",
    "organization": "Pseudowire Emulation Edge-to-Edge (PWE3) Working Group.",
    "contactinfo": " David Zelig, Editor Email: davidz@corrigent.com Thomas D. Nadeau, Editor Email: tom.nadeau@bt.com The PWE3 Working Group (email distribution pwe3@ietf.org, http://www.ietf.org/html.charters/pwe3-charter.html) ",
    "description": "This MIB module complements the PW-STD-MIB module for PW operation over MPLS. Copyright (c) 2009 IETF Trust and the persons identified as authors of the code. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. - Neither the name of Internet Society, IETF or IETF Trust, nor the names of specific contributors, may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. This version of this MIB module is part of RFC 5602; see the RFC itself for full legal notices. "
  },
  "pwMplsNotifications": {
    "name": "pwMplsNotifications",
    "oid": "1.3.6.1.2.1.181.0",
    "class": "objectidentity"
  },
  "pwMplsObjects": {
    "name": "pwMplsObjects",
    "oid": "1.3.6.1.2.1.181.1",
    "class": "objectidentity"
  },
  "pwMplsConformance": {
    "name": "pwMplsConformance",
    "oid": "1.3.6.1.2.1.181.2",
    "class": "objectidentity"
  },
  "pwMplsTable": {
    "name": "pwMplsTable",
    "oid": "1.3.6.1.2.1.181.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table controls MPLS-specific parameters when the PW is going to be carried over MPLS PSN."
  },
  "pwMplsEntry": {
    "name": "pwMplsEntry",
    "oid": "1.3.6.1.2.1.181.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PW-STD-MIB",
        "object": "pwIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A row in this table represents parameters specific to MPLS PSN for a pseudowire (PW). The row is created automatically by the local agent if the pwPsnType is mpls(1). It is indexed by pwIndex, which uniquely identifies a singular PW. Manual entries in this table SHOULD be preserved after a reboot, and the agent MUST ensure the integrity of those entries. If the set of entries of a specific row were found to be nonconsistent after reboot, the PW pwOperStatus MUST be declared as down(2). Any read-write object in this table MAY be changed at any time; however, change of some objects (for example, pwMplsMplsType) during PW forwarding state MAY cause traffic disruption."
  },
  "pwMplsMplsType": {
    "name": "pwMplsMplsType",
    "oid": "1.3.6.1.2.1.181.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "mplsTe": 0,
        "mplsNonTe": 1,
        "pwOnly": 2
      }
    },
    "default": {
      "value": {
        "type": "Bits",
        "class": "type",
        "bits": {
          "mplsNonTe": 1
        }
      },
      "format": "bits"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is set by the operator to indicate the outer tunnel types, if existing. mplsTe(0) is used if the outer tunnel is set up by MPLS-TE, and mplsNonTe(1) is used if the outer tunnel is set up by LDP or manually. A combination of mplsTe(0) and mplsNonTe(1) MAY exist. pwOnly(2) is used if there is no outer tunnel label, i.e., in static provisioning without an MPLS tunnel. pwOnly(2) cannot be combined with mplsNonTe(1) or mplsTe(0). An implementation that can identify automatically that the peer node is directly connected MAY support the bit pwOnly(2) as read-only. "
  },
  "pwMplsExpBitsMode": {
    "name": "pwMplsExpBitsMode",
    "oid": "1.3.6.1.2.1.181.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "outerTunnel": 1,
          "specifiedValue": 2,
          "serviceDependant": 3
        }
      }
    },
    "default": {
      "default": {
        "value": "outerTunnel",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is set by the operator to determine the PW shim label EXP bits. The value of outerTunnel(1) is used where there is an outer tunnel -- pwMplsMplsType equals to mplsTe(0) or mplsNonTe(1). Note that in this case, there is no need to mark the PW label with the EXP bits, since the PW label is not visible to the intermediate nodes. If there is no outer tunnel, specifiedValue(2) SHOULD be used to indicate that the value is specified by pwMplsExpBits. Setting serviceDependant(3) indicates that the EXP bits are set based on a rule that is implementation specific."
  },
  "pwMplsExpBits": {
    "name": "pwMplsExpBits",
    "oid": "1.3.6.1.2.1.181.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 7
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is set by the operator if pwMplsExpBitsMode is set to specifiedValue(2) to indicate the MPLS EXP bits to be used on the PW shim label. Otherwise, it SHOULD be set to zero."
  },
  "pwMplsTtl": {
    "name": "pwMplsTtl",
    "oid": "1.3.6.1.2.1.181.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 2,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is set by the operator to indicate the PW TTL value to be used on the PW shim label."
  },
  "pwMplsLocalLdpID": {
    "name": "pwMplsLocalLdpID",
    "oid": "1.3.6.1.2.1.181.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MplsLdpIdentifier",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "'LDP specifications', RFC 3036, section 2.2.2.",
    "status": "current",
    "description": "The LDP identifier of the LDP entity that creates this PW in the local node. As the PW labels are always set from the per-platform label space, the last two octets in the LDP ID MUST always both be zeros."
  },
  "pwMplsLocalLdpEntityIndex": {
    "name": "pwMplsLocalLdpEntityIndex",
    "oid": "1.3.6.1.2.1.181.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The local node LDP Entity Index of the LDP entity creating this PW."
  },
  "pwMplsPeerLdpID": {
    "name": "pwMplsPeerLdpID",
    "oid": "1.3.6.1.2.1.181.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MplsLdpIdentifier",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The peer LDP identifier of the LDP session. This object SHOULD return the value zero if LDP is not used or if the value is not yet known."
  },
  "pwMplsStorageType": {
    "name": "pwMplsStorageType",
    "oid": "1.3.6.1.2.1.181.1.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "StorageType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "nonVolatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This variable indicates the storage type for this row."
  },
  "pwMplsOutboundTable": {
    "name": "pwMplsOutboundTable",
    "oid": "1.3.6.1.2.1.181.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table reports and configures the current outbound MPLS tunnels (i.e., toward the PSN) or the physical interface in the case of a PW label only that carries the PW traffic. It also reports the current outer tunnel and LSP that forward the PW traffic."
  },
  "pwMplsOutboundEntry": {
    "name": "pwMplsOutboundEntry",
    "oid": "1.3.6.1.2.1.181.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "augmention": {
      "name": "pwMplsOutboundEntry",
      "module": "PW-MPLS-STD-MIB",
      "object": "pwMplsEntry"
    },
    "status": "current",
    "description": "A row in this table configures the outer tunnel used for carrying the PW traffic toward the PSN. In the case of PW label only, it configures the interface that will carry the PW traffic. An entry in this table augments the pwMplsEntry, and is created automatically when the corresponding row has been created by the agent in the pwMplsEntry. This table points to the appropriate MPLS MIB module: In the MPLS-TE case, the three objects relevant to the indexing of a TE tunnel head-end (as used in the MPLS-TE-STD-MIB) are to be configured, and the tunnel instance indicates the LSP that is currently in use for forwarding the traffic. In the case of signaled non-TE MPLS (an outer tunnel label assigned by LDP), the table points to the XC entry in the LSR-STD-MIB. If the non-TE MPLS tunnel is manually configured, the operator configures the XC pointer to this tunnel. In the case of PW label only (no outer tunnel), the ifIndex of the port to carry the PW is configured here. It is possible to associate a PW to one TE tunnel head-end and a non-TE tunnel together. An indication in this table will report the currently active one. In addition, in the TE case, the table reports the active tunnel instance (i.e., the specific LSP in use). Any read-write object in this table MAY be changed at any time; however, change of some objects (for example, MPLS-TE indexes) during PW forwarding state MAY cause traffic disruption."
  },
  "pwMplsOutboundLsrXcIndex": {
    "name": "pwMplsOutboundLsrXcIndex",
    "oid": "1.3.6.1.2.1.181.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MplsIndexType",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is applicable if the pwMplsMplsType mplsNonTe(1) bit is set, and MUST return a value of zero otherwise. If the outer tunnel is signaled, the object is read-only and indicates the XC index in the MPLS-LSR-STD-MIB of the outer tunnel toward the peer. Otherwise (tunnel is set up manually), the operator defines the XC index of the manually created outer tunnel through this object. "
  },
  "pwMplsOutboundTunnelIndex": {
    "name": "pwMplsOutboundTunnelIndex",
    "oid": "1.3.6.1.2.1.181.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MplsTunnelIndex",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is applicable if the pwMplsMplsType mplsTe(0) bit is set, and MUST return a value of zero otherwise. It is part of the set of indexes for the outbound tunnel. The operator sets this object to represent the desired tunnel head-end toward the peer for carrying the PW traffic. "
  },
  "pwMplsOutboundTunnelInstance": {
    "name": "pwMplsOutboundTunnelInstance",
    "oid": "1.3.6.1.2.1.181.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MplsTunnelInstanceIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is applicable if the pwMplsMplsType mplsTe(0) bit is set, and MUST return a value of zero otherwise. It indicates the actual tunnel instance that is currently active and carrying the PW traffic. It SHOULD return the value zero if the information from the MPLS-TE application is not yet known. "
  },
  "pwMplsOutboundTunnelLclLSR": {
    "name": "pwMplsOutboundTunnelLclLSR",
    "oid": "1.3.6.1.2.1.181.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MplsLsrIdentifier",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is applicable if the pwMplsMplsType mplsTe(0) bit is set, and MUST return a value of all zeros otherwise. It is part of the set of indexes for the outbound tunnel. The operator sets this object to represent the desired tunnel head-end toward the peer for carrying the PW traffic. "
  },
  "pwMplsOutboundTunnelPeerLSR": {
    "name": "pwMplsOutboundTunnelPeerLSR",
    "oid": "1.3.6.1.2.1.181.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MplsLsrIdentifier",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is applicable if the pwMplsMplsType mplsTe(0) bit is set, and MUST return a value of zero otherwise. It is part of the set of indexes for the outbound tunnel. Note that in most cases, it equals to pwPeerAddr. "
  },
  "pwMplsOutboundIfIndex": {
    "name": "pwMplsOutboundIfIndex",
    "oid": "1.3.6.1.2.1.181.1.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is applicable if the pwMplsMplsType pwOnly(0) bit is set, and MUST return a value of zero otherwise. The operator configures the ifIndex of the outbound port in this case. "
  },
  "pwMplsOutboundTunnelTypeInUse": {
    "name": "pwMplsOutboundTunnelTypeInUse",
    "oid": "1.3.6.1.2.1.181.1.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notYetKnown": 1,
          "mplsTe": 2,
          "mplsNonTe": 3,
          "pwOnly": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the current tunnel that is carrying the PW traffic. The value of notYetKnown(1) should be used if the agent is currently unable to determine which tunnel or interface is carrying the PW, for example, because both tunnels are in operational status down. "
  },
  "pwMplsInboundTable": {
    "name": "pwMplsInboundTable",
    "oid": "1.3.6.1.2.1.181.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table indicates the PW LDP XC entry in the MPLS-LSR-STD-MIB for signaled PWs. "
  },
  "pwMplsInboundEntry": {
    "name": "pwMplsInboundEntry",
    "oid": "1.3.6.1.2.1.181.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PW-STD-MIB",
        "object": "pwIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A row in this table is created by the agent for each signaled PW, and shows the XC index related to the PW signaling in the inbound direction in the MPLS-LSR-STD-MIB that controls and display the information for all the LDP signaling processes in the local node. "
  },
  "pwMplsInboundXcIndex": {
    "name": "pwMplsInboundXcIndex",
    "oid": "1.3.6.1.2.1.181.1.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MplsIndexType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The XC index representing this PW in the inbound direction. It MUST return the value zero if the information is not yet known."
  },
  "pwMplsNonTeMappingTable": {
    "name": "pwMplsNonTeMappingTable",
    "oid": "1.3.6.1.2.1.181.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table indicates the PW association to the outbound tunnel in non-TE applications, maps the PW to its (inbound) XC entry, and indicates the PW-to-physical interface mapping for a PW without an outer tunnel. "
  },
  "pwMplsNonTeMappingEntry": {
    "name": "pwMplsNonTeMappingEntry",
    "oid": "1.3.6.1.2.1.181.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsNonTeMappingDirection",
        "implied": 0
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsNonTeMappingXcIndex",
        "implied": 0
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsNonTeMappingIfIndex",
        "implied": 0
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsNonTeMappingPwIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A row in this table displays the association between the PW and - its non-TE MPLS outbound outer tunnel, - its XC entry in the MPLS-LSR-STD-MIB, or - its physical interface if there is no outer tunnel (PW label only) and manual configuration. Rows are created in this table by the agent depending on the setting of pwMplsMplsType: - If the pwMplsMplsType mplsNonTe(1) bit is set, the agent creates a row for the outbound direction (pwMplsNonTeMappingDirection set to psnBound(1)). The pwMplsNonTeMappingXcIndex holds the XC index in the MPLS-LSR-STD-MIB of the PSN-bound outer tunnel. pwMplsNonTeMappingIfIndex MUST be zero for this row. - If the pwMplsMplsType pwOnly(2) bit is set, the agent creates a row for the outbound direction (pwMplsNonTeMappingDirection set to psnBound(1)). The pwMplsNonTeMappingIfIndex holds the ifIndex of the physical port this PW will use in the outbound direction. pwMplsNonTeMappingXcIndex MUST be zero for this row. - If the PW has been set up by a signaling protocol (i.e., pwOwner equal pwIdFecSignaling(2) or genFecSignaling(3)), the agent creates a row for the inbound direction (pwMplsNonTeMappingDirection set to fromPsn(2)). The pwMplsNonTeMappingXcIndex holds the XC index in the MPLS-LSR-STD-MIB of the PW LDP-generated XC entry. pwMplsNonTeMappingIfIndex MUST be zero for this row. An application can use this table to quickly retrieve the PW carried over specific non-TE MPLS outer tunnel or physical interface. "
  },
  "pwMplsNonTeMappingDirection": {
    "name": "pwMplsNonTeMappingDirection",
    "oid": "1.3.6.1.2.1.181.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "psnBound": 1,
          "fromPsn": 2
        }
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Index for the conceptual XC row identifying the tunnel-to-PW mappings, indicating the direction of the packet flow for this entry. psnBound(1) indicates that the entry is related to packets toward the PSN. fromPsn(2) indicates that the entry is related to packets coming from the PSN. "
  },
  "pwMplsNonTeMappingXcIndex": {
    "name": "pwMplsNonTeMappingXcIndex",
    "oid": "1.3.6.1.2.1.181.1.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MplsIndexType",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "See the description clause of pwMplsNonTeMappingEntry for the usage guidelines of this object."
  },
  "pwMplsNonTeMappingIfIndex": {
    "name": "pwMplsNonTeMappingIfIndex",
    "oid": "1.3.6.1.2.1.181.1.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "See the description clause of pwMplsNonTeMappingEntry for the usage guidelines of this object."
  },
  "pwMplsNonTeMappingPwIndex": {
    "name": "pwMplsNonTeMappingPwIndex",
    "oid": "1.3.6.1.2.1.181.1.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwIndexType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The value that represents the PW in the pwTable."
  },
  "pwMplsTeMappingTable": {
    "name": "pwMplsTeMappingTable",
    "oid": "1.3.6.1.2.1.181.1.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table reports the PW association to the outbound MPLS tunnel for MPLS-TE applications."
  },
  "pwMplsTeMappingEntry": {
    "name": "pwMplsTeMappingEntry",
    "oid": "1.3.6.1.2.1.181.1.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsTeMappingTunnelIndex",
        "implied": 0
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsTeMappingTunnelInstance",
        "implied": 0
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsTeMappingTunnelPeerLsrID",
        "implied": 0
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsTeMappingTunnelLocalLsrID",
        "implied": 0
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsTeMappingPwIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "A row in this table represents the association between a PW and its MPLS-TE outer (head-end) tunnel. An application can use this table to quickly retrieve the list of the PWs that are configured on a specific MPLS-TE outer tunnel. The pwMplsTeMappingTunnelInstance reports the actual LSP out of the tunnel head-end that is currently forwarding the traffic. The table is indexed by the head-end indexes of a TE tunnel and the PW index. "
  },
  "pwMplsTeMappingTunnelIndex": {
    "name": "pwMplsTeMappingTunnelIndex",
    "oid": "1.3.6.1.2.1.181.1.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MplsTunnelIndex",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Primary index for the conceptual row identifying the MPLS-TE tunnel that is carrying the PW traffic."
  },
  "pwMplsTeMappingTunnelInstance": {
    "name": "pwMplsTeMappingTunnelInstance",
    "oid": "1.3.6.1.2.1.181.1.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MplsTunnelInstanceIndex",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object identifies the MPLS-TE LSP that is carrying the PW traffic. It MUST return the value zero if the information of the specific LSP is not yet known. Note that based on the recommendation in the MPLS-TC-STD-MIB, instance index 0 should refer to the configured tunnel interface."
  },
  "pwMplsTeMappingTunnelPeerLsrID": {
    "name": "pwMplsTeMappingTunnelPeerLsrID",
    "oid": "1.3.6.1.2.1.181.1.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MplsLsrIdentifier",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object identifies the peer LSR when the outer tunnel is MPLS-TE."
  },
  "pwMplsTeMappingTunnelLocalLsrID": {
    "name": "pwMplsTeMappingTunnelLocalLsrID",
    "oid": "1.3.6.1.2.1.181.1.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MplsLsrIdentifier",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object identifies the local LSR."
  },
  "pwMplsTeMappingPwIndex": {
    "name": "pwMplsTeMappingPwIndex",
    "oid": "1.3.6.1.2.1.181.1.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PwIndexType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object returns the value that represents the PW in the pwTable."
  },
  "pwMplsGroups": {
    "name": "pwMplsGroups",
    "oid": "1.3.6.1.2.1.181.2.1",
    "class": "objectidentity"
  },
  "pwMplsCompliances": {
    "name": "pwMplsCompliances",
    "oid": "1.3.6.1.2.1.181.2.2",
    "class": "objectidentity"
  },
  "pwMplsModuleFullCompliance": {
    "name": "pwMplsModuleFullCompliance",
    "oid": "1.3.6.1.2.1.181.2.2.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "pwMplsGroup",
        "module": "PW-MPLS-STD-MIB"
      },
      {
        "object": "pwMplsOutboundMainGroup",
        "module": "PW-MPLS-STD-MIB"
      },
      {
        "object": "pwMplsInboundGroup",
        "module": "PW-MPLS-STD-MIB"
      },
      {
        "object": "pwMplsMappingGroup",
        "module": "PW-MPLS-STD-MIB"
      },
      {
        "object": "pwMplsOutboundTeGroup",
        "module": "PW-MPLS-STD-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for agents that provide full support for the PW-MPLS-STD-MIB module. Such devices can then be monitored and also be configured using this MIB module."
  },
  "pwMplsModuleReadOnlyCompliance": {
    "name": "pwMplsModuleReadOnlyCompliance",
    "oid": "1.3.6.1.2.1.181.2.2.2",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "pwMplsGroup",
        "module": "PW-MPLS-STD-MIB"
      },
      {
        "object": "pwMplsOutboundMainGroup",
        "module": "PW-MPLS-STD-MIB"
      },
      {
        "object": "pwMplsInboundGroup",
        "module": "PW-MPLS-STD-MIB"
      },
      {
        "object": "pwMplsMappingGroup",
        "module": "PW-MPLS-STD-MIB"
      },
      {
        "object": "pwMplsOutboundTeGroup",
        "module": "PW-MPLS-STD-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for agents that provide read- only support for the PW-MPLS-STD-MIB module. Such devices can then be monitored but cannot be configured using this MIB module."
  },
  "pwMplsGroup": {
    "name": "pwMplsGroup",
    "oid": "1.3.6.1.2.1.181.2.1.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsMplsType"
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsExpBitsMode"
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsExpBits"
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsTtl"
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsLocalLdpID"
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsLocalLdpEntityIndex"
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsPeerLdpID"
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsStorageType"
      }
    ],
    "status": "current",
    "description": "Collection of objects needed for PW over MPLS PSN configuration."
  },
  "pwMplsOutboundMainGroup": {
    "name": "pwMplsOutboundMainGroup",
    "oid": "1.3.6.1.2.1.181.2.1.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsOutboundLsrXcIndex"
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsOutboundIfIndex"
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsOutboundTunnelTypeInUse"
      }
    ],
    "status": "current",
    "description": "Collection of objects needed for outbound association of PW and MPLS tunnel."
  },
  "pwMplsOutboundTeGroup": {
    "name": "pwMplsOutboundTeGroup",
    "oid": "1.3.6.1.2.1.181.2.1.3",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsOutboundTunnelIndex"
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsOutboundTunnelInstance"
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsOutboundTunnelLclLSR"
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsOutboundTunnelPeerLSR"
      }
    ],
    "status": "current",
    "description": "Collection of objects needed for outbound association of PW and MPLS-TE tunnel."
  },
  "pwMplsInboundGroup": {
    "name": "pwMplsInboundGroup",
    "oid": "1.3.6.1.2.1.181.2.1.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsInboundXcIndex"
      }
    ],
    "status": "current",
    "description": "Collection of objects needed for inbound PW presentation. This group MUST be supported if PW signaling through LDP is used."
  },
  "pwMplsMappingGroup": {
    "name": "pwMplsMappingGroup",
    "oid": "1.3.6.1.2.1.181.2.1.5",
    "class": "objectgroup",
    "objects": [
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsNonTeMappingPwIndex"
      },
      {
        "module": "PW-MPLS-STD-MIB",
        "object": "pwMplsTeMappingPwIndex"
      }
    ],
    "status": "current",
    "description": "Collection of objects needed for mapping association of PW and MPLS tunnel."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/PW-MPLS-STD-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 17:28:39 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "PW-MPLS-STD-MIB"
  }
}