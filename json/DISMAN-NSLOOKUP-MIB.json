{
  "imports": {
    "class": "imports",
    "INET-ADDRESS-MIB": [
      "InetAddressType",
      "InetAddress"
    ],
    "SNMP-FRAMEWORK-MIB": [
      "SnmpAdminString"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "OBJECT-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "Bits",
      "NOTIFICATION-TYPE",
      "IpAddress",
      "Integer32",
      "Gauge32",
      "MibIdentifier",
      "MODULE-IDENTITY",
      "OBJECT-TYPE",
      "TimeTicks",
      "Counter64",
      "OBJECT-IDENTITY",
      "Counter32",
      "Unsigned32",
      "mib-2",
      "iso"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString",
      "RowStatus"
    ]
  },
  "lookupMIB": {
    "name": "lookupMIB",
    "oid": "1.3.6.1.2.1.82",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2000-09-21 00:00",
        "description": "Initial version, published as RFC 2925."
      }
    ],
    "lastupdated": "200009210000Z",
    "organization": "IETF Distributed Management Working Group",
    "contactinfo": "Kenneth White International Business Machines Corporation Network Computing Software Division Research Triangle Park, NC, USA E-mail: wkenneth@us.ibm.com",
    "description": "The Lookup MIB (DISMAN-NSLOOKUP-MIB) enables determination of either the name(s) corresponding to a host address or of the address(es) associated with a host name at a remote host."
  },
  "lookupObjects": {
    "name": "lookupObjects",
    "oid": "1.3.6.1.2.1.82.1",
    "class": "objectidentity"
  },
  "lookupConformance": {
    "name": "lookupConformance",
    "oid": "1.3.6.1.2.1.82.2",
    "class": "objectidentity"
  },
  "lookupMaxConcurrentRequests": {
    "name": "lookupMaxConcurrentRequests",
    "oid": "1.3.6.1.2.1.82.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 10,
        "format": "decimal"
      }
    },
    "units": "requests",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The maximum number of concurrent active lookup requests that are allowed within an agent implementation. A value of 0 for this object implies that there is no limit for the number of concurrent active requests in effect."
  },
  "lookupPurgeTime": {
    "name": "lookupPurgeTime",
    "oid": "1.3.6.1.2.1.82.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 86400
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 900,
        "format": "decimal"
      }
    },
    "units": "seconds",
    "maxaccess": "read-write",
    "status": "current",
    "description": "The amount of time to wait before automatically deleting an entry in the lookupCtlTable and any dependent lookupResultsTable entries after the lookup operation represented by an lookupCtlEntry has completed. An lookupCtEntry is considered complete when its lookupCtlOperStatus object has a value of completed(3)."
  },
  "lookupCtlTable": {
    "name": "lookupCtlTable",
    "oid": "1.3.6.1.2.1.82.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Defines the Lookup Control Table for providing the capability of performing a lookup operation, gethostbyname or gethostbyaddr, from a remote host."
  },
  "lookupCtlEntry": {
    "name": "lookupCtlEntry",
    "oid": "1.3.6.1.2.1.82.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupCtlOwnerIndex",
        "implied": 0
      },
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupCtlOperationName",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Defines an entry in the lookupCtlTable. A lookupCtlEntry is initially indexed by lookupCtlOwnerIndex, which is of type SnmpAdminString, a textual convention that allows for use of the SNMPv3 View-Based Access Control Model (RFC 2575 [11], VACM) and also allows an management application to identify its entries. The second index element, lookupCtlOperationName, enables the same lookupCtlOwnerIndex entity to have multiple outstanding requests. The value of lookupCtlTargetAddressType determines which lookup function to perform. Specification of dns(16) as the value of this index implies that the gethostbyname function should be performed to determine the numeric addresses associated with a symbolic name via lookupResultsTable entries. Use of a value of either ipv4(1) or ipv6(2) implies that the gethostbyaddr function should be performed to determine the symbolic name(s) associated with a numeric address at a remote host."
  },
  "lookupCtlOwnerIndex": {
    "name": "lookupCtlOwnerIndex",
    "oid": "1.3.6.1.2.1.82.1.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "To facilitate the provisioning of access control by a security administrator using the View-Based Access Control Model (RFC 2575, VACM) for tables in which multiple users may need to independently create or modify entries, the initial index is used as an 'owner index'. Such an initial index has a syntax of SnmpAdminString, and can thus be trivially mapped to a securityName or groupName as defined in VACM, in accordance with a security policy. When used in conjunction with such a security policy all entries in the table belonging to a particular user (or group) will have the same value for this initial index. For a given user's entries in a particular table, the object identifiers for the information in these entries will have the same subidentifiers (except for the 'column' subidentifier) up to the end of the encoded owner index. To configure VACM to permit access to this portion of the table, one would create vacmViewTreeFamilyTable entries with the value of vacmViewTreeFamilySubtree including the owner index portion, and vacmViewTreeFamilyMask 'wildcarding' the column subidentifier. More elaborate configurations are possible."
  },
  "lookupCtlOperationName": {
    "name": "lookupCtlOperationName",
    "oid": "1.3.6.1.2.1.82.1.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SnmpAdminString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 32
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The name of a lookup operation. This is locally unique, within the scope of an lookupCtlOwnerIndex."
  },
  "lookupCtlTargetAddressType": {
    "name": "lookupCtlTargetAddressType",
    "oid": "1.3.6.1.2.1.82.1.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the type of address for either performing a gethostbyname or a gethostbyaddr function at a remote host. Specification of dns(16) as the value for this object means that the gethostbyname function should be performed to return one or more numeric addresses. Use of a value of either ipv4(1) or ipv6(2) means that the gethostbyaddr function should be used to return the symbolic names associated with a remote host."
  },
  "lookupCtlTargetAddress": {
    "name": "lookupCtlTargetAddress",
    "oid": "1.3.6.1.2.1.82.1.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the address used for a resolver lookup at a remote host. The corresponding lookupCtlAddressType objects determines its type as well as the function that can be requested. A value for this object MUST be set prior to transitioning its corresponding lookupCtlEntry to active(1) via lookupCtlRowStatus."
  },
  "lookupCtlOperStatus": {
    "name": "lookupCtlOperStatus",
    "oid": "1.3.6.1.2.1.82.1.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notStarted": 2,
          "completed": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Reflects the operational state of an lookupCtlEntry: enabled(1) - Operation is active. notStarted(2) - Operation has not been enabled. completed(3) - Operation has completed. An operation is automatically enabled(1) when its lookupCtlRowStatus object is transitioned to active(1) status. Until this occurs lookupCtlOperStatus MUST report a value of notStarted(2). After the lookup operation completes (success or failure) the value for lookupCtlOperStatus MUST be transitioned to completed(3)."
  },
  "lookupCtlTime": {
    "name": "lookupCtlTime",
    "oid": "1.3.6.1.2.1.82.1.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "units": "milliseconds",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Reports the number of milliseconds that a lookup operation required to be completed at a remote host. Completed means operation failure as well as success."
  },
  "lookupCtlRc": {
    "name": "lookupCtlRc",
    "oid": "1.3.6.1.2.1.82.1.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The system specific return code from a lookup operation. All implementations MUST return a value of 0 for this object when the remote lookup operation succeeds. A non-zero value for this objects indicates failure. It is recommended that implementations that support errno use it as the value of this object to aid a management application in determining the cause of failure."
  },
  "lookupCtlRowStatus": {
    "name": "lookupCtlRowStatus",
    "oid": "1.3.6.1.2.1.82.1.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "reference": "See definition of RowStatus in RFC 2579, 'Textual Conventions for SMIv2.'",
    "status": "current",
    "description": "This object allows entries to be created and deleted in the lookupCtlTable. A remote lookup operation is started when an entry in this table is created via an SNMP SET request and the entry is activated. This occurs by setting the value of this object to CreateAndGo(4) during row creation or by setting this object to active(1) after the row is created. A value MUST be specified for lookupCtlTargetAddress prior to a transition to active(1) state being accepted. A remote lookup operation starts when its entry first becomes active(1). Transitions in and out of active(1) state have no effect on the operational behavior of a remote lookup operation, with the exception that deletion of an entry in this table by setting its RowStatus object to destroy(6) will stop an active remote lookup operation. The operational state of a remote lookup operation can be determined by examination of its lookupCtlOperStatus object."
  },
  "lookupResultsTable": {
    "name": "lookupResultsTable",
    "oid": "1.3.6.1.2.1.82.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Defines the Lookup Results Table for providing the capability of determining the results of a operation at a remote host. One or more entries are added to the lookupResultsTable when a lookup operation, as reflected by an lookupCtlEntry, completes successfully. All entries related to a successful lookup operation MUST be added to the lookupResultsTable at the same time that the associating lookupCtlOperStatus object is transitioned to completed(2). The number of entries added depends on the results determined for a particular lookup operation. All entries associated with an lookupCtlEntry are removed when the lookupCtlEntry is deleted. A remote host can be multi-homed and have more than one IP address associated with it (gethostbyname results) and/or it can have more than one symbolic name (gethostbyaddr results). The gethostbyaddr function is called with a host address as its parameter and is used primarily to determine a symbolic name to associate with the host address. Entries in the lookupResultsTable MUST be made for each host name returned. The official host name MUST be assigned a lookupResultsIndex of 1. The gethostbyname function is called with a symbolic host name and is used primarily to retrieve a host address. If possible the primary host address SHOULD be assigned a lookupResultsIndex of 1."
  },
  "lookupResultsEntry": {
    "name": "lookupResultsEntry",
    "oid": "1.3.6.1.2.1.82.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupCtlOwnerIndex",
        "implied": 0
      },
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupCtlOperationName",
        "implied": 0
      },
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupResultsIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Defines an entry in the lookupResultsTable. The first two index elements identify the lookupCtlEntry that a lookupResultsEntry belongs to. The third index element selects a single lookup operation result."
  },
  "lookupResultsIndex": {
    "name": "lookupResultsIndex",
    "oid": "1.3.6.1.2.1.82.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Entries in the lookupResultsTable are created when the result of a lookup operation is determined. Entries MUST be stored in the lookupResultsTable in the order that they are retrieved. Values assigned to lookupResultsIndex MUST start at 1 and increase in order."
  },
  "lookupResultsAddressType": {
    "name": "lookupResultsAddressType",
    "oid": "1.3.6.1.2.1.82.1.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddressType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Indicates the type of result of a remote lookup operation. A value of unknown(0) implies that either the operation hasn't been started or that it has failed."
  },
  "lookupResultsAddress": {
    "name": "lookupResultsAddress",
    "oid": "1.3.6.1.2.1.82.1.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InetAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Reflects a result for a remote lookup operation as per the value of lookupResultsAddressType."
  },
  "lookupCompliances": {
    "name": "lookupCompliances",
    "oid": "1.3.6.1.2.1.82.2.1",
    "class": "objectidentity"
  },
  "lookupGroups": {
    "name": "lookupGroups",
    "oid": "1.3.6.1.2.1.82.2.2",
    "class": "objectidentity"
  },
  "lookupCompliance": {
    "name": "lookupCompliance",
    "oid": "1.3.6.1.2.1.82.2.1.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "lookupGroup",
        "module": "DISMAN-NSLOOKUP-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for the DISMAN-NSLOOKUP-MIB."
  },
  "lookupGroup": {
    "name": "lookupGroup",
    "oid": "1.3.6.1.2.1.82.2.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupMaxConcurrentRequests"
      },
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupPurgeTime"
      },
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupCtlOperStatus"
      },
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupCtlTargetAddressType"
      },
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupCtlTargetAddress"
      },
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupCtlTime"
      },
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupCtlRc"
      },
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupCtlRowStatus"
      },
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupResultsAddressType"
      },
      {
        "module": "DISMAN-NSLOOKUP-MIB",
        "object": "lookupResultsAddress"
      }
    ],
    "status": "current",
    "description": "The group of objects that comprise the remote Lookup operation."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/DISMAN-NSLOOKUP-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 15:30:47 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "DISMAN-NSLOOKUP-MIB"
  }
}