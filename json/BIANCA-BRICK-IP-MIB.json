{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "NOTIFICATION-TYPE",
      "Counter64",
      "IpAddress",
      "OBJECT-TYPE",
      "Gauge32",
      "Counter32",
      "MibIdentifier",
      "MODULE-IDENTITY",
      "Unsigned32",
      "iso",
      "TimeTicks",
      "OBJECT-IDENTITY",
      "Integer32",
      "Bits"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "org": {
    "name": "org",
    "oid": "1.3",
    "class": "objectidentity"
  },
  "dod": {
    "name": "dod",
    "oid": "1.3.6",
    "class": "objectidentity"
  },
  "internet": {
    "name": "internet",
    "oid": "1.3.6.1",
    "class": "objectidentity"
  },
  "private": {
    "name": "private",
    "oid": "1.3.6.1.4",
    "class": "objectidentity"
  },
  "enterprises": {
    "name": "enterprises",
    "oid": "1.3.6.1.4.1",
    "class": "objectidentity"
  },
  "bintec": {
    "name": "bintec",
    "oid": "1.3.6.1.4.1.272",
    "class": "objectidentity"
  },
  "bibo": {
    "name": "bibo",
    "oid": "1.3.6.1.4.1.272.4",
    "class": "objectidentity"
  },
  "biboip": {
    "name": "biboip",
    "oid": "1.3.6.1.4.1.272.4.5",
    "class": "objectidentity"
  },
  "ipExtIfTable": {
    "name": "ipExtIfTable",
    "oid": "1.3.6.1.4.1.272.4.5.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The ipExtIfTable contains extended information related to IP and the interfaces found on the system. Entries can only be added or deleted by the system."
  },
  "ipExtIfEntry": {
    "name": "ipExtIfEntry",
    "oid": "1.3.6.1.4.1.272.4.5.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipExtIfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ipExtIfIndex": {
    "name": "ipExtIfIndex",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Unique interface index"
  },
  "ipExtIfRipSend": {
    "name": "ipExtIfRipSend",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ripV1": 1,
          "ripV2": 2,
          "both": 3,
          "none": 4,
          "ripV2mcast": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "specifies which versions of RIP messages are sent to that interface. Usually RIP messages are sent as broadcast, except this object is set to ripV2mcast. In this case RIP V2 messages are sent to the multicast address 224.0.0.9 ."
  },
  "ipExtIfRipReceive": {
    "name": "ipExtIfRipReceive",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ripV1": 1,
          "ripV2": 2,
          "both": 3,
          "none": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "specifies which versions of RIP messages are accepted from that interface. RIP V2 messages are received regardless if they are sent as broadcast or multicast."
  },
  "ipExtIfProxyArp": {
    "name": "ipExtIfProxyArp",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 1,
          "on": 2,
          "up-only": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Switch for Proxy ARP on this interface."
  },
  "ipExtIfNat": {
    "name": "ipExtIfNat",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 1,
          "on": 2,
          "reverse": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object can be used to switch NAT on and off for a specific interface. "
  },
  "ipExtIfNatRmvFin": {
    "name": "ipExtIfNatRmvFin",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies, wether entries in the IpNatTable shall be removed, when TCP-FINS have been received and acknowledged in both directions, a TCP-RST has been received or a ICMP-ERROR message has been received for the entry."
  },
  "ipExtIfNatTcpTimeout": {
    "name": "ipExtIfNatTcpTimeout",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "TCP NAT entries vanish unconditionally after not being used for the amount of time specified by this object in seconds."
  },
  "ipExtIfNatOtherTimeout": {
    "name": "ipExtIfNatOtherTimeout",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Non-TCP NAT entries vanish unconditionally after not being used for the amount of time specified by this object in seconds."
  },
  "ipExtIfNatOutXlat": {
    "name": "ipExtIfNatOutXlat",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object can be used to switch the outgoing address translation off. Then, all addresses are passed instead of being translated. The session mechanism remains active and implements a security mechanism. "
  },
  "ipExtIfAccounting": {
    "name": "ipExtIfAccounting",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 1,
          "on": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Switch for accounting on the specified interface. An IP packet is being accounted, when this object is set to on for either the source or the destination interface."
  },
  "ipExtIfTcpSpoofing": {
    "name": "ipExtIfTcpSpoofing",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 1,
          "on": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Switch for TCP spoofing on this interface. TCP keepalive polls are answered by the BRICK to prevent unnecessary ISDN connections. Set this object to on for ISDN dialup interfaces."
  },
  "ipExtIfAccessAction": {
    "name": "ipExtIfAccessAction",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ignore": 1,
          "refuse": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes the action, that is done, when a packet received from the interface has been filtered out. When set to ignore, no action takes place. When set to refuse, an ICMP unreachable message is being sent to the originator of the packet."
  },
  "ipExtIfAccessReport": {
    "name": "ipExtIfAccessReport",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "info": 2,
          "dump": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies, how a packed filtered by accesslists should be logged. When set to none, no logging takes place. When set to info, protocol, ip-addresses and portnumbers are logged. When set to dump, a dump of the first 64 bytes of the packet will be written to the syslog table."
  },
  "ipExtIfOspf": {
    "name": "ipExtIfOspf",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "passive": 1,
          "active": 2,
          "off": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Configure the OSPF status of this interface. Routing information about routes on passive and active interfaces is propagated on active interfaces. Only active interfaces run the OSPF protocol. When set to off the interface and its associated routes are invisible to the OSPF protocol."
  },
  "ipExtIfOspfMetric": {
    "name": "ipExtIfOspfMetric",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "auto": 1,
          "fixed": 2,
          "auto-adjust": 3,
          "fixed-adjust": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Configure the metric calculation of OSPF interfaces. If set to auto the metric is calculated based on ifSpeed. If set to fixed the metric is taken from the ospfIfMetricTable. Additionaly the metric adjustment for dialup interfaces can be configured. If set to auto-adjust or fixed-adjust the basic metric value is reduced if the operational status of the dialup interface is up."
  },
  "ipExtIfTcpCksum": {
    "name": "ipExtIfTcpCksum",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "check": 1,
          "dont-check": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable or disable the TCP checksum check for local packets received on the corresponding interface. Disabling the check may improve performance for some local applications (i.e. remote CAPI). This object should only be set to dont-check on interfaces for LANs without further routers. Packets received from routers may have a corrupted TCP checksum and TCP will no longer be able to detect those packets. The TCP checksum must be checked by the receiving TCP under any circumstances, when TCP header compression is used on any router."
  },
  "ipExtIfBackRtVerify": {
    "name": "ipExtIfBackRtVerify",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 1,
          "on": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object activates an additional check for incoming packets. If set to on, incoming packets are only accepted if return packets sent back to their source IP address would be sent over the same interface. This prevents packets being passed from untrusted interfaces to this interface."
  },
  "ipExtIfRuleIndex": {
    "name": "ipExtIfRuleIndex",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object defines the index of the first access rule that is applied for incoming packets. If set to 0 or if there is no access rule with this index no access rules are applied for this interface."
  },
  "ipExtIfAuthentication": {
    "name": "ipExtIfAuthentication",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 1,
          "securID": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object defines the authentication scheme used for incoming packets."
  },
  "ipExtIfAuthMode": {
    "name": "ipExtIfAuthMode",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "strict": 1,
          "loose": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object defines the authentication mode. If set to strict each source IP address must be authenticated. If set to loose all source IP addresses are allowed if at least one IP address is successfully authenticated."
  },
  "ipExtIfAuthLifeTime": {
    "name": "ipExtIfAuthLifeTime",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 180,
            "max": 36000
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object defines the time in seconds a successful authentication is valid since the IP partner was authenticated."
  },
  "ipExtIfAuthKeepalive": {
    "name": "ipExtIfAuthKeepalive",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object defines the period between short authentications that are invisible to the user"
  },
  "ipExtIfRouteAnnounce": {
    "name": "ipExtIfRouteAnnounce",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up-only": 1,
          "up-dormant": 2,
          "always": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object defines the condition when routes on this interface are propagated by routing protocols. If set to up-only routes are only propagated if the operational status of the interface is up. If set to up-dormant routes are propagated if the status is up or dormant. If set to always routes are propagated independent of the operational status."
  },
  "ipExtIfIpFragmentation": {
    "name": "ipExtIfIpFragmentation",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "equal": 3,
          "reverse": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object defines different modes used for fragmentation of IP datagrams greater than the MTU of the destination interface. If set to enabled (1) each IP datagram will be splitted into a first fragment MTU sized and the last one smaller than the first. If set to disabled (2) an ICMP unreachable message will be performed. The equal (3) mode defines a fragmentation technique wich generates fragments having approximately the same size whereon the reverse (4) mode starts with a small fragment followed by MTU sized fragment(s)."
  },
  "ipExtIfRerouting": {
    "name": "ipExtIfRerouting",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object enables or disables rerouting on this interface. The default value is enabled. If set to disabled, then only the better one route from two or more possible routes is chosen, even if the ifOperStatus of the interface for this route is dormant."
  },
  "ipExtIfBodRuleIndex": {
    "name": "ipExtIfBodRuleIndex",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object defines the index of the first rule used for Bandwidth on Demand (BOD) that is applied for incoming and/or outgoing traffic. If set to 0 or if there is no entry in the ipBodRuleTable with this index no BOD-specific information is applied for this interface."
  },
  "ipExtIfQosRuleIndex": {
    "name": "ipExtIfQosRuleIndex",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.28",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object defines the index of the first rule used for Qos (Qualtiy of Service) rules applied for IP traffic. If set to 0 or if there is no entry in the ipQoSTable with this index no QoS-specific information is applied for this interface."
  },
  "ipExtIfIpsecAccounting": {
    "name": "ipExtIfIpsecAccounting",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ipsec": 1,
          "clear": 2,
          "both": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object determines, whether packets which are en- or decapsulated by IPSec should be accounted with encapsulation header(ipsec) or without the encapsulation header (clear), or even twice (both)."
  },
  "ipExtIfMulticast": {
    "name": "ipExtIfMulticast",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "off": 1,
          "on": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable that multicast frames are accepted from that interface."
  },
  "ipExtIfNatSilentDeny": {
    "name": "ipExtIfNatSilentDeny",
    "oid": "1.3.6.1.4.1.272.4.5.3.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 1,
          "enabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies - if NAT is enabled (see ipExtIfNat) - wether incoming IP packets not passed by the NAT barrier should answered with an ICMP Host Unreachable or TCP RST message addressed to to packet originator. If set to enabled(2), such incoming IP packets will be silently discarded."
  },
  "ipExtRtTable": {
    "name": "ipExtRtTable",
    "oid": "1.3.6.1.4.1.272.4.5.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The ipExtRtTable can be used in addition (not instead of) to the ipRouteTable to specify routing of IP datagrams. The selection of datagram-types is more specific with the ipExtRtTable, so routing of different services over different pathes is possible. The specification of local IP-addresses is not possible in the ipExtRtTable. The ipExtRtTable will be searched before the ipRouteTable. If a matching entry is found, it will be taken for routing and no further lookup in the ipRouteTable will happen."
  },
  "ipExtRtEntry": {
    "name": "ipExtRtEntry",
    "oid": "1.3.6.1.4.1.272.4.5.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipExtRtProtocol",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Each entry in the ipExtRtTable describes a set of IP datagrams and the destination interface for that set. Metric parameters allow for ordering of the different specifications for overlapping sets."
  },
  "ipExtRtProtocol": {
    "name": "ipExtRtProtocol",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "icmp": 1,
          "ggp": 3,
          "tcp": 6,
          "egp": 8,
          "pup": 12,
          "udp": 17,
          "hmp": 20,
          "xns-idp": 22,
          "rdp": 27,
          "rsvp": 46,
          "gre": 47,
          "esp": 50,
          "ah": 51,
          "igrp": 88,
          "ospf": 89,
          "l2tp": 115,
          "dont-verify": 256
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the value of the protocolfield in the ip header for all IP-datagrams belonging to the set. If this object is set to dont-verify, the value of the protocol field is not specified and can take any value."
  },
  "ipExtRtSrcIfIndex": {
    "name": "ipExtRtSrcIfIndex",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the source index of the IP-datagrams. If this object has a value other than 0, only datagrams received over the interface with the appropriate interface index are considered to be part of the set. If this object is set to 0, the source interface index for the datagrams belonging to the set is not specified."
  },
  "ipExtRtSrcAddr": {
    "name": "ipExtRtSrcAddr",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipExtRtSrcMask the range of the source-addresses of the IP-datagrams belonging to the set. If both objects are set to 0.0.0.0 the source- addresses for the datagrams in the set is not specified and can take any value."
  },
  "ipExtRtSrcMask": {
    "name": "ipExtRtSrcMask",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipExtRtSrcAddr the range of the source-addresses of the IP-datagrams belonging to the set. If both objects are set to 0.0.0.0 the source- addresses for the datagrams in the set is not specified and can take any value."
  },
  "ipExtRtSrcPort": {
    "name": "ipExtRtSrcPort",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipExtRtSrcPortRange the range of source portnumbers of the IP-datagrams belonging to the set. All portnumbers between and including the two objects are within the range. If both objects are the to -1, the value of the source portnumber is not specified and can take any value."
  },
  "ipExtRtSrcPortRange": {
    "name": "ipExtRtSrcPortRange",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipExtRtSrcPort the range of source portnumbers of the IP-datagrams belonging to the set. All portnumbers between and including the two objects are within the range. If both objects are the to -1, the value of the source portnumber is not specified and can take any value."
  },
  "ipExtRtDstAddr": {
    "name": "ipExtRtDstAddr",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipExtRtDstMask the range of the target-addresses of the IP-datagrams belonging to the set. If both objects are set to 0.0.0.0 the target- addresses for the datagrams in the set is not specified and can take any value."
  },
  "ipExtRtDstMask": {
    "name": "ipExtRtDstMask",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipExtRtDstAddr the range of the target-addresses of the IP-datagrams belonging to the set. If both objects are set to 0.0.0.0 the target- addresses for the datagrams in the set is not specified and can take any value."
  },
  "ipExtRtDstPort": {
    "name": "ipExtRtDstPort",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipExtRtDstPortRange the range of target-portnumbers of the IP-datagrams belonging to the set. All portnumbers between and including the two objects are within the range. If both objects are the to -1, the value of the target portnumber is not specified and can take any value."
  },
  "ipExtRtDstPortRange": {
    "name": "ipExtRtDstPortRange",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipExtRtDstPort the range of target-portnumbers of the IP-datagrams belonging to the set. All portnumbers between and including the two objects are within the range. If both objects are the to -1, the value of the target portnumber is not specified and can take any value."
  },
  "ipExtRtTos": {
    "name": "ipExtRtTos",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipExtRtTosMask the range of the Type of Service field (TOS) in the IP-header of the IP-datagrams belonging to the set. A TOS value is considered within the range, when the following equation is valid: (tos & ipExtRtTosMask) == (ipExtRtTos & ipExtRtTosMask) If both objects are set to 0 the TOS value of the datagrams in the set is not specified and can take any value."
  },
  "ipExtRtTosMask": {
    "name": "ipExtRtTosMask",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipExtRtTos the range of the Type of Service field (TOS) in the IP-header of the IP-datagrams belonging to the set. A TOS value is considered within the range, when the following equation is valid: (tos & ipExtRtTosMask) == (ipExtRtTos & ipExtRtTosMask) If both objects are set to 0 the TOS value of the datagrams in the set is not specified and can take any value."
  },
  "ipExtRtDstIfMode": {
    "name": "ipExtRtDstIfMode",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dialup-wait": 1,
          "dialup-continue": 2,
          "up-only": 3,
          "always": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes different behavior depending on the ifOperStatus of the destination interface: dialup-wait: The route matches, when the ifOperStatus of the destination interface is either up or dormant. If the status is dormant, the ifAdminStatus is set to dialup to bring the interface to the up state. The datagram will wait until the ifOperStatus reaches the up state. For all other states, the routing tables will be searched for a different matching entry. dialup-continue: The route matches, if the ifOperStatus of the destination interface is up. For all other states, the routing tables are searched for different matching entry. However, if the ifOperStatus was dormant, the ifAdminStatus will be set to dialup to bring the interface to the up state. This setting can be used to establish a better path for a specific service and to use an existing path for that service as long as the better path could not be established. up-only: The route matches, if the ifOperStatus of the destination interface is up. For all other states, the routing tables are searched for different matching entry. always: The route matches independantly of the ifOperStatus of the destination interface. If it is up, the interface is used. If the state is dormant, ifAdminStatus is set to dialup to bring the interface in the up state. For all other states, the destination is considered unreachable. "
  },
  "ipExtRtDstIfIndex": {
    "name": "ipExtRtDstIfIndex",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the destination interface for the IP-datagrams belonging to the set. If the value of this object is set to 0, the datagrams of the set are discarded and an ICMP destination unreachable datagram is sent back to the originator."
  },
  "ipExtRtNextHop": {
    "name": "ipExtRtNextHop",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object is used on point-to-multipoint interfaces with indirect routes (see ipExrRtType) to specify the IP-address of the gateway on the network, where the datagram should be routed to."
  },
  "ipExtRtType": {
    "name": "ipExtRtType",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "invalid": 2,
          "direct": 3,
          "indirect": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies, on point-to-multipoint interface wether the datagram shall be sent to the destination IP address in the IP datagram header (direct) or to a gateway (indirect). In the later case, the IP-addres of the gateway is specified by ipExtRtNextHop. If this object is set to other, the entry is not used for routing. The complete entry can also be deleted, by setting this object to invalid. "
  },
  "ipExtRtMetric1": {
    "name": "ipExtRtMetric1",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object is used to specify an order on the entries in the ipExtRtTable. If a datagram is matching multiple entries, the entry with the lowest value of ipExtRtMetric1 is choosen. The decision is undefined, when even after interpreting the metric, there are still multiple entries matching the IP-datagram."
  },
  "ipExtRtMetric2": {
    "name": "ipExtRtMetric2",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Undefined yet; for further extension"
  },
  "ipExtRtMetric3": {
    "name": "ipExtRtMetric3",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Undefined yet; for further extension"
  },
  "ipExtRtMetric4": {
    "name": "ipExtRtMetric4",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Undefined yet; for further extension"
  },
  "ipExtRtMetric5": {
    "name": "ipExtRtMetric5",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Undefined yet; for further extension"
  },
  "ipExtRtProto": {
    "name": "ipExtRtProto",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "local": 2,
          "netmgmt": 3,
          "icmp": 4,
          "egp": 5,
          "ggp": 6,
          "hello": 7,
          "rip": 8,
          "is-is": 9,
          "es-is": 10,
          "ciscoIgrp": 11,
          "bbnSpfIgp": 12,
          "ospf": 13,
          "bgp": 14
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes, how the route has been gained. This will normaly be netmgmt, because there is currently no routing protocol, that is able to handle extended routes."
  },
  "ipExtRtAge": {
    "name": "ipExtRtAge",
    "oid": "1.3.6.1.4.1.272.4.5.4.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the age of the route."
  },
  "ipNatTable": {
    "name": "ipNatTable",
    "oid": "1.3.6.1.4.1.272.4.5.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "If NAT is switched on for an interface, this table contains an entry for each session running over the interface. Table entries are creates by the system whenever a valid session is established. A session may be either a tcp connection, a udp connection or an icmp connection with icmp-echo messages (ping). A valid session is either an outgoing session or an incoming session specified in the ipNatPresetTable. Everything behind an interface with NAT enabled is called outside. The BRICK itself and all networks connected to it via interfaces without NAT are called inside. Table entries are removed after timeout. This timeout is specified by ipExtIfNatOtherTimeout for UDP and ICMP sessions. specified by ipExtIfTcpTimeout for TCP sessions 16 seconds for closed TCP-sessions (FIN has been received and acknowledged in both directions. "
  },
  "ipNatEntry": {
    "name": "ipNatEntry",
    "oid": "1.3.6.1.4.1.272.4.5.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipNatIfIndex",
        "implied": 0
      },
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipNatProtocol",
        "implied": 0
      },
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipNatIntAddr",
        "implied": 0
      },
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipNatIntPort",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ipNatIfIndex": {
    "name": "ipNatIfIndex",
    "oid": "1.3.6.1.4.1.272.4.5.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object specifies the interface, for which the session is monitored."
  },
  "ipNatProtocol": {
    "name": "ipNatProtocol",
    "oid": "1.3.6.1.4.1.272.4.5.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "icmp": 1,
          "tcp": 6,
          "udp": 17,
          "gre": 47,
          "esp": 50,
          "ah": 51,
          "ospf": 89,
          "l2tp": 115
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object specifies the protocol, the session is using. The value icmp specifies an icmp-echo (ping) session. ICMP error messages are processed by the appropriate tcp or udp session. "
  },
  "ipNatIntAddr": {
    "name": "ipNatIntAddr",
    "oid": "1.3.6.1.4.1.272.4.5.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object specifies the internal local IP Address used for the session. The internal address is only visible to inside networks and is translated to the external address, when a packet is being sent outside. "
  },
  "ipNatIntPort": {
    "name": "ipNatIntPort",
    "oid": "1.3.6.1.4.1.272.4.5.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object specifies the internal local portnumber used for the session. The internal portnumber is only visible to inside networks and is translated to the external portnumber whenever a packet is being sent outside. "
  },
  "ipNatExtAddr": {
    "name": "ipNatExtAddr",
    "oid": "1.3.6.1.4.1.272.4.5.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object specifies the external local address used for the session. This address is visible outside only and will be translated to the internal address, whenever a packet is received from outside. "
  },
  "ipNatExtPort": {
    "name": "ipNatExtPort",
    "oid": "1.3.6.1.4.1.272.4.5.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object specifies the external local portnumber used for the session. This address is visible outside only and is translated to the internal portnumber, whenever a packet is received from outside. "
  },
  "ipNatRemoteAddr": {
    "name": "ipNatRemoteAddr",
    "oid": "1.3.6.1.4.1.272.4.5.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object specifies the remote IP-address used for the session. This is an outside address. However, it is visible to outside networks and also to inside networks. "
  },
  "ipNatRemotePort": {
    "name": "ipNatRemotePort",
    "oid": "1.3.6.1.4.1.272.4.5.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object specifies the remote portnumber used for the session. This is an outside portnumber. However, it is visible to outside networks and also to inside networks. "
  },
  "ipNatDirection": {
    "name": "ipNatDirection",
    "oid": "1.3.6.1.4.1.272.4.5.5.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "incoming": 1,
          "outgoing": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object specifies, whether the session is incoming (from outside to inside) or outgoing (from inside to outside). "
  },
  "ipNatAge": {
    "name": "ipNatAge",
    "oid": "1.3.6.1.4.1.272.4.5.5.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object specifies how long no packet has been transferred for the session and is used internally for timeout purposes. "
  },
  "ipNatPresetTable": {
    "name": "ipNatPresetTable",
    "oid": "1.3.6.1.4.1.272.4.5.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table specifies the IP addresses and port numbers for sessions requested from outside. If this table is empty and NAT is enabled, only packets for sessions initiated from inside are forwarded. The IP address and the port number of the internal server can be specified individually for each combination of - protocol (udp/tcp/icmp) - initiating hosts IP address (RemoteAddr, RemoteMask) - called hosts IP address (ExtAddr, ExtMask) - called port number (ExtPort, ExtPortRange) Entries in the table are created and removed manually by network management."
  },
  "ipNatPresetEntry": {
    "name": "ipNatPresetEntry",
    "oid": "1.3.6.1.4.1.272.4.5.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipNatPrIfIndex",
        "implied": 0
      },
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipNatPrProtocol",
        "implied": 0
      },
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipNatPrExtPort",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ipNatPrIfIndex": {
    "name": "ipNatPrIfIndex",
    "oid": "1.3.6.1.4.1.272.4.5.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the interface index, for which the table entry shall be valid. If set to 0, the entry will be valid for all interfaces configured to use NAT."
  },
  "ipNatPrProtocol": {
    "name": "ipNatPrProtocol",
    "oid": "1.3.6.1.4.1.272.4.5.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "icmp": 1,
          "tcp": 6,
          "udp": 17,
          "gre": 47,
          "esp": 50,
          "ah": 51,
          "ospf": 89,
          "ipinip": 94,
          "l2tp": 115,
          "delete": 256
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the protocol, for which the table entry shall be valid."
  },
  "ipNatPrRemoteAddr": {
    "name": "ipNatPrRemoteAddr",
    "oid": "1.3.6.1.4.1.272.4.5.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipNatPrRemoteMask the the set of IP addresses of remote hosts initiating the connection. The table entry will be valid for an incoming call, when the IP adress of the remote host initiating the connection lies in the range specified by both objects. If both objects are set to 0.0.0.0, the table entry will be valid for any remote host."
  },
  "ipNatPrRemoteMask": {
    "name": "ipNatPrRemoteMask",
    "oid": "1.3.6.1.4.1.272.4.5.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipNatPrRemoteAddr the the set of IP addresses of remote hosts initiating the connection. The table entry will be valid for an incoming call, when the IP adress of the remote host initiating the connection lies in the range specified by both objects. If both objects are set to 0.0.0.0, the table entry will be valid for any remote host."
  },
  "ipNatPrExtAddr": {
    "name": "ipNatPrExtAddr",
    "oid": "1.3.6.1.4.1.272.4.5.6.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipNatPrExtMask the the set of called IP addresses, for which the table entry shall be valid. The entry is valid, if the called IP address of an incoming calls setup packet lies in the range specified by both objects. If both objects are set to 0.0.0.0, the table entry will be valid for any called IP address."
  },
  "ipNatPrExtMask": {
    "name": "ipNatPrExtMask",
    "oid": "1.3.6.1.4.1.272.4.5.6.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipNatPrExtAddr the the set of called IP addresses, for which the table entry shall be valid. The entry is valid, if the called IP address of an incoming calls setup packet lies in the range specified by both objects. If both objects are set to 0.0.0.0, the table entry will be valid for any called IP address."
  },
  "ipNatPrExtPort": {
    "name": "ipNatPrExtPort",
    "oid": "1.3.6.1.4.1.272.4.5.6.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipNatPrExtPortRange the range of portnumbers for incoming call, for which the table entry shall be valid. If both objects are set to -1, the entry is valid for all portnumbers. If ipNatPrPortRange is set to -1, the entry is only valid, when the called portnumber of an incoming call is equal to ipNatPrExtPort. Otherwise, the entry is valid, if the called portnumber lies in the range ExtPort .. ExtPortRange."
  },
  "ipNatPrExtPortRange": {
    "name": "ipNatPrExtPortRange",
    "oid": "1.3.6.1.4.1.272.4.5.6.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipNatPrExtPort the range of portnumbers for incoming call, for which the table entry shall be valid. If both objects are set to -1, the entry is valid for all portnumbers. If ipNatPrPortRange is set to -1, the entry is only valid, when the called portnumber of an incoming call is equal to ipNatPrExtPort. Otherwise, the entry is valid, if the called portnumber lies in the range ExtPort .. ExtPortRange."
  },
  "ipNatPrIntAddr": {
    "name": "ipNatPrIntAddr",
    "oid": "1.3.6.1.4.1.272.4.5.6.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the internal target hosts IP address for incoming calls matching the table entry. An incoming call matching this entry will be routed to the internal server specified by this object. If this object is set to 0.0.0.0 the target host will be the original target host in the incoming calls setup packet. No translation of the IP-addresses take place in this case. "
  },
  "ipNatPrIntPort": {
    "name": "ipNatPrIntPort",
    "oid": "1.3.6.1.4.1.272.4.5.6.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the internal target hosts port-number for incoming calls matching the table entry. If this object is set to -1, the target portnumber will be taken from the original incoming calls setup packet. No translation of the portnumber will take place in this case. If the set of portnumbers for this table entry is a range instead of a single portnumber, this object will specify the base of the target range of portnumbers. The internal portnumber will be constructed as follows: new-target-port := old-target-port - ipNatPrExtPort + ipNatPrIntPort "
  },
  "ipSessionTable": {
    "name": "ipSessionTable",
    "oid": "1.3.6.1.4.1.272.4.5.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory"
  },
  "ipSessionEntry": {
    "name": "ipSessionEntry",
    "oid": "1.3.6.1.4.1.272.4.5.7.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipSessionProtocol",
        "implied": 0
      },
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipSessionSrcAddr",
        "implied": 0
      },
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipSessionSrcPort",
        "implied": 0
      },
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipSessionDstAddr",
        "implied": 0
      },
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipSessionDstPort",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ipSessionSrcAddr": {
    "name": "ipSessionSrcAddr",
    "oid": "1.3.6.1.4.1.272.4.5.7.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "ipSessionSrcPort": {
    "name": "ipSessionSrcPort",
    "oid": "1.3.6.1.4.1.272.4.5.7.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "ipSessionDstAddr": {
    "name": "ipSessionDstAddr",
    "oid": "1.3.6.1.4.1.272.4.5.7.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "ipSessionDstPort": {
    "name": "ipSessionDstPort",
    "oid": "1.3.6.1.4.1.272.4.5.7.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "ipSessionOutPkts": {
    "name": "ipSessionOutPkts",
    "oid": "1.3.6.1.4.1.272.4.5.7.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "ipSessionOutOctets": {
    "name": "ipSessionOutOctets",
    "oid": "1.3.6.1.4.1.272.4.5.7.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "ipSessionInPkts": {
    "name": "ipSessionInPkts",
    "oid": "1.3.6.1.4.1.272.4.5.7.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "ipSessionInOctets": {
    "name": "ipSessionInOctets",
    "oid": "1.3.6.1.4.1.272.4.5.7.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "ipSessionProtocol": {
    "name": "ipSessionProtocol",
    "oid": "1.3.6.1.4.1.272.4.5.7.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "icmp": 1,
          "ggp": 3,
          "tcp": 6,
          "egp": 8,
          "pup": 12,
          "udp": 17,
          "hmp": 20,
          "xns-idp": 22,
          "rdp": 27,
          "rsvp": 46,
          "gre": 47,
          "esp": 50,
          "ah": 51,
          "igrp": 88,
          "ospf": 89,
          "l2tp": 115
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "ipSessionAge": {
    "name": "ipSessionAge",
    "oid": "1.3.6.1.4.1.272.4.5.7.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "ipSessionIdle": {
    "name": "ipSessionIdle",
    "oid": "1.3.6.1.4.1.272.4.5.7.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "ipSessionSrcIfIndex": {
    "name": "ipSessionSrcIfIndex",
    "oid": "1.3.6.1.4.1.272.4.5.7.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "ipSessionDstIfIndex": {
    "name": "ipSessionDstIfIndex",
    "oid": "1.3.6.1.4.1.272.4.5.7.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "ipImportTable": {
    "name": "ipImportTable",
    "oid": "1.3.6.1.4.1.272.4.5.12",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table specifies how routes from one routing protocol are imported into another routing protocol. The dummy protocol default-route allows the generation of a default route for the routing domain. Not all combinations of source and destination protocols might be valid or implemented."
  },
  "ipImportEntry": {
    "name": "ipImportEntry",
    "oid": "1.3.6.1.4.1.272.4.5.12.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipImportSrcProto",
        "implied": 0
      },
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipImportDstProto",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ipImportSrcProto": {
    "name": "ipImportSrcProto",
    "oid": "1.3.6.1.4.1.272.4.5.12.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "default-route": 1,
          "direct": 2,
          "static": 3,
          "rip": 4,
          "ospf": 5,
          "special": 6,
          "radius": 7
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes the protocol that generated the route and inserted it into the routing table."
  },
  "ipImportDstProto": {
    "name": "ipImportDstProto",
    "oid": "1.3.6.1.4.1.272.4.5.12.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "delete": 1,
          "rip": 2,
          "ospf": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes the destination protocol into that the routes should be imported."
  },
  "ipImportMetric1": {
    "name": "ipImportMetric1",
    "oid": "1.3.6.1.4.1.272.4.5.12.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object defines the metric in the context of the destination protocol the imported routes should get. If set to -1 these routes get a protocol specific default metric."
  },
  "ipImportType": {
    "name": "ipImportType",
    "oid": "1.3.6.1.4.1.272.4.5.12.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object might define protocol specific properties of the imported routes in the context of the destination protocol."
  },
  "ipImportAddr": {
    "name": "ipImportAddr",
    "oid": "1.3.6.1.4.1.272.4.5.12.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipImportMask the range of IP addresses for which the table entry should be valid. The entry is valid if the destination IP address of the route lies in the range specified by both objects. If both objects are set to 0.0.0.0, the table entry will be valid for destination."
  },
  "ipImportMask": {
    "name": "ipImportMask",
    "oid": "1.3.6.1.4.1.272.4.5.12.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipImportAddr the range of IP addresses for which the table entry should be valid. The entry is valid if the destination IP address of the route lies in the range specified by both objects. If both objects are set to 0.0.0.0, the table entry will be valid for destination."
  },
  "ipImportEffect": {
    "name": "ipImportEffect",
    "oid": "1.3.6.1.4.1.272.4.5.12.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "import": 1,
          "doNotImport": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object defines the effect this row should have. If set to import, the importation from ipImportSrcProto to ipImportDstProto takes place. If set to doNotImport the importation is prevented."
  },
  "ipImportIfIndex": {
    "name": "ipImportIfIndex",
    "oid": "1.3.6.1.4.1.272.4.5.12.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the interface index of the interface for which the entry should be valid. If set to 0 it will be valid for all interfaces."
  },
  "ipPriorityTable": {
    "name": "ipPriorityTable",
    "oid": "1.3.6.1.4.1.272.4.5.13",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table defines the order, in which routes from different protocols are being used to determine the destination of an ip packet. The table will contain an entry for each type of routing protocol including STATIC and DIRECT routes. A priority-value can be configured for each of those protocols to get an order between the different protocols. The table contains a fixed number of entries. Only the priority may be configured."
  },
  "ipPriorityEntry": {
    "name": "ipPriorityEntry",
    "oid": "1.3.6.1.4.1.272.4.5.13.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipPriorityProto",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ipPriorityProto": {
    "name": "ipPriorityProto",
    "oid": "1.3.6.1.4.1.272.4.5.13.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "direct": 1,
          "static": 2,
          "rip": 3,
          "ospf": 4,
          "ospf-ext": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object specifies the routig-protocol, for which the entry is valid."
  },
  "ipPriorityValue": {
    "name": "ipPriorityValue",
    "oid": "1.3.6.1.4.1.272.4.5.13.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 63
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object contains the priority-value for a specific routing protocol. Low values mean high precedence."
  },
  "ipFilterTable": {
    "name": "ipFilterTable",
    "oid": "1.3.6.1.4.1.272.4.5.15",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The ipFilterTable defines filters that describe subsets of IP packets. The filter matches if all conditions defined are true when comparing with the header of an IP packet."
  },
  "ipFilterEntry": {
    "name": "ipFilterEntry",
    "oid": "1.3.6.1.4.1.272.4.5.15.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipFilterProtocol",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ipFilterIndex": {
    "name": "ipFilterIndex",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object uniquely references this filter. The index value is generated automatically."
  },
  "ipFilterDescr": {
    "name": "ipFilterDescr",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A textual string describing this filter."
  },
  "ipFilterProtocol": {
    "name": "ipFilterProtocol",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "icmp": 1,
          "ggp": 3,
          "ip": 4,
          "tcp": 6,
          "egp": 8,
          "igp": 9,
          "pup": 12,
          "chaos": 16,
          "udp": 17,
          "hmp": 20,
          "xns-idp": 22,
          "rdp": 27,
          "rsvp": 46,
          "gre": 47,
          "esp": 50,
          "ah": 51,
          "tlsp": 56,
          "skip": 57,
          "kryptolan": 65,
          "iso-ip": 80,
          "igrp": 88,
          "ospf": 89,
          "ipip": 94,
          "ipx-in-ip": 111,
          "vrrp": 112,
          "l2tp": 115,
          "delete": 255,
          "dont-verify": 256
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the value of the protocol field in the ip header for all IP-datagrams belonging to the set. If this object is set to dont-verify, the value of the protocol field is not specified and can take any value."
  },
  "ipFilterSrcAddr": {
    "name": "ipFilterSrcAddr",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipFilterSrcMask the set of IP addresses of datagrams that belong to the subset defined by this entry. If both objects are set to 0.0.0.0 the source-addresses for the datagrams in the set is not specified and can take any value."
  },
  "ipFilterSrcMask": {
    "name": "ipFilterSrcMask",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipFilterSrcAddr the set of IP addresses of datagrams that belong to the subset defined by this entry. If both objects are set to 0.0.0.0 the source-addresses for the datagrams in the set is not specified and can take any value."
  },
  "ipFilterSrcPort": {
    "name": "ipFilterSrcPort",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipFilterSrcPortRange the range of source portnumbers of the IP-datagrams belonging to the set. All portnumbers between and including the two objects are within the range. If both objects are the to -1, the value of the source portnumber is not specified and can take any value."
  },
  "ipFilterSrcPortRange": {
    "name": "ipFilterSrcPortRange",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipFilterDstPort the range of source portnumbers of the IP-datagrams belonging to the set. All portnumbers between and including the two objects are within the range. If both objects are the to -1, the value of the source portnumber is not specified and can take any value."
  },
  "ipFilterDstAddr": {
    "name": "ipFilterDstAddr",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipFilterDstMask the range of the target-addresses of the IP-datagrams belonging to the set. If both objects are set to 0.0.0.0 the target- addresses for the datagrams in the set is not specified and can take any value."
  },
  "ipFilterDstMask": {
    "name": "ipFilterDstMask",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipFilterDstAddr the range of the target-addresses of the IP-datagrams belonging to the set. If both objects are set to 0.0.0.0 the target- addresses for the datagrams in the set is not specified and can take any value."
  },
  "ipFilterDstPort": {
    "name": "ipFilterDstPort",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipFilterDstPortRange the range of target-portnumbers of the IP-datagrams belonging to the set. All portnumbers between and including the two objects are within the range. If both objects are the to -1, the value of the target portnumber is not specified and can take any value."
  },
  "ipFilterDstPortRange": {
    "name": "ipFilterDstPortRange",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipFilterDstPort the range of target-portnumbers of the IP-datagrams belonging to the set. All portnumbers between and including the two objects are within the range. If both objects are the to -1, the value of the target portnumber is not specified and can take any value."
  },
  "ipFilterTcpConnState": {
    "name": "ipFilterTcpConnState",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dont-verify": 1,
          "established": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes the state of the TCP connection associated with the packets belonging to the set. If this object is set to established, the value of the TCP flags of incoming packets is checked. Packets with flags that initiate TCP connections are excluded from the set. If this object is set to dont-verify, the TCP flags are not checked and can be any value."
  },
  "ipFilterIcmpType": {
    "name": "ipFilterIcmpType",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dont-verify": 31,
          "echoRep": 1,
          "destUnreach": 4,
          "srcQuench": 5,
          "redirect": 6,
          "echo": 9,
          "timeExcds": 12,
          "parmProb": 13,
          "timestamp": 14,
          "timestampRep": 15,
          "addrMask": 16,
          "addrMaskRep": 17
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes the ICMP type of the packets belonging to the set. If this object is set to dont-verify, the value of the ICMP type field is not specified and can take any value."
  },
  "ipFilterTos": {
    "name": "ipFilterTos",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipFilterTosMask the range of the Type of Service field (TOS) in the IP-header of the IP-datagrams belonging to the set. A TOS value is considered within the range, when the following equation is valid: (tos & ipFilterTosMask) == (ipFilterTos & ipFilterTosMask) If both objects are set to 0 the TOS value of the datagrams in the set is not specified and can take any value."
  },
  "ipFilterTosMask": {
    "name": "ipFilterTosMask",
    "oid": "1.3.6.1.4.1.272.4.5.15.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes together with ipFilterTos the range of the Type of Service field (TOS) in the IP-header of the IP-datagrams belonging to the set. A TOS value is considered within the range, when the following equation is valid: (tos & ipFilterTosMask) == (ipFilterTos & ipFilterTosMask) If both objects are set to 0 the TOS value of the datagrams in the set is not specified and can take any value."
  },
  "ipRuleTable": {
    "name": "ipRuleTable",
    "oid": "1.3.6.1.4.1.272.4.5.16",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The ipRuleTable defines access rules for checking incoming IP packets. The rules are processed in order, i.e. each rule has a link to the next rule. The set of rules is processed until a match occurs, that means the rule's associated filter matches and the specified action is performed (either accept or deny a packet). The last rule is implicitly a deny rule. The set of rules to be processed can be defined for each interface"
  },
  "ipRuleEntry": {
    "name": "ipRuleEntry",
    "oid": "1.3.6.1.4.1.272.4.5.16.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipRuleFilterIndex",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ipRuleIndex": {
    "name": "ipRuleIndex",
    "oid": "1.3.6.1.4.1.272.4.5.16.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Unique rule index."
  },
  "ipRuleFilterIndex": {
    "name": "ipRuleFilterIndex",
    "oid": "1.3.6.1.4.1.272.4.5.16.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "References the rule's associated filter."
  },
  "ipRuleAction": {
    "name": "ipRuleAction",
    "oid": "1.3.6.1.4.1.272.4.5.16.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "allow": 1,
          "allow-if-not": 2,
          "deny": 3,
          "deny-if-not": 4,
          "ignore": 5,
          "delete": 6
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the action to be performed if the rule's associated filter matches. If set to ignore the filter is not consulted and the next rule is processed immediately."
  },
  "ipRuleNextRuleIndex": {
    "name": "ipRuleNextRuleIndex",
    "oid": "1.3.6.1.4.1.272.4.5.16.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Specifies the next rule to be processed if the rule's associated filter does not match. The value 0 is used to mark the end of the rule set."
  },
  "ipNatOutTable": {
    "name": "ipNatOutTable",
    "oid": "1.3.6.1.4.1.272.4.5.18",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table specifies the IP address translation for outgoing sessions. If no matching entry is found the IP address is set to the IP address defined on the interface configured for NAT. If a matching entry is found, the source IP address of outgoing IP packets is set to the value of ipNatOutExtAddr. This table is only used if the outgoing address translation is activated (ipExtIfNatOutXlat). Entries in the table are created and removed manually by network management."
  },
  "ipNatOutEntry": {
    "name": "ipNatOutEntry",
    "oid": "1.3.6.1.4.1.272.4.5.18.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipNatOutIfIndex",
        "implied": 0
      },
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipNatOutIntAddr",
        "implied": 0
      },
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipNatOutExtAddr",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ipNatOutIfIndex": {
    "name": "ipNatOutIfIndex",
    "oid": "1.3.6.1.4.1.272.4.5.18.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the interface index, for which the table entry shall be valid. If set to 0, the entry will be valid for all interfaces configured to use NAT."
  },
  "ipNatOutProtocol": {
    "name": "ipNatOutProtocol",
    "oid": "1.3.6.1.4.1.272.4.5.18.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "icmp": 1,
          "tcp": 6,
          "udp": 17,
          "gre": 47,
          "esp": 50,
          "ah": 51,
          "l2tp": 115,
          "any": 255,
          "delete": 256
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the protocol, for which the table entry shall be valid."
  },
  "ipNatOutRemoteAddr": {
    "name": "ipNatOutRemoteAddr",
    "oid": "1.3.6.1.4.1.272.4.5.18.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipNatOutRemoteMask the set of target IP addresses for which the table entry is valid. If both objects are set to 0.0.0.0, the table entry will be valid for any target IP address."
  },
  "ipNatOutRemoteMask": {
    "name": "ipNatOutRemoteMask",
    "oid": "1.3.6.1.4.1.272.4.5.18.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipNatOutRemoteAddr the set of target IP addresses for which the table entry is valid. If both objects are set to 0.0.0.0, the table entry will be valid for any target IP address."
  },
  "ipNatOutExtAddr": {
    "name": "ipNatOutExtAddr",
    "oid": "1.3.6.1.4.1.272.4.5.18.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the external IP address to which the internal IP address is mapped."
  },
  "ipNatOutRemotePort": {
    "name": "ipNatOutRemotePort",
    "oid": "1.3.6.1.4.1.272.4.5.18.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipNatOutRemotePortRange the range of portnumbers for outgoing calls, for which the table entry shall be valid. If both objects are set to -1, the entry is valid for all portnumbers. If ipNatOutPortRange is set to -1, the entry is only valid, when the portnumber of an outgoing call is equal to ipNatOutRemotePort. Otherwise, the entry is valid, if the called portnumber lies in the range RemotePort .. RemotePortRange."
  },
  "ipNatOutRemotePortRange": {
    "name": "ipNatOutRemotePortRange",
    "oid": "1.3.6.1.4.1.272.4.5.18.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipNatOutRemotePort the range of portnumbers for outgoing calls, for which the table entry shall be valid. If both objects are set to -1, the entry is valid for all portnumbers. If ipNatOutPortRange is set to -1, the entry is only valid, when the portnumber of an outgoing call is equal to ipNatOutRemotePort. Otherwise, the entry is valid, if the called portnumber lies in the range RemotePort .. RemotePortRange."
  },
  "ipNatOutIntAddr": {
    "name": "ipNatOutIntAddr",
    "oid": "1.3.6.1.4.1.272.4.5.18.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipNatOutIntMask the internal hosts IP address for outgoing calls matching the table entry. If both objects are set to 0.0.0.0, the table entry will be valid for any source IP address."
  },
  "ipNatOutIntMask": {
    "name": "ipNatOutIntMask",
    "oid": "1.3.6.1.4.1.272.4.5.18.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipNatOutIntAddr the internal hosts IP address for outgoing calls matching the table entry. If both objects are set to 0.0.0.0, the table entry will be valid for any source IP address."
  },
  "ipNatOutIntPort": {
    "name": "ipNatOutIntPort",
    "oid": "1.3.6.1.4.1.272.4.5.18.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the internal source port for which the table entry shall be valid. If this object is set to -1, any internal source port matches this entry."
  },
  "ipNatOutExtPort": {
    "name": "ipNatOutExtPort",
    "oid": "1.3.6.1.4.1.272.4.5.18.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object may be used to specify a fixed external source port to which the internal source port is mapped. If this object is set to -1, the port is mapped to the next free source port available."
  },
  "ipHostsAliveTable": {
    "name": "ipHostsAliveTable",
    "oid": "1.3.6.1.4.1.272.4.5.19",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table specifies the watched IP addresses. Entries in the table are created and removed manually by network management."
  },
  "ipHostsAliveEntry": {
    "name": "ipHostsAliveEntry",
    "oid": "1.3.6.1.4.1.272.4.5.19.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipHostsAliveIPAddress",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ipHostsAliveGroup": {
    "name": "ipHostsAliveGroup",
    "oid": "1.3.6.1.4.1.272.4.5.19.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 9
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The group of the watched IP-Addresses"
  },
  "ipHostsAliveIPAddress": {
    "name": "ipHostsAliveIPAddress",
    "oid": "1.3.6.1.4.1.272.4.5.19.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The watched IP-Address"
  },
  "ipHostsAliveState": {
    "name": "ipHostsAliveState",
    "oid": "1.3.6.1.4.1.272.4.5.19.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "alive": 1,
          "down": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The State of the watched IP-Address"
  },
  "ipHostsAliveInterval": {
    "name": "ipHostsAliveInterval",
    "oid": "1.3.6.1.4.1.272.4.5.19.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65536
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This is the timeinterval for state verification"
  },
  "ipHostsAliveDownAction": {
    "name": "ipHostsAliveDownAction",
    "oid": "1.3.6.1.4.1.272.4.5.19.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2,
          "delete": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This action must be perform, if the hosts do not answer "
  },
  "ipHostsAliveFirstIfIndex": {
    "name": "ipHostsAliveFirstIfIndex",
    "oid": "1.3.6.1.4.1.272.4.5.19.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The first ifc"
  },
  "ipHostsAliveRange": {
    "name": "ipHostsAliveRange",
    "oid": "1.3.6.1.4.1.272.4.5.19.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65536
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The range of all ifcs"
  },
  "ipBodRuleTable": {
    "name": "ipBodRuleTable",
    "oid": "1.3.6.1.4.1.272.4.5.21",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The ipBodRuleTable defines access rules for checking incoming IP packets. The rules are processed in order, i.e. each rule has a link to the next rule. The set of rules is processed until a match occurs, that means the rule's associated filter matches and the specified action is performed (either request or deny additional bandwidth). The last rule is implicitly a deny rule. The set of rules to be processed can be defined for each interface."
  },
  "ipBodRuleEntry": {
    "name": "ipBodRuleEntry",
    "oid": "1.3.6.1.4.1.272.4.5.21.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipBodRuleFilterIndex",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ipBodRuleIndex": {
    "name": "ipBodRuleIndex",
    "oid": "1.3.6.1.4.1.272.4.5.21.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Unique rule index."
  },
  "ipBodRuleFilterIndex": {
    "name": "ipBodRuleFilterIndex",
    "oid": "1.3.6.1.4.1.272.4.5.21.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "References the rule's associated filter."
  },
  "ipBodRuleAction": {
    "name": "ipBodRuleAction",
    "oid": "1.3.6.1.4.1.272.4.5.21.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "invoke": 1,
          "invoke-if-not": 2,
          "deny": 3,
          "deny-if-not": 4,
          "ignore": 5,
          "delete": 6
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the action to be performed if the rule's associated filter matches. If set to ignore the filter is not consulted and the next rule is processed immediately."
  },
  "ipBodRuleDirection": {
    "name": "ipBodRuleDirection",
    "oid": "1.3.6.1.4.1.272.4.5.21.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "outgoing": 1,
          "incoming": 2,
          "both": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the direction of the packets for which the rule is processed."
  },
  "ipBodRuleChannels": {
    "name": "ipBodRuleChannels",
    "oid": "1.3.6.1.4.1.272.4.5.21.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of B-channels to invoke if the rule's associated filter matches."
  },
  "ipBodRuleNextRuleIndex": {
    "name": "ipBodRuleNextRuleIndex",
    "oid": "1.3.6.1.4.1.272.4.5.21.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Specifies the next rule to be processed if the rule's associated filter does not match. The value 0 is used to mark the end of the rule set."
  },
  "ipBodRuleIdleTime": {
    "name": "ipBodRuleIdleTime",
    "oid": "1.3.6.1.4.1.272.4.5.21.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -1,
            "max": 3600
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Specifies the time in seconds the interface-specific shorthold interval (see biboPPPTable) is extended if the rule's associated filter matches. When set to zero this setting is ignored. When set to -1 matching packets are sent piggyback, they are not considered for shorthold mode."
  },
  "ipQoSTable": {
    "name": "ipQoSTable",
    "oid": "1.3.6.1.4.1.272.4.5.22",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "The ipQosTable defines the classifier rules that are applied to IP traffic arriving this interface in a particular direction. The rules are processed in order, i.e. each rule has a link to the next rule. The set of rules is processed until a match occurs, that means the rule's associated filter matches and the specified action is performed (set the IP headers TOS field, specify a service class for QoS). The set of these rules to be processed can be defined for each interface."
  },
  "ipQoSEntry": {
    "name": "ipQoSEntry",
    "oid": "1.3.6.1.4.1.272.4.5.22.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "BIANCA-BRICK-IP-MIB",
        "object": "ipQoSFilterIndex",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "ipQoSIndex": {
    "name": "ipQoSIndex",
    "oid": "1.3.6.1.4.1.272.4.5.22.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Unique rule index."
  },
  "ipQoSFilterIndex": {
    "name": "ipQoSFilterIndex",
    "oid": "1.3.6.1.4.1.272.4.5.22.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "References the associated filter (see IpFilterTable)."
  },
  "ipQoSNextRuleIndex": {
    "name": "ipQoSNextRuleIndex",
    "oid": "1.3.6.1.4.1.272.4.5.22.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Specifies the next classifier rule to be processed if the rule's associated filter does not match. The value 0 is used to mark the end of the rule set."
  },
  "ipQoSAction": {
    "name": "ipQoSAction",
    "oid": "1.3.6.1.4.1.272.4.5.22.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "classify": 1,
          "classify-if-not": 2,
          "disabled": 3,
          "delete": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the action to be performed if the associated filter matches. If set to ignore the filter is not consulted and the next rule is processed immediately, possible values: classify(1) = filter matches, set TOS & classify packet classify-if-not(2) = classify if filter doesn't match disabled(3) = ignore rule and skip to next rule delete(4) = delete the entry from the table."
  },
  "ipQoSTos": {
    "name": "ipQoSTos",
    "oid": "1.3.6.1.4.1.272.4.5.22.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Value for TOS field inside IP header to be set."
  },
  "ipQoSTosSetRate": {
    "name": "ipQoSTosSetRate",
    "oid": "1.3.6.1.4.1.272.4.5.22.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Maximum amount of packets per second that should be TOS changed."
  },
  "ipQoSTosSetBurst": {
    "name": "ipQoSTosSetBurst",
    "oid": "1.3.6.1.4.1.272.4.5.22.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Maximum amount of packets per second additional to the ipQosSetRate that could be TOS changed."
  },
  "ipQoSServiceClass": {
    "name": "ipQoSServiceClass",
    "oid": "1.3.6.1.4.1.272.4.5.22.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "high-priority": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipQoSClassId the class of service used for the congestion management, priorization and traffic shapping. If set to high-priority(2) (high priority service class) the related traffic will be always handled first and ipQoSClassId is ignored."
  },
  "ipQoSClassId": {
    "name": "ipQoSClassId",
    "oid": "1.3.6.1.4.1.272.4.5.22.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies together with ipQoSServiceClass (normal(1) only) the class of service used for congestion avoidance, congestion management, priorization and traffic shapping. Note that this ID is not used to give a nominal priority to the related IP traffic."
  },
  "ipQoSDirection": {
    "name": "ipQoSDirection",
    "oid": "1.3.6.1.4.1.272.4.5.22.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "outgoing": 1,
          "incoming": 2,
          "both": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies the direction for witch this classifier rule applies on this interface, possible values: outgoing(1) = used for outgoing packets only incoming(2) = used for incoming packets only both(3) = used for both directions."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/BIANCA-BRICK-IP-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 19:47:53 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "BIANCA-BRICK-IP-MIB"
  }
}