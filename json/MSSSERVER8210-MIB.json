{
  "imports": {
    "class": "imports",
    "PROTEON-MIB": [
      "proElsSubSysEventMsg"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "MibIdentifier",
      "IpAddress",
      "TRAP-TYPE",
      "OBJECT-TYPE",
      "iso",
      "Integer32",
      "Unsigned32",
      "NOTIFICATION-TYPE",
      "Counter64",
      "Counter32",
      "Bits",
      "Gauge32",
      "enterprises",
      "OBJECT-IDENTITY",
      "MODULE-IDENTITY",
      "TimeTicks"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "ibm": {
    "name": "ibm",
    "oid": "1.3.6.1.4.1.2",
    "class": "objectidentity"
  },
  "ibmProd": {
    "name": "ibmProd",
    "oid": "1.3.6.1.4.1.2.6",
    "class": "objectidentity"
  },
  "nwaysMSS": {
    "name": "nwaysMSS",
    "oid": "1.3.6.1.4.1.2.6.118",
    "class": "objectidentity"
  },
  "mssServer8210": {
    "name": "mssServer8210",
    "oid": "1.3.6.1.4.1.2.6.118.2",
    "class": "objectidentity"
  },
  "mss8210Prod": {
    "name": "mss8210Prod",
    "oid": "1.3.6.1.4.1.2.6.118.2.1",
    "class": "objectidentity"
  },
  "mss8210PCAdapter": {
    "name": "mss8210PCAdapter",
    "oid": "1.3.6.1.4.1.2.6.118.2.2",
    "class": "objectidentity"
  },
  "mss8210PCIAdapter": {
    "name": "mss8210PCIAdapter",
    "oid": "1.3.6.1.4.1.2.6.118.2.3",
    "class": "objectidentity"
  },
  "mss8210ResetFlag": {
    "name": "mss8210ResetFlag",
    "oid": "1.3.6.1.4.1.2.6.118.2.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noreset": 1,
          "reboot": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "noreset",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The flag that controls the reset process in this stand-alone. This variable shall assume a value of noreset(1) in the absence of a request for a reset from the management application. This variable shall assume a value of reboot(2) if the management application requests that this stand-alone execute a complete hardware reboot which reloads the code load from storage."
  },
  "mss8210DRAMinstalled": {
    "name": "mss8210DRAMinstalled",
    "oid": "1.3.6.1.4.1.2.6.118.2.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total amount of dynamic RAM installed on this stand-alone. The amount is in units of megabytes."
  },
  "mss8210NotifyStatus": {
    "name": "mss8210NotifyStatus",
    "oid": "1.3.6.1.4.1.2.6.118.2.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "enabled",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status of the trap reporting service in this stand-alone. This variable shall assume a value of enabled(1) if this stand-alone is permitted to send traps. This variable shall assume a value of disabled(2) if this stand-alone is prohibited from sending traps."
  },
  "mss8210TempThresholdStatus": {
    "name": "mss8210TempThresholdStatus",
    "oid": "1.3.6.1.4.1.2.6.118.2.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "warning": 2,
          "shutdown": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The status of the temperature in this stand-alone. This variable shall assume a value of normal(1) if the temperature is within proper operating range for this stand-alone. This variable shall assume a value of warning(2) if the temperature becomes elevated but this stand-alone can still operate. This variable shall assume a value of shutdown(3) if the temperature is beyond the operating limits of this stand-alone."
  },
  "mss8210PCAdapNumSlot": {
    "name": "mss8210PCAdapNumSlot",
    "oid": "1.3.6.1.4.1.2.6.118.2.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of PC adapter slots available for this stand-alone."
  },
  "mss8210PCAdapTable": {
    "name": "mss8210PCAdapTable",
    "oid": "1.3.6.1.4.1.2.6.118.2.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of PC adapters entries. The number of entries is given by the value of mss8210PCAdapNumSlot."
  },
  "mss8210PCAdapEntry": {
    "name": "mss8210PCAdapEntry",
    "oid": "1.3.6.1.4.1.2.6.118.2.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MSSSERVER8210-MIB",
        "object": "mss8210PCAdapSlotNum",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A PC adapter entry containing objects to describe the operational aspects of the PC adapter on this stand-alone."
  },
  "mss8210PCAdapSlotNum": {
    "name": "mss8210PCAdapSlotNum",
    "oid": "1.3.6.1.4.1.2.6.118.2.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The relative slot location at which the adapter is attached to this stand-alone. The slots are numbered from 1 to 2 (left to right) when facing this stand-alone. This variable serves as the index for the mss8210PCAdapTable."
  },
  "mss8210PCAdapType": {
    "name": "mss8210PCAdapType",
    "oid": "1.3.6.1.4.1.2.6.118.2.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "harddrive": 2,
          "modem": 3,
          "notPresent": 4,
          "flashcard": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The type of PC adapter that is inserted into this slot. The variable shall assume a value of unknown(1) if the adapter in the slot is not supported by this stand-alone. The variable shall assume a value of harddrive(2) if the slot contains a PC disk drive. The variable shall assume a value of modem(3) if the slot contains a PC data/fax/voice modem. The variable shall assume a value of flashcard(5) if the slot contains a PC flash card. This variable shall assume a value of notPresent(4), when a PC card is not plugged into the corrisponding slot. "
  },
  "mss8210PCIAdapNumSlot": {
    "name": "mss8210PCIAdapNumSlot",
    "oid": "1.3.6.1.4.1.2.6.118.2.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of PCI adapter slots available for this stand-alone."
  },
  "mss8210PCIAdapTable": {
    "name": "mss8210PCIAdapTable",
    "oid": "1.3.6.1.4.1.2.6.118.2.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table of PCI adapters entries. The number of entries is given by the value of mss8210PCIAdapNumSlot."
  },
  "mss8210PCIAdapEntry": {
    "name": "mss8210PCIAdapEntry",
    "oid": "1.3.6.1.4.1.2.6.118.2.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MSSSERVER8210-MIB",
        "object": "mss8210PCIAdapSlotNum",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A PCI adapter entry containing objects to describe the operational aspects of the PCI adapter on this stand-alone."
  },
  "mss8210PCIAdapSlotNum": {
    "name": "mss8210PCIAdapSlotNum",
    "oid": "1.3.6.1.4.1.2.6.118.2.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The relative slot location at which the adapter is attached to this stand-alone. Slots are numbered from 1 to 2 (top to bottom) when facing this stand-alone. This variable serves as the index for the mss8210PCIAdapTable."
  },
  "mss8210PCIAdapType": {
    "name": "mss8210PCIAdapType",
    "oid": "1.3.6.1.4.1.2.6.118.2.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "atm": 2,
          "fddi": 3,
          "notPresent": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The type of PCI adapter that is inserted into this slot. This variable shall assume a value of unknown(1) if the mss8210PCIAdapConfigType is not-configured(1) or if the mss8210PCIAdapConfigType is atm(2) and the mss8210PCIAdapOperStatus has a value of unknown(1), not-configured(2), not-present(3), unavailable(4), does-not_apply(5) or miss-configured(10). The variable shall assume a value of atm(2) if the mss8210PCIAdapConfigType has a value of atm(2) and the mss8210PCIAdapOperStatus has a value of enabled-pending(6), enabled(7), disabled-pending(8) or disabled(9). The variable shall assume a value of fddi(3) if the mss8210PCIAdapConfigType has a value of fddi(3) and the mss8210PCIAdapOperStatus has a value of enabled-pending(6), enabled(7), disabled-pending(8) or disabled(9). This variable shall assue a value of notPresent(4), when a PCI card is not plugged into the corrisponding slot. "
  },
  "mss8210PCIAdapConfigType": {
    "name": "mss8210PCIAdapConfigType",
    "oid": "1.3.6.1.4.1.2.6.118.2.3.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "not-configured": 1,
          "atm": 2,
          "fddi": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The router configuration type for this slot. The configuration type originates from the configuration tool used for this stand-alone. The variable shall assume a value of not-configured(1) if no configuration exist for this slot. The variable shall assume a value of atm(2) if the slot is configured for an ATM adapter. The variable shall assume a value of fddi(3) if the slot is configured for an FDDI adapter."
  },
  "mss8210PCIAdapOperStatus": {
    "name": "mss8210PCIAdapOperStatus",
    "oid": "1.3.6.1.4.1.2.6.118.2.3.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "not-configured": 2,
          "not-present": 3,
          "unavailable": 4,
          "does-not-apply": 5,
          "enable-pending": 6,
          "enabled": 7,
          "disable-pending": 8,
          "disabled": 9,
          "miss-configured": 10
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The operational status of this PCI adapter on this stand-alone. The variable shall assume a value of unknown(1) if the adapter inserted in the slot can not be recognized. The variable shall assume a value of not-configured(2) if the adapter inserted in the slot is recognized but no router configuration exists. The variable shall assume a value of not-present(3) if the adapter is not inserted in the slot but the router configuration exists. The variable shall assume a value of unavailable(4) if adapter inserted in the slot can not be used nor made ready to be used; for example, a hardware error. The variable shall assume a value of does-not-apply(5) if this adapter does not contain an operational state. The variable shall assume a value of enable-pending(6) if commands have been issued to enable the adapter but have not been completed. The variable shall assume a value of enabled(7) if commands have been successfully issued to enable the adapter. The variable shall assume a value of disable-pending(8) if commands have been issued to disable the adapter but have not been completed. The variable shall assume a value of disabled(9) if commands have been successfully issued to disable the adapter. The variable shall assume a value of miss-configured(10) if the adapter is inserted in the slot but the router configuration is of a different type."
  },
  "mss8210PCIAdapDiagStatus": {
    "name": "mss8210PCIAdapDiagStatus",
    "oid": "1.3.6.1.4.1.2.6.118.2.3.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "auto": 1,
          "inactive": 2,
          "idle": 3,
          "active": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The diagnostic status of this PCI adapter on this stand-alone. The variable shall assume a value of auto(1) if commands have been issued by the system to determine the status of the adapter; for example, at initialization. The variable shall assume a value of inactive(2) if the adapter is not currently running any diagnostics. The variable shall assume a value of idle(3) if the adapter is in the disabled operational state ready to run the diagnostics. The variable shall assume a value of active(4) if commands have been issued by the user to run the diagnostics."
  },
  "mss8210PCIAdapNetworkStatus": {
    "name": "mss8210PCIAdapNetworkStatus",
    "oid": "1.3.6.1.4.1.2.6.118.2.3.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "up": 2,
          "down": 3,
          "testing": 4,
          "does-not-apply": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The network status of this PCI adapter on this stand-alone. The variable shall assume a value of up(1) if the adapter is connected to the network. The variable shall assume a value of down(3) if the adapter can not verify a network connection. The variable shall assume a value of testing(4) if the adapter is running tests for the network connection. The variable shall assume a value of unknown(1) if network status can not be determined. The variable shall assume a value of does-not-apply(5) if the adapter does not contain a network state."
  },
  "mss8210PCIAdapFaultStatus": {
    "name": "mss8210PCIAdapFaultStatus",
    "oid": "1.3.6.1.4.1.2.6.118.2.3.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "no-fault": 2,
          "isolated": 3,
          "non-isolated": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The fault status of this PCI adapter on this stand-alone. The variable shall assume a value of no-fault(2) if no fault that is associated with this adapter has been detected. The variable shall assume a value of isolated(3) if this fault that can be isolated on the adapter itself. The variable shall assume a value of non-isolated(4) if the fault can not isolated on the adapter or in the network. The variable shall assume a value of unknown(1) if the fault status has not been determined; for example, at initialization."
  },
  "mssServer8210ELSTrapV2": {
    "name": "mssServer8210ELSTrapV2",
    "oid": "1.3.6.1.4.1.2.6.118.20.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "PROTEON-MIB",
        "object": "proElsSubSysEventMsg"
      }
    ],
    "description": "The trap announces that an Event Logging System (ELS) event occurred. The variable proElsSubSysEventMsg provides a textual description of the event. The variable is in one of two formats. If ELS timestamping is enabled, the format is hr:min:sec subsys_name.event_num: message_text. An example would be 09:32:56 IP.008: no rte 9.7.1.8 -> 9.7.4.3 dsc. If ELS timestamping is disabled, the format is subsys_name.event_num: message_text. An example would be IP.008: no rte 9.7.1.8 -> 9.7.4.3 dsc."
  },
  "mss8210PCAdapTypeChg": {
    "name": "mss8210PCAdapTypeChg",
    "oid": "1.3.6.1.4.1.2.6.118.20.3",
    "class": "notificationtype",
    "objects": [
      {
        "module": "MSSSERVER8210-MIB",
        "object": "mss8210PCAdapType"
      }
    ],
    "description": "The trap announces a change in the type of PC card. It shall be sent if the value of the mss8210PCAdapType changes and mss8210NotifyStatus has a value of enabled(1)."
  },
  "mss8210TempThresholdChg": {
    "name": "mss8210TempThresholdChg",
    "oid": "1.3.6.1.4.1.2.6.118.20.4",
    "class": "notificationtype",
    "objects": [
      {
        "module": "MSSSERVER8210-MIB",
        "object": "mss8210TempThresholdStatus"
      }
    ],
    "description": "The trap announces a change in the temperature of the stand-alone. It shall be sent if the value of the mss8210TempThreshold changes and mss8210NotifyStatus has a value of enabled(1)."
  },
  "mss8210PCIAdapStatusChg": {
    "name": "mss8210PCIAdapStatusChg",
    "oid": "1.3.6.1.4.1.2.6.118.20.5",
    "class": "notificationtype",
    "objects": [
      {
        "module": "MSSSERVER8210-MIB",
        "object": "mss8210PCIAdapConfigType"
      },
      {
        "module": "MSSSERVER8210-MIB",
        "object": "mss8210PCIAdapOperStatus"
      },
      {
        "module": "MSSSERVER8210-MIB",
        "object": "mss8210PCIAdapDiagStatus"
      },
      {
        "module": "MSSSERVER8210-MIB",
        "object": "mss8210PCIAdapNetworkStatus"
      },
      {
        "module": "MSSSERVER8210-MIB",
        "object": "mss8210PCIAdapFaultStatus"
      }
    ],
    "description": "The trap announces a change in the status of the PCI adapter. It shall be sent if the value of either mss8210PCIAdapConfigType, mss8210PCIAdapOperStatus, mss8210PCIAdapDiagStatus, mss8210PCIAdapNetworkStatus or mss8210PCIAdapFaultStatus changes and mss8210NotifyStatus has a value of enabled(1)."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/MSSSERVER8210-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 17:09:52 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "MSSSERVER8210-MIB"
  }
}