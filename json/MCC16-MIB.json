{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "TRAP-TYPE",
      "Unsigned32",
      "OBJECT-TYPE",
      "TimeTicks",
      "MibIdentifier",
      "Counter32",
      "NOTIFICATION-TYPE",
      "OBJECT-IDENTITY",
      "IpAddress",
      "Gauge32",
      "iso",
      "Bits",
      "Counter64",
      "Integer32",
      "MODULE-IDENTITY",
      "enterprises"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "PhysAddress",
      "TEXTUAL-CONVENTION"
    ]
  },
  "MacAddress": {
    "name": "MacAddress",
    "class": "type",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 6
          }
        ]
      }
    }
  },
  "CpsConnector": {
    "name": "CpsConnector",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "rj-45": 10,
          "stmm": 11,
          "stsm": 12,
          "scmm": 13,
          "scsm": 14,
          "scsmlh": 15,
          "scsmelh": 16,
          "scsmlhlw": 17,
          "mtrjmm": 18,
          "lc": 19,
          "bnc": 20,
          "stsmlh": 21,
          "stsmelh": 22,
          "scmm1300": 23,
          "stmm1300": 24,
          "mtrjsm": 25,
          "serial26": 26,
          "stmmlh": 27,
          "scsmsh": 28,
          "scsimplex": 29,
          "bncdual": 30,
          "db9rsxxx": 31,
          "termblock": 32,
          "rj11": 33,
          "sc40km": 34,
          "sc125km": 35
        }
      }
    }
  },
  "transition": {
    "name": "transition",
    "oid": "1.3.6.1.4.1.868",
    "class": "objectidentity"
  },
  "productId": {
    "name": "productId",
    "oid": "1.3.6.1.4.1.868.1",
    "class": "objectidentity"
  },
  "chassisProdsId": {
    "name": "chassisProdsId",
    "oid": "1.3.6.1.4.1.868.1.4",
    "class": "objectidentity"
  },
  "chassisSlotTypes": {
    "name": "chassisSlotTypes",
    "oid": "1.3.6.1.4.1.868.1.4.1",
    "class": "objectidentity"
  },
  "chSlMc20p": {
    "name": "chSlMc20p",
    "oid": "1.3.6.1.4.1.868.1.4.1.1",
    "class": "objectidentity"
  },
  "chSlcps": {
    "name": "chSlcps",
    "oid": "1.3.6.1.4.1.868.1.4.1.2",
    "class": "objectidentity"
  },
  "chassisMcc16Id": {
    "name": "chassisMcc16Id",
    "oid": "1.3.6.1.4.1.868.1.4.2",
    "class": "objectidentity"
  },
  "products": {
    "name": "products",
    "oid": "1.3.6.1.4.1.868.2",
    "class": "objectidentity"
  },
  "ceTbtFrl03Id": {
    "name": "ceTbtFrl03Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.1",
    "class": "objectidentity"
  },
  "ceCxTbt04Id": {
    "name": "ceCxTbt04Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.2",
    "class": "objectidentity"
  },
  "ceCxFrl04Id": {
    "name": "ceCxFrl04Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.3",
    "class": "objectidentity"
  },
  "cfSmMm02Id": {
    "name": "cfSmMm02Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.4",
    "class": "objectidentity"
  },
  "cfSmMm05Id": {
    "name": "cfSmMm05Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.5",
    "class": "objectidentity"
  },
  "caCf02Id": {
    "name": "caCf02Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.6",
    "class": "objectidentity"
  },
  "cfSmMm06Id": {
    "name": "cfSmMm06Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.7",
    "class": "objectidentity"
  },
  "ct1e1Cf01Id": {
    "name": "ct1e1Cf01Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.8",
    "class": "objectidentity"
  },
  "ceRTxFx01Id": {
    "name": "ceRTxFx01Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.9",
    "class": "objectidentity"
  },
  "ce100BtxFx04Id": {
    "name": "ce100BtxFx04Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.10",
    "class": "objectidentity"
  },
  "cpsCf01Id": {
    "name": "cpsCf01Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.12",
    "class": "objectidentity"
  },
  "cbCf01Id": {
    "name": "cbCf01Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.13",
    "class": "objectidentity"
  },
  "carCf01Id": {
    "name": "carCf01Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.14",
    "class": "objectidentity"
  },
  "carCf02Id": {
    "name": "carCf02Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.15",
    "class": "objectidentity"
  },
  "cePswFx03Id": {
    "name": "cePswFx03Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.16",
    "class": "objectidentity"
  },
  "cePswSx01Id": {
    "name": "cePswSx01Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.17",
    "class": "objectidentity"
  },
  "cRs232Cf01Id": {
    "name": "cRs232Cf01Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.18",
    "class": "objectidentity"
  },
  "cfSmMm04Id": {
    "name": "cfSmMm04Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.24",
    "class": "objectidentity"
  },
  "ce100BtxSx01Id": {
    "name": "ce100BtxSx01Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.26",
    "class": "objectidentity"
  },
  "ce100BtxFx04MtId": {
    "name": "ce100BtxFx04MtId",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.27",
    "class": "objectidentity"
  },
  "cfdCd01Id": {
    "name": "cfdCd01Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.28",
    "class": "objectidentity"
  },
  "ctrCf01Id": {
    "name": "ctrCf01Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.29",
    "class": "objectidentity"
  },
  "ce100BtxFrl03Id": {
    "name": "ce100BtxFrl03Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.30",
    "class": "objectidentity"
  },
  "mc20pEmptyId": {
    "name": "mc20pEmptyId",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.31",
    "class": "objectidentity"
  },
  "mc20pErrorId": {
    "name": "mc20pErrorId",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.32",
    "class": "objectidentity"
  },
  "mc20pDblWideId": {
    "name": "mc20pDblWideId",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.33",
    "class": "objectidentity"
  },
  "chstrCf01Id": {
    "name": "chstrCf01Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.34",
    "class": "objectidentity"
  },
  "ceTxSx02Id": {
    "name": "ceTxSx02Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.35",
    "class": "objectidentity"
  },
  "ceTbtFrl04Id": {
    "name": "ceTbtFrl04Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.1.36",
    "class": "objectidentity"
  },
  "cpsmM100Id": {
    "name": "cpsmM100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.1",
    "class": "objectidentity"
  },
  "cpsmM200Id": {
    "name": "cpsmM200Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.2",
    "class": "objectidentity"
  },
  "cettf100Id": {
    "name": "cettf100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.3",
    "class": "objectidentity"
  },
  "cfetf100Id": {
    "name": "cfetf100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.4",
    "class": "objectidentity"
  },
  "cfmff100Id": {
    "name": "cfmff100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.5",
    "class": "objectidentity"
  },
  "cpsmp100Id": {
    "name": "cpsmp100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.6",
    "class": "objectidentity"
  },
  "csetf100Id": {
    "name": "csetf100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.7",
    "class": "objectidentity"
  },
  "cgetf100Id": {
    "name": "cgetf100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.8",
    "class": "objectidentity"
  },
  "csdtf100Id": {
    "name": "csdtf100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.9",
    "class": "objectidentity"
  },
  "cpsmp110Id": {
    "name": "cpsmp110Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.10",
    "class": "objectidentity"
  },
  "cbftf100Id": {
    "name": "cbftf100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.11",
    "class": "objectidentity"
  },
  "cetct100Id": {
    "name": "cetct100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.12",
    "class": "objectidentity"
  },
  "ccscf100Id": {
    "name": "ccscf100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.13",
    "class": "objectidentity"
  },
  "cfetf105Id": {
    "name": "cfetf105Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.14",
    "class": "objectidentity"
  },
  "smacf100PId": {
    "name": "smacf100PId",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.15",
    "class": "objectidentity"
  },
  "cpsld100Id": {
    "name": "cpsld100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.16",
    "class": "objectidentity"
  },
  "cdftf100Id": {
    "name": "cdftf100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.17",
    "class": "objectidentity"
  },
  "cpsvt100Id": {
    "name": "cpsvt100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.18",
    "class": "objectidentity"
  },
  "cemtf100Id": {
    "name": "cemtf100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.19",
    "class": "objectidentity"
  },
  "captf100Id": {
    "name": "captf100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.20",
    "class": "objectidentity"
  },
  "cfetf205Id": {
    "name": "cfetf205Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.21",
    "class": "objectidentity"
  },
  "cbftf150Id": {
    "name": "cbftf150Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.22",
    "class": "objectidentity"
  },
  "cgfeb100Id": {
    "name": "cgfeb100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.23",
    "class": "objectidentity"
  },
  "crmfe100Id": {
    "name": "crmfe100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.24",
    "class": "objectidentity"
  },
  "crs2f100Id": {
    "name": "crs2f100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.25",
    "class": "objectidentity"
  },
  "crs4f100Id": {
    "name": "crs4f100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.26",
    "class": "objectidentity"
  },
  "cmefg100Id": {
    "name": "cmefg100Id",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.27",
    "class": "objectidentity"
  },
  "cpsEmptyId": {
    "name": "cpsEmptyId",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.1001",
    "class": "objectidentity"
  },
  "cpsDblWideId": {
    "name": "cpsDblWideId",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.1002",
    "class": "objectidentity"
  },
  "cpsUnknownDeviceId": {
    "name": "cpsUnknownDeviceId",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.1003",
    "class": "objectidentity"
  },
  "chassis": {
    "name": "chassis",
    "oid": "1.3.6.1.4.1.868.2.4",
    "class": "objectidentity"
  },
  "card": {
    "name": "card",
    "oid": "1.3.6.1.4.1.868.2.4.1",
    "class": "objectidentity"
  },
  "slotMc20p": {
    "name": "slotMc20p",
    "oid": "1.3.6.1.4.1.868.2.4.1.1",
    "class": "objectidentity"
  },
  "slotCps": {
    "name": "slotCps",
    "oid": "1.3.6.1.4.1.868.2.4.1.2",
    "class": "objectidentity"
  },
  "backplane": {
    "name": "backplane",
    "oid": "1.3.6.1.4.1.868.2.4.2",
    "class": "objectidentity"
  },
  "mcc16": {
    "name": "mcc16",
    "oid": "1.3.6.1.4.1.868.2.4.2.1",
    "class": "objectidentity"
  },
  "mcc16Common": {
    "name": "mcc16Common",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.1",
    "class": "objectidentity"
  },
  "mcc16Ver1": {
    "name": "mcc16Ver1",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.2",
    "class": "objectidentity"
  },
  "cps": {
    "name": "cps",
    "oid": "1.3.6.1.4.1.868.2.4.2.2",
    "class": "objectidentity"
  },
  "cpsSlotSummary": {
    "name": "cpsSlotSummary",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.1",
    "class": "objectidentity"
  },
  "cpsSlotDetail": {
    "name": "cpsSlotDetail",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2",
    "class": "objectidentity"
  },
  "chassisCpsmc1800Id": {
    "name": "chassisCpsmc1800Id",
    "oid": "1.3.6.1.4.1.868.1.4.3",
    "class": "objectidentity"
  },
  "chassisCpsmc1850Id": {
    "name": "chassisCpsmc1850Id",
    "oid": "1.3.6.1.4.1.868.1.4.4",
    "class": "objectidentity"
  },
  "chassisCpsmc0800Id": {
    "name": "chassisCpsmc0800Id",
    "oid": "1.3.6.1.4.1.868.1.4.5",
    "class": "objectidentity"
  },
  "chassisCpsmc1300Id": {
    "name": "chassisCpsmc1300Id",
    "oid": "1.3.6.1.4.1.868.1.4.6",
    "class": "objectidentity"
  },
  "chassisCpsmc0200Id": {
    "name": "chassisCpsmc0200Id",
    "oid": "1.3.6.1.4.1.868.1.4.7",
    "class": "objectidentity"
  },
  "chassisSmacf100LCId": {
    "name": "chassisSmacf100LCId",
    "oid": "1.3.6.1.4.1.868.1.4.8",
    "class": "objectidentity"
  },
  "chassisCpsmc1900Id": {
    "name": "chassisCpsmc1900Id",
    "oid": "1.3.6.1.4.1.868.1.4.9",
    "class": "objectidentity"
  },
  "chassisSmacf100Id": {
    "name": "chassisSmacf100Id",
    "oid": "1.3.6.1.4.1.868.1.4.10",
    "class": "objectidentity"
  },
  "cpsCabSummary": {
    "name": "cpsCabSummary",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.1",
    "class": "objectidentity"
  },
  "cpsCabDetail": {
    "name": "cpsCabDetail",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2",
    "class": "objectidentity"
  },
  "cpsAgent": {
    "name": "cpsAgent",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.3",
    "class": "objectidentity"
  },
  "ceTbtFrl03Table": {
    "name": "ceTbtFrl03Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/E-TBT-FRL-03 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "ceTbtFrl03Entry": {
    "name": "ceTbtFrl03Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "ceTbtFrl03Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/E-TBT-FRL-03"
  },
  "ceTbtFrl03Index": {
    "name": "ceTbtFrl03Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "ceTbtFrl03FiberRecv": {
    "name": "ceTbtFrl03FiberRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Receive LED"
  },
  "ceTbtFrl03FiberLink": {
    "name": "ceTbtFrl03FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Link LED"
  },
  "ceTbtFrl03TPRecv": {
    "name": "ceTbtFrl03TPRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Receive LED"
  },
  "ceTbtFrl03TPLink": {
    "name": "ceTbtFrl03TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Link LED"
  },
  "ceTbtFrl03Power": {
    "name": "ceTbtFrl03Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "ceCxTbt04Table": {
    "name": "ceCxTbt04Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/E-CX-TBT-04 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "ceCxTbt04Entry": {
    "name": "ceCxTbt04Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "ceCxTbt04Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/E-CX-TBT-04"
  },
  "ceCxTbt04Index": {
    "name": "ceCxTbt04Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "ceCxTbt04Jabber": {
    "name": "ceCxTbt04Jabber",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Jabber LED"
  },
  "ceCxTbt04CoaxRecv": {
    "name": "ceCxTbt04CoaxRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's CoaxRecv LED"
  },
  "ceCxTbt04TPRecv": {
    "name": "ceCxTbt04TPRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's TPRecv LED"
  },
  "ceCxTbt04TPLink": {
    "name": "ceCxTbt04TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's TPLink LED"
  },
  "ceCxTbt04Power": {
    "name": "ceCxTbt04Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "ceCxFrl04Table": {
    "name": "ceCxFrl04Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/E-CX-FRL-04 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "ceCxFrl04Entry": {
    "name": "ceCxFrl04Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "ceCxFrl04Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/E-CX-FRL-04"
  },
  "ceCxFrl04Index": {
    "name": "ceCxFrl04Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "ceCxFrl04Jabber": {
    "name": "ceCxFrl04Jabber",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Jabber LED"
  },
  "ceCxFrl04CoaxRecv": {
    "name": "ceCxFrl04CoaxRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's CoaxRecv LED"
  },
  "ceCxFrl04FLRecv": {
    "name": "ceCxFrl04FLRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's FLRecv LED"
  },
  "ceCxFrl04FLLink": {
    "name": "ceCxFrl04FLLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's FLLink LED"
  },
  "ceCxFrl04Power": {
    "name": "ceCxFrl04Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "cfSmMm02Table": {
    "name": "cfSmMm02Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/F-SM-MM-02 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "cfSmMm02Entry": {
    "name": "cfSmMm02Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cfSmMm02Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/F-SM-MM-02"
  },
  "cfSmMm02Index": {
    "name": "cfSmMm02Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "cfSmMm02MMSignalDetect": {
    "name": "cfSmMm02MMSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's MMSignalDetect LED"
  },
  "cfSmMm02SMSignalDetect": {
    "name": "cfSmMm02SMSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's SMSignalDetect LED"
  },
  "cfSmMm02Power": {
    "name": "cfSmMm02Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "cfSmMm05Table": {
    "name": "cfSmMm05Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/F-SM-MM-05 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "cfSmMm05Entry": {
    "name": "cfSmMm05Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cfSmMm05Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/F-SM-MM-05"
  },
  "cfSmMm05Index": {
    "name": "cfSmMm05Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "cfSmMm05SMSignalDetect": {
    "name": "cfSmMm05SMSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's SMSignalDetect LED"
  },
  "cfSmMm05MMSignalDetect": {
    "name": "cfSmMm05MMSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's MMSignalDetect LED"
  },
  "cfSmMm05Power": {
    "name": "cfSmMm05Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "caCf02Table": {
    "name": "caCf02Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/A-CF-02 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "caCf02Entry": {
    "name": "caCf02Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "caCf02Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/A-CF-02"
  },
  "caCf02Index": {
    "name": "caCf02Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "caCf02CopperSignalDetect": {
    "name": "caCf02CopperSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's CopperSignalDetect LED"
  },
  "caCf02FiberSignalDetect": {
    "name": "caCf02FiberSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's FiberSignalDetect LED"
  },
  "caCf02Power": {
    "name": "caCf02Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "cfSmMm06Table": {
    "name": "cfSmMm06Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/F-SM-MM-06 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "cfSmMm06Entry": {
    "name": "cfSmMm06Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.7.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cfSmMm06Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/F-SM-MM-06"
  },
  "cfSmMm06Index": {
    "name": "cfSmMm06Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.7.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "cfSmMm06MMSignalDetect": {
    "name": "cfSmMm06MMSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.7.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's MMSignalDetect LED"
  },
  "cfSmMm06SMSignalDetect": {
    "name": "cfSmMm06SMSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.7.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's SMSignalDetect LED"
  },
  "cfSmMm06Power": {
    "name": "cfSmMm06Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.7.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "ct1e1Cf01Table": {
    "name": "ct1e1Cf01Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.8",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/T1E1-CF-01 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "ct1e1Cf01Entry": {
    "name": "ct1e1Cf01Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.8.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "ct1e1Cf01Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/T1E1-CF-01"
  },
  "ct1e1Cf01Index": {
    "name": "ct1e1Cf01Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.8.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "ct1e1Cf01CopperSignalDetect": {
    "name": "ct1e1Cf01CopperSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.8.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's CopperSignalDetect LED"
  },
  "ct1e1Cf01FiberSignalDetect": {
    "name": "ct1e1Cf01FiberSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.8.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's FiberSignalDetect LED"
  },
  "ct1e1Cf01CoaxActive": {
    "name": "ct1e1Cf01CoaxActive",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.8.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Coax Active LED"
  },
  "ceRTxFx01Table": {
    "name": "ceRTxFx01Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.9",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/E-R-TX-FX-01 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "ceRTxFx01Entry": {
    "name": "ceRTxFx01Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.9.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "ceRTxFx01Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/E-R-TX-FX-01"
  },
  "ceRTxFx01Index": {
    "name": "ceRTxFx01Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.9.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "ceRTxFx01TPPrimary": {
    "name": "ceRTxFx01TPPrimary",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.9.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Primary LED"
  },
  "ceRTxFx01FiberPrimary": {
    "name": "ceRTxFx01FiberPrimary",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.9.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Primary LED"
  },
  "ceRTxFx01TPSignalDetect": {
    "name": "ceRTxFx01TPSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.9.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Signal Detect LED"
  },
  "ceRTxFx01FiberSignalDetect": {
    "name": "ceRTxFx01FiberSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.9.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Signal Detect LED"
  },
  "ce100BtxFx04Table": {
    "name": "ce100BtxFx04Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.10",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/E-100-BTX-FX-04(ST/SC) media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "ce100BtxFx04Entry": {
    "name": "ce100BtxFx04Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.10.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "ce100BtxFx04Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/E-100-BTX-FX-04(ST/SC)"
  },
  "ce100BtxFx04Index": {
    "name": "ce100BtxFx04Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.10.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "ce100BtxFx04TPRecv": {
    "name": "ce100BtxFx04TPRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.10.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Receive LED"
  },
  "ce100BtxFx04FiberRecv": {
    "name": "ce100BtxFx04FiberRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.10.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Receive LED"
  },
  "ce100BtxFx04TPSignalDetect": {
    "name": "ce100BtxFx04TPSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.10.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair signal detect LED"
  },
  "ce100BtxFx04FiberSignalDetect": {
    "name": "ce100BtxFx04FiberSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.10.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's fiber signal detect LED"
  },
  "ce100BtxFx04Power": {
    "name": "ce100BtxFx04Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.10.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "cpsCf01Table": {
    "name": "cpsCf01Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.12",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/PS-CF-01 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "cpsCf01Entry": {
    "name": "cpsCf01Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.12.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsCf01Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/PS-CF-01"
  },
  "cpsCf01Index": {
    "name": "cpsCf01Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.12.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "cpsCf01FiberRecv": {
    "name": "cpsCf01FiberRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.12.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Receive LED"
  },
  "cpsCf01TPRecv": {
    "name": "cpsCf01TPRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.12.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Receive LED"
  },
  "cpsCf01Power": {
    "name": "cpsCf01Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.12.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "cbCf01Table": {
    "name": "cbCf01Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.13",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/B-CF-01 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "cbCf01Entry": {
    "name": "cbCf01Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.13.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cbCf01Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/B-CF-01"
  },
  "cbCf01Index": {
    "name": "cbCf01Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.13.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "cbCf01FiberRecv": {
    "name": "cbCf01FiberRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.13.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Receive LED"
  },
  "cbCf01TPCoaxRecv": {
    "name": "cbCf01TPCoaxRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.13.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair/Coax Receive LED"
  },
  "cbCf01Power": {
    "name": "cbCf01Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.13.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "carCf01Table": {
    "name": "carCf01Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.14",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/AR-CF-01 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "carCf01Entry": {
    "name": "carCf01Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.14.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "carCf01Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/AR-CF-01"
  },
  "carCf01Index": {
    "name": "carCf01Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.14.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "carCf01FiberRecv": {
    "name": "carCf01FiberRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.14.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Receive LED"
  },
  "carCf01TPRecv": {
    "name": "carCf01TPRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.14.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Receive LED"
  },
  "carCf01Power": {
    "name": "carCf01Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.14.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "carCf02Table": {
    "name": "carCf02Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.15",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/AR-CF-02 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "carCf02Entry": {
    "name": "carCf02Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.15.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "carCf02Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/AR-CF-02"
  },
  "carCf02Index": {
    "name": "carCf02Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.15.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "carCf02FiberRecv": {
    "name": "carCf02FiberRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.15.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Receive LED"
  },
  "carCf02CoaxRecv": {
    "name": "carCf02CoaxRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.15.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Coax Receive LED"
  },
  "carCf02Power": {
    "name": "carCf02Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.15.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "cePswFx03Table": {
    "name": "cePswFx03Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.16",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/E-PSW-FX-03 ethernet switch, then entry 'n' in this table exists and describes the state of the switch's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "cePswFx03Entry": {
    "name": "cePswFx03Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.16.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cePswFx03Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/E-PSW-FX-03"
  },
  "cePswFx03Index": {
    "name": "cePswFx03Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.16.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "cePswFx03TPFullDuplex": {
    "name": "cePswFx03TPFullDuplex",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.16.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair FDX LED"
  },
  "cePswFx03FiberFullDuplex": {
    "name": "cePswFx03FiberFullDuplex",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.16.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber FDX LED"
  },
  "cePswFx03TPLink": {
    "name": "cePswFx03TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.16.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Link LED"
  },
  "cePswFx03FiberLink": {
    "name": "cePswFx03FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.16.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Link LED"
  },
  "cePswFx03TP100Mbps": {
    "name": "cePswFx03TP100Mbps",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.16.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair 100Mbps LED"
  },
  "cePswSx01Table": {
    "name": "cePswSx01Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.17",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/E-PSW-SX-01 ethernet switch, then entry 'n' in this table exists and describes the state of the switch's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "cePswSx01Entry": {
    "name": "cePswSx01Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.17.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cePswSx01Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/E-PSW-SX-01"
  },
  "cePswSx01Index": {
    "name": "cePswSx01Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.17.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "cePswSx01TPFullDuplex": {
    "name": "cePswSx01TPFullDuplex",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.17.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair FDX LED"
  },
  "cePswSx01FiberFullDuplex": {
    "name": "cePswSx01FiberFullDuplex",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.17.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber FDX LED"
  },
  "cePswSx01TPLink": {
    "name": "cePswSx01TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.17.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Link LED"
  },
  "cePswSx01FiberLink": {
    "name": "cePswSx01FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.17.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Link LED"
  },
  "cePswSx01TP100Mbps": {
    "name": "cePswSx01TP100Mbps",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.17.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair 100Mbps LED"
  },
  "cRs232Cf01Table": {
    "name": "cRs232Cf01Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.18",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/RS232-CF-01 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "cRs232Cf01Entry": {
    "name": "cRs232Cf01Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.18.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cRs232Cf01Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/RS232-CF-01"
  },
  "cRs232Cf01Index": {
    "name": "cRs232Cf01Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.18.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "cRs232Cf01FiberLock": {
    "name": "cRs232Cf01FiberLock",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.18.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Lock LED"
  },
  "cfSmMm04Table": {
    "name": "cfSmMm04Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.24",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/F-SM-MM-04 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "cfSmMm04Entry": {
    "name": "cfSmMm04Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.24.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cfSmMm04Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/F-SM-MM-04"
  },
  "cfSmMm04Index": {
    "name": "cfSmMm04Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.24.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "cfSmMm04MMSignalDetect": {
    "name": "cfSmMm04MMSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.24.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Multi-Mode signal detect LED"
  },
  "cfSmMm04SMSignalDetect": {
    "name": "cfSmMm04SMSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.24.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Single-Mode signal detect LED"
  },
  "cfSmMm04Power": {
    "name": "cfSmMm04Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.24.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "ce100BtxSx01Table": {
    "name": "ce100BtxSx01Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.26",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/E-100-BTX-SX-01 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "ce100BtxSx01Entry": {
    "name": "ce100BtxSx01Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.26.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "ce100BtxSx01Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/E-100-BTX-SX-01"
  },
  "ce100BtxSx01Index": {
    "name": "ce100BtxSx01Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.26.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "ce100BtxSx01TPRecv": {
    "name": "ce100BtxSx01TPRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.26.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Receive LED"
  },
  "ce100BtxSx01FiberRecv": {
    "name": "ce100BtxSx01FiberRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.26.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Receive LED"
  },
  "ce100BtxSx01TPSignalDetect": {
    "name": "ce100BtxSx01TPSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.26.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair signal detect LED"
  },
  "ce100BtxSx01FiberSignalDetect": {
    "name": "ce100BtxSx01FiberSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.26.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's fiber signal detect LED"
  },
  "ce100BtxSx01Power": {
    "name": "ce100BtxSx01Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.26.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "ce100BtxFx04MtTable": {
    "name": "ce100BtxFx04MtTable",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.27",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/E-100-BTX-FX-04(MT) media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "ce100BtxFx04MtEntry": {
    "name": "ce100BtxFx04MtEntry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.27.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "ce100BtxFx04MtIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/E-100-BTX-FX-04(MT)"
  },
  "ce100BtxFx04MtIndex": {
    "name": "ce100BtxFx04MtIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.27.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "ce100BtxFx04MtTPRecv": {
    "name": "ce100BtxFx04MtTPRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.27.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Receive LED"
  },
  "ce100BtxFx04MtFiberRecv": {
    "name": "ce100BtxFx04MtFiberRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.27.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Receive LED"
  },
  "ce100BtxFx04MtTPSignalDetect": {
    "name": "ce100BtxFx04MtTPSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.27.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair signal detect LED"
  },
  "ce100BtxFx04MtFiberSignalDetect": {
    "name": "ce100BtxFx04MtFiberSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.27.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's fiber signal detect LED"
  },
  "ce100BtxFx04MtPower": {
    "name": "ce100BtxFx04MtPower",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.27.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Power LED"
  },
  "cfdCd01Table": {
    "name": "cfdCd01Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.28",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/FD-CD-01 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "cfdCd01Entry": {
    "name": "cfdCd01Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.28.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cfdCd01Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/FD-CD-01"
  },
  "cfdCd01Index": {
    "name": "cfdCd01Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.28.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "cfdCd01Lock": {
    "name": "cfdCd01Lock",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.28.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Lock LED"
  },
  "cfdCd01TPRecv": {
    "name": "cfdCd01TPRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.28.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's TPRecv LED"
  },
  "cfdCd01FiberRecv": {
    "name": "cfdCd01FiberRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.28.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's FiberRecv LED"
  },
  "cfdCd01TPSignalDetect": {
    "name": "cfdCd01TPSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.28.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's TPSignalDetect LED"
  },
  "cfdCd01FiberSignalDetect": {
    "name": "cfdCd01FiberSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.28.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's FiberSignalDetect LED"
  },
  "ctrCf01Table": {
    "name": "ctrCf01Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.29",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/TR-CF-01 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "ctrCf01Entry": {
    "name": "ctrCf01Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.29.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "ctrCf01Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/TR-CF-01"
  },
  "ctrCf01Index": {
    "name": "ctrCf01Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.29.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "ctrCf01FiberinOK": {
    "name": "ctrCf01FiberinOK",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.29.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's FiberinOK LED"
  },
  "ctrCf01TPinOK": {
    "name": "ctrCf01TPinOK",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.29.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's TPinOK LED"
  },
  "ctrCf01Inserted": {
    "name": "ctrCf01Inserted",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.29.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Inserted LED"
  },
  "ce100BtxFrl03Table": {
    "name": "ce100BtxFrl03Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.30",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/E-100BTX-FRL-03 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "ce100BtxFrl03Entry": {
    "name": "ce100BtxFrl03Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.30.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "ce100BtxFrl03Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/E-100BTX-FRL-03"
  },
  "ce100BtxFrl03Index": {
    "name": "ce100BtxFrl03Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.30.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "ce100BtxFrl03Lock": {
    "name": "ce100BtxFrl03Lock",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.30.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's signal lock pin"
  },
  "ce100BtxFrl03TPRecv": {
    "name": "ce100BtxFrl03TPRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.30.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted pair receive LED"
  },
  "ce100BtxFrl03FiberRecv": {
    "name": "ce100BtxFrl03FiberRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.30.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Receive LED"
  },
  "ce100BtxFrl03TPSignalDetect": {
    "name": "ce100BtxFrl03TPSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.30.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted pair signal detect LED"
  },
  "ce100BtxFrl03FiberSignalDetect": {
    "name": "ce100BtxFrl03FiberSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.30.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber signal detect LED"
  },
  "chstrCf01Table": {
    "name": "chstrCf01Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.34",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/HSTR-CF-01 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "chstrCf01Entry": {
    "name": "chstrCf01Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.34.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "chstrCf01Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/HSTR-CF-01"
  },
  "chstrCf01Index": {
    "name": "chstrCf01Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.34.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "chstrCf01TPRecv": {
    "name": "chstrCf01TPRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.34.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Receive LED"
  },
  "chstrCf01FiberRecv": {
    "name": "chstrCf01FiberRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.34.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Receive LED"
  },
  "chstrCf01TPSignalDetect": {
    "name": "chstrCf01TPSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.34.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair signal detect LED"
  },
  "chstrCf01FiberSignalDetect": {
    "name": "chstrCf01FiberSignalDetect",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.34.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's fiber signal detect LED"
  },
  "ceTxSx02Table": {
    "name": "ceTxSx02Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.35",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/E-TX-SX-02 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "ceTxSx02Entry": {
    "name": "ceTxSx02Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.35.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "ceTxSx02Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/E-TX-SX-02"
  },
  "ceTxSx02Index": {
    "name": "ceTxSx02Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.35.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "ceTxSx02TPLink": {
    "name": "ceTxSx02TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.35.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Link LED"
  },
  "ceTxSx02FiberLink": {
    "name": "ceTxSx02FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.35.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Link LED"
  },
  "ceTxSx02100Mbps": {
    "name": "ceTxSx02100Mbps",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.35.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's 100 Megabit Per Second LED"
  },
  "ceTbtFrl04Table": {
    "name": "ceTbtFrl04Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.36",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. If physical slot 'n' contains a working C/E-TBT-FRL-04 media converter, then entry 'n' in this table exists and describes the state of the converter's LEDs If slot 'n' is empty, does not exist, or contains a different type of device, then table entry 'n' does not exist."
  },
  "ceTbtFrl04Entry": {
    "name": "ceTbtFrl04Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.36.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "ceTbtFrl04Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "State of LEDs on a single C/E-TBT-FRL-04"
  },
  "ceTbtFrl04Index": {
    "name": "ceTbtFrl04Index",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.36.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "ceTbtFrl04FiberRecv": {
    "name": "ceTbtFrl04FiberRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.36.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Receive LED"
  },
  "ceTbtFrl04FiberLink": {
    "name": "ceTbtFrl04FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.36.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Fiber Link LED"
  },
  "ceTbtFrl04TPRecv": {
    "name": "ceTbtFrl04TPRecv",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.36.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Receive LED"
  },
  "ceTbtFrl04TPLink": {
    "name": "ceTbtFrl04TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.1.36.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The state of the converter's Twisted Pair Link LED"
  },
  "cpsModuleTable": {
    "name": "cpsModuleTable",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A table from which one can extract the model number of any device in the stack, given the serial number (BIA) of the cabinet and the slot number in which the device is installed."
  },
  "cpsModuleEntry": {
    "name": "cpsModuleEntry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsModuleBiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cpsModuleSlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The model number entry for a single device."
  },
  "cpsModuleBiaIndex": {
    "name": "cpsModuleBiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cpsModuleSlotIndex": {
    "name": "cpsModuleSlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "cpsModuleModel": {
    "name": "cpsModuleModel",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The model number of the device. See OIDs under chSlcps"
  },
  "cpsmm100Table": {
    "name": "cpsmm100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CPSMM100-200 and other CPSMM100-xxx Point System Base Management Module in the stack, indexed by cabinet serial number and slot."
  },
  "cpsmm100Entry": {
    "name": "cpsmm100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsmm100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cpsmm100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CPSMM100"
  },
  "cpsmm100BiaIndex": {
    "name": "cpsmm100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cpsmm100SlotIndex": {
    "name": "cpsmm100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "cpsmm100Groups": {
    "name": "cpsmm100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CPSMM100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "cpsmm100Reset": {
    "name": "cpsmm100Reset",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "reset": 1,
          "noReset": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Set this to reset(1) to cause the CPSMM100 to reboot."
  },
  "cpsmm100SaveConfig": {
    "name": "cpsmm100SaveConfig",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "saveConfig": 1,
          "noSaveConfig": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Set this to saveConfig(1) to force configuration changes made since the last saveConfig to be copied from RAM to flash memory. If changes are made to the configuration of a CPSMM100 and SaveConfig is not subsequently set to 1, the changes will be made only in RAM and the device will revert to its previous configuration at the next reboot. After the save completes, SaveConfig automatically reverts to noSaveConfig(2)."
  },
  "cpsmm100HwRevision": {
    "name": "cpsmm100HwRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The hardware revision of this device"
  },
  "cpsmm100SwRevision": {
    "name": "cpsmm100SwRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The revision of the agent firmware for this device."
  },
  "cpsmm100IPAddress": {
    "name": "cpsmm100IPAddress",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP Address of the Ethernet interface of this device"
  },
  "cpsmm100SubnetMask": {
    "name": "cpsmm100SubnetMask",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The subnet mask used by the Ethernet interface of this device"
  },
  "cpsmm100Gateway": {
    "name": "cpsmm100Gateway",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP gateway used by the Ethernet interface of this device"
  },
  "cpsmm100IsPrimary": {
    "name": "cpsmm100IsPrimary",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "In a given Point System stack, multiple base management modules can be installed, but only one can be the Primary. The Primary is responsible for scanning the stack for modules, collecting status information and distributing new configuration settings. The Primary management module is therefore the only one that can accept an SNMP SET PDU. Compare this variable with cpsIsPrimary.0"
  },
  "cpsmm100WantPrimary": {
    "name": "cpsmm100WantPrimary",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "always": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Normally, the Management Module installed in the cabinet with the lowest serial number (BIA) in the lowest (leftmost) slot that has fully established network connectivity will be selected as the Primary. Setting WantPrimary to yes(1) causes this device to be preferred over all devices with a WantPrimary value of no(2) during these Primary/Standby negotiations. If more than one device is configured with the value yes(1), these modules negotiate amongst themselves using the default rule above. Setting WantPrimary to always(3) causes the module to ignore the results of the negotiations and immediately and persistently assert primary status. Use of always(3) is not recommended except on advice of Transition Networks technical support, since it may cause your system to behave unpredictably. Setting more than one module in a stack to always(3) will cause erratic behavior."
  },
  "cpsmm100CanPrimary": {
    "name": "cpsmm100CanPrimary",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value is yes(1) if this device is eligible to become the Primary Management Module. Currently, lack of IP/Ethernet connectivity is the only reason that a module can be ineligible."
  },
  "cpsmm100EthernetLink": {
    "name": "cpsmm100EthernetLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Does the management interface of this management module have ethernet link?"
  },
  "cpsmm100TntRIP": {
    "name": "cpsmm100TntRIP",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This feature in obsolete as of 08/17/2001. Telnet 'trusted' IP address. Telnet access to the CPSMM100 can be limited to a single station by placing its IP address in TntRIP. Any incoming Telnet request from a station whose IP address does not match TntRIP is ignored. The TntRIP can be modified to accept an entire subnet or other group of IP stations by using TntRIPMask, defined below."
  },
  "cpsmm100TntRIPMask": {
    "name": "cpsmm100TntRIPMask",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This feature in obsolete as of 08/17/2001. Telnet 'trusted' address mask. See cpsmm100TntRIP. This value can be used to exclude bit positions from consideration when applying TntRIP (above) to a Telnet connection request. For each bit position in TntRIPMask that is a 1, the corresponding bits in the TntRIP and the IP address of the connecting client must be the same. If this is not true, the connection attempt is ignored. Note that the TntRIPMask differs from a true subnet mask (which must have all '1' bits at the left and all '0' bits at the right) in that it may use any bit pattern."
  },
  "cpsmm100SNMPTrapMgr": {
    "name": "cpsmm100SNMPTrapMgr",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Traps generated by this management module will be sent to this IP address."
  },
  "cpsmm100SNMPTrapInterval": {
    "name": "cpsmm100SNMPTrapInterval",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "For future expansion, not currently implemented."
  },
  "cpsmm100SysUpTime": {
    "name": "cpsmm100SysUpTime",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Mirror of this Management Module's system.sysUpTime.0"
  },
  "cpsmm100SysContact": {
    "name": "cpsmm100SysContact",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Mirror of this Management Module's system.sysContact.0"
  },
  "cpsmm100SysName": {
    "name": "cpsmm100SysName",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Mirror of this Management Module's system.sysName.0"
  },
  "cpsmm100SysLocation": {
    "name": "cpsmm100SysLocation",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Mirror of this Management Module's system.sysLocation.0"
  },
  "cpsmm100CfgMatch": {
    "name": "cpsmm100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "cpsmm100SerialNumber": {
    "name": "cpsmm100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device."
  },
  "cpsmm100ICIF": {
    "name": "cpsmm100ICIF",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Multiple Management Modules can be installed in a Point System stack. For each cabinet in the stack, exactly one module must be selected to communicate configuration changes to the cabinet hardware and provide a communications pathway to other cabinets. This module is known as the Inter-Cabinet Communications Interface. If there are any Base Management Modules in the cabinet, the one in the lowest slot will be the ICIF. Otherwise, it will be the Expansion Management Module in the lowest slot."
  },
  "cpsmm100MRevision": {
    "name": "cpsmm100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cpsmm100LastGasp": {
    "name": "cpsmm100LastGasp",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Last Gasp support for this device."
  },
  "cpsmm100SNMPTrapMgr2": {
    "name": "cpsmm100SNMPTrapMgr2",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Traps generated by this management module will be sent to this IP address."
  },
  "cpsmm100SNMPTrapMgr3": {
    "name": "cpsmm100SNMPTrapMgr3",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Traps generated by this management module will be sent to this IP address."
  },
  "cpsmm100SNMPTrapMgr4": {
    "name": "cpsmm100SNMPTrapMgr4",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Traps generated by this management module will be sent to this IP address."
  },
  "cpsmm100CacheClean": {
    "name": "cpsmm100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.1.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cpsmm200Table": {
    "name": "cpsmm200Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CPSMM200-210 and other CPSMM200-xxx Point System Expansion Management Module in the stack, indexed by cabinet serial number and slot."
  },
  "cpsmm200Entry": {
    "name": "cpsmm200Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsmm200BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cpsmm200SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status entries for a single cpsmm200. (The CPSMM200 has no configuration)"
  },
  "cpsmm200BiaIndex": {
    "name": "cpsmm200BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cpsmm200SlotIndex": {
    "name": "cpsmm200SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "cpsmm200SerialNumber": {
    "name": "cpsmm200SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "cpsmm200ICIF": {
    "name": "cpsmm200ICIF",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Multiple Management Modules can be installed in a Point System stack. For each cabinet in the stack, exactly one module must be selected to communicate configuration changes to the cabinet hardware and provide a communications pathway to other cabinets. This module is known as the Inter-Cabinet Communications Interface. If there are any Base Management Modules in the cabinet, the one in the lowest slot will be the ICIF. Otherwise, it will be the Expansion Management Module in the lowest slot."
  },
  "cpsmm200MRevision": {
    "name": "cpsmm200MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cettf100Table": {
    "name": "cettf100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CETTF100 10Mbps Twisted-Pair to Fiber Ethernet Media Converter in the stack, indexed by cabinet serial number and slot."
  },
  "cettf100Entry": {
    "name": "cettf100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cettf100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cettf100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CETTF100"
  },
  "cettf100BiaIndex": {
    "name": "cettf100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cettf100SlotIndex": {
    "name": "cettf100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "cettf100Groups": {
    "name": "cettf100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CETTF100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "cettf100MRevision": {
    "name": "cettf100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cettf100CfgMatch": {
    "name": "cettf100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "cettf100SerialNumber": {
    "name": "cettf100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "cettf100ConnA": {
    "name": "cettf100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device"
  },
  "cettf100ConnB": {
    "name": "cettf100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Copper connector built into this device"
  },
  "cettf100TPLink": {
    "name": "cettf100TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Copper Link for this device"
  },
  "cettf100FiberLink": {
    "name": "cettf100FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "cettf100Fault": {
    "name": "cettf100Fault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value is yes(1) when either TPLink or FiberLink has value linkDown(2)"
  },
  "cettf100TPActivity": {
    "name": "cettf100TPActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Network traffic indicator for Copper side of this device"
  },
  "cettf100FiberActivity": {
    "name": "cettf100FiberActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Network traffic indicator for Fiber side of this device"
  },
  "cettf100AutoCross": {
    "name": "cettf100AutoCross",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/Disable for automatic copper TX/RX pair correction"
  },
  "cettf100LinkPassThrough": {
    "name": "cettf100LinkPassThrough",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/Disable for Link Pass Through, a feature that causes loss of link on one side of a media converter to be passed through to the other side, so that upstream equipment can see the fault condition."
  },
  "cettf100ConfigMode": {
    "name": "cettf100ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "cettf100Enabled": {
    "name": "cettf100Enabled",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When this configuration item is set to no(2), the device passes no network traffic."
  },
  "cettf100CacheClean": {
    "name": "cettf100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.3.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cfetf100Table": {
    "name": "cfetf100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CFTEF100 100Mbps Twisted-Pair to Fiber Ethernet Media Converter in the stack, indexed by cabinet serial number and slot."
  },
  "cfetf100Entry": {
    "name": "cfetf100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cfetf100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cfetf100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CFETF100"
  },
  "cfetf100BiaIndex": {
    "name": "cfetf100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cfetf100SlotIndex": {
    "name": "cfetf100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "cfetf100Groups": {
    "name": "cfetf100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CFETF100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "cfetf100MRevision": {
    "name": "cfetf100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cfetf100CfgMatch": {
    "name": "cfetf100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "cfetf100SerialNumber": {
    "name": "cfetf100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "cfetf100ConnA": {
    "name": "cfetf100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device"
  },
  "cfetf100ConnB": {
    "name": "cfetf100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Copper connector built into this device"
  },
  "cfetf100TPLink": {
    "name": "cfetf100TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Twisted Pair Link for this device"
  },
  "cfetf100FiberLink": {
    "name": "cfetf100FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "cfetf100Fault": {
    "name": "cfetf100Fault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value is yes(1) when either TPLink or FiberLink has value linkDown(2)"
  },
  "cfetf100FastLinkPulse": {
    "name": "cfetf100FastLinkPulse",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "autonegotiate": 1,
          "hdx100Btx": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When set to autonegotiate(1), converter sends Fast Link Pulses on its twisted pair port, thereby participating in autonegotiation of duplex between the converter's twisted pair port and that of the connected station. If that station supports Full- Duplex (FDX) operation, FDX will be used. If not, the twisted pair will operate in Half-Duplex (HDX) mode. When set to hdx100Btx(2), the converter instead sends 100Mbps idles (rather than Fast Link Pulses) on its twisted pair port (i.e. it declines to negotiate), which forces the twisted pair to operate in HDX mode regardless of the capabilities of the connected station. When operating in HDX mode, the twisted pair can support traffic in only one direction at a time. In FDX mode, traffic can pass in both directions simultaneously, thus theoretically doubling network performance."
  },
  "cfetf100Enabled": {
    "name": "cfetf100Enabled",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When this configuration item is set to no(2), the device passes no network traffic."
  },
  "cfetf100Pause": {
    "name": "cfetf100Pause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The Pause feature allows Ethernet MACs that support it to send data pacing 'Pause' messages to each other. Support for Pause is negotiated at the physical level and passed up to the MAC. While the MAC's Pause messages themselves can pass over the fiber link that this pair of media converters introduces, the TP physical layer negotiations to enable Pause can not. Therefore, if both end station MACs support Pause and wish to use it, the Pause negotiation must be re-generated by the media converters on both ends. By setting this configuration option to enabled(1), you are indicating to the local twisted pair station that the twisted pair station on the other side of the other media converter supports Pause and wishes to use it. This variable must be set consistently on both of the paired media converters."
  },
  "cfetf100LinkPassThrough": {
    "name": "cfetf100LinkPassThrough",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/Disable for Link Pass Through, a feature that causes loss of link on one side of a media converter to be passed through to the other side, so that upstream equipment can see the fault condition."
  },
  "cfetf100AutoCross": {
    "name": "cfetf100AutoCross",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/Disable for automatic copper TX/RX pair correction. When disabled, the port operates in MDI mode."
  },
  "cfetf100TPActivity": {
    "name": "cfetf100TPActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Network traffic indicator for Copper side of this device"
  },
  "cfetf100FiberActivity": {
    "name": "cfetf100FiberActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Network traffic indicator for Fiber side of this device"
  },
  "cfetf100ConfigMode": {
    "name": "cfetf100ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "cfetf100FarEndFault": {
    "name": "cfetf100FarEndFault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Far End Fault configuration of this device. This setting can only be changed by the physical jumper setting on the slide in card, for some devices, if it is available. Far End Fault is software read-write on other devices. Far End Fault causes the fiber transmitter to generate a Far End Fault pattern upon the loss of a receiver signal detect. When the receiver detects signal again, the transmitter stops transmitting the Far End Fault pattern."
  },
  "cfetf100CacheClean": {
    "name": "cfetf100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.4.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cfmff100Table": {
    "name": "cfmff100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CFMFF100 SingleMode to MultiMode Fiber Media Converter in the stack, indexed by cabinet serial number and slot."
  },
  "cfmff100Entry": {
    "name": "cfmff100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cfmff100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cfmff100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CFMFF100"
  },
  "cfmff100BiaIndex": {
    "name": "cfmff100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cfmff100SlotIndex": {
    "name": "cfmff100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "cfmff100Groups": {
    "name": "cfmff100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CFMFF100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "cfmff100MRevision": {
    "name": "cfmff100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of the device"
  },
  "cfmff100CfgMatch": {
    "name": "cfmff100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "cfmff100ConnA": {
    "name": "cfmff100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of SingleMode connector built into this device"
  },
  "cfmff100ConnB": {
    "name": "cfmff100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of MultiMode connector built into this device"
  },
  "cfmff100SerialNumber": {
    "name": "cfmff100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "cfmff100SMSignal": {
    "name": "cfmff100SMSignal",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "signalUp": 1,
          "signalDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of singlemode signal detect for this device"
  },
  "cfmff100MMSignal": {
    "name": "cfmff100MMSignal",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "signalUp": 1,
          "signalDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of singlemode signal detect for this device"
  },
  "cfmff100Enabled": {
    "name": "cfmff100Enabled",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "noP1": 2,
          "noP2": 3,
          "no": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Ports on this device can be disabled individually. When this control is set to yes(1), the entire device is enabled. When it is set to noP1(2), the SingleMode port is disabled. noP2(3) disables the MultiMode port only, and no(4) disables both. For most purposes, the values noP1(2), noP2(3), and no(4) are equivalent."
  },
  "cfmff100PortShutOff": {
    "name": "cfmff100PortShutOff",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This variable reflects the status of the DPT/OPP jumper on the board. This jumper controls the behavior of the converter when a loss of signal is detected. When the jumper is in the default OPP position, the loss of signal detect on one port causes the opposite port to be shut down. In this case, Port Shutoff is said to be disabled(2). In the DPT (enabled(1)) position, both ports are shut down. Use of the DPT position is discouraged, as it is more likely to lead to a signal loss condition from which the converter is unable to recover."
  },
  "cfmff100ConfigMode": {
    "name": "cfmff100ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "cfmff100CacheClean": {
    "name": "cfmff100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.5.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cpsmp100Table": {
    "name": "cpsmp100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CPSMP100 IFO (Instant Fail-Over) Power Supply in the stack, indexed by cabinet serial number and slot."
  },
  "cpsmp100Entry": {
    "name": "cpsmp100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsmp100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cpsmp100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CPSMP100"
  },
  "cpsmp100BiaIndex": {
    "name": "cpsmp100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cpsmp100SlotIndex": {
    "name": "cpsmp100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed. Power Supplies occupy special slots numbered 125 and higher."
  },
  "cpsmp100Groups": {
    "name": "cpsmp100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CPSMP100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "cpsmp100MRevision": {
    "name": "cpsmp100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cpsmp100CfgMatch": {
    "name": "cpsmp100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "cpsmp100SerialNumber": {
    "name": "cpsmp100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "cpsmp100Mode": {
    "name": "cpsmp100Mode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "master": 1,
          "slave": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When one power supply is set to master(1) and the other is set to slave(2), the master will supply all power to the cabinet, and the slave will take over if the master stops supplying power. This is useful when (for example) one supply is attached to a wall socket and the other to a battery backup. The cabinet can be directed to only draw power from batteries when there is no alternative. When both power supplies are set to master(1), the results are determined automatically. WARNING: It is up to the system administrator to ensure that at least one power supply is set to master(1). It is illegal to set all power supplies to slave(2). If this occurs, the cabinet may lose all power under certain circumstances, even if power is available."
  },
  "cpsmp100ConfigMode": {
    "name": "cpsmp100ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "cpsmp100RemoteFan": {
    "name": "cpsmp100RemoteFan",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "installed": 1,
          "notInstalled": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A Remote Fan is a device that fits in a power supply slot but contains no power supply, only a fan. These devices are not manageable, but if present they will be reported by the manageable supply that accompanies it."
  },
  "cpsmp100PowerOK": {
    "name": "cpsmp100PowerOK",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This variable has the value yes(1) any time this supply is capable of supplying at least 11.6 volts to the cabinet. Note that a value of no(2) does not necessarily indicate hard failure. A power supply can be detected even if it is powered down or not plugged in as long as another power supply has PowerOK=yes(1) and InUse=yes(1). In this case, PowerOK will be no(2) for the disabled power supply."
  },
  "cpsmp100InUse": {
    "name": "cpsmp100InUse",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value is yes(1) when this supply is currently selected to supply power to the cabinet."
  },
  "cpsmp100ChassisPower": {
    "name": "cpsmp100ChassisPower",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Power currently supplied to the cabinet, in milliwatts"
  },
  "cpsmp100ChassisTemp": {
    "name": "cpsmp100ChassisTemp",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The temperature inside the cabinet as detected by the power supply, in tenths of degrees centigrade"
  },
  "cpsmp100RFanFault": {
    "name": "cpsmp100RFanFault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Normally no(2), this value changes to yes(1) when an installed Remote fan is drawing excessive current or none at all."
  },
  "cpsmp100LFanFault": {
    "name": "cpsmp100LFanFault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Normally no(2), this value changes to yes(1) when the Local fan is drawing excessive current or none at all."
  },
  "cpsmp100SupplyType": {
    "name": "cpsmp100SupplyType",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ac": 1,
          "dc48": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The supply voltage that this unit is designed to accept. If AC(1), the supply accepts 90-260VAC, 47 to 400Hz. If DC48(2), the supply accepts 38-75VDC."
  },
  "cpsmp100CacheClean": {
    "name": "cpsmp100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.6.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "csetf100Table": {
    "name": "csetf100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CSETF100 10/100Mbps Twisted-Pair to Fiber Ethernet Media Converter in the stack, indexed by cabinet serial number and slot."
  },
  "csetf100Entry": {
    "name": "csetf100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "csetf100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "csetf100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "One table entry per piece of management module information. Entry 'n' does not exist."
  },
  "csetf100BiaIndex": {
    "name": "csetf100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "csetf100SlotIndex": {
    "name": "csetf100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "csetf100Groups": {
    "name": "csetf100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CSETF100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "csetf100MRevision": {
    "name": "csetf100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "csetf100CfgMatch": {
    "name": "csetf100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "inactive": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "csetf100SerialNumber": {
    "name": "csetf100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "csetf100ConnA": {
    "name": "csetf100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device"
  },
  "csetf100ConnB": {
    "name": "csetf100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Copper connector built into this device"
  },
  "csetf100TPLink": {
    "name": "csetf100TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Twisted Pair Link for this device"
  },
  "csetf100FiberLink": {
    "name": "csetf100FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "csetf100AutoCross": {
    "name": "csetf100AutoCross",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/Disable for automatic copper TX/RX pair correction"
  },
  "csetf100SpeedConfig": {
    "name": "csetf100SpeedConfig",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "auto": 1,
          "mbps10": 2,
          "mbps100": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable allows the user to set the requested data transfer rate for this converter."
  },
  "csetf100Speed100Mbps": {
    "name": "csetf100Speed100Mbps",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This variable reports the current data transfer rate for this converter."
  },
  "csetf100TPActivity": {
    "name": "csetf100TPActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "activity": 1,
          "noActivity": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Network traffic indicator for Copper side of this device"
  },
  "csetf100FiberActivity": {
    "name": "csetf100FiberActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "activity": 1,
          "noActivity": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Network traffic indicator for Fiber side of this device"
  },
  "csetf100ConfigMode": {
    "name": "csetf100ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "csetf100CacheClean": {
    "name": "csetf100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.7.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cgetf100Table": {
    "name": "cgetf100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CGETF100 Gigabit Twisted-Pair to Fiber Ethernet Media Converter in the stack, indexed by cabinet serial number and slot."
  },
  "cgetf100Entry": {
    "name": "cgetf100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cgetf100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cgetf100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "One table entry per piece of management module information. Entry 'n' does not exist."
  },
  "cgetf100BiaIndex": {
    "name": "cgetf100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cgetf100SlotIndex": {
    "name": "cgetf100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "cgetf100Groups": {
    "name": "cgetf100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CGETF100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "cgetf100MRevision": {
    "name": "cgetf100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cgetf100CfgMatch": {
    "name": "cgetf100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "inactive": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "cgetf100SerialNumber": {
    "name": "cgetf100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "cgetf100ConnA": {
    "name": "cgetf100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device"
  },
  "cgetf100ConnB": {
    "name": "cgetf100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Copper connector built into this device"
  },
  "cgetf100TPLink": {
    "name": "cgetf100TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Twisted Pair Link for this device"
  },
  "cgetf100FiberLink": {
    "name": "cgetf100FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "cgetf100Fault": {
    "name": "cgetf100Fault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value is yes(1) when either TPLink or FiberLink has value linkDown(2)"
  },
  "cgetf100Enabled": {
    "name": "cgetf100Enabled",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When this variable is set to no(1), the device allows no traffic to pass."
  },
  "cgetf100Pause": {
    "name": "cgetf100Pause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/Disable control for the advertising of Pause capability on the copper interface. This MIB variable is retained for compatibility with older applications and firmware. If you have a current version of the CGETF100 device (which supports asymmetric pause), you should both read and write the MIB variable cgetf100PauseType(21) for complete monitoring and control of pause capability advertising. If you are using a current Transition Networks application, this is automatic. On all versions of the CGETF100 device, this MIB variable can be used to enable and disable advertising of symmetric pause. For current versions of the CGETF100, this variable reads enabled(1) any time any type of pause is enabled, and forces cgetf100PauseType(21) to symmetric(1) when changed from disabled(2) to enabled(1). On new versions of the CGETF100 device, when cgetf100FiberAutoNegot(19) has the value enabled(1), this variable takes on the read-only value enabled(1)."
  },
  "cgetf100LinkPassThrough": {
    "name": "cgetf100LinkPassThrough",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/Disable for Link Pass Through, a feature that causes loss of link on one side of a media converter to be passed through to the other side, so that upstream equipment can see the fault condition."
  },
  "cgetf100FullDuplex": {
    "name": "cgetf100FullDuplex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fullDuplex": 1,
          "halfDuplex": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Controls advertizing of duplex capability for the copper side of the converter. When set to fullDuplex(1), the converter advertizes full duplex capability. When set to halfDuplex(2), the converter advertizes half duplex capability. The converter never advertizes both simultaneously. If the advertized setting is not supported by the remote, link cannot be established."
  },
  "cgetf100ClockMaster": {
    "name": "cgetf100ClockMaster",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When yes(1), the converter is supplying clock to the twisted pair. When no(2), the remote supplies the clock."
  },
  "cgetf100ConfigMode": {
    "name": "cgetf100ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "cgetf100TPLength": {
    "name": "cgetf100TPLength",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ln-lt50": 1,
          "ln-50-80": 2,
          "ln-80-110": 3,
          "ln-110-140": 4,
          "ln-gt140": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Twisted-pair length estimated via the converter's internal Time Domain Reflectometer. 1 means less than 50 meters, 2 means 50 to 80 meters, 3 means 80 to 110 meters, 4 means 110 to 140 meters, and 5 means more than 140 meters."
  },
  "cgetf100FiberAutoNegot": {
    "name": "cgetf100FiberAutoNegot",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Fiber port autonegotiation configuration."
  },
  "cgetf100CacheClean": {
    "name": "cgetf100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cgetf100PauseType": {
    "name": "cgetf100PauseType",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.8.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "symmetric": 1,
          "asymRX": 2,
          "asymTX": 3,
          "disabled": 4,
          "notApplicable": 5,
          "symmetricRO": 6,
          "asymRXRO": 7,
          "asymTXRO": 8,
          "disabledRO": 9,
          "all": 10
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/Disable control for the advertising of Pause capability on the copper interface. This MIB variable is only functional on CGETF100 devices that support asymmetric pause (i.e. current versions). If your CGETF100 does not support asymmetric pause, this variable will return the read-only value notApplicable(5) regardless of any other factors. On current CGETF100 devices, selectable values for this variable are symmetric(1), asymRX(2) (asymmetric, pause frames flow towards the converter), asymTX(3) (asymmetric, pause frames flow towards the link partner), and disabled(4). Note: Changing cgetf100PauseType(21) to disabled(4) causes cgetf100Pause(13) to take on the value disabled(2). Changing cgetf100PauseType(21) to any selectable value other than disabled(4) causes cgetf100Pause(13) to take on the value enabled(1). If cgetf100FiberAutoNegot(19) has the value enabled(1), then this variable returns the read-only value all(10), which indicates that all advertised modes received from the twisted pair link partner are reflected back to the link partner. Otherwise, if cgetf100ConfigMode(17) has the value hardware(2), one of the following read-only values will be returned: symmetricRO(6) or disabledRO(9). The read-only values asymRXRO(7) and asymTXRO(8) are defined for future expansion."
  },
  "csdtf100Table": {
    "name": "csdtf100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CSDTF100 T1/E1 Copper to Fiber Media Converter in the stack, indexed by cabinet serial number and slot."
  },
  "csdtf100Entry": {
    "name": "csdtf100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "csdtf100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "csdtf100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CSDTF100"
  },
  "csdtf100BiaIndex": {
    "name": "csdtf100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "csdtf100SlotIndex": {
    "name": "csdtf100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "csdtf100Groups": {
    "name": "csdtf100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CSDTF100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "csdtf100MRevision": {
    "name": "csdtf100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "csdtf100CfgMatch": {
    "name": "csdtf100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "inactive": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "csdtf100SerialNumber": {
    "name": "csdtf100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "csdtf100ConnA": {
    "name": "csdtf100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device"
  },
  "csdtf100ConnB": {
    "name": "csdtf100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Copper connector built into this device"
  },
  "csdtf100CopperLink": {
    "name": "csdtf100CopperLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Copper Link for this device"
  },
  "csdtf100FiberLink": {
    "name": "csdtf100FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "csdtf100Fault": {
    "name": "csdtf100Fault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value is yes(1) when either CopperLink or FiberLink has value linkDown(2)"
  },
  "csdtf100TAOSFiber": {
    "name": "csdtf100TAOSFiber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Transmit All Ones on Fiber as an error signal when Copper interface is down. When this error signal is transmitted, the AIS of the device on the other end is activated, if supported."
  },
  "csdtf100TAOSCopper": {
    "name": "csdtf100TAOSCopper",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Transmit All Ones on Copper as an error signal when Fiber interface is down. When this error signal is transmitted, the AIS of the device on the other end is activated, if supported."
  },
  "csdtf100AISFiber": {
    "name": "csdtf100AISFiber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "alarm": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Alarm Indication Signal. When equal to alarm(1), this means that the other end has TAOS enabled and is currently transmitting an alarm condition."
  },
  "csdtf100AISCopper": {
    "name": "csdtf100AISCopper",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "alarm": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Alarm Indication Signal. When equal to alarm(1), this means that the other end has TAOS enabled and is currently transmitting an alarm condition."
  },
  "csdtf100CopperLoopback": {
    "name": "csdtf100CopperLoopback",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable loopback on the copper interface. Copper Loopback causes all data that is sent to the copper interface to be transmitted back out the copper interface. NOT SUPPORTED on initial version of the product. "
  },
  "csdtf100CopperLongHaul": {
    "name": "csdtf100CopperLongHaul",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This variable indicates the current position of the device's long/short haul configuration switch."
  },
  "csdtf100T1E1": {
    "name": "csdtf100T1E1",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "t1": 1,
          "e1": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This variable indicates whether the current device is the T1 or the E1 version."
  },
  "csdtf100ConfigMode": {
    "name": "csdtf100ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "csdtf100TPCoax": {
    "name": "csdtf100TPCoax",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "tp": 1,
          "coax": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates the connector type installed on the copper interface. For E1 converters, this can be either Twisted Pair or Coax. For T1, it is always Twisted Pair."
  },
  "csdtf100CopperLineBuildout": {
    "name": "csdtf100CopperLineBuildout",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "e13-0V120ohm": 1,
          "e12-37V75ohm": 2,
          "t1SH-DSX-0-133ANSIT1403": 3,
          "t1SH-DSX-133-266": 4,
          "t1SH-DSX-266-399": 5,
          "t1SH-DSX-399-533": 6,
          "t1SH-DSX-533-655": 7,
          "t1SH-DSX-6V": 8,
          "t1LH-0dB": 9,
          "t1LH-m7-5dB": 10,
          "t1LH-m15dB": 11,
          "t1LH-m22-5dB": 12
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The characteristics of the copper interface"
  },
  "csdtf100FiberLoopback": {
    "name": "csdtf100FiberLoopback",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable loopback on the Fiber interface. Fiber Loopback causes all data that is sent to the Fiber interface to be transmitted back out the Fiber interface."
  },
  "csdtf100RmtSupported": {
    "name": "csdtf100RmtSupported",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Has the value yes(1) if this converter is capable of managing the media converter at the remote end of the fiber."
  },
  "csdtf100RmtDetected": {
    "name": "csdtf100RmtDetected",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Has the value yes(1) if management communcations have been established with a remote media converter. Always no(2) if TAOS is enabled or the remote converter does not support remote management."
  },
  "csdtf100RmtMRevision": {
    "name": "csdtf100RmtMRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Remote Marketing Revision. Same as csdtf100MRevision, only for the remote device."
  },
  "csdtf100RmtSerialNumber": {
    "name": "csdtf100RmtSerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Serial Number reported by remote device."
  },
  "csdtf100RmtConnA": {
    "name": "csdtf100RmtConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector reported by remote device."
  },
  "csdtf100RmtConnB": {
    "name": "csdtf100RmtConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector reported by remote device."
  },
  "csdtf100RmtCopperLink": {
    "name": "csdtf100RmtCopperLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Link status of remote Copper Port."
  },
  "csdtf100RmtFiberLink": {
    "name": "csdtf100RmtFiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Link status of remote Fiber Port."
  },
  "csdtf100RmtFault": {
    "name": "csdtf100RmtFault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Remote Fault status. Value is yes(1) when either CopperLink or FiberLink has value linkDown(2)"
  },
  "csdtf100RmtTAOSFiber": {
    "name": "csdtf100RmtTAOSFiber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Remote Fiber TAOS configuration. Transmit All Ones on Fiber as an error signal when Copper interface is down. When this error signal is transmitted, the AIS of the device on the other end is activated, if supported."
  },
  "csdtf100RmtTAOSCopper": {
    "name": "csdtf100RmtTAOSCopper",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Remote Copper TAOS configuration. Transmit All Ones on Copper as an error signal when Fiber interface is down. When this error signal is transmitted, the AIS of the device on the other end is activated, if supported."
  },
  "csdtf100RmtAISFiber": {
    "name": "csdtf100RmtAISFiber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "alarm": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Remote Fiber AIS status. Alarm Indication Signal. When equal to alarm(1), this means that the other end has TAOS enabled and is currently transmitting an alarm condition."
  },
  "csdtf100RmtAISCopper": {
    "name": "csdtf100RmtAISCopper",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "alarm": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Remote Copper AIS status. Alarm Indication Signal. When equal to alarm(1), this means that the other end has TAOS enabled and is currently transmitting an alarm condition."
  },
  "csdtf100RmtCopperLoopback": {
    "name": "csdtf100RmtCopperLoopback",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Remote Copper Loopback configuration. Enable loopback on the copper interface. Copper Loopback causes all data that is sent to the copper interface to be transmitted back out the copper interface. NOT SUPPORTED on initial version of the product."
  },
  "csdtf100RmtCopperLongHaul": {
    "name": "csdtf100RmtCopperLongHaul",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This variable indicates the current position of the remote device's Short/Long haul configuration switch."
  },
  "csdtf100RmtConfigMode": {
    "name": "csdtf100RmtConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Remote Configuration Mode. This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "csdtf100RmtTPCoax": {
    "name": "csdtf100RmtTPCoax",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.39",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "tp": 1,
          "coax": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates the connector type installed on the remote copper interface. For E1 converters, this can be either Twisted Pair or Coax. For T1, it is always Twisted Pair."
  },
  "csdtf100RmtCopperLineBuildout": {
    "name": "csdtf100RmtCopperLineBuildout",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.40",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "e13-0V120ohm": 1,
          "e12-37V75ohm": 2,
          "t1SH-DSX-0-133ANSIT1403": 3,
          "t1SH-DSX-133-266": 4,
          "t1SH-DSX-266-399": 5,
          "t1SH-DSX-399-533": 6,
          "t1SH-DSX-533-655": 7,
          "t1SH-DSX-6V": 8,
          "t1LH-0dB": 9,
          "t1LH-m7-5dB": 10,
          "t1LH-m15dB": 11,
          "t1LH-m22-5dB": 12
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The electrical characteristics of the remote Copper interface. Values are the same as the values for csdtf100CopperLineBuildout(21)"
  },
  "csdtf100RmtFiberLoopback": {
    "name": "csdtf100RmtFiberLoopback",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.41",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable loopback on the remote Fiber interface. Fiber Loopback causes all data that is sent to the Fiber interface to be transmitted back out the Fiber interface."
  },
  "csdtf100CacheClean": {
    "name": "csdtf100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.9.1.42",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cpsmp110Table": {
    "name": "cpsmp110Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CPSMP110 IFO (Instant Fail-Over) Power Supply in the stack. indexed by sub-device index, cabinet serial number, and slot. Note that some columns of this table support multiple subdevices, and some do not. For example, there is exactly one SerialNumber for each CPSMP110. No subdevices exist, so the placeholder value 1 is used as the subdevice index. However, a CPSMP110 has zero or more current sensors, which (if they exist) are indexed as different subdevices, starting with 1. Columns with subdevices have names ending in 'Tbl'"
  },
  "cpsmp110Entry": {
    "name": "cpsmp110Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsmp110SubDeviceIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cpsmp110BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cpsmp110SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CPSMP100"
  },
  "cpsmp110SubDeviceIndex": {
    "name": "cpsmp110SubDeviceIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Generally, individual devices in this MIB are distinguished by BiaIndex and SlotIndex. This device differs from many in that it contains multiple subdevices (in this case, fans, temperature sensors, current sensors, and power supplies). The number of subdevices varies with the manufactured configuration. Subdevices within devices are indexed by BiaIndex, SlotIndex, and SubDeviceIndex. When the subdevice column is read from the table, the value '1' is always returned."
  },
  "cpsmp110BiaIndex": {
    "name": "cpsmp110BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cpsmp110SlotIndex": {
    "name": "cpsmp110SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed. Power Supplies occupy special slots numbered 125 and higher. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cpsmp110Groups": {
    "name": "cpsmp110Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CPSMP110' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]' There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cpsmp110MRevision": {
    "name": "cpsmp110MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cpsmp110CfgMatch": {
    "name": "cpsmp110CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cpsmp110SerialNumber": {
    "name": "cpsmp110SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cpsmp110ConfigMode": {
    "name": "cpsmp110ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device may have a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cpsmp110MasterTempFault": {
    "name": "cpsmp110MasterTempFault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The master temperature fault indicator for this device. A value of yes(1) indicates that at least one temperature sensor encountered a fault condition since the last time the device was queried by the management module. The statuses of individual temperature sensors can be found in cpsmp110TemperatureTbl. Note that in the unusual case that a sensor spikes (i.e. encounters a fault, and then quickly returns to normal), it will be difficult to determine which sensor faulted. However, the fact that any sensor faulted is sufficient cause to examine the cabinet further. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cpsmp110MasterCurrentFault": {
    "name": "cpsmp110MasterCurrentFault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The master current fault indicator for this device. A value of yes(1) indicates that at least one current sensor encountered a fault condition since the last time the device was queried by the management module. The statuses of individual current sensors can be found in cpsmp110CurrentTbl. Note that in the unusual case that a sensor spikes (i.e. encounters a fault, and then quickly returns to normal), it will be difficult to determine which sensor faulted. However, the fact that any sensor faulted is sufficient cause to examine the cabinet further. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cpsmp110MasterFanFault": {
    "name": "cpsmp110MasterFanFault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The master fan fault indicator for this device. A value of yes(1) indicates that at least one fan current sensor encountered a fault condition since the last time the device was queried by the management module. The statuses of individual fan current sensors can be found in cpsmp110FanStatusTbl. Note that in the unusual case that a sensor spikes (i.e. encounters a fault, and then quickly returns to normal), it will be difficult to determine which sensor faulted. However, the fact that any sensor faulted is sufficient cause to examine the cabinet further. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cpsmp110FirmwareRevision": {
    "name": "cpsmp110FirmwareRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The firmware revision level for this device. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cpsmp110PSSupplyTbl": {
    "name": "cpsmp110PSSupplyTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ac": 1,
          "dc": 2,
          "reserved3": 3,
          "reserved4": 4,
          "notInstalled": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The supply voltage that this unit is designed to accept. If AC(1), the supply accepts VAC. If DC(2), the supply accepts. A single CPSMP110 control unit can support multiple subdevices of this type. There will be one entry per subdevice."
  },
  "cpsmp110PSRoleTbl": {
    "name": "cpsmp110PSRoleTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "master": 1,
          "slave": 2,
          "shared": 3,
          "notInstalled": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Some power supplies support a Master/Slave relationship: When one power supply is set to master(1) and the other is set to slave(2), the master will supply all power to the cabinet, and the slave will take over if the master stops supplying power. This is useful when (for example) one supply is attached to a wall socket and the other to a battery backup. The cabinet can be directed to only draw power from batteries when there is no alternative. When both power supplies are set to master(1), the results are determined automatically. WARNING: It is up to the system administrator to ensure that at least one power supply is set to master(1). It is illegal to set all power supplies to slave(2). If this occurs, the cabinet may lose all power under certain circumstances, even if power is available. In some cases, the Master/Slave relationship cannot be configured via management; it is determined by other means, such as the slot locations in which the supplies are installed, or switches on the supplies. In this case, attempts to change the value of this variable from management will be ignored. The ConfigMode variable will have the value hardware(2) in this case. If a supply does not support (or can disable) Master/Slave functionality, the value shared(3) is returned. In this case, all ready power supplies share the load evenly. A single CPSMP110 control unit can support multiple subdevices of this type."
  },
  "cpsmp110PSReadyTbl": {
    "name": "cpsmp110PSReadyTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The readiness of this power supply module. A value of yes(1) indicates the module is ready to supply power to the cabinet. A value of no(2) indicates that the supply has no output power to offer, either because it is malfunctioning or because it has no input power. A single CPSMP110 control unit can support multiple subdevices of this type."
  },
  "cpsmp110PSInUseTbl": {
    "name": "cpsmp110PSInUseTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The use status of this power supply module. A value of yes(1) indicates the module is supplying power to the cabinet. This variable is useful in configurations where master/slave role functionality is supported to determine whether the Master or the Slave is active. In shared configurations, the value of PSReadyTbl is strongly preferred as an indication of the status of the supply. A single CPSMP110 control unit can support multiple subdevices of this type."
  },
  "cpsmp110TemperatureTbl": {
    "name": "cpsmp110TemperatureTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The temperature, in tenths of degrees centigrade, read by this temperature sensor. A single CPSMP110 control unit can support multiple subdevices of this type."
  },
  "cpsmp110CurrentTbl": {
    "name": "cpsmp110CurrentTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The current, in milliwatts, read by this current sensor. A single CPSMP110 control unit can support multiple subdevices of this type."
  },
  "cpsmp110FanStatusTbl": {
    "name": "cpsmp110FanStatusTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ok": 1,
          "fault": 2,
          "notInstalled": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The status of a fan. A value of fault(2) indicates that the control unit has detected a problem with the fan, usually that it is is drawing excessive current. A single CPSMP110 control unit can support multiple subdevices of this type."
  },
  "cpsmp110TempFaultTbl": {
    "name": "cpsmp110TempFaultTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Each entry in this column corresponds to an entry with the same indices in cpsmp110TemperatureTable. It indicates whether or not the temperature read by the sensor is within the acceptable range. A single CPSMP110 control unit can support multiple subdevices of this type."
  },
  "cpsmp110CurrFaultTbl": {
    "name": "cpsmp110CurrFaultTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Each entry in this column corresponds to an entry with the same indices in cpsmp110CurrentTable. It indicates whether or not the current read by the sensor is within the acceptable range. A single CPSMP110 control unit can support multiple subdevices of this type."
  },
  "cpsmp110PSCount": {
    "name": "cpsmp110PSCount",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The maximum number of power supplies supported in this configuration."
  },
  "cpsmp110TempSensorCount": {
    "name": "cpsmp110TempSensorCount",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of temperature sensors supported in this device."
  },
  "cpsmp110CurrSensorCount": {
    "name": "cpsmp110CurrSensorCount",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of current sensors supported in this device."
  },
  "cpsmp110FanCount": {
    "name": "cpsmp110FanCount",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of fans supported in this device."
  },
  "cpsmp110CacheClean": {
    "name": "cpsmp110CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.10.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cbftf100Table": {
    "name": "cbftf100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CBFTF100 switch in the stack. Indexed by sub-device index, cabinet serial number, and slot. Note that some columns of this table support multiple subdevices, and some do not. For example, there is exactly one SerialNumber for each CBFTF100. No subdevices exist, so the placeholder value 1 is used as the subdevice index. However, a CBFTF100 has multiple switch ports, which are indexed as different subdevices, starting with 1. Columns with subdevices have names ending in 'Tbl'"
  },
  "cbftf100Entry": {
    "name": "cbftf100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cbftf100SubDeviceIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cbftf100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cbftf100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CBFTF100"
  },
  "cbftf100SubDeviceIndex": {
    "name": "cbftf100SubDeviceIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Generally, individual devices in this MIB are distinguished by BiaIndex and SlotIndex. This device differs from many in that it contains multiple subdevices (in this case, switch ports). The number of subdevices varies with the manufactured configuration. Subdevices within devices are indexed by BiaIndex, SlotIndex, and SubDeviceIndex. When the subdevice column is read from the table, the value '1' is always returned."
  },
  "cbftf100BiaIndex": {
    "name": "cbftf100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf100SlotIndex": {
    "name": "cbftf100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed. Power Supplies occupy special slots numbered 125 and higher. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf100Groups": {
    "name": "cbftf100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'cbftf100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]' There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf100MRevision": {
    "name": "cbftf100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf100CfgMatch": {
    "name": "cbftf100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf100SerialNumber": {
    "name": "cbftf100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf100ConfigMode": {
    "name": "cbftf100ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device may have a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf100FirmwareRevision": {
    "name": "cbftf100FirmwareRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The firmware revision level for this device. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf100SelfTestFailed": {
    "name": "cbftf100SelfTestFailed",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This variable indicates the status of the pass/fail power on test. If the power on test fails, normal operation of this device is probably not possible. "
  },
  "cbftf100SpanningTree": {
    "name": "cbftf100SpanningTree",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable allows the agent to enable or disable Spanning Tree if it is supported. Not all versions of the hardware support Spanning Tree."
  },
  "cbftf100MirrorCfg": {
    "name": "cbftf100MirrorCfg",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Global enable/disable for mirror port functionality. When this variable is set to disabled, the values of cbftf100MirrorSelTbl, cbftf100MirrorInTbl, and cbftf100MirrorOutTbl are ignored."
  },
  "cbftf100SACMasterCfg": {
    "name": "cbftf100SACMasterCfg",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Global enable/disable for Source Address Change detection functionality. When this variable is set to disabled the values in cbtf100SACCfgTbl are ignored."
  },
  "cbftf100FormFactor": {
    "name": "cbftf100FormFactor",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "s1W2a": 1,
          "s1W1N2a": 2,
          "s1W1N1a": 3,
          "s2W2N4a": 4,
          "s2W1N5a": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A code corresponding to a physical configuration of the product. This code indicates the number of slots occupied and the number of physical connectors present. In the labels for the values above, s indicates the number of slots occupied, W is a count of Wide port positions (which can built as almost any type of connector), and N is a count of narrow port positions (which are typically twisted pair ports). The lowercase letter at the end differentiates different form factors that would otherwise have identical descriptions under this limited scheme."
  },
  "cbftf100AutoNegotTbl": {
    "name": "cbftf100AutoNegotTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enables or disables autonegtiation of link speed and duplex for twisted pair ports. Not supported on Fiber ports. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100FullDuplexTbl": {
    "name": "cbftf100FullDuplexTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fullDuplex": 1,
          "halfDuplex": 2,
          "negotiating": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "In most cases this is a configuration setting that controls the duplex mode; fullDuplex is full duplex and halfDuplex is half duplex. On twisted pair ports with autonegotiation enabled, this is a status indication showing the duplex value decided upon during the negotiation. When link is down, autonegotiation has not been completed yet, and the duplex setting is therefore unknown and the value is negotiating(3). There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100100MbpsTbl": {
    "name": "cbftf100100MbpsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mbps100": 1,
          "mbps10": 2,
          "negotiating": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "In most cases this is a configuration setting that controls the link speed. On twisted pair ports with autonegotiation enabled, this is a status indication showing the link speed decided upon during negotiation. When link is down, autonegotiation has not been completed yet, and the link speed is therefore unknown and is negotiating(3). This variable is an indicator only for fiber ports; all fiber ports report mbps100(1) at all times. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100Adv10HDXTbl": {
    "name": "cbftf100Adv10HDXTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration setting controls whether or not each port advertises willingness to connect at 10Mbps, half duplex. This setting is not supported on fiber ports, and is ignored when autonegotiation is disabled. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100Adv10FDXTbl": {
    "name": "cbftf100Adv10FDXTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration setting controls whether or not each port advertises willingness to connect at 10Mbps, full duplex. This setting is not supported on fiber ports, and is ignored when autonegotiation is disabled. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100Adv100HDXTbl": {
    "name": "cbftf100Adv100HDXTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration setting controls whether or not each port advertises willingness to connect at 100Mbps, half duplex. This setting is not supported on fiber ports, and is ignored when autonegotiation is disabled. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100Adv100FDXTbl": {
    "name": "cbftf100Adv100FDXTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration setting controls whether or not each port advertises willingness to connect at 100Mbps, full duplex. This setting is not supported on fiber ports, and is ignored when autonegotiation is disabled. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100CrossTbl": {
    "name": "cbftf100CrossTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "auto": 1,
          "mdi": 2,
          "mdix": 3,
          "notSupported": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Configuration setting for copper TX/RX pair correction. A setting of auto(1) causes the port to automatically correct TX/RX pairs if necessary. If autonegotiation is disabled on the port, the auto(1) setting is not supported. A setting of mdi(2) causes the TX/RX pairs to be passed straight through with no correction. A setting of mdix(3) causes the TX/RX pairs to be swapped. This setting is supprted for copper ports only; a read-only value of notSupported(4) is returned for fiber ports. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100PauseCfgTbl": {
    "name": "cbftf100PauseCfgTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The Pause feature allows Ethernet MACs that support it to send data pacing 'Pause' messages to each other. A setting of enabled(1) causes this port to advertise pause capability and a setting of disabled(2) disables pause capability advertising. On fiber ports, a read-only value of notSupported(3) is returned. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100PauseStatTbl": {
    "name": "cbftf100PauseStatTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "paused": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Pause feature allows Ethernet MACs that support it to send data pacing 'Pause' messages to each other. A value of paused(1) indicated the port is in a paused state, and a value of normal(2) indicates the port is operating normally. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100FarEndFaultTbl": {
    "name": "cbftf100FarEndFaultTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When Far End Fault is set to enabled(1), a loss of link on receive will cause the transmitter to shut down, in order to inform the device at the far end of the link that a fault has occurred. Far End Fault is only supported on fiber ports. A read-only value of notSupported(3) is returned for copper ports. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100ConnectorTbl": {
    "name": "cbftf100ConnectorTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of connectors built into each port of this device. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100SACCfgTbl": {
    "name": "cbftf100SACCfgTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration setting controls whether changes in source MAC address are reported. When set to enabled(1), a change in MAC address will result in a momentary change in the value of SACStatTbl from same(2) to changed(1) and back, and the transmission of a trap, if the management module is so configured. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100SACStatTbl": {
    "name": "cbftf100SACStatTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "changed": 1,
          "same": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This status value indicates whether or not the source MAC address attached to this port changed in the last polling period. This value tends to change quite quickly; therefore, the 'ERROR' traps that are sent when SAC is detected are a much more reliable indicator. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100MirrorSelTbl": {
    "name": "cbftf100MirrorSelTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mirror": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration setting allows a mirror port to be selected. The selected port will re-transmit copies of all packets transmitted on ports whose MirrorOutTbl value is set to mirrorOut(1), and will also transmit copies of all packets received by all ports whose MirrorInTbl value is set to mirrorIn(1). It is recommended that a maximum of one MirrorSelTbl, one MirrorInTbl, and one MirrorOutTbl port be selected at once, since the switch may have trouble handling the traffic that can result from other configurations. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100MirrorInTbl": {
    "name": "cbftf100MirrorInTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mirrorIn": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration setting allows a mirror source port to be selected. All packets received on each port with a MirrorInTbl setting of mirrorIn(1) will be retransmitted on all ports whose MirrorSelTbl setting is mirror(1). It is recommended that a maximum of one MirrorSelTbl, one MirrorInTbl, and one MirrorOutTbl port be selected at once, since the switch may have trouble handling the traffic that can result from other configurations. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100MirrorOutTbl": {
    "name": "cbftf100MirrorOutTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mirrorOut": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration setting allows a mirror source port to be selected. All packets transmitted on each port with a MirrorInTbl setting of mirrorOut(1) will be retransmitted on all ports whose MirrorSelTbl setting is mirror(1). It is recommended that a maximum of one MirrorSelTbl, one MirrorInTbl, and one MirrorOutTbl port be selected at once, since the switch may have trouble handling the traffic that can result from other configurations. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100LinkTbl": {
    "name": "cbftf100LinkTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This table contains the link status of each port in the switch. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf100PortCount": {
    "name": "cbftf100PortCount",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A count of the switch ports in this device. i.e. the maximum subdevice index supported by this switch."
  },
  "cbftf100LinkPassThrough": {
    "name": "cbftf100LinkPassThrough",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "If Link Passthrough is enabled on a port, loss of link on the opposite port will be propegated through to this port so that the switch does not prevent one end device from detecting loss of link on the opposite end device. Far end fault is only supported on copper ports and only in switch configurations that have exactly two ports."
  },
  "cbftf100CacheClean": {
    "name": "cbftf100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cbftf100RedundantPath": {
    "name": "cbftf100RedundantPath",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.11.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This variable shows the status of the redundant fiber capability. If the value is enabled(1), this means that the hardware switch to enable redundant fiber is on, and the two fiber ports on the device are presumed to be connected to the same remote device. Even if both fibers have link, traffic flows to and from that device through only one of the two fiber pairs at once. This provides a redundant path should one of the fibers be compromised. If the value is disabled(2), the hardware switch to enable redundant fiber is off, and the two fiber ports on the device pass traffic normally (i.e. independently and simultaneously). If the value is notSupported(3), the device does not have redundant fiber capability."
  },
  "cetct100Table": {
    "name": "cetct100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CETCT100 10Mbps Twisted-Pair to Fiber Ethernet Media Converter in the stack, indexed by cabinet serial number and slot."
  },
  "cetct100Entry": {
    "name": "cetct100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cetct100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cetct100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CETCT100"
  },
  "cetct100BiaIndex": {
    "name": "cetct100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cetct100SlotIndex": {
    "name": "cetct100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "cetct100Groups": {
    "name": "cetct100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CETCT100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "cetct100MRevision": {
    "name": "cetct100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cetct100CfgMatch": {
    "name": "cetct100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "cetct100SerialNumber": {
    "name": "cetct100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "cetct100ConfigMode": {
    "name": "cetct100ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "cetct100FirmwareRevision": {
    "name": "cetct100FirmwareRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The firmware revision level for this device."
  },
  "cetct100TPLink": {
    "name": "cetct100TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Copper Link for this device"
  },
  "cetct100Collision": {
    "name": "cetct100Collision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This status variable indicates whether or not an Ethernet collision occurred during the most recent polling cycle."
  },
  "cetct100CoaxActivity": {
    "name": "cetct100CoaxActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This status variable indicates whether or not Ethernet traffic was detected on the Coax interface during the most recent polling cycle."
  },
  "cetct100TPActivity": {
    "name": "cetct100TPActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This status variable indicates whether or not Ethernet traffic was detected on the Twisted Pair interface during the most recent polling cycle."
  },
  "cetct100CollisionsPerMinute": {
    "name": "cetct100CollisionsPerMinute",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Ethernet collisions that occurred during the most recently completed measured minute. Every 60 seconds, the device moves its previous collision count into this variable, and restarts the counter at zero."
  },
  "cetct100CollisionsPerHour": {
    "name": "cetct100CollisionsPerHour",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of Ethernet collisions that occurred during the most recently completed measured hour. Every 60 minutes, the device moves its previous collision count into this variable, and restarts the counter at zero."
  },
  "cetct100ConnA": {
    "name": "cetct100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of media connector built into this device."
  },
  "cetct100ConnB": {
    "name": "cetct100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of media connector built into this device."
  },
  "cetct100CacheClean": {
    "name": "cetct100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.12.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "ccscf100Table": {
    "name": "ccscf100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each ccscf100 T3/E3 Copper to Fiber Media Converter in the stack, indexed by cabinet serial number and slot."
  },
  "ccscf100Entry": {
    "name": "ccscf100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "ccscf100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "ccscf100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single ccscf100"
  },
  "ccscf100BiaIndex": {
    "name": "ccscf100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "ccscf100SlotIndex": {
    "name": "ccscf100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "ccscf100Groups": {
    "name": "ccscf100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'ccscf100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "ccscf100MRevision": {
    "name": "ccscf100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "ccscf100CfgMatch": {
    "name": "ccscf100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "inactive": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "ccscf100SerialNumber": {
    "name": "ccscf100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "ccscf100ConfigMode": {
    "name": "ccscf100ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "ccscf100FiberLink": {
    "name": "ccscf100FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "ccscf100CopperLink": {
    "name": "ccscf100CopperLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Copper Link for this device"
  },
  "ccscf100AISFiber": {
    "name": "ccscf100AISFiber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "alarm": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Alarm Indication Signal. When equal to alarm(1), this means that the other end has TAOS enabled and is currently transmitting an alarm condition."
  },
  "ccscf100AISCopper": {
    "name": "ccscf100AISCopper",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "alarm": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Alarm Indication Signal. When equal to alarm(1), this means that the other end has TAOS enabled and is currently transmitting an alarm condition."
  },
  "ccscf100DS3LineBuildout": {
    "name": "ccscf100DS3LineBuildout",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "boost": 1,
          "normal": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The characteristics of the copper interface"
  },
  "ccscf100E3DS3": {
    "name": "ccscf100E3DS3",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "e3": 1,
          "ds3": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This variable indicates whether the current device is the T1 or the E1 version."
  },
  "ccscf100CopperLoopback": {
    "name": "ccscf100CopperLoopback",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable loopback on the copper interface."
  },
  "ccscf100FiberLoopback": {
    "name": "ccscf100FiberLoopback",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable loopback on the copper interface."
  },
  "ccscf100ConnA": {
    "name": "ccscf100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device"
  },
  "ccscf100ConnB": {
    "name": "ccscf100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Copper connector built into this device"
  },
  "ccscf100CacheClean": {
    "name": "ccscf100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.13.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cfetf105Table": {
    "name": "cfetf105Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CFTEF105 100Mbps Twisted-Pair to Fiber Ethernet Media Converter in the stack, indexed by cabinet serial number and slot."
  },
  "cfetf105Entry": {
    "name": "cfetf105Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cfetf105BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cfetf105SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CFETF105"
  },
  "cfetf105BiaIndex": {
    "name": "cfetf105BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cfetf105SlotIndex": {
    "name": "cfetf105SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "cfetf105Groups": {
    "name": "cfetf105Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CFETF105' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "cfetf105MRevision": {
    "name": "cfetf105MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cfetf105CfgMatch": {
    "name": "cfetf105CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "cfetf105SerialNumber": {
    "name": "cfetf105SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "cfetf105ConnA": {
    "name": "cfetf105ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device"
  },
  "cfetf105ConnB": {
    "name": "cfetf105ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Copper connector built into this device"
  },
  "cfetf105TPLink": {
    "name": "cfetf105TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Twisted Pair Link for this device"
  },
  "cfetf105FiberLink": {
    "name": "cfetf105FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "cfetf105AutoNegot": {
    "name": "cfetf105AutoNegot",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/Disable Autonegotiation"
  },
  "cfetf105LinkPassThrough": {
    "name": "cfetf105LinkPassThrough",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/Disable for Link Pass Through, a feature that causes loss of link on one side of a media converter to be passed through to the other side, so that upstream equipment can see the fault condition."
  },
  "cfetf105AutoCross": {
    "name": "cfetf105AutoCross",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/Disable for automatic copper TX/RX pair correction"
  },
  "cfetf105TPActivity": {
    "name": "cfetf105TPActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Network traffic indicator for Copper side of this device"
  },
  "cfetf105FiberActivity": {
    "name": "cfetf105FiberActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Network traffic indicator for Fiber side of this device"
  },
  "cfetf105ConfigMode": {
    "name": "cfetf105ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "cfetf105CacheClean": {
    "name": "cfetf105CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.14.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "smacf100PTable": {
    "name": "smacf100PTable",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each SMACF100P virtual slide-in device. This table dexcribes ONE port on a SMACFxxx colony switch"
  },
  "smacf100PEntry": {
    "name": "smacf100PEntry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "smacf100PSubDeviceIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "smacf100PBiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "smacf100PSlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single SMACF100P"
  },
  "smacf100PSubDeviceIndex": {
    "name": "smacf100PSubDeviceIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Generally, individual devices in this MIB are distinguished by BiaIndex and SlotIndex. This device differs from many in that it contains multiple subdevices. The number of subdevices varies with the manufactured configuration. Subdevices within devices are indexed by BiaIndex, SlotIndex, and SubDeviceIndex. When the subdevice column is read from the table, the value '1' is always returned."
  },
  "smacf100PBiaIndex": {
    "name": "smacf100PBiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "smacf100PSlotIndex": {
    "name": "smacf100PSlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "smacf100PGroups": {
    "name": "smacf100PGroups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'SMACF100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "smacf100PCfgMatch": {
    "name": "smacf100PCfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "smacf100PConnA": {
    "name": "smacf100PConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber or Copper connector built into this device"
  },
  "smacf100PLink": {
    "name": "smacf100PLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Port Link for this device"
  },
  "smacf100P100Mbps": {
    "name": "smacf100P100Mbps",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mbps100": 1,
          "mbps10": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Communication speed for this port."
  },
  "smacf100PFullDuplex": {
    "name": "smacf100PFullDuplex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fullDuplex": 1,
          "halfDuplex": 2,
          "negotiating": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "In most cases this is a configuration setting that controls the duplex mode; fullDuplex is full duplex and halfDuplex is half duplex. On twisted pair ports with autonegotiation enabled, this is a status indication showing the duplex value decided upon during the negotiation. When link is down, autonegotiation has not been completed yet, and the duplex setting is therefore unknown and the value is negotiating(3)."
  },
  "smacf100PSACStat": {
    "name": "smacf100PSACStat",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "changed": 1,
          "same": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This status value indicates whether or not the source MAC address attached to this port changed in the last polling period. This value tends to change quite quickly; therefore, the 'ERROR' traps that are sent when SAC is detected are a much more reliable indicator."
  },
  "smacf100PEnabled": {
    "name": "smacf100PEnabled",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Status of of this Port. A value of yes(1) indicates this port is 'enabled'. A value of no(2) indicates this port is 'disabled'."
  },
  "smacf100PAutoNegot": {
    "name": "smacf100PAutoNegot",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enables or disables autonegtiation of link speed and duplex for twisted pair ports. Not supported on Fiber ports."
  },
  "smacf100PAdv10HDX": {
    "name": "smacf100PAdv10HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration setting controls whether or not each port advertises willingness to connect at 10Mbps, half duplex. This setting is not supported on fiber ports, and is ignored when autonegotiation is disabled."
  },
  "smacf100PAdv10FDX": {
    "name": "smacf100PAdv10FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration setting controls whether or not each port advertises willingness to connect at 10Mbps, full duplex. This setting is not supported on fiber ports, and is ignored when autonegotiation is disabled."
  },
  "smacf100PAdv100HDX": {
    "name": "smacf100PAdv100HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration setting controls whether or not each port advertises willingness to connect at 100Mbps, half duplex. This setting is not supported on fiber ports, and is ignored when autonegotiation is disabled."
  },
  "smacf100PAdv100FDX": {
    "name": "smacf100PAdv100FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration setting controls whether or not each port advertises willingness to connect at 100Mbps, full duplex. This setting is not supported on fiber ports, and is ignored when autonegotiation is disabled."
  },
  "smacf100PSTPState": {
    "name": "smacf100PSTPState",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notSupported": 1,
          "disabled": 2,
          "blocking": 3,
          "listening": 4,
          "learning": 5,
          "forwarding": 6
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Port spanning tree state."
  },
  "smacf100PLastMAC": {
    "name": "smacf100PLastMAC",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Last MAC Address this port communicated with."
  },
  "smacf100PFarEndFaultCfg": {
    "name": "smacf100PFarEndFaultCfg",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Far end fault configuration of this Port."
  },
  "smacf100PFarEndFaultStat": {
    "name": "smacf100PFarEndFaultStat",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Far end fault status of this port."
  },
  "smacf100PTxOctets": {
    "name": "smacf100PTxOctets",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes of data transmitted through this interface."
  },
  "smacf100PWrapTxOctets": {
    "name": "smacf100PWrapTxOctets",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that the unsigned 32-bit smacf100PTxOctets(21) MIB variable has wrapped."
  },
  "smacf100PRxOctets": {
    "name": "smacf100PRxOctets",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of bytes of data received through this interface."
  },
  "smacf100PWrapRxOctets": {
    "name": "smacf100PWrapRxOctets",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that the unsigned 32-bit smacf100PRxOctets(23) MIB variable has wrapped."
  },
  "smacf100PSACCfg": {
    "name": "smacf100PSACCfg",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Source Address Change detection configuration. Enables or Disables the generation of traps related to source address change for this port. When disabled, the smacf100PSACStat(10) variable always reads no."
  },
  "smacf100PBlockMgmt": {
    "name": "smacf100PBlockMgmt",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "block": 1,
          "pass": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Through this variable and others, the SMACF100 supports port- based VLANs. The SMACF100 will pass tags for IEEE 802.3ac VLANs, but will neither insert nor strip them. When this variable is set to block(1), this port may neither transmit packets to nor receive packets from management entities within this switch, i.e. the reporting unit (present in every SMACF100) and the management module (present in SMACF100 Main Management Units). This feature is intended to block traffic between particular Ethernet interfaces inside a single switch; it cannot identify or block management traffic from external sources. A single port is selected for configuration via the slot index. The subdevice index for this variable must always be 1. The logical soundness of VLAN rules cannot be validated. If you set smacf100PBlockMgmt(26) to block(1) on a port that provides a path between a reporting unit and its management module, or between a management module and its Network Management Station, you will be unable to manage the SMACF100 until the situation is rectified (by recabling to work around the misconfiguration, or by resetting the SMACF100 to factory defaults via the serial port)."
  },
  "smacf100PBlockPort": {
    "name": "smacf100PBlockPort",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "block": 1,
          "pass": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Through this variable and others, the SMACF100 supports port- based VLANs. The SMACF100 will pass tags for IEEE 802.3ac VLANs, but will neither insert nor strip them. This table allows the network administrator to block traffic between pairs of ports within a single SMACF100. A pair of ports is selected for configuration by specifying a slot index and a subdevice index. The order in which the two ports are specified is unimportant, the effects of the configuration are identical on both ports. Each port has a smacf100PBlockPort(27) entry for every other port. So, communication between ports <p1> and <p2> in cabinet serial <serial> can be blocked by setting either smacf100PBlockPort.<p1>.<serial>.<p2> or smacf100PBlockPort.<p2>.<serial>.<p1> to block(1). Attempts to prevent a port from communicating with itself are ignored. Beyond that, the logical soundness of VLAN rules cannot be validated. There is one entry per subdevice, and one subdevice per port on the SMACF100."
  },
  "smacf100PTxDropPkts": {
    "name": "smacf100PTxDropPkts",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This counter is incremented every time a transmit packet is dropped due to lack of resources (e.g. transmit FIFO underflow), or an internal MAC sublayer transmit error occurs that is not counted by either TxLateCollision or TxExcessiveCollision counters."
  },
  "smacf100PTxBroadcastPkts": {
    "name": "smacf100PTxBroadcastPkts",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets transmitted by this port that are directed to a broadcast address. This counter includes neither errored broadcast packets nor valid multicast packets."
  },
  "smacf100PTxMulticastPkts": {
    "name": "smacf100PTxMulticastPkts",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets transmitted by this port that are directed to a multicast address. This counter includes neither errored multicast packets nor valid broadcast packets."
  },
  "smacf100PTxUnicastPkts": {
    "name": "smacf100PTxUnicastPkts",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets transmitted by this port that are directed to a unicast address."
  },
  "smacf100PTxCollisions": {
    "name": "smacf100PTxCollisions",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of collisions experienced by this port during packet transmissions."
  },
  "smacf100PTxSingleCollision": {
    "name": "smacf100PTxSingleCollision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets successfully transmitted by this port that experienced exactly one collision."
  },
  "smacf100PTxMultipleCollision": {
    "name": "smacf100PTxMultipleCollision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets successfully transmitted by this port that experienced more than one collision."
  },
  "smacf100PTxDeferredTransmit": {
    "name": "smacf100PTxDeferredTransmit",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets transmitted by a this port for which the first transmission attempt was delayed because the medium was busy."
  },
  "smacf100PTxLateCollision": {
    "name": "smacf100PTxLateCollision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that a collision was detected later than 512 bit-times into the transmission of a packet."
  },
  "smacf100PTxExcessiveCollision": {
    "name": "smacf100PTxExcessiveCollision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets that were not transmitted from this port because 16 unsucessful attempts were made to transmit the packet."
  },
  "smacf100PTxFrameInDisc": {
    "name": "smacf100PTxFrameInDisc",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of valid packets received which are discarded by the forwarding process due to lack of space on an output queue. This attribute only increments if a network device is not acting in compliance with a flow control request."
  },
  "smacf100PTxPausePkts": {
    "name": "smacf100PTxPausePkts",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.39",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of PAUSE frames transmitted by this port. This implies that the port is in full duplex mode and that 802.3x flow control was enabled at the completion of autonegotiation."
  },
  "smacf100PRxUndersizePkts": {
    "name": "smacf100PRxUndersizePkts",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.40",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets received by this port that are less than 64 bytes long (excluding framing bits but including the Frame Check Sequence)."
  },
  "smacf100PRxPausePkts": {
    "name": "smacf100PRxPausePkts",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.41",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The number of PAUSE frames recieved by this port. The PAUSE frame must have a valid MAC Control Frame EtherType field (88- 08h), have a destination MAC address of either the MAC Control frame reseved multicast address (01:80:C2:00:00:01), be a minimum of 64 bytes long (excluding preamble but including Frame Check Sequence), and have a valid CRC. Although an 802.3 compliant MAC is only permitted to transmit PAUSE frames when in full duplex mode with flow control enabled and with the transfer of PAUSE frames determined by the result of autonegotiation, an 802.3 MAC receiver is required to count all received PAUSE frames, regardless of its half/full-duplex status. An indication that a MAC is in half-duplex mode with this counter incrementing indicates a non- compliant transmitting device on the network."
  },
  "smacf100PPkts64Octets": {
    "name": "smacf100PPkts64Octets",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.42",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets, including error packets, that are 64 bytes long."
  },
  "smacf100PPkts65to127Octets": {
    "name": "smacf100PPkts65to127Octets",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.43",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets, including error packets, that are between 65 and 127 bytes long."
  },
  "smacf100PPkts128to255Octets": {
    "name": "smacf100PPkts128to255Octets",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.44",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets, including error packets, that are between 128 and 255 bytes long."
  },
  "smacf100PPkts256to511Octets": {
    "name": "smacf100PPkts256to511Octets",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.45",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets, including error packets, that are between 256 and 511 bytes long."
  },
  "smacf100PPkts512to1023Octets": {
    "name": "smacf100PPkts512to1023Octets",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.46",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets, including error packets, that are between 512 and 1023 bytes long."
  },
  "smacf100PPkts1024to1522Octets": {
    "name": "smacf100PPkts1024to1522Octets",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.47",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets, including error packets, that are between 1024 and 1522 bytes long."
  },
  "smacf100PRxOversizePkts": {
    "name": "smacf100PRxOversizePkts",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.48",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets received by this port that are longer than 1522 bytes inclusive (excluding framing bits but including the Frame Check Sequence). Note that this counter alone will be incremented for packets in the range 1523 to 1536 bytes inclusive, whereas both this counter and the RxExcessSizeDisc counter will be incremented for packets of 1537 bytes and longer."
  },
  "smacf100PRxJabbers": {
    "name": "smacf100PRxJabbers",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.49",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets received by a port that are longer than 1522 bytes and have either a Frame Check Sequence error or an alignment error."
  },
  "smacf100PRxAlignmentErrors": {
    "name": "smacf100PRxAlignmentErrors",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.50",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets received by this port that have a length (excluding framing bits but including the Frame Check Sequence) between 64 and 1522 bytes inclusive, and have a bad Frame Check Sequence with a non-integral number of bytes."
  },
  "smacf100PRxFCSErrors": {
    "name": "smacf100PRxFCSErrors",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.51",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets received by this port that have a length (excluding framing bits but including the Frame Check Sequence) between 64 and 1522 bytes inclusive, and have a bad Frame Check Sequence with a integral number of bytes."
  },
  "smacf100PRxGoodOctets": {
    "name": "smacf100PRxGoodOctets",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.52",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of bytes in all good packets received by a port (excluding framing bits but including Frame Check Sequences)."
  },
  "smacf100PWrapRxGoodOctets": {
    "name": "smacf100PWrapRxGoodOctets",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.53",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times that the unsigned 32-bit smacf100PRxGoodOctets(52) MIB variable for this port has wrapped."
  },
  "smacf100PRxDropPkts": {
    "name": "smacf100PRxDropPkts",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.54",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets received by this port that were dropped due to lack of resources (e.g. lack of input buffers) or were dropped due to a lack of resources before a determination of the validity of the packet could be made (e.g. receive FIFO overflow). The counter is only incremented if the receive error was not counted by either the RxExcessSizeDisc, the RxAlignmentErrors or the RxFCSErrors counters.)"
  },
  "smacf100PRxUnicastPkts": {
    "name": "smacf100PRxUnicastPkts",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.55",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets received by this port that are addressed to a unicast address."
  },
  "smacf100PRxMulticastPkts": {
    "name": "smacf100PRxMulticastPkts",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.56",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets received by this port that are directed to a multicast address. This counter includes neither errored multicast packets nor valid broadcast packets."
  },
  "smacf100PRxBroadcastPkts": {
    "name": "smacf100PRxBroadcastPkts",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.57",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets received by this port that are directed to the broadcast address. This counter includes neither errored broadcast packets nor valid multicast packets."
  },
  "smacf100PRxSAChanges": {
    "name": "smacf100PRxSAChanges",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.58",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of times the Source Ethernet Address of good receive packets has changed from the previous value. A count greater than one generally indicates that the port is connected to a repeater-based network."
  },
  "smacf100PRxFragments": {
    "name": "smacf100PRxFragments",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.59",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of packets received by a port that are shorter than 64 bytes (excluding framing bits) and have either an Frame Check Sequence error or an alignment error."
  },
  "smacf100PRxExcessSizeDisc": {
    "name": "smacf100PRxExcessSizeDisc",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.60",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The number of good packets received by this port that are longer than 1536 bytes (excluding framing bits but including Frame Check Sequences) and were discarded due to excessive length. Note that the RxOversizePkts counter alone is incremented for packets in the range 1523-1536 bytes inclusive, whereas both RxExcessSizeDisc and RxOversizePkts are incremented for packets of 1537 bytes and longer."
  },
  "smacf100PRxSymbolError": {
    "name": "smacf100PRxSymbolError",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.61",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The total number of times this port received a packet which had a valid length, but contained at least one invalid symbol. The counter only increments once per carrier event, and does not increment if a collision is detected during the carrier event."
  },
  "smacf100PQosPriority": {
    "name": "smacf100PQosPriority",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.62",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When this variable is set to 'high(1)', this port becomes a high-priority port. This means that all packets received on this port for transission on other ports and all packets received on other ports for transmission on this port are placed in the high-priority queues. When the variable is set to 'default(2)', the low priority queue is used unless other conditions (i.e. an 802.1p tag or a high-priority setting for another port) prompt the use of the high priority queue."
  },
  "smacf100PQosPause": {
    "name": "smacf100PQosPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.63",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When the global variable smacf100QosEnable(7) is set to 'enabled(1)', then the port-specific variable smacf100PQosPause(63) controls whether or not the port supports half-duplex back pressure and full-duplex flow control. Otherwise, only dropping of frames is supported for the port."
  },
  "smacf100PAdvPause": {
    "name": "smacf100PAdvPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.64",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/disable control for this advertised autonegotiation mode. When Pause capability is autonegotiated (at the Physical level), the MAC layer may then send Pause packets to pace data coming across the link. smacf100PAutoNegot(12) must be set to 'enabled(1)'. The results of this autonegotiation are ignored if smacf100QosEnable(7) is set to 'enabled(1)' and smacf100PQosPause(63) is set to 'disabled(2)'. In this case, no 'Pause' capability is supported."
  },
  "smacf100PCacheClean": {
    "name": "smacf100PCacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.15.1.65",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cpsld100Table": {
    "name": "cpsld100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.16",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CPSLD100 in the stack, indexed by cabinet serial number and slot."
  },
  "cpsld100Entry": {
    "name": "cpsld100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.16.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsld100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cpsld100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CPSLD100"
  },
  "cpsld100BiaIndex": {
    "name": "cpsld100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.16.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cpsld100SlotIndex": {
    "name": "cpsld100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.16.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "cpsld100SerialNumber": {
    "name": "cpsld100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.16.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "cpsld100MRevision": {
    "name": "cpsld100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.16.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cpsld100Ps1Power": {
    "name": "cpsld100Ps1Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.16.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2,
          "notInstalled": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Power status, first power supply slot. Value is on(1) when the supply is capable of supplying power."
  },
  "cpsld100Ps1InUse": {
    "name": "cpsld100Ps1InUse",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.16.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notInstalled": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Power status, first power supply slot. Value is yes(1) when the power is selected to supply power to the cabinet."
  },
  "cpsld100Ps2Power": {
    "name": "cpsld100Ps2Power",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.16.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2,
          "notInstalled": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Power status, second power supply slot. Value is on(1) when the supply is capable of supplying power."
  },
  "cpsld100Ps2InUse": {
    "name": "cpsld100Ps2InUse",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.16.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notInstalled": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Power status, second power supply slot. Value is yes(1) when the power is selected to supply power to the cabinet."
  },
  "cdftf100Table": {
    "name": "cdftf100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CDFTF100 Dual telco Media Converter in the stack, indexed by cabinet serial number and slot."
  },
  "cdftf100Entry": {
    "name": "cdftf100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cdftf100SubDeviceIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cdftf100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cdftf100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CDFTF100"
  },
  "cdftf100SubDeviceIndex": {
    "name": "cdftf100SubDeviceIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Generally, individual devices in this MIB are distinguished by BiaIndex and SlotIndex. This device differs from many in that it contains multiple subdevices (in this case, switch ports). The number of subdevices varies with the manufactured configuration. Subdevices within devices are indexed by BiaIndex, SlotIndex, and SubDeviceIndex. When the subdevice column is read from the table, the value '1' is always returned."
  },
  "cdftf100BiaIndex": {
    "name": "cdftf100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cdftf100SlotIndex": {
    "name": "cdftf100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "cdftf100Groups": {
    "name": "cdftf100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CDFTF100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "cdftf100CfgMatch": {
    "name": "cdftf100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "cdftf100SerialNumber": {
    "name": "cdftf100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "cdftf100MRevision": {
    "name": "cdftf100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of the device"
  },
  "cdftf100TPLinkTbl": {
    "name": "cdftf100TPLinkTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This table contains the link status of each twisted pair port in the CDFTF100. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cdftf100FiberLinkTbl": {
    "name": "cdftf100FiberLinkTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This table contains the link status of each fiber port in the CDFTF100. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cdftf100TPActivityTbl": {
    "name": "cdftf100TPActivityTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Netowrk traffic indicator for the copper port(s) on this device. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cdftf100FiberActivityTbl": {
    "name": "cdftf100FiberActivityTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Netowrk traffic indicator for the fiber port(s) on this device. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cdftf100ConnectorTbl": {
    "name": "cdftf100ConnectorTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This table contains the link status of each port of this device. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cdftf100FirmwareRevision": {
    "name": "cdftf100FirmwareRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of connectors built into each port of this device."
  },
  "cdftf100CacheClean": {
    "name": "cdftf100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.17.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cpsvt100Table": {
    "name": "cpsvt100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CPSVT100 in the stack, indexed by cabinet serial number and slot."
  },
  "cpsvt100Entry": {
    "name": "cpsvt100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsvt100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cpsvt100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CPSVT100"
  },
  "cpsvt100BiaIndex": {
    "name": "cpsvt100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cpsvt100SlotIndex": {
    "name": "cpsvt100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "cpsvt100Groups": {
    "name": "cpsvt100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CPSVT100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "cpsvt100MRevision": {
    "name": "cpsvt100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cpsvt100CfgMatch": {
    "name": "cpsvt100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "inactive": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "cpsvt100SerialNumber": {
    "name": "cpsvt100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "cpsvt100FiberLink": {
    "name": "cpsvt100FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "cpsvt100CopperLink": {
    "name": "cpsvt100CopperLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Copper Link for this device"
  },
  "cpsvt100Fault": {
    "name": "cpsvt100Fault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value is yes(1) when either CopperLink or FiberLink has value linkDown(2)"
  },
  "cpsvt100ConnA": {
    "name": "cpsvt100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device"
  },
  "cpsvt100ConnB": {
    "name": "cpsvt100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Copper connector built into this device"
  },
  "cpsvt100TermTiming": {
    "name": "cpsvt100TermTiming",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "rxc": 1,
          "kbps56": 2,
          "kbps64": 3,
          "kbps112": 4,
          "kbps128": 5,
          "kbps256": 6,
          "kbps384": 7,
          "kbps512": 8,
          "kbps768": 9,
          "kbps1024": 10,
          "kbps1554": 11,
          "kbps2048": 12,
          "kbps3072": 13,
          "kbps4096": 14,
          "kbps6144": 15,
          "asynchronous": 16
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Local Terminal Timing setting. Terminal timing is a signal sent from a DCE to a DTE to control the rate of data the DTE sends to the DCE. Since this signal cannot be sent across the fiber after media converters are introduced, the converter must generate this signal and supply it to the DTE. The converter gets the setting from a thumbwheel. For converters attached to DTEs, the thumbwheel setting influences the transmit data rate. If the Terminal Timing setting is RXC, the DTE derives its transmit clock from the receive clock supplied by the DCE. For converters attached to DCEs, the thumbwheel setting has no effect. If two DTEs are connected via media converters, the thumbwheel settings must not be RXC."
  },
  "cpsvt100LoopBack": {
    "name": "cpsvt100LoopBack",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Remote fiber and copper loopback setting. Loopback is a testing aid available on several different products. When Loopback is enabled on an interface, all data that is sent to the interface is reflected back to the sender, and the actual condition (or even existence) of the equipment on the opposite interface is ignored."
  },
  "cpsvt100CableMode": {
    "name": "cpsvt100CableMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "notValid": 1,
          "rs-530A": 2,
          "rs-530": 3,
          "x-21": 4,
          "v-35": 5,
          "rs-449": 6,
          "rs-232": 7,
          "disconnected": 8
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A description of the type of cable that is attached to the Copper interface of the local device."
  },
  "cpsvt100DCE": {
    "name": "cpsvt100DCE",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dce": 1,
          "dte": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An indication of whether this device is attached to a DCE (a computer) or a DTE (a terminal). Like cpsvt100CableMode(14), this status is derived from the type of cable that is attached to the copper interface."
  },
  "cpsvt100InvertTX": {
    "name": "cpsvt100InvertTX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "rising": 1,
          "falling": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Local transmit clock usage. Some types of high-speed serial equipment read the data signal on the rising edge of the clock, and others on the falling edge of the clock. The CPSVT100-xxx High Speed Serial converter is compatible with both types of equipment. The expectations of the equipment attached to the copper interface can be matched via jumper settings on the converter. The cpsvt100InvertTX(16) and cpsvt100InvertRX(17) status variables indicate the status of these jumpers. Most high-speed serial equipment uses the rising edge of the clock."
  },
  "cpsvt100InvertRX": {
    "name": "cpsvt100InvertRX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "rising": 1,
          "falling": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Local receive clock usage. Some types of high-speed serial equipment read the data signal on the rising edge of the clock, and others on the falling edge of the clock. The CPSVT100-xxx High Speed Serial converter is compatible with both types of equipment. The expectations of the equipment attached to the copper interface can be matched via jumper settings on the converter. The cpsvt100InvertTX(16) and cpsvt100InvertRX(17) status variables indicate the status of these jumpers. Most high-speed serial equipment uses the rising edge of the clock."
  },
  "cpsvt100ConfigMode": {
    "name": "cpsvt100ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "cpsvt100FirmwareRev": {
    "name": "cpsvt100FirmwareRev",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Local firmware revision."
  },
  "cpsvt100RmtDetected": {
    "name": "cpsvt100RmtDetected",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Has the value yes(1) if management communcations have been established with a remote media converter."
  },
  "cpsvt100RmtTermTiming": {
    "name": "cpsvt100RmtTermTiming",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "rxc": 1,
          "kbps56": 2,
          "kbps64": 3,
          "kbps112": 4,
          "kbps128": 5,
          "kbps256": 6,
          "kbps384": 7,
          "kbps512": 8,
          "kbps768": 9,
          "kbps1024": 10,
          "kbps1554": 11,
          "kbps2048": 12,
          "kbps3072": 13,
          "kbps4096": 14,
          "kbps6144": 15,
          "asynchronous": 16
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Local Terminal Timing setting of the remotely managed CPSVTxxx. Terminal timing is a signal sent from a DCE to a DTE to control the rate of data the DTE sends to the DCE. Since this signal cannot be sent across the fiber after media converters are introduced, the converter must generate this signal and supply it to the DTE. The converter gets the setting from a thumbwheel. For converters attached to DTEs, the thumbwheel setting influences the transmit data rate. If the Terminal Timing setting is RXC, the DTE derives its transmit clock from the receive clock supplied by the DCE. For converters attached to DCEs, the thumbwheel setting has no effect. If two DTEs are connected via media converters, the thumbwheel settings must not be RXC."
  },
  "cpsvt100RmtLoopBack": {
    "name": "cpsvt100RmtLoopBack",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Remote fiber and copper loopback setting. Loopback is a testing aid available on several different products. When Loopback is enabled on an interface, all data that is sent to the interface is reflected back to the sender, and the actual condition (or even existence) of the equipment on the opposite interface is ignored. This variable is identical to cpsvt100LoopBack, except that it is for the remotely managed cpsvt100."
  },
  "cpsvt100RmtCableMode": {
    "name": "cpsvt100RmtCableMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A description of the type of cable that is attached to the Copper interface of the local device."
  },
  "cpsvt100RmtDCE": {
    "name": "cpsvt100RmtDCE",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "An indication of whether this device is attached to a DCE (a computer) or a DTE (a terminal). Like cpsvt100CableMode(14), this status is derived from the type of cable that is attached to the copper interface."
  },
  "cpsvt100RmtInvertTX": {
    "name": "cpsvt100RmtInvertTX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Local transmit clock usage. Some types of high-speed serial equipment read the data signal on the rising edge of the clock, and others on the falling edge of the clock. The CPSVT100-xxx High Speed Serial converter is compatible with both types of equipment. The expectations of the equipment attached to the copper interface can be matched via jumper settings on the converter. The cpsvt100InvertTX(16) and cpsvt100InvertRX(17) status variables indicate the status of these jumpers. Most high-speed serial equipment uses the rising edge of the clock."
  },
  "cpsvt100RmtInvertRX": {
    "name": "cpsvt100RmtInvertRX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Local receive clock usage. Some types of high-speed serial equipment read the data signal on the rising edge of the clock, and others on the falling edge of the clock. The CPSVT100-xxx High Speed Serial converter is compatible with both types of equipment. The expectations of the equipment attached to the copper interface can be matched via jumper settings on the converter. The cpsvt100InvertTX(16) and cpsvt100InvertRX(17) status variables indicate the status of these jumpers. Most high-speed serial equipment uses the rising edge of the clock."
  },
  "cpsvt100RmtConfigMode": {
    "name": "cpsvt100RmtConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "cpsvt100RmtFirmwareRev": {
    "name": "cpsvt100RmtFirmwareRev",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Local firmware revision."
  },
  "cpsvt100RmtCopperLink": {
    "name": "cpsvt100RmtCopperLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Copper Link for this device"
  },
  "cpsvt100RmtFiberLink": {
    "name": "cpsvt100RmtFiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "cpsvt100CacheClean": {
    "name": "cpsvt100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.18.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cemtf100Table": {
    "name": "cemtf100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.19",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CEMTF100 in the stack, indexed by cabinet serial number and slot."
  },
  "cemtf100Entry": {
    "name": "cemtf100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.19.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cemtf100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cemtf100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CEMTF100"
  },
  "cemtf100BiaIndex": {
    "name": "cemtf100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.19.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cemtf100SlotIndex": {
    "name": "cemtf100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.19.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "cemtf100Groups": {
    "name": "cemtf100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.19.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CEMTF100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "cemtf100MRevision": {
    "name": "cemtf100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.19.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cemtf100CfgMatch": {
    "name": "cemtf100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.19.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "cemtf100SerialNumber": {
    "name": "cemtf100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.19.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "cemtf100FiberLink": {
    "name": "cemtf100FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.19.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "cemtf100OffHook": {
    "name": "cemtf100OffHook",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.19.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Twisted Pair Link for this device"
  },
  "cemtf100Fault": {
    "name": "cemtf100Fault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.19.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value is yes(1) when either OffHook or FiberLink has value of down"
  },
  "cemtf100ConnA": {
    "name": "cemtf100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.19.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device"
  },
  "cemtf100ConnB": {
    "name": "cemtf100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.19.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Copper connector built into this device"
  },
  "cemtf100CacheClean": {
    "name": "cemtf100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.19.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "captf100Table": {
    "name": "captf100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CAPTF100 in the stack, indexed by cabinet serial number and slot."
  },
  "captf100Entry": {
    "name": "captf100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "captf100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "captf100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CAPTF100"
  },
  "captf100BiaIndex": {
    "name": "captf100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "captf100SlotIndex": {
    "name": "captf100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "captf100Groups": {
    "name": "captf100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CAPTF100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "captf100MRevision": {
    "name": "captf100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "captf100CfgMatch": {
    "name": "captf100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "captf100SerialNumber": {
    "name": "captf100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "captf100FiberLink": {
    "name": "captf100FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "captf100InUse": {
    "name": "captf100InUse",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Twisted Pair Link for this device"
  },
  "captf100Fault": {
    "name": "captf100Fault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value is yes(1) when either OffHook or FiberLink has value of down"
  },
  "captf100ConnA": {
    "name": "captf100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device"
  },
  "captf100ConnB": {
    "name": "captf100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Copper connector built into this device"
  },
  "captf100FirmwareRev": {
    "name": "captf100FirmwareRev",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The firmware revision level for this device."
  },
  "captf100CacheClean": {
    "name": "captf100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "captf100Emulates": {
    "name": "captf100Emulates",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.20.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "phone": 1,
          "coStandard": 2,
          "coAutoRingDown": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This read-only variable indicates the emulation type and configuration of the device. CAPTF100 devices exist in two varieties, the CAPTF10033xx-100, the copper port of which emulates a telephone, and the CAPTF10033xx-110, the copper port of which emulates the Central Office (CO) (i.e. a wall jack that one would plug a telephone into). The Standard CAPTF100 configuration is employed when a fiber extension between a wall jack and a distant telephone is desired. The CAPTF100 whose copper port was plugged into the wall jack must be of the variety that emulates a telephone. The value of the captf100Emulates(14) variable of such a device will be phone(1). The CAPTF100 whose copper port was plugged into the telephone must be of the variety that emulates the CO, and that device must be jumpered for 'Standard' operation. The value of its captf100Emulates(14) variable would be coStandard(2). Alternatively, CAPTF100 converters can be used to provide a point-to-point fiber link between two telephones. This is known as the Automatic Ring-Down configuration. When one telephone goes off-hook, the other rings. When both are off hook, voice communication is possible. In this configuration, both CAPTF100 devices must be of the variety that emulates the CO, and both devices must be jumpered for 'Automatic Ring-Down' operation. The value of their captf100Emulates(14) variables would be coAutoRingDown(3)."
  },
  "cfetf205Table": {
    "name": "cfetf205Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CFTEF205 100Mbps Twisted-Pair to Fiber Ethernet Media Converter in the stack, indexed by cabinet serial number and slot."
  },
  "cfetf205Entry": {
    "name": "cfetf205Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cfetf205BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cfetf205SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CFETF205"
  },
  "cfetf205BiaIndex": {
    "name": "cfetf205BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "cfetf205SlotIndex": {
    "name": "cfetf205SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "cfetf205Groups": {
    "name": "cfetf205Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CFETF205' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "cfetf205MRevision": {
    "name": "cfetf205MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cfetf205CfgMatch": {
    "name": "cfetf205CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "cfetf205SerialNumber": {
    "name": "cfetf205SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "cfetf205ConnA": {
    "name": "cfetf205ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device"
  },
  "cfetf205ConnB": {
    "name": "cfetf205ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Copper connector built into this device"
  },
  "cfetf205TPLink": {
    "name": "cfetf205TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Twisted Pair Link for this device"
  },
  "cfetf205FiberLink": {
    "name": "cfetf205FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "cfetf205Fault": {
    "name": "cfetf205Fault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value is yes(1) when either TPLink or FiberLink has value linkDown(2)"
  },
  "cfetf205FastLinkPulse": {
    "name": "cfetf205FastLinkPulse",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "autonegotiate": 1,
          "hdx100Btx": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When set to autonegotiate(1), converter sends Fast Link Pulses on its twisted pair port, thereby participating in autonegotiation of duplex between the converter's twisted pair port and that of the connected station. If that station supports Full- Duplex (FDX) operation, FDX will be used. If not, the twisted pair will operate in Half-Duplex (HDX) mode. When set to hdx100Btx(2), the converter instead sends 100Mbps idles (rather than Fast Link Pulses) on its twisted pair port (i.e. it declines to negotiate), which forces the twisted pair to operate in HDX mode regardless of the capabilities of the connected station. When operating in HDX mode, the twisted pair can support traffic in only one direction at a time. In FDX mode, traffic can pass in both directions simultaneously, thus theoretically doubling network performance."
  },
  "cfetf205Enabled": {
    "name": "cfetf205Enabled",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When this configuration item is set to no(2), the device passes no network traffic."
  },
  "cfetf205Pause": {
    "name": "cfetf205Pause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The Pause feature allows Ethernet MACs that support it to send data pacing 'Pause' messages to each other. Support for Pause is negotiated at the physical level and passed up to the MAC. While the MAC's Pause messages themselves can pass over the fiber link that this pair of media converters introduces, the TP physical layer negotiations to enable Pause can not. Therefore, if both end station MACs support Pause and wish to use it, the Pause negotiation must be re-generated by the media converters on both ends. By setting this configuration option to enabled(1), you are indicating to the local twisted pair station that the twisted pair station on the other side of the other media converter supports Pause and wishes to use it. This variable must be set consistently on both of the paired media converters."
  },
  "cfetf205LinkPassThrough": {
    "name": "cfetf205LinkPassThrough",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/Disable for Link Pass Through, a feature that causes loss of link on one side of a media converter to be passed through to the other side, so that upstream equipment can see the fault condition."
  },
  "cfetf205AutoCross": {
    "name": "cfetf205AutoCross",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/Disable for automatic copper TX/RX pair correction. When disabled, the port operates in MDI mode."
  },
  "cfetf205TPActivity": {
    "name": "cfetf205TPActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Network traffic indicator for Copper side of this device"
  },
  "cfetf205FiberActivity": {
    "name": "cfetf205FiberActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Network traffic indicator for Fiber side of this device"
  },
  "cfetf205ConfigMode": {
    "name": "cfetf205ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "cfetf205FarEndFault": {
    "name": "cfetf205FarEndFault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Far End Fault configuration of this device. Far End Fault causes the fiber transmitter to generate a Far End Fault pattern upon the loss of a receiver signal detect. When the receiver detects signal again, the transmitter stops transmitting the Far End Fault pattern."
  },
  "cfetf205CacheClean": {
    "name": "cfetf205CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.21.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cbftf150Table": {
    "name": "cbftf150Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CBFTF150 switch in the stack. Indexed by sub-device index, cabinet serial number, and slot. Note that some columns of this table support multiple subdevices, and some do not. For example, there is exactly one SerialNumber for each CBFTF150. No subdevices exist, so the placeholder value 1 is used as the subdevice index. However, a CBFTF150 has multiple switch ports, which are indexed as different subdevices, starting with 1. Columns with subdevices have names ending in 'Tbl'"
  },
  "cbftf150Entry": {
    "name": "cbftf150Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cbftf150SubDeviceIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cbftf150BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cbftf150SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CBFTF150"
  },
  "cbftf150SubDeviceIndex": {
    "name": "cbftf150SubDeviceIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Generally, individual devices in this MIB are distinguished by BiaIndex and SlotIndex. This device differs from many in that it contains multiple subdevices (in this case, switch ports). The number of subdevices varies with the manufactured configuration. Subdevices within devices are indexed by BiaIndex, SlotIndex, and SubDeviceIndex. When the subdevice column is read from the table, the value '1' is always returned."
  },
  "cbftf150BiaIndex": {
    "name": "cbftf150BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf150SlotIndex": {
    "name": "cbftf150SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed. Power Supplies occupy special slots numbered 125 and higher. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf150Groups": {
    "name": "cbftf150Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'cbftf150' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]' There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf150MRevision": {
    "name": "cbftf150MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf150CfgMatch": {
    "name": "cbftf150CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf150SerialNumber": {
    "name": "cbftf150SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf150ConfigMode": {
    "name": "cbftf150ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device may have a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf150FirmwareRevision": {
    "name": "cbftf150FirmwareRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The firmware revision level for this device. There are no subdevices for this value, so the placeholder value 1 is always used for that index."
  },
  "cbftf150FormFactor": {
    "name": "cbftf150FormFactor",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "s1W2a": 1,
          "s1W1N2a": 2,
          "s1W1N1a": 3,
          "s2W2N4a": 4,
          "s2W1N5a": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A code corresponding to a physical configuration of the product. This code indicates the number of slots occupied and the number of physical connectors present. In the labels for the values above, s indicates the number of slots occupied, W is a count of Wide port positions (which can built as almost any type of connector), and N is a count of narrow port positions (which are typically twisted pair ports). The lowercase letter at the end differentiates different form factors that would otherwise have identical descriptions under this limited scheme."
  },
  "cbftf150AutoNegotTbl": {
    "name": "cbftf150AutoNegotTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enables or disables autonegtiation of link speed and duplex for twisted pair ports. Not supported on Fiber ports. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf150FullDuplexTbl": {
    "name": "cbftf150FullDuplexTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fullDuplex": 1,
          "halfDuplex": 2,
          "negotiating": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "In most cases this is a configuration setting that controls the duplex mode; fullDuplex is full duplex and halfDuplex is half duplex. On twisted pair ports with autonegotiation enabled, this is a status indication showing the duplex value decided upon during the negotiation. When link is down, autonegotiation has not been completed yet, and the duplex setting is therefore unknown and the value is negotiating(3). There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf150100MbpsTbl": {
    "name": "cbftf150100MbpsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mbps100": 1,
          "mbps10": 2,
          "negotiating": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "In most cases this is a configuration setting that controls the link speed. On twisted pair ports with autonegotiation enabled, this is a status indication showing the link speed decided upon during negotiation. When link is down, autonegotiation has not been completed yet, and the link speed is therefore unknown and is negotiating(3). This variable is an indicator only for fiber ports; all fiber ports report mbps100(1) at all times. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf150CrossTbl": {
    "name": "cbftf150CrossTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "auto": 1,
          "mdi": 2,
          "mdix": 3,
          "notSupported": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Configuration setting for copper TX/RX pair correction. A setting of auto(1) causes the port to automatically correct TX/RX pairs if necessary. If autonegotiation is disabled on the port, the auto(1) setting is not supported. A setting of mdi(2) causes the TX/RX pairs to be passed straight through with no correction. A setting of mdix(3) causes the TX/RX pairs to be swapped. This setting is supprted for copper ports only; a read-only value of notSupported(4) is returned for fiber ports. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf150FarEndFaultTbl": {
    "name": "cbftf150FarEndFaultTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When Far End Fault is set to enabled(1), a loss of link on receive will cause the transmitter to shut down, in order to inform the device at the far end of the link that a fault has occurred. Far End Fault is only supported on fiber ports. A read-only value of notSupported(3) is returned for copper ports. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf150ConnectorTbl": {
    "name": "cbftf150ConnectorTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of connectors built into each port of this device. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf150LinkTbl": {
    "name": "cbftf150LinkTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This table contains the link status of each port in the switch. There are multiple subdevices in this table, numbering one entry per port."
  },
  "cbftf150PortCount": {
    "name": "cbftf150PortCount",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A count of the switch ports in this device. i.e. the maximum subdevice index supported by this switch."
  },
  "cbftf150CacheClean": {
    "name": "cbftf150CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.22.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cgfeb100Table": {
    "name": "cgfeb100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CGFEB100 10/100/1000 Ethernet to Fiber converter in the stack. Indexed by cabinet serial number and slot."
  },
  "cgfeb100Entry": {
    "name": "cgfeb100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cgfeb100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cgfeb100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CGFEB100"
  },
  "cgfeb100BiaIndex": {
    "name": "cgfeb100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed."
  },
  "cgfeb100SlotIndex": {
    "name": "cgfeb100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed. Power Supplies occupy special slots numbered 125 and higher."
  },
  "cgfeb100Groups": {
    "name": "cgfeb100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'cgfeb100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'."
  },
  "cgfeb100MRevision": {
    "name": "cgfeb100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device."
  },
  "cgfeb100CfgMatch": {
    "name": "cgfeb100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "cgfeb100SerialNumber": {
    "name": "cgfeb100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device."
  },
  "cgfeb100ConfigMode": {
    "name": "cgfeb100ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device may have a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "cgfeb100FirmwareRevision": {
    "name": "cgfeb100FirmwareRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The firmware revision level for this device."
  },
  "cgfeb100SelfTestFailed": {
    "name": "cgfeb100SelfTestFailed",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This variable indicates the status of the pass/fail power on test. If the power on test fails, normal operation of this device is probably not possible."
  },
  "cgfeb100MonitorType": {
    "name": "cgfeb100MonitorType",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fiber": 1,
          "twistedPair": 2,
          "notInstalled": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Some versions of this device support the monitoring of network traffic passing through the converter's fiber interface via a dedicated monitoring port to which a capture device can be attached. There are two different versions of the monitoring capability. One has a fiber connector, and the other has a twisted pair connector. Both versions monitor the fiber port. If this variable has the value fiber(1) or twistedPair(2), this means that a monitoring port is present and that port has the specified type of interface. In this case, the device occupies two slots. If the value is notInstalled(3), there is no monitoring capability and the device occupies one slot. See also cgfeb100MonitorTap(56)."
  },
  "cgfeb100LinkPassThrough": {
    "name": "cgfeb100LinkPassThrough",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration item allows Link Pass Through to be enabled(1) or disabled(2). Link Passthrough causes loss of link on one side of a media converter to be passed through to the other side, so that upstream equipment can see fault conditions that would otherwise be hidden by the media converters. On some models, the Link Passthrough logic views receipt of a Far End Fault error pattern as being equivalent to loss of link. The net effect of this is that when either fiber is disconnected, link is dropped on the other side of the converter. Normally, only the disconnection of the Receive fiber would cause this reaction. "
  },
  "cgfeb100QosEnabled": {
    "name": "cgfeb100QosEnabled",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable allows Quality of Service functions to be enabled or disabled. This includes the processing of 802.1p tags (See cgfeb100QosHPThreshold(13), cgfeb100QosLqWeight(14), and smacf100QosHqWeight(15)), and half-duplex back pressure and full-duplex flow control. (See cgfeb100TpQosPause(39) and cgfeb100FiberQosPause(52))."
  },
  "cgfeb100QosHPThreshold": {
    "name": "cgfeb100QosHPThreshold",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When an incoming 802.1p priority tag value is greater than or equal to this value (from 0 to 7), the incoming packet will be classified as high-priority. Ignored when cgfeb100QosEnable(13) is set to 'disabled(2)'."
  },
  "cgfeb100QosLqWeight": {
    "name": "cgfeb100QosLqWeight",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A value between 1 and 15 indicating the number of packets that should be processed from the low-priority queue before attention is turned to the high-priority queue. Ignored when cgfeb100QosEnable(13) is set to 'disabled(2)'."
  },
  "cgfeb100QosHqWeight": {
    "name": "cgfeb100QosHqWeight",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A value between 1 and 15 indicating the number of packets that should be processed from the high-priority queue before attention is turned to the low-priority queue. Ignored when cgfeb100QosEnable(13) is set to 'disabled(2)'."
  },
  "cgfeb100ConnA": {
    "name": "cgfeb100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of copper connector built into this device."
  },
  "cgfeb100TPLink": {
    "name": "cgfeb100TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Twisted Pair link status."
  },
  "cgfeb100TPSpeedCfg": {
    "name": "cgfeb100TPSpeedCfg",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mbps10": 1,
          "mbps100": 2,
          "auto": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The desired speed of the Twisted Pair interface. This speed can be set to 10Mbps(1) or 100Mbps(2). Operation at 1000Mbps requires autonegotiation. When cgfeb100TpAutonegot(24) has the value enabled(1) or cgfeb100ConfigMode(7) has the value hardware(2), this variable has the read-only value auto(3)."
  },
  "cgfeb100TPSpeedStat": {
    "name": "cgfeb100TPSpeedStat",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mbps10": 1,
          "mbps100": 2,
          "mbps1000": 3,
          "notApplicable": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The actual speed of the Twisted Pair interface: 10Mbps(1), 100Mbps(2), or 1000Mbps(3). If cgfeb100TpAutonegot(24) has the value enabled(1) and cgfeb100TpLink(17) has the value down(2), this variable has the value notApplicable(4)."
  },
  "cgfeb100TPFullDuplexCfg": {
    "name": "cgfeb100TPFullDuplexCfg",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fdx": 1,
          "hdx": 2,
          "auto": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The desired duplex setting of the Twisted Pair interface. This can be set to fdx(1) (full duplex) or hdx(2) (half duplex). When cgfeb100TpAutonegot(24) has the value enabled(1) or cgfeb100ConfigMode(7) has the value hardware(2), this variable has the read-only value auto(3)."
  },
  "cgfeb100TPFullDuplexStat": {
    "name": "cgfeb100TPFullDuplexStat",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fdx": 1,
          "hdx": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The actual duplex behavior of the Twisted Pair interface. If cgfeb100TpAutonegot(24) has the value enabled(1) and cgfeb100TpLink(17) has the value down(2), this variable has the value notApplicable(4)."
  },
  "cgfeb100TPCrossCfg": {
    "name": "cgfeb100TPCrossCfg",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mdi": 1,
          "mdix": 2,
          "auto": 3,
          "notApplicable": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The desired TX/RX Pair orientation of the Twisted Pair interface. This can be set to mdi(1) (straight through), mdix(2) (crossed over), or auto(3). When cgfeb100ConfigMode(7) has the value hardware(2), this variable has the read-only value notApplicable(4)."
  },
  "cgfeb100TPCrossStat": {
    "name": "cgfeb100TPCrossStat",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mdi": 1,
          "mdix": 2,
          "auto": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The actual TX/RX Pair orientation of the Twisted Pair interface, usually mdi(1) (straight through) or mdix(2) (crossed over). When the device does not know the pair orientation, this variable has the value auto(3). Depending on the version of the device, it may not be able to report the pair orientation when it is decided automatically. The device will never have an orientation to report when If cgfeb100TpCrossConfig(22) has the value auto(3) and cgfeb100TpLink(17) has the value down(2)."
  },
  "cgfeb100TPAutoNegot": {
    "name": "cgfeb100TPAutoNegot",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enables or disables autonegtiation of link speed and duplex for twisted pair ports. Not supported on Fiber ports."
  },
  "cgfeb100TPAdv10HDX": {
    "name": "cgfeb100TPAdv10HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3,
          "enabledRO": 4,
          "disabledRO": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/disable control for these advertised autonegotiation modes. If autonegotiation is disabled (because cgfeb100TpAutonegot(24) has the value disabled(2) or cgfeb100ConfigMode(7) has the value hardware(2) and the Autonegotiation hardware switch is disabled), then these variables have no meaning and return read-only value notApplicable(3). If the value cannot be changed (because cgfeb100ConfigMode(7) has the value hardware(2)) and Autonegotiation is enabled, these variables return the read- only values enabledRO(4) or disabledRO(5)."
  },
  "cgfeb100TPAdv10FDX": {
    "name": "cgfeb100TPAdv10FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3,
          "enabledRO": 4,
          "disabledRO": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/disable control for these advertised autonegotiation modes. If autonegotiation is disabled (because cgfeb100TpAutonegot(24) has the value disabled(2) or cgfeb100ConfigMode(7) has the value hardware(2) and the Autonegotiation hardware switch is disabled), then these variables have no meaning and return read-only value notApplicable(3). If the value cannot be changed (because cgfeb100ConfigMode(7) has the value hardware(2)) and Autonegotiation is enabled, these variables return the read- only values enabledRO(4) or disabledRO(5)."
  },
  "cgfeb100TPAdv100HDX": {
    "name": "cgfeb100TPAdv100HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3,
          "enabledRO": 4,
          "disabledRO": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/disable control for these advertised autonegotiation modes. If autonegotiation is disabled (because cgfeb100TpAutonegot(24) has the value disabled(2) or cgfeb100ConfigMode(7) has the value hardware(2) and the Autonegotiation hardware switch is disabled), then these variables have no meaning and return read-only value notApplicable(3). If the value cannot be changed (because cgfeb100ConfigMode(7) has the value hardware(2)) and Autonegotiation is enabled, these variables return the read- only values enabledRO(4) or disabledRO(5)."
  },
  "cgfeb100TPAdv100FDX": {
    "name": "cgfeb100TPAdv100FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3,
          "enabledRO": 4,
          "disabledRO": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/disable control for these advertised autonegotiation modes. If autonegotiation is disabled (because cgfeb100TpAutonegot(24) has the value disabled(2) or cgfeb100ConfigMode(7) has the value hardware(2) and the Autonegotiation hardware switch is disabled), then these variables have no meaning and return read-only value notApplicable(3). If the value cannot be changed (because cgfeb100ConfigMode(7) has the value hardware(2)) and Autonegotiation is enabled, these variables return the read- only values enabledRO(4) or disabledRO(5)."
  },
  "cgfeb100TPAdv1000HDX": {
    "name": "cgfeb100TPAdv1000HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3,
          "enabledRO": 4,
          "disabledRO": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/disable control for these advertised autonegotiation modes. If autonegotiation is disabled (because cgfeb100TpAutonegot(24) has the value disabled(2) or cgfeb100ConfigMode(7) has the value hardware(2) and the Autonegotiation hardware switch is disabled), then these variables have no meaning and return read-only value notApplicable(3). If the value cannot be changed (because cgfeb100ConfigMode(7) has the value hardware(2)) and Autonegotiation is enabled, these variables return the read- only values enabledRO(4) or disabledRO(5)."
  },
  "cgfeb100TPAdv1000FDX": {
    "name": "cgfeb100TPAdv1000FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3,
          "enabledRO": 4,
          "disabledRO": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/disable control for these advertised autonegotiation modes. If autonegotiation is disabled (because cgfeb100TpAutonegot(24) has the value disabled(2) or cgfeb100ConfigMode(7) has the value hardware(2) and the Autonegotiation hardware switch is disabled), then these variables have no meaning and return read-only value notApplicable(3). If the value cannot be changed (because cgfeb100ConfigMode(7) has the value hardware(2)) and Autonegotiation is enabled, these variables return the read- only values enabledRO(4) or disabledRO(5)."
  },
  "cgfeb100TPLpAdvPause": {
    "name": "cgfeb100TPLpAdvPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "symetric": 1,
          "asymRX": 2,
          "asymTX": 3,
          "disabled": 4,
          "notApplicable": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This read-only variable shows the pause capability advertised by the twisted pair port's link partner. Values 1 through 4 for this variable are the same as those for cgfeb100TpAdvPause(38). If the device does not support the reporting of link partner autonegotiation or cgfeb100TpAutonegot(24) has the value disabled(2), this variable will have the value notApplicable(5)."
  },
  "cgfeb100TPLpAdv10HDX": {
    "name": "cgfeb100TPLpAdv10HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This read-only variable shows twisted pair port's link partner's willingness to connect at 10Mbps Half Duplex. If the device does not support the reporting of link partner autonegotiation or cgfeb100TpAutonegot(24) has the value disabled(2), this variable will have the value notApplicable(3)."
  },
  "cgfeb100TPLpAdv10FDX": {
    "name": "cgfeb100TPLpAdv10FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This read-only variable shows twisted pair port's link partner's willingness to connect at 10Mbps Full Duplex. If the device does not support the reporting of link partner autonegotiation or cgfeb100TpAutonegot(24) has the value disabled(2), this variable will have the value notApplicable(3)."
  },
  "cgfeb100TPLpAdv100HDX": {
    "name": "cgfeb100TPLpAdv100HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This read-only variable shows twisted pair port's link partner's willingness to connect at 100Mbps Half Duplex. If the device does not support the reporting of link partner autonegotiation or cgfeb100TpAutonegot(24) has the value disabled(2), this variable will have the value notApplicable(3)."
  },
  "cgfeb100TPLpAdv100FDX": {
    "name": "cgfeb100TPLpAdv100FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This read-only variable shows twisted pair port's link partner's willingness to connect at 100Mbps Full Duplex. If the device does not support the reporting of link partner autonegotiation or cgfeb100TpAutonegot(24) has the value disabled(2), this variable will have the value notApplicable(3)."
  },
  "cgfeb100TPLpAdv1000HDX": {
    "name": "cgfeb100TPLpAdv1000HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This read-only variable shows twisted pair port's link partner's willingness to connect at 1000Mbps Half Duplex. If the device does not support the reporting of link partner autonegotiation or cgfeb100TpAutonegot(24) has the value disabled(2), this variable will have the value notApplicable(3)."
  },
  "cgfeb100TPLpAdv1000FDX": {
    "name": "cgfeb100TPLpAdv1000FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This read-only variable shows twisted pair port's link partner's willingness to connect at 1000Mbps Full Duplex. If the device does not support the reporting of link partner autonegotiation or cgfeb100TpAutonegot(24) has the value disabled(2), this variable will have the value notApplicable(3)."
  },
  "cgfeb100TPAdvPause": {
    "name": "cgfeb100TPAdvPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "symetric": 1,
          "asymRX": 2,
          "asymTX": 3,
          "disabled": 4,
          "notApplicable": 5,
          "symmetricRO": 6,
          "asymRXRO": 7,
          "asymTXRO": 8,
          "disabledRO": 9
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/disable control for autonegotiation advertising of Twisted Pair Pause capability. Selectable values are symmetric(1), asymRX(2) (asymmetric, pause frames flow towards the converter), asymTX(3) (asymmetric, pause frames flow towards the link partner), and disabled(4). If autonegotiation is disabled (because cgfeb100TpAutonegot(24) has the value disabled(2) or cgfeb100ConfigMode(7) has the value hardware(2) and the Autonegotiation hardware switch is disabled), then this variable has no meaning and the read-only value notApplicable(5) is returned. When cgfeb100TpQosPause(39) has the value disabled(2), negotiated pause is suppressed and the read-only value notApplicable(5) is returned. If cgfeb100ConfigMode(7) has the value hardware(2) and the Autonegotiation hardware switch is enabled, then one of the following read-only values will be returned: symmetricRO(6), asymRXRO(7) (asymmetric, pause frames flow towards the converter), asymTXRO(8) (asymmetric, pause frames flow towards the link partner), and disabledRO(9)."
  },
  "cgfeb100TPQosPause": {
    "name": "cgfeb100TPQosPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.39",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable allows Twisted Pair Quality Of Service Pause to be enabled or disabled. When cgfeb100QosEnabled(12) is set to enabled(1) and this variable is set to disabled(2), any pause functionality negotiated according to cgfeb100TpAdvPause(38) is suppressed. When cgfeb100QosEnabled(12) is set to disabled(2), this variable has the read-only value notApplicable(3)."
  },
  "cgfeb100TPSacCfg": {
    "name": "cgfeb100TPSacCfg",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.40",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable allows Source Address Change traps to be enabled or disabled. If enabled, 'Error' traps will be sent as frequently one per polling cycle any time the ethernet source address of any packet received on the Twisted Pair interface is different from the last address received on that interface during the previous polling cycle."
  },
  "cgfeb100TPSacStat": {
    "name": "cgfeb100TPSacStat",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.41",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "changed": 1,
          "constant": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This read-only variable has the value changed(1) if the Ethernet source address received on the Twisted Pair interface changed since the device's previous report to the Mangement Module, and the value constant(2) otherwise. To cause the Management Module to generate a trap when this occurs, set cgfeb100SacConfig(41) to enabled(1)."
  },
  "cgfeb100ConnB": {
    "name": "cgfeb100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.42",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device."
  },
  "cgfeb100FiberLink": {
    "name": "cgfeb100FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.43",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Fiber Link status for this device."
  },
  "cgfeb100FiberFullDuplexCfg": {
    "name": "cgfeb100FiberFullDuplexCfg",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.44",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fdx": 1,
          "hdx": 2,
          "auto": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The desired duplex setting of the Fiber interface. This can be set to fdx(1) (full duplex) or hdx(2) (half duplex). When cgfeb100TpAutonegot(24) has the value enabled(1) or cgfeb100ConfigMode(7) has the value hardware(2), this variable has the read-only value auto(3)."
  },
  "cgfeb100FiberFullDuplexStat": {
    "name": "cgfeb100FiberFullDuplexStat",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.45",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fdx": 1,
          "hdx": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The actual duplex behavior of the Fiber interface: fdx(1) (full duplex) or hdx(2) (half duplex). If cgfeb100FiberAutonegot(46) has the value disabled(2) and this version of the device does not support manual fiber duplex control, Fiber duplex is forced to HDX. If cgfeb100FiberAutonegot(46) has the value enabled(1) and cgfeb100FiberLink(43) has the value down(2), then no duplex setting is available, and this variable has the value notApplicable(3)."
  },
  "cgfeb100FiberAutoNegot": {
    "name": "cgfeb100FiberAutoNegot",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.46",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Autonegotiation configuration. Fiber autonegotiation is limited to the duplex setting. The fiber's speed is fixed at 1000Mbps."
  },
  "cgfeb100FiberAdv1000HDX": {
    "name": "cgfeb100FiberAdv1000HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.47",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/disable control for these advertised autonegotiation modes. If autonegotiation is disabled (because cgfeb100TpAutonegot(24) has the value disabled(2) or cgfeb100ConfigMode(7) has the value hardware(2) and the Autonegotiation hardware switch is disabled), then these variables have no meaning and return read-only value notApplicable(3). If the value cannot be changed (because cgfeb100ConfigMode(7) has the value hardware(2)) and Autonegotiation is enabled, these variables return the read-only values enabledRO(4) or disabledRO(5). If manual control of Fiber Autonegotiaion advertised modes is not supported by the device, this variable has no meaning and the read-only value notApplicable(3) is returned."
  },
  "cgfeb100FiberAdv1000FDX": {
    "name": "cgfeb100FiberAdv1000FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.48",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3,
          "enabledRO": 4,
          "disabledRO": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/disable control for these advertised autonegotiation modes. If autonegotiation is disabled (because cgfeb100TpAutonegot(24) has the value disabled(2) or cgfeb100ConfigMode(7) has the value hardware(2) and the Autonegotiation hardware switch is disabled), then these variables have no meaning and return read-only value notApplicable(3). If the value cannot be changed (because cgfeb100ConfigMode(7) has the value hardware(2)) and Autonegotiation is enabled, these variables return the read-only values enabledRO(4) or disabledRO(5). If manual control of Fiber Autonegotiaion advertised modes is not supported by the device, this variable has no meaning and the read-only value notApplicable(3) is returned."
  },
  "cgfeb100FiberLpAdv1000HDX": {
    "name": "cgfeb100FiberLpAdv1000HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.49",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3,
          "enabledRO": 4,
          "disabledRO": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration setting controls whether or not each port advertises willingness to connect at 1000Mbps, half duplex. This setting is not supported on fiber ports, and is ignored when autonegotiation is disabled."
  },
  "cgfeb100FiberLpAdv1000FDX": {
    "name": "cgfeb100FiberLpAdv1000FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.50",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration setting controls whether or not each port advertises willingness to connect at 1000Mbps, full duplex. This setting is not supported on fiber ports, and is ignored when autonegotiation is disabled."
  },
  "cgfeb100FiberLpAdvPause": {
    "name": "cgfeb100FiberLpAdvPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.51",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "symetric": 1,
          "asymRX": 2,
          "asymTX": 3,
          "disabled": 4,
          "notApplicable": 5
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This read-only variable shows the pause capability advertised by the fiber port's link partner. Values 1 through 4 for this variable are the same as those for cgfeb100TpAdvPause(38). If the device does not support the reporting of link partner autonegotiation or cgfeb100FiberAutonegot(46) has the value disabled(2), this variable will have the value notApplicable(5)."
  },
  "cgfeb100FiberAdvPause": {
    "name": "cgfeb100FiberAdvPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.52",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "symetric": 1,
          "asymRX": 2,
          "asymTX": 3,
          "disabled": 4,
          "notApplicable": 5,
          "symetricRO": 6,
          "asymRXRO": 7,
          "asymTXRO": 8,
          "disabledRO": 9
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/disable control for autonegotiation advertising of Fiber Pause capability. Selectable values are symmetric(1), asymRX(2) (asymmetric, pause frames flow towards the converter), asymTX(3) (asymmetric, pause frames flow towards the link partner), and disabled(4). If autonegotiation is disabled (because cgfeb100FiberAutonegot(46) has the value disabled(2) or cgfeb100ConfigMode(7) has the value hardware(2) and the Autonegotiation hardware switch is disabled), then this variable has no meaning and the read-only value notApplicable(5) is returned. cgfeb100FiberQosPause(53) has the value disabled(2), negotiated pause is suppressed and the read-only value notApplicable(5) is returned. If cgfeb100ConfigMode(7) has the value hardware(2) and the Autonegotiation hardware switch is enabled, then one of the following read-only values will be returned: symmetricRO(6), asymRXRO(7) (asymmetric, pause frames flow towards the converter), asymTXRO(8) (asymmetric, pause frames flow towards the link partner), and disabledRO(9)."
  },
  "cgfeb100FiberQosPause": {
    "name": "cgfeb100FiberQosPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.53",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable allows Fiber Quality Of Service Pause to be enabled or disabled. When cgfeb100QosEnabled(12) is set to enabled(1) and this variable is set to disabled(2), any pause functionality negotiated according to cgfeb100FiberAdvPause(52) is suppressed. When cgfeb100QosEnabled(12) is set to disabled(2), this variable has the read-only value notApplicable(3)."
  },
  "cgfeb100FiberSacCfg": {
    "name": "cgfeb100FiberSacCfg",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.54",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable allows Source Address Change traps to be enabled or disabled. If enabled, 'Error' traps will be sent as frequently one per polling cycle any time the ethernet source address of any packet received on the Fiber interface is different from the last address received on that interface during the previous polling cycle."
  },
  "cgfeb100FiberSacStat": {
    "name": "cgfeb100FiberSacStat",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.55",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "changed": 1,
          "constant": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This read-only variable has the value changed(1) if the Ethernet source address received on the fiber interface changed since the device's previous report to the Mangement Module, and the value constant(2) otherwise. To cause the Management Module to generate a trap when this occurs, set cgfeb100FiberSacConfig(54) to enabled(1)."
  },
  "cgfeb100MonitorTap": {
    "name": "cgfeb100MonitorTap",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.56",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "transmit": 1,
          "receive": 2,
          "notInstalled": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Before reading this description, see cgfeb100MonitorType(10). This variable controls which side of the fiber port (transmit(1) or receive(2)) is monitored by the monitoring port. If no monitoring port is present, this variable has the value notInstalled(3)."
  },
  "cgfeb100CacheClean": {
    "name": "cgfeb100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.23.1.57",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "crmfe100Table": {
    "name": "crmfe100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CRMFE100 in the stack, indexed by cabinet serial number and slot."
  },
  "crmfe100Entry": {
    "name": "crmfe100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "crmfe100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "crmfe100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CRMFE100"
  },
  "crmfe100BiaIndex": {
    "name": "crmfe100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "crmfe100SlotIndex": {
    "name": "crmfe100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "crmfe100Groups": {
    "name": "crmfe100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CRMFE100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "crmfe100MRevision": {
    "name": "crmfe100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "crmfe100CfgMatch": {
    "name": "crmfe100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "crmfe100SerialNumber": {
    "name": "crmfe100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "crmfe100ConnA": {
    "name": "crmfe100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device"
  },
  "crmfe100ConnB": {
    "name": "crmfe100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Copper connector built into this device"
  },
  "crmfe100TPLink": {
    "name": "crmfe100TPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Copper Link for this device"
  },
  "crmfe100FiberLink": {
    "name": "crmfe100FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "crmfe100Fault": {
    "name": "crmfe100Fault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value is yes(1) when either CopperLink or FiberLink has value linkDown(2)"
  },
  "crmfe100Autonegot": {
    "name": "crmfe100Autonegot",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Autonegotiation configuration for this device."
  },
  "crmfe100Enabled": {
    "name": "crmfe100Enabled",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When the Enabled configuration item is set to no(2), the converter passes no network traffic in either direction."
  },
  "crmfe100Pause": {
    "name": "crmfe100Pause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The Pause feature allows Ethernet MACs that support it to send data pacing 'Pause' messages to each other. Support for Pause is negotiated at the physical level and passed up to the MAC. While the MAC's Pause messages themselves can pass over the fiber link that this pair of media converters introduces, the TP physical layer negotiations to enable Pause can not. Therefore, if both end station MACs support Pause and wish to use it, the Pause negotiation must be re-generated by the media converters on both ends. By setting this configuration option to enabled(1), you are indicating to the local twisted pair station that the twisted pair station on the other side of the other media converter supports Pause and wishes to use it. This variable must be set consistently on both of the paired media converters."
  },
  "crmfe100LinkPassThrough": {
    "name": "crmfe100LinkPassThrough",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration item allows Link Pass Through to be enabled(1) or disabled(2). Link Passthrough causes loss of link on one side of a media converter to be passed through to the other side, so that upstream equipment can see fault conditions that would otherwise be hidden by the media converters."
  },
  "crmfe100AutoCross": {
    "name": "crmfe100AutoCross",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "On certain devices, it is possible for hardware to automatically correct errors in cable selection, making the distinction between a 'straight through' cable and a 'crossover' cable unimportant. This capability is known as Auto Cross. When disabled, the port reverts to MDI mode."
  },
  "crmfe100TPActivity": {
    "name": "crmfe100TPActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Twisted Pair Activity. Some versions of the CRMFE100 do not support the reporting of interface activity. The value of this variable for such a device will be notApplicable."
  },
  "crmfe100FiberActivity": {
    "name": "crmfe100FiberActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Fiber Activity. Some versions of the CRMFE100 do not support the reporting of interface activity. The value of this variable for such a device will be notApplicable."
  },
  "crmfe100ConfigMode": {
    "name": "crmfe100ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "crmfe100FarEndFault": {
    "name": "crmfe100FarEndFault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Far End Fault configuration of this device. Far End Fault causes the fiber transmitter to generate a Far End Fault pattern upon the loss of a receiver signal detect. When the receiver detects signal again, the transmitter stops transmitting the Far End Fault pattern."
  },
  "crmfe100NetworkMode": {
    "name": "crmfe100NetworkMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "tokenRing": 1,
          "ethernet": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Read-only indicator for High Speed Token Ring jumper configuration. If the variable reads tokenRing(1), then the converter is jumpered for High Speed Token Ring mode. If the variable reads ethernet(2), then the converter is jumpered for Ethernet mode. The jumper settings for the converters on both ends of the fiber must be the same."
  },
  "crmfe100UpTime": {
    "name": "crmfe100UpTime",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Time since the last reboot in Time Ticks (hundredths of seconds). If the value 0 is written to this variable, the timer is reset. No other write value is accepted."
  },
  "crmfe100FirmwareRevision": {
    "name": "crmfe100FirmwareRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Firmware revision level of this CRMFE100."
  },
  "crmfe100RmtDetected": {
    "name": "crmfe100RmtDetected",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "detected": 1,
          "notDetected": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Has the value yes(1) if management communcations have been established with a remote media converter."
  },
  "crmfe100RmtTPLink": {
    "name": "crmfe100RmtTPLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Copper Link for this device"
  },
  "crmfe100RmtFiberLink": {
    "name": "crmfe100RmtFiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "crmfe100RmtFault": {
    "name": "crmfe100RmtFault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value is yes(1) when either TPLink or FiberLink has value linkDown(2)"
  },
  "crmfe100RmtAutonegot": {
    "name": "crmfe100RmtAutonegot",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Autonegotiation configuration for this device."
  },
  "crmfe100RmtPause": {
    "name": "crmfe100RmtPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The Pause feature allows Ethernet MACs that support it to send data pacing 'Pause' messages to each other. Support for Pause is negotiated at the physical level and passed up to the MAC. While the MAC's Pause messages themselves can pass over the fiber link that this pair of media converters introduces, the TP physical layer negotiations to enable Pause can not. Therefore, if both end station MACs support Pause and wish to use it, the Pause negotiation must be re-generated by the media converters on both ends. By setting this configuration option to enabled(1), you are indicating to the local twisted pair station that the twisted pair station on the other side of the other media converter supports Pause and wishes to use it. This variable must be set consistently on both of the paired media converters."
  },
  "crmfe100RmtLinkPassThrough": {
    "name": "crmfe100RmtLinkPassThrough",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration item allows Link Pass Through to be enabled(1) or disabled(2). Link Passthrough causes loss of link on one side of a media converter to be passed through to the other side, so that upstream equipment can see fault conditions that would otherwise be hidden by the media converters."
  },
  "crmfe100RmtAutoCross": {
    "name": "crmfe100RmtAutoCross",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "On certain devices, it is possible for hardware to automatically correct errors in cable selection, making the distinction between a 'straight through' cable and a 'crossover' cable unimportant. This capability is known as Auto Cross. When disabled, the port reverts to MDI mode."
  },
  "crmfe100RmtTPActivity": {
    "name": "crmfe100RmtTPActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Twisted Pair Activity. Some versions of the CRMFE100 do not support the reporting of interface activity. The value of this variable for such a device will be notApplicable."
  },
  "crmfe100RmtFiberActivity": {
    "name": "crmfe100RmtFiberActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Fiber Activity. Some versions of the CRMFE100 do not support the reporting of interface activity. The value of this variable for such a device will be notApplicable."
  },
  "crmfe100RmtConfigMode": {
    "name": "crmfe100RmtConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "crmfe100RmtFarEndFault": {
    "name": "crmfe100RmtFarEndFault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Far End Fault configuration of this device. Far End Fault causes the fiber transmitter to generate a Far End Fault pattern upon the loss of a receiver signal detect. When the receiver detects signal again, the transmitter stops transmitting the Far End Fault pattern."
  },
  "crmfe100RmtLoopback": {
    "name": "crmfe100RmtLoopback",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When Remote Loopback is enabled, all packets sent out from the local fiber interface are reflected back by the remote converter rather than being passed out through the remote twisted pair interface, and all packets received on the remote Twisted Pair interface are discarded."
  },
  "crmfe100RmtNetworkMode": {
    "name": "crmfe100RmtNetworkMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "tokenRing": 1,
          "ethernet": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Read-only indicator for High Speed Token Ring jumper configuration. If the variable reads tokenRing(1), then the converter is jumpered for High Speed Token Ring mode. If the variable reads ethernet(2), then the converter is jumpered for Ethernet mode. The jumper settings for the converters on both ends of the fiber must be the same."
  },
  "crmfe100RmtUpTime": {
    "name": "crmfe100RmtUpTime",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Time since the last reboot in Time Ticks (hundredths of seconds). If the value 0 is written to this variable, the timer is reset. No other write value is accepted."
  },
  "crmfe100TxFxBwa": {
    "name": "crmfe100TxFxBwa",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.39",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable allows the control of bandwidth allocation. The value of this variable is entered in Kilobytes per Second, and is automatically rounded to the nearest 64KBps. A value of zero disables data transfer, and the maximum value is 12224KBps. Data traffic is measured from the beginning of each second. Once the traffic reaches the cap specified, all traffic is discarded until the start of the next second, when the counters are reset and traffic begins to flow again. crmfe100TxFxBwa(39) limits the data flowing from the Twisted Pair interface to the Fiber interface."
  },
  "crmfe100FxTxBwa": {
    "name": "crmfe100FxTxBwa",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.40",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable allows the control of bandwidth allocation. The value of this variable is entered in Kilobytes per Second, and is automatically rounded to the nearest 64KBps. A value of zero disables data transfer, and the maximum value is 12224KBps. Data traffic is measured from the beginning of each second. Once the traffic reaches the cap specified, all traffic is discarded until the start of the next second, when the counters are reset and traffic begins to flow again. crmfe100FxTxBwa(39) limits the data flowing from the fiber interface to the twisted pair interface."
  },
  "crmfe100TxBytesH": {
    "name": "crmfe100TxBytesH",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.41",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "These variables measure the traffic (in Bytes) received by the two interfaces of the converter (and therefore transmitted by the opposite interface). 'Tx' refers to data received by the Twisted Pair interface (and transmitted on the Fiber interface), and 'Fx' refers to data received on the Fiber interface (and transmitted on the Twisted Pair interface). In order to limit each variable to the 32-bit maximum commonly supported in the SNMP world, these 64-bit counters are split into a high-order and low-order 32-bit sections. Transition Networks' applications generally treat the High order portion of the counter as a counter of the number of times the Low order section has wrapped to 0. To reconstruct the original 64-bit value, multiply the 'High' section by 2^32 and add the 'Low' section. If you write the value 0 to any of these four variables, all four are reset to zero."
  },
  "crmfe100TxBytesL": {
    "name": "crmfe100TxBytesL",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.42",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "See the DESCRIPTION for cfmfe100TxBytesH(42) above."
  },
  "crmfe100FxBytesH": {
    "name": "crmfe100FxBytesH",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.43",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "See the DESCRIPTION for cfmfe100TxBytesH(42) above."
  },
  "crmfe100FxBytesL": {
    "name": "crmfe100FxBytesL",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.44",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "See the DESCRIPTION for cfmfe100TxBytesH(42) above."
  },
  "crmfe100MscRxBytes": {
    "name": "crmfe100MscRxBytes",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.45",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable measures the traffic (in Bytes) received and transmitted by the Management Subchannel within the Fiber interface. 'Management Subchannel' refers to the transfer of management data to and from the Remote SRMFExxx in the inter-packet gaps normally found in Ethernet traffic. This allows management data to be transferred with no reduction in the bandwidth available for normal network traffic. If you write the value 0 to this variable or crmfe100MscTxBytes(47), both are reset to zero."
  },
  "crmfe100MscTxBytes": {
    "name": "crmfe100MscTxBytes",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.46",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable measures the traffic (in Bytes) received and transmitted by the Management Subchannel within the Fiber interface. 'Management Subchannel' refers to the transfer of management data to and from the Remote SRMFExxx in the inter-packet gaps normally found in Ethernet traffic. This allows management data to be transferred with no reduction in the bandwidth available for normal network traffic. If you write the value 0 to this variable or crmfe100MscRxBytes(46), both are reset to zero."
  },
  "crmfe100CacheClean": {
    "name": "crmfe100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.47",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "crmfe100MbTxFxBwa": {
    "name": "crmfe100MbTxFxBwa",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.48",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable allows the control of bandwidth allocation. The value of this variable is entered in Megabits per Second, and is automatically rounded to the nearest 64KBps. A value of zero disables data transfer, and the maximum value is 12224KBps. Data traffic is measured from the beginning of each second. Once the traffic reaches the cap specified, all traffic is discarded until the start of the next second, when the counters are reset and traffic begins to flow again. crmfe100MbTxFxBwa(48) limits the data flowing from the Twisted Pair interface to the Fiber interface. This variable does the same thing as crmfe100TxFxBwa(39), only the units are different."
  },
  "crmfe100MbFxTxBwa": {
    "name": "crmfe100MbFxTxBwa",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.24.1.49",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable allows the control of bandwidth allocation. The value of this variable is entered in Megabits per Second, and is automatically rounded to the nearest 64KBps. A value of zero disables data transfer, and the maximum value is 12224KBps. Data traffic is measured from the beginning of each second. Once the traffic reaches the cap specified, all traffic is discarded until the start of the next second, when the counters are reset and traffic begins to flow again. crmfe100MbFxTxBwa(49) limits the data flowing from the fiber interface to the twisted pair interface. This variable does the same thing as crmfe100TxFxBwa(40), only the units are different."
  },
  "crs2f100Table": {
    "name": "crs2f100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CRS2F100 in the stack, indexed by cabinet serial number and slot."
  },
  "crs2f100Entry": {
    "name": "crs2f100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "crs2f100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "crs2f100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CRS2F100"
  },
  "crs2f100BiaIndex": {
    "name": "crs2f100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "crs2f100SlotIndex": {
    "name": "crs2f100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "crs2f100Groups": {
    "name": "crs2f100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CRS2F100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "crs2f100MRevision": {
    "name": "crs2f100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "crs2f100CfgMatch": {
    "name": "crs2f100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "crs2f100SerialNumber": {
    "name": "crs2f100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "crs2f100ConnA": {
    "name": "crs2f100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device"
  },
  "crs2f100ConnB": {
    "name": "crs2f100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Copper connector built into this device"
  },
  "crs2f100FiberLink": {
    "name": "crs2f100FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "crs2f100Fault": {
    "name": "crs2f100Fault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value is yes(1) when FiberLink has value linkDown(2)"
  },
  "crs2f100FirmwareRevision": {
    "name": "crs2f100FirmwareRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Firmware Revision MIB Variable reports the revision of software running on the processor on this particular device. You can discover the revisions on these devices by entering the PICREV command at the command line interface. Device Firmware Revisions are normally discussed in terms of a single letter, e.g. revision 'B'. However, when the firmware revision is displayed by generic MIB processing code that is unaware of this convention, the revision is displayed as a decimal value. The table in crs2f100.html provides some examples of how decimal revision values correspond to letter revision values."
  },
  "crs2f100Loopback": {
    "name": "crs2f100Loopback",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Loopback is a testing aid available on several different products. When Loopback is enabled on an interface, all data that is sent to the interface is reflected back to the sender, and the actual condition (or even existence) of the equipment on the opposite interface is ignored."
  },
  "crs2f100DCE": {
    "name": "crs2f100DCE",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dCE": 1,
          "dTE": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An indication of whether this device is attached to a DCE (a modem) or a DTE (a terminal or computer)."
  },
  "crs2f100CopperActivity": {
    "name": "crs2f100CopperActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The activity indicator has the value yes(1) when the hardware has recently detected network traffic on the associated network port, and no(2) otherwise."
  },
  "crs2f100ConfigMode": {
    "name": "crs2f100ConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device."
  },
  "crs2f100RmtDetected": {
    "name": "crs2f100RmtDetected",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Has the value yes(1) if management communcations have been established with a remote media device."
  },
  "crs2f100RmtLoopback": {
    "name": "crs2f100RmtLoopback",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Loopback is a testing aid available on several different products. When Loopback is enabled on an interface, all data that is sent to the interface is reflected back to the sender, and the actual condition (or even existence) of the equipment on the opposite interface is ignored. When no remote device is present, this variable has the value notApplicable(3)."
  },
  "crs2f100RmtDCE": {
    "name": "crs2f100RmtDCE",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "dCE": 1,
          "dTE": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This variable describes the status of a remotely managed device. This is an indicator of whether this device is attached to a DCE (a modem) or a DTE (a terminal or computer). When no remote device is present, this variable has the value notApplicable(3)."
  },
  "crs2f100RmtCopperActivity": {
    "name": "crs2f100RmtCopperActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The activity indicator has the value yes(1) when the hardware has recently detected network traffic on the associated network port, and no(2) otherwise. When no remote device is present, this variable has the value notApplicable(3)."
  },
  "crs2f100RmtConfigMode": {
    "name": "crs2f100RmtConfigMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "software": 1,
          "hardware": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This device has a jumper or switch that disables software management of the device. When ConfigMode is hardware(2), SNMP management is disabled, and all configuration control comes from physical switches or jumpers on the device. When no remote device is present, this variable has the value notApplicable(3)."
  },
  "crs2f100CacheClean": {
    "name": "crs2f100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.25.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "crs4f100Table": {
    "name": "crs4f100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CRS4F100 in the stack, indexed by cabinet serial number and slot."
  },
  "crs4f100Entry": {
    "name": "crs4f100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "crs4f100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "crs4f100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CRS4F100"
  },
  "crs4f100BiaIndex": {
    "name": "crs4f100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet in which the device is installed"
  },
  "crs4f100SlotIndex": {
    "name": "crs4f100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot in which the device is installed"
  },
  "crs4f100Groups": {
    "name": "crs4f100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User-defined keywords that group this device together with other devices under a user-defined scheme. By placing matching keywords in cpsGroupCtrl.0, the agent can be instructed to apply configuration changes simultaneously to all group members rather than to individual devices. Every Groups string has three automatically defined implied values: 1) The model family of the device, e.g. 'CRS4F100' 2) The serial number of the cabinet in which the device is installed, in decimal with no leading zeroes, e.g. '12345', and 3) same as 2, with the slot in which the device is installed appended, enclosed in square brackets. e.g. '12345[9]'"
  },
  "crs4f100MRevision": {
    "name": "crs4f100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "crs4f100CfgMatch": {
    "name": "crs4f100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "yes(1) indicates that the conditions specified in cpsGroupCtrl.0 match the Groups value for this device. no(2) means that there is no match. notApplicable(3) indicates that cpsGroupCtrl.0 is null and therefore no comparison was performed."
  },
  "crs4f100SerialNumber": {
    "name": "crs4f100SerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number of this device"
  },
  "crs4f100ConnA": {
    "name": "crs4f100ConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Fiber connector built into this device"
  },
  "crs4f100ConnB": {
    "name": "crs4f100ConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The style of Copper connector built into this device"
  },
  "crs4f100FiberLink": {
    "name": "crs4f100FiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkUp": 1,
          "linkDown": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Status of Fiber Link for this device"
  },
  "crs4f100Fault": {
    "name": "crs4f100Fault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Value is yes(1) when FiberLink has value linkDown(2)"
  },
  "crs4f100FirmwareRevision": {
    "name": "crs4f100FirmwareRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The Firmware Revision MIB Variable reports the revision of software running on the processor on this particular device. You can discover the revisions on these devices by entering the PICREV command at the command line interface. Device Firmware Revisions are normally discussed in terms of a single letter, e.g. revision 'B'. However, when the firmware revision is displayed by generic MIB processing code that is unaware of this convention, the revision is displayed as a decimal value. The table in crs4f100.html provides some examples of how decimal revision values correspond to letter revision values."
  },
  "crs4f100CopperActivity": {
    "name": "crs4f100CopperActivity",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The activity indicator has the value yes(1) when the hardware has recently detected network traffic on the associated network port, and no(2) otherwise."
  },
  "crs4f100CacheClean": {
    "name": "crs4f100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.26.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "clean": 1,
          "dirty": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When the value is clean(1)Device and Management Module cache are synchronized, no automatic corrections to configuration will occur. When the value is dirty(2) Device and Management Module cache are not synchronized. The configuration currently displayed by the application has not been validated by the device. The device may need to correct the configuration, in which case the displayed configuration will change."
  },
  "cmefg100Table": {
    "name": "cmefg100Table",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Generated CMEFG100 MIB Version 041110a "
  },
  "cmefg100Entry": {
    "name": "cmefg100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cmefg100SubDeviceIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cmefg100BiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cmefg100SlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CMEFG100"
  },
  "cmefg100SubDeviceIndex": {
    "name": "cmefg100SubDeviceIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "If the name of a particular MIB variable does not end in 'Tbl', then it uses the placeholder value '1' in the subdevice index column. "
  },
  "cmefg100BiaIndex": {
    "name": "cmefg100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100SlotIndex": {
    "name": "cmefg100SlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100Groups": {
    "name": "cmefg100Groups",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100MRevision": {
    "name": "cmefg100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100CfgMatch": {
    "name": "cmefg100CfgMatch",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcLocEnable": {
    "name": "cmefg100ImcLocEnable",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable periodic upload of local Interface MIB Counters from CMEFG100 to Agent. cmefg100ImcxxxTbl subdevice 1=local tp, subdevice 2=local fiber. "
  },
  "cmefg100ImcLocReset": {
    "name": "cmefg100ImcLocReset",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "reset": 1,
          "doNothing": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "set to reset(1) to clear all local cmefg100Imc counters. "
  },
  "cmefg100ImcRmtEnable": {
    "name": "cmefg100ImcRmtEnable",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable periodic upload of remote Interface MIB Counters from CMEFG100 to Agent. cmefg100ImcxxxTbl subdevice 3=remote tp, subdevice 4=remote fiber. "
  },
  "cmefg100ImcRmtReset": {
    "name": "cmefg100ImcRmtReset",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "reset": 1,
          "doNothing": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "set to reset(1) to clear all remote cmefg100Imc counters. "
  },
  "cmefg100ImcRxAlignmentErrorsTbl": {
    "name": "cmefg100ImcRxAlignmentErrorsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxBroadcastPktsTbl": {
    "name": "cmefg100ImcRxBroadcastPktsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxDropPktsTbl": {
    "name": "cmefg100ImcRxDropPktsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxExcessSizeDiscTbl": {
    "name": "cmefg100ImcRxExcessSizeDiscTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxFCSErrorsTbl": {
    "name": "cmefg100ImcRxFCSErrorsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxFragmentsTbl": {
    "name": "cmefg100ImcRxFragmentsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxGoodOctetsTbl": {
    "name": "cmefg100ImcRxGoodOctetsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxGoodOctetsWrapTbl": {
    "name": "cmefg100ImcRxGoodOctetsWrapTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxJabbersTbl": {
    "name": "cmefg100ImcRxJabbersTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxMulticastPktsTbl": {
    "name": "cmefg100ImcRxMulticastPktsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxOctetsTbl": {
    "name": "cmefg100ImcRxOctetsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxOctetsWrapTbl": {
    "name": "cmefg100ImcRxOctetsWrapTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxOversizePktsTbl": {
    "name": "cmefg100ImcRxOversizePktsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxPausePktsTbl": {
    "name": "cmefg100ImcRxPausePktsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxPkts1024to1522OctetsTbl": {
    "name": "cmefg100ImcRxPkts1024to1522OctetsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxPkts128to255OctetsTbl": {
    "name": "cmefg100ImcRxPkts128to255OctetsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxPkts256to511OctetsTbl": {
    "name": "cmefg100ImcRxPkts256to511OctetsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxPkts512to1023OctetsTbl": {
    "name": "cmefg100ImcRxPkts512to1023OctetsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxPkts64OctetsTbl": {
    "name": "cmefg100ImcRxPkts64OctetsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxPkts65to127OctetsTbl": {
    "name": "cmefg100ImcRxPkts65to127OctetsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxQosOctetsTbl": {
    "name": "cmefg100ImcRxQosOctetsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxQosOctetsWrapTbl": {
    "name": "cmefg100ImcRxQosOctetsWrapTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxQosPktsTbl": {
    "name": "cmefg100ImcRxQosPktsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxSAChangesTbl": {
    "name": "cmefg100ImcRxSAChangesTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxSymbolErrorTbl": {
    "name": "cmefg100ImcRxSymbolErrorTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxUndersizePktsTbl": {
    "name": "cmefg100ImcRxUndersizePktsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcRxUnicastPktsTbl": {
    "name": "cmefg100ImcRxUnicastPktsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxBroadcastPktsTbl": {
    "name": "cmefg100ImcTxBroadcastPktsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxCollisionsTbl": {
    "name": "cmefg100ImcTxCollisionsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.39",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxDeferredTransmitTbl": {
    "name": "cmefg100ImcTxDeferredTransmitTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.40",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxDropPktsTbl": {
    "name": "cmefg100ImcTxDropPktsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.41",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxExcessiveCollisionTbl": {
    "name": "cmefg100ImcTxExcessiveCollisionTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.42",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxFrameInDiscTbl": {
    "name": "cmefg100ImcTxFrameInDiscTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.43",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxLateCollisionTbl": {
    "name": "cmefg100ImcTxLateCollisionTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.44",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxMulticastPktsTbl": {
    "name": "cmefg100ImcTxMulticastPktsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.45",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxMultipleCollisionTbl": {
    "name": "cmefg100ImcTxMultipleCollisionTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.46",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxOctetsTbl": {
    "name": "cmefg100ImcTxOctetsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.47",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxOctetsWrapTbl": {
    "name": "cmefg100ImcTxOctetsWrapTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.48",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxPausePktsTbl": {
    "name": "cmefg100ImcTxPausePktsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.49",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxQosOctetsTbl": {
    "name": "cmefg100ImcTxQosOctetsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.50",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxQosOctetsWrapTbl": {
    "name": "cmefg100ImcTxQosOctetsWrapTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.51",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxQosPktsTbl": {
    "name": "cmefg100ImcTxQosPktsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.52",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxSingleCollisionTbl": {
    "name": "cmefg100ImcTxSingleCollisionTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.53",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100ImcTxUnicastPktsTbl": {
    "name": "cmefg100ImcTxUnicastPktsTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.54",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LadCacheCmd": {
    "name": "cmefg100LadCacheCmd",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.55",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "loadCache": 1,
          "doNothing": 2,
          "release": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "All variables starting with cmefg100Lad relate to the Learned MAC Address Database. Due to the large size of the LAD database and the limited memory within the Agent, the cache is loaded into the cache memory buffer only when it is requested via this MIB variable. Setting this var to loadCache commands the agent to upload the LAD from the device exactly one time. Note that the contents of this cache are NOT automatically refreshed. Setting this variable to 'release' causes the data in the cache to be purged, even if the cache buffer contains data of an entirely different type, such as the VLAN table cache. Thus, it is not necessary to know what type of data was most recently loaded into the cache buffer, but it is necessary to take care not to release data that is currently in use. A genErr will be returned if any other command involving reading or writing the LAD or the VLAN table is in progress. "
  },
  "cmefg100LadCacheState": {
    "name": "cmefg100LadCacheState",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.56",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ready": 1,
          "empty": 2,
          "transferring": 3,
          "bufferBusy": 4,
          "stale": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable shows the current state of the Agent's cache buffer with respect to the Learned Address Database. A value of 'ready' means that the cache buffer contains a complete copy of the LAD that is less than 300 seconds old. A value of 'stale' means that the cache buffer contains a complete copy of the LAD that is more than 300 seconds old. A value of 'empty' means that the buffer has been purged, and the system is ready to accept a cmefg100LadCacheCmd of 'loadCache.' A value of 'transferring' means that no command can be issued and the cache cannot be read because data is currently being transferred into the cache buffer. The data may or may not be related to the LAD. A value of 'bufferBusy' means that the buffer contains a complete copy (ready or stale) of something other than the LAD. The contents of the buffer can be overwritten with the LAD by issuing a 'loadCache' command. "
  },
  "cmefg100LadEditCmd": {
    "name": "cmefg100LadEditCmd",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.57",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "write": 1,
          "delete": 2,
          "doNothing": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this var to 'write' causes LadEditMac, LadEditPort, and LadEditVid to be written (insert/overwrite as required) to the LAD. Setting this var to 'delete' causes the address represented by LadEditMac to be deleted from the LAD. Changes made are not reflected in the LAD cache until the device accepts them and the cache is reloaded. A genErr will be returned if any other command involving reading or writing the LAD or the VLAN table is in progress. "
  },
  "cmefg100LadEditMac": {
    "name": "cmefg100LadEditMac",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.58",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A plain-text representation of a MAC address to be used the next time cmefg100LadEditCmd is set to write or delete. "
  },
  "cmefg100LadEditPort": {
    "name": "cmefg100LadEditPort",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.59",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "twistedPair": 1,
          "fiber": 2,
          "drop": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A port to be used the next time cmefg100LadEditCmd is set to write. "
  },
  "cmefg100LadEditVid": {
    "name": "cmefg100LadEditVid",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.60",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A VLAN Id to be used the next time cmefg100LadEditCmd is set to write. Not valid when cmefg100VlanEnable is disabled(2) "
  },
  "cmefg100LadEntries": {
    "name": "cmefg100LadEntries",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.61",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A count of the number of entries currently in the LAD Cache. See also cmefg100LadCacheState. If a LAD cache-filling transfer is in progress, this variable can be read for a progress report. "
  },
  "cmefg100LadMacTbl": {
    "name": "cmefg100LadMacTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.62",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An Ethernet MAC address in the LAD table. The SubDeviceIndex is an arbitrary integer sequence number, range 1..cmefg100LadEntries. If cmefg100LadEntries is 0 (either because cmefg100LadCacheState is not 'ready/stale' or because there simply are no entries), this table contains a solitary dummy entry, SubDeviceIndex==1. "
  },
  "cmefg100LadPortTbl": {
    "name": "cmefg100LadPortTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.63",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "twistedPair": 1,
          "fiber": 2,
          "drop": 3,
          "notApplicable": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A port in the LAD table. Drop means 'forward to neither port' The SubDeviceIndex is an arbitrary integer sequence number, range 1..cmefg100LadEntries. If cmefg100LadEntries is 0 (either because cmefg100LadCacheState is not 'ready/stale' or because there simply are no entries), this table contains a solitary entry, SubDeviceIndex==1, value notApplicable. "
  },
  "cmefg100LadStaticTbl": {
    "name": "cmefg100LadStaticTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.64",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "static": 1,
          "dynamic": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An indication of whether the indexed entry in the LAD is static or dynamic. The SubDeviceIndex is an arbitrary integer sequence number, range 1..cmefg100LadEntries. If cmefg100LadEntries is 0 (either because cmefg100LadCacheState is not 'ready/stale' or because there simply are no entries), this table contains a solitary entry, SubDeviceIndex==1, value notApplicable. "
  },
  "cmefg100LadVidTbl": {
    "name": "cmefg100LadVidTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.65",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A VLAN Id in the LAD table. The SubDeviceIndex is an arbitrary integer sequence number, range 1..cmefg100LadEntries. If cmefg100LadEntries is 0 (either because cmefg100LadCacheState is not 'ready/stale' or because there simply are no entries), this table contains a solitary dummy entry, SubDeviceIndex==1. Always returns the dummy value '0' when cmefg100VlanEnable is disabled(2). "
  },
  "cmefg100LocColdstart": {
    "name": "cmefg100LocColdstart",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.66",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocDmiRxPower": {
    "name": "cmefg100LocDmiRxPower",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.67",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "DMI: Diagnostic Monitoring Interface for fiber transceivers "
  },
  "cmefg100LocDmiRxPowerAlarm": {
    "name": "cmefg100LocDmiRxPowerAlarm",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.68",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "notSupported": 2,
          "lowWarn": 3,
          "highWarn": 4,
          "lowAlarm": 5,
          "highAlarm": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocDmiTemp": {
    "name": "cmefg100LocDmiTemp",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.69",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "In tenths of degrees C "
  },
  "cmefg100LocDmiTempAlarm": {
    "name": "cmefg100LocDmiTempAlarm",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.70",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "notSupported": 2,
          "lowWarn": 3,
          "highWarn": 4,
          "lowAlarm": 5,
          "highAlarm": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocDmiTxBiasAlarm": {
    "name": "cmefg100LocDmiTxBiasAlarm",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.71",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "notSupported": 2,
          "lowWarn": 3,
          "highWarn": 4,
          "lowAlarm": 5,
          "highAlarm": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocDmiTxBiasCurrent": {
    "name": "cmefg100LocDmiTxBiasCurrent",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.72",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "In microamperes "
  },
  "cmefg100LocDmiTxPower": {
    "name": "cmefg100LocDmiTxPower",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.73",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "In microwatts "
  },
  "cmefg100LocDmiTxPowerAlarm": {
    "name": "cmefg100LocDmiTxPowerAlarm",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.74",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "notSupported": 2,
          "lowWarn": 3,
          "highWarn": 4,
          "lowAlarm": 5,
          "highAlarm": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocFiberAdv1000FDX": {
    "name": "cmefg100LocFiberAdv1000FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.75",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only value notApplicable returned when autonegotiation is disabled "
  },
  "cmefg100LocFiberAdv1000HDX": {
    "name": "cmefg100LocFiberAdv1000HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.76",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only value notApplicable returned when autonegotiation is disabled "
  },
  "cmefg100LocFiberAutoNegot": {
    "name": "cmefg100LocFiberAutoNegot",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.77",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100LocFiberConnA": {
    "name": "cmefg100LocFiberConnA",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.78",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocFiberDuplex": {
    "name": "cmefg100LocFiberDuplex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.79",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forceFDX": 1,
          "forceHDX": 2,
          "autoFDX": 3,
          "autoHDX": 4,
          "negotiating": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only values 3..5 are returned when autonegotiation is enabled "
  },
  "cmefg100LocFiberLink": {
    "name": "cmefg100LocFiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.80",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocFiberPause": {
    "name": "cmefg100LocFiberPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.81",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "asymmetricRx": 1,
          "asymmetricTx": 2,
          "symmetric": 3,
          "disabled": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100LocFiberQosPause": {
    "name": "cmefg100LocFiberQosPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.82",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100LocFiberSacEnable": {
    "name": "cmefg100LocFiberSacEnable",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.83",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/disable traps for Source Address Change "
  },
  "cmefg100LocFiberSacStatus": {
    "name": "cmefg100LocFiberSacStatus",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.84",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "changed": 1,
          "constant": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocFirmwareRevision": {
    "name": "cmefg100LocFirmwareRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.85",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocFpgaRev": {
    "name": "cmefg100LocFpgaRev",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.86",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Field-Programmable Gate Array revision "
  },
  "cmefg100LocFxTxBwaKb": {
    "name": "cmefg100LocFxTxBwaKb",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.87",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 122112
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "FX to TX bandwidth allocation, in Kbps "
  },
  "cmefg100LocFxTxBwaMb": {
    "name": "cmefg100LocFxTxBwaMb",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.88",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1000
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "FX to TX bandwidth allocation, in Mbps "
  },
  "cmefg100LocOamActiveMode": {
    "name": "cmefg100LocOamActiveMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.89",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 1,
          "passive": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "OAM: Operation, Administration, and Maintenance "
  },
  "cmefg100LocOamAdminControl": {
    "name": "cmefg100LocOamAdminControl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.90",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100LocOamConfigRevision": {
    "name": "cmefg100LocOamConfigRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.91",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamControlInUnknownOpcodes": {
    "name": "cmefg100LocOamControlInUnknownOpcodes",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.92",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamCriticalEvent": {
    "name": "cmefg100LocOamCriticalEvent",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.93",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "critical": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamDuplicateEventNotificationRx": {
    "name": "cmefg100LocOamDuplicateEventNotificationRx",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.94",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamFramesLostDueToOamError": {
    "name": "cmefg100LocOamFramesLostDueToOamError",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.95",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamInformationRx": {
    "name": "cmefg100LocOamInformationRx",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.96",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamInformationTx": {
    "name": "cmefg100LocOamInformationTx",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.97",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamLastGasp": {
    "name": "cmefg100LocOamLastGasp",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.98",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "failure": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamLinkEvents": {
    "name": "cmefg100LocOamLinkEvents",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.99",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "supported": 1,
          "notSupported": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamLinkFault": {
    "name": "cmefg100LocOamLinkFault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.100",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fault": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamLocDteDisc": {
    "name": "cmefg100LocOamLocDteDisc",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.101",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "completed": 1,
          "notCompleted": 2,
          "unsatisfied": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "discovery state "
  },
  "cmefg100LocOamLoopbackControlRx": {
    "name": "cmefg100LocOamLoopbackControlRx",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.102",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamLoopbackControlTx": {
    "name": "cmefg100LocOamLoopbackControlTx",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.103",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamMacAddress": {
    "name": "cmefg100LocOamMacAddress",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.104",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The MAC address of the OAM entity. "
  },
  "cmefg100LocOamMaxOamPduSize": {
    "name": "cmefg100LocOamMaxOamPduSize",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.105",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamMultiplexorState": {
    "name": "cmefg100LocOamMultiplexorState",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.106",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forwarding": 1,
          "discarding": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamOperStatus": {
    "name": "cmefg100LocOamOperStatus",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.107",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "linkFault": 1,
          "activeSendLocal": 2,
          "passiveWait": 3,
          "sendLocalRemote": 4,
          "sendLocalRemoteOk": 5,
          "sendAny": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamOrgSpecificRx": {
    "name": "cmefg100LocOamOrgSpecificRx",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.108",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamOrgSpecificTx": {
    "name": "cmefg100LocOamOrgSpecificTx",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.109",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamParserState": {
    "name": "cmefg100LocOamParserState",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.110",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forwarding": 1,
          "discarding": 2,
          "looping": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamRmtDteDisc": {
    "name": "cmefg100LocOamRmtDteDisc",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.111",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "completed": 1,
          "notCompleted": 2,
          "unsatisfied": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamRmtLoopback": {
    "name": "cmefg100LocOamRmtLoopback",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.112",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "supported": 1,
          "notSupported": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether or not local has support to allow remote to initiate remote loopback mode. "
  },
  "cmefg100LocOamUnidirectional": {
    "name": "cmefg100LocOamUnidirectional",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.113",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "supported": 1,
          "notSupported": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocOamVarRetrieval": {
    "name": "cmefg100LocOamVarRetrieval",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.114",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "supported": 1,
          "notSupported": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocSelfTestFailed": {
    "name": "cmefg100LocSelfTestFailed",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.115",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocSerialNumber": {
    "name": "cmefg100LocSerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.116",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocTpAdv1000FDX": {
    "name": "cmefg100LocTpAdv1000FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.117",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only value notApplicable returned when autonegotiation is disabled "
  },
  "cmefg100LocTpAdv1000HDX": {
    "name": "cmefg100LocTpAdv1000HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.118",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only value notApplicable returned when autonegotiation is disabled "
  },
  "cmefg100LocTpAdv100FDX": {
    "name": "cmefg100LocTpAdv100FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.119",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only value notApplicable returned when autonegotiation is disabled "
  },
  "cmefg100LocTpAdv100HDX": {
    "name": "cmefg100LocTpAdv100HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.120",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only value notApplicable returned when autonegotiation is disabled "
  },
  "cmefg100LocTpAdv10FDX": {
    "name": "cmefg100LocTpAdv10FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.121",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only value notApplicable returned when autonegotiation is disabled "
  },
  "cmefg100LocTpAdv10HDX": {
    "name": "cmefg100LocTpAdv10HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.122",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only value notApplicable returned when autonegotiation is disabled "
  },
  "cmefg100LocTpAutoNegot": {
    "name": "cmefg100LocTpAutoNegot",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.123",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100LocTpConnB": {
    "name": "cmefg100LocTpConnB",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.124",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CpsConnector",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocTpCross": {
    "name": "cmefg100LocTpCross",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.125",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forceMDI": 1,
          "forceMDI-X": 2,
          "auto": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100LocTpDuplex": {
    "name": "cmefg100LocTpDuplex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.126",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forceFDX": 1,
          "forceHDX": 2,
          "autoFDX": 3,
          "autoHDX": 4,
          "negotiating": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only values 3..5 are returned when autonegotiation is enabled "
  },
  "cmefg100LocTpLink": {
    "name": "cmefg100LocTpLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.127",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocTpPause": {
    "name": "cmefg100LocTpPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.128",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "asymmetricRx": 1,
          "asymmetricTx": 2,
          "symmetric": 3,
          "disabled": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100LocTpQosPause": {
    "name": "cmefg100LocTpQosPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.129",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "QOS: Quality of Service "
  },
  "cmefg100LocTpSacEnable": {
    "name": "cmefg100LocTpSacEnable",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.130",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/disable traps for Source Address Change "
  },
  "cmefg100LocTpSacStatus": {
    "name": "cmefg100LocTpSacStatus",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.131",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "changed": 1,
          "constant": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100LocTpSpeed": {
    "name": "cmefg100LocTpSpeed",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.132",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "force10Mbps": 1,
          "force100Mbps": 2,
          "auto10Mbps": 3,
          "auto100Mbps": 4,
          "auto1000Mbps": 5,
          "negotiating": 6
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only values 3..6 are returned when autonegotiation is enabled "
  },
  "cmefg100LocTxFxBwaKb": {
    "name": "cmefg100LocTxFxBwaKb",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.133",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 122112
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "TX to FX bandwidth allocation, in Kbps "
  },
  "cmefg100LocTxFxBwaMb": {
    "name": "cmefg100LocTxFxBwaMb",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.134",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1000
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "TX to FX bandwidth allocation, in Mbps "
  },
  "cmefg100LocUptime": {
    "name": "cmefg100LocUptime",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.135",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Write with 0 to reset. "
  },
  "cmefg100QosHqWeight": {
    "name": "cmefg100QosHqWeight",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.136",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100QosLqWeight": {
    "name": "cmefg100QosLqWeight",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.137",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100QosPriority": {
    "name": "cmefg100QosPriority",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.138",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 7
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100RmtColdStart": {
    "name": "cmefg100RmtColdStart",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.139",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtDetected": {
    "name": "cmefg100RmtDetected",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.140",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtDmiRxPower": {
    "name": "cmefg100RmtDmiRxPower",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.141",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtDmiRxPowerAlarm": {
    "name": "cmefg100RmtDmiRxPowerAlarm",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.142",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "notSupported": 2,
          "lowWarn": 3,
          "highWarn": 4,
          "lowAlarm": 5,
          "highAlarm": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtDmiTemp": {
    "name": "cmefg100RmtDmiTemp",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.143",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "In tenths of degrees C "
  },
  "cmefg100RmtDmiTempAlarm": {
    "name": "cmefg100RmtDmiTempAlarm",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.144",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "notSupported": 2,
          "lowWarn": 3,
          "highWarn": 4,
          "lowAlarm": 5,
          "highAlarm": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtDmiTxBiasAlarm": {
    "name": "cmefg100RmtDmiTxBiasAlarm",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.145",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "notSupported": 2,
          "lowWarn": 3,
          "highWarn": 4,
          "lowAlarm": 5,
          "highAlarm": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtDmiTxBiasCurrent": {
    "name": "cmefg100RmtDmiTxBiasCurrent",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.146",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "In microamperes "
  },
  "cmefg100RmtDmiTxPower": {
    "name": "cmefg100RmtDmiTxPower",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.147",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "In microwatts "
  },
  "cmefg100RmtDmiTxPowerAlarm": {
    "name": "cmefg100RmtDmiTxPowerAlarm",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.148",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "notSupported": 2,
          "lowWarn": 3,
          "highWarn": 4,
          "lowAlarm": 5,
          "highAlarm": 6
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtFactoryReset": {
    "name": "cmefg100RmtFactoryReset",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.149",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "reset": 1,
          "doNothing": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100RmtFiberAutoNegot": {
    "name": "cmefg100RmtFiberAutoNegot",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.150",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100RmtFiberLink": {
    "name": "cmefg100RmtFiberLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.151",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtFiberPause": {
    "name": "cmefg100RmtFiberPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.152",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "asymmetricRx": 1,
          "asymmetricTx": 2,
          "symmetric": 3,
          "notSupported": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100RmtFiberQosPause": {
    "name": "cmefg100RmtFiberQosPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.153",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100RmtFirmwareRevision": {
    "name": "cmefg100RmtFirmwareRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.154",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtFpgaRev": {
    "name": "cmefg100RmtFpgaRev",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.155",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Field-Programmable Gate Array revision "
  },
  "cmefg100RmtOamActiveMode": {
    "name": "cmefg100RmtOamActiveMode",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.156",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 1,
          "passive": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamCriticalEvent": {
    "name": "cmefg100RmtOamCriticalEvent",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.157",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "critical": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamLastGasp": {
    "name": "cmefg100RmtOamLastGasp",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.158",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "failure": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamLinkEvents": {
    "name": "cmefg100RmtOamLinkEvents",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.159",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "supported": 1,
          "notSupported": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamLinkFault": {
    "name": "cmefg100RmtOamLinkFault",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.160",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "fault": 1,
          "normal": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamLocDteDisc": {
    "name": "cmefg100RmtOamLocDteDisc",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.161",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "completed": 1,
          "notCompleted": 2,
          "unsatisfied": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamPeerConfigRevision": {
    "name": "cmefg100RmtOamPeerConfigRevision",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.162",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamPeerMacAddress": {
    "name": "cmefg100RmtOamPeerMacAddress",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.163",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamPeerMaxOamPduSize": {
    "name": "cmefg100RmtOamPeerMaxOamPduSize",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.164",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamPeerMultiplexorState": {
    "name": "cmefg100RmtOamPeerMultiplexorState",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.165",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forwarding": 1,
          "discarding": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamPeerParserState": {
    "name": "cmefg100RmtOamPeerParserState",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.166",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forwarding": 1,
          "discarding": 2,
          "looping": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamPeerVendorInfo": {
    "name": "cmefg100RmtOamPeerVendorInfo",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.167",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamPeerVendorOui": {
    "name": "cmefg100RmtOamPeerVendorOui",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.168",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 3,
            "max": 3
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamRmtDteDisc": {
    "name": "cmefg100RmtOamRmtDteDisc",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.169",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "completed": 1,
          "notCompleted": 2,
          "unsatisfied": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamRmtLoopback": {
    "name": "cmefg100RmtOamRmtLoopback",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.170",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabledOam": 1,
          "enabledAlternate": 2,
          "disabled": 3,
          "notSupported": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Initiates remote loopback mode if the remote supports it. See RmtOamPeerParserState for status information "
  },
  "cmefg100RmtOamUnidirectional": {
    "name": "cmefg100RmtOamUnidirectional",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.171",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "supported": 1,
          "notSupported": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtOamVarRetrieval": {
    "name": "cmefg100RmtOamVarRetrieval",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.172",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "supported": 1,
          "notSupported": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtSelfTestFailed": {
    "name": "cmefg100RmtSelfTestFailed",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.173",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtSerialNumber": {
    "name": "cmefg100RmtSerialNumber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.174",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtTpAdv1000FDX": {
    "name": "cmefg100RmtTpAdv1000FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.175",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only value notApplicable returned when autonegotiation is disabled "
  },
  "cmefg100RmtTpAdv1000HDX": {
    "name": "cmefg100RmtTpAdv1000HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.176",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only value notApplicable returned when autonegotiation is disabled "
  },
  "cmefg100RmtTpAdv100FDX": {
    "name": "cmefg100RmtTpAdv100FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.177",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only value notApplicable returned when autonegotiation is disabled "
  },
  "cmefg100RmtTpAdv100HDX": {
    "name": "cmefg100RmtTpAdv100HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.178",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only value notApplicable returned when autonegotiation is disabled "
  },
  "cmefg100RmtTpAdv10FDX": {
    "name": "cmefg100RmtTpAdv10FDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.179",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only value notApplicable returned when autonegotiation is disabled "
  },
  "cmefg100RmtTpAdv10HDX": {
    "name": "cmefg100RmtTpAdv10HDX",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.180",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only value notApplicable returned when autonegotiation is disabled "
  },
  "cmefg100RmtTpAutoNegot": {
    "name": "cmefg100RmtTpAutoNegot",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.181",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100RmtTpCross": {
    "name": "cmefg100RmtTpCross",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.182",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forceMDI": 1,
          "forceMDI-X": 2,
          "auto": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100RmtTpDuplex": {
    "name": "cmefg100RmtTpDuplex",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.183",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forceFDX": 1,
          "forceHDX": 2,
          "autoFDX": 3,
          "autoHDX": 4,
          "negotiating": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only values 3..5 are returned when autonegotiation is enabled "
  },
  "cmefg100RmtTpLink": {
    "name": "cmefg100RmtTpLink",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.184",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "up": 1,
          "down": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100RmtTpPause": {
    "name": "cmefg100RmtTpPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.185",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "asymmetricRx": 1,
          "asymmetricTx": 2,
          "symmetric": 3,
          "notSupported": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100RmtTpQosPause": {
    "name": "cmefg100RmtTpQosPause",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.186",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100RmtTpSpeed": {
    "name": "cmefg100RmtTpSpeed",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.187",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "force10Mbps": 1,
          "force100Mbps": 2,
          "auto10Mbps": 3,
          "auto100Mbps": 4,
          "auto1000Mbps": 5,
          "negotiating": 6
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Read-only values 3..6 are returned when autonegotiation is enabled "
  },
  "cmefg100RmtUptime": {
    "name": "cmefg100RmtUptime",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.188",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Write with 0 to reset. "
  },
  "cmefg100VlanCacheCmd": {
    "name": "cmefg100VlanCacheCmd",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.189",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "loadCache": 1,
          "doNothing": 2,
          "release": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "All variables starting with cmefg100Lad relate to 802.1Q VLAN controls. Setting this var to loadCache commands the agent to upload the VLAN table from the device exactly one time. Note that the contents of this cache are NOT automatically refreshed. A genErr will be returned if any other command involving reading or writing the LAD or the VLAN table is in progress. "
  },
  "cmefg100VlanCacheState": {
    "name": "cmefg100VlanCacheState",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.190",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ready": 1,
          "empty": 2,
          "transferring": 3,
          "bufferBusy": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The agent discards the VLAN table shortly after uploading it to prevent the reporting of outdated information. This variable shows the current state of the cache. If it reads 'empty,' set VlanCacheCmd to loadCache to upload the VLAN table. "
  },
  "cmefg100VlanEditCmd": {
    "name": "cmefg100VlanEditCmd",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.191",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "write": 1,
          "delete": 2,
          "doNothing": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Setting this var to write causes VlanEditFwdFiber, VlanEditFwdTp, VlanEditUntagFiber, VlanEditUntagTp, and VlanEditVid to be written to the VLAN tablei (i.e. insert/overwrite). Setting this var to delete causes the VLAN Id represented by VlanEditVlanId to be deleted from the VLAN table. A genErr will be returned if any other command involving reading or writing the LAD or the VLAN table is in progress. "
  },
  "cmefg100VlanEditFwdFiber": {
    "name": "cmefg100VlanEditFwdFiber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.192",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "drop": 1,
          "forward": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A fiber egress rule to be acted upon by VlanEditCmd "
  },
  "cmefg100VlanEditFwdTp": {
    "name": "cmefg100VlanEditFwdTp",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.193",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "drop": 1,
          "forward": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A twisted pair egress rule to be acted upon by VlanEditCmd "
  },
  "cmefg100VlanEditUntagFiber": {
    "name": "cmefg100VlanEditUntagFiber",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.194",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "untag": 1,
          "asIs": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A fiber untag rule to be acted upon by VlanEditCmd "
  },
  "cmefg100VlanEditUntagTp": {
    "name": "cmefg100VlanEditUntagTp",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.195",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "untag": 1,
          "asIs": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A twisted pair untag rule to be acted upon by VlanEditCmd "
  },
  "cmefg100VlanEditVid": {
    "name": "cmefg100VlanEditVid",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.196",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A VLAN Id to be acted upon by VlanEditCmd "
  },
  "cmefg100VlanEnable": {
    "name": "cmefg100VlanEnable",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.197",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enable/disable for 802.1Q VLAN tag processing. "
  },
  "cmefg100VlanEntries": {
    "name": "cmefg100VlanEntries",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.198",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A count of the number of entries currently in the VLAN table cache. See also VlanCacheState. If a VLAN cache-filling transfer is in progress, this variable can be read for a progress report. "
  },
  "cmefg100VlanFiberDefaultPri": {
    "name": "cmefg100VlanFiberDefaultPri",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.199",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 7
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100VlanFiberDefaultVid": {
    "name": "cmefg100VlanFiberDefaultVid",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.200",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100VlanFiberInUntaggedDrop": {
    "name": "cmefg100VlanFiberInUntaggedDrop",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.201",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "drop": 1,
          "forward": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100VlanFwdFiberTbl": {
    "name": "cmefg100VlanFwdFiberTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.202",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "drop": 1,
          "forward": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether packets with the VLAN Id specified by the corresponding cmefg100VlanVidTbl entry (i.e. the one with the same SubDeviceIndex) are forwarded or dropped when they are routed for fiber egress. The SubDeviceIndex is an arbitrary integer sequence number, range 1..cmefg100VlanEntries. "
  },
  "cmefg100VlanFwdTpTbl": {
    "name": "cmefg100VlanFwdTpTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.203",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "drop": 1,
          "forward": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether packets with the VLAN Id specified by the corresponding cmefg100VlanVidTbl entry (i.e. the one with the same SubDeviceIndex) are forwarded or dropped when they are routed for twisted pair egress. The SubDeviceIndex is an arbitrary integer sequence number, range 1..cmefg100VlanEntries. "
  },
  "cmefg100VlanIngressVidHitNoMem": {
    "name": "cmefg100VlanIngressVidHitNoMem",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.204",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "forward": 1,
          "drop": 2,
          "learn": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Ingress violation - port from which frame originates is not a member of the VLAN indicated by the frame's tag "
  },
  "cmefg100VlanIngressVidMiss": {
    "name": "cmefg100VlanIngressVidMiss",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.205",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "flood": 1,
          "drop": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Ingress violation - the VLAN indicated by the frame's tag is undefined in the VLAN table. "
  },
  "cmefg100VlanPriMapTbl": {
    "name": "cmefg100VlanPriMapTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.206",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 7
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A table containing new priority values for priority remapping. The SubDeviceIndex is 'original priority', range 0..7. "
  },
  "cmefg100VlanPriTagCtrl": {
    "name": "cmefg100VlanPriTagCtrl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.207",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "asIs": 1,
          "remapPriority": 2,
          "remapVid": 3,
          "remapBoth": 4,
          "notApplicable": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100VlanSetFailed": {
    "name": "cmefg100VlanSetFailed",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.208",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory"
  },
  "cmefg100VlanTagIn": {
    "name": "cmefg100VlanTagIn",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.209",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "tag": 1,
          "noTag": 2,
          "notApplicable": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100VlanTpDefaultPri": {
    "name": "cmefg100VlanTpDefaultPri",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.210",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 7
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100VlanTpDefaultVid": {
    "name": "cmefg100VlanTpDefaultVid",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.211",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 4095
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100VlanTpInUntaggedDrop": {
    "name": "cmefg100VlanTpInUntaggedDrop",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.212",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "drop": 1,
          "forward": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100VlanUntagFiberTbl": {
    "name": "cmefg100VlanUntagFiberTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.213",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "untag": 1,
          "asIs": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether VLAN Ids are stripped from packets with the VLAN Id specified by the corresponding cmefg100VlanVidTbl entry (i.e. the one with the same SubDeviceIndex) when they are routed for fiber egress. The SubDeviceIndex is an arbitrary integer sequence number, range 1..cmefg100VlanEntries. "
  },
  "cmefg100VlanUntagTpTbl": {
    "name": "cmefg100VlanUntagTpTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.214",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "untag": 1,
          "asIs": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Indicates whether VLAN Ids are stripped from packets with the VLAN Id specified by the corresponding cmefg100VlanVidTbl entry (i.e. the one with the same SubDeviceIndex) when they are routed for twisted pair egress. The SubDeviceIndex is an arbitrary integer sequence number, range 1..cmefg100VlanEntries. "
  },
  "cmefg100VlanVidTagCtrl": {
    "name": "cmefg100VlanVidTagCtrl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.215",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "asIs": 1,
          "remapPriority": 2,
          "remapVid": 3,
          "remapBoth": 4,
          "notApplicable": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory"
  },
  "cmefg100VlanVidTbl": {
    "name": "cmefg100VlanVidTbl",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.216",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The SubDeviceIndex is an arbitrary integer sequence number, range 1..cmefg100VlanEntries. "
  },
  "cmefg100CacheClean": {
    "name": "cmefg100CacheClean",
    "oid": "1.3.6.1.4.1.868.2.4.1.2.2.27.1.217",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "And all of the MIB variables lived happily ever after. The End. "
  },
  "mcc16ComHwReset": {
    "name": "mcc16ComHwReset",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noReset": 1,
          "reset": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Save configuration to FLASH and perform a hardware reset"
  },
  "mcc16ComMgmtHwRev": {
    "name": "mcc16ComMgmtHwRev",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The management h/w board revision."
  },
  "mcc16ComMgmtSwRev": {
    "name": "mcc16ComMgmtSwRev",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The downloadable management s/w code revision."
  },
  "mcc16ComIpAddr": {
    "name": "mcc16ComIpAddr",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The IP address of the management interface."
  },
  "mcc16ComNetMask": {
    "name": "mcc16ComNetMask",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The subnet mask associated with the IP address of the management interface. The value of the mask is an IP address with all the network bits set to 1 and all the hosts bits set to 0."
  },
  "mcc16ComGateway": {
    "name": "mcc16ComGateway",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The managment interface's default gateway."
  },
  "mcc16ComPS1Power": {
    "name": "mcc16ComPS1Power",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "On if power supply 1 is installed and powered"
  },
  "mcc16ComPS1InUse": {
    "name": "mcc16ComPS1InUse",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "On if power supply 1 is currently active"
  },
  "mcc16ComPS2Power": {
    "name": "mcc16ComPS2Power",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "On if power supply 2 is installed and powered"
  },
  "mcc16ComPS2InUse": {
    "name": "mcc16ComPS2InUse",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "On if power supply 2 is currently active"
  },
  "mcc16ComNotes": {
    "name": "mcc16ComNotes",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 4096
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Enduser-defined text notes"
  },
  "mcc16SlotTable": {
    "name": "mcc16SlotTable",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "One table entry per slot in the media converter chassis. Value of entry is type of device in the slot, or a value indicating that the slot is empty."
  },
  "mcc16SlotEntry": {
    "name": "mcc16SlotEntry",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "mcc16Index",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The type of device inserted in a single chassis slot"
  },
  "mcc16Index": {
    "name": "mcc16Index",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The index of a slot in a media converter chassis"
  },
  "mcc16DeviceType": {
    "name": "mcc16DeviceType",
    "oid": "1.3.6.1.4.1.868.2.4.2.1.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The object ID of the device in the a slot"
  },
  "mcc16Error": {
    "name": "mcc16Error",
    "oid": "1.3.6.1.4.1.868.1.4.20.101",
    "class": "notificationtype",
    "description": "A monitored MIB variable has changed from its 'operational' state to 'not present' or its 'error' state."
  },
  "mcc16ErrorClear": {
    "name": "mcc16ErrorClear",
    "oid": "1.3.6.1.4.1.868.1.4.20.102",
    "class": "notificationtype",
    "description": "A monitored MIB variable has changed from a 'not present' or 'error' state to its 'operational' state."
  },
  "mcc16PSState": {
    "name": "mcc16PSState",
    "oid": "1.3.6.1.4.1.868.1.4.20.103",
    "class": "notificationtype",
    "description": "The power indication on a power supply has changed, or a power supply was non-operational at the time of a warm start."
  },
  "pSError": {
    "name": "pSError",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.10.111",
    "class": "notificationtype",
    "description": "A monitored MIB variable has changed from its 'operational' state to its 'error' state."
  },
  "pSErrorClear": {
    "name": "pSErrorClear",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.10.112",
    "class": "notificationtype",
    "description": "A monitored MIB variable has changed from its 'error' state to its 'operational' state."
  },
  "pSDeviceInserted": {
    "name": "pSDeviceInserted",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.10.113",
    "class": "notificationtype",
    "description": "A new slide-in device (this includes some power supplies) was detected on the bus."
  },
  "pSDeviceRemoved": {
    "name": "pSDeviceRemoved",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.10.114",
    "class": "notificationtype",
    "description": "A slide-in device that had previously been detected on the bus has not been heard from in a long time, and is presumed to have been physically removed."
  },
  "pSDeviceColdStart": {
    "name": "pSDeviceColdStart",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.10.115",
    "class": "notificationtype",
    "description": "A slide-in device has indicated that it has rebooted. This is most common when the device is inserted into its slot, but in a few cases this trap indicates a warm start."
  },
  "pSPowerLost": {
    "name": "pSPowerLost",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.10.116",
    "class": "notificationtype",
    "description": "The cabinet into which this management module is installed has lost power. Both the cabinet and the management module must support this feature for this trap to be sent."
  },
  "pSCabinetAdded": {
    "name": "pSCabinetAdded",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.10.117",
    "class": "notificationtype",
    "description": "A new cabinet was detected on the bus."
  },
  "pSCabinetRemoved": {
    "name": "pSCabinetRemoved",
    "oid": "1.3.6.1.4.1.868.1.4.1.2.10.118",
    "class": "notificationtype",
    "description": "A cabinet that had previously been detected on the bus has not been heard from in a long time, and is presumed to have been physically removed."
  },
  "cpsCabinetTable": {
    "name": "cpsCabinetTable",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each Cabinet in the stack, indexed by cabinet serial number."
  },
  "cpsCabinetEntry": {
    "name": "cpsCabinetEntry",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsCabinetBiaIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and Configuration entries for a single Cabinet."
  },
  "cpsCabinetBiaIndex": {
    "name": "cpsCabinetBiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the Cabinet"
  },
  "cpsCabinetModel": {
    "name": "cpsCabinetModel",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The model number of the cabinet"
  },
  "cpsCabinetDescription": {
    "name": "cpsCabinetDescription",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "User defined text description of the cabinet. This description is a mirror of the ones that can be found under cpsCabDetail."
  },
  "cpsCabinetSequence": {
    "name": "cpsCabinetSequence",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An arbitrary sequence number assigned to the cabinet by the agent for the use of the Focal Point application. Cabinets are sorted by BiaIndex in the table, and numbered sequentially."
  },
  "cpsMc1800Table": {
    "name": "cpsMc1800Table",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CPSMC1800 in the stack, indexed by cabinet serial number."
  },
  "cpsMc1800Entry": {
    "name": "cpsMc1800Entry",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsMc1800BiaIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CPSMC1800"
  },
  "cpsMc1800BiaIndex": {
    "name": "cpsMc1800BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet"
  },
  "cpsMc1800Description": {
    "name": "cpsMc1800Description",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "User defined text description of the cabinet. A mirror of cpsCabinetDescription."
  },
  "cpsMc1800PSPower1": {
    "name": "cpsMc1800PSPower1",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Power status, first power supply slot. Value is on(1) when the supply is capable of supplying power."
  },
  "cpsMc1800PSInUse1": {
    "name": "cpsMc1800PSInUse1",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Power status, first power supply slot. Value is yes(1) when the power is selected to supply power to the cabinet"
  },
  "cpsMc1800PSPower2": {
    "name": "cpsMc1800PSPower2",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Power status, second power supply slot. Value is on(1) when the supply is capable of supplying power."
  },
  "cpsMc1800PSInUse2": {
    "name": "cpsMc1800PSInUse2",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Power status, second power supply slot. Value is yes(1) when the power is selected to supply power to the cabinet"
  },
  "cpsMc1800MRevision": {
    "name": "cpsMc1800MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cpsMc1300Table": {
    "name": "cpsMc1300Table",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CPSMC1300 in the stack, indexed by cabinet serial number."
  },
  "cpsMc1300Entry": {
    "name": "cpsMc1300Entry",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsMc1300BiaIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CPSMC1300"
  },
  "cpsMc1300BiaIndex": {
    "name": "cpsMc1300BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet"
  },
  "cpsMc1300Description": {
    "name": "cpsMc1300Description",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "User defined text description of the cabinet. A mirror of cpsCabinetDescription."
  },
  "cpsMc1300PSPower1": {
    "name": "cpsMc1300PSPower1",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Power status, first power supply slot. Value is on(1) when the supply is capable of supplying power."
  },
  "cpsMc1300PSInUse1": {
    "name": "cpsMc1300PSInUse1",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "For future expansion. At the time of this writing, the CPSMC1300 did not accept any power supplies capable of supporting a master/slave relationship, meaning that all 'ready' power supplies share load and therefore are 'in use'. If master/slave support were present, inuse would indicate whether or not this supply was currently supplying power to the cabinet."
  },
  "cpsMc1300PSPower2": {
    "name": "cpsMc1300PSPower2",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Power status, second power supply slot. Value is on(1) when the supply is capable of supplying power."
  },
  "cpsMc1300PSInUse2": {
    "name": "cpsMc1300PSInUse2",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "For future expansion. At the time of this writing, the CPSMC1300 did not accept any power supplies capable of supporting a master/slave relationship, meaning that all 'ready' power supplies share load and therefore are 'in use'. If master/slave support were present, inuse would indicate whether or not this supply was currently supplying power to the cabinet."
  },
  "cpsMc1300MRevision": {
    "name": "cpsMc1300MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cpsMc0200Table": {
    "name": "cpsMc0200Table",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CPSMC0200 in the stack, indexed by cabinet serial number."
  },
  "cpsMc0200Entry": {
    "name": "cpsMc0200Entry",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsMc0200BiaIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CPSMC0200"
  },
  "cpsMc0200BiaIndex": {
    "name": "cpsMc0200BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet"
  },
  "cpsMc0200Description": {
    "name": "cpsMc0200Description",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "User defined text description of the cabinet. A mirror of cpsCabinetDescription."
  },
  "cpsMc0200MRevision": {
    "name": "cpsMc0200MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cpsMc1900Table": {
    "name": "cpsMc1900Table",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CPSMC1900 in the stack, indexed by cabinet serial number."
  },
  "cpsMc1900Entry": {
    "name": "cpsMc1900Entry",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsMc1900BiaIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CPSMC1900"
  },
  "cpsMc1900BiaIndex": {
    "name": "cpsMc1900BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet"
  },
  "cpsMc1900Description": {
    "name": "cpsMc1900Description",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "User defined text description of the cabinet. A mirror of cpsCabinetDescription."
  },
  "cpsMc1900MRevision": {
    "name": "cpsMc1900MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "smacf100Table": {
    "name": "smacf100Table",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each SMACF100 in the stack, indexed by cabinet serial number."
  },
  "smacf100Entry": {
    "name": "smacf100Entry",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "smacf100BiaIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single SMACF100"
  },
  "smacf100BiaIndex": {
    "name": "smacf100BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet"
  },
  "smacf100Description": {
    "name": "smacf100Description",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "User defined text description of the cabinet. A mirror of cpsCabinetDescription."
  },
  "smacf100MRevision": {
    "name": "smacf100MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "smacf100SpanningTree": {
    "name": "smacf100SpanningTree",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable allows the agent to enable or disable Spanning Tree if it is supported. Not all versions of the hardware support Spanning Tree."
  },
  "smacf100ResetCounters": {
    "name": "smacf100ResetCounters",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "reset": 1,
          "doNothing": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When this variable is set to reset(1), all counters for all ports are reset to zero."
  },
  "smacf100SelfTest": {
    "name": "smacf100SelfTest",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "selfTest": 1,
          "doNothing": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When this variable is set to selfTest(1), the cabinet will perform a self test."
  },
  "smacf100QosEnable": {
    "name": "smacf100QosEnable",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2,
          "notSupported": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This variable allows Quality of Service functions to be enabled or disabled. This includes the processing of 802.1p tags (See smacf100QosHPThreshold(8), smacf100QosLqWeight(9), and smacf100QosHqWeight(10)), half-duplex back pressure and full-duplex flow control. (See smacf100PQosPause(63)). Port priority functionality (smacf100PQosPriority(62)) is always enabled."
  },
  "smacf100QosHPThreshold": {
    "name": "smacf100QosHPThreshold",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When an incoming 802.1p priority tag value is greater than or equal to this value (from 0 to 7), the incoming packet will be classified as high-priority. Ignored when smacf100QosEnable(7) is set to 'disabled(2)'."
  },
  "smacf100QosLqWeight": {
    "name": "smacf100QosLqWeight",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.5.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A value between 1 and 15 indicating the number of packets that should be processed from the low-priority queue before attention is turned to the high-priority queue. Ignored when smacf100QosEnable(7) is set to 'disabled(2)'."
  },
  "smacf100QosHqWeight": {
    "name": "smacf100QosHqWeight",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.5.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A value between 1 and 15 indicating the number of packets that should be processed from the high-priority queue before attention is turned to the low-priority queue. Ignored when smacf100QosEnable(7) is set to 'disabled(2)'."
  },
  "smacf100SNMPModuleInstalled": {
    "name": "smacf100SNMPModuleInstalled",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.5.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "When this variable is set to yes(1), a management module is installed in this particular SMACF100 cabinet."
  },
  "smacf100AgingTimer": {
    "name": "smacf100AgingTimer",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.5.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This configuration varible allows the MAC address aging timer to be adjusted. When an automatically discovered MAC address has not been heard from (i.e. no packets with this source address have been received) for longer than the time specified by this variable, it is deleted from the SMACF100's address cache. The time is specified in seconds (up to 1,048,575). If smacf100AgingTimer(12) is set to 0, MAC address aging is disabled."
  },
  "cpsMc0800Table": {
    "name": "cpsMc0800Table",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one entry for each CPSMC0800 in the stack, indexed by cabinet serial number."
  },
  "cpsMc0800Entry": {
    "name": "cpsMc0800Entry",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsMc0800BiaIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "Status and configuration entries for a single CPSMC0800"
  },
  "cpsMc0800BiaIndex": {
    "name": "cpsMc0800BiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The serial number (BIA) of the cabinet"
  },
  "cpsMc0800Description": {
    "name": "cpsMc0800Description",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "User defined text description of the cabinet. A mirror of cpsCabinetDescription."
  },
  "cpsMc0800MRevision": {
    "name": "cpsMc0800MRevision",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.2.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The marketing revision of this device"
  },
  "cpsGroupCtrl": {
    "name": "cpsGroupCtrl",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 256
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This string is used to select one or more groups of devices to receive mass configuration operations. When cpsGroupCtrl.0 is null, SNMP operations are performed in the standard way for SNMPv1. When cpsGroupCtrl.0 is not null, the Cabinet (BiaIndex) and Slot (SlotIndex) index values that uniquely identify a device are ignored, and instead the operation is applied to all devices that have Groups variables that contain user- or system-defined keywords that match those in cpsGroupCtrl.0. The CfgMatch variables (cpsSlotDetail) for each of these devices will be yes(1). Advanced options are invoked by prepending one of the following command characters to the keywords in cpsGroupCtrl.0: 1) '.' means 'Pick-One'. When any 'Pick-One' operators are present in the Group Control String, then one or more of the keywords so marked must appear in the Device Group String of the slide-in device for configuration changes to be allowed. 'Pick-One' is the default operation that is used when no command character is present on a keyword. 2) '-' or '!' means 'Prohibited'. When any 'Prohibited' operators are present in the Group Control String, then if any of the keywords so marked appears in the Device Group String of the slide-in device, then no configuration changes are applied. 3) '+' is the 'Required' operator. When any 'Required' operators are present in the Group Control String, then all of the keywords so marked must appear in the Device Group String of the slide-in device for configuration changes to be allowed. 4) '*' is a Wildcard that matches zero or more characters. It is the only command character that does not need to appear at the beginning of the keyword. It is also the only one that can be used in combination with the others within a single keyword."
  },
  "cpsSlotPwrTable": {
    "name": "cpsSlotPwrTable",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Sparse table containing one power control entry for each slot in the stack, indexed by cabinet serial number and slot."
  },
  "cpsSlotPwrEntry": {
    "name": "cpsSlotPwrEntry",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "MCC16-MIB",
        "object": "cpsSlotPwrBiaIndex",
        "implied": 0
      },
      {
        "module": "MCC16-MIB",
        "object": "cpsSlotPwrSlotIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "The power on/off control for a single Point System slot."
  },
  "cpsSlotPwrBiaIndex": {
    "name": "cpsSlotPwrBiaIndex",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The cabinet serial number (BIA) of the slot"
  },
  "cpsSlotPwrSlotIndex": {
    "name": "cpsSlotPwrSlotIndex",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The slot number of the slot"
  },
  "cpsSlotPwrState": {
    "name": "cpsSlotPwrState",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.3.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The power control for the slot. When off(2), no power is supplied to the slot. If examined, the slot will appear empty."
  },
  "cpsIsPrimary": {
    "name": "cpsIsPrimary",
    "oid": "1.3.6.1.4.1.868.2.4.2.2.3.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "yes": 1,
          "no": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Indicates whether or not this Management Module is the primary Management Module in the stack. This variable contains the same information as the cpsmm100IsPrimary variable, but answers a slightly different question: cpsmm100IsPrimary answers 'what is the primary status of the management module in cabinet C slot S?' and cpsIsPrimary answers 'what is the primary status of the management module I am talking to now?' The difference is that cpsIsPrimary does not require that the requestor translate the IP address of the management module they are communicating with into a cabinet serial number (BIA) and slot index. This could otherwise only be accomplished via a sequential search through cpsmm100Table"
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/MCC16-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 19:05:20 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "MCC16-MIB"
  }
}