{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "Gauge32",
      "Counter64",
      "Integer32",
      "IpAddress",
      "MibIdentifier",
      "iso",
      "Counter32",
      "TimeTicks",
      "Unsigned32",
      "Bits",
      "MODULE-IDENTITY",
      "OBJECT-TYPE",
      "OBJECT-IDENTITY",
      "NOTIFICATION-TYPE",
      "mib-2"
    ],
    "SNMPv2-TC": [
      "PhysAddress",
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "ifExtensions": {
    "name": "ifExtensions",
    "oid": "1.3.6.1.2.1.12",
    "class": "objectidentity"
  },
  "ifExtnsTable": {
    "name": "ifExtnsTable",
    "oid": "1.3.6.1.2.1.12.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "A list of interfaces extension entries. The number of entries is given by the value of ifNumber, defined in [4,6]."
  },
  "ifExtnsEntry": {
    "name": "ifExtnsEntry",
    "oid": "1.3.6.1.2.1.12.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "RFC1229-MIB",
        "object": "ifExtnsIfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An extension to the interfaces entry, defined in [4,6], containing additional objects at the subnetwork layer and below for a particular interface."
  },
  "ifExtnsIfIndex": {
    "name": "ifExtnsIfIndex",
    "oid": "1.3.6.1.2.1.12.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of this object identifies the interface for which this entry contains extended management information. The value of this object for a particular interface has the same value as the ifIndex object, defined in [4,6], for the same interface."
  },
  "ifExtnsChipSet": {
    "name": "ifExtnsChipSet",
    "oid": "1.3.6.1.2.1.12.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object identifies the hardware chip set being used in the interface. The assignment of OBJECT IDENTIFIERs to various types of hardware chip sets is managed by the IANA. If the hardware chip set is unknown, the object identifier unknownChipSet OBJECT IDENTIFIER ::= { 0 0 } is returned. Note that unknownChipSet is a syntactically valid object identifier, and any conformant implementation of ASN.1 and the BER must be able to generate and recognize this value."
  },
  "ifExtnsRevWare": {
    "name": "ifExtnsRevWare",
    "oid": "1.3.6.1.2.1.12.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An arbitrary octet string that describes the firmware version of this interface. It is intended that this should be human readable. It must only contain ASCII printable characters. Typically this will be the firmware version of the main interface software."
  },
  "ifExtnsMulticastsTransmittedOks": {
    "name": "ifExtnsMulticastsTransmittedOks",
    "oid": "1.3.6.1.2.1.12.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of frames successfully transmitted to a subnetwork or link-layer multicast destination address other than a broadcast address. For a MAC layer protocol, this includes both Group and Functional addresses."
  },
  "ifExtnsBroadcastsTransmittedOks": {
    "name": "ifExtnsBroadcastsTransmittedOks",
    "oid": "1.3.6.1.2.1.12.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of frames successfully transmitted to a subnetwork or link-layer broadcast addresses. It does not include frames sent to a multicast address."
  },
  "ifExtnsMulticastsReceivedOks": {
    "name": "ifExtnsMulticastsReceivedOks",
    "oid": "1.3.6.1.2.1.12.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of frames successfully received that are directed to an active subnetwork or link-layer multicast address (for a MAC layer protocol, this includes both Group and Functional addresses). This does not include frames directed to a broadcast address, nor frames received with errors."
  },
  "ifExtnsBroadcastsReceivedOks": {
    "name": "ifExtnsBroadcastsReceivedOks",
    "oid": "1.3.6.1.2.1.12.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The count of frames successfully received that are directed to a subnetwork or link-layer broadcast address. This does not include frames received with errors."
  },
  "ifExtnsPromiscuous": {
    "name": "ifExtnsPromiscuous",
    "oid": "1.3.6.1.2.1.12.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "true": 1,
          "false": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object has a value of false(2) if this interface only accepts packets/frames that are addressed to this station. This object has a value of true(1) when the station accepts all packets/frames transmitted on the media. The value true(1) is only legal on certain types of media. If legal, setting this object to a value of true(1) may require the interface to be reset before becoming effective."
  },
  "ifExtnsTestTable": {
    "name": "ifExtnsTestTable",
    "oid": "1.3.6.1.2.1.12.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table contains one entry per interface."
  },
  "ifExtnsTestEntry": {
    "name": "ifExtnsTestEntry",
    "oid": "1.3.6.1.2.1.12.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "RFC1229-MIB",
        "object": "ifExtnsTestIfIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry containing objects for invoking tests on an interface."
  },
  "ifExtnsTestIfIndex": {
    "name": "ifExtnsTestIfIndex",
    "oid": "1.3.6.1.2.1.12.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of this object identifies the interface for which this entry contains information on interface tests. The value of this object for a particular interface has the same value as the ifIndex object, defined in [4,6], for the same interface."
  },
  "ifExtnsTestCommunity": {
    "name": "ifExtnsTestCommunity",
    "oid": "1.3.6.1.2.1.12.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object contains the name of the SNMP authentication community [5] which was used to authenticate the SNMP Message which invoked the current or most recent test on this interface. If the authentication community is unknown or undefined, this value contains the zero-length string."
  },
  "ifExtnsTestRequestId": {
    "name": "ifExtnsTestRequestId",
    "oid": "1.3.6.1.2.1.12.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object contains the value of the request-id field in the SNMP PDU [5] which invoked the current or most recent test on this interface. If the request-id is unknown or undefined, this value contains the value zero."
  },
  "ifExtnsTestType": {
    "name": "ifExtnsTestType",
    "oid": "1.3.6.1.2.1.12.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "A control variable used to start and stop operator-initiated interface tests. Most OBJECT IDENTIFIER values assigned to tests are defined elsewhere, in associ- ation with specific types of interface. However, this document assigns a value for a full-duplex loopback test, and defines the special meanings of the subject identifier: noTest OBJECT IDENTIFIER ::= { 0 0 } When the value noTest is written to this object, no action is taken unless a test is in progress, in which case the test is aborted. Writing any other value to this object is only valid when no test is currently in progress, in which case the indicated test is initiated. Note that noTest is a syntactically valid object identifier, and any conformant implementation of ASN.1 and BER must be able to generate and recognize this value. When read, this object always returns the most recent value that ifExtnsTestType was set to. If it has not been set since the last initialization of the network management subsystem on the agent, a value of noTest is returned."
  },
  "wellKnownTests": {
    "name": "wellKnownTests",
    "oid": "1.3.6.1.2.1.12.4",
    "class": "objectidentity"
  },
  "testFullDuplexLoopBack": {
    "name": "testFullDuplexLoopBack",
    "oid": "1.3.6.1.2.1.12.4.1",
    "class": "objectidentity"
  },
  "ifExtnsTestResult": {
    "name": "ifExtnsTestResult",
    "oid": "1.3.6.1.2.1.12.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "none": 1,
          "success": 2,
          "inProgress": 3,
          "notSupported": 4,
          "unAbleToRun": 5,
          "aborted": 6,
          "failed": 7
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object contains the result of the most recently requested test, or the value none(1) if no tests have been requested since the last reset. Note that this facility provides no provision for saving the results of one test when starting another, as could be required if used by multiple managers concurrently."
  },
  "ifExtnsTestCode": {
    "name": "ifExtnsTestCode",
    "oid": "1.3.6.1.2.1.12.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "This object contains a code which contains more specific information on the test result, for example an error-code after a failed test. Error codes and other values this object may take are specific to the type of interface and/or test. However, one subject identifier: testCodeUnknown OBJECT IDENTIFIER ::= { 0 0 } for use if no additional result code is available. Note that testCodeUnknown is a syntactically valid object identifier, and any conformant implementation of ASN.1 and the BER must be able to generate and recognize this value."
  },
  "ifExtnsRcvAddrTable": {
    "name": "ifExtnsRcvAddrTable",
    "oid": "1.3.6.1.2.1.12.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table contains an entry for each address (broadcast, multicast, or uni-cast) for which the system will receive packets/ frames on a particular interface. When an interface is operating in promiscuous mode, entries are only required for those addresses for which the system would receive frames were it not operating in promiscuous mode."
  },
  "ifExtnsRcvAddrEntry": {
    "name": "ifExtnsRcvAddrEntry",
    "oid": "1.3.6.1.2.1.12.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "RFC1229-MIB",
        "object": "ifExtnsRcvAddrIfIndex",
        "implied": 0
      },
      {
        "module": "RFC1229-MIB",
        "object": "ifExtnsRcvAddress",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "A list of objects identifying an address for which the system will accept packets/ frames on a particular interface."
  },
  "ifExtnsRcvAddrIfIndex": {
    "name": "ifExtnsRcvAddrIfIndex",
    "oid": "1.3.6.1.2.1.12.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of ifIndex, defined in [4,6], of an interface which recognizes this entry's address."
  },
  "ifExtnsRcvAddress": {
    "name": "ifExtnsRcvAddress",
    "oid": "1.3.6.1.2.1.12.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhysAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "An address for which the system will accept packets/frames on this entry's interface."
  },
  "ifExtnsRcvAddrStatus": {
    "name": "ifExtnsRcvAddrStatus",
    "oid": "1.3.6.1.2.1.12.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "invalid": 2,
          "volatile": 3,
          "nonVolatile": 4
        }
      }
    },
    "default": {
      "default": {
        "value": "volatile",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object has the value nonVolatile(4) for those entries in the table which are valid and will not be deleted by the next restart of the managed system. Entries having the value volatile(3) are valid and exist, but have not been saved, so that will not exist after the next restart of the managed system. Entries having the value other(1) are valid and exist but are not classified as to whether they will continue to exist after the next restart. Entries having the value invalid(2) are invalid and do not represent an address for which an interface accepts frames. Setting an object instance to one of the values other(1), volatile(3), or nonVolatile(4) causes the corresponding entry to exist or continue to exist, and to take on the respective status as regards the next restart of the managed system. Setting an object instance to the value invalid(2) causes the corresponding entry to become invalid or cease to exist. It is an implementation-specific matter as to whether the agent removes an invalidated entry from the table. Accordingly, management stations must be prepared to receive tabular information from agents that corresponds to entries not currently in use. Proper interpretation of such entries requires examination of the relevant ifExtnsRcvAddrStatus object instance."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/rfc1229.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 15:29:50 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "RFC1229-MIB"
  }
}