{
  "imports": {
    "class": "imports",
    "IF-MIB": [
      "InterfaceIndexOrZero",
      "ifIndex",
      "ifAdminStatus",
      "ifOperStatus",
      "ifName"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "Integer32",
      "Counter32",
      "OBJECT-IDENTITY",
      "MibIdentifier",
      "Gauge32",
      "Unsigned32",
      "TimeTicks",
      "iso",
      "IpAddress",
      "Bits",
      "OBJECT-TYPE",
      "MODULE-IDENTITY",
      "Counter64",
      "NOTIFICATION-TYPE"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION",
      "TruthValue"
    ],
    "Zhone": [
      "zhoneEnet",
      "zhoneModules"
    ]
  },
  "phyEnetMauMib": {
    "name": "phyEnetMauMib",
    "oid": "1.3.6.1.4.1.5504.6.8",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2013-10-13 17:08",
        "description": "Add mazFrameSize"
      },
      {
        "revision": "2012-05-25 14:55",
        "description": "Added a value to the pauseControl enum"
      },
      {
        "revision": "2009-02-03 01:39",
        "description": "Added new 10gBase Mau Types in MauTypeListBits."
      },
      {
        "revision": "2009-01-19 21:44",
        "description": "Added new mauTypes for 10 Gig ports."
      },
      {
        "revision": "2008-08-14 07:17",
        "description": "Added zhoneIfMauEntry.zhoneMauLinkStateMirror field."
      },
      {
        "revision": "2008-03-10 12:03",
        "description": "Added profile link-agg"
      },
      {
        "revision": "2007-11-01 14:37",
        "description": "Add aggregation mode"
      },
      {
        "revision": "2007-06-24 23:11",
        "description": "V01.00.03 - Add zhoneMauPauseFlowControl and zhoneMauSetPauseTime."
      },
      {
        "revision": "2007-05-22 16:05",
        "description": "V01.00.02 - Added linkAggLink1Trap, linkAggLink2Trap, LinkAggLinkGroup"
      },
      {
        "revision": "2005-10-13 16:55",
        "description": "V01.00.01 - Add RPR Traps."
      },
      {
        "revision": "2000-09-12 18:01",
        "description": "V01.00.00 - Initial Release"
      }
    ],
    "lastupdated": "201310131500Z",
    "organization": "Zhone Technologies, Inc.",
    "contactinfo": " Zhone Technologies. Inc. Postal: 900 Chelmsford Street Lowell, MA 01851 Phone: +1 877-ZHONE20 (877 946-6320) +1 978 848-3766 Fax: +1 978 848-3796 Email: support@zhone.com",
    "description": "MIB to manage the physical interface on Ethernet ports. The MAU referred to by the MIB refers to both integarted physical interfaces as well as the now rarely used external MAUs. Adapted from RFC 2668 - Definitions of Managed Objects for 802.3 Media Attachment Units (MAU). "
  },
  "zhoneIfMauTable": {
    "name": "zhoneIfMauTable",
    "oid": "1.3.6.1.4.1.5504.5.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Table of descriptive and status information about the phsyical Enet interface."
  },
  "zhoneIfMauEntry": {
    "name": "zhoneIfMauEntry",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ZHONE-MAU-MIB",
        "object": "zhoneMauIfIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table, containing information about a single physical Enet interface."
  },
  "zhoneMauIfIndex": {
    "name": "zhoneMauIfIndex",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "reference": "RFC 1213, ifIndex",
    "status": "current",
    "description": "This variable uniquely identifies the interface to which the Ethernet/MAU described by this entry is connected."
  },
  "zhoneMauType": {
    "name": "zhoneMauType",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mauOther": 1,
          "mau10BaseT": 5,
          "mau10BaseTHD": 10,
          "mau10BaseTFD": 11,
          "mau100BaseTXHD": 15,
          "mau100BaseTXFD": 16,
          "mau1000BaseLXHD": 22,
          "mau1000BaseLXFD": 23,
          "mau1000BaseSXHD": 25,
          "mau1000BaseSXFD": 26,
          "mau1000BaseTHD": 29,
          "mau1000BaseTFD": 30,
          "mau10gBaseX": 31,
          "mau10gBaseR": 32,
          "mau10gBaseW": 33,
          "mau10gBaseLX4": 34,
          "mau10gBaseSR": 35,
          "mau10gBaseSW": 36,
          "mau10gBaseLR": 37,
          "mau10gBaseLW": 38,
          "mau10gBaseER": 39,
          "mau10gBaseEW": 40
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Physical Interface Type"
  },
  "zhoneMauOperStatus": {
    "name": "zhoneMauOperStatus",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "operational": 3,
          "standby": 4,
          "shutdown": 5,
          "reset": 6
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE 802.3 Std], 30.5.1.1.7, aMAUAdminState, 30.5.1.2.2, acMAUAdminControl, and 30.5.1.2.1, acResetMAU.",
    "status": "current",
    "description": "The current operational state of the MAU. other(1) is returned if the MAU or interface is in a state other than one of the states 2 through 6. unknown(2) is returned when the true state of the MAU is unknown; for example, when it is being initialized. operational(3) state is fully functional, operates, and passes signals to its attached DTE. standby(4) state forces DI and CI to idle and the media transmitter or interface to idle or fault, if supported. Standby(4) mode only applies to link type MAUs. The state of zhoneMauMediaAvailable is unaffected. A MAU in shutdown(5) state assumes the same condition on DI, CI, and the media transmitter as though it were powered down or not connected. The MAU MAY return other(1) value for the zhoneMauJabberState and zhoneMauMediaAvailable objects when it is in this state. For an AUI, this state will remove power from the AUI. Setting this variable to the value reset(6) resets the MAU in the same manner as a power-off, power-on cycle of at least one-half second would. The agent is not required to return the value reset (6)."
  },
  "zhoneMauMediaAvailable": {
    "name": "zhoneMauMediaAvailable",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "available": 3,
          "notAvailable": 4,
          "remoteFault": 5,
          "invalidSignal": 6,
          "remoteJabber": 7,
          "remoteLinkLoss": 8,
          "remoteTest": 9,
          "offline": 10,
          "autoNegError": 11
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE 802.3 Std], 30.5.1.1.4, aMediaAvailable.",
    "status": "current",
    "description": "If the MAU or interface is a link or fiber type (FOIRL, 10BASE-T, 10BASE-F) then this is equivalent to the link test fail state/low light function. For an AUI MAU this indicates whether or not loopback is detected on the DI circuit. other(1) is returned if the mediaAvailable state is not one of 2 through 11. unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized. At power-up or following a reset, the value of this attribute will be unknown for AUI and 10BASE-FP MAUs. For these MAUs loopback will be tested on each transmission during which no collision is detected. If DI is receiving input when DO returns to IDL after a transmission and there has been no collision during the transmission then loopback will be detected. The value of this attribute will only change during non-collided transmissions for AUI and 10BASE-FP MAUs. For 100Mbps and 1000Mbps MAUs, the enumerations match the states within the respective link integrity states. Any MAU which implements management of auto-negotiation will map remote fault indication to remote fault. available(3) indicates that the link, light, or loopback is normal. The value notAvailable(4) indicates link loss, low light, or no loopback. remoteFault(5) indicates that a fault has been detected at the remote end of the link. This value applies to 10BASE-FB, 100BASE-T4 Far End Fault Indication and non-specified remote faults from a system running auto-negotiation. remoteJabber(7), remoteLinkLoss(8), and remoteTest(9) SHOULD be used instead of remoteFault(5) where the reason for remote fault is identified in the remote signaling protocol. invalidSignal(6) indicates that an invalid signal has been received from the other end of the link. InvalidSignal(6) applies only to MAUs of type 10BASE-FB. Where an IEEE Std 802.3u-1995 clause 22 MII is present, a logic one in the remote fault bit (reference section 22.2.4.2.8 of that document) maps to the value remoteFault(5), and a logic zero in the link status bit (reference section 22.2.4.2.10 of that document) maps to the value notAvailable(4). The value notAvailable(4) takes precedence over the value remoteFault(5). Any MAU that implements management of clause 37 Auto-Negotiation will map the received RF1 and RF2 bit values for Offline to offline(10), Link Failure to remoteFault(5) and Auto-Negotiation Error to autoNegError(11)."
  },
  "zhoneMauMediaAvailStateExits": {
    "name": "zhoneMauMediaAvailStateExits",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE 802.3 Std], 30.5.1.1.5, aLoseMediaCounter. RFC 2233, ifCounterDiscontinuityTime.",
    "status": "current",
    "description": "A count of the number of times that zhoneMauMediaAvailable for this MAU or interface instance leaves the state available(3). Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime."
  },
  "zhoneMauJabberState": {
    "name": "zhoneMauJabberState",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "noJabber": 3,
          "jabbering": 4
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE 802.3 Std], 30.5.1.1.6, aJabber.jabberFlag.",
    "status": "current",
    "description": "The value other(1) is returned if the jabber state is not 2, 3, or 4. unknown(2) is returned when the MAU's true state is unknown; e.g. when it is being initialized. If the MAU is not jabbering the agent returns noJabber(3). This is the 'normal' state. If the MAU is in jabber state the agent returns the jabbering(4) value."
  },
  "zhoneMauJabberingStateEnters": {
    "name": "zhoneMauJabberingStateEnters",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE 802.3 Std], 30.5.1.1.6, aJabber.jabberCounter. RFC 2233, ifCounterDiscontinuityTime.",
    "status": "current",
    "description": "A count of the number of times that zhoneMauJabberState for this MAU or interface instance enters the state jabbering(4). This counter will always indicate zero for MAUs of ype dot1MauTypeAUI and those of speeds above 10Mbps. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime."
  },
  "zhoneMauFalseCarriers": {
    "name": "zhoneMauFalseCarriers",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "[IEEE 802.3 Std], 30.5.1.1.10, aFalseCarriers. RFC 2233, ifCounterDiscontinuityTime.",
    "status": "current",
    "description": "A count of the number of false carrier events during IDLE in 100BASE-X and 1000BASE-X links. For all other MAU or inetrafce types, this counter will always indicate zero. This counter does not increment at the symbol rate. It can increment after a valid carrier completion at a maximum rate of once per 100 ms for 100BASE-X and once per 10us for 1000BASE-X until the next CarrierEvent. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime."
  },
  "zhoneMauDefaultType": {
    "name": "zhoneMauDefaultType",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "mauOther": 1,
          "mau10BaseT": 5,
          "mau10BaseTHD": 10,
          "mau10BaseTFD": 11,
          "mau100BaseTXHD": 15,
          "mau100BaseTXFD": 16,
          "mau1000BaseLXHD": 22,
          "mau1000BaseLXFD": 23,
          "mau1000BaseSXHD": 25,
          "mau1000BaseSXFD": 26,
          "mau1000BaseTHD": 29,
          "mau1000BaseTFD": 30,
          "mau10gBaseX": 31,
          "mau10gBaseR": 32,
          "mau10gBaseW": 33,
          "mau10gBaseLX4": 34,
          "mau10gBaseSR": 35,
          "mau10gBaseSW": 36,
          "mau10gBaseLR": 37,
          "mau10gBaseLW": 38,
          "mau10gBaseER": 39,
          "mau10gBaseEW": 40
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Physical interface type."
  },
  "zhoneMauAutoNegSupported": {
    "name": "zhoneMauAutoNegSupported",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates whether or not auto-negotiation is supported."
  },
  "zhoneMauTypeListBits": {
    "name": "zhoneMauTypeListBits",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "bOther": 0,
        "bAUI": 1,
        "b10base5": 2,
        "bFoirl": 3,
        "b10base2": 4,
        "b10baseT": 5,
        "b10baseFP": 6,
        "b10baseFB": 7,
        "b10baseFL": 8,
        "b10broad36": 9,
        "b10baseTHD": 10,
        "b10baseTFD": 11,
        "b10baseFLHD": 12,
        "b10baseFLFD": 13,
        "b100baseT4": 14,
        "b100baseTXHD": 15,
        "b100baseTXFD": 16,
        "b100baseFXHD": 17,
        "b100baseFXFD": 18,
        "b100baseT2HD": 19,
        "b100baseT2FD": 20,
        "b1000baseXHD": 21,
        "b1000baseXFD": 22,
        "b1000baseLXHD": 23,
        "b1000baseLXFD": 24,
        "b1000baseSXHD": 25,
        "b1000baseSXFD": 26,
        "b1000baseCXHD": 27,
        "b1000baseCXFD": 28,
        "b1000baseTHD": 29,
        "b1000baseTFD": 30,
        "b10gbaseX": 31,
        "b10gbaseR": 32,
        "b10gbaseW": 33,
        "b10gbaseLX4": 34,
        "b10gbaseSR": 35,
        "b10gbaseSW": 36,
        "b10gbaseLR": 37,
        "b10gbaseLW": 38,
        "b10gbaseER": 39,
        "b10gbaseEW": 40
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A value that uniquely identifies the set of possible IEEE 802.3 types that the MAU could be. If auto-negotiation is present on this MAU, this object will map to ifMauAutoNegCapability. Note that this MAU may be capable of operating as a MAU type that is beyond the scope of this MIB. This is indicated by returning the bit value bOther in addition to any bit values for capabilities that are listed above."
  },
  "zhoneMauClkSrc": {
    "name": "zhoneMauClkSrc",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unused": 1,
          "automatic": 2,
          "master": 3,
          "slave": 4
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Clock source for timing. Unused - unused Automatic - Master/Slave is decided during autonegotiation Master - Clocked from local source Slave - Loop timing from the received data stream"
  },
  "zhoneMauPauseFlowControl": {
    "name": "zhoneMauPauseFlowControl",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 1,
          "asymmetricTx": 2,
          "asymmetricRx": 3,
          "symmetric": 4,
          "passthrough": 5
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "When autonegotiation is enabled (zhoneMauAutoNegSupported is true), this Pause Flow Control field is used to program the advertised pause capabilities. When autonegotiation is disabled (manual negotiation), this Pause Flow Control field is used to program the local Mac as instructed. If passthrough is selected the pause frames are sent to the host for forwarding or discard as the packet rules dictate."
  },
  "zhoneMauAggregationMode": {
    "name": "zhoneMauAggregationMode",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "on": 1,
          "off": 2,
          "passive": 3,
          "active": 4
        }
      }
    },
    "default": {
      "default": {
        "value": "on",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "On: The link aggregation is forced to be formed without any LACP negotiation .In other words, the switch will neither send the LACP packet nor process any incoming LACP packet. This is similar to the on state for PAgP. Off: The link aggregation will not be formed. We do not send or understand the LACP packet. This is similar to the off state for PAgP. Passive: The switch does not initiate the channel, but does understand incoming LACP packets. The peer (in active state) initiates negotiation (by sending out an LACP packet) which we receive and reply to, eventually forming the aggregation channel with the peer. This is similar to the auto mode in PAgP. Active: We are willing to form an aggregate link, and initiate the negotiation. The link aggregate will be formed if the other end is running in LACP active or passive mode. This is similar to the desirable mode of PAgP. "
  },
  "zhoneMauLinkStateMirror": {
    "name": "zhoneMauLinkStateMirror",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceIndexOrZero",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "ifIndex of another physical interface whose link state will be mirrored on this MAU. This is used to propagate a link fault observed on one physical interface onto another interface."
  },
  "zhoneMauSetPauseTime": {
    "name": "zhoneMauSetPauseTime",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Used to set the pause interval. Units are in pause_quanta. Currently not supported."
  },
  "zhoneMauMaxFrameSize": {
    "name": "zhoneMauMaxFrameSize",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 15360
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Used to set the max frame size for ethernet ports. Units are bytes. Range is 0 15360. 0 is default implying 2048 bytes."
  },
  "zhoneMauIngressRate": {
    "name": "zhoneMauIngressRate",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 10240000
          }
        ]
      }
    },
    "units": "Kbps",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Used to set the ingress rate for ethernet ports. Units are Kbps. Range is 0 10Gbps. 0 is default implying no limit."
  },
  "zhoneMauIngressBurstSize": {
    "name": "zhoneMauIngressBurstSize",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 512000
          }
        ]
      }
    },
    "units": "Kbits",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Used to set the ingress burst size for ethernet ports. Units are Kbits. Range is 0 512000. 0 is default implying no restriction."
  },
  "zhoneMauEgressRate": {
    "name": "zhoneMauEgressRate",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 10240000
          }
        ]
      }
    },
    "units": "Kbps",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Used to set the egress rate for ethernet ports. Units are Kbps. Range is 0 10Gbps. 0 is default implying no limit."
  },
  "zhoneMauEgressBurstSize": {
    "name": "zhoneMauEgressBurstSize",
    "oid": "1.3.6.1.4.1.5504.5.1.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 512000
          }
        ]
      }
    },
    "units": "Kbits",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Used to set the egress burst size for ethernet ports. Units are Kbits. Range is 0 512000. 0 is default implying no restriction."
  },
  "zhoneMauAutoNegTable": {
    "name": "zhoneMauAutoNegTable",
    "oid": "1.3.6.1.4.1.5504.5.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Configuration and status objects for the auto-negotiation function of MAUs attached to interfaces."
  },
  "zhoneMauAutoNegEntry": {
    "name": "zhoneMauAutoNegEntry",
    "oid": "1.3.6.1.4.1.5504.5.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ZHONE-MAU-MIB",
        "object": "zhoneMauIfIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table, containing configuration and status information for the auto-negotiation function of a particular MAU."
  },
  "zhoneMauAutoNegAdminStatus": {
    "name": "zhoneMauAutoNegAdminStatus",
    "oid": "1.3.6.1.4.1.5504.5.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "[IEEE 802.3 Std], 30.6.1.1.2, aAutoNegAdminState and 30.6.1.2.2, acAutoNegAdminControl.",
    "status": "current",
    "description": "Setting this object to enabled(1) will cause the interface which has the auto-negotiation signaling ability to be enabled. If the value of this object is disabled(2) then the interface will act as it would if it had no auto-negotiation signaling. Under these conditions, an IEEE 802.3 MAU will immediately be forced to the state indicated by the value of the object zhoneMauDefaultType. NOTE TO IMPLEMENTORS: When ifMauAutoNegAdminStatus transitions from enabled to disabled, the agent implementation MUST ensure that the operational type of the MAU (as reported by zhoneMauType) correctly transitions to the value specified by the zhoneMauDefaultType object, rather than continuing to operate at the value earlier determined by the auto-negotiation function."
  },
  "zhoneMauAutoNegRemoteSignaling": {
    "name": "zhoneMauAutoNegRemoteSignaling",
    "oid": "1.3.6.1.4.1.5504.5.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "detected": 1,
          "notdetected": 2
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE 802.3 Std], 30.6.1.1.3, aAutoNegRemoteSignaling.",
    "status": "current",
    "description": "A value indicating whether the remote end of the link is using auto-negotiation signaling. It takes the value detected(1) if and only if, during the previous link negotiation, FLP Bursts were received."
  },
  "zhoneMauAutoNegConfig": {
    "name": "zhoneMauAutoNegConfig",
    "oid": "1.3.6.1.4.1.5504.5.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "configuring": 2,
          "complete": 3,
          "disabled": 4,
          "parallelDetectFail": 5
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE 802.3 Std], 30.6.1.1.4, aAutoNegAutoConfig.",
    "status": "current",
    "description": "A value indicating the current status of the auto-negotiation process. The enumeration parallelDetectFail(5) maps to a failure in parallel detection as defined in 28.2.3.1 of [IEEE 802.3 Std]."
  },
  "zhoneMauAutoNegRestart": {
    "name": "zhoneMauAutoNegRestart",
    "oid": "1.3.6.1.4.1.5504.5.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "restart": 1,
          "norestart": 2
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "[IEEE 802.3 Std], 30.6.1.2.1, acAutoNegRestartAutoConfig.",
    "status": "current",
    "description": "If the value of this object is set to restart(1) then this will force auto-negotiation to begin link renegotiation. If auto-negotiation signaling is disabled, a write to this object has no effect. Setting the value of this object to norestart(2) has no effect."
  },
  "zhoneMauAutoNegCapabilityBits": {
    "name": "zhoneMauAutoNegCapabilityBits",
    "oid": "1.3.6.1.4.1.5504.5.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "bOther": 0,
        "b10baseT": 1,
        "b10baseTFD": 2,
        "b100baseT4": 3,
        "b100baseTX": 4,
        "b100baseTXFD": 5,
        "b100baseT2": 6,
        "b100baseT2FD": 7,
        "bfdxPause": 8,
        "bfdxAPause": 9,
        "bfdxSPause": 10,
        "bfdxBPause": 11,
        "b1000baseX": 12,
        "b1000baseXFD": 13,
        "b1000baseT": 14,
        "b1000baseTFD": 15,
        "b10gbaseX": 16,
        "b10gbaseR": 17,
        "b10gbaseW": 18,
        "b10gbaseLX4": 19,
        "b10gbaseSR": 20,
        "b10gbaseSW": 21,
        "b10gbaseLR": 22,
        "b10gbaseLW": 23,
        "b10gbaseER": 24,
        "b10gbaseEW": 25
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE 802.3 Std], 30.6.1.1.5, aAutoNegLocalTechnologyAbility.",
    "status": "current",
    "description": "A value that uniquely identifies the set of capabilities of the local auto-negotiation entity. Note that interfaces that support this MIB may have capabilities that extend beyond the scope of this MIB. Note that the local auto-negotiation entity may support some capabilities beyond the scope of this MIB. This is indicated by returning the bit value bOther in addition to any bit values for capabilities that are listed above."
  },
  "zhoneMauAutoNegCapAdvertBits": {
    "name": "zhoneMauAutoNegCapAdvertBits",
    "oid": "1.3.6.1.4.1.5504.5.1.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "bOther": 0,
        "b10baseT": 1,
        "b10baseTFD": 2,
        "b100baseT4": 3,
        "b100baseTX": 4,
        "b100baseTXFD": 5,
        "b100baseT2": 6,
        "b100baseT2FD": 7,
        "bFdxPause": 8,
        "bFdxAPause": 9,
        "bFdxSPause": 10,
        "bFdxBPause": 11,
        "b1000baseX": 12,
        "b1000baseXFD": 13,
        "b1000baseT": 14,
        "b1000baseTFD": 15,
        "b10gbaseX": 16,
        "b10gbaseR": 17,
        "b10gbaseW": 18,
        "b10gbaseLX4": 19,
        "b10gbaseSR": 20,
        "b10gbaseSW": 21,
        "b10gbaseLR": 22,
        "b10gbaseLW": 23,
        "b10gbaseER": 24,
        "b10gbaseEW": 25
      }
    },
    "maxaccess": "read-write",
    "reference": "[IEEE 802.3 Std], 30.6.1.1.6, aAutoNegAdvertisedTechnologyAbility.",
    "status": "current",
    "description": "A value that uniquely identifies the set of capabilities advertised by the local auto-negotiation entity. Capabilities in this object that are not available in ifMauAutoNegCapabilityBits cannot be enabled. Note that the local auto-negotiation entity may advertise some capabilities beyond the scope of this MIB. This is indicated by returning the bit value bOther in addition to any bit values for capabilities that are listed above."
  },
  "zhoneMauAutoNegCapRecvBits": {
    "name": "zhoneMauAutoNegCapRecvBits",
    "oid": "1.3.6.1.4.1.5504.5.1.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Bits",
      "class": "type",
      "bits": {
        "bOther": 0,
        "b10baseT": 1,
        "b10baseTFD": 2,
        "b100baseT4": 3,
        "b100baseTX": 4,
        "b100baseTXFD": 5,
        "b100baseT2": 6,
        "b100baseT2FD": 7,
        "bFdxPause": 8,
        "bFdxAPause": 9,
        "bFdxSPause": 10,
        "bFdxBPause": 11,
        "b1000baseX": 12,
        "b1000baseXFD": 13,
        "b1000baseT": 14,
        "b1000baseTFD": 15,
        "b10gbaseX": 16,
        "b10gbaseR": 17,
        "b10gbaseW": 18,
        "b10gbaseLX4": 19,
        "b10gbaseSR": 20,
        "b10gbaseSW": 21,
        "b10gbaseLR": 22,
        "b10gbaseLW": 23,
        "b10gbaseER": 24,
        "b10gbaseEW": 25
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE 802.3 Std], 30.6.1.1.7, aAutoNegReceivedTechnologyAbility.",
    "status": "current",
    "description": "A value that uniquely identifies the set of capabilities received from the remote auto-negotiation entity. Note that interfaces that support this MIB may be attached to remote auto-negotiation entities which have capabilities beyond the scope of this MIB. This is indicated by returning the bit value bOther(0) in addition to any bit values for capabilities that are listed above."
  },
  "zhoneMauAutoNegRemoteFaultAdvert": {
    "name": "zhoneMauAutoNegRemoteFaultAdvert",
    "oid": "1.3.6.1.4.1.5504.5.1.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noError": 1,
          "offline": 2,
          "linkFailure": 3,
          "autoNegError": 4
        }
      }
    },
    "maxaccess": "read-write",
    "reference": "[IEEE 802.3 Std], 30.6.1.1.6, aAutoNegAdvertisedTechnologyAbility.",
    "status": "current",
    "description": "A value that identifies any local fault indications that this MAU has detected and will advertise at the next auto-negotiation interaction for 1000Mbps MAUs."
  },
  "zhoneMauAutoNegRemoteFaultRecv": {
    "name": "zhoneMauAutoNegRemoteFaultRecv",
    "oid": "1.3.6.1.4.1.5504.5.1.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noError": 1,
          "offline": 2,
          "linkFailure": 3,
          "autoNegError": 4
        }
      }
    },
    "maxaccess": "read-only",
    "reference": "[IEEE 802.3 Std], 30.6.1.1.7, aAutoNegReceivedTechnologyAbility.",
    "status": "current",
    "description": "A value that identifies any fault indications received from the far end of a link by the local auto-negotiation entity for 1000Mbps MAUs."
  },
  "zhoneEnetTraps": {
    "name": "zhoneEnetTraps",
    "oid": "1.3.6.1.4.1.5504.5.1.3",
    "class": "objectidentity",
    "status": "current",
    "description": "Description."
  },
  "enetV2Traps": {
    "name": "enetV2Traps",
    "oid": "1.3.6.1.4.1.5504.5.1.3.0",
    "class": "objectidentity",
    "status": "current",
    "description": "Description."
  },
  "rprEastSpanTrap": {
    "name": "rprEastSpanTrap",
    "oid": "1.3.6.1.4.1.5504.5.1.3.0.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "IF-MIB",
        "object": "ifIndex"
      },
      {
        "module": "IF-MIB",
        "object": "ifAdminStatus"
      },
      {
        "module": "IF-MIB",
        "object": "ifOperStatus"
      },
      {
        "module": "IF-MIB",
        "object": "ifName"
      }
    ],
    "status": "current",
    "description": "Resilient Packet Ring (RPR) East Span Trap - indicates East span went Up or Down. RPR runs over Gigabit Ethernet."
  },
  "rprWestSpanTrap": {
    "name": "rprWestSpanTrap",
    "oid": "1.3.6.1.4.1.5504.5.1.3.0.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "IF-MIB",
        "object": "ifIndex"
      },
      {
        "module": "IF-MIB",
        "object": "ifAdminStatus"
      },
      {
        "module": "IF-MIB",
        "object": "ifOperStatus"
      },
      {
        "module": "IF-MIB",
        "object": "ifName"
      }
    ],
    "status": "current",
    "description": "Resilient Packet Ring (RPR) West Span Trap - indicates West span went Up or Down. RPR runs over Gigabit Ethernet."
  },
  "linkAggLink1Trap": {
    "name": "linkAggLink1Trap",
    "oid": "1.3.6.1.4.1.5504.5.1.3.0.3",
    "class": "notificationtype",
    "status": "current",
    "description": "Link Aggregation Link1 Trap - indicates Link 1 went Up or Down. "
  },
  "linkAggLink2Trap": {
    "name": "linkAggLink2Trap",
    "oid": "1.3.6.1.4.1.5504.5.1.3.0.4",
    "class": "notificationtype",
    "status": "current",
    "description": "Link Aggregation Link2 Trap - indicates Link 2 went Up or Down. "
  },
  "rprSpanGroup": {
    "name": "rprSpanGroup",
    "oid": "1.3.6.1.4.1.5504.5.1.3.2",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "ZHONE-MAU-MIB",
        "object": "rprEastSpanTrap"
      },
      {
        "module": "ZHONE-MAU-MIB",
        "object": "rprWestSpanTrap"
      }
    ],
    "status": "current",
    "description": "Grouping of RPR Span Notifications."
  },
  "linkAggLinkGroup": {
    "name": "linkAggLinkGroup",
    "oid": "1.3.6.1.4.1.5504.5.1.3.3",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "ZHONE-MAU-MIB",
        "object": "linkAggLink1Trap"
      },
      {
        "module": "ZHONE-MAU-MIB",
        "object": "linkAggLink2Trap"
      }
    ],
    "status": "current",
    "description": "Grouping of Link Aggregation Link Notifications."
  },
  "zhoneLinkAggTable": {
    "name": "zhoneLinkAggTable",
    "oid": "1.3.6.1.4.1.5504.5.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Table of Identifiers specifying the partner system to which an aggregation is connected."
  },
  "zhoneLinkAggEntry": {
    "name": "zhoneLinkAggEntry",
    "oid": "1.3.6.1.4.1.5504.5.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "ZHONE-MAU-MIB",
        "object": "zhoneLinkAggIfIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in the table, containing information about a single partner system aggregation."
  },
  "zhoneLinkAggIfIndex": {
    "name": "zhoneLinkAggIfIndex",
    "oid": "1.3.6.1.4.1.5504.5.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This variable uniquely identifies the link aggregation by which the profile described in this entry is identified."
  },
  "zhoneLinkAggPartnerSystem": {
    "name": "zhoneLinkAggPartnerSystem",
    "oid": "1.3.6.1.4.1.5504.5.1.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 18
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A six-byte identifier, similar to a MAC address, specifying the partner system, but stored as a string, and specified in the pattern 'nn:nn:nn:nn:nn:nn', where 'nn' is a hex number specifying a byte of the pattern."
  },
  "zhoneLinkAggPartnerSystemPriority": {
    "name": "zhoneLinkAggPartnerSystemPriority",
    "oid": "1.3.6.1.4.1.5504.5.1.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "An integer further specifying the partner system."
  },
  "zhoneLinkAggPartnerGroupId": {
    "name": "zhoneLinkAggPartnerGroupId",
    "oid": "1.3.6.1.4.1.5504.5.1.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "An integer identifier specifying the link group."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/ZHONE-MAU-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 17:25:54 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "ZHONE-MAU-MIB"
  }
}