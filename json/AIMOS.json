{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "OBJECT-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "Unsigned32",
      "Counter32",
      "Integer32",
      "IpAddress",
      "zeroDotZero",
      "Counter64",
      "mib-2",
      "Gauge32",
      "enterprises",
      "OBJECT-TYPE",
      "TimeTicks",
      "iso",
      "NOTIFICATION-TYPE",
      "MODULE-IDENTITY",
      "MibIdentifier",
      "Bits",
      "OBJECT-IDENTITY"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "RowPointer",
      "TEXTUAL-CONVENTION"
    ]
  },
  "aimos": {
    "name": "aimos",
    "oid": "1.3.6.1.4.1.6408.201",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2002-07-07 21:30",
        "description": "1.0.0.0 Release Q0215RHA"
      },
      {
        "revision": "2002-07-29 15:00",
        "description": "1.0.0.1 Release Q0215RHB"
      },
      {
        "revision": "2003-02-03 16:28",
        "description": "1.0.0.111 Release Q0215RHD_DRAFT Modifications: - Textual convention TruthValue replaced by Boolean - Modified OrgLevel enumeration - Right renamed to RightArea - aimosRoleRight renamed to aimosRoleRightArea - aimosOMCVersion changed to aimosOMCConnectorVersion - MIB-2 (1.3.6.1.2.1.1) not imported but directly implemented - aimosPhoneBookActive and aimosPhoneBookLastNotificationID was added - Format of PhonebookAddress was modified (from 6 bytes to 21 bytes) and renamed (to IPAddressAndPort) - aimosUserPasswordAge added - aimosPhoneBookActive added - aimosPhoneBookLastNotificationID added - ProbableCause: values 58 to 65 moved to 100 to 107 - aimosAlarmLogTrapID renamed to aimosAlarmLogPhoneBookID - added aimosBandNetworkStandard and aimosBandName - aimosMasterPBKMU renamed to aimosMasterAddress - aimosMasterPBKOMC renamed to aimosMasterCommunicationID - renamed NSB to NSO - removed aimosMasterMaxMNP - last digit of the OID's of RDN, SDN, IdentNo, SerialNo, TrapInfo, Location, AnyText and MapXY changed to 2 to 9 (aimosUnitManagement) - added aimosSubRackV1Table - removed aimosNextMasterID - aimosMasterGUID, aimosMasterAddress, aimosMasterCommunicationID moved from aimosMasterUnitTable to aimosMasterUnitV1Table"
      },
      {
        "revision": "2003-04-07 15:23",
        "description": "1.0.0.113 Release Q0215RHD_DRAFT Modifications: - added aimosAcknowledgementOID - added aimosShutDownDelay - added aimosPhoneBookAlarmListResync - renamed aimosAlarmListDemand to aimosAlarmListResync - added aimosAlarmListRebuild - SNMPState renamed to AgentState - renamed alarmHasGone to alarmAutoClear - renamed alarmAcknowledged to alarmManualClear"
      },
      {
        "revision": "2003-04-28 10:48",
        "description": "1.0.0.114 Release Q0215RHD_DRAFT Modifications: - added textual convention PasswordStandard - added aimosPasswordStandard - added Textual Convention ClearMode - aimosAlarmExpectAutoClear (boolean) renamed to aimosAlarmClearMode (ClearMode) - added aimosNextMasterID - added Textual Convention MasterState - aimosMasterV1Address renamed to aimosMasterAddress - added aimosMasterState - aimosCableCodeTable and aimosCableUsageTable are implemented"
      },
      {
        "revision": "2003-05-07 12:18",
        "description": "1.0.0.115 Release Q0215RHD_DRAFT Modifications: - BTS-Entries removed - Sector-Entries removed - aimosMasterV1GUID renamed to aimosMasterGUID - aimosMasterV1CommunicationID renamed to aimosMasterCommunicationID - added aimosSubRackMapXY, aimosGSMNSOMapXY, aimosUMTSNSOMapXY - added some named values to textual convention MasterState - aimosPreLogin renamed to aimosPublic - aimosSessionTimeOut added - minor changes (modified descriptions, access-rights)"
      },
      {
        "revision": "2003-08-06 14:46",
        "description": "1.1.0.111 Release Q0215RHD_DRAFT Modifications: - aimosSessionTimeout added - aimosOrgPassword deleted - aimosOrgNextBTSID deleted - aimosOrgNextSectorID deleted - aimosRoleMinOrgLevel deleted - aimosNextCommunicationTypeID deleted - aimosCommunicationTypeTable deleted - aimosPhoneBookCommunicationType deleted - aimosAlarmForwarding changed to aimosAlarmForwardingType. old: 0=off, 1=on new: 0=off, 1=use V1 trap, 2=use V2 notification - aimosMasterGUID added - aimosMasterLoginUserName added - aimosMasterLoginPassword added - aimosSubRackMapXY added - aimosGSMNSOMapXY added - aimosUMTSNSOMapXY added - aimosBTSTable deleted - aimosSectorTable deleted, new is aimosNextMasterLoginUser - aimosSectorUsageTable deleted, new is aimosNextMasterLoginPassword - in each ...V1-Table a new index (...ValueSource) was added e.g. aimosMasterV1ValueSource in aimosMasterUnitV1Table. Therefore it was here unfortunately inevitable that the following OIDs are changed. - aimosMasterV1GUID deleted - aimosMasterV1CommunicationID deleted - aimosNextCommunicationID deleted - aimosCommunicationTable deleted"
      },
      {
        "revision": "2003-08-12 17:24",
        "description": "1.1.0.112 Release Q0215RHD_DRAFT Modifications: - TextualConventions added: - ControllerPassword - WeekMinutes - UnitReference - CableID - NSOID - first login after software installation implemented - aimosSessionTimeout is now of type WeekMinutes - aimosNextMasterLoginUserName moved to aimosUnitiallyMasterLoginUserName - aimosNextMasterLoginPassword moved to aimosInitiallyMasterLoginPassword - aimosNextMasterID and aimosMasterID are now of type MasterID - aimosNextCableID and aimosCableID are now of type CableID - aimosMasterLoginPassword is now of type ControllerPassword - aimosCableUsageUnitReference renamed to aimosCableUsageRemoteUnitReference - Heartbeat implemented (aimosMasterV1HeartbeatInterval, -Overtime and -Time added)"
      },
      {
        "revision": "2003-08-27 10:09",
        "description": "1.1.1.100 Release Q0215RHD Modifications: - added aimosOMCConnectorAddress - aimosMasterOID, aimosSubRackOID and aimosRemoteOID changed from OBJECT IDENTIFIER to RowPointer - aimosGSMNSOOID and aimosGSMNSOOIDData changed from OBJECT IDENTIFIER to RowPointer - aimosUMTSNSOOID and aimosUMTSNSOOIDData changed from OBJECT IDENTIFIER to RowPointer - mandatory objects (sysUpTime, aimosTrapOID and aimosTrapEnterprise) removed from all NOTIFICATION-TYPE's OBJECTS clause"
      },
      {
        "revision": "2003-12-19 12:20",
        "description": "1.2.0.102 Release Q0215RHE Modifications: - added textual convention InterfaceType - added textual convention AlarmForwardingType - fixed the description to UTCTime (value is 15 character clear text instead of 10 character binary - fixed the description to LocalTime (value is 19 character clear text instead of 12 character binary - default time format is local time - added aimosPhoneBookInterfaceType - added aimosPhoneBookAckCapability - objects regarding the amplifiers were renamed (UMTS, DCM, GSM to Amp1, Amp2, Amp3). Their meanings and object IDs are unchanged. - added aimosSubRackV1AmplifierBandNamesAge - added aimosSubRackV1Amplifier1BandName to aimosSubRackV1Amplifier3BandName - ProbableCause: values 100 to 107 moved back to 58 to 65 - added a lot of descriptions"
      },
      {
        "revision": "2004-06-16 10:20",
        "description": "1.3.0.100 Release Q0215RHF Modifications: - last change of UTCTime and LocalTime revoked - added textual convention TimeDisplayFormat - added aimosPhoneBookTimeDisplayFormat"
      },
      {
        "revision": "2004-07-05 10:20",
        "description": "1.3.0.103 Release Q0215RHF Modifications: - changed each name MIDAS to the new brand name AIMOS - notification type RightAreas is supplemented by some new numbers - added object aimosCurrentTime - added object aimosWorkShiftHeartBeatInterval - added object aimosWorkShiftHeartBeatRecipientList - added aimosHeartBeat notification type"
      },
      {
        "revision": "2005-06-16 13:10",
        "description": "1.5.0.102 Release Q0215RHG Modifications: - changed Mikom to Andrew - changed AIMOS to A.I.M.O.S."
      },
      {
        "revision": "2005-09-26 13:05",
        "description": "1.6.1.100 Release Q0215RHH Modifications - added coverageNetworkManagementManualDelete to RightArea - added coverageNetworkManagementMapView to RightArea - added coverageNetworkManagementManualClear to RightArea - added unitList to RightArea"
      },
      {
        "revision": "2006-06-22 13:39",
        "description": "1.7.2.100 Release Q0215RHI Modifications: - syntax names starting with lower case letters corrected ('SEQUENCE OF aaa' changed to 'SEQUENCE OF Aaa') - objects with underscore in its name removed: - aimosUMTSNSODataV1AnyData_ToBeDefined (not implemented until now) - aimosUMTSNSOV1AnyData_ToBeDefined (not implemented until now) - name of default value of aimosPhoneBookInterfaceType corrected (from ifDefault to ifMIBDefault) "
      },
      {
        "revision": "2006-11-22 17:07",
        "description": "1.9.0.100 Release Q0215RHJ Modifications: - added jobMonitor and watchDog to TC RightArea - removed aimosUMTSNSODataV1AnyData_ToBeDefined and aimosUMTSNSOV1AnyData_ToBeDefined from aimosUMTSNSOV1Group - name of default value of aimosPhoneBookInterfaceType corrected (from ifDefault to ifMIBDefault) - was still wrong"
      },
      {
        "revision": "2009-11-23 16:40",
        "description": "2.4.0.100 Release Q0215RHL Modifications: At time the MIB was designed only MMR was available. The yore network structure of the MMR lead to the design of Trap Info fields. The Cable Trap Info was never implemented. From SNMP Manager's point of view it was somewhat complicated to extract the Trap Info from notification objects, whereas the Trap Info for later introduced Network Element types beneath the MMR (the Alarm Boards for example) where never forwarded with notifications. In V2.4.0 the SNMP Manager is provided with the Network Element's Trap Info, Component Name, Location and Unique System ID in the former aimosAlarmListCustomer...Info fields. Therefore the following object names change: - aimosAlarmListCustomerMasterInfo -> aimosAlarmListTrapInfo - aimosAlarmListCustomerSubRackInfo -> aimosAlarmListComponentName - aimosAlarmListCustomerCableInfo -> aimosAlarmListLocation - aimosAlarmListCustomerRemoteInfo -> aimosAlarmListUniqueSystemID The same applies to the Alarm Log: - aimosAlarmLogCustomerMasterInfo -> aimosAlarmLogTrapInfo - aimosAlarmLogCustomerSubRackInfo -> aimosAlarmLogComponentName - aimosAlarmLogCustomerCableInfo -> aimosAlarmLogLocation - aimosAlarmLogCustomerRemoteInfo -> aimosAlarmLogUniqueSystemID Additionally the notifications aimosAlarmNew, aimosAlarmChanged (still not used) as well as aimosAlarmCleared are changed to contain the new object names. The old MIB design remains available in the '%AIMOS_ROOT%\\MIB\\LEGACY\\AIMOS.MY'-MIB-File. The A.I.M.O.S. SNMP Agent can be set to act as it did until V2.3 by means of the A.I.M.O.S. Config-Tool: Set 'MIB supported by the Agent' to 'A.I.M.O.S. Legacy'."
      },
      {
        "revision": "2010-06-17 16:47",
        "description": "2.5.0.100 Release Q0215RHM Modifications: aimosLoginPhoneBookID added to aimosLogin branch"
      },
      {
        "revision": "2010-09-28 15:01",
        "description": "2.6.0.100 Release Q0215RHN Added Textual Conventions: - GeographicPositionFormat - GPSPosition Extended Textual Conventions: - RightArea enlarged by logManager right New objects: - aimosPhoneBookGeographicPositionFormat - aimosAlarmListRaiseLatitude - aimosAlarmListRaiseLongitude - aimosAlarmListClearLatitude - aimosAlarmListClearLongitude - aimosAlarmLogRaiseLatitude - aimosAlarmLogRaiseLongitude - aimosAlarmLogClearLatitude - aimosAlarmLogClearLongitude"
      },
      {
        "revision": "2011-03-22 18:32",
        "description": "2.7.0.100 - MBa: Release Q0215RHO Extended Textual Conventions: - RightArea enlarged by scheduler right - RightArea enlarged by reporting right - PasswordStandard enlarged by upperCase(5) to numericAndSpecialAndUpperCaseAndLowerCase(11)"
      },
      {
        "revision": "2011-05-27 11:46",
        "description": "2.8.0.100 Release Q0215RHP Added aimosNEOperations Extended Textual Convention RightArea by performanceManager right Changed Textual Convention RightArea: fixed scheduler right value"
      },
      {
        "revision": "2011-12-20 10:11",
        "description": "2.9.0.100 Release Q0215RHQ Added recognition support: - new textual convention RecognitionState - new notification aimosAlarmRecognized - new object aimosPhoneBookRecognitionTraps - new object aimosAlarmListRecognitionState - new object aimosAlarmListRecognitionUser - new object aimosAlarmListRecognitionTime - new object aimosAlarmLogRecognitionState - new object aimosAlarmLogRecognitionUser - new object aimosAlarmLogRecognitionTime"
      }
    ],
    "lastupdated": "200207121645Z",
    "organization": "Andrew Wireless Systems GmbH",
    "contactinfo": "Name: Michael Jelich Postal: Andrew Wireless Systems GmbH Industriering 10 D-86675 Buchdorf Germany Phone: +49 9099 69-0 Fax: +49 9099 69-140 eMail: WIsupport.germany@Andrew.com http://www.andrew.com",
    "description": "The MIB is divided into ranges with different rights of access, in order not to grant any person access to the entire data. The protected main part of the information is located in the branch aimosObjects and can be accessed only after an authorising of the user, called login. The areas are accessible as follows: The public area aimosPublic is accessible without any restrictions.It serves mainly to prepare the login procedure. aimosLogin can be accessed only with special community names generated by the A.I.M.O.S. SNMP Agent. Here the login takes place. This authorising takes place via username and password. A valid user/password combination combined with a community name generated by the agent is called a session after the login has take place. The main part of the MIB (off aimosObjects downward) is permitted only within a valid session. aimosObjects contains the objects of the managed network elements. This area is accessible only after a successful login (that is within a valid session) aimosNotifications contains objects, which concern the alarm notifications. aimosGroups and aimosCompliances satisfies SNMP requirements. "
  },
  "SystemAvailability": {
    "name": "SystemAvailability",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "inaccessible": 0,
          "accessible": 1,
          "exclusiveAccessRequested": 2,
          "exclusiveAccess": 3
        }
      }
    },
    "status": "current",
    "description": "SystemAvailability is in later released versions of the agent needed for system backup and restore purposes. It has the syntax INTEGER with the following named values: inaccessible(0) not used yet accessible(1) login is possible exclusiveAccessRequested(2) not used yet exclusiveAccess(3) not used yet "
  },
  "Community": {
    "name": "Community",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 40
          }
        ]
      }
    },
    "status": "current",
    "description": "Community is an OCTET STRING with up to 40 characters each being in range from 32 to 126 (' ' <space> to '~' <tilde>)."
  },
  "UserName": {
    "name": "UserName",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 40
          }
        ]
      }
    },
    "status": "current",
    "description": "UserName is an OCTET STRING having up to 40 characters used in order to represent uniquely user names. Each character must be in range from 32 to 126 (' ' <space> to '~' <tilde>)."
  },
  "PasswordString": {
    "name": "PasswordString",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 5,
            "max": 100
          }
        ]
      }
    },
    "status": "current",
    "description": "PasswordString is an OCTET STRING with at least 5 up to 40 characters each being in a range from 32 to 126 (' ' <space> to '~' <tilde>). Each response to objects of type PasswordString will be a sequence of '*'."
  },
  "LoginState": {
    "name": "LoginState",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disconnected": 0,
          "connected": 1,
          "refused": 2,
          "canceled": 3,
          "passwordExpired": 4
        }
      }
    },
    "status": "current",
    "description": "LoginState is an INTEGER value used in order to indicate the login state with the following named values: disconnected(0) no access to OID's beneath aimosObjects connected(1) access to all OID's of A.I.M.O.S. MIB (according to the authorisation level of the user logged in) refused(2) the password or wrong, access rights like disconnected(0) canceled(3) Session has been inactive too long, access rights like disconnected(0) passwordExpired(4) the password is expired. The user needs to assign a new password to aimosLoginPassword in order to login."
  },
  "OrgID": {
    "name": "OrgID",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 200000,
            "max": 799299
          }
        ]
      }
    },
    "status": "current",
    "description": "The OrgID is an Unsigned32 value with a fixed length of 6 digits and the range from 200.000 to 799.299 used in order to represent organisation IDs. It contains: MCC (mobile country code 3 digits) TelCo/provider flag (1 digit) MNC (mobile network code) or consecutive numbering (2 digits) TelCo/Provider flag Description 0 TelCo 1 TelCo in the role of a provider 2 provider 3,4,5,6,7,8 Reserved 9 manufacturer Mikom is responsible to provide theses numbers."
  },
  "Version": {
    "name": "Version",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 3,
            "max": 15
          }
        ]
      }
    },
    "status": "current",
    "description": "Version is an OCTET STRING with at least 3 up to 13 characters in the format n.n.n.n (e.g. 1.0.5.328) denoting the hierarchical nested major and minor version, release, and build identification."
  },
  "SDN": {
    "name": "SDN",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 80
          }
        ]
      }
    },
    "status": "current",
    "description": "The SDN is an OCTET STRING having up to 80 characters used in order to represent system distinguished names. Each character must be in range from 32 to 126 (' ' <space> to '~' <tilde>)."
  },
  "TimeFormat": {
    "name": "TimeFormat",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "utcTimeFormat": 0,
          "localTimeFormat": 1
        }
      }
    },
    "status": "current",
    "description": "TimeFormat is an INTEGER used in order to indicate the time format for date and time values with the following named values: utcTimeFormat(0) Coordinated Universal Time (UTC), also known as Greenwich Mean Time (GMT) localTimeFormat(1) local time of the machine"
  },
  "PasswordStandard": {
    "name": "PasswordStandard",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 0,
          "numbers": 1,
          "specials": 2,
          "numbersOrSpecials": 3,
          "numbersAndSpecials": 4,
          "upperCase": 5,
          "lowerCase": 6,
          "upperCaseAndLowerCase": 7,
          "upperCaseAndLowerCaseAndNumeric": 8,
          "upperCaseAndLowerCaseAndSpecial": 9,
          "upperCaseAndLowerCaseAndNumericOrSpecial": 10,
          "numericAndSpecialAndUpperCaseAndLowerCase": 11
        }
      }
    },
    "status": "current",
    "description": "PasswordStandard is an INTEGER value used in order to indicate the password security level by the following named values (the description indicates in each case, which character must be contained, so that a password is valid): normal(0) any printable character numbers(1) at least one number specials(2) at least one special character numbersOrSpecials(3) at least one number or special character numbersAndSpecials(4) at least one number and one special character upperCase(5) lowerCase(6) upperCaseAndLowerCase(7) upperCaseAndLowerCaseAndNumeric(8) upperCaseAndLowerCaseAndSpecial(9) upperCaseAndLowerCaseAndNumericOrSpecial(10) numericAndSpecialAndUpperCaseAndLowerCase(11) Special characters are as follows: !$%&/{[(<=>)]}\\?^`'*+~-_.:,;#|@ and double quotation marks"
  },
  "WeekMinutes": {
    "name": "WeekMinutes",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 10080
          }
        ]
      }
    },
    "status": "current",
    "description": "WeekMinutes is an Unsigned32 value within the range from 0 to 10.080 used in order to represent an amount of minutes for up to one week."
  },
  "IPAddressAndPort": {
    "name": "IPAddressAndPort",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 7,
            "max": 21
          }
        ]
      }
    },
    "status": "current",
    "description": "IPAddressAndPort is an OCTET STRING with at least 7 up to 21 characters used in order to represent an IP address and its IP/UDP port number in the following format: a.b.c.d:port, e.g.: 192.168.1.54:162 If the port number is omitted, then also the colon must be omitted."
  },
  "VariableTime": {
    "name": "VariableTime",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 28
          }
        ]
      }
    },
    "displayhint": "2d-1d-1d,1d:1d:1d,1a1d:1d",
    "status": "current",
    "description": "VariableTime is an OCTET STRING with up to 28 characters used in order to represent date and time values. Two objects have influence on coding the values: aimosTimeFormat specifies whether times are coded in UTC or in local time aimosPhoneBookTimeDisplayFormat specifies whether the times are coded in OSI or SNMP manner. In addition it can be specified whether the information has to be handed over in binary form or as (un-)formatted text. Refer to the description of the textual convention TimeDisplayFormat for more information about that. The display hint is accordingly to the system default osiBinary(1)."
  },
  "Text": {
    "name": "Text",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "status": "current",
    "description": "Text is an OCTET STRING with up to 100 characters having each character in a range from 32 to 126 (' ' <space> to '~' <tilde>)."
  },
  "OrgLevel": {
    "name": "OrgLevel",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "indeterminate": 0,
          "telco": 1,
          "provider": 2,
          "manufacturer": 3
        }
      }
    },
    "status": "current",
    "description": "OrgLevel is an INTEGER used in order to indicate the role the organisation is playing in the A.I.M.O.S. system with the following named values: indeterminate(0) not used telco(1) organisation is a TelCo provider(2) organisation is a provider manufacturer(3) organisation is the manufacturer "
  },
  "MCC": {
    "name": "MCC",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 200,
            "max": 799
          }
        ]
      }
    },
    "status": "current",
    "description": "MCC is an Unsigned32 value within the range from 200 to 799 used in order to represent Mobile Country Codes."
  },
  "MNC": {
    "name": "MNC",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 99
          }
        ]
      }
    },
    "status": "current",
    "description": "MNC is an Unsigned32 value within the range from 0 to 99 used in order to represent Mobile Network Codes."
  },
  "Boolean": {
    "name": "Boolean",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "false": 0,
          "true": 1
        }
      }
    },
    "status": "current",
    "description": "Boolean is an INTEGER used in order to represent a boolean value by the named values of false(0) true(1)"
  },
  "DistinguishedNameSeparator": {
    "name": "DistinguishedNameSeparator",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 1
          }
        ]
      }
    },
    "status": "current"
  },
  "DistinguishedNameHierarchySymbol": {
    "name": "DistinguishedNameHierarchySymbol",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 1
          }
        ]
      }
    },
    "status": "current"
  },
  "CableCodeConcatenator": {
    "name": "CableCodeConcatenator",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 1
          }
        ]
      }
    },
    "status": "current",
    "description": "CableCodeConcatenator is an OCTET STRING with a fixed length of 1 character used in order to concatenate Cable Codes."
  },
  "TableIndex": {
    "name": "TableIndex",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": "TableIndex is an Unsigned32 value within the range from 1 to 2-1 used for table indexing."
  },
  "RightArea": {
    "name": "RightArea",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "administrationAlarms": 100,
          "administrationFolder": 200,
          "administrationMCAccounts": 300,
          "administrationMC": 400,
          "administrationOMCAccounts": 500,
          "administrationOMC": 600,
          "administrationSNMPNorthbound": 700,
          "administrationSNMPSouthbound": 800,
          "controlAlarmSystem": 900,
          "controlDeviceParameter": 1000,
          "fileUploadDownload": 1100,
          "factorySettings": 2000,
          "accountManagement": 2100,
          "northboundManagement": 2200,
          "connectivityManagement": 2300,
          "scheduler": 2325,
          "jobMonitor": 2350,
          "logManager": 2375,
          "coverageNetworkManagementGeneral": 2400,
          "coverageNetworkManagementConfiguration": 2500,
          "coverageNetworkManagementManualDelete": 2550,
          "coverageNetworkManagementMaintenance": 2600,
          "coverageNetworkManagementMapView": 2630,
          "coverageNetworkManagementManualClear": 2660,
          "coverageNetworkManagementSupervision": 2700,
          "coverageNetworkManagementTopology": 2800,
          "organizationProfilesManagement": 2900,
          "performanceManager": 2925,
          "reporting": 2950,
          "sessionManagement": 3000,
          "unitList": 3100,
          "watchDog": 3200
        }
      }
    },
    "status": "current",
    "description": "RightArea is an INTEGER used in order to indicate the controller right with the following named values: factorySettings(2000) accountManagement(2100) northboundManagement(2200) connectivityManagement(2300) scheduler(2325) jobMonitor(2350) logManager(2375) coverageNetworkManagementGeneral(2400) coverageNetworkManagementConfiguration(2500) coverageNetworkManagementManualDelete(2550) coverageNetworkManagementMaintenance(2600) coverageNetworkManagementMapView(2630) coverageNetworkManagementManualClear(2660) coverageNetworkManagementSupervision(2700) coverageNetworkManagementTopology(2800) performanceManager(2925) reporting(2950) sessionManagement(3000) unitList(3100) watchDog(3200) The values below 2000 are only used before software version 1.3. organizationProfilesManagement(2900) ist not used as of 2.7.0"
  },
  "AccessRight": {
    "name": "AccessRight",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noAccess": 0,
          "readOnly": 1,
          "readWrite": 2
        }
      }
    },
    "status": "current",
    "description": "AccessRight is an INTEGER used in order to indicate the access rights of an user with the following named values: noAccess(0) used in order to delete entries in aimosRoleRightTable readOnly(1) updates are prohibited readWrite(2) updates are allowed"
  },
  "ControllerPassword": {
    "name": "ControllerPassword",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 6,
            "max": 8
          }
        ]
      }
    },
    "status": "current",
    "description": "ControllerPassword is a OCTET STRING with the following requirements: it consists of at least 6, but at the most 8 characters it contains at least one capital letter in the range from A to Z it contains at least one small letter in the range from a to z it contains at least one number it contains no other characters than the ones listed above (A-Z, a-z, 0-9)"
  },
  "NetworkStandard": {
    "name": "NetworkStandard",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "umts": 1,
          "dcs": 2,
          "gsm": 3
        }
      }
    },
    "status": "current",
    "description": "NetworkStandard is an INTEGER used in order to indicate a network standards with the following named values: umts(1) UMTS dcs(2) GSM1800 gsm(3) GSM900"
  },
  "FrequencyRange": {
    "name": "FrequencyRange",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 400000,
            "max": 2400000
          }
        ]
      }
    },
    "status": "current",
    "description": "FrequencyRange is an Unsigned32 value within the range from 400.000 to 2.400.000 used in order to represent radio frequency values in kHz."
  },
  "ARFCN": {
    "name": "ARFCN",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 16383
          }
        ]
      }
    },
    "status": "current",
    "description": "ARFCN is an Unsigned32 value within the range from 0 to 16.383 used in order to represent the absolute radio frequency channel number."
  },
  "AlarmID": {
    "name": "AlarmID",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "alarmAC": 1,
          "alarmALC": 2,
          "alarmAmplifier": 3,
          "alarmAmplifierCurrent": 4,
          "alarmAttSet": 5,
          "alarmAutoLeveling": 6,
          "alarmAuxSet": 7,
          "alarmBitErrorRate": 8,
          "alarmBooster": 9,
          "alarmBus": 10,
          "alarmChannel": 11,
          "alarmCellLost": 13,
          "alarmConnection": 15,
          "alarmControlBoard": 16,
          "alarmConvBias": 17,
          "alarmConverter": 18,
          "alarmCellStatusChanged": 19,
          "alarmCurrent": 20,
          "alarmCurrentFail": 21,
          "alarmDistribution": 22,
          "alarmDistributor": 23,
          "alarmDoorOpen": 24,
          "alarmDriverAmp": 25,
          "alarmEnergyCellTemp": 26,
          "alarmEnergyCellVoltage": 27,
          "alarmExternalInput": 28,
          "alarmFan": 29,
          "alarmHeartBeat": 30,
          "alarmICEOscilPower": 31,
          "alarmInputPower": 32,
          "alarmMIB": 33,
          "alarmMicrowaveLock": 34,
          "alarmOperatorRequired": 35,
          "alarmOptic": 36,
          "alarmOpticCurrent": 37,
          "alarmOscillator": 38,
          "alarmPA": 39,
          "alarmPasswordWrong": 40,
          "alarmPowerAmplifier": 41,
          "alarmPowerOut": 42,
          "alarmPowerOutBelowLimit": 43,
          "alarmPowerOutLow": 44,
          "alarmPowerSupply": 45,
          "alarmPreAmplifier": 46,
          "alarmRelay": 47,
          "alarmRFPath": 48,
          "alarmRSSI": 49,
          "alarmRSSILow": 50,
          "alarmRxLevelHigh": 51,
          "alarmRxLevelLow": 52,
          "alarmSolarVoltage": 53,
          "alarmSummarizer": 54,
          "alarmSynthesizerCurrent": 55,
          "alarmSynthesizer": 56,
          "alarmSystemModule": 57,
          "alarmSystemTemp": 58,
          "alarmUnitUnavailable": 59,
          "alarmVSWR": 60,
          "alarmAutoLevelingOutOfRange": 61,
          "alarmOMC": 62,
          "alarmHeartbeatMissing": 63,
          "alarmIPP": 64,
          "alarmCommonPilotChannelHigh": 65,
          "alarmCommonPilotChannelLow": 66,
          "alarmTemperatureStage1": 67,
          "alarmTemperatureStage2": 68,
          "alarmCurrent2": 69,
          "alarmInvalidLogin": 70,
          "alarmChannelNew": 71,
          "alarmChannelLost": 72,
          "alarmChannelAllocationChanged": 73,
          "alarmUMTSRxLevelHigh": 74,
          "alarmUMTSRxLevelLow": 75,
          "alarmUMTSCodePowerLow": 76,
          "alarmUMTSCPICHEnergyToNoiseRatioLow": 77,
          "alarmUMTSCPICHCodePowerHigh": 78,
          "alarmUMTSCPICHCodePowerLow": 79,
          "alarmUMTSBCHBlockErrorRateHigh": 80,
          "alarmUMTSPSCCodePowerLow": 81,
          "alarmUMTSChannelLost": 82,
          "alarmAlarmlistDeleted": 83,
          "alarmDataOutOfSequence": 84,
          "alarmExternalOutput": 85,
          "alarmGsmNso": 86
        }
      }
    },
    "status": "current",
    "description": "AlarmID is an INTEGER used in order to indicate the kind of alarm."
  },
  "EventType": {
    "name": "EventType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "communications": 1,
          "qualityOfService": 2,
          "processingError": 3,
          "equipment": 4,
          "environmental": 5
        }
      }
    },
    "status": "current",
    "description": "EventType is an INTEGER used in order to indicate the event type of an alarm by the following named values: communications(1) qualityOfService(2) processingError(3) equipment(4) environmental(5)"
  },
  "Severity": {
    "name": "Severity",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "indeterminate": 0,
          "critical": 1,
          "major": 2,
          "minor": 3,
          "warning": 4,
          "cleared": 5,
          "information": 6
        }
      }
    },
    "status": "current",
    "description": "Severity is an INTEGER used in order to indicate the relative level of urgency for operator attention by the following named values: indeterminate(0) critical(1) major(2) minor(3) warning(4) cleared(5) information(6) Values from indeterminate(0) to cleared(5) are defined in accordance with the ITU-T recommendations X.733. The value information(6) is a Mikom extension. However, for compatibility reasons the SNMP Agent can be forced to treat information(6) like warning(4) by means of aimosAlarmDefaultSeverity."
  },
  "ClearMode": {
    "name": "ClearMode",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "indeterminate": 0,
          "autoClear": 1,
          "manualClear": 2,
          "clearOnAck": 3,
          "ackIsClear": 4
        }
      }
    },
    "status": "current",
    "description": "ClearMode is an INTEGER used in order to indicate how an alarm gets cleared by the following named values: indeterminate(0) not used autoClear(1) if the alarm condition does not exist any longer, a aimosAlarmCleared notification will be emitted by the system manualClear(2) the alarm remains active until aimosAlarmListClearReason is set to manualCleared(2) clearOnAck(3) after acknowledgement of the aimosAlarmNew notification the system will emit a aimosAlarmCleared notification. If the acknowledgement to that notification is done, the alarm is cleared and will be removed from the alarm list ackIsClear(4) after acknowledgement of the aimosAlarmNew notification the alarm is cleared and will be removed from the alarm list"
  },
  "AlarmValue": {
    "name": "AlarmValue",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 9999999
          }
        ]
      }
    },
    "status": "current",
    "description": "AlarmValue is an Unsigned32 value within the range from 0 to 9.999.999 used in order to provide an alarm dependent value."
  },
  "PhoneBookEntry": {
    "name": "PhoneBookEntry",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 100
          }
        ]
      }
    },
    "status": "current",
    "description": "PhoneBookEntry is an OCTET STRING with a length of at least 1 up to 100 characters used in order to give a phonebook entry a name. The name must start with a letter and each character must be in range 32 to 126 (' ' <space> to '~' <tilde>)."
  },
  "OperationMode": {
    "name": "OperationMode",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "idle": 0,
          "stopping": 1,
          "stop": 2,
          "running": 3,
          "starting": 4,
          "start": 5
        }
      }
    },
    "status": "current",
    "description": "OperationMode is an INTEGER used in order to indicate the operation mode by the following named values: idle(0) no operation takes place at present stopping(1) the operation is terminating stop(2) used in order to terminate the operation running(3) the operation takes place at present starting(4) the operation is starting start(5) used in order to start the operation If operation mode is idle(0), it can be set to start(5). The system then will change the value to starting(4) until the operation is running. In that case it goes into running(3) state. If operation mode is running(3), it can be set to stop(2). The system then will change the value to stopping(1), stops the operation and then change the value to idle(0). Only the values start(5) and stop(2) can be set. These values will never be reported on get requests."
  },
  "InterfaceType": {
    "name": "InterfaceType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ifMIBDefault": 0,
          "ifOMC3Default": 1,
          "ifOMC3Nokia": 2,
          "ifNE3S": 3,
          "ifAimosObsolete": 4,
          "ifAimos": 5
        }
      }
    },
    "status": "current",
    "description": "InterfaceType is an INTEGER used in order to indicate the kind of alarm forwarding expected by the SNMP Manager by the following named values: ifMIBDefault(0) currently the same as ifAimos(5) ifOMC3Default(1) force alarm forwarding as used in OMC 3 with the standard interface. The alarms sent away are always SNMPv1 traps ifOMC3Nokia(2) force alarm forwarding as used in OMC 3 with the Nokia interface. The alarms sent away are always SNMPv1 traps ifNE3S(3) force alarm forwarding as defined in the Nokia Enhanced SNMP Solution Suite (NE3S). The decision made by means of the object aimosAlarmForwardingType determines whether an alarm is sent away as SNMPv1 trap or as SNMPv2 notification ifAimosObsolete(4) force alarm forwarding as defined in the first releases of the aimos MIB. The alarms sent away are always SNMPv2 notifications. ifAimos(5) alarm forwarding as defined by the MIB. The decision made by means of the object aimosAlarmForwardingType determines whether an alarm is sent away as SNMPv1 trap or as SNMPv2 notification."
  },
  "TimeDisplayFormat": {
    "name": "TimeDisplayFormat",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "default": 0,
          "osiBinary": 1,
          "osiText": 2,
          "osiFormatted": 3,
          "snmpBinary": 4,
          "snmpText": 5,
          "snmpFormatted": 6,
          "windows": 7
        }
      }
    },
    "status": "current",
    "description": "TimeDisplayFormat is an INTEGER used in order to indicate of how date and time values are transmitted in objects of type VariableTime are encoded by the SNMP agent. This will be done using one of the following named values: default(0) using default(0) is equal to using osiBinary(1) unless aimosPhoneBookInterfaceType is set to ifAimosObsolete(4). In the latter case it's equal to using osiText(2) instead. osiBinary(1) specifies that the textual conventions UTCTime or LocalTime (depending on the decision made by means of aimosTimeFormat) shall be used as defined. This is the system default unless aimosPhoneBookInterfaceType is set to ifAimosObsolete(4). osiText(2) specifies that the textual conventions UTCTime or LocalTime (depending on the decision made by means of aimosTimeFormat) shall be used. The only exception is that the values are not encoded binary, but in text format. I.e., as an example, the year is not encoded in two octets, but in four. The format is YYYYMMDDHHMMSSHHMM, the length is 19 octets. If aimosTimeFormat is set to utcTimeFormat(0), the timezone information is not present and a 'Z' letter is following the seconds instead of the sign. In the latter case the length is reduced to 15 octets (YYYYMMDDHHMMSS'Z'). This is the system default if aimosPhoneBookInterfaceType is set to ifAimosObsolete(4). osiFormatted(3) this option resembles osiText(2), except that instead of unformated text formatted text is used. Due to the inserted formattings the size increases to - 26 octets, if aimosTimeFormat is set to localTimeFormat(1) (the format used is YYYY-MM-DD,HH:MM:SS,HH:MM) - 20 octets, if aimosTimeFormat is set to utcTimeFormat(0) (the format used is YYYY-MM-DD,HH:MM:SS'Z') snmpBinary(4) specifies that the textual convention SNMPv2-TC.DateAndTime shall be used as defined. If aimosTimeFormat is set to utcTimeFormat(0), then the timezone information (fields 8-10) is not present. snmpText(5) specifies that the textual convention SNMPv2-TC.DateAndTime shall be used. The only exception is that the values are not encoded binary, but in text format. I.e., as an example, the year is not encoded in two octets, but in four. The format is YYYYMMDDHHMMSSDHHMM, the length is 20 octets. If aimosTimeFormat is set to utcTimeFormat(0) then the timezone information is not present. In the latter case its length is reduced to 15 octets (YYYYMMDDHHMMSSD). snmpFormatted(6) this option resembles snmpText(5), except that instead of unformated text formatted text is used. Due to the inserted formattings the size increases to - 28 octets, if aimosTimeFormat is set to localTimeFormat(1) (the format used is YYYY-MM-DD,HH:MM:SS.D,HH:MM) - 21 octets, if aimosTimeFormat is set to utcTimeFormat(0) (the format used is YYYY-MM-DD,HH:MM:SS.D) windows(7) date and time values are formatted as defined in the windows country settings. The short date format and the long time formats are used, separated by a blank."
  },
  "AcknowledgementState": {
    "name": "AcknowledgementState",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "indeterminate": 0,
          "unacknowledged": 1,
          "acknowledged": 2
        }
      }
    },
    "status": "current",
    "description": "AcknowledgementState is an INTEGER used in order to indicate the acknowledgement state of an alarm by the following named values: indeterminate(0) corresponds to X.733, however in A.I.M.O.S. not used unacknowledged(1) acknowledged(2)"
  },
  "ProbableCause": {
    "name": "ProbableCause",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 0,
          "adapterError": 1,
          "applicationSubsystemFailure": 2,
          "bandwidthReduced": 3,
          "callEstablishmentError": 4,
          "communicationsProtocolError": 5,
          "communicationsSubsystemFailure": 6,
          "configurationOrCustomizationError": 7,
          "congestion": 8,
          "corruptData": 9,
          "cpuCyclesLimitExceeded": 10,
          "dTEDCEInterfaceError": 11,
          "dataSetOrModemError": 12,
          "degradedSignal": 13,
          "enclosureDoorOpen": 14,
          "equipmentMalfunction": 15,
          "excessiveVibration": 16,
          "fileError": 17,
          "fireDetected": 18,
          "floodDetected": 19,
          "framingError": 20,
          "heatingOrVentialtionOrCoolingSystemProblem": 21,
          "humidityUnacceptable": 22,
          "inputOutputDeviceError": 23,
          "inputDeviceError": 24,
          "lANError": 25,
          "leakDetected": 26,
          "localNodeTransmissionError": 27,
          "lossOfFrame": 28,
          "lossOfSignal": 29,
          "materialSupplyExhausted": 30,
          "multiplexerProblem": 31,
          "outOfMemory": 32,
          "outputDeviceError": 33,
          "performanceDegraded": 34,
          "powerProblem": 35,
          "pressureUnacceptable": 36,
          "processorProblem": 37,
          "pumpFailure": 38,
          "queueSizeExceeded": 39,
          "receiveFailure": 40,
          "receiverFailure": 41,
          "remoteNodeTransmissionError": 42,
          "resourceAtOrNearingCapacity": 43,
          "responseTimeExcessive": 44,
          "retransmissionRateExcessive": 45,
          "softwareError": 46,
          "softwareProgramAbnormallyTerminated": 47,
          "softwareProgramError": 48,
          "storageCapacityProblem": 49,
          "temperatureUnacceptable": 50,
          "thresholdCrossed": 51,
          "timingProblem": 52,
          "toxicLeakDetected": 53,
          "transmitFailure": 54,
          "transmitterFailure": 55,
          "underlyingResourceUnavailable": 56,
          "versionMismatch": 57,
          "snmpTrapColdStart": 100,
          "snmpTrapWarmStart": 101,
          "snmpTrapLinkDown": 102,
          "snmpTrapLinkUp": 103,
          "snmpTrapAuthenticationFailure": 104,
          "snmpTrapEgpNeighborloss": 105,
          "snmpTrapEnterpriseSpecific": 106,
          "snmpTrapLinkUpDown": 107
        }
      }
    },
    "status": "current",
    "description": "ProbableCause is an INTEGER used in order to indicate the ITU-T Recommendation X.733 clause 8.1.2.1 conform probable cause of an alarm."
  },
  "SpecificProblem": {
    "name": "SpecificProblem",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 9999
          }
        ]
      }
    },
    "status": "current",
    "description": "SpecificProblem is an Unsigned32 value within a range from 0 to 9.999 used in order to classify the fault situation as defined in ITU-T Recommendation X.733 clause 8.1.2.2."
  },
  "TrendIndication": {
    "name": "TrendIndication",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "lessSevere": 0,
          "noChange": 1,
          "moreSevere": 2
        }
      }
    },
    "status": "current",
    "description": "TrendIndication is an INTEGER used in order to indicate the ISO/IEC 10164-4, Chapter 8.1.2.6 conform trend indication of an alarm by the following named values: lessSevere(0) noChange(1) moreSevere(2)"
  },
  "ClearReason": {
    "name": "ClearReason",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "stillActive": 0,
          "autoCleared": 1,
          "manualCleared": 2,
          "objectDeleted": 3,
          "objectConfigured": 4,
          "alarmListRebuild": 5,
          "alarmChanged": 6
        }
      }
    },
    "status": "current",
    "description": "ClearReason is an INTEGER used in order to indicate the reason of an alarm is going cleared by the following named values: stillActive(0) what it says: the alarm is not cleared yet autoCleared(1) the alarm was cleared by the system manualCleared(2) the alarm was cleared by assigning manualCleared(2) to aimosAlarmListClearReason objectDeleted(3) corresponds to X.733, however in A.I.M.O.S. not used objectConfigured(4) corresponds to X.733, however in A.I.M.O.S. not used alarmListRebuild(5) the alarm was rejected by an Alarm List Rebuild process alarmChanged(6) corresponds to X.733, however in A.I.M.O.S. not used"
  },
  "AlarmForwardingType": {
    "name": "AlarmForwardingType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "disabled": 0,
          "snmpV1": 1,
          "snmpV2c": 2
        }
      }
    },
    "status": "current",
    "description": "AlarmForwardingType is an INTEGER used in order to indicate the type of alarm forwarding by the following named values: disabled(0) alarm forwarding is disabled snmpV1(1) alarm forwarding is using the TRAP-TYPE construct snmpV2c(2) alarm forwarding is using the NOTIFICATION-TYPE construct"
  },
  "MasterID": {
    "name": "MasterID",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 9999
          }
        ]
      }
    },
    "status": "current",
    "description": "MasterID is an Unsigned32 value within the range from 1 to 9.999 used in order to uniquely identify Master Units, each containing up to 13 Racks. While each Master Unit contains exact one Master Controller it is also used in order to identify Master Controllers."
  },
  "RDN": {
    "name": "RDN",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 16
          }
        ]
      }
    },
    "status": "current",
    "description": "RDN is an OCTET STRING with up to 16 characters used in order to represent a relative distinguished name. The RDN uniquely identifies the unit within its parent. Each character must be in range 32 to 126 (' ' <space> to '~' <tilde>)."
  },
  "IdentNo": {
    "name": "IdentNo",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 10
          }
        ]
      }
    },
    "status": "current",
    "description": "IdentNo is an OCTET STRING with up to 10 characters used in order to represent the Mikom Ident-No."
  },
  "SerialNo": {
    "name": "SerialNo",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 10
          }
        ]
      }
    },
    "status": "current",
    "description": "SerialNo is an OCTET STRING with up to 10 characters used in order to represent the Mikom Serial-No of the device."
  },
  "Coordinates": {
    "name": "Coordinates",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 3,
            "max": 21
          }
        ]
      }
    },
    "status": "current",
    "description": "Coordinates is an OCTET STRING with at least 3 up to 21 characters holding two values divided by a slash. The first one represents the x-coordinate and the other one represents the y-coordinate of a map position value."
  },
  "MasterState": {
    "name": "MasterState",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "indeterminate": 0,
          "requestGUID": 1,
          "performGUIDRequest": 2,
          "missingGUID": 3,
          "requestNetInfo": 4,
          "performNetInfoRequest": 5,
          "missingNetInfo": 6,
          "properlySet": 7
        }
      }
    },
    "status": "current",
    "description": "MasterState is an INTEGER value used in order to indicate the state of system integration with the following named values: indeterminate(0) not used requestGUID(1) used in order to inquire the Master Controller's GUID performGUIDRequest(2) indicates that a GUID inquiry takes place missingGUID(3) indicates that a GUID could not be determined requestNetInfo(4) used in order to inquire the Master Controller's equipment structure and status information performNetInfoRequest(5) indicates that an inquiry of the equipment structure and status information takes place missingNetInfo(6) indicates that the equipment structure and/or status information could not be determined properlySet(7) indicates that the Master Controller is properly integrated in the system Only requestGUID(1) and requestNetInfo(4) are values, which can be assigned at OID's of the type MasterState. The remaining values can be returned in inquiries."
  },
  "GUID": {
    "name": "GUID",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 38,
            "max": 38
          }
        ]
      }
    },
    "status": "current",
    "description": "GUID is an OCTET STRING with a fixed length of 38 character used in order to represent a Microsoft Windows GUID in printable format."
  },
  "SubRackID": {
    "name": "SubRackID",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 124
          }
        ]
      }
    },
    "status": "current",
    "description": "SubRackID is an Unsigned32 value within the range from 1 to 124 used in order to represent the unique key for SubRack Master Units, each contained in one Master Unit and connected to some Remote Units."
  },
  "RemoteID": {
    "name": "RemoteID",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4
          }
        ]
      }
    },
    "status": "current",
    "description": "RemoteID is an Unsigned32 value with the range from 1 to 4 used in order to represent the unique key for a Remote Unit."
  },
  "NSOID": {
    "name": "NSOID",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 1
          }
        ]
      }
    },
    "status": "current",
    "description": "NSOID is an Unsigned32 value used in order to represent the unique key for GSM NSO's, each connected to one Remote Unit."
  },
  "CableID": {
    "name": "CableID",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": "CableID is an Unsigned32 value within the range from 1 to 2-1 used in order to represent the unique key for cables, which are used for interconnection between Remote Units and SubRack Master Units."
  },
  "CableCode": {
    "name": "CableCode",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 40
          }
        ]
      }
    },
    "status": "current",
    "description": "CableCode is an OCTET STRING with a length of up to 40 characters used in order to represent the custom cable code, to which the fibre belongs. Each character must be in range 32 to 126 (' ' <space> to '~' <tilde>)."
  },
  "UnitReference": {
    "name": "UnitReference",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": "UnitReference is an Unsigned32 value that can be used for a system-wide unique identification of each individual unit. Contrary to this the textual conventions MasterID, SubRackID, RemoteID and NSOID only identify the corresponding unit types within their superior level."
  },
  "ValueSource": {
    "name": "ValueSource",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "actualValue": 1,
          "cachedValue": 2,
          "desiredValue": 3
        }
      }
    },
    "status": "current",
    "description": "ValueSource is an INTEGER used in order to indicate the value to be addressed with the following named values: actualValue(1) the current value cachedValue(2) the most recent read value desiredValue(3) a desired value, not set yet "
  },
  "Attenuation": {
    "name": "Attenuation",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 30
          }
        ]
      }
    },
    "status": "current",
    "description": "Attenuation is an Unsigned32 value within the range from 0 to 30 used in order to provide an attenuation value in dB."
  },
  "GainOffset": {
    "name": "GainOffset",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -9,
            "max": 9
          }
        ]
      }
    },
    "status": "current",
    "description": "GainOffset is an Unsigned32 value within the range from 0 to 30 used in order to provide an gain offset value."
  },
  "TemperatureStatus": {
    "name": "TemperatureStatus",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -55,
            "max": 125
          }
        ]
      }
    },
    "status": "current",
    "description": "TemperatureStatus is an Unsigned32 value within the range from -55 to 125 used in order to represent the current temperature value in degrees centigrade."
  },
  "NominalTemperature": {
    "name": "NominalTemperature",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 40,
            "max": 65
          }
        ]
      }
    },
    "status": "current",
    "description": "NominalTemperature is an Unsigned32 value within the range from 40 to 65 used in order to adjust the desired temperature value in degrees centigrade."
  },
  "AmplifierPower": {
    "name": "AmplifierPower",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -640,
            "max": 635
          }
        ]
      }
    },
    "status": "current",
    "description": "AmplifierPower is an Unsigned32 value within the range from -640 to 635 used in order to represent the power value in tenth of dB in steps of 0.5 dB. I.e., valid values are 5,10,15,..."
  },
  "ALCThreshold": {
    "name": "ALCThreshold",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "status": "current",
    "description": "ALCThreshold is an Unsigned32 value within the range from 0 to 255 used in order to represent ALC Threshold values."
  },
  "OpticalLoss": {
    "name": "OpticalLoss",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -640,
            "max": 635
          }
        ]
      }
    },
    "status": "current",
    "description": "OpticalLoss is an Unsigned32 value within the range from -640 to 635 used in order to represent the optical loss value in tenth of dB."
  },
  "BER": {
    "name": "BER",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 254
          }
        ]
      }
    },
    "status": "current",
    "description": "BER is an Unsigned32 value within the range from 0 to 254 used in order to represent the bit error rate in tenth of dB."
  },
  "LAC": {
    "name": "LAC",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65533
          }
        ]
      }
    },
    "status": "current",
    "description": "Location Area CodeLAC is an Unsigned32 value within the range from 1 to 65.533 used in order to represent the location area code."
  },
  "CI": {
    "name": "CI",
    "class": "textualconvention",
    "type": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "status": "current",
    "description": "CI is an Unsigned32 value within the range from 0 to 65.535 used in order to represent the cell identifier."
  },
  "CellStatus": {
    "name": "CellStatus",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "cellSuitable": 0,
          "cellLowPriority": 1,
          "cellBarred": 2,
          "cellLowLevel": 3,
          "cellForbidden": 4,
          "cellOther": 5
        }
      }
    },
    "status": "current",
    "description": "CellStatus is an INTEGER used in order to indicate the cell status by the following named values: cellSuitable(0) cellLowPriority(1) cellBarred(2) cellLowLevel(3) cellForbidden(4) cellOther(5)"
  },
  "AgentState": {
    "name": "AgentState",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "snmpColdStart": 1,
          "snmpPause": 2,
          "snmpResume": 3,
          "snmpShutDown": 4
        }
      }
    },
    "status": "current",
    "description": "AgentState is an INTEGER value used in order to indicate what the A.I.M.O.S. SNMP Agent is about to do by the following named values: snmpColdStart(1) the agent was started and is now running snmpPause(2) not yet used snmpResume(3) not yet used snmpShutDown(4) the A.I.M.O.S. SNMP Agent is terminated shortly "
  },
  "UTCTime": {
    "name": "UTCTime",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "displayhint": "2d-1d-1d,1d:1d:1d1a",
    "status": "current",
    "description": "UTCTime is an OCTET STRING having 8 octets used in order to represent date and time values in UTC time format. This format consists of the following fields: field octets contents range ----- ------ -------- ----- 1 1-2 year 0..2999 2 3 month 1..12 3 4 day 1..31 4 5 hour 0..23 5 6 minutes 0..59 6 7 seconds 0..59 7 8 fixed character Z For example, Tuesday May 26, 1992 at 1:30:15 PM MESZ would be displayed as: 1992-05-26,11:30:15Z In order to convert the value to local time, you have to add time zone bias and if necessary daylight bias. In the example above, MESZ has a time zone bias of +1 and a daylight bias of +1. So if you add 2 hours to 11:30:15, you'll get 1:30:15 PM."
  },
  "LocalTime": {
    "name": "LocalTime",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 10,
            "max": 10
          }
        ]
      }
    },
    "displayhint": "2d-1d-1d,1d:1d:1d,1a1d:1d",
    "status": "current",
    "description": "LocalTime is an OCTET STRING having 10 octets used in order to represent date and time values in local time format. It consists of the following fields: field octets contents range ----- ------ -------- ----- 1 1-2 year 0..2999 2 3 month 1..12 3 4 day 1..31 4 5 hour 0..23 5 6 minutes 0..59 6 7 seconds 0..59 7 8 direction from UTC '+' / '-' 8 9 hours from UTC 0..13 9 10 minutes from UTC 0..59 For example, Tuesday May 26, 1992 at 1:30:15 PM MESZ would be displayed as: 1992-05-26,13:30:15,+02:00 In order to convert the value to UTC time, you have to subtract the time zone bias and daylight bias provided with the value above. In the example above, the bias is +2 hours. So if you subtract 2 hours from 13:30:15, you'll get 11:30:15 UTC time."
  },
  "GeographicPositionFormat": {
    "name": "GeographicPositionFormat",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "degreeMinuteSecond": 0,
          "decimalSecond": 1,
          "decimalMinute": 2,
          "decimalDegree": 3,
          "signedValue": 4
        }
      }
    },
    "status": "current",
    "description": "Four formats are available: degreeMinuteSecond(0) shows degrees, minutes and seconds decimalSecond(1) shows degrees, minutes and decimal seconds decimalMinute(2) shows degrees and decimal minutes decimalDegree(3) shows decimal degrees SignedValue(4) shows an unformatted value (negative value indicates S/W) Following an example for the different formats of one single GPS position: degreeMinuteSecond(0) = 35 43' 0'' N 81 19' 1'' W decimalSecond(1) = 35 42' 59.59'' N 81 19' 1.19'' W decimalMinute(2) = 35 42.99318' N 81 19.01982' W decimalDegree(3) = 35.716553 N 81.316997 W SignedValue(4) = 35.716553 -81.316997 "
  },
  "GPSPosition": {
    "name": "GPSPosition",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 30
          }
        ]
      }
    },
    "status": "current",
    "description": "GPSPosition is an OCTET STRING with a length of up to 30 characters indicating either a latitude or a longitude. The format used is determined by aimosPhoneBookGeographicPositionFormat. "
  },
  "NEOperationStatus": {
    "name": "NEOperationStatus",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "neoNone": 0,
          "neoIdle": 1,
          "neoSubmit": 2,
          "neoQueued": 3,
          "neoPhysicalConnecting": 4,
          "neoPhysicalConnected": 5,
          "neoWaitingForSession": 6,
          "neoSessionEstablished": 7,
          "neoStarted": 8,
          "neoSucceeded": 9,
          "neoFailed": 10
        }
      }
    },
    "status": "current",
    "description": "NEOperationStatus is an INTEGER used in order to indicate the status of a Network Element Operation by the following named values: neoNone(0) Network Element does not support this Operation neoIdle(1) no operation submitted since Agent Startup neoSubmit(2) used in order to submit an operation neoQueued(3) an operation is queued to the Connector neoPhysicalConnecting(4) attempting to connect the NE neoPhysicalConnected(5) NE has been connected neoWaitingForSession(6) attempting to establish a session with the NE neoSessionEstablished(7) NE session has been established neoStarted(8) NE performs the requested operation neoSucceeded(9) operation finished successful neoFailed(10) operation has failed If NEOperationStatus is either neoIdle(1), neoSucceeded(9) or neoFailed(10) an object of this type can be set to neoSubmit(2) in order to request the execution of a Network Element Operation. neoSubmit(2) is the only writeable value; it will never be reported on get requests. If NEOperationStatus is neoNone(0) this Network Element does not support the Network Element Operation. Therefore it cannot be set to neoSubmit(2)."
  },
  "RecognitionState": {
    "name": "RecognitionState",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "indeterminate": 0,
          "unrecognized": 1,
          "recognized": 2
        }
      }
    },
    "status": "current",
    "description": "RecognitionState is an INTEGER used in order to indicate the recognition state of an alarm by the following named values: indeterminate(0) unrecognized(1) recognized(2)"
  },
  "system": {
    "name": "system",
    "oid": "1.3.6.1.2.1.1",
    "class": "objectidentity"
  },
  "sysDescr": {
    "name": "sysDescr",
    "oid": "1.3.6.1.2.1.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "MDS=TMDSMIB2",
    "status": "current",
    "description": "A textual description of the entity. This value should include the full name and version identification of the system's hardware type, software operating-system, and networking software."
  },
  "sysObjectID": {
    "name": "sysObjectID",
    "oid": "1.3.6.1.2.1.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "MDS=TMDSMIB2",
    "status": "current",
    "description": "The vendor's authoritative identification of the network management subsystem contained in the entity. This value is allocated within the SMI enterprises subtree (1.3.6.1.4.1) and provides an easy and unambiguous means for determining `what kind of box' is being managed. For example, if vendor `Flintstones, Inc.' was assigned the subtree 1.3.6.1.4.1.4242, it could assign the identifier 1.3.6.1.4.1.4242.1.1 to its `Fred Router'."
  },
  "sysUpTime": {
    "name": "sysUpTime",
    "oid": "1.3.6.1.2.1.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "MDS=TMDSMIB2",
    "status": "current",
    "description": "The time (in hundredths of a second) since the network management portion of the system was last re-initialized."
  },
  "sysContact": {
    "name": "sysContact",
    "oid": "1.3.6.1.2.1.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSMIB2",
    "status": "current",
    "description": "The textual identification of the contact person for this managed node, together with information on how to contact this person. If no contact information is known, the value is the zero-length string."
  },
  "sysName": {
    "name": "sysName",
    "oid": "1.3.6.1.2.1.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSMIB2",
    "status": "current",
    "description": "An administratively-assigned name for this managed node. By convention, this is the node's fully-qualified domain name. If the name is unknown, the value is the zero-length string."
  },
  "sysLocation": {
    "name": "sysLocation",
    "oid": "1.3.6.1.2.1.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSMIB2",
    "status": "current",
    "description": "The physical location of this node (e.g., `telephone closet, 3rd floor'). If the location is unknown, the value is the zero-length string."
  },
  "mikom": {
    "name": "mikom",
    "oid": "1.3.6.1.4.1.6408",
    "class": "objectidentity",
    "status": "current",
    "description": "Root of Andrew Wireless Systems GmbH",
    "reference": "Name=Michael.Jelich@andrew.com"
  },
  "aimosPublic": {
    "name": "aimosPublic",
    "oid": "1.3.6.1.4.1.6408.201.1",
    "class": "objectidentity",
    "status": "current",
    "description": "Before an user is able to login to the A.I.M.O.S. SNMP Agent, some preconditions must be fulfilled, which are located beneath aimosPublic and explained below. This branch is accessible with SNMP community set to public. "
  },
  "aimosSystemAvailability": {
    "name": "aimosSystemAvailability",
    "oid": "1.3.6.1.4.1.6408.201.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SystemAvailability",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "MDS=TMDSPreLogin Tag=1",
    "status": "current",
    "description": "aimosSystemAvailability of type SystemAvailability gives information about system login possibility. The required value to be able to login is accessible(1). The first version of the A.I.M.O.S. SNMP Agent will report this value only. If the agent itself is not reachable by the SNMP protocol, then the manager will get a timeout error. "
  },
  "aimosCommunity": {
    "name": "aimosCommunity",
    "oid": "1.3.6.1.4.1.6408.201.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Community",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "MDS=TMDSPreLogin Tag=2",
    "status": "current",
    "description": "aimosCommunity of type Community issues a Community-Name required for the communication with the A.I.M.O.S. SNMP Agent. The Community public only allows access to the aimosPublic area. The validity of a Community-Name expires, when it has no longer been used for a certain time (s. aimosSessionTimeout) the logoff followed the login (s. aimosLoginState) the A.I.M.O.S. SNMP Agent Windows NT service is closed. Accessing the aimosCommunity object with the Community public (or an invalid Community-Name) returns a Community-Name with a random combination of characters. The object aimosCommunityLength determines the length of this character chain. Only Community-Names created in this way are accepted by the A.I.M.O.S. SNMP Agent. An access to aimosCommunity using a valid generated Community-Name (instead of public) provides no new name but the Community-Name used in the query. "
  },
  "aimosCommunityLength": {
    "name": "aimosCommunityLength",
    "oid": "1.3.6.1.4.1.6408.201.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 40
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 8,
        "format": "decimal"
      }
    },
    "units": "Character",
    "maxaccess": "read-write",
    "reference": "MDS=TMDSPreLogin Tag=3",
    "status": "current",
    "description": "aimosCommunityLength is an Unsigned32 value in the range of 1 to 40 which states the length of community names being generated on reading of aimosCommunity. The provider is allowed to adjust this value, in order to manipulate the foreseeableness of the community names and therefore increase or decrease the security level. Although this value is in the public area (and could be read from everyone), a modification can take place only in a valid Session, i.e., with a community name, to which a valid login took place. "
  },
  "aimosMinPasswordLength": {
    "name": "aimosMinPasswordLength",
    "oid": "1.3.6.1.4.1.6408.201.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 5,
            "max": 40
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 6,
        "format": "decimal"
      }
    },
    "units": "Character",
    "maxaccess": "read-write",
    "reference": "MDS=TMDSPreLogin Tag=4",
    "status": "current",
    "description": "aimosMinPasswordLength is an Unsigned32 value in the range of 5 to 40 which states the requirement for the length of passwords. The provider is allowed to adjust this value, in order to manipulate the password security level. Although this value is in the public area (and could be read from everyone), a modification can take place only in a valid Session, i.e., with a community name, to which a valid login took place. "
  },
  "aimosLogin": {
    "name": "aimosLogin",
    "oid": "1.3.6.1.4.1.6408.201.2",
    "class": "objectidentity",
    "status": "current",
    "description": "The aimosLogin branch carries the leafs for logging in as a specific user. As above-mentioned access to the branch aimosLogin is only permitted with SNMP community set to a value published by aimosCommunity. Login process is performed by the following actions: Get SNMP community string from aimosCommunity using public as community name. Use this community name in further SNMP requests. Set the user name in aimosLoginUserName (use the new community name!) Set the corresponding password in aimosLoginPassword expect in the case of the first login after software installation. In that case a text in the following format has to be used as password: nnnnnn xxxx xxxx xxxx xxxx xxxx aaaaaaa where n is the OrgID x is the license key a is the license extra data (may be omitted) Set aimosLoginState to connected(1). Check the current aimosLoginState. If login was successful, then it is set to connected(1) state. If the password is wrong, then it is set to refused(2) state. If passwordExpired(4) is returned, the password has expired. Password expiration =================== All passwords are valid for an amount of days. This period of time is specified in aimosPasswordExpirationPeriod. If a password was unchanged for more than the specified number of days, then the password expires. Existing Sessions are not affected by the password expiration. When a password has expired, no login can be made for the corresponding user account, until the user has defined a new password. The new password has to be assigned to aimosLoginPassword in order to complete the login process. If the new password is permissible then this password is stored in aimosUserPassword and has to be used in the future and aimosLoginState gets connected(1). The default password (start) is expired by default. I.e., if the default password is used for login, the user needs to advise a new password as mentioned above. Due to the minimum password length requirements (aimosMinPasswordLength) or the reusability of passwords (aimosPasswordReuseCounter) as well as the requirements on password security (aimosPasswordStandard) it may be possible, that the new password is not acceptable by the A.I.M.O.S. SNMP Agent. In that case, the password remains expired and the user is required to devise another password and repeat this procedure until aimosLoginState gets connected(1) or cancel the login process by setting aimosLoginState to disconnected(0) Logout ====== Set aimosLoginState to disconnected(0) in order to log out. After log out the community name is invalid and therefore aimosLoginState gets canceled(3). If you need to log in again, then you have to request for a new community name by the steps described above."
  },
  "aimosLoginUserName": {
    "name": "aimosLoginUserName",
    "oid": "1.3.6.1.4.1.6408.201.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "UserName",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSLogin Tag=1",
    "status": "current",
    "description": "aimosLoginUserName of type UserName is provided to record the username for login purposes. The username is a predefined user account or a user account created by the provider. When setting the Username the following SNMP ErrorStatus-values may be returned: noAccess(6) either the Organisation to which the Username belongs is deactivated (via aimosOrgActive) or the user account itself is deactivated (via aimosUserActive) wrongLength(8) the TextualConvention of this object specifies, that Usernames must be 1 to 40 characters long. If this condition is not fulfilled, the Username assignment is answered by this SNMP ErrorStatus. wrongValue(10) the Username is unknown authorizationError(16) an invalid Community-Name was used notWritable(17) after a successful login the aimosLoginUserName can no longer be changed "
  },
  "aimosLoginPassword": {
    "name": "aimosLoginPassword",
    "oid": "1.3.6.1.4.1.6408.201.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "PasswordString",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSLogin Tag=2",
    "status": "current",
    "description": "aimosLoginPassword of type PasswordString serves to record the password of the user. Here, the user must enter the password assigned to the user account by one of the following three processes: A password can be assigned when a user account is created. If no password was explicitly assigned during the creation of the user account, the implicitly assigned default password is start. In such a case this password must uniquely be used for the first login. Passwords expire after a certain interval (see aimosPasswordExpirationPeriod). If a password is expired, the user has to define a new one. A password assignment may result in one of the following SNMP ErrorStatus values: wrongLength(8) the TextualConvention of this object specifies the length of a password to range from 5 to 40 characters. The Provider may specify a higher minimum length via the object aimosMinPasswordLength. If one of the two length requirements is not kept, the password assignment will be denied with this SNMP ErrorStatus. wrongEncoding(9) the object aimosPasswordStandard specifies which characters may be used for a password. If this requirement is not kept, the password assignment will be denied with this SNMP ErrorStatus. wrongValue(10) this SNMP ErrorStatus message follows either after a trial to assign the standard password start as new password or when the password for the first login after software installation is an invalid OrgID authorizationError(16) an invalid Community-Name was used notWritable(17) after a successful login the aimosLoginPassword can no longer be changed "
  },
  "aimosLoginState": {
    "name": "aimosLoginState",
    "oid": "1.3.6.1.4.1.6408.201.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "LoginState",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSLogin Tag=3",
    "status": "current",
    "description": "The aimosLoginState of type LoginState is used in order to accomplish the login process, as its value is set to connected(1). If its value is set to disconnected(0), then the user logs off and the community name is invalidated. Therefore it cannot be reused. In addition it serves to indicate the status of login success. To any time this object may emit one of the following values: disconnected(0) if access to the MIB (except the branches aimosPublic and aimosLogin) is not allowed with the community name currently used connected(1) if login was successful and access is permitted to the entire MIB refused(2) if the password is wrong. Enter the correct password in aimosLoginPassword and try to set aimosLoginState to connected(1) again canceled(3) if the community name is invalidated by setting aimosLoginState to disconnected(0) or due to missing traffic for a certain period of time passwordExpired(4) if password is expired. Setting the LoginState may result in one of the following SNMP ErrorStatus-values noAccess(6) This SNMP ErrorStatus will be returned by the A.I.M.O.S. SNMP Agent if a login failed more than three times in a row due to a wrong password. When such 'hacking' is discovered, the account will be locked for a period of 30 minutes. wrongValue(10) Only the two values disconnected(0) and connected(1) may be assigned. All other values are only important for read access. inconsistentValue(12) This SNMP ErrorStatus will be returned by the A.I.M.O.S. SNMP Agent if an expired password is used to try and set the aimosLoginState to connected(1). In such a case, however, the A.I.M.O.S. SNMP Agent expects that either the new password is assigned by aimosLoginPassword or a logout by assigning aimosLoginState disconnected(0). authorizationError(16) An invalid Community-Name was used. "
  },
  "aimosLoginOrgID": {
    "name": "aimosLoginOrgID",
    "oid": "1.3.6.1.4.1.6408.201.2.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OrgID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "MDS=TMDSLogin Tag=4",
    "status": "current",
    "description": "aimosLoginOrgID of type OrgID contains the organisation ID of the organisation of the user after successful login."
  },
  "aimosLoginPhoneBookID": {
    "name": "aimosLoginPhoneBookID",
    "oid": "1.3.6.1.4.1.6408.201.2.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSLogin Tag=5",
    "status": "current",
    "description": "After a successful login the AIMOS SNMP Agent attempts to recognize the SNMP Managers aimosLoginPhonebookID by means of its IP Address. In case the aimosPhoneBookTable contains a unique representation if this IP Address the aimosLoginPhoneBookID of type Unsigned32 contains the appropriate aimosPhoneBookID. If not this value is 0, In any case this value can be set to (overridden with) a valid aimosLoginPhoneBookID. The value here is used in two cases: 1. starting an Alarm List Resync (see description to aimosAlarmListResync) 2. walking the aimosAlarmListTable (see its description for further details)"
  },
  "aimosObjects": {
    "name": "aimosObjects",
    "oid": "1.3.6.1.4.1.6408.201.3",
    "class": "objectidentity",
    "status": "current",
    "description": "The branch aimosObjects is accessible only after a successful login.",
    "reference": "MDS=TMDSDefault MIS=TMISDefault"
  },
  "aimosSystemManagement": {
    "name": "aimosSystemManagement",
    "oid": "1.3.6.1.4.1.6408.201.3.1",
    "class": "objectidentity",
    "status": "current",
    "description": "In this section, system-wide parameters are described. Only the provider is responsible for and allowed to change most of the contents of the listed MIB branch. Changes, which are made here may have sometimes crucial influence on the behaviour of the A.I.M.O.S. SNMP Agent. Thus be careful with changes in this section. ",
    "reference": "DB:SMNG"
  },
  "aimosMIBVersion": {
    "name": "aimosMIBVersion",
    "oid": "1.3.6.1.4.1.6408.201.3.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Version",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "MDS=TMDSSystemParams Tag=1",
    "status": "current",
    "description": "This object is a read-only value of type Version representing the version of the MIB file."
  },
  "aimosAgentVersion": {
    "name": "aimosAgentVersion",
    "oid": "1.3.6.1.4.1.6408.201.3.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Version",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "MDS=TMDSSystemParams Tag=2",
    "status": "current",
    "description": "This object is a read-only value of type Version showing the software version of the A.I.M.O.S. SNMP Agent."
  },
  "aimosOMCConnectorVersion": {
    "name": "aimosOMCConnectorVersion",
    "oid": "1.3.6.1.4.1.6408.201.3.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Version",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "MDS=TMDSSystemParams Tag=3",
    "status": "current",
    "description": "This object is a read-only value of type Version displaying the software version of the OMC Connector."
  },
  "aimosTrapOID": {
    "name": "aimosTrapOID",
    "oid": "1.3.6.1.4.1.6408.201.3.1.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "This object of type OBJECT IDENTIFIER references the OID of the corresponding trap type listed in aimosNotifications, if aimosPhoneBookInterfaceType is set to ifAimosObsolete(4). The entry is accessible in notifications only. If aimosPhoneBookInterfaceType is not set to ifAimosObsolete(4), then the object snmpTrapOID is used in the notifications instead."
  },
  "aimosOMCSDN": {
    "name": "aimosOMCSDN",
    "oid": "1.3.6.1.4.1.6408.201.3.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "SDN",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSSystemParams Tag=5",
    "status": "current",
    "description": "This object of type SDN is the system distinguished name of the OMC which is designated to uniquely identify this OMC within an organisation. E.g.: The third OMC in the network supervision may have an SDN of OMC=3. Changing the class name (preceding the equality mark) affect only the current organisation, while changing the instance number (after the equality mark) will affect each organisation. That's the reason, why TelCo's must not change the instance number."
  },
  "aimosOMCName": {
    "name": "aimosOMCName",
    "oid": "1.3.6.1.4.1.6408.201.3.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSSystemParams Tag=6",
    "status": "current",
    "description": "This object of type Text with up to 40 characters is provided to assign a free definable name for the OMC, e.g. 'A.I.M.O.S. OMC - North'. It makes only sense if you have more than one A.I.M.O.S. OMC. Changes, which are made here, affect all organisations. That's why TelCo's are not allowed to make any changes here. "
  },
  "aimosTimeFormat": {
    "name": "aimosTimeFormat",
    "oid": "1.3.6.1.4.1.6408.201.3.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeFormat",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "localTimeFormat",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSSystemParams Tag=7",
    "status": "current",
    "description": "This object of type TimeFormat determines of how date and time values of type VariableTime (e.g. aimosAlarmListEventTime) will be published by the SNMP Agent. This would be either UTCTime or LocalTime. The latter one is the default setting. Changes made here affect only the current organisation."
  },
  "aimosPasswordExpirationPeriod": {
    "name": "aimosPasswordExpirationPeriod",
    "oid": "1.3.6.1.4.1.6408.201.3.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 365
          }
        ]
      }
    },
    "units": "days",
    "maxaccess": "read-write",
    "reference": "MDS=TMDSSystemParams Tag=8",
    "status": "current",
    "description": "This object of type Unsigned32 within a range from 0 to 365 days decides the period of days after that passwords will expire. A value of 0 indicates, that the password will never expire; use this value in order to disable the password expiration facility. If a password is expired, then login is prevented by the A.I.M.O.S. SNMP Agent until a new password is assigned to aimosLoginPassword. Changes, which are made here, affect all organisations. That's why TelCo's are not allowed to make any changes here. "
  },
  "aimosPasswordReuseCounter": {
    "name": "aimosPasswordReuseCounter",
    "oid": "1.3.6.1.4.1.6408.201.3.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSSystemParams Tag=9",
    "status": "current",
    "description": "This object of type Unsigned32 with a range from 1 to 255 denotes the number of distinguished passwords, that must be used, before a specific one can be repeatedly used. A value of 3 indicates, that the 3 recent used passwords must be different to the new one. I.e., the user may have a list of 4 passwords used in circulation. Changes, which are made here, affect all organisations. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosPasswordStandard": {
    "name": "aimosPasswordStandard",
    "oid": "1.3.6.1.4.1.6408.201.3.1.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "PasswordStandard",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSSystemParams Tag=10",
    "status": "current",
    "description": "This object of type PasswordStandard determines if any numeric or special character is required in valid password creation. Existing passwords are not affected by changes made here. Changes, which are made here, affect all organisations. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosSessionTimeout": {
    "name": "aimosSessionTimeout",
    "oid": "1.3.6.1.4.1.6408.201.3.1.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "WeekMinutes",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 10,
        "format": "decimal"
      }
    },
    "units": "minutes",
    "maxaccess": "read-write",
    "reference": "MDS=TMDSSystemParams Tag=11",
    "status": "current",
    "description": "A Session is rejected after a certain time of inactivity. This object provides the means to adjust this period in minutes. Set this object to zero in order to disable the idle timeout facility. Changes, which are made here, affect all organisations. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosOMCConnectorAddress": {
    "name": "aimosOMCConnectorAddress",
    "oid": "1.3.6.1.4.1.6408.201.3.1.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IPAddressAndPort",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSSystemParams Tag=12",
    "status": "current",
    "description": "This object contains the IP address and the port that serves to access the OMC Connector. This information is required for creating Master Controllers. The value of this object is pre-set with the IP address determined by the A.I.M.O.S. SNMP Agent and the port set via the OMC Connector Setup. If the PC on which the A.I.M.O.S. SNMP Agent and the OMC Connector are running has several IP addresses, the selection made by the A.I.M.O.S. SNMP Agent might be wrong. In such a case the IP address can be changed. Since the port number is derived from the OMC Connector Setup, it cannot be changed, here. It should be left out when the IP address is changed. "
  },
  "aimosCurrentTime": {
    "name": "aimosCurrentTime",
    "oid": "1.3.6.1.4.1.6408.201.3.1.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "MDS=TMDSSystemParams Tag=13",
    "status": "current",
    "description": "This object of type VariableTime is used in heartbeat notifications and states the heartbeat notifications event time. This object also states the current time of the A.I.M.O.S. SNMP Agent."
  },
  "aimosUserManagement": {
    "name": "aimosUserManagement",
    "oid": "1.3.6.1.4.1.6408.201.3.2",
    "class": "objectidentity",
    "status": "current",
    "description": "The user management contains all access authorisation related data of organisations and its user accounts. Each organisation may have user accounts. An user account is required in order to get access to the A.I.M.O.S. SNMP Agent. An user account having the required rights can be used in order to create further user accounts with similar or less access rights. Read and write access rights are defined per area and are combined in 'roles'. The access rights of a user account are determined by assigning it to a certain role. The system is shipped with predefined organisations, user accounts, roles and its right assignments. Nevertheless the provider is responsible for the user management. "
  },
  "aimosOrgTable": {
    "name": "aimosOrgTable",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "DB:GRP",
    "status": "current",
    "description": "Informations about organizations. A organization is a company having a relationship with A.I.M.O.S.. Relationship can be one of the following: - manufacturer - provider - telco There is always exact one manufacturer and one provider. It's up to the provider to complete this table with one entry for each mobile network provider (telco) using his A.I.M.O.S. service. Users with aimosOrgLevel=telco are not allowed to modify contents of this table except of aimosOrgText and aimosOrgActiveWorkShiftID Insert rows: set aimosOrgName.<MIKOM provided OrgID> to the organisation's name Delete rows: set aimosOrgName.<aimosOrgID> to 'delete' (without quotation marks). TelCo's are not allowed to insert or delete rows."
  },
  "aimosOrgEntry": {
    "name": "aimosOrgEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosOrgID",
        "implied": 0
      }
    ],
    "reference": "MDS=TMDSOrgTable MIS=TMISOrgTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosOrgID": {
    "name": "aimosOrgID",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OrgID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is a Mikom provided world-wide unique identification number of an organisation of type OrgID."
  },
  "aimosOrgName": {
    "name": "aimosOrgName",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object offers the possibility to designate the organisation mentioned in aimosOrgID. Set this value to 'delete' (without quotation marks) in order to delete this table entry."
  },
  "aimosOrgText": {
    "name": "aimosOrgText",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object gives each organisation the possibility to configure a piece of text."
  },
  "aimosOrgLevel": {
    "name": "aimosOrgLevel",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OrgLevel",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "telco",
        "format": "enum"
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type OrgLevel denotes the role of the organisation. Possible values are manufacturer(0), provider(1) and telco(2)."
  },
  "aimosOrgMCC": {
    "name": "aimosOrgMCC",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MCC",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type MCC is the mobile country code of a TelCo organisation. Manufacturer and provider have the MCC of its country."
  },
  "aimosOrgMNC": {
    "name": "aimosOrgMNC",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MNC",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type MNC is the mobile network code of a TelCo organisation. Manufacturer and provider have a MNC of 0 (zero)."
  },
  "aimosOrgActive": {
    "name": "aimosOrgActive",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "true",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object sets the activity state of an organisation. An organisation account is activated by writing true and deactivated by writing false to this object. Users of a deactivated organisations are not allowed to login. Existing Sessions are not affected by organisation deactivation."
  },
  "aimosOrgDNSeparator": {
    "name": "aimosOrgDNSeparator",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DistinguishedNameSeparator",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "=",
        "format": "string"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type DistinguishedNameSeparator separates the Distinguished Names into object type and object instance. E.g.: 3GPP recommends equality mark (RU=17) Nokia NetAct recommends hyphen (RU-17) Factory setting is an equality mark (=)."
  },
  "aimosOrgDNConcatenator": {
    "name": "aimosOrgDNConcatenator",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DistinguishedNameHierarchySymbol",
      "class": "type"
    },
    "default": {
      "default": {
        "value": ",",
        "format": "string"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type DistinguishedNameHierarchySymbol divides System Distinguished Names in its parts, the Relative Distinguished Names. E.g.: 3GPP recommends comma (OMC=1,MC=4,SRMU=17) Nokia NetAct recommends slash mark (OMC-1/MC-4/SRMU-17) Factory setting is a comma (,)."
  },
  "aimosOrgCCConcatenator": {
    "name": "aimosOrgCCConcatenator",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CableCodeConcatenator",
      "class": "type"
    },
    "default": {
      "default": {
        "value": ",",
        "format": "string"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type CableCodeConcatenator is used in aimosAlarmListCustomerCableInfo for concatenation of Cable Codes. Mikom default is a comma."
  },
  "aimosOrgActiveWorkShiftID": {
    "name": "aimosOrgActiveWorkShiftID",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object denotes the active work shift for delegation of alarms. The description for aimosWorkShiftTable contains more about work shifts."
  },
  "aimosOrgNextUserID": {
    "name": "aimosOrgNextUserID",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Provides the aimosUserID to be used in creating a new user account (aimosUserTable)."
  },
  "aimosOrgNextWorkShiftID": {
    "name": "aimosOrgNextWorkShiftID",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Provides the aimosWorkShiftID to be used in creating a new work shift (aimosWorkShiftTable)."
  },
  "aimosOrgNextAlarmRecipientListID": {
    "name": "aimosOrgNextAlarmRecipientListID",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Provides the aimosAlarmRecipientListID to be used in creating a new alarm recipient list (aimosAlarmRecipientListTable)."
  },
  "aimosOrgNextPhoneBookID": {
    "name": "aimosOrgNextPhoneBookID",
    "oid": "1.3.6.1.4.1.6408.201.3.2.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Provides the aimosPhoneBookID to be used in creating a new phone book entry (aimosPhoneBookTable)."
  },
  "aimosUserTable": {
    "name": "aimosUserTable",
    "oid": "1.3.6.1.4.1.6408.201.3.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "DB:USR",
    "status": "current",
    "description": "This table holds user related data. A user is a employee of a organization having an login account. This table is indexed by aimosOrgID and aimosUserID. Nevertheless aimosUserID is a unique number within one OMC aimosOrgID is included in indexing because of access rights. Insert rows: set aimosUserName.<aimosOrgID>.<value of aimosOrgNextUserID> to user's name Delete rows: set aimosUserName.<aimosOrgID>.<aimosUserID> to 'delete' (without quotation marks)"
  },
  "aimosUserEntry": {
    "name": "aimosUserEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosOrgID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosUserID",
        "implied": 0
      }
    ],
    "reference": "MDS=TMDSUserTable MIS=TMISUserTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosUserID": {
    "name": "aimosUserID",
    "oid": "1.3.6.1.4.1.6408.201.3.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is numbered consecutively. aimosOrgNextUserID tells you the value to be used in row/user creation."
  },
  "aimosUserName": {
    "name": "aimosUserName",
    "oid": "1.3.6.1.4.1.6408.201.3.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UserName",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type UserName hosts the users name. A user name can be used once in the OMC. Therefore it is advisable to prefix the user name with an organisation sign (e.g. 'D1 - Meier'). Changing the user name will reset the aimosUserPassword to the default password (start). Setting this value to delete deletes this table entry (the user account)."
  },
  "aimosUserPassword": {
    "name": "aimosUserPassword",
    "oid": "1.3.6.1.4.1.6408.201.3.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PasswordString",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "start",
        "format": "string"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type PasswordString is the password for an user account required in order to login into the OMC. The default password is start. During the first login attempt using the default password the user needs to change the password. Each user is allowed to change its own password by means of set aimosLoginPassword (if aimosLoginState is refused) or set this object (if aimosLoginState is connected) to the new password. The user does not need to have readWrite(2) access to the RightArea administrationOMCAccounts(500) in order to change its own password. This access right is required in order to set the password of any user account."
  },
  "aimosUserText": {
    "name": "aimosUserText",
    "oid": "1.3.6.1.4.1.6408.201.3.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text gives the possibility to configure a piece of text."
  },
  "aimosUserRoleID": {
    "name": "aimosUserRoleID",
    "oid": "1.3.6.1.4.1.6408.201.3.2.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "With this object a certain role is assigned to a user account. Thus, via the table aimosRoleRightTable the User is granted the rights that are assigned to this role. The default value (0) is an illegal role ID, thus the user is by default not assigned to any role and couldn't access the MIB except the public and login area."
  },
  "aimosUserActive": {
    "name": "aimosUserActive",
    "oid": "1.3.6.1.4.1.6408.201.3.2.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "true",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object activates and deactivates an user account. If set to true the account is active and the user is able to log in, otherwise (false) no log in is possible. Existing Sessions are not affected by user deactivation."
  },
  "aimosUserPasswordAge": {
    "name": "aimosUserPasswordAge",
    "oid": "1.3.6.1.4.1.6408.201.3.2.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object states the time when the password was most recently changed."
  },
  "aimosNextRoleID": {
    "name": "aimosNextRoleID",
    "oid": "1.3.6.1.4.1.6408.201.3.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "MDS=TMDSNextID Tag=1",
    "status": "current",
    "description": "This object is used in order to produce new roles within the aimosRoleTable. Its value has to be used as the identifier (aimosRoleID) of the new role."
  },
  "aimosRoleTable": {
    "name": "aimosRoleTable",
    "oid": "1.3.6.1.4.1.6408.201.3.2.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Access control is made using roles. A role is a synonym for a certain combination of read and write access rights (AccessRight) to certain areas (RightArea). A role could be called e.g. 'admin' or 'alarm manager'. This table, indexed by aimosRoleID, contains a list of that roles. By assigning a role to a User via aimosUserRoleID, the read and write access rights connected to this role will be granted to the user account. Insert rows: set aimosRoleOwner.<value of aimosNextRoleID> to the aimosOrgID of the role's owner Delete rows: set aimosRoleName.<aimosRoleID> to 'delete' (without quotation marks) TelCo's are not allowed to insert or delete rows."
  },
  "aimosRoleEntry": {
    "name": "aimosRoleEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.2.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosRoleID",
        "implied": 0
      }
    ],
    "reference": "MDS=TMDSRoleTable MIS=TMISRoleTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosRoleID": {
    "name": "aimosRoleID",
    "oid": "1.3.6.1.4.1.6408.201.3.2.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is numbered consecutively. Zero value is not allowed. aimosNextRoleID tells you the ID to be used in row creation."
  },
  "aimosRoleName": {
    "name": "aimosRoleName",
    "oid": "1.3.6.1.4.1.6408.201.3.2.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object contains a name for the role with up to 40 characters. The table entry is deleted by setting this value to delete. "
  },
  "aimosRoleRightTable": {
    "name": "aimosRoleRightTable",
    "oid": "1.3.6.1.4.1.6408.201.3.2.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Access control is made using roles. A role is a synonym for a certain combination of read and write access rights (AccessRight) to certain areas (RightArea). A role could be called e.g. 'admin' or 'alarm manager'. In this table, indexed by aimosRoleID and aimosRoleRightArea, the RightArea's of the Controller are assigned to the roles listed in the aimosRoleTable. Insert rows: set aimosRoleRightAccess.<aimosRoleID>.<aimosRoleRight> to readOnly/ readWrite Delete rows: set aimosRoleRightAccess.<aimosRoleID>.<aimosRoleRight> to noAccess TelCo's are not allowed to insert or delete rows."
  },
  "aimosRoleRightEntry": {
    "name": "aimosRoleRightEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.2.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosRoleID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosRoleRightArea",
        "implied": 0
      }
    ],
    "reference": "MDS=TMDSRoleRightTable MIS=TMISRoleRightTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosRoleRightArea": {
    "name": "aimosRoleRightArea",
    "oid": "1.3.6.1.4.1.6408.201.3.2.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RightArea",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type RightArea determines the right area arised from the controller software to be attached to a particular role identified by the index object aimosRoleID."
  },
  "aimosRoleRightAccess": {
    "name": "aimosRoleRightAccess",
    "oid": "1.3.6.1.4.1.6408.201.3.2.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AccessRight",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type AccessRight determines whether read, write or no access to a specific RightArea has to be assigned to the affected role. Write access includes read access. Setting this value to noAccess deletes this entry. "
  },
  "aimosInitiallyMasterLoginUserName": {
    "name": "aimosInitiallyMasterLoginUserName",
    "oid": "1.3.6.1.4.1.6408.201.3.2.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSSystemParams Tag=1001",
    "status": "current",
    "description": "When a new Master Controller is created by making a new entry into the table aimosMasterUnitTable, the A.I.M.O.S. SNMP Agent requires a pre-setting for the object aimosMasterLoginUserName. This pre-setting is provided by this object. It is of the UserName type and must consist at least of one character and 20 characters at the most. The pre-setting is Owner. Changing the aimosInitiallyMasterLoginUserName has no effect on already existing user accounts on the Master Units."
  },
  "aimosInitiallyMasterLoginPassword": {
    "name": "aimosInitiallyMasterLoginPassword",
    "oid": "1.3.6.1.4.1.6408.201.3.2.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "ControllerPassword",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSSystemParams Tag=1002",
    "status": "current",
    "description": "When a new Master Controller is created by making a new entry into the table aimosMasterUnitTable, the A.I.M.O.S. SNMP Agent requires a pre-setting for the object aimosMasterLoginPassword. This pre-setting is provided by this object. It is of the ControllerPassword type and must consist of small and capital letters (a-z) as well as numbers. Other characters are not allowed. The password can be read, but the A.I.M.O.S. SNMP Agent only displays star marks (*) instead of the actual password. The pre-setting is Apwd4own. Changing the aimosInitiallyMasterLoginPassword has no effect on already existing user accounts on the Master Units."
  },
  "aimosBandManagement": {
    "name": "aimosBandManagement",
    "oid": "1.3.6.1.4.1.6408.201.3.3",
    "class": "objectidentity",
    "status": "current",
    "description": "Band Management is provided for allocation of radio frequencies to mobile network companies (TelCo's). "
  },
  "aimosBandTable": {
    "name": "aimosBandTable",
    "oid": "1.3.6.1.4.1.6408.201.3.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "DB:RFB",
    "status": "current",
    "description": "This table, indexed by aimosBandID, configures the characteristics of each RF band. This set up is done by Mikom. Insert rows: must only be done by Mikom Delete rows: must only be done by Mikom"
  },
  "aimosBandEntry": {
    "name": "aimosBandEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosBandID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISBandTable MDS=TMDSBandTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosBandID": {
    "name": "aimosBandID",
    "oid": "1.3.6.1.4.1.6408.201.3.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "NetworkStandard",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type NetworkStandard determines the network standard of the band to which this entry belongs to."
  },
  "aimosBandDLmin": {
    "name": "aimosBandDLmin",
    "oid": "1.3.6.1.4.1.6408.201.3.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "FrequencyRange",
      "class": "type"
    },
    "units": "kHz",
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type FrequencyRange is the lowest DL frequency (kHz) possible in a specific band."
  },
  "aimosBandDLmax": {
    "name": "aimosBandDLmax",
    "oid": "1.3.6.1.4.1.6408.201.3.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "FrequencyRange",
      "class": "type"
    },
    "units": "kHz",
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type FrequencyRange is the highest DL frequency (kHz) possible in a specific band."
  },
  "aimosBandULFrequencyGap": {
    "name": "aimosBandULFrequencyGap",
    "oid": "1.3.6.1.4.1.6408.201.3.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 10000,
            "max": 95000
          }
        ]
      }
    },
    "units": "kHz",
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type Unsigned32 with a range from 10000 to 95000 represents the frequency gap in kHz between UL and DL. Uplink frequency = downlink frequency - gap."
  },
  "aimosBandULChannelGap": {
    "name": "aimosBandULChannelGap",
    "oid": "1.3.6.1.4.1.6408.201.3.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ARFCN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type ARFCN represents the ARFCN gap between UL and DL. Uplink ARFCN = downlink ARFCN - gap."
  },
  "aimosBandCalculationTable": {
    "name": "aimosBandCalculationTable",
    "oid": "1.3.6.1.4.1.6408.201.3.3.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "DB:RFBC",
    "status": "current",
    "description": "Frequency calculation for any ARFCN can be done by the following formula: fDL(ARFCN) = fStart + fBandWidth * (ARFCN-aOffset) This table contains the information required to calculate the frequency for any ARFCN for any network band. E.g.: the formula for Extended GSM900 is fDL(ARFCN) = 935000 + 200 * (ARFCN - 1024) Determination of frequency for ARFCN 1023 in E-GSM900 is realised by the following formula: fDL(1023) = 935.000 + 200 * (1023 - 1024) = 934.800 kHz Insert rows: must only be done by Mikom Delete rows: must only be done by Mikom"
  },
  "aimosBandCalculationEntry": {
    "name": "aimosBandCalculationEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.3.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosBandID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosBandCalculationID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISBandCalculationTable MDS=TMDSBandCalculationTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosBandCalculationID": {
    "name": "aimosBandCalculationID",
    "oid": "1.3.6.1.4.1.6408.201.3.3.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 5
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Enumerated consecutively."
  },
  "aimosBandCalculationMin": {
    "name": "aimosBandCalculationMin",
    "oid": "1.3.6.1.4.1.6408.201.3.3.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ARFCN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "First ARFCN for wich the aimosBandCalculationFormula-leafs are valid."
  },
  "aimosBandCalculationMax": {
    "name": "aimosBandCalculationMax",
    "oid": "1.3.6.1.4.1.6408.201.3.3.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ARFCN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Last ARFCN for wich the aimosBandCalculationFormula-leafs are valid."
  },
  "aimosBandCalculationFormulaStart": {
    "name": "aimosBandCalculationFormulaStart",
    "oid": "1.3.6.1.4.1.6408.201.3.3.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "FrequencyRange",
      "class": "type"
    },
    "units": "kHz",
    "maxaccess": "read-only",
    "status": "current",
    "description": "You can calculate the frequency for any ARFCN with the following formula: fDL(ARFCN) = aimosBandCalculationFormulaStart + aimosBandCalculationFormulaGap * (ARFCN-aimosBandCalculationFormulaOffset) Example: formula for Extended GSM 900 is 935000 + 200 * (ARFCN - 1024) Determine frequency of ARFCN 1023 in E-GSM900: fDL(1023) = 935.000 + 200 * (1023 - 1024) = 934.800 kHz In this example aimosBandCalculationFormulaStart must have the value 935000."
  },
  "aimosBandCalculationFormulaBandWidth": {
    "name": "aimosBandCalculationFormulaBandWidth",
    "oid": "1.3.6.1.4.1.6408.201.3.3.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 25,
            "max": 2500
          }
        ]
      }
    },
    "units": "kHz",
    "maxaccess": "read-only",
    "status": "current",
    "description": "You can calculate the frequency for any ARFCN with the following formula: fDL(ARFCN) = aimosBandCalculationFormulaStart + aimosBandCalculationFormulaGap * (ARFCN-aimosBandCalculationFormulaOffset) Example: formula for Extended GSM 900 is 935000 + 200 * (ARFCN - 1024) Determine frequency of ARFCN 1023 in E-GSM900: fDL(1023) = 935.000 + 200 * (1023 - 1024) = 934.800 kHz In this example aimosBandCalculationFormulaGap must have the value 200."
  },
  "aimosBandCalculationFormulaOffset": {
    "name": "aimosBandCalculationFormulaOffset",
    "oid": "1.3.6.1.4.1.6408.201.3.3.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ARFCN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "You can calculate the frequency for any ARFCN with the following formula: fDL(ARFCN) = aimosBandCalculationFormulaStart + aimosBandCalculationFormulaGap * (ARFCN-aimosBandCalculationFormulaOffset) Example: formula for Extended GSM 900 is 935000 + 200 * (ARFCN - 1024) Determine frequency of ARFCN 1023 in E-GSM900: fDL(1023) = 935.000 + 200 * (1023 - 1024) = 934.800 kHz In this example aimosBandCalculationFormulaOffset must have the value 1024."
  },
  "aimosLicenseeTable": {
    "name": "aimosLicenseeTable",
    "oid": "1.3.6.1.4.1.6408.201.3.3.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "DB:MNCC",
    "status": "current",
    "description": "This table is indexed by aimosOrgID, aimosBandID and aimosLicenseeFirstARFCN and shows information about frequencies licensed by Mobile Network Providers. Insert rows: set aimosLicenseeARFCNCount.<aimosOrgID>.<aimosBandID>. <aimosLicenseeFirstARFCN> to the number of channels in band aimosBandID starting with aimosLicenseeFirstARFCN used by aimosOrgID Delete rows: set aimosLicenseeARFCNCount.<aimosOrgID>.<aimosBandID>. <aimosLicenseeFirstARFCN> to zero TelCo's are not allowed to insert or delete rows."
  },
  "aimosLicenseeEntry": {
    "name": "aimosLicenseeEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.3.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosOrgID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosBandID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosLicenseeFirstARFCN",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISLicenseeTable MDS=TMDSLicenseeTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosLicenseeFirstARFCN": {
    "name": "aimosLicenseeFirstARFCN",
    "oid": "1.3.6.1.4.1.6408.201.3.3.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ARFCN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type ARFCN is the first ARFCN of an licensed interval. The size of an ARFCN interval is specified by aimosLicenseeARFCNCount."
  },
  "aimosLicenseeARFCNCount": {
    "name": "aimosLicenseeARFCNCount",
    "oid": "1.3.6.1.4.1.6408.201.3.3.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ARFCN",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "this object of type ARFCN represents the size of each ARFCN interval. The last ARFCN of an ARFCN interval is calculated by the following formula: last ARFCN = aimosLicenseeFirstARFCN+aimosLicenseeARFCNCount-1. Set this value to 0 (zero) to delete this table entry. "
  },
  "aimosFrequencyTable": {
    "name": "aimosFrequencyTable",
    "oid": "1.3.6.1.4.1.6408.201.3.3.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "DB:-",
    "status": "current",
    "description": "This table is indexed by aimosBandID and aimosFrequencyARFCN and tells you per radio frequency channel number its radio frequency and licensee (identified by its aimosOrgID). Insert rows: not applicable (calculated by contents of aimosBandCalculationTable) Delete rows: not applicable (calculated by contents of aimosBandCalculationTable) "
  },
  "aimosFrequencyEntry": {
    "name": "aimosFrequencyEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.3.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosBandID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosFrequencyARFCN",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosFrequencyARFCN": {
    "name": "aimosFrequencyARFCN",
    "oid": "1.3.6.1.4.1.6408.201.3.3.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ARFCN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type ARFCN is the index of this table."
  },
  "aimosFrequencyValue": {
    "name": "aimosFrequencyValue",
    "oid": "1.3.6.1.4.1.6408.201.3.3.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "FrequencyRange",
      "class": "type"
    },
    "units": "kHz",
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type FrequencyRange returns the frequency in kHz for aimosFrequencyARFCN."
  },
  "aimosFrequencyOwner": {
    "name": "aimosFrequencyOwner",
    "oid": "1.3.6.1.4.1.6408.201.3.3.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OrgID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type OrgID returns the organisation ID of the TelCo owning the license for this frequency/ARFCN."
  },
  "aimosARFCNTable": {
    "name": "aimosARFCNTable",
    "oid": "1.3.6.1.4.1.6408.201.3.3.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "DB:-",
    "status": "current",
    "description": "This table is indexed by aimosBandID and aimosARFCNFrequency and tells you per radio frequency its radio frequency channel number and licensee (identified by its aimosOrgID). Insert rows: not applicable (calculated by contents of aimosBandCalculationTable) Delete rows: not applicable (calculated by contents of aimosBandCalculationTable) "
  },
  "aimosARFCNEntry": {
    "name": "aimosARFCNEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.3.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosBandID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosARFCNFrequency",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosARFCNFrequency": {
    "name": "aimosARFCNFrequency",
    "oid": "1.3.6.1.4.1.6408.201.3.3.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "FrequencyRange",
      "class": "type"
    },
    "units": "kHz",
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type FrequencyRange is the index (kHz) of this table."
  },
  "aimosARFCNValue": {
    "name": "aimosARFCNValue",
    "oid": "1.3.6.1.4.1.6408.201.3.3.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ARFCN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type ARFCN returns the ARFCN that corresponds to aimosARFCNFrequency."
  },
  "aimosARFCNOwner": {
    "name": "aimosARFCNOwner",
    "oid": "1.3.6.1.4.1.6408.201.3.3.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OrgID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type OrgID returns the organisation ID of the TelCo owning the license for this ARFCN/frequency."
  },
  "aimosAlarmManagement": {
    "name": "aimosAlarmManagement",
    "oid": "1.3.6.1.4.1.6408.201.3.4",
    "class": "objectidentity",
    "status": "current",
    "description": "This is a short introduction in order to help you understand how the A.I.M.O.S. SNMP Agent realises SNMP alarm forwarding. When the A.I.M.O.S. SNMP Agent is informed about a failure in the monitored system, it must find out which SNMP Managers will have to get an alarm message. Each SNMP Manager who is to get the alarm message, requires an entry in the aimosPhoneBookTable. This entry contains the IP address used for alarm forwarding. Prior to the explanation on how the A.I.M.O.S. SNMP Agent determines the list of phone book entries which have to be informed about an active alarm, the three aspects with a decisive influence on this determination will be explained in the following: Alarms with similar characteristics will be put together in alarm groups. The alarm groups defined in the system are listed in the table aimosAlarmGroupTable. Via aimosAlarmAlarmGroupID each alarm is assigned to exactly one alarm group. The Provider can create work shifts and determine various alarm distribution rules in dependence of each work shift. The work shifts defined in the system are listed in the table aimosWorkShiftTable. The currently active work shift is set by each Organisation itself using the object aimosOrgActiveWorkShiftID in the aimosOrgTable. The third point of influence are the alarm recipient lists. Each Organisation defines its own alarm recipient lists by adding the according entries to the table aimosAlarmRecipientListTable. For each alarm recipient list the phone book entries assigned to it are listed in the aimosAlarmRecipientListMemberTable. One phone book entry (i.e. one SNMP Manager) can be assigned to several alarm recipient lists simultaneously. In order to get the list of SNMP Managers that have to be informed, the A.I.M.O.S. SNMP Agent proceeds as follows: The A.I.M.O.S. SNMP Agent checks the aimosAlarmConfigTable, and uses the object aimosAlarmAlarmGroupID in order to find out to which alarm group the alarm belongs. Next, it determines which Organisations are authorised to receive alarms of this alarm group. This information is laid down in the table aimosAlarmGroupAllowedOrgTable. The A.I.M.O.S. SNMP Agent checks the value of aimosAlarmForwardingType of each affected organisation in order to determine the organisations having alarm forwarding enabled as well as the kind of alarm forwarding to be used (SNMPv1 trap or SNMPv2c notification). For each Organisation that is allowed (allowed org) and enabled (alarm forwarding enabled) to receive alarms, the current work shift is identified via the object aimosOrgActiveWorkShiftID. The table aimosAlarmDistributionPlanTable now shows which alarm recipient lists have to be used. The table provides one alarm recipient list per Organisation, AlarmGroup and work shift. If there is no entry for a certain combination, no alarm will be sent. If there is an entry, each member of the alarm recipient list (aimosAlarmRecipientListMemberTable) will receive an alarm notification, unless a phone book entry was deactivated via aimosPhoneBookActive. After the alarm recipients have been identified, the various counters required for sending traps must be identified: The aimosAlarmListAlarmEventID identifies the cause leading to the dispatch of a aimosAlarmNew or a aimosAlarmChanged notification to one or more SNMP Managers. Here, the counter will be increased by one for each cause. If the cause leads to sending a aimosAlarmCleared notification, the counter will not be increased. Instead, the count of the according aimosAlarmNew or (if present) the latest aimosAlarmChanged notification will be used. The aimosAlarmListID is identical to the aimosAlarmListAlarmEventID, as long as the aimosAlarmChanged alarm has not been implemented. The aimosAlarmTrapID uniquely identifies each notification that was not sent to an SNMP Manager. Each SNMP Manager can rely on the aimosAlarmTrapNotificationID to have a continuous numeration. If not, one notification got lost. At long last the A.I.M.O.S. SNMP Agent have to collect some information required to provide the notifications: The A.I.M.O.S. SNMP Agent have to inspect the aimosAlarmConfigTable (and in a future version of the A.I.M.O.S. SNMP Agent the aimosAlarmSeverityRangeTable) to determine the alarms severity (in the future version for each organisation). The A.I.M.O.S. SNMP Agent collects the organisation specific customer device information to be provided with the notification by means of the values of aimosMasterTrapInfo, aimosSubRackTrapInfo, aimosRemoteTrapInfo and aimosCableTrapInfo. Now the A.I.M.O.S. SNMP Agent has collected all information required for SNMP alarm forwarding. The A.I.M.O.S. SNMP Agent will now perform the following actions: Create one entry per organisation in the alarm list (aimosAlarmListTable) using the organisations ID (aimosOrgID) and the alarm List ID (aimosAlarmListID) as index. Send one SNMP notification to each manager discovered by the steps mentioned above and create for each notification one entry in the trap list (aimosAlarmTrapTable) using the organisations ID (aimosOrgID), the alarm List ID (aimosAlarmListID) and the trap ID (aimosAlarmTrapID) as index. Each manager have to acknowledge the received notifications by means of setting aimosAlarmTrapAcknowledgementState using its organisation ID (aimosOrgID), the alarm list ID (aimosAlarmListID) and the alarm trap ID (aimosAlarmTrapID) to acknowledged(2). After having emitted the alarm notification, the A.I.M.O.S. SNMP Agent expects an acknowledgement within a certain interval, that can be specified (in seconds) in aimosAlarmAckExpectInterval. If there is no such acknowledgement, the A.I.M.O.S. SNMP Agent will continue to emit the alarm until the acknowledgement is received. The notification remains in the alarm list as long as the based alarm event is active or if at least one notification related to the alarm event is not yet acknowledged by at least one of the involved SNMP Managers. The entries in the trap table (aimosAlarmTrapTable) are earlier removed: If a manager has performed the required acknowledgements, its entries in the trap table are removed. After remove from the trap and alarm list table, the removed entries are available in the alarm log (aimosAlarmLogTable). The specific alarm event ID will not be used again unless an alarm list rebuild resets the counter to zero or the wrap value (2-1) is reached. If a similar or even the same alarm event occurs again (after the old one gets cleared), than the notification will not contain the formerly used alarm event ID but a new one."
  },
  "aimosNextAlarmGroupID": {
    "name": "aimosNextAlarmGroupID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "MDS=TMDSNextID Tag=2",
    "status": "current",
    "description": "This object is needed in addition of alarm groups to the aimosAlarmGroupTable. Its value has to be used as the identifier (aimosAlarmGroupID) of the new alarm group."
  },
  "aimosAlarmGroupTable": {
    "name": "aimosAlarmGroupTable",
    "oid": "1.3.6.1.4.1.6408.201.3.4.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table is indexed by aimosAlarmGroupID and lists the alarm groups available in the system. Alarm groups provides the means to collect alarms with similar characteristics. Insert rows: set aimosAlarmGroupName.<value of aimosNextAlarmGroupID> to any text Delete rows: set aimosAlarmGroupName.<aimosAlarmGroupID> to 'delete' (without quotation marks) TelCo's are not allowed to insert or delete rows."
  },
  "aimosAlarmGroupEntry": {
    "name": "aimosAlarmGroupEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.4.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosAlarmGroupID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISAlarmGroupTable MDS=TMDSAlarmGroupTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosAlarmGroupID": {
    "name": "aimosAlarmGroupID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is numbered consecutively. aimosNextAlarmGroupID tells you the ID to be used in row creation."
  },
  "aimosAlarmGroupName": {
    "name": "aimosAlarmGroupName",
    "oid": "1.3.6.1.4.1.6408.201.3.4.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 50
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object contains a name for the alarm group with up to 50 characters. Set this value to 'delete' (without quotation marks) in order to delete this table entry/alarm group. Changes, which are made here, affect all organizations. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosAlarmGroupAllowedOrgTable": {
    "name": "aimosAlarmGroupAllowedOrgTable",
    "oid": "1.3.6.1.4.1.6408.201.3.4.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table serves to specify the organisations that will be authorised to receive alarms of a certain alarm group. Organisations not listed in this table cannot have entries in the table aimosAlarmDistributionPlanTable, which excludes them from alarm distribution. Only the provider is allowed to modify the contents of this table. Insert rows: set aimosAlarmGroupAllowedOrgActive.<aimosOrgID>.<aimosAlarmGroupID> to true Delete rows: set aimosAlarmGroupAllowedOrgActive.<aimosOrgID>.<aimosAlarmGroupID> to false TelCo's are not allowed to insert or delete rows."
  },
  "aimosAlarmGroupAllowedOrgEntry": {
    "name": "aimosAlarmGroupAllowedOrgEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.4.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosOrgID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmGroupID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISAlarmGroupAllowedOrgTable MDS=TMDSAlarmGroupAllowedOrgTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosAlarmGroupAllowedOrgActive": {
    "name": "aimosAlarmGroupAllowedOrgActive",
    "oid": "1.3.6.1.4.1.6408.201.3.4.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is used for row creation and deletion. An existing table entry denotes, that the corresponding organisation is allowed to receive alarms collected in a specific alarm group. Due to the way of row deletion there will never be a table entry with a value of false in aimosAlarmGroupAllowedOrgActive. TelCo's are not allowed to make any changes."
  },
  "aimosAlarmConfigTable": {
    "name": "aimosAlarmConfigTable",
    "oid": "1.3.6.1.4.1.6408.201.3.4.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "With this table, indexed by aimosAlarmID, alarms can be configured. E.g. the Severity or the assignment to a certain alarm group can be specified here. Insert rows: must only be done by Mikom Delete rows: must only be done by Mikom"
  },
  "aimosAlarmConfigEntry": {
    "name": "aimosAlarmConfigEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.4.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosAlarmID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISAlarmConfigTable MDS=TMDSAlarmConfigTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosAlarmID": {
    "name": "aimosAlarmID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AlarmID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The aimosAlarmID of type AlarmID uniquely identifies the type of alarm."
  },
  "aimosAlarmDescription": {
    "name": "aimosAlarmDescription",
    "oid": "1.3.6.1.4.1.6408.201.3.4.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object holds a short explanation of the type of alarm."
  },
  "aimosAlarmEventType": {
    "name": "aimosAlarmEventType",
    "oid": "1.3.6.1.4.1.6408.201.3.4.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "EventType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "communications",
        "format": "enum"
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The aimosAlarmEventType of type EventType categorises the alarm."
  },
  "aimosAlarmDefaultSeverity": {
    "name": "aimosAlarmDefaultSeverity",
    "oid": "1.3.6.1.4.1.6408.201.3.4.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Severity",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "critical",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Severity denotes the default severity of an alarm. Use the value indeterminate(0) in order to disable the alarm forwarding for this kind of alarms. Default severity is used, if organisation specific alarm severity configuration is not defined by aimosAlarmSeverityRangeTable. Changes, which are made here, affect all organizations. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosAlarmSeverityMin": {
    "name": "aimosAlarmSeverityMin",
    "oid": "1.3.6.1.4.1.6408.201.3.4.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Severity",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "warning",
        "format": "enum"
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type Severity determines the at least allowed configurable severity in aimosAlarmDefaultSeverity and aimosAlarmSeverityRangeTable."
  },
  "aimosAlarmAlarmGroupID": {
    "name": "aimosAlarmAlarmGroupID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object holds the Alarm Group assignment (aimosAlarmGroupID). Changes, which are made here, affect all organizations. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosAlarmClearMode": {
    "name": "aimosAlarmClearMode",
    "oid": "1.3.6.1.4.1.6408.201.3.4.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ClearMode",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type ClearMode informs you of how an alarm gets cleared. Changes, which are made here, affect all organizations. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosAlarmSeverityRangeTable": {
    "name": "aimosAlarmSeverityRangeTable",
    "oid": "1.3.6.1.4.1.6408.201.3.4.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "deprecated",
    "description": "This table holds organisation specific data of alarm severity configuration. Insert rows: set aimosAlarmSeverityRangeSeverity.<aimosOrgID>.<aimosAlarmID>. <aimosAlarmSeverityRangeMinValue>.<aimosAlarmSeverityRangeMaxValue> to any severity value but indeterminate Delete rows: set aimosAlarmSeverityRangeSeverity.<aimosOrgID>.<aimosAlarmID>. <aimosAlarmSeverityRangeMinValue>.<aimosAlarmSeverityRangeMaxValue> to severity indeterminate This table is not yet supported !"
  },
  "aimosAlarmSeverityRangeEntry": {
    "name": "aimosAlarmSeverityRangeEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.4.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosOrgID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmSeverityRangeMinValue",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmSeverityRangeMaxValue",
        "implied": 0
      }
    ],
    "status": "deprecated",
    "description": "see description for table entry..."
  },
  "aimosAlarmSeverityRangeMinValue": {
    "name": "aimosAlarmSeverityRangeMinValue",
    "oid": "1.3.6.1.4.1.6408.201.3.4.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AlarmValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "Low value causing a defined severity."
  },
  "aimosAlarmSeverityRangeMaxValue": {
    "name": "aimosAlarmSeverityRangeMaxValue",
    "oid": "1.3.6.1.4.1.6408.201.3.4.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AlarmValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "High value causing a defined severity."
  },
  "aimosAlarmSeverityRangeSeverity": {
    "name": "aimosAlarmSeverityRangeSeverity",
    "oid": "1.3.6.1.4.1.6408.201.3.4.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Severity",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "deprecated",
    "description": "aimosAlarmSeverityRangeSeverity of type Severity holds the severity to be used in alarm notifications if the alarm value is within the range from aimosAlarmSeverityRangeMinValue to aimosAlarmSeverityRangeMaxValue, both of type AlarmValue. Use the value indeterminate(0) in order to delete the table entry. If there is no appropriate entry for a specific Alarm ID, then aimosAlarmDefaultSeverity determines the severity of the alarm."
  },
  "aimosWorkShiftTable": {
    "name": "aimosWorkShiftTable",
    "oid": "1.3.6.1.4.1.6408.201.3.4.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Alarm distribution depends on work shifts: This table holds the available work shift ID's and names. aimosOrgActiveWorkShiftID determines the active work shift per each organisation. The table aimosAlarmDistributionPlanTable is indexed by aimosWorkShiftID and therefore it holds one alarm recipient list per work shift. In this way it is possible to activate another alarm distribution list via simply switching the current work shift. Insert rows: set aimosWorkShiftName.<aimosOrgID>. <value of aimosOrgNextWorkShiftID> to any text Delete rows: set aimosWorkShiftName.<aimosOrgID>.<aimosWorkShiftID> to 'delete' (without quotation marks)"
  },
  "aimosWorkShiftEntry": {
    "name": "aimosWorkShiftEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.4.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosOrgID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosWorkShiftID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISWorkShiftTable MDS=TMDSWorkShiftTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosWorkShiftID": {
    "name": "aimosWorkShiftID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is numbered consecutively. aimosOrgNextWorkShiftID tells you the ID to be used in row creation."
  },
  "aimosWorkShiftName": {
    "name": "aimosWorkShiftName",
    "oid": "1.3.6.1.4.1.6408.201.3.4.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object contains a name for the work shift with up to 40 characters. Set this value to 'delete' (without quotation marks) in order to delete this table entry/work shift."
  },
  "aimosWorkShiftHeartbeatInterval": {
    "name": "aimosWorkShiftHeartbeatInterval",
    "oid": "1.3.6.1.4.1.6408.201.3.4.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "WeekMinutes",
      "class": "type"
    },
    "units": "minutes",
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is intended to specify the interval in minutes, after that the A.I.M.O.S. SNMP Agent will emit a heartbeat notification to one or more SNMP Manager. Use aimosWorkShiftHeartbeatRecipientList in order to define that SNMP Managers. This interval is only used, if the affected work shift is activated (i.e. the value of aimosOrgActiveWorkShiftID is set to the affected aimosWorkShiftID). If either aimosWorkShiftHeartbeatInterval or aimosWorkShiftHeartbeatRecipientList is set to 0, no heartbeat notification will be emitted."
  },
  "aimosWorkShiftHeartbeatRecipientList": {
    "name": "aimosWorkShiftHeartbeatRecipientList",
    "oid": "1.3.6.1.4.1.6408.201.3.4.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is intended to specify the Alarm Recipient List which has to be used if the A.I.M.O.S. SNMP Agent emits heartbeat notifications. Each member of the specified Alarm Recipient List (specified via aimosAlarmRecipientListMemberTable) will receive a heartbeat notification every [aimosWorkShiftHeartbeatInterval] minutes. This Recipient List is only used, if the affected work shift is activated (i.e. the value of aimosOrgActiveWorkShiftID is set to the affected aimosWorkShiftID). If either aimosWorkShiftHeartbeatInterval or aimosWorkShiftHeartbeatRecipientList is set to 0, no heartbeat notification will be emitted."
  },
  "aimosAlarmDistributionPlanTable": {
    "name": "aimosAlarmDistributionPlanTable",
    "oid": "1.3.6.1.4.1.6408.201.3.4.7",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table, indexed by aimosOrgID, aimosAlarmGroupID and aimosWorkShiftID, holds the alarm recipient list to be used for sending alarms of a certain Alarm Group if a certain work shift is active. Each organisation may have different settings. Each member of the discovered alarm recipient lists will get the notification. The organization must be allowed to receive alarms of the specific Alarm Group, thus there must be an appropriate entry in the aimosAlarmGroupAllowedOrgTable. Insert rows: set aimosAlarmDistributionPlanRecipientListID.<aimosOrgID>. <aimosAlarmGroupID>.<aimosWorkShiftID> to a valid aimosAlarmRecipientListID Delete rows: set aimosAlarmDistributionPlanRecipientListID.<aimosOrgID>. <aimosAlarmGroupID>.<aimosWorkShiftID> to zero Example: ======== An organisation with OrgID 262299 wants recipient list 1 to be used for alarms of alarm group 2 during work shift 1 recipient list 4 to be used for alarms of alarm group 2 during work shift 2 Two entries are needed in this table: aimosAlarmDistributionPlanRecipientListID.262299.2.1 set to 1 aimosAlarmDistributionPlanRecipientListID.262299.2.2 set to 4"
  },
  "aimosAlarmDistributionPlanEntry": {
    "name": "aimosAlarmDistributionPlanEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.4.7.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosOrgID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmGroupID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosWorkShiftID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISAlarmDistributionPlanTable MDS=TMDSAlarmDistributionPlanTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosAlarmDistributionPlanRecipientListID": {
    "name": "aimosAlarmDistributionPlanRecipientListID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.7.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This objects value is the recipient lists ID (aimosAlarmRecipientListID) that will be bound up with the aimosAlarmGroupID and aimosWorkShiftID for aimosOrgID. The corresponding organisation must be allowed to receive alarms of the specified Alarm Group, thus there must be an appropriate entry in the aimosAlarmGroupAllowedOrgTable. Set the value to 0 (zero) in order to delete this table entry."
  },
  "aimosAlarmRecipientListTable": {
    "name": "aimosAlarmRecipientListTable",
    "oid": "1.3.6.1.4.1.6408.201.3.4.8",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table holds the names and IDs of available alarm recipient lists for each organization. It is indexed by aimosOrgID and aimosAlarmRecipientListID. Insert rows: set aimosAlarmRecipientListName.<aimosOrgID>.<value of aimosOrgNextAlarmRecipientListID> to the recipient list's name Delete rows: set aimosAlarmRecipientListName.<aimosOrgID>. <aimosAlarmRecipientListID> to 'delete' (without quotation marks)"
  },
  "aimosAlarmRecipientListEntry": {
    "name": "aimosAlarmRecipientListEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.4.8.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosOrgID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmRecipientListID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISRecipientListTable MDS=TMDSRecipientListTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosAlarmRecipientListID": {
    "name": "aimosAlarmRecipientListID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.8.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is numbered consecutively within one organisation. aimosOrgNextAlarmRecipientListID tells you the value to be used in alarm recipient list creation. The value of 0 (zero) must not be used here. "
  },
  "aimosAlarmRecipientListName": {
    "name": "aimosAlarmRecipientListName",
    "oid": "1.3.6.1.4.1.6408.201.3.4.8.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 50
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is just a name with a maximum length of 50 characters for the alarm recipient list. Set this value to 'delete' (without quotation marks) in order to delete this table entry."
  },
  "aimosPhoneBookTable": {
    "name": "aimosPhoneBookTable",
    "oid": "1.3.6.1.4.1.6408.201.3.4.11",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table gives IP addresses and IP ports of alarm recipients (SNMP Manager) a name and classifies its communication type. Insert rows: set aimosPhoneBookAddress.<aimosOrgID>.<value of aimosOrgNextPhoneBookID> to any IP address and port Delete rows: set aimosPhoneBookAddress.<aimosOrgID>.<aimosPhoneBookID> to 'delete' (without quotation marks)"
  },
  "aimosPhoneBookEntry": {
    "name": "aimosPhoneBookEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.4.11.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosOrgID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosPhoneBookID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISPhoneBookTable MDS=TMDSPhoneBookTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosPhoneBookID": {
    "name": "aimosPhoneBookID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.11.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is numbered consecutively within one organisation. aimosOrgNextPhoneBookID tells you the value to be used in phone book entry creation."
  },
  "aimosPhoneBookName": {
    "name": "aimosPhoneBookName",
    "oid": "1.3.6.1.4.1.6408.201.3.4.11.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PhoneBookEntry",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "<ID>",
        "format": "string"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type PhoneBookEntry is a name for the phone book entry helping to disclose its identity. This name should be unique."
  },
  "aimosPhoneBookAddress": {
    "name": "aimosPhoneBookAddress",
    "oid": "1.3.6.1.4.1.6408.201.3.4.11.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IPAddressAndPort",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type IPAddressAndPort hold the IP address and IP port number. The port number may be omitted in set requests, if the port number is the default port number for SNMP traps (162). Set this value to 'delete' (without quotation marks) in order to delete the phone book entry. Phone book entries currently used in the alarm list/log cannot be removed."
  },
  "aimosPhoneBookActive": {
    "name": "aimosPhoneBookActive",
    "oid": "1.3.6.1.4.1.6408.201.3.4.11.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "true",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is used in order to deactivate a phone book entry for a short period of time. Inactive phone book entries are excluded from alarm distribution even if they have entries in the aimosAlarmDistributionPlanTable."
  },
  "aimosPhoneBookLastNotificationID": {
    "name": "aimosPhoneBookLastNotificationID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.11.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object denotes the notification ID used in the most recent trap for the specific SNMP Manager. The NotificationID of the next trap that is generated will be 1 higher. The wrap value is 2-1."
  },
  "aimosPhoneBookAlarmListResync": {
    "name": "aimosPhoneBookAlarmListResync",
    "oid": "1.3.6.1.4.1.6408.201.3.4.11.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OperationMode",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type OperationMode is provided to give each SNMP Manager the ability to synchronise its alarm table. Setting this value to start(5) will start the alarm list synchronisation process."
  },
  "aimosPhoneBookInterfaceType": {
    "name": "aimosPhoneBookInterfaceType",
    "oid": "1.3.6.1.4.1.6408.201.3.4.11.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "InterfaceType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "ifMIBDefault",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type InterfaceType is provided in order to define the kind of alarm forwarding. Leave this object on its default value unless you want to force the SNMP Agent to use an older type of alarm forwarding for compatibility reasons. The aimos interface was adapted in order to remain conformal with SNMP. The differences between ifAimosObsolete(4) and ifAimos(5) are as follows: -------------------------------------------------------------------------------- topic ifAimosObsolete ifAimos ================================================================================ trap object (second 1.3.6.1.4.1.6408.201.3.1.4 1.3.6.1.6.3.1.1.4.1.0 object in alarm AIMOS.aimosTrapOID SNMPV2-MIB.snmpTrapOID.0 notifications) -------------------------------------------------------------------------------- enterprise object 1.3.6.1.4.1.6408.201.4.3.0 1.3.6.1.6.3.1.1.4.3.0 (the last object in AIMOS.aimosTrapEnterprise SNMPV2-MIB.snmpTrapEnterprise.0 alarm notifications) -------------------------------------------------------------------------------- enterprise name (the 1.3.6.1.4.1.6408 1.3.6.1.4.1.6408.201.4 alarm notifications mikom AIMOS.aimosNotifications last objects value) -------------------------------------------------------------------------------- instance identifiers each objects instance each object has its real in alarm except aimosTrapOID is 0 instance identifier notifications objects -------------------------------------------------------------------------------- The ifOMC3... interfaces are implemented only for compatibility reasons to the Mikom OMC Version 3. They are described in the documentation to that OMC. The Nokia interface is described in documents available from Nokia."
  },
  "aimosPhoneBookAckCapability": {
    "name": "aimosPhoneBookAckCapability",
    "oid": "1.3.6.1.4.1.6408.201.3.4.11.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "true",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is provided in order to state the SNMP Managers ability to perform an acknowledgement. If this object is set to true (default), then the SNMP Agent expects an acknowledgement for each trap sent out. Each trap will be periodically re-send until achnowledgement is detected. This object has to be set to false in the case of the inability of the SNMP Manager to maintain the acknowledgement process. In that case the SNMP Agent doesn't expect an acknowledgement. Therefore each trap is sent out nonrecurring and - since SNMP is based on UDP - traps may be lost!"
  },
  "aimosPhoneBookTimeDisplayFormat": {
    "name": "aimosPhoneBookTimeDisplayFormat",
    "oid": "1.3.6.1.4.1.6408.201.3.4.11.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeDisplayFormat",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "default",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type TimeDisplayFormat is provided in order to define ofhow date and time values (in objects of type VariableTime) inquired by an GET request or shipped within alarm notifications have to be encoded by the SNMP agent. Each SNMP manager may make its own setting if system default is not acceptable. The system default is default(0). It is treated as osiBinary(1) unless aimosPhoneBookInterfaceType is set to ifAimosObsolete(4) osiText(2) if aimosPhoneBookInterfaceType is set to ifAimosObsolete(4)"
  },
  "aimosPhoneBookGeographicPositionFormat": {
    "name": "aimosPhoneBookGeographicPositionFormat",
    "oid": "1.3.6.1.4.1.6408.201.3.4.11.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GeographicPositionFormat",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object defines the format to be used for objects with textual convention GPSPosition. These are as follows: aimosAlarmListRaiseLatitude aimosAlarmListRaiseLongitude aimosAlarmListClearLatitude aimosAlarmListClearLongitude aimosAlarmLogRaiseLatitude aimosAlarmLogRaiseLongitude aimosAlarmLogClearLatitude aimosAlarmLogClearLongitude"
  },
  "aimosPhoneBookRecognitionTraps": {
    "name": "aimosPhoneBookRecognitionTraps",
    "oid": "1.3.6.1.4.1.6408.201.3.4.11.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object provides means to state whether or not the SNMP Manager desires the SNMP Agent to sent a aimosAlarmRecognized trap in case an alarms recognition state changes from unrecognized(1) to recognized(2). Please see also the description to aimosAlarmListRecognitionState."
  },
  "aimosAlarmRecipientListMemberTable": {
    "name": "aimosAlarmRecipientListMemberTable",
    "oid": "1.3.6.1.4.1.6408.201.3.4.12",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table determines the members of a certain alarm recipient list. All active members of an Alarm Recipient List receive the alarm notifications assigned to this list via the table aimosAlarmDistributionPlanTable. Insert rows: set aimosAlarmRecipientListMemberActive.<aimosOrgID>. <aimosAlarmRecipientListID>.<aimosPhoneBookID> to true Delete rows: set aimosAlarmRecipientListMemberActive.<aimosOrgID>. <aimosAlarmRecipientListID>.<aimosPhoneBookID> to false"
  },
  "aimosAlarmRecipientListMemberEntry": {
    "name": "aimosAlarmRecipientListMemberEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.4.12.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosOrgID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmRecipientListID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosPhoneBookID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISRecipientListMemberTable MDS=TMDSRecipientListMemberTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosAlarmRecipientListMemberActive": {
    "name": "aimosAlarmRecipientListMemberActive",
    "oid": "1.3.6.1.4.1.6408.201.3.4.12.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is used for row creation and deletion. Due to the way of row deletion there will never be an object in this table having a value of false. An existing table entry denotes, that the corresponding phone book entry is assigned to the specific alarm recipient list. Thus it become a member of the alarm recipient list and with it a recipient of the alarms assigned to the alarm recipient list. If the phone book entry is deactivated via aimosPhoneBookActive, no traps will be sent to this recipient. Set this value to false in order to delete a table entry."
  },
  "aimosAlarmTrapTable": {
    "name": "aimosAlarmTrapTable",
    "oid": "1.3.6.1.4.1.6408.201.3.4.13",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table is indexed by aimosOrgID, aimosAlarmTrapID and aimosAlarmListID and contains a list of all traps sent out by the agent to a specific SNMP Manager identified by its phone book entry. Insert rows: must only be done by system Delete rows: must only be done by system"
  },
  "aimosAlarmTrapEntry": {
    "name": "aimosAlarmTrapEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.4.13.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosOrgID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISAlarmTrapTable MDS=TMDSAlarmTrapTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosAlarmTrapID": {
    "name": "aimosAlarmTrapID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.13.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is an unique identifier for a trap on SNMP Agent side and is used in alarm acknowledgement. Even if its value is consecutive numbered on agent side, it could seem to the SNMP Manager in such a way as if the values may be gappy. This will be regularly the case if more than one alarm receiver is present. This value is reset to 0 on alarm list rebuild. The wrap value is 2-1. "
  },
  "aimosAlarmTrapNotificationID": {
    "name": "aimosAlarmTrapNotificationID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.13.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is incremented consecutively for each notification sent out to a particular SNMP Manager. Thus every SNMP Manager (identified by its phone book entry) will have consecutively numbered values in all received notifications and therefore its value can be used in order to recognise missing notifications. The wrap value is 2-1. An Alarm List Resync will reset the current SNMP Managers notification ID, whereas an alarm list rebuild will reset the corresponding notification ID of each SNMP Manager. "
  },
  "aimosAlarmTrapPhonebookID": {
    "name": "aimosAlarmTrapPhonebookID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.13.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is the SNMP Managers aimosPhoneBookID to which the notification was directed to."
  },
  "aimosAlarmTrapAcknowledgementState": {
    "name": "aimosAlarmTrapAcknowledgementState",
    "oid": "1.3.6.1.4.1.6408.201.3.4.13.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AcknowledgementState",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type AcknowledgementState states whether or not the alarm was acknowledged. It is the only writeable value in this table. Acknowledgement will be done by setting this value to acknowledged(2). The term acknowledgement is pertaining to the SNMP protocol: it provides means for the SNMP manager to acknowledge trap receipt. On the other hand the similar sounding term 'recognition' is used to indicate an 'I have seen the alarm and will take care about it'. The latter one is also available via the AIMOS_Visu's Supervision page."
  },
  "aimosAlarmTrapAcknowledgementUser": {
    "name": "aimosAlarmTrapAcknowledgementUser",
    "oid": "1.3.6.1.4.1.6408.201.3.4.13.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UserName",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object holds the user who has acknowledged the alarm. This object is empty if the alarm is not yet acknowledged."
  },
  "aimosAlarmTrapAcknowledgementTime": {
    "name": "aimosAlarmTrapAcknowledgementTime",
    "oid": "1.3.6.1.4.1.6408.201.3.4.13.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type VariableTime holds the time of acknowledgement. This object is empty if the alarm is not yet acknowledged."
  },
  "aimosAlarmListTable": {
    "name": "aimosAlarmListTable",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains a list of active alarms. This table is indexed by aimosOrgID and aimosAlarmListID; i.e. the table is organisation specific and, thus has entries for each concerned organisation. Each aimosAlarmNew and aimosAlarmChanged notification generates a new entry for each Organisation receiving the alarm. aimosAlarmCleared notifications forwarded by the agent to any manager do not create another entry, but make an amendment to existing ones. The entries remain in the list as long as the corresponding alarm situation still exists or if any manager of a specific organisation has not yet acknowledged required notifications related to the specific alarm situation. Insert rows: must only be done by system Delete rows: must only be done by system The value stored in aimosLoginPhoneBookID affects this table in the following way: - if aimosLoginPhoneBookID is a valid aimosPhoneBookID, then only alarms forwarded to the corresponding SNMP Manager are listed in aimosAlarmListTable - if aimosLoginPhoneBookID is an invalid aimosPhoneBookID, this table is empty - if aimosLoginPhoneBookID is 0 this table is complete / not filtered "
  },
  "aimosAlarmListEntry": {
    "name": "aimosAlarmListEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosOrgID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISAlarmListTable MDS=TMDSAlarmListTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosAlarmListID": {
    "name": "aimosAlarmListID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is the consecutive numbering of all alarm notifications of the A.I.M.O.S. SNMP Agent forwarded to any manager. A notification forwarded to more than one SNMP Manager will contain identical aimosAlarmListID's. When an alarm list rebuild is initiated by a SNMP Manager then the alarm list ID is reset. The alarm list ID is not reset, if a SNMP Manager starts an Alarm List Resync. The wrap value is 2-1."
  },
  "aimosAlarmListAlarmEventID": {
    "name": "aimosAlarmListAlarmEventID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object's Unsigned32 value is incremented by one for each alarm notification except aimosAlarmChanged and aimosAlarmCleared. Alarm changed notifications and alarm clear notifications are correlated with alarm new notifications by the aimosAlarmListAlarmEventID. When an alarm list rebuild is initiated by a SNMP Manager then the alarm event ID is reset. The alarm event ID is not reset, if a SNMP Manager starts an Alarm List Resync. The wrap value is 2-1."
  },
  "aimosAlarmListAlarmID": {
    "name": "aimosAlarmListAlarmID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AlarmID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type AlarmID designates the alarm kind."
  },
  "aimosAlarmListEventType": {
    "name": "aimosAlarmListEventType",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "EventType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The Event Type categorises the alarm."
  },
  "aimosAlarmListEventTime": {
    "name": "aimosAlarmListEventTime",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type VariableTime states when the alarm condition appeared or (in the case of an aimosAlarmCleared notification) when the alarm condition is gone."
  },
  "aimosAlarmListProbableCause": {
    "name": "aimosAlarmListProbableCause",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ProbableCause",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type ProbableCause defines further qualification of an alarm than aimosAlarmListEventType."
  },
  "aimosAlarmListSpecificProblem": {
    "name": "aimosAlarmListSpecificProblem",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SpecificProblem",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type SpecificProblem is a fault specific value used in order to classify the fault situation. It provides further qualification of the alarm than probable cause and is defined in accordance with definitions given in ITU-T Recommendation X.733 clause 8.1.2.2."
  },
  "aimosAlarmListSeverity": {
    "name": "aimosAlarmListSeverity",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Severity",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type Severity defines severity levels, which provide an indication of how it is perceived that the capability of the managed object has been affected."
  },
  "aimosAlarmListTrendIndication": {
    "name": "aimosAlarmListTrendIndication",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TrendIndication",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type TrendIndication specifies the current severity trend of the managed object."
  },
  "aimosAlarmListAdditionalText": {
    "name": "aimosAlarmListAdditionalText",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object allows a free form text description to be reported. It contains a formatted description of the alarm and, should the occasion arise, includes alarm values."
  },
  "aimosAlarmListSDN": {
    "name": "aimosAlarmListSDN",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SDN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The System Distinguished Name uniquely identifies the unit within the system controlled by the OMC."
  },
  "aimosAlarmListTrapInfo": {
    "name": "aimosAlarmListTrapInfo",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This OID contains the Network Elements's TrapInfo"
  },
  "aimosAlarmListComponentName": {
    "name": "aimosAlarmListComponentName",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This OID contains the Network Elements's Component Name"
  },
  "aimosAlarmListLocation": {
    "name": "aimosAlarmListLocation",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This OID contains the Network Elements's Location"
  },
  "aimosAlarmListUniqueSystemID": {
    "name": "aimosAlarmListUniqueSystemID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This OID contains the Network Elements's Unique System ID"
  },
  "aimosAlarmListClearReason": {
    "name": "aimosAlarmListClearReason",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ClearReason",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This OID gives information weather the alarm was cleared or not. If an alarm does not become automatically cleared (aimosAlarmClearMode is set to manualClear), manualCleared is the only writeable value (besides aimosAlarmListRecognitionState)."
  },
  "aimosAlarmListClearTime": {
    "name": "aimosAlarmListClearTime",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "this object of type VariableTime states the time of the event specified in aimosAlarmListClearReason."
  },
  "aimosAlarmListRaiseLatitude": {
    "name": "aimosAlarmListRaiseLatitude",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GPSPosition",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "this object was introduced in V 2.6.0 and states the Network Elements Latitude to the time the alarm was raised."
  },
  "aimosAlarmListRaiseLongitude": {
    "name": "aimosAlarmListRaiseLongitude",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GPSPosition",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "this object was introduced in V 2.6.0 and states the Network Elements Longitude to the time the alarm was raised."
  },
  "aimosAlarmListClearLatitude": {
    "name": "aimosAlarmListClearLatitude",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GPSPosition",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "this object was introduced in V 2.6.0 and states the Network Elements Latitude to the time the alarm was cleared."
  },
  "aimosAlarmListClearLongitude": {
    "name": "aimosAlarmListClearLongitude",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GPSPosition",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "this object was introduced in V 2.6.0 and states the Network Elements Longitude to the time the alarm was cleared."
  },
  "aimosAlarmListRecognitionState": {
    "name": "aimosAlarmListRecognitionState",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RecognitionState",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type RecognitionState states whether or not the alarm has been recognized. Together with aimosAlarmListClearReason these objects are the only writeable values of this table. Recognition is used to indicate an 'I have seen the alarm and will take care about it'. It is available via SNMP as well as via the AIMOS_Visu's Supervision page. Recognition by means of SNMP will be done by setting this value to recognized(2). Due to the fact that alarms are moved from aimosAlarmListTable to aimosAlarmLogTable as soon as they are both cleared and acknowledged aimosAlarmLogRecognitionState provides means to recognize cleared alarms; it is the only writeable alarm log object. A SET request with unrecognized(1) (i.e. 'Unrecognition') is an invalid operation and will be rejected by the SNMP Agent. For each alarm recognition the SNMP Agent sends a aimosAlarmRecognized trap to SNMP Managers having aimosPhoneBookRecognitionTraps set to true. On the other hand the similar sounding term 'acknowledgement' is pertaining to the SNMP protocol: it provides means for the SNMP manager to acknowledge trap receipt. Please note: in case both the acknowledgement feature and the recognition-traps-feature are active, even the recognition traps have to be acknowledged. "
  },
  "aimosAlarmListRecognitionUser": {
    "name": "aimosAlarmListRecognitionUser",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UserName",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object indicates the user who has recognized the alarm. This object is empty if the alarm is not recognized at all."
  },
  "aimosAlarmListRecognitionTime": {
    "name": "aimosAlarmListRecognitionTime",
    "oid": "1.3.6.1.4.1.6408.201.3.4.14.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type VariableTime holds the time of recognition. This object is empty if the alarm is not recognized at all."
  },
  "aimosAlarmLogTable": {
    "name": "aimosAlarmLogTable",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table is indexed by aimosOrgID, aimosAlarmTrapID and aimosAlarmListID and contains the list of cleared and acknowledged alarms. The data is the content of the alarm list related to a specific SNMP Manager and the corresponding contents of the trap list. Insert rows: must only be done by system Delete rows: must only be done by system"
  },
  "aimosAlarmLogEntry": {
    "name": "aimosAlarmLogEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosOrgID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISAlarmLogTable MDS=TMDSAlarmLogTable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosAlarmLogPhoneBookID": {
    "name": "aimosAlarmLogPhoneBookID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmTrapTable."
  },
  "aimosAlarmLogNotificationID": {
    "name": "aimosAlarmLogNotificationID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmTrapTable."
  },
  "aimosAlarmLogAlarmEventID": {
    "name": "aimosAlarmLogAlarmEventID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogAlarmID": {
    "name": "aimosAlarmLogAlarmID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AlarmID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogEventType": {
    "name": "aimosAlarmLogEventType",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "EventType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogEventTime": {
    "name": "aimosAlarmLogEventTime",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogProbableCause": {
    "name": "aimosAlarmLogProbableCause",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ProbableCause",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogSpecificProblem": {
    "name": "aimosAlarmLogSpecificProblem",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SpecificProblem",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogSeverity": {
    "name": "aimosAlarmLogSeverity",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Severity",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogTrendIndication": {
    "name": "aimosAlarmLogTrendIndication",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TrendIndication",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogAdditionalText": {
    "name": "aimosAlarmLogAdditionalText",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogSDN": {
    "name": "aimosAlarmLogSDN",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SDN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogTrapInfo": {
    "name": "aimosAlarmLogTrapInfo",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogComponentName": {
    "name": "aimosAlarmLogComponentName",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogLocation": {
    "name": "aimosAlarmLogLocation",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogUniqueSystemID": {
    "name": "aimosAlarmLogUniqueSystemID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogAcknowledgementUser": {
    "name": "aimosAlarmLogAcknowledgementUser",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UserName",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmTrapTable."
  },
  "aimosAlarmLogAcknowledgementTime": {
    "name": "aimosAlarmLogAcknowledgementTime",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmTrapTable."
  },
  "aimosAlarmLogClearReason": {
    "name": "aimosAlarmLogClearReason",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ClearReason",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogClearTime": {
    "name": "aimosAlarmLogClearTime",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogClearTrapID": {
    "name": "aimosAlarmLogClearTrapID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmTrapTable."
  },
  "aimosAlarmLogClearNotificationID": {
    "name": "aimosAlarmLogClearNotificationID",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmTrapTable."
  },
  "aimosAlarmLogClearAcknowledgementUser": {
    "name": "aimosAlarmLogClearAcknowledgementUser",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UserName",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmTrapTable."
  },
  "aimosAlarmLogClearAcknowledgementTime": {
    "name": "aimosAlarmLogClearAcknowledgementTime",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmTrapTable."
  },
  "aimosAlarmLogRaiseLatitude": {
    "name": "aimosAlarmLogRaiseLatitude",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GPSPosition",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogRaiseLongitude": {
    "name": "aimosAlarmLogRaiseLongitude",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GPSPosition",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogClearLatitude": {
    "name": "aimosAlarmLogClearLatitude",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GPSPosition",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogClearLongitude": {
    "name": "aimosAlarmLogClearLongitude",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GPSPosition",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogRecognitionState": {
    "name": "aimosAlarmLogRecognitionState",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RecognitionState",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogRecognitionUser": {
    "name": "aimosAlarmLogRecognitionUser",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UserName",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmLogRecognitionTime": {
    "name": "aimosAlarmLogRecognitionTime",
    "oid": "1.3.6.1.4.1.6408.201.3.4.15.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "See corresponding description in aimosAlarmListTable."
  },
  "aimosAlarmForwardingType": {
    "name": "aimosAlarmForwardingType",
    "oid": "1.3.6.1.4.1.6408.201.3.4.16",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "AlarmForwardingType",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "snmpV2c",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSSystemParams Tag=3001",
    "status": "current",
    "description": "This object of type AlarmForwardingType specifies if and in what way, alarm forwarding is to be carried out: If this object is set to disabled(0), there is no alarm forwarding even if the tables for the configuration of the alarm recipients have correct entries. If TRAP-TYPE construct from SNMPv1 is to be used for alarm forwarding, the parameter snmpV1(1) has to be set. The default setting of snmpV2c(2) specifies that NOTIFICATION-TYPE construct from SNMPv2, will be used for alarm forwarding. This setting refers to an organisation, not to an individual SNMP Manager. In order to exclude an individual SNMP Manager temporarily from SNMP alarm forwarding, set aimosPhoneBookActive to false. To exclude an SNMP Manager completely, delete the corresponding phone book entry from the according distribution lists (aimosAlarmRecipientListMemberTable)."
  },
  "aimosAlarmAckExpectInterval": {
    "name": "aimosAlarmAckExpectInterval",
    "oid": "1.3.6.1.4.1.6408.201.3.4.17",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 10,
            "max": 600
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 15,
        "format": "decimal"
      }
    },
    "units": "seconds",
    "maxaccess": "read-write",
    "reference": "MDS=TMDSSystemParams Tag=3002",
    "status": "current",
    "description": "After having emitted an alarm notification, the SNMP Agent expects an acknowledgement within a certain interval. This period of time is adjustable by means of this object within the range from 10 to 600 second. If there is no such acknowledgement the SNMP Agent will continue to emit the alarm until the acknowledgement is received, except in the case, that the SNMP Manager has stated its inability for acknowledgement by setting aimosPhoneBookAckCapability to false. Changes, which are made here, affect all organizations. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosAlarmListRebuild": {
    "name": "aimosAlarmListRebuild",
    "oid": "1.3.6.1.4.1.6408.201.3.4.18",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OperationMode",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSAlarmListRenew Tag=1",
    "status": "current",
    "description": "ATTENTION: Setting this objects value to start(5) will initiate an Alarm List Rebuild process. During this process ALL ALARM INFORMATION WILL BE DELETED ! The Alarm List Rebuild process ============================== When an employee discovers that the internal alarm table of the A.I.M.O.S. SNMP Agent is flawed, an alarm list rebuild can be triggered. Such a process may also be necessary if productive operation is to start after a test phase with an empty alarm list. The Alarm List Rebuild consists of the following steps: A SNMP Manager sets aimosAlarmListRebuild to start(5). The logged in user must belong the Provider. The A.I.M.O.S. SNMP Agent drops the contents of the internal alarm tables. The table is completely deleted; each alarm list entry for each organisation is removed ! The A.I.M.O.S. SNMP Agent resets each alarm notification related counter to zero. These counters are aimosAlarmListID, aimosAlarmListAlarmEventID, aimosAlarmTrapID and each managers aimosAlarmTrapNotificationID. The values of these counters are increased by one with each new alarm, i.e. with the first alarms the value is 1. A counter of 0 is only possible after the maximum value (2-1) has been reached; which is, however, highly unlikely. The aimosAlarmListRebuildInitiated notification is forwarded to all SNMP Managers configured to receive this alarm. This will result in one new alarm list entry per affected organisation (with aimosAlarmListID and aimosAlarmListAlarmEventID each set to 1) and one trap list entry per affected manager (with aimosAlarmTrapNotificationID set to 1 and per SNMP Manager consecutive numbered values beginning with 1 in aimosAlarmTrapID) The A.I.M.O.S. devices are informed about the rebuild in order to reset its internal alarm tables, too. The devices will report still existing alarms as new alarms immediately. Suppress forwarding of further notifications to a specific manager until the manager acknowledges the aimosAlarmListRebuildInitiated notification. If the acknowledgement is missing for a specific period of time, the agent obviously emits the aimosAlarmListRebuildInitiated notification again On receipt of the aimosAlarmListRebuildInitiated notification, the SNMP Manager shall clean the internal alarm table prior to acknowledge this notification. There is no aimosAlarmCleared notification for this alarm. The alarm gets cleared on acknowledgement. Alarm notifications received after that acknowledgement needs to get acknowledged by the manager as usual; the manager is neither required nor able to distinguish if a notification is a result of the alarm list rebuild or a new (never received before) one. Changes, which are made here, affect all organizations. That's why TelCo's are not allowed to initiate an Alarm List Rebuild Process by setting this value to start(5)."
  },
  "aimosAlarmListResync": {
    "name": "aimosAlarmListResync",
    "oid": "1.3.6.1.4.1.6408.201.3.4.19",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OperationMode",
      "class": "type"
    },
    "maxaccess": "read-write",
    "reference": "MDS=TMDSAlarmListRenew Tag=2",
    "status": "current",
    "description": "This object of type OperationMode is provided to give each SNMP Manager the ability to synchronise its alarm table. Setting this value to start(5) will start the alarm list synchronisation process. If the current SNMP Manager has more than one IP address or if his phonebook entry is 127.0.0.1, the SNMP Agent cannot determine for which phonebook entry the Alarm List Resync is to be done. In such a case - either aimosPhoneBookAlarmListResync must be used - or the aimosLoginPhoneBookID should be set manually (recommended) in order to start the Alarm List Resync Process. The Alarm List Resync process ============================= When an employee discovers that the internal alarm table of the SNMP Manager is flawed, a resynchronisation of the alarm list can be initiated, which is e.g. the case when the trap count (aimosAlarmTrapNotificationID), which is continuous for each SNMP Manager, is interrupted. Each SNMP Manager receiving alarms is allowed to start a synchronisation of the alarm list. In order to do that the SNMP Manager shall first clean the internal alarm table and then request for an alarm list rebuild by setting aimosAlarmListResync to start(5). This request does not cause the agent to send a notification like the alarm list rebuild process will do, but the A.I.M.O.S. SNMP Agent will perform the following steps: Set the value of aimosAlarmListResync to running(3) It resets the managers aimosAlarmTrapNotificationID to zero All alarms in the alarm list related to the specific manager will be emit with unchanged aimosAlarmListID, aimosAlarmListAlarmEventID and aimosAlarmTrapID values. The aimosAlarmTrapNotificationID is a new generated consecutive numbered value. The agent doesn't wait for acknowledgement before emitting the next notification. If the last notification is sent to the manager, aimosAlarmListResync is set to idle(0) The manager is required to acknowledge all notifications as usual. An alarm list synchronisation neither effect the contents from the A.I.M.O.S. SNMP Agent's nor from other SNMP Manager's alarm lists except of the affected SNMP Manager's notification ID. "
  },
  "aimosUnitManagement": {
    "name": "aimosUnitManagement",
    "oid": "1.3.6.1.4.1.6408.201.3.5",
    "class": "objectidentity",
    "status": "current",
    "description": "This area comprises all objects dealing with unit management. This introduction provides an explanation of its basic structures. For each unit type there is one general table and one table per hardware version. E.g. there is the aimosRemoteUnitTable with objects that are valid for each Remote Unit, and the aimosRemoteUnitV1Table with objects of the Remote Unit Version 1. The general table contains one OID referring to the unit-specific table. Unit Reference ============== The Index of the general tables is composed of the topological arrangement of the units, i.e. depending on the arrangement it might contain several objects. The Index of a general Remote Unit table entry (aimosRemoteUnitTable) is e.g. composed of the Index of the Master Unit (aimosMasterID of type MasterID), the Index of the SubRack Master Unit (aimosSubRackID of type SubRackID) and the Index of the Remote Unit itself (aimosRemoteID of type RemoteID), since they are arranged in this order, whereas the Master Unit itself only has one Index (aimosMasterID), because there are no higher level units. All unit-specific tables, however, are always identified by two objects, one of the UnitReference type and the other of type ValueSource. Here, it does not matter whether it is a Master Unit or a Remote Unit. Value Source ============ The unit-specific tables have three entries per unit: one entry specifies the desired values one entry serves to read the current values and to buffer them for subsequent access and the third entry contains the buffered values Which one of these three entries is to be accessed is specified with the second Index of the unit-specific tables of type ValueSource. To avoid that a GET BULK results in endless hardware accesses, the A.I.M.O.S. SNMP Agent normally provides only the buffered values. Also, in case of a GET NEXT only the table entry corresponding to ValueSource cachedValue(2) is returned. Read accesses with cachedValue(2), however, are treated like accesses with actualValue(1), if no buffered values are available or if the time stamp belonging to these values was deleted. ValueSource desiredValue(3) is to be used for write access. However, the A.I.M.O.S. SNMP Agent also accepts write access to table entries with ValueSource cachedValue(2). This is treated as if the write access was made with desiredValue(3). Values ====== The unit specific tables comprise objects containing various types of status information. Due to performance reasons, values of the same 'topic' are put together on a logic basis. Such logical object groups can be recognised by the name. E.g. the aimosSubRackV1Table comprises the following objects regarding attenuation: aimosSubRackV1AttenuationAge aimosSubRackV1AttenuationAmp1DL aimosSubRackV1AttenuationAmp1UL aimosSubRackV1AttenuationAmp2DL aimosSubRackV1AttenuationAmp2UL aimosSubRackV1AttenuationAmp3DL aimosSubRackV1AttenuationAmp3UL These values are always dealt with together, i.e. if one of these values is to be read directly by the Master Controller, all the other values will be read, too. The time of this access is recorded in the age-object belonging to each status group. Time objects can be set to 0. This serves to prompt the A.I.M.O.S. SNMP Agent to get the current values with the next access to a cachedValue(2)-instance."
  },
  "aimosNextMasterID": {
    "name": "aimosNextMasterID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "MasterID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "MDS=TMDSNextID Tag=3",
    "status": "current",
    "description": "This object of type MasterID is used in order to create new Master Unit table entries. Its value has to be used as the identifier (aimosMasterID) of the new Master Unit."
  },
  "aimosMasterUnitTable": {
    "name": "aimosMasterUnitTable",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains hardware revision independent information's about Master Units including its Master Controller. A Master Unit consists of up to 127 Remote Units. Insert rows: set aimosMasterAddress.<value of aimosNextMasterID> to the master units ip address and port Delete rows: set aimosMasterAddress.<aimosMasterID> to 'delete' (without quotation marks) TelCo's are not allowed to insert or delete rows respective Master Units."
  },
  "aimosMasterUnitEntry": {
    "name": "aimosMasterUnitEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosMasterID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISMasterUnit MDS=TMDSMasterUnit",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosMasterID": {
    "name": "aimosMasterID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MasterID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type MasterID uniquely identifies the Master Controller within the OMC. aimosNextMasterID tells you the value to be used in row creation."
  },
  "aimosMasterRDN": {
    "name": "aimosMasterRDN",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RDN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type RDN shows the Relative Distinguished Name which consists of the object type and an object instance divided by the Distinguished Name Separator defined in aimosOrgDNSeparator. (e.g. RDN: MC=11)"
  },
  "aimosMasterSDN": {
    "name": "aimosMasterSDN",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SDN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type SDN shows the System Distinguished Name which consists of a chaining of all RDN's all the way down from the OMC point of view to the desired unit. The RDN's are divided by the Distinguished Name Concatenator defined in aimosOrgDNConcatenator. (e.g. SDN for MC=11: OMC=1,MC=11)"
  },
  "aimosMasterIdentNo": {
    "name": "aimosMasterIdentNo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IdentNo",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type IdentNo carries the Mikom Identification Number of the Master Controller."
  },
  "aimosMasterSerialNo": {
    "name": "aimosMasterSerialNo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SerialNo",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type SerialNo represents the Mikom Serial Number of the Master Controller."
  },
  "aimosMasterTrapInfo": {
    "name": "aimosMasterTrapInfo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text lays down additional information to be provided with each notification sent to any SNMP Manager. The SNMP Agent makes this information available in the object aimosAlarmListCustomerMasterInfo of messages, which concern these Master Controller or subordinated devices like Sub Rack Master Units and Remote Units."
  },
  "aimosMasterLocation": {
    "name": "aimosMasterLocation",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text is a textual description of the place, where the Master Unit is located."
  },
  "aimosMasterAnyText": {
    "name": "aimosMasterAnyText",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text gives the ability to store any unit related text."
  },
  "aimosMasterMapXY": {
    "name": "aimosMasterMapXY",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Coordinates",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Coordinates carries co-ordinates of Master Unit location."
  },
  "aimosMasterOID": {
    "name": "aimosMasterOID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowPointer",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type RowPointer provides the OID where to find hardware specific information. In the first release of A.I.M.O.S. this object will point to the appropriate instance of the columnar object aimosMasterV1UnitReference. That object contains the Master Unit's UnitReference."
  },
  "aimosMasterAddress": {
    "name": "aimosMasterAddress",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IPAddressAndPort",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type IPAddressAndPort provides the Master Controllers IP address and port number. When a new Master Controller was integrated into the network by the provider, it can be integrated into the MIB, in a way that the A.I.M.O.S. SNMP Agent can answer the corresponding requests and forward alarms. The only required information is the IP address of the Master Controller and the port number where the controller software waits for incoming connections. The default is 7420. Only users of the provider are entitled to integrate Master Controllers into the MIB. In order to create a new Master Controller in the table aimosMasterUnitTable the following steps are required: aimosInitiallyMasterLoginUserName and aimosInitiallyMasterLoginPassword should correspond to the User name and password set at the Master Controller. aimosOMCConnectorAddress should contain the IP address and the IP Port under which the OMC Connector can be reached. aimosNextMasterID must be queried, in order to identify the Index to be used for creating the table entry. The returned ID is used to set aimosMasterAddress to the IP address and Port of the Master Controller. IP address and Port have to be separated by colons. If the Standard-Port 7420 is used, the port number information (and the colon) is dispensable. aimosMasterState states the success of the Master Controller integration. The desired value is properlySet(7). If not please refer to the DESCRIPTION clause for the next object (aimosMasterState). It describes, how the success of the MIB integration can be examined. Set this value to 'delete' (without quotation marks) in order to delete a Master Controller's table entry. Changes, which are made here, affect all organizations. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosMasterState": {
    "name": "aimosMasterState",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MasterState",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type MasterState indicates the state of the Master Controller's system integration and should always be properlySet(7). Immediately after the Master Controllers IP address has been assigned to the object aimosMasterAddress, the SNMP Agent tries to reach the Master Controller in order to query its GUID. Here, aimosMasterState has the value performGUIDRequest(2). Afterwards, the network structure as well as all current information is queried. During this process aimosMasterState has the value performNetInfoRequest(5). After the query the value changes to properlySet(7). Moreover, the tables aimosSubRackTable, aimosRemoteUnitTable, aimosGSMNSOTable and aimosUMTSNSOTable have one entry for each of the network elements found. Each of these tables (like the aimosMasterUnitTable) have one object referring to the hardware version specific tables (aimosMasterOID, aimosSubRackOID, aimosRemoteOID, etc.). These, too, have one entry for each of the network elements found after a successful query. It is possible that one of the queries mentioned before fails: If the GUID query was not successful the value of aimosMasterState changes from performGUIDRequest(2) to missingGUID(3). For this, there may be various reasons: One might be that the Master Controller cannot be reached under the IP address and Port Number given by aimosMasterAddress. In such a case, the A.I.M.O.S. SNMP Agent answers the allocation to aimosMasterAddress with SNMP ErrorStatus resourceUnavailable(13). The error will be corrected by correcting the IP address and/or Port in aimosMasterAddress. Another reason may be that the User in aimosMasterLoginUserName or the password in aimosMasterLoginPassword are wrong. Then, the A.I.M.O.S. SNMP Agent returns SNMP ErrorStatus noAccess(6). The error is corrected by assigning the correct Username to aimosMasterLoginUserName and/or the correct password to aimosMasterLoginPassword. Such an error may be prevented in advance by adjusting the pre-settings of these two objects. This can be done via the two objects aimosInitiallyMasterLoginUserName and aimosInitiallyMasterLoginPassword. Afterwards, a new GUID query must be made by setting aimosMasterState to requestGUID(1). It is also possible that the Master Controller is not ready. This error can be corrected by starting the Master Controller or by making it available in the network (Firewall ?). Afterwards, a new GUID query must be made by setting aimosMasterState to requestGUID(1). When a query of the network structure and/or status information failed, the value of aimosMasterState changes from performNetInfoRequest(5) to missingNetInfo(6). After correcting the cause of the failure another try to query the network structure must be made by setting aimosMasterState to requestNetInfo(4). These steps must be repeated until aimosMasterState is set to properlySet(7). Sometimes it might help to delete Master Controller and create it anew. This Leaf indicates, if the master unit is properly configured. If the GUID is missing, this Leaf contains missingGUID(3). You can assign requestGUID(1) to aimosMasterState, in order to inquire the GUID at the CONTROLLER. During the inquiry aimosMasterState's value changes to performGUIDRequest(2). If the inquiry is done, the value changes to - missingGUID(3) if the request was not successful (that means, the GUID is still unknown) - missingNetInfo(6) if the master controllers network is unknown - missingCommParams(8) if aimosMasterCommunicationID is not set - properlySet(9) if the master controllers - GUID (aimosMasterGUID) is knownn - network is known - Communication ID (aimosMasterCommunicationID) is set If the master controllers network is unknown (missingNetInfo(6)), set aimosMasterState to requestNetInfo(4). Until this command is recognized by the master controller aimosMasterState is performNetInfoRequest(5). If the CommunicationID is unknown (missingCommParams(8)), set aimosMasterCommunicationID to an appropriate value. Until this command is recognized by the master controller aimosMasterState is performSetCommParams(7). Each master controller should have the value properlySet(9) here. Changes, which are made here, affect all organizations. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosMasterGUID": {
    "name": "aimosMasterGUID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GUID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type GUID is a globally unambiguous name for the Master Controller. This is not redundant with regard to the aimosMasterID, for if a Master Controller is to be exchanged one day, the new one will certainly have another GUID while the aimosMasterID remains the same."
  },
  "aimosMasterLoginUserName": {
    "name": "aimosMasterLoginUserName",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 1,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type UserName is the user name (max. length is 20 characters) used by the OMC for establishing a login with the Master Controller. When a new table entry is made, the user name is determined by the contents of aimosInitiallyMasterLoginUserName."
  },
  "aimosMasterLoginPassword": {
    "name": "aimosMasterLoginPassword",
    "oid": "1.3.6.1.4.1.6408.201.3.5.2.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ControllerPassword",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type ControllerPassword contains the password for establishing a login with the Master Controller. The password can be read but the A.I.M.O.S. SNMP Agent only displays stars ('*') instead of the actual password. When a new table entry is made, the password is determined by the contents of aimosInitiallyMasterLoginPassword."
  },
  "aimosSubRackTable": {
    "name": "aimosSubRackTable",
    "oid": "1.3.6.1.4.1.6408.201.3.5.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains hardware revision independent information's about the SubRack Master Unit. Insert rows: must only be done by system Delete rows: must only be done by system"
  },
  "aimosSubRackEntry": {
    "name": "aimosSubRackEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.5.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosMasterID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISSubRack MDS=TMDSSubRack",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosSubRackID": {
    "name": "aimosSubRackID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SubRackID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type SubRackID uniquely identifies the Sub Rack Master Unit within its parent, a Master Unit."
  },
  "aimosSubRackRDN": {
    "name": "aimosSubRackRDN",
    "oid": "1.3.6.1.4.1.6408.201.3.5.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RDN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type RDN shows the Relative Distinguished Name which consists of the object type and an object instance divided by the Distinguished Name Separator defined in aimosOrgDNSeparator. (e.g. RDN: SRMU=19)"
  },
  "aimosSubRackSDN": {
    "name": "aimosSubRackSDN",
    "oid": "1.3.6.1.4.1.6408.201.3.5.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SDN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type SDN shows the System Distinguished Name which consists of a chaining of all RDN's all the way down from the OMC point of view to the desired unit. The RDN's are divided by Distinguished Name Concatenator defined in aimosOrgDNConcatenator. (e.g. SDN for SRMU=19 of MC 11: OMC=1,MC=11,SRMU=19)"
  },
  "aimosSubRackIdentNo": {
    "name": "aimosSubRackIdentNo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IdentNo",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type IdentNo carries the Mikom Identification Number of the Sub Rack Master Unit."
  },
  "aimosSubRackSerialNo": {
    "name": "aimosSubRackSerialNo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SerialNo",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type SerialNo represents the Mikom Serial Number of the Sub Rack Mater Unit."
  },
  "aimosSubRackTrapInfo": {
    "name": "aimosSubRackTrapInfo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text lays down additional information to be provided with each notification sent to any SNMP Manager. The SNMP Agent makes this information available in the object aimosAlarmListCustomerSubRackInfo of messages, which concern these Sub Rack Master Unit or subordinated devices like Remote Units."
  },
  "aimosSubRackLocation": {
    "name": "aimosSubRackLocation",
    "oid": "1.3.6.1.4.1.6408.201.3.5.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text is a textual description of the place, where the Sub Rack Master Unit is located."
  },
  "aimosSubRackAnyText": {
    "name": "aimosSubRackAnyText",
    "oid": "1.3.6.1.4.1.6408.201.3.5.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text gives the ability to store any unit related text."
  },
  "aimosSubRackMapXY": {
    "name": "aimosSubRackMapXY",
    "oid": "1.3.6.1.4.1.6408.201.3.5.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Coordinates",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Coordinates carries co-ordinates of Sub Rack Master Unit location."
  },
  "aimosSubRackOID": {
    "name": "aimosSubRackOID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowPointer",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type RowPointer provides the OID where to find hardware specific information. In the first release of A.I.M.O.S. this object will point to the appropriate instance of the columnar object aimosSubRackV1UnitReference. That object contains the Sub Rack Master Unit's UnitReference."
  },
  "aimosRemoteUnitTable": {
    "name": "aimosRemoteUnitTable",
    "oid": "1.3.6.1.4.1.6408.201.3.5.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains hardware revision independent information's about Remote Units. Insert rows: must only be done by system Delete rows: must only be done by system"
  },
  "aimosRemoteUnitEntry": {
    "name": "aimosRemoteUnitEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.5.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosMasterID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISRemoteUnit MDS=TMDSRemoteUnit",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosRemoteID": {
    "name": "aimosRemoteID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RemoteID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type RemoteID uniquely identifies the Remote Unit within the connected Sub Rack Master Unit."
  },
  "aimosRemoteRDN": {
    "name": "aimosRemoteRDN",
    "oid": "1.3.6.1.4.1.6408.201.3.5.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RDN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type RDN shows the Relative Distinguished Name which consists of the object type and an object instance divided by the Distinguished Name Separator defined in aimosOrgDNSeparator. (e.g. RDN: RU=1)"
  },
  "aimosRemoteSDN": {
    "name": "aimosRemoteSDN",
    "oid": "1.3.6.1.4.1.6408.201.3.5.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SDN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type SDN shows the System Distinguished Name which consists of a chaining of all RDN's all the way down from the OMC point of view to the desired unit. The RDN's are divided by Distinguished Name Concatenator defined in aimosOrgDNConcatenator. (e.g. SDN for a single RU connected to SRMU 23 of MC 11: OMC=1,MC=11,SRMU=23,RU=1)"
  },
  "aimosRemoteIdentNo": {
    "name": "aimosRemoteIdentNo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IdentNo",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type IdentNo carries the Mikom Identification Number of the Remote Unit."
  },
  "aimosRemoteSerialNo": {
    "name": "aimosRemoteSerialNo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SerialNo",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type SerialNo represents the Mikom Serial Number of the Remote Unit."
  },
  "aimosRemoteTrapInfo": {
    "name": "aimosRemoteTrapInfo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text lays down additional information to be provided with each notification sent to any SNMP Manager. The SNMP Agent makes this information available in the object aimosAlarmListCustomerRemoteInfo of messages, which concern these Remote Unit or subordinated devices like GSM NSO's and UMTS NSO's."
  },
  "aimosRemoteLocation": {
    "name": "aimosRemoteLocation",
    "oid": "1.3.6.1.4.1.6408.201.3.5.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text is a textual description of the place, where the Remote Unit is located."
  },
  "aimosRemoteAnyText": {
    "name": "aimosRemoteAnyText",
    "oid": "1.3.6.1.4.1.6408.201.3.5.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text gives the ability to store any unit related text."
  },
  "aimosRemoteMapXY": {
    "name": "aimosRemoteMapXY",
    "oid": "1.3.6.1.4.1.6408.201.3.5.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Coordinates",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Coordinates carries co-ordinates of Remote Unit location."
  },
  "aimosRemoteOID": {
    "name": "aimosRemoteOID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.4.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowPointer",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type RowPointer provides the OID where to find hardware specific information. In the first release of A.I.M.O.S. this object will point to the appropriate instance of the columnar object aimosRemoteV1UnitReference. That object contains the Remote Unit's UnitReference."
  },
  "aimosGSMNSOTable": {
    "name": "aimosGSMNSOTable",
    "oid": "1.3.6.1.4.1.6408.201.3.5.5",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains hardware revision independent information's about GSM NSO's. Insert rows: must only be done by system Delete rows: must only be done by system"
  },
  "aimosGSMNSOEntry": {
    "name": "aimosGSMNSOEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.5.5.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosMasterID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISGSMNSO MDS=TMDSGSMNSO",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosGSMNSOID": {
    "name": "aimosGSMNSOID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.5.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "NSOID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type NSOID uniquely identifies the GSM NSO within the connected Remote Unit."
  },
  "aimosGSMNSORDN": {
    "name": "aimosGSMNSORDN",
    "oid": "1.3.6.1.4.1.6408.201.3.5.5.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RDN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type RDN shows the Relative Distinguished Name which consists of the object type and an object instance divided by the Distinguished Name Separator defined in aimosOrgDNSeparator. (e.g. RDN: NSOG=1)"
  },
  "aimosGSMNSOSDN": {
    "name": "aimosGSMNSOSDN",
    "oid": "1.3.6.1.4.1.6408.201.3.5.5.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SDN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type SDN shows the System Distinguished Name which consists of a chaining of all RDN's all the way down from the OMC point of view to the desired unit. The RDN's are divided by Distinguished Name Concatenator defined in aimosOrgDNConcatenator. (e.g. SDN for the GSM NSO at a single RU connected to SRMU 23 of MC 11: OMC=1,MC=11,SRMU=23,RU=1,NSOG=1)"
  },
  "aimosGSMNSOIdentNo": {
    "name": "aimosGSMNSOIdentNo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.5.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IdentNo",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type IdentNo carries the Mikom Identification Number of the GSM NSO."
  },
  "aimosGSMNSOSerialNo": {
    "name": "aimosGSMNSOSerialNo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.5.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SerialNo",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type SerialNo represents the Mikom Serial Number of the GSM NSO."
  },
  "aimosGSMNSOTrapInfo": {
    "name": "aimosGSMNSOTrapInfo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.5.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text lays down additional information to be provided with each notification sent to any SNMP Manager. Since the GSM NSO is located in the Remote Unit, this objects value is identical to the aimosRemoteTrapInfo's value."
  },
  "aimosGSMNSOLocation": {
    "name": "aimosGSMNSOLocation",
    "oid": "1.3.6.1.4.1.6408.201.3.5.5.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text is a textual description of the place, where the GSM NSO is located. Since the GSM NSO is located in the Remote Unit, this object's value is identical to aimosRemoteLocation's value."
  },
  "aimosGSMNSOAnyText": {
    "name": "aimosGSMNSOAnyText",
    "oid": "1.3.6.1.4.1.6408.201.3.5.5.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text gives the ability to store any unit related text."
  },
  "aimosGSMNSOMapXY": {
    "name": "aimosGSMNSOMapXY",
    "oid": "1.3.6.1.4.1.6408.201.3.5.5.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Coordinates",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Coordinates carries co-ordinates of GSM NSO location."
  },
  "aimosGSMNSOOID": {
    "name": "aimosGSMNSOOID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.5.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowPointer",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type RowPointer provides the OID where to find hardware specific information. In the first release of A.I.M.O.S. this object will point to the appropriate instance of the columnar object aimosGSMNSOV1UnitReference. That object contains the GSM NSO's UnitReference."
  },
  "aimosGSMNSOOIDData": {
    "name": "aimosGSMNSOOIDData",
    "oid": "1.3.6.1.4.1.6408.201.3.5.5.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowPointer",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type RowPointer shows the OID, which provides measurement data of GSM NSO. In the first release of A.I.M.O.S. this object will point to directly preceding the first appropriate instance of the columnar object aimosGSMNSODataV1ID."
  },
  "aimosUMTSNSOTable": {
    "name": "aimosUMTSNSOTable",
    "oid": "1.3.6.1.4.1.6408.201.3.5.6",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains hardware revision independent information's about UMTS NSO's. Insert rows: must only be done by system Delete rows: must only be done by system"
  },
  "aimosUMTSNSOEntry": {
    "name": "aimosUMTSNSOEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.5.6.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosMasterID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteID",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISUMTSNSO MDS=TMDSUMTSNSO",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosUMTSNSOID": {
    "name": "aimosUMTSNSOID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.6.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "NSOID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type NSOID uniquely identifies the UMTS NSO within the connected Remote Unit."
  },
  "aimosUMTSNSORDN": {
    "name": "aimosUMTSNSORDN",
    "oid": "1.3.6.1.4.1.6408.201.3.5.6.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RDN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type RDN shows the Relative Distinguished Name which consists of the object type and an object instance divided by the Distinguished Name Separator defined in aimosOrgDNSeparator. (e.g. RDN: NSOU=1)"
  },
  "aimosUMTSNSOSDN": {
    "name": "aimosUMTSNSOSDN",
    "oid": "1.3.6.1.4.1.6408.201.3.5.6.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SDN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type SDN shows the System Distinguished Name which consists of a chaining of all RDN's all the way down from the OMC point of view to the desired unit. The RDN's are divided by Distinguished Name Concatenator defined in aimosOrgDNConcatenator. (e.g. SDN for the UMTS NSO at a single RU connected to SRMU 23 of MC 11: OMC=1,MC=11,SRMU=23,RU=1,NSOU=1)"
  },
  "aimosUMTSNSOIdentNo": {
    "name": "aimosUMTSNSOIdentNo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.6.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IdentNo",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type IdentNo carries the Mikom Identification Number of the UMTS NSO."
  },
  "aimosUMTSNSOSerialNo": {
    "name": "aimosUMTSNSOSerialNo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.6.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SerialNo",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type SerialNo represents the Mikom Serial Number of the UMTS NSO."
  },
  "aimosUMTSNSOTrapInfo": {
    "name": "aimosUMTSNSOTrapInfo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.6.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text lays down additional information to be provided with each notification sent to any SNMP Manager. Since the UMTS NSO is located in the Remote Unit, this objects value is identical to the aimosRemoteTrapInfo's value."
  },
  "aimosUMTSNSOLocation": {
    "name": "aimosUMTSNSOLocation",
    "oid": "1.3.6.1.4.1.6408.201.3.5.6.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text is a textual description of the place, where the UMTS NSO is located. Since the UMTS NSO is located in the Remote Unit, this object's value is identical to aimosRemoteLocation's value."
  },
  "aimosUMTSNSOAnyText": {
    "name": "aimosUMTSNSOAnyText",
    "oid": "1.3.6.1.4.1.6408.201.3.5.6.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text gives the ability to store any unit related text."
  },
  "aimosUMTSNSOMapXY": {
    "name": "aimosUMTSNSOMapXY",
    "oid": "1.3.6.1.4.1.6408.201.3.5.6.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Coordinates",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Coordinates carries co-ordinates of UMTS NSO location."
  },
  "aimosUMTSNSOOID": {
    "name": "aimosUMTSNSOOID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.6.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowPointer",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type RowPointer provides the OID where to find hardware specific information. In the first release of A.I.M.O.S. this object will point to the appropriate instance of the columnar object aimosUMTSNSOV1UnitReference. That object contains the UMTS NSO's UnitReference."
  },
  "aimosUMTSNSOOIDData": {
    "name": "aimosUMTSNSOOIDData",
    "oid": "1.3.6.1.4.1.6408.201.3.5.6.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowPointer",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type RowPointer shows the OID, which provides measurement data of UMTS NSO. In the first release of A.I.M.O.S. this object will point to directly preceding the first appropriate instance of the columnar object aimosUMTSNSODataV1ID."
  },
  "aimosNextCableID": {
    "name": "aimosNextCableID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "CableID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "reference": "MDS=TMDSNextID Tag=4",
    "status": "current",
    "description": "This object of type CableID has to be used in order to create new entries in aimosCableTable. The value has to be used as the identifier for new entries."
  },
  "aimosCableTable": {
    "name": "aimosCableTable",
    "oid": "1.3.6.1.4.1.6408.201.3.5.8",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information's about fibre-optic cables used in interconnection between Remote Units and SubRack Master Units. This information is transmitted as part of traps and, thus offers the possibility to recognise a cable damage in case several Remote Units that all use the same cable show a failure. If this information is not necessary this table may be left empty. Insert rows: set aimosCableCode.<value of aimosNextCableID> to the cable's code Delete rows: set aimosCableCode.<aimosCableID> to 'delete' (without quotation marks) TelCo's are not allowed to insert or delete rows."
  },
  "aimosCableEntry": {
    "name": "aimosCableEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.5.8.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosCableID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISCable MDS=TMDSCable",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosCableID": {
    "name": "aimosCableID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.8.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CableID",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type CableID is an unique identifier for cable table entries. aimosNextCableID tells you the value to be used in cable table entry creation."
  },
  "aimosCableCode": {
    "name": "aimosCableCode",
    "oid": "1.3.6.1.4.1.6408.201.3.5.8.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CableCode",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This value of type CableCode holds the textual identification / representation of a specific cable. Set this value to 'delete' (without quotation marks) in order to delete this entry. Changes, which are made here, affect all organizations. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosCableTrapInfo": {
    "name": "aimosCableTrapInfo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.8.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "In aimosCableTrapInfo of type Text a freely definable identification can be entered, by which the cable can be identified. This identifier is transmitted with the alarm notifications referring to A.I.M.O.S. units (aimosAlarmNew, aimosAlarmChanged and aimosAlarmCleared) in the object aimosAlarmListCustomerCableInfo. In this text, the wildcard character %s can be used. It has the effect that at the according position in the traps the contents of the object aimosCableUsageFibreCode are inserted. In this way, the cable identification can be extended by the corresponding core identifier. Attention: If aimosCableUsageAlternativeTrapInfo contains text, that text will be used for the creation of the aimosAlarmListCustomerCableInfo, thus; aimosCableTrapInfo will then be without meaning."
  },
  "aimosCableLocation": {
    "name": "aimosCableLocation",
    "oid": "1.3.6.1.4.1.6408.201.3.5.8.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text is a textual description of the place, where the cable is located. Changes, which are made here, affect all organizations. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosCableAnyText": {
    "name": "aimosCableAnyText",
    "oid": "1.3.6.1.4.1.6408.201.3.5.8.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type Text gives the ability to store any unit related text. Changes, which are made here, affect all organizations. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosCableUsageTable": {
    "name": "aimosCableUsageTable",
    "oid": "1.3.6.1.4.1.6408.201.3.5.9",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information as to which cable or even which cores of a cable were used to connect a certain Sub Rack Master Unit to a certain Remote Unit. This information is transmitted with the traps and is designed to indicate a cable damage in case several Remote Units that all use the same cable show a failure at the same time. If this information is not required, the table can be ignored. Insert rows: set aimosCableUsageCableID.<aimosCableUsageRemoteUnitReference>. <aimosCableUsageID> to the aimosCableID of the used cable Delete rows: set aimosCableUsageCableID.<aimosCableUsageRemoteUnitReference>. <aimosCableUsageID> to zero TelCo's are not allowed to insert or delete rows."
  },
  "aimosCableUsageEntry": {
    "name": "aimosCableUsageEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.5.9.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosCableUsageRemoteUnitReference",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosCableUsageID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISCableUsage MDS=TMDSCableUsage",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosCableUsageRemoteUnitReference": {
    "name": "aimosCableUsageRemoteUnitReference",
    "oid": "1.3.6.1.4.1.6408.201.3.5.9.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UnitReference",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object is of type UnitReference and identifies the Remote Unit to which the current table entry does refer."
  },
  "aimosCableUsageID": {
    "name": "aimosCableUsageID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.9.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object determines the sequence of cables used in order to connect the Sub Rack Master Unit with a specific Remote Unit. The cable directly connected to the Sub Rack Master Unit get number one. The numbers increase by one with the distance from the Sub Rack Master Unit."
  },
  "aimosCableUsageCableID": {
    "name": "aimosCableUsageCableID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.9.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CableID",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type CableID shows which cable was used to connect the Remote Unit identified by aimosCableUsageRemoteUnitReference with the SubRack Master Unit. Setting this value to 0 deletes the table entry."
  },
  "aimosCableUsageFibreCode": {
    "name": "aimosCableUsageFibreCode",
    "oid": "1.3.6.1.4.1.6408.201.3.5.9.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CableCode",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type CableCode can be used to identify the cores used in the cable. This identification can be taken over into the object aimosAlarmListCustomerCableInfo of several alarm traps by entering the wildcard character %s in aimosCableTrapInfo."
  },
  "aimosCableUsageAlternativeTrapInfo": {
    "name": "aimosCableUsageAlternativeTrapInfo",
    "oid": "1.3.6.1.4.1.6408.201.3.5.9.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "In aimosCableUsageAlternativeTrapInfo of type Text a freely definable identification for identifying cable and used core can be entered. This identification is transmitted with the alarm notifications referring to A.I.M.O.S. units (aimosAlarmNew, aimosAlarmChanged and aimosAlarmCleared), in the object aimosAlarmListCustomerCableInfo. If this object is used, object aimosCableTrapInfo remains without meaning."
  },
  "aimosMasterUnitV1Table": {
    "name": "aimosMasterUnitV1Table",
    "oid": "1.3.6.1.4.1.6408.201.3.5.13",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information's about Master Units with hardware revision 1. Insert rows: must only be done by system Delete rows: must only be done by system"
  },
  "aimosMasterUnitV1Entry": {
    "name": "aimosMasterUnitV1Entry",
    "oid": "1.3.6.1.4.1.6408.201.3.5.13.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosMasterV1UnitReference",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterV1ValueSource",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISMasterUnitV1 MDS=TMDSMasterUnitV1",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosMasterV1UnitReference": {
    "name": "aimosMasterV1UnitReference",
    "oid": "1.3.6.1.4.1.6408.201.3.5.13.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UnitReference",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type UnitReference is the first index of this table. It unambiguously identifies the unit, independent of its kind (Master Unit, Sub Rack Master Unit, Remote Unit,...)."
  },
  "aimosMasterV1ValueSource": {
    "name": "aimosMasterV1ValueSource",
    "oid": "1.3.6.1.4.1.6408.201.3.5.13.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ValueSource",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type ValueSource is the second index in this table. It indicates, which value is to be addressed (actual, cached or desired value): actual : An access to the hardware takes place in order to query the current values. These values are stored in the SNMP Agents local database. Actual values are read only. cached : The values stored with the last hardware access are indicated. This is the default in order to shorten the period of reply. If the associated age value is missing, then the access is treated in such a way, as if actual one would have indicated. Cached values are read only (see remark below). desired: Has to be used, if values on the hardware are to be changed. Remark: Although write accesses on cached values do not make a sense, are they permitted in order to facilitate handling with the MIB. Write accesses on cached values are treated in such a way, as if desired one would have indicated."
  },
  "aimosMasterV1HeartbeatInterval": {
    "name": "aimosMasterV1HeartbeatInterval",
    "oid": "1.3.6.1.4.1.6408.201.3.5.13.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "WeekMinutes",
      "class": "type"
    },
    "units": "minutes",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Alternatively to a regular polling of the Master Controllers by an SNMP Manager, the Master Controller is capable of sending a regular 'I'm-alive-message' to the A.I.M.O.S. SNMP Agent. In this way, the A.I.M.O.S. SNMP Agent will recognise a failure of the Master Controller when the message is no longer sent and can consequently generate and send out a aimosAlarmNew notification with the objects aimosAlarmListAlarmID set to alarmHeartbeatMissing(63) and aimosAlarmListSpecificProblem set to 8888. aimosMasterV1HeartbeatInterval is an object of type WeekMinutes, by which the interval at which the Master Controller is to send this 'life sign' can be set. Values from 0 up to 10.080 are allowed. Setting 0 deactivates the Heartbeat feature, the highest setting 10.080 sets the interval to one week."
  },
  "aimosMasterV1HeartbeatOvertime": {
    "name": "aimosMasterV1HeartbeatOvertime",
    "oid": "1.3.6.1.4.1.6408.201.3.5.13.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "WeekMinutes",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "units": "minutes",
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type WeekMinutes offers the possibility to set a certain waiting time. This is required to compensate the differing latency periods of the Master Controller and the A.I.M.O.S. SNMP Agent. The default value of 1 minute should generally be sufficient. Only in case of a very slow connection establishment or if the Master Controller / A.I.M.O.S. SNMP Agent is very busy, this value should be increased to avoid false alarms."
  },
  "aimosMasterV1HeartbeatTime": {
    "name": "aimosMasterV1HeartbeatTime",
    "oid": "1.3.6.1.4.1.6408.201.3.5.13.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type VariableTime provides the time when the Master Controller sent the last life sign. It does not make sense to read this value to an instance with aimosMasterV1ValueSource of actualValue(1); there is only one value for the instance cachedValue(2)."
  },
  "aimosSubRackV1Table": {
    "name": "aimosSubRackV1Table",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information's about SubRack Master Units with hardware revision 1. Insert rows: must only be done by system Delete rows: must only be done by system"
  },
  "aimosSubRackV1Entry": {
    "name": "aimosSubRackV1Entry",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1UnitReference",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1ValueSource",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISSubRackV1 MDS=TMDSSubRackV1",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosSubRackV1UnitReference": {
    "name": "aimosSubRackV1UnitReference",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UnitReference",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type UnitReference is the first index of this table. It unambiguously identifies the unit, independent of its kind (Master Unit, Sub Rack Master Unit, Remote Unit,...)."
  },
  "aimosSubRackV1ValueSource": {
    "name": "aimosSubRackV1ValueSource",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ValueSource",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type ValueSource is the second index in this table. It indicates, which value is to be addressed (actual, cached or desired value): actual : An access to the hardware takes place in order to query the current values. These values are stored in the SNMP Agents local database. Actual values are read only. cached : The values stored with the last hardware access are indicated. This is the default in order to shorten the period of reply. If the associated age value is missing, then the access is treated in such a way, as if actual one would have indicated. Cached values are read only (see remark below). desired: Has to be used, if values on the hardware are to be changed. Remark: Although write accesses on cached values do not make a sense, are they permitted in order to facilitate handling with the MIB. Write accesses on cached values are treated in such a way, as if desired one would have indicated."
  },
  "aimosSubRackV1AttenuationAge": {
    "name": "aimosSubRackV1AttenuationAge",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "In both the uplink (UL) and the downlink (DL) path for each of the three bands supported by the three amplifiers (1 to 3), the attenuation of the corresponding attenuator (located in the optical device) responsible for Autolevelling can be read-off or (only in case of a provider) be changed. For this purpose, the MIB contains the following six objects: aimosSubRackV1AttenuationAmp1DL aimosSubRackV1AttenuationAmp1UL aimosSubRackV1AttenuationAmp2DL aimosSubRackV1AttenuationAmp2UL aimosSubRackV1AttenuationAmp3DL aimosSubRackV1AttenuationAmp3UL. These objects are of the Attenuation type and contain the attenuation value in dB. The time when the values were last read is recorded in the object aimosSubRackV1AttenuationAge of the VariableTime type. This value can be set to empty text in order to prompt the Controller to query the values anew with the next request to a cachedValue(2)-instance directly at the Master Controller."
  },
  "aimosSubRackV1AttenuationAmp1DL": {
    "name": "aimosSubRackV1AttenuationAmp1DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Attenuation",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Attenuation on amplifier 1 downlink. The object aimosSubRackV1AttenuationAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosSubRackV1AttenuationAmp1UL": {
    "name": "aimosSubRackV1AttenuationAmp1UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Attenuation",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Attenuation on amplifier 1 uplink. The object aimosSubRackV1AttenuationAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosSubRackV1AttenuationAmp2DL": {
    "name": "aimosSubRackV1AttenuationAmp2DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Attenuation",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Attenuation on amplifier 2 downlink. The object aimosSubRackV1AttenuationAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosSubRackV1AttenuationAmp2UL": {
    "name": "aimosSubRackV1AttenuationAmp2UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Attenuation",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Attenuation on amplifier 2 uplink. The object aimosSubRackV1AttenuationAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosSubRackV1AttenuationAmp3DL": {
    "name": "aimosSubRackV1AttenuationAmp3DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Attenuation",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Attenuation on amplifier 3 downlink. The object aimosSubRackV1AttenuationAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosSubRackV1AttenuationAmp3UL": {
    "name": "aimosSubRackV1AttenuationAmp3UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Attenuation",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Attenuation on amplifier 3 uplink. The object aimosSubRackV1AttenuationAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosSubRackV1GainOffsetAge": {
    "name": "aimosSubRackV1GainOffsetAge",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "In both the uplink (UL) and the downlink (DL) path for each of the three bands provided by the three amplifiers (1 to 3), the gain offset can be read-off and is adjustable by the provider. For this the MIB contains the following six objects: aimosSubRackV1GainOffsetAmp1DL aimosSubRackV1GainOffsetAmp1UL aimosSubRackV1GainOffsetAmp2DL aimosSubRackV1GainOffsetAmp2UL aimosSubRackV1GainOffsetAmp3DL aimosSubRackV1GainOffsetAmp3UL. These objects are of the GainOffset type and contain the gain offset values. The time when the values were last read is recorded in the object aimosSubRackV1GainOffsetAge of the VariableTime type. This value can be set to empty text in order to prompt the Controller to query the values anew with the next request to a cachedValue(2)-instance directly at the Master Controller."
  },
  "aimosSubRackV1GainOffsetAmp1DL": {
    "name": "aimosSubRackV1GainOffsetAmp1DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GainOffset",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Gain offset on amplifier 1 downlink. The object aimosSubRackV1GainOffsetAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosSubRackV1GainOffsetAmp1UL": {
    "name": "aimosSubRackV1GainOffsetAmp1UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GainOffset",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Gain offset on amplifier 1 uplink. The object aimosSubRackV1GainOffsetAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosSubRackV1GainOffsetAmp2DL": {
    "name": "aimosSubRackV1GainOffsetAmp2DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GainOffset",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Gain offset on amplifier 2 downlink. The object aimosSubRackV1GainOffsetAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosSubRackV1GainOffsetAmp2UL": {
    "name": "aimosSubRackV1GainOffsetAmp2UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GainOffset",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Gain offset on amplifier 2 uplink. The object aimosSubRackV1GainOffsetAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosSubRackV1GainOffsetAmp3DL": {
    "name": "aimosSubRackV1GainOffsetAmp3DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GainOffset",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Gain offset on amplifier 3 downlink. The object aimosSubRackV1GainOffsetAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosSubRackV1GainOffsetAmp3UL": {
    "name": "aimosSubRackV1GainOffsetAmp3UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GainOffset",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Gain offset on amplifier 3 uplink. The object aimosSubRackV1GainOffsetAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosSubRackV1TemperatureAge": {
    "name": "aimosSubRackV1TemperatureAge",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "aimosSubRackV1TemperatureBoard is an object of the TemperatureStatus type and contains the temperature measured at the SubRack Master Unit, in degrees Celsius. The time when the value was last read is recorded in the object aimosSubRackV1TemperatureAge of the VariableTime type. This value can be set to empty text in order to prompt the Controller to query the temperature anew with the next request to a cachedValue(2)-instance directly at the Master Controller."
  },
  "aimosSubRackV1TemperatureBoard": {
    "name": "aimosSubRackV1TemperatureBoard",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TemperatureStatus",
      "class": "type"
    },
    "units": "degrees centigrade",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Temperature in degrees centigrade measured at the Sub Rack Master Unit. The object aimosSubRackV1TemperatureAge indicates the age of this information."
  },
  "aimosSubRackV1AmplifierBandNamesAge": {
    "name": "aimosSubRackV1AmplifierBandNamesAge",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Both Sub Rack Master Unit and each of its connected Remote Units have up to three amplifiers. The objects aimosSubRackV1Amplifier1BandName aimosSubRackV1Amplifier2BandName aimosSubRackV1Amplifier3BandName contain the frequency band names, which are strengthened by the Sub Rack Master Units and its connected Remote Units amplifiers. Each of the object is of type Text with up to 10 characters. The time when the values were last read is recorded in the object aimosSubRackV1AmplifierBandNamesAge of the VariableTime type. This value can be set to empty text in order to prompt the Controller to query the names anew with the next request to a cachedValue(2)-instance directly at the Master Controller. "
  },
  "aimosSubRackV1Amplifier1BandName": {
    "name": "aimosSubRackV1Amplifier1BandName",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "States which frequency band (UMTS, GSM1800, GSM900, or any else) is assigned to amplifier 1. The object aimosSubRackV1AmplifierBandNamesAge indicates the age of this information."
  },
  "aimosSubRackV1Amplifier2BandName": {
    "name": "aimosSubRackV1Amplifier2BandName",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "States which frequency band (UMTS, GSM1800, GSM900, or any else) is assigned to amplifier 2. The object aimosSubRackV1AmplifierBandNamesAge indicates the age of this information."
  },
  "aimosSubRackV1Amplifier3BandName": {
    "name": "aimosSubRackV1Amplifier3BandName",
    "oid": "1.3.6.1.4.1.6408.201.3.5.14.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "States which frequency band (UMTS, GSM1800, GSM900, or any else) is assigned to amplifier 3. The object aimosSubRackV1AmplifierBandNamesAge indicates the age of this information."
  },
  "aimosRemoteUnitV1Table": {
    "name": "aimosRemoteUnitV1Table",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains information's about Remote Units with hardware revision 1. Insert rows: must only be done by system Delete rows: must only be done by system"
  },
  "aimosRemoteUnitV1Entry": {
    "name": "aimosRemoteUnitV1Entry",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1UnitReference",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1ValueSource",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISRemoteUnitV1 MDS=TMDSRemoteUnitV1",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosRemoteV1UnitReference": {
    "name": "aimosRemoteV1UnitReference",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UnitReference",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type UnitReference is the first index of this table. It unambiguously identifies the unit, independent of its kind (Master Unit, Sub Rack Master Unit, Remote Unit,...)."
  },
  "aimosRemoteV1ValueSource": {
    "name": "aimosRemoteV1ValueSource",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ValueSource",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type ValueSource is the second index in this table. It indicates, which value is to be addressed (actual, cached or desired value): actual : An access to the hardware takes place in order to query the current values. These values are stored in the SNMP Agents local database. Actual values are read only. cached : The values stored with the last hardware access are indicated. This is the default in order to shorten the period of reply. If the associated age value is missing, then the access is treated in such a way, as if actual one would have indicated. Cached values are read only (see remark below). desired: Has to be used, if values on the hardware are to be changed. Remark: Although write accesses on cached values do not make a sense, are they permitted in order to facilitate handling with the MIB. Write accesses on cached values are treated in such a way, as if desired one would have indicated."
  },
  "aimosRemoteV1NominalTemperatureAge": {
    "name": "aimosRemoteV1NominalTemperatureAge",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "aimosRemoteUnitV1NominalTemperature is an object of type NominalTemperature, where the temperature to be obtained by fan control is entered in degrees centigrade. The time when the value was last read is recorded in the object aimosRemoteUnitV1NominalTemperatureAge of the VariableTime type. This value can be set to empty text in order to prompt the Controller to query the nominal temperature anew with the next request to a cachedValue(2)-instance directly at the Master Controller."
  },
  "aimosRemoteV1NominalTemperature": {
    "name": "aimosRemoteV1NominalTemperature",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "NominalTemperature",
      "class": "type"
    },
    "units": "degrees centigrade",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Temperature to be obtained by fan control in degrees centigrade. The object aimosRemoteV1NominalTemperatureAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1TemperatureAge": {
    "name": "aimosRemoteV1TemperatureAge",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Remote Unit has five temperature probes. For this, the MIB contains the following objects: aimosRemoteV1TemperatureAmp1 aimosRemoteV1TemperatureAmp2 aimosRemoteV1TemperatureAmp3 aimosRemoteV1TemperatureBoard aimosRemoteV1TemperaturePowerSupply These objects are of type TemperatureStatus and contain the temperatures measured at the according probe in degrees centigrade. The time when the values were last read is recorded in the object aimosRemoteV1TemperatureAge of type VariableTime. This value can be set to empty text in order to prompt the Controller to query the temperatures anew with the next request to a cachedValue(2)-instance directly at the Master Controller."
  },
  "aimosRemoteV1TemperatureAmp1": {
    "name": "aimosRemoteV1TemperatureAmp1",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TemperatureStatus",
      "class": "type"
    },
    "units": "degrees centigrade",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Amplifier 1 temperature in degrees centigrade. The object aimosRemoteV1TemperatureAge indicates the age of this information."
  },
  "aimosRemoteV1TemperatureAmp2": {
    "name": "aimosRemoteV1TemperatureAmp2",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TemperatureStatus",
      "class": "type"
    },
    "units": "degrees centigrade",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Amplifier 2 temperature in degrees centigrade. The object aimosRemoteV1TemperatureAge indicates the age of this information."
  },
  "aimosRemoteV1TemperatureAmp3": {
    "name": "aimosRemoteV1TemperatureAmp3",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TemperatureStatus",
      "class": "type"
    },
    "units": "degrees centigrade",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Amplifier 3 temperature in degrees centigrade. The object aimosRemoteV1TemperatureAge indicates the age of this information."
  },
  "aimosRemoteV1TemperatureBoard": {
    "name": "aimosRemoteV1TemperatureBoard",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TemperatureStatus",
      "class": "type"
    },
    "units": "degrees centigrade",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Board temperature in degrees centigrade. The object aimosRemoteV1TemperatureAge indicates the age of this information."
  },
  "aimosRemoteV1TemperaturePowerSupply": {
    "name": "aimosRemoteV1TemperaturePowerSupply",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TemperatureStatus",
      "class": "type"
    },
    "units": "degrees centigrade",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Power supply temperature in degrees centigrade. The object aimosRemoteV1TemperatureAge indicates the age of this information."
  },
  "aimosRemoteV1AmplifierStateAge": {
    "name": "aimosRemoteV1AmplifierStateAge",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The downlink amplifiers for each one of the three frequency bands supported by the Remote Unit can be switched individually. For this, the MIB contains the following three objects: aimosRemoteV1Amplifier1State aimosRemoteV1Amplifier2State aimosRemoteV1Amplifier3State These objects are of the Boolean type and show whether the corresponding amplifier is active or not. The time when the value was last read is recorded in the object aimosRemoteV1AmplifierStateAge of the type VariableTime. This value can be set to empty text in order to prompt the Controller to query the values anew with the next request to a cachedValue(2)-instance directly at the Master Controller."
  },
  "aimosRemoteV1Amplifier1State": {
    "name": "aimosRemoteV1Amplifier1State",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Denotes if the amplifier 1 is active or not. The object aimosRemoteV1AmplifierStateAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1Amplifier2State": {
    "name": "aimosRemoteV1Amplifier2State",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Denotes if the amplifier 2 is active or not. The object aimosRemoteV1AmplifierStateAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1Amplifier3State": {
    "name": "aimosRemoteV1Amplifier3State",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Denotes if the amplifier 3 is active or not. The object aimosRemoteV1AmplifierStateAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1AmplifierPowerAge": {
    "name": "aimosRemoteV1AmplifierPowerAge",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The output power at the downlink amplifiers for each one of the three frequency bands supported by the Remote Unit can be read off individually. For this, the MIB contains the following three objects: aimosRemoteV1Amplifier1Power aimosRemoteV1Amplifier2Power aimosRemoteV1Amplifier3Power These objects are of the AmplifierPower type and show the output power of the corresponding amplifier in one tenth of dB. The time when the value was last read is recorded in the object aimosRemoteV1AmplifierPowerAge of type VariableTime. This value can be set to empty text in order to prompt the Controller to query the values anew with the next request to a cachedValue(2)-instance directly at the Master Controller."
  },
  "aimosRemoteV1Amplifier1Power": {
    "name": "aimosRemoteV1Amplifier1Power",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AmplifierPower",
      "class": "type"
    },
    "units": "dB/10",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Power of amplifier 1 in dB. The object aimosRemoteV1AmplifierPowerAge indicates the age of this information."
  },
  "aimosRemoteV1Amplifier2Power": {
    "name": "aimosRemoteV1Amplifier2Power",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AmplifierPower",
      "class": "type"
    },
    "units": "dB/10",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Power of amplifier 2 in dB. The object aimosRemoteV1AmplifierPowerAge indicates the age of this information."
  },
  "aimosRemoteV1Amplifier3Power": {
    "name": "aimosRemoteV1Amplifier3Power",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AmplifierPower",
      "class": "type"
    },
    "units": "dB/10",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Power of amplifier 3 in dB. The object aimosRemoteV1AmplifierPowerAge indicates the age of this information."
  },
  "aimosRemoteV1AttenuationAge": {
    "name": "aimosRemoteV1AttenuationAge",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "For both the uplink (UL) and downlink (DL) paths the attenuation of the corresponding attenuator (located at the optical unit) required for Autolevelling for each one of the three frequency bands can be read off individually or may be changed (only by the provider). For this, the MIB contains the following six objects: aimosRemoteV1AttenuationAmp1DL aimosRemoteV1AttenuationAmp1UL aimosRemoteV1AttenuationAmp2DL aimosRemoteV1AttenuationAmp2UL aimosRemoteV1AttenuationAmp3DL aimosRemoteV1AttenuationAmp3UL. These objects are of the Attenuation type and contain the attenuation value in dB. The time when the value was last read is recorded in the object aimosRemoteV1AttenuationAge of type VariableTime. This value can be set to empty text in order to prompt the Controller to query the values anew with the next request to a cachedValue(2)-instance directly at the Master Controller."
  },
  "aimosRemoteV1AttenuationAmp1DL": {
    "name": "aimosRemoteV1AttenuationAmp1DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Attenuation",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Attenuation on amplifier 1 downlink. The object aimosRemoteV1AttenuationAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1AttenuationAmp1UL": {
    "name": "aimosRemoteV1AttenuationAmp1UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Attenuation",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Attenuation on amplifier 1 uplink. The object aimosRemoteV1AttenuationAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1AttenuationAmp2DL": {
    "name": "aimosRemoteV1AttenuationAmp2DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Attenuation",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Attenuation on amplifier 2 downlink. The object aimosRemoteV1AttenuationAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1AttenuationAmp2UL": {
    "name": "aimosRemoteV1AttenuationAmp2UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Attenuation",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Attenuation on amplifier 2 uplink. The object aimosRemoteV1AttenuationAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1AttenuationAmp3DL": {
    "name": "aimosRemoteV1AttenuationAmp3DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Attenuation",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Attenuation on amplifier 3 downlink. The object aimosRemoteV1AttenuationAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1AttenuationAmp3UL": {
    "name": "aimosRemoteV1AttenuationAmp3UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Attenuation",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Attenuation on amplifier 3 uplink. The object aimosRemoteV1AttenuationAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1GainOffsetAge": {
    "name": "aimosRemoteV1GainOffsetAge",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "For both the uplink (UL) and downlink (DL) paths the gain offset for each one of the three frequency bands can be read off individually or may be changed (only by the provider). For this, the MIB contains the following six objects: aimosRemoteV1GainOffsetAmp1DL aimosRemoteV1GainOffsetAmp1UL aimosRemoteV1GainOffsetAmp2DL aimosRemoteV1GainOffsetAmp2UL aimosRemoteV1GainOffsetAmp3DL aimosRemoteV1GainOffsetAmp3UL. These objects are of the GainOffset type and show the gain offset values. The time when the value was last read is recorded in the object aimosRemoteV1GainOffsetAge of type VariableTime This value can be set to empty text in order to prompt the Controller to query the values anew with the next request to a cachedValue(2)-instance directly at the Master Controller."
  },
  "aimosRemoteV1GainOffsetAmp1DL": {
    "name": "aimosRemoteV1GainOffsetAmp1DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GainOffset",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Gain offset on amplifier 1 downlink. The object aimosRemoteV1GainOffsetAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why it's not allowed to make any changes here."
  },
  "aimosRemoteV1GainOffsetAmp1UL": {
    "name": "aimosRemoteV1GainOffsetAmp1UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GainOffset",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Gain offset on amplifier 1 uplink. The object aimosRemoteV1GainOffsetAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why it's not allowed to make any changes here."
  },
  "aimosRemoteV1GainOffsetAmp2DL": {
    "name": "aimosRemoteV1GainOffsetAmp2DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GainOffset",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Gain offset on amplifier 2 downlink. The object aimosRemoteV1GainOffsetAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why it's not allowed to make any changes here."
  },
  "aimosRemoteV1GainOffsetAmp2UL": {
    "name": "aimosRemoteV1GainOffsetAmp2UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GainOffset",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Gain offset on amplifier 2 uplink. The object aimosRemoteV1GainOffsetAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why it's not allowed to make any changes here."
  },
  "aimosRemoteV1GainOffsetAmp3DL": {
    "name": "aimosRemoteV1GainOffsetAmp3DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GainOffset",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Gain offset on amplifier 3 downlink. The object aimosRemoteV1GainOffsetAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why it's not allowed to make any changes here."
  },
  "aimosRemoteV1GainOffsetAmp3UL": {
    "name": "aimosRemoteV1GainOffsetAmp3UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "GainOffset",
      "class": "type"
    },
    "units": "dB",
    "maxaccess": "read-write",
    "status": "current",
    "description": "Gain offset on amplifier 3 uplink. The object aimosRemoteV1GainOffsetAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why it's not allowed to make any changes here."
  },
  "aimosRemoteV1ALCThresholdAge": {
    "name": "aimosRemoteV1ALCThresholdAge",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "For each one of the three frequency bands supported by the Remote Unit the output power at the downlink amplifier can be limited (DL) and the input power at the optical interface can be limited (UL). For this, the MIB contains the following six objects: aimosRemoteV1ALCThresholdAmp1DL aimosRemoteV1ALCThresholdAmp1UL aimosRemoteV1ALCThresholdAmp2DL aimosRemoteV1ALCThresholdAmp2UL aimosRemoteV1ALCThresholdAmp3DL aimosRemoteV1ALCThresholdAmp3UL These objects area of type ALCThreshold and show the threshold values. The time when the value was last read is recorded in the object aimosRemoteV1ALCThresholdAge of type VariableTime. This value can be set to empty text in order to prompt the Controller to query the values anew with the next request to a cachedValue(2)-instance directly at the Master Controller."
  },
  "aimosRemoteV1ALCThresholdAmp1DL": {
    "name": "aimosRemoteV1ALCThresholdAmp1DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ALCThreshold",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "ALC threshold on amplifier 1 downlink. The object aimosRemoteV1ALCThresholdAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why it's not allowed to make any changes here."
  },
  "aimosRemoteV1ALCThresholdAmp1UL": {
    "name": "aimosRemoteV1ALCThresholdAmp1UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ALCThreshold",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "ALC threshold on amplifier 1 uplink. The object aimosRemoteV1ALCThresholdAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why it's not allowed to make any changes here."
  },
  "aimosRemoteV1ALCThresholdAmp2DL": {
    "name": "aimosRemoteV1ALCThresholdAmp2DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ALCThreshold",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "ALC threshold on amplifier 2 downlink. The object aimosRemoteV1ALCThresholdAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why it's not allowed to make any changes here."
  },
  "aimosRemoteV1ALCThresholdAmp2UL": {
    "name": "aimosRemoteV1ALCThresholdAmp2UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ALCThreshold",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "ALC threshold on amplifier 2 uplink. The object aimosRemoteV1ALCThresholdAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why it's not allowed to make any changes here."
  },
  "aimosRemoteV1ALCThresholdAmp3DL": {
    "name": "aimosRemoteV1ALCThresholdAmp3DL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ALCThreshold",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "ALC threshold on amplifier 3 downlink. The object aimosRemoteV1ALCThresholdAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why it's not allowed to make any changes here."
  },
  "aimosRemoteV1ALCThresholdAmp3UL": {
    "name": "aimosRemoteV1ALCThresholdAmp3UL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.39",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ALCThreshold",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "ALC threshold on amplifier 3 uplink. The object aimosRemoteV1ALCThresholdAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why it's not allowed to make any changes here."
  },
  "aimosRemoteV1OpticalLossAge": {
    "name": "aimosRemoteV1OpticalLossAge",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.40",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "For both the uplink and downlink paths the optical loss can be read-off via the following two objects in the MIB: aimosRemoteV1OpticalLossDL and aimosRemoteV1OpticalLossUL. These objects are of type OpticalLoss and show the optical loss value. The time when the value was last read is recorded in the object aimosRemoteV1OpticalLossAge of type VariableTime. This value can be set to empty text in order to prompt the Controller to query the values anew with the next request to a cachedValue(2)-instance directly at the Master Controller."
  },
  "aimosRemoteV1OpticalLossDL": {
    "name": "aimosRemoteV1OpticalLossDL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.41",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OpticalLoss",
      "class": "type"
    },
    "units": "dB/10",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Optical loss on downlink fibre. The object aimosRemoteV1OpticalLossAge indicates the age of this information."
  },
  "aimosRemoteV1OpticalLossUL": {
    "name": "aimosRemoteV1OpticalLossUL",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.42",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OpticalLoss",
      "class": "type"
    },
    "units": "dB/10",
    "maxaccess": "read-only",
    "status": "current",
    "description": "Optical loss on uplink fibre. The object aimosRemoteV1OpticalLossAge indicates the age of this information."
  },
  "aimosRemoteV1Output1Name": {
    "name": "aimosRemoteV1Output1Name",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.43",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Names the output pin 1 for recognition what is connected. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1Output2Name": {
    "name": "aimosRemoteV1Output2Name",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.44",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Names the output pin 2 for recognition what is connected. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1Output3Name": {
    "name": "aimosRemoteV1Output3Name",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.45",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Names the output pin 3 for recognition what is connected. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1Output4Name": {
    "name": "aimosRemoteV1Output4Name",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.46",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Names the output pin 4 for recognition what is connected. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1OutputAge": {
    "name": "aimosRemoteV1OutputAge",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.47",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Each of the four digital outputs available at the Remote Unit can be accessed individually via one of the following four objects: aimosRemoteV1Output1Value, aimosRemoteV1Output2Value, aimosRemoteV1Output3Value, aimosRemoteV1Output4Value. These objects are of the Boolean type and determine the status of the corresponding output. The time when the value was last read is recorded in the object aimosRemoteV1OutputAge of type VariableTime. This value can be set to empty text in order to prompt the Controller to query the values anew with the next request to a cachedValue(2)-instance directly at the Master Controller."
  },
  "aimosRemoteV1Output1Value": {
    "name": "aimosRemoteV1Output1Value",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.48",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "State on external out pin 1. The object aimosRemoteV1OutputAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1Output2Value": {
    "name": "aimosRemoteV1Output2Value",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.49",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "State on external out pin 2. The object aimosRemoteV1OutputAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1Output3Value": {
    "name": "aimosRemoteV1Output3Value",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.50",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "State on external out pin 3. The object aimosRemoteV1OutputAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1Output4Value": {
    "name": "aimosRemoteV1Output4Value",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.51",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "State on external out pin 4. The object aimosRemoteV1OutputAge indicates the age of this information. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1Input1Name": {
    "name": "aimosRemoteV1Input1Name",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.52",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Names the input pin 1 for recognition what is connected. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1Input2Name": {
    "name": "aimosRemoteV1Input2Name",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.53",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Names the input pin 2 for recognition what is connected. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1Input3Name": {
    "name": "aimosRemoteV1Input3Name",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.54",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Names the input pin 3 for recognition what is connected. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosRemoteV1Input4Name": {
    "name": "aimosRemoteV1Input4Name",
    "oid": "1.3.6.1.4.1.6408.201.3.5.15.1.55",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Names the input pin 4 for recognition what is connected. Changes, which are made here, affect the hardware. That's why TelCo's are not allowed to make any changes here."
  },
  "aimosGSMNSOV1Table": {
    "name": "aimosGSMNSOV1Table",
    "oid": "1.3.6.1.4.1.6408.201.3.5.16",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Hardware version related informations about the GSM NSO's. Insert rows: must only be done by system Delete rows: must only be done by system"
  },
  "aimosGSMNSOV1Entry": {
    "name": "aimosGSMNSOV1Entry",
    "oid": "1.3.6.1.4.1.6408.201.3.5.16.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOV1UnitReference",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOV1ValueSource",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosGSMNSOV1UnitReference": {
    "name": "aimosGSMNSOV1UnitReference",
    "oid": "1.3.6.1.4.1.6408.201.3.5.16.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UnitReference",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type UnitReference is the first index of this table. It unambiguously identifies the unit, independent of its kind (Master Unit, Sub Rack Master Unit, Remote Unit,...)."
  },
  "aimosGSMNSOV1ValueSource": {
    "name": "aimosGSMNSOV1ValueSource",
    "oid": "1.3.6.1.4.1.6408.201.3.5.16.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ValueSource",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type ValueSource is the second index in this table. It indicates, which value is to be addressed (actual, cached or desired value): actual : An access to the hardware takes place in order to query the current values. These values are stored in the SNMP Agents local database. Actual values are read only. cached : The values stored with the last hardware access are indicated. This is the default in order to shorten the period of reply. If the associated age value is missing, then the access is treated in such a way, as if actual one would have indicated. Cached values are read only (see remark below). desired: Has to be used, if values on the hardware are to be changed. Remark: Although write accesses on cached values do not make a sense, are they permitted in order to facilitate handling with the MIB. Write accesses on cached values are treated in such a way, as if desired one would have indicated."
  },
  "aimosGSMNSOV1Name": {
    "name": "aimosGSMNSOV1Name",
    "oid": "1.3.6.1.4.1.6408.201.3.5.16.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Presents the unique 8 character name of the NSO."
  },
  "aimosGSMNSOV1ScanInterval": {
    "name": "aimosGSMNSOV1ScanInterval",
    "oid": "1.3.6.1.4.1.6408.201.3.5.16.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 0
          },
          {
            "min": 180,
            "max": 3600
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 300,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Denotes the intervall time the NSO will restart its measurement. Note, the NSO needs approximately 60 seconds for measurement and some seconds for transmitting data to the master. So you should not determine a value smaller than 180."
  },
  "aimosGSMNSOV1ScanBCCH": {
    "name": "aimosGSMNSOV1ScanBCCH",
    "oid": "1.3.6.1.4.1.6408.201.3.5.16.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Denotes if the BCCH channel will be scanned."
  },
  "aimosGSMNSOV1CellStatus": {
    "name": "aimosGSMNSOV1CellStatus",
    "oid": "1.3.6.1.4.1.6408.201.3.5.16.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Unsigned32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Cell State Bit Remark 0 CELL_SUITABLE 1 CELL_LOW_PRIORITY 2 CELL_BARRED 3 CELL_LOW_LEVEL 4 CELL_FORBIDDEN 5 CELL_OTHER Other cell states indicating an alarm state."
  },
  "aimosGSMNSOV1MinScanSignalStrength": {
    "name": "aimosGSMNSOV1MinScanSignalStrength",
    "oid": "1.3.6.1.4.1.6408.201.3.5.16.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -110,
            "max": 0
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Channels with a lower RX level are not scanned."
  },
  "aimosGSMNSOV1SignalStrengthHysteresis": {
    "name": "aimosGSMNSOV1SignalStrengthHysteresis",
    "oid": "1.3.6.1.4.1.6408.201.3.5.16.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 50
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Signal strength modifications within the hysteresis do not cause the NSO to send data with new signal strength values. E.g., a hysteresis of +/- 1 dB ignores signal strength modifications within a range of 2 dB. If actually the signal strength is 20, you will recognize signal strength modification if the value gets lower than 19 or higher than 21."
  },
  "aimosGSMNSOV1MinAllowedSignalStrength": {
    "name": "aimosGSMNSOV1MinAllowedSignalStrength",
    "oid": "1.3.6.1.4.1.6408.201.3.5.16.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -100,
            "max": 0
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "RX levels with a lower level indicating an alarm state."
  },
  "aimosGSMNSOV1MaxAllowedSignalStrength": {
    "name": "aimosGSMNSOV1MaxAllowedSignalStrength",
    "oid": "1.3.6.1.4.1.6408.201.3.5.16.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -100,
            "max": 0
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "RX levels with a higher level indicating an alarm state."
  },
  "aimosGSMNSOV1MaxAllowedBER": {
    "name": "aimosGSMNSOV1MaxAllowedBER",
    "oid": "1.3.6.1.4.1.6408.201.3.5.16.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "BER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Bit Error Rates with a higher level indicating an alarm state."
  },
  "aimosGSMNSODataV1Table": {
    "name": "aimosGSMNSODataV1Table",
    "oid": "1.3.6.1.4.1.6408.201.3.5.17",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "GSM NSO measurement data. Insert rows: must only be done by system Delete rows: must only be done by system"
  },
  "aimosGSMNSODataV1Entry": {
    "name": "aimosGSMNSODataV1Entry",
    "oid": "1.3.6.1.4.1.6408.201.3.5.17.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOV1UnitReference",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSODataV1ID",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosGSMNSODataV1ID": {
    "name": "aimosGSMNSODataV1ID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.17.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Identifies the table entry. This value ist determined by the system."
  },
  "aimosGSMNSODataV1LAC": {
    "name": "aimosGSMNSODataV1LAC",
    "oid": "1.3.6.1.4.1.6408.201.3.5.17.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "LAC",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Local Area Code."
  },
  "aimosGSMNSODataV1CI": {
    "name": "aimosGSMNSODataV1CI",
    "oid": "1.3.6.1.4.1.6408.201.3.5.17.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CI",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Cell Identifier"
  },
  "aimosGSMNSODataV1DateTime": {
    "name": "aimosGSMNSODataV1DateTime",
    "oid": "1.3.6.1.4.1.6408.201.3.5.17.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "VariableTime",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Time of measurement."
  },
  "aimosGSMNSODataV1ARFCN": {
    "name": "aimosGSMNSODataV1ARFCN",
    "oid": "1.3.6.1.4.1.6408.201.3.5.17.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ARFCN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Channel"
  },
  "aimosGSMNSODataV1BSIC": {
    "name": "aimosGSMNSODataV1BSIC",
    "oid": "1.3.6.1.4.1.6408.201.3.5.17.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Base Station Identity Code."
  },
  "aimosGSMNSODataV1CS": {
    "name": "aimosGSMNSODataV1CS",
    "oid": "1.3.6.1.4.1.6408.201.3.5.17.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "CellStatus",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Cell Status"
  },
  "aimosGSMNSODataV1SignalStrength": {
    "name": "aimosGSMNSODataV1SignalStrength",
    "oid": "1.3.6.1.4.1.6408.201.3.5.17.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -150,
            "max": 100
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Current RX level. "
  },
  "aimosGSMNSODataV1BER": {
    "name": "aimosGSMNSODataV1BER",
    "oid": "1.3.6.1.4.1.6408.201.3.5.17.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "BER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Current Bit Error Rate."
  },
  "aimosUMTSNSOV1Table": {
    "name": "aimosUMTSNSOV1Table",
    "oid": "1.3.6.1.4.1.6408.201.3.5.18",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Hardware version related informations about the UMTS NSO's. Insert rows: must only be done by system Delete rows: must only be done by system"
  },
  "aimosUMTSNSOV1Entry": {
    "name": "aimosUMTSNSOV1Entry",
    "oid": "1.3.6.1.4.1.6408.201.3.5.18.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOV1UnitReference",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOV1ValueSource",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosUMTSNSOV1UnitReference": {
    "name": "aimosUMTSNSOV1UnitReference",
    "oid": "1.3.6.1.4.1.6408.201.3.5.18.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UnitReference",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type UnitReference is the first index of this table. It unambiguously identifies the unit, independent of its kind (Master Unit, Sub Rack Master Unit, Remote Unit,...)."
  },
  "aimosUMTSNSOV1ValueSource": {
    "name": "aimosUMTSNSOV1ValueSource",
    "oid": "1.3.6.1.4.1.6408.201.3.5.18.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ValueSource",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type ValueSource is the second index in this table. It indicates, which value is to be addressed (actual, cached or desired value): actual : An access to the hardware takes place in order to query the current values. These values are stored in the SNMP Agents local database. Actual values are read only. cached : The values stored with the last hardware access are indicated. This is the default in order to shorten the period of reply. If the associated age value is missing, then the access is treated in such a way, as if actual one would have indicated. Cached values are read only (see remark below). desired: Has to be used, if values on the hardware are to be changed. Remark: Although write accesses on cached values do not make a sense, are they permitted in order to facilitate handling with the MIB. Write accesses on cached values are treated in such a way, as if desired one would have indicated."
  },
  "aimosUMTSNSODataV1Table": {
    "name": "aimosUMTSNSODataV1Table",
    "oid": "1.3.6.1.4.1.6408.201.3.5.19",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "UMTS NSO measurement data. Insert rows: must only be done by system Delete rows: must only be done by system"
  },
  "aimosUMTSNSODataV1Entry": {
    "name": "aimosUMTSNSODataV1Entry",
    "oid": "1.3.6.1.4.1.6408.201.3.5.19.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOV1UnitReference",
        "implied": 0
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSODataV1ID",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosUMTSNSODataV1ID": {
    "name": "aimosUMTSNSODataV1ID",
    "oid": "1.3.6.1.4.1.6408.201.3.5.19.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TableIndex",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Identifies the table entry. This value ist determined by the system."
  },
  "aimosNEOperations": {
    "name": "aimosNEOperations",
    "oid": "1.3.6.1.4.1.6408.201.3.6",
    "class": "objectidentity",
    "status": "current",
    "description": "This object identity provides means to execute Network Element Operations. For example it is possible to request for a reboot of a NE."
  },
  "aimosNEOperationsTable": {
    "name": "aimosNEOperationsTable",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table contains the Network Elements capable of operation execution. The following Network Elements are supported (V 2.8.0): - Node M - Node C - Node G - Node A - Node AM - MRx18 - ION-M RU - ION-M EU"
  },
  "aimosNEOperationsEntry": {
    "name": "aimosNEOperationsEntry",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsID",
        "implied": 0
      }
    ],
    "reference": "MIS=TMISNEOperations MDS=TMDSNEOperations",
    "status": "current",
    "description": "see description for table entry..."
  },
  "aimosNEOperationsID": {
    "name": "aimosNEOperationsID",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UnitReference",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type UnitReference uniquely identifies the Network Element. This value is related to the column 'NE No.' of the 'Network Element List' (A.I.M.O.S. Visu)."
  },
  "aimosNEOperationsSDN": {
    "name": "aimosNEOperationsSDN",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "SDN",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type SDN shows the System Distinguished Name which consists of a chaining of all RDN's all the way down from the OMC point of view to the desired unit. The RDN's are divided by the Distinguished Name Concatenator defined in aimosOrgDNConcatenator. (e.g. SDN for MC=11: OMC=1,MC=11)"
  },
  "aimosNEOperationsTrapInfo": {
    "name": "aimosNEOperationsTrapInfo",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type Text contains the Network Elements TrapInfo."
  },
  "aimosNEOperationsComponentName": {
    "name": "aimosNEOperationsComponentName",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type Text contains the Network Elements Component Name."
  },
  "aimosNEOperationsLocation": {
    "name": "aimosNEOperationsLocation",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type Text contains the Network Elements Location."
  },
  "aimosNEOperationsUniqueSystemID": {
    "name": "aimosNEOperationsUniqueSystemID",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type Text contains the Network Elements Unique System ID."
  },
  "aimosNEOperationsNEActive": {
    "name": "aimosNEOperationsNEActive",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.50",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Boolean",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type Boolean indicates whether or not a Network Element (or at least one component capable of de-/activation if applicable) is active. This object will report true for a - Node M if 'Complete Network Element Active' is true - Node C if 'Complete Network Element Active' is true - Node G if 'Complete Network Element Active' is true - Node A if 'Disable Repeater' is false - Node AM if 'Disable Repeater' is false - MRx18 if at least one Segment is powered on - ION-M RU if at least one Amplifier is active - ION-M EU if at least one Amplifier is active Otherwise it will report false."
  },
  "aimosNEOperationsDeactivateNE": {
    "name": "aimosNEOperationsDeactivateNE",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.51",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "NEOperationStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type NEOperationStatus provides means to deactivate a Network Element by applying a value of neoSubmit(2). Deactivation is performed in the following way: - Node M : 'Complete Network Element Active' is set to false - Node C : 'Complete Network Element Active' is set to false - Node G : 'Complete Network Element Active' is set to false - Node A : 'Disable Repeater' is set to true - Node AM : 'Disable Repeater' is set to true - MRx18 : all Segments are powered off - ION-M RU: all Amplifiers are deactivated - ION-M EU: all Amplifiers are deactivated Furthermore its values indicates the progress of the Deactivation Command Transmission to the Network Element. If no Deactivation was initiated since Agent Startup this object's value is neoIdle(1). "
  },
  "aimosNEOperationsDeactivateNEInfo": {
    "name": "aimosNEOperationsDeactivateNEInfo",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.52",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type Text is the textual representation of the value retunred by aimosNEOperationsDeactivateNE. In case it is neoFailed(10) a more precise description is returned."
  },
  "aimosNEOperationsActivateNE": {
    "name": "aimosNEOperationsActivateNE",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.53",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "NEOperationStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type NEOperationStatus provides means to activate a Network Element by applying a value of neoSubmit(2). Activation is performed in the following way: - Node M : 'Complete Network Element Active' is set to true - Node C : 'Complete Network Element Active' is set to true - Node G : 'Complete Network Element Active' is set to true - Node A : 'Disable Repeater' is set to false - Node AM : 'Disable Repeater' is set to false - MRx18 : all Segments are powered on - ION-M RU: all Amplifiers are activated - ION-M EU: all Amplifiers are activated Furthermore its values indicates the progress of the Activation Command Transmission to the Network Element. If no Activation was initiated since Agent Startup this object's value is neoIdle(1). "
  },
  "aimosNEOperationsActivateNEInfo": {
    "name": "aimosNEOperationsActivateNEInfo",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.54",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type Text is the textual representation of the value retunred by aimosNEOperationsActivateNE. In case it is neoFailed(10) a more precise description is returned."
  },
  "aimosNEOperationsReboot": {
    "name": "aimosNEOperationsReboot",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.60",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "NEOperationStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type NEOperationStatus provides means to initiate a reboot of a Network Element by applying a value of neoSubmit(2). Furthermore its values indicates the progress of the Reboot Command Transmission to the Network Element. If no Reboot was initiated since Agent Startup this object's value is neoIdle(1)."
  },
  "aimosNEOperationsRebootInfo": {
    "name": "aimosNEOperationsRebootInfo",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.61",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type Text is the textual representation of the value retunred by aimosNEOperationsReboot. In case it is neoFailed(10) a more precise description is returned."
  },
  "aimosNEOperationsQueryAlarms": {
    "name": "aimosNEOperationsQueryAlarms",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.70",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "NEOperationStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object of type NEOperationStatus provides means to forward a Query Alarms Command to a Network Element by applying a value of neoSubmit(2). Furthermore its values indicates the progress of the Query Alarms Command Transmission to the Network Element. If no Query Alarms has been requested since Agent Startup this object's value is neoIdle(1)."
  },
  "aimosNEOperationsQueryAlarmsInfo": {
    "name": "aimosNEOperationsQueryAlarmsInfo",
    "oid": "1.3.6.1.4.1.6408.201.3.6.1.1.71",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Text",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object of type Text is the textual representation of the value retunred by aimosNEOperationsQueryAlarms. In case it is neoFailed(10) a more precise description is returned."
  },
  "aimosNotifications": {
    "name": "aimosNotifications",
    "oid": "1.3.6.1.4.1.6408.201.4",
    "class": "objectidentity",
    "status": "current",
    "description": "The A.I.M.O.S. SNMP Agent sends alarm notifications to as many alarm recipients as desired. All notifications contains the following objects: sysUpTime duration of time the SNMP Agent is running snmpTrapOID notification OID (note: if aimosPhoneBookInterfaceType is set to ifAimosObsolete(4) aimosTrapOID is used instead) aimosOMCSDN name of the OMC / SNMP Agent aimosOrgID the SNMP Managers organisation ID aimosAlarmTrapID trap number (unambiguous from SNMP Agents view) aimosAlarmTrapNotificationID trap number (contiguous enumerated from SNMP Managers view) aimosAlarmListID identifies an alarm list entry aimosAlarmListAlarmEventID contiguously enumerates alarm events, change and clear alarms has the same event ID as the raise aimosAgentAnnouncement notifications have afterwards the following object: aimosAgentState indicates of what the A.I.M.O.S. SNMP Agent is about to do aimosAlarmNew, aimosAlarmChanged and aimosAlarmCleared notifications have afterwards the following objects: aimosAlarmListAlarmID kind of alarm aimosAlarmListEventType aimosAlarmListEventTime aimosAlarmListProbableCause compliant to X.733 with additions aimosAlarmListSpecificProblem aimosAlarmListSeverity compliant to X.733 with one addition aimosAlarmListTrendIndication aimosAlarmListAdditionalText aimosAlarmListSDN unique name of the affected device aimosAlarmListCustomerMasterInfo custom name for the affected Master Unit aimosAlarmListCustomerSubRackInfo custom name for the affected Sub Rack Master Unit aimosAlarmListCustomerCableInfo custom names of the cables used in the interconnection between Master & Remote Unit aimosAlarmListCustomerRemoteInfo custom name for the affected Remote Unit aimosAlarmCleared notifications have afterwards the following object: aimosAlarmListClearReason the reason why alarm has gone All alarms end with the following objects: aimosAcknowledgementOID acknowledgement OID value snmpTrapEnterprise enterprise OID value (note: if aimosPhoneBookInterfaceType is set to ifAimosObsolete(4) aimosTrapEnterprise is used instead) If aimosPhoneBookInterfaceType is on its default value ifMIBDefault(0), then each of the object mentioned before has an appropriate instance identifier. That is, aimosOrgID has the OrgID itself as instance identifier and, for example, aimosAlarmListID has aimosOrgID and aimosAlarmListID as instance identifier, since these objects are defined in that manner. If aimosPhoneBookInterfaceType is set to ifAimosObsolete(4), then each object in the alarm notification has an instance identifier of zero. The only exception from this rule is aimosTrapOID. This object has no instance identifier. After having emitted an alarm notification with the objects mentioned before included, the A.I.M.O.S. SNMP Agent expects an acknowledgement within a certain period of time. This interval can be specified in aimosAlarmAckExpectInterval. Each SNMP Manager must confirm the receipt of the notification unless its inability of acknowledgements is indicated by appropriate settings made to aimosPhoneBookAckCapability. The acknowledgement will be done by setting aimosAlarmTrapAcknowledgementState to acknowledged(2). This OID is indexed by aimosOrgID, aimosAlarmTrapID and aimosAlarmListID. The notification makes the OID required for acknowledgement (object including instance identifiers) available in the aimosAcknowledgementOID. If a set request is made to aimosAlarmTrapAcknowledgementState, additionally aimosAlarmTrapAcknowledgementUser is set to the current user and aimosAlarmTrapAcknowledgementTime is set to the time of the acknowledgement. If an expected acknowledgement is missed by the A.I.M.O.S. SNMP Agent it will send the alarm repeatedly again until the alarm is acknowledged by the affected SNMP Manager. The objects contents of a re-sending alarm notification are identical to the preceding ones, especially the counter values (aimosAlarmTrapID, aimosAlarmTrapNotificationID, aimosAlarmListID, aimosAlarmListAlarmEventID). Each SNMP Manager may examine the incoming alarms notification ID. If it is not incremented by one since the last notification, it is an indication for missing notifications. The SNMP manager should wait a while until the SnMP Agent has resend the missing notification(s) unless acknowledgement is deactivated (aimosPhoneBookAckCapability is false(0)). In the latter case the SNMP Manager should synchronize its alarm table with the SNMP Agent ones by setting aimosPhoneBookAlarmListResync to start(5)."
  },
  "aimosAgentState": {
    "name": "aimosAgentState",
    "oid": "1.3.6.1.4.1.6408.201.4.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "AgentState",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "This value indicates what the agent is about to do. Please refer also to the DESCRIPTION clause for aimosAgentAnnouncement."
  },
  "aimosAcknowledgementOID": {
    "name": "aimosAcknowledgementOID",
    "oid": "1.3.6.1.4.1.6408.201.4.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "This object comprises the OID, the value of which must be set to acknowledged(2) in order to confirm the alarm reception (i.e. perform the acknowledgement). If a SNMP Manager is not able to perform an acknowledgement, it should set aimosPhoneBookAckCapability to false."
  },
  "aimosTrapEnterprise": {
    "name": "aimosTrapEnterprise",
    "oid": "1.3.6.1.4.1.6408.201.4.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OBJECT IDENTIFIER",
      "class": "type"
    },
    "maxaccess": "accessible-for-notify",
    "status": "current",
    "description": "This object was intended to carry the entrerprise OID value in notifications, although the existing object snmpTrapEnterprise had already exactly this task. This object is used in notifications instead of snmpTrapEnterprise if aimosPhoneBookInterfaceType is set to ifAimosObsolete(4) for compatibility reasons to the first version of this MIB. It is recommended to leave aimosPhoneBookInterfaceType on its default value ifMIBDefault(0). In that case snmpTrapEnterprise is used."
  },
  "aimosAgentAnnouncement": {
    "name": "aimosAgentAnnouncement",
    "oid": "1.3.6.1.4.1.6408.201.4.4",
    "class": "notificationtype",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosOMCSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapNotificationID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAlarmEventID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAgentState"
      },
      {
        "module": "AIMOS",
        "object": "aimosAcknowledgementOID"
      }
    ],
    "status": "current",
    "description": "A aimosAgentAnnouncement notification is emitted by the agent if it is put in or out of operation. aimosAgentState of type AgentState indicates what actually happens. aimosAgentAnnouncement notification has no aimosAlarmCleared notification. Cold Start ========== A aimosAgentState of snmpColdStart(1) indicates, that the agent has been started. Already existing Sessions are invalid; requests will be responded by authorisation errors. The relevant alarm list entry contains aimosAlarmListAlarmID set to alarmOMC(62) and aimosAlarmListSpecificProblem set to 8880. Pause ===== A aimosAgentState of snmpPause(2) signifies that the A.I.M.O.S. SNMP Agent is proceed to pause its activity. Even though the A.I.M.O.S. SNMP Agent's process will remain active, requests will result in time outs until aimosAgentAnnouncement with aimosAgentState set to snmpResume(3) is forwarded. The relevant alarm list entry contains aimosAlarmListAlarmID set to alarmOMC(62) and aimosAlarmListSpecificProblem set to 8887. The agent is waiting a certain period of time for acknowledgements before going in pause mode. If the agent comes back in operation, it will recognise missing acknowledgements and continue sending out aimosAgentAnnouncement notifications regarding the AgentState of snmpPause(2) additional to the aimosAgentAnnouncement notifications regarding the AgentState of snmpResume(3). This may prevent the manager from requesting a synchronisation of the alarm list due to the gap in the sequence of notification ID's. Resume ====== A aimosAgentState of snmpResume(3) signifies that the A.I.M.O.S. SNMP Agent is resuming its activity. Already existing Sessions remain valid, except they were not used for a period longer than the one specified in aimosSessionTimeout. The relevant alarm list entry contains aimosAlarmListAlarmID set to alarmOMC(62) and aimosAlarmListSpecificProblem set to 8881. Shut Down ========= A aimosAgentState of snmpShutDown(4) signifies that the A.I.M.O.S. SNMP Agent is about to shut down. The A.I.M.O.S. SNMP Agent waits a certain time for the SNMP Managers to be able to acknowledge this notification before actually shutting down. If the process terminates, all Sessions are invalidated. The agent doesn't respond to requests until aimosAgentAnnouncement with aimosAgentState set to snmpColdStart(1) is forwarded. The relevant alarm list entry contains aimosAlarmListAlarmID set to alarmOMC(62) and aimosAlarmListSpecificProblem set to 8889. If the A.I.M.O.S. SNMP Agent comes back in operation, it will recognise missing acknowledgements and continue sending out aimosAgentAnnouncement notifications regarding the AgentState of snmpShutDown(4) additional to the aimosAgentAnnouncement notifications regarding the AgentState of snmpColdStart(1). This may prevent the manager from requesting a synchronisation of the alarm list due to the gapin the sequence of notification ID's."
  },
  "aimosAlarmNew": {
    "name": "aimosAlarmNew",
    "oid": "1.3.6.1.4.1.6408.201.4.5",
    "class": "notificationtype",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosOMCSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapNotificationID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAlarmEventID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAlarmID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListEventType"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListEventTime"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListProbableCause"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListSpecificProblem"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListSeverity"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListTrendIndication"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAdditionalText"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListTrapInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListComponentName"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListLocation"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListUniqueSystemID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAcknowledgementOID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListRaiseLatitude"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListRaiseLongitude"
      }
    ],
    "status": "current",
    "description": "The aimosAlarmNew notification is used when a new alarm appears. It contains a new aimosAlarmListAlarmEventID. The aimosAlarmNew notification causes the A.I.M.O.S. SNMP Agent to create one alarm list entry per affected organisation and one alarm trap list entry per affected SNMP Manager containing the values of the notification objects."
  },
  "aimosAlarmChanged": {
    "name": "aimosAlarmChanged",
    "oid": "1.3.6.1.4.1.6408.201.4.6",
    "class": "notificationtype",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosOMCSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapNotificationID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAlarmEventID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAlarmID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListEventType"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListEventTime"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListProbableCause"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListSpecificProblem"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListSeverity"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListTrendIndication"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAdditionalText"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListTrapInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListComponentName"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListLocation"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListUniqueSystemID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAcknowledgementOID"
      }
    ],
    "status": "current",
    "description": "The aimosAlarmChanged notification is used when the severity of an uncleared alarm has changed. The alarm is correlated with the aimosAlarmNew notification by identical values in aimosAlarmListAlarmEventID. The aimosAlarmChanged notification causes the A.I.M.O.S. SNMP Agent to create one alarm list entry per affected organisation and one alarm trap list entry per affected SNMP Manager containing the values of the notifications objects."
  },
  "aimosAlarmCleared": {
    "name": "aimosAlarmCleared",
    "oid": "1.3.6.1.4.1.6408.201.4.7",
    "class": "notificationtype",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosOMCSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapNotificationID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAlarmEventID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAlarmID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListEventType"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListEventTime"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListProbableCause"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListSpecificProblem"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListSeverity"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListTrendIndication"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAdditionalText"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogTrapInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogComponentName"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogLocation"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogUniqueSystemID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListClearReason"
      },
      {
        "module": "AIMOS",
        "object": "aimosAcknowledgementOID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogRaiseLatitude"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogRaiseLongitude"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogClearLatitude"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogClearLongitude"
      }
    ],
    "status": "current",
    "description": "The aimosAlarmCleared notification is used when an alarm gets cleared. The alarm is correlated with the aimosAlarmNew and aimosAlarmCleared notification by identical values in aimosAlarmListAlarmEventID. It has an additional object aimosAlarmListClearReason. In contrast to aimosAlarmNew and aimosAlarmCleared the alarm notification object aimosAlarmListEventTime contains the time when the alarm condition is cleared. The aimosAlarmCleared notification causes the A.I.M.O.S. SNMP Agent to create a new alarm trap list entry containing the values of the notification objects, but not to create a new alarm list entry. Instead, the agent makes some amendments to the alarm list. Its entries created for the aimosAlarmNew and if applicable aimosAlarmChanged notifications (correlated with the aimosAlarmCleared notification by identical values in aimosAlarmListAlarmEventID) are modified in the following manner: the notifications value of aimosAlarmListClearReason is assigned to the alarm lists value of aimosAlarmListClearReason the notifications value of aimosAlarmListEventTime is assigned to the alarm lists value of aimosAlarmListClearTime After a aimosAlarmCleared notification was acknowledged all information of the alarm trap table entries and the alarm list entries are combined and filed in a new alarm log table entry. In this process, the entry from the alarm trap table is always deleted. The alarm list entry is also deleted, if no acknowledgement of another SNMP Manager of the according organisation is missing."
  },
  "aimosAlarmListRebuildInitiated": {
    "name": "aimosAlarmListRebuildInitiated",
    "oid": "1.3.6.1.4.1.6408.201.4.8",
    "class": "notificationtype",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosOMCSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapNotificationID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAlarmEventID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAcknowledgementOID"
      }
    ],
    "status": "current",
    "description": "The aimosAlarmListRebuildInitiated notification is sent, when an alarm list rebuild process was triggered. The notification will be emitted prior to the rebuild, immediately after dropping the content of the alarm table. On reception of this notification, the SNMP Manager shall clean the internal alarm table to be synchronised with the agent prior to acknowledge this notification. Before acknowledgement the agent will not send any notification (expect of re-send this notification by the A.I.M.O.S. SNMP Agent until acknowledgement is received by the A.I.M.O.S. SNMP Agent). The alarm list contains one entry with aimosAlarmListID and aimosAlarmListAlarmEventID set to 1 aimosAlarmListAlarmID set to alarmOMC(62) aimosAlarmListSpecificProblem set to 8885. The alarm trap list contains one entry per affected SNMP Manager (alarm recipient) with aimosAlarmTrapNotificationID set to 1 for each SNMP Manager aimosAlarmTrapID set to 1 for the first SNMP Manager, 2 for the second, ... There is no aimosAlarmCleared-notification for this alarm. It is cleared by acknowledgement."
  },
  "aimosHeartbeat": {
    "name": "aimosHeartbeat",
    "oid": "1.3.6.1.4.1.6408.201.4.9",
    "class": "notificationtype",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosOMCSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosCurrentTime"
      }
    ],
    "status": "current",
    "description": "The aimosHeartbeat notification is sent out each [aimosWorkShiftHeartbeatInterval] minutes to the members of the Alarm Recipient List specified by the object [aimosWorkShiftHeartbeatRecipientList]. This notification must not be acknowledged, even if the SNMP Manager performs acknowledgement to all other notifications. Additionally, this notifications are neither inserted to the Alarm Table nor to the Alarm Log. Therefore this notification contains no continuous numbering."
  },
  "aimosAlarmRecognized": {
    "name": "aimosAlarmRecognized",
    "oid": "1.3.6.1.4.1.6408.201.4.10",
    "class": "notificationtype",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosOMCSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapNotificationID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAlarmEventID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAlarmID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListSpecificProblem"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAdditionalText"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListTrapInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListComponentName"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListLocation"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListUniqueSystemID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListRecognitionUser"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListRecognitionTime"
      },
      {
        "module": "AIMOS",
        "object": "aimosAcknowledgementOID"
      }
    ],
    "status": "current",
    "description": "The aimosAlarmRecognized alarm is raised in case an alarm is recognized either via aimosAlarmListRecognitionState by means of the AIMOS_VIsu program The description for aimosAlarmListRecognitionState provides more information about this notification. "
  },
  "aimosGroups": {
    "name": "aimosGroups",
    "oid": "1.3.6.1.4.1.6408.201.5",
    "class": "objectidentity",
    "status": "current",
    "description": "Group objects"
  },
  "aimosMIB2Group": {
    "name": "aimosMIB2Group",
    "oid": "1.3.6.1.4.1.6408.201.5.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "sysDescr"
      },
      {
        "module": "AIMOS",
        "object": "sysObjectID"
      },
      {
        "module": "AIMOS",
        "object": "sysUpTime"
      },
      {
        "module": "AIMOS",
        "object": "sysContact"
      },
      {
        "module": "AIMOS",
        "object": "sysName"
      },
      {
        "module": "AIMOS",
        "object": "sysLocation"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosLoginGroup": {
    "name": "aimosLoginGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosSystemAvailability"
      },
      {
        "module": "AIMOS",
        "object": "aimosCommunity"
      },
      {
        "module": "AIMOS",
        "object": "aimosCommunityLength"
      },
      {
        "module": "AIMOS",
        "object": "aimosMinPasswordLength"
      },
      {
        "module": "AIMOS",
        "object": "aimosLoginUserName"
      },
      {
        "module": "AIMOS",
        "object": "aimosLoginPassword"
      },
      {
        "module": "AIMOS",
        "object": "aimosLoginState"
      },
      {
        "module": "AIMOS",
        "object": "aimosLoginOrgID"
      },
      {
        "module": "AIMOS",
        "object": "aimosLoginPhoneBookID"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosSystemInfoGroup": {
    "name": "aimosSystemInfoGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosMIBVersion"
      },
      {
        "module": "AIMOS",
        "object": "aimosAgentVersion"
      },
      {
        "module": "AIMOS",
        "object": "aimosOMCConnectorVersion"
      },
      {
        "module": "AIMOS",
        "object": "aimosCurrentTime"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosSystemConfigGroup": {
    "name": "aimosSystemConfigGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.5",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosOMCSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosOMCName"
      },
      {
        "module": "AIMOS",
        "object": "aimosTimeFormat"
      },
      {
        "module": "AIMOS",
        "object": "aimosPasswordExpirationPeriod"
      },
      {
        "module": "AIMOS",
        "object": "aimosPasswordReuseCounter"
      },
      {
        "module": "AIMOS",
        "object": "aimosPasswordStandard"
      },
      {
        "module": "AIMOS",
        "object": "aimosSessionTimeout"
      },
      {
        "module": "AIMOS",
        "object": "aimosOMCConnectorAddress"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosBandConfigGroup": {
    "name": "aimosBandConfigGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.6",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosBandID"
      },
      {
        "module": "AIMOS",
        "object": "aimosBandDLmin"
      },
      {
        "module": "AIMOS",
        "object": "aimosBandDLmax"
      },
      {
        "module": "AIMOS",
        "object": "aimosBandULFrequencyGap"
      },
      {
        "module": "AIMOS",
        "object": "aimosBandULChannelGap"
      },
      {
        "module": "AIMOS",
        "object": "aimosBandCalculationID"
      },
      {
        "module": "AIMOS",
        "object": "aimosBandCalculationMin"
      },
      {
        "module": "AIMOS",
        "object": "aimosBandCalculationMax"
      },
      {
        "module": "AIMOS",
        "object": "aimosBandCalculationFormulaStart"
      },
      {
        "module": "AIMOS",
        "object": "aimosBandCalculationFormulaBandWidth"
      },
      {
        "module": "AIMOS",
        "object": "aimosBandCalculationFormulaOffset"
      },
      {
        "module": "AIMOS",
        "object": "aimosLicenseeFirstARFCN"
      },
      {
        "module": "AIMOS",
        "object": "aimosLicenseeARFCNCount"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosBandInfoGroup": {
    "name": "aimosBandInfoGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.7",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosFrequencyARFCN"
      },
      {
        "module": "AIMOS",
        "object": "aimosFrequencyValue"
      },
      {
        "module": "AIMOS",
        "object": "aimosFrequencyOwner"
      },
      {
        "module": "AIMOS",
        "object": "aimosARFCNFrequency"
      },
      {
        "module": "AIMOS",
        "object": "aimosARFCNValue"
      },
      {
        "module": "AIMOS",
        "object": "aimosARFCNOwner"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosUserGroup": {
    "name": "aimosUserGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.8",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosOrgID"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgName"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgText"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgLevel"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgMCC"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgMNC"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgActive"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgDNSeparator"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgDNConcatenator"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgCCConcatenator"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgActiveWorkShiftID"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgNextUserID"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgNextWorkShiftID"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgNextAlarmRecipientListID"
      },
      {
        "module": "AIMOS",
        "object": "aimosOrgNextPhoneBookID"
      },
      {
        "module": "AIMOS",
        "object": "aimosUserID"
      },
      {
        "module": "AIMOS",
        "object": "aimosUserName"
      },
      {
        "module": "AIMOS",
        "object": "aimosUserPassword"
      },
      {
        "module": "AIMOS",
        "object": "aimosUserText"
      },
      {
        "module": "AIMOS",
        "object": "aimosUserRoleID"
      },
      {
        "module": "AIMOS",
        "object": "aimosUserActive"
      },
      {
        "module": "AIMOS",
        "object": "aimosUserPasswordAge"
      },
      {
        "module": "AIMOS",
        "object": "aimosInitiallyMasterLoginUserName"
      },
      {
        "module": "AIMOS",
        "object": "aimosInitiallyMasterLoginPassword"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosRoleGroup": {
    "name": "aimosRoleGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.9",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosNextRoleID"
      },
      {
        "module": "AIMOS",
        "object": "aimosRoleID"
      },
      {
        "module": "AIMOS",
        "object": "aimosRoleName"
      },
      {
        "module": "AIMOS",
        "object": "aimosRoleRightArea"
      },
      {
        "module": "AIMOS",
        "object": "aimosRoleRightAccess"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosPhoneBookGroup": {
    "name": "aimosPhoneBookGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.10",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosPhoneBookID"
      },
      {
        "module": "AIMOS",
        "object": "aimosPhoneBookName"
      },
      {
        "module": "AIMOS",
        "object": "aimosPhoneBookAddress"
      },
      {
        "module": "AIMOS",
        "object": "aimosPhoneBookActive"
      },
      {
        "module": "AIMOS",
        "object": "aimosPhoneBookLastNotificationID"
      },
      {
        "module": "AIMOS",
        "object": "aimosPhoneBookAlarmListResync"
      },
      {
        "module": "AIMOS",
        "object": "aimosPhoneBookTimeDisplayFormat"
      },
      {
        "module": "AIMOS",
        "object": "aimosPhoneBookRecognitionTraps"
      },
      {
        "module": "AIMOS",
        "object": "aimosPhoneBookAckCapability"
      },
      {
        "module": "AIMOS",
        "object": "aimosPhoneBookInterfaceType"
      },
      {
        "module": "AIMOS",
        "object": "aimosPhoneBookGeographicPositionFormat"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosAlarmConfigGroup": {
    "name": "aimosAlarmConfigGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.11",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosAlarmID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmDescription"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmEventType"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmDefaultSeverity"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmSeverityMin"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmAlarmGroupID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmClearMode"
      },
      {
        "module": "AIMOS",
        "object": "aimosWorkShiftID"
      },
      {
        "module": "AIMOS",
        "object": "aimosWorkShiftName"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmDistributionPlanRecipientListID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmRecipientListID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmRecipientListName"
      },
      {
        "module": "AIMOS",
        "object": "aimosPhoneBookAlarmListResync"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmRecipientListMemberActive"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmAckExpectInterval"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListRebuild"
      },
      {
        "module": "AIMOS",
        "object": "aimosWorkShiftHeartbeatRecipientList"
      },
      {
        "module": "AIMOS",
        "object": "aimosWorkShiftHeartbeatInterval"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListResync"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmForwardingType"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosAlarmConfigGroupDeprecated": {
    "name": "aimosAlarmConfigGroupDeprecated",
    "oid": "1.3.6.1.4.1.6408.201.5.12",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosAlarmSeverityRangeMinValue"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmSeverityRangeMaxValue"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmSeverityRangeSeverity"
      }
    ],
    "status": "deprecated",
    "description": "Description."
  },
  "aimosAlarmInfoGroup": {
    "name": "aimosAlarmInfoGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.13",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapNotificationID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapPhonebookID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapAcknowledgementState"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapAcknowledgementUser"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmTrapAcknowledgementTime"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAlarmEventID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAlarmID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListEventType"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListEventTime"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListProbableCause"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListSpecificProblem"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListSeverity"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListTrendIndication"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListAdditionalText"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListTrapInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListComponentName"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListLocation"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListUniqueSystemID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListClearReason"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListClearTime"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListRaiseLatitude"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListRaiseLongitude"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListClearLatitude"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListClearLongitude"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogPhoneBookID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogNotificationID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogAlarmEventID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogAlarmID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogEventType"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogEventTime"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogProbableCause"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogSpecificProblem"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogSeverity"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogTrendIndication"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogAdditionalText"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogTrapInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogComponentName"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogLocation"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogUniqueSystemID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogAcknowledgementUser"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogAcknowledgementTime"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogClearReason"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogClearTime"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogClearTrapID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogClearNotificationID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogClearAcknowledgementUser"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogClearAcknowledgementTime"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogRaiseLatitude"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogRaiseLongitude"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogClearLatitude"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogRecognitionState"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogRecognitionUser"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogRecognitionTime"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmLogClearLongitude"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListRecognitionState"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListRecognitionUser"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListRecognitionTime"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosAlarmGroupConfigGroup": {
    "name": "aimosAlarmGroupConfigGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.14",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosAlarmGroupID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmGroupName"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmGroupAllowedOrgActive"
      },
      {
        "module": "AIMOS",
        "object": "aimosNextAlarmGroupID"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosMasterGroup": {
    "name": "aimosMasterGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.15",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosNextMasterID"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterID"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterRDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterIdentNo"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterSerialNo"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterTrapInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterLocation"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterAnyText"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterMapXY"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterOID"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterAddress"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterState"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterGUID"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterLoginPassword"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterLoginUserName"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosMasterV1Group": {
    "name": "aimosMasterV1Group",
    "oid": "1.3.6.1.4.1.6408.201.5.16",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosMasterV1UnitReference"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterV1ValueSource"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterV1HeartbeatInterval"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterV1HeartbeatOvertime"
      },
      {
        "module": "AIMOS",
        "object": "aimosMasterV1HeartbeatTime"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosSubRackGroup": {
    "name": "aimosSubRackGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.17",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosSubRackID"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackRDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackIdentNo"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackSerialNo"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackTrapInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackLocation"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackAnyText"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackMapXY"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackOID"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosSubRackV1Group": {
    "name": "aimosSubRackV1Group",
    "oid": "1.3.6.1.4.1.6408.201.5.18",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1UnitReference"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1ValueSource"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1AttenuationAge"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1AttenuationAmp1DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1AttenuationAmp1UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1AttenuationAmp2DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1AttenuationAmp2UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1AttenuationAmp3DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1AttenuationAmp3UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1GainOffsetAge"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1GainOffsetAmp1DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1GainOffsetAmp1UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1GainOffsetAmp2DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1GainOffsetAmp2UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1GainOffsetAmp3DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1GainOffsetAmp3UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1TemperatureAge"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1TemperatureBoard"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1AmplifierBandNamesAge"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1Amplifier1BandName"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1Amplifier2BandName"
      },
      {
        "module": "AIMOS",
        "object": "aimosSubRackV1Amplifier3BandName"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosRemoteGroup": {
    "name": "aimosRemoteGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.19",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosRemoteID"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteRDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteIdentNo"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteSerialNo"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteTrapInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteLocation"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteAnyText"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteMapXY"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteOID"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosRemoteV1Group": {
    "name": "aimosRemoteV1Group",
    "oid": "1.3.6.1.4.1.6408.201.5.20",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1UnitReference"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1ValueSource"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1NominalTemperatureAge"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1NominalTemperature"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1TemperatureAge"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1TemperatureAmp1"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1TemperatureAmp2"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1TemperatureAmp3"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1TemperatureBoard"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1TemperaturePowerSupply"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1AmplifierStateAge"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Amplifier1State"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Amplifier2State"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Amplifier3State"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1AmplifierPowerAge"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Amplifier1Power"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Amplifier2Power"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Amplifier3Power"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1AttenuationAge"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1AttenuationAmp1DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1AttenuationAmp1UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1AttenuationAmp2DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1AttenuationAmp2UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1AttenuationAmp3DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1AttenuationAmp3UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1GainOffsetAge"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1GainOffsetAmp1DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1GainOffsetAmp1UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1GainOffsetAmp2DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1GainOffsetAmp2UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1GainOffsetAmp3DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1GainOffsetAmp3UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1ALCThresholdAge"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1ALCThresholdAmp1DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1ALCThresholdAmp1UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1ALCThresholdAmp2DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1ALCThresholdAmp2UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1ALCThresholdAmp3DL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1ALCThresholdAmp3UL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1OpticalLossAge"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1OpticalLossDL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1OpticalLossUL"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Output1Name"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Output2Name"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Output3Name"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Output4Name"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Output1Value"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Output2Value"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Output3Value"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Output4Value"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Input1Name"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Input2Name"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Input3Name"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1Input4Name"
      },
      {
        "module": "AIMOS",
        "object": "aimosRemoteV1OutputAge"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosGSMNSOGroup": {
    "name": "aimosGSMNSOGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.21",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOID"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSORDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOIdentNo"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOSerialNo"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOTrapInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOLocation"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOAnyText"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOMapXY"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOOID"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOOIDData"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosGSMNSOV1Group": {
    "name": "aimosGSMNSOV1Group",
    "oid": "1.3.6.1.4.1.6408.201.5.22",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOV1UnitReference"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOV1ValueSource"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOV1Name"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOV1ScanInterval"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOV1ScanBCCH"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOV1CellStatus"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOV1MinScanSignalStrength"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOV1SignalStrengthHysteresis"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOV1MinAllowedSignalStrength"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOV1MaxAllowedSignalStrength"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSOV1MaxAllowedBER"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSODataV1ID"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSODataV1LAC"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSODataV1CI"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSODataV1DateTime"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSODataV1ARFCN"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSODataV1BSIC"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSODataV1CS"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSODataV1SignalStrength"
      },
      {
        "module": "AIMOS",
        "object": "aimosGSMNSODataV1BER"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosUMTSNSOGroup": {
    "name": "aimosUMTSNSOGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.23",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOID"
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSORDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOIdentNo"
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOSerialNo"
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOTrapInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOLocation"
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOAnyText"
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOMapXY"
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOOID"
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOOIDData"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosUMTSNSOV1Group": {
    "name": "aimosUMTSNSOV1Group",
    "oid": "1.3.6.1.4.1.6408.201.5.24",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOV1UnitReference"
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSOV1ValueSource"
      },
      {
        "module": "AIMOS",
        "object": "aimosUMTSNSODataV1ID"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosCableConfigGroup": {
    "name": "aimosCableConfigGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.27",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosNextCableID"
      },
      {
        "module": "AIMOS",
        "object": "aimosCableID"
      },
      {
        "module": "AIMOS",
        "object": "aimosCableCode"
      },
      {
        "module": "AIMOS",
        "object": "aimosCableTrapInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosCableLocation"
      },
      {
        "module": "AIMOS",
        "object": "aimosCableAnyText"
      },
      {
        "module": "AIMOS",
        "object": "aimosCableUsageID"
      },
      {
        "module": "AIMOS",
        "object": "aimosCableUsageRemoteUnitReference"
      },
      {
        "module": "AIMOS",
        "object": "aimosCableUsageCableID"
      },
      {
        "module": "AIMOS",
        "object": "aimosCableUsageFibreCode"
      },
      {
        "module": "AIMOS",
        "object": "aimosCableUsageAlternativeTrapInfo"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosNotificationGroup": {
    "name": "aimosNotificationGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.29",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosTrapOID"
      },
      {
        "module": "AIMOS",
        "object": "aimosAgentState"
      },
      {
        "module": "AIMOS",
        "object": "aimosAcknowledgementOID"
      },
      {
        "module": "AIMOS",
        "object": "aimosTrapEnterprise"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "midsNotificationsGroup": {
    "name": "midsNotificationsGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.30",
    "class": "notificationgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosAgentAnnouncement"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmNew"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmChanged"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmCleared"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmListRebuildInitiated"
      },
      {
        "module": "AIMOS",
        "object": "aimosHeartbeat"
      },
      {
        "module": "AIMOS",
        "object": "aimosAlarmRecognized"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosNetworkElementOperationsGroup": {
    "name": "aimosNetworkElementOperationsGroup",
    "oid": "1.3.6.1.4.1.6408.201.5.31",
    "class": "objectgroup",
    "objects": [
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsQueryAlarmsInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsReboot"
      },
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsRebootInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsQueryAlarms"
      },
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsID"
      },
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsSDN"
      },
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsTrapInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsComponentName"
      },
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsLocation"
      },
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsUniqueSystemID"
      },
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsDeactivateNEInfo"
      },
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsNEActive"
      },
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsDeactivateNE"
      },
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsActivateNE"
      },
      {
        "module": "AIMOS",
        "object": "aimosNEOperationsActivateNEInfo"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "aimosCompliances": {
    "name": "aimosCompliances",
    "oid": "1.3.6.1.4.1.6408.201.6",
    "class": "objectidentity",
    "status": "current",
    "description": "Compliance objects"
  },
  "aimosCompliance": {
    "name": "aimosCompliance",
    "oid": "1.3.6.1.4.1.6408.201.6.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "aimosLoginGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosSystemInfoGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosSystemConfigGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosBandConfigGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosBandInfoGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosUserGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosRoleGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosPhoneBookGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosAlarmConfigGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosAlarmInfoGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosAlarmGroupConfigGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosCableConfigGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosNotificationGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosNetworkElementOperationsGroup",
        "module": "AIMOS"
      },
      {
        "object": "midsNotificationsGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosMIB2Group",
        "module": "AIMOS"
      },
      {
        "object": "aimosAlarmConfigGroupDeprecated",
        "module": "AIMOS"
      },
      {
        "object": "aimosMasterGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosMasterV1Group",
        "module": "AIMOS"
      },
      {
        "object": "aimosSubRackGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosSubRackV1Group",
        "module": "AIMOS"
      },
      {
        "object": "aimosRemoteGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosRemoteV1Group",
        "module": "AIMOS"
      },
      {
        "object": "aimosGSMNSOGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosGSMNSOV1Group",
        "module": "AIMOS"
      },
      {
        "object": "aimosUMTSNSOGroup",
        "module": "AIMOS"
      },
      {
        "object": "aimosUMTSNSOV1Group",
        "module": "AIMOS"
      }
    ],
    "status": "current",
    "description": "Description."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/AIMOS.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 17:50:55 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "AIMOS"
  }
}