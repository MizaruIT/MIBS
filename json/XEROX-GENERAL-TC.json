{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "OBJECT-TYPE",
      "Gauge32",
      "MODULE-IDENTITY",
      "NOTIFICATION-TYPE",
      "Counter32",
      "Counter64",
      "Unsigned32",
      "IpAddress",
      "OBJECT-IDENTITY",
      "Bits",
      "TimeTicks",
      "MibIdentifier",
      "Integer32",
      "iso"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ],
    "XEROX-COMMON-MIB": [
      "xeroxCommonMIB"
    ]
  },
  "xcmGeneralTC": {
    "name": "xcmGeneralTC",
    "oid": "1.3.6.1.4.1.253.8.50",
    "class": "moduleidentity",
    "lastupdated": "9801040000Z",
    "organization": "Xerox Corporation - XCMI Working Group",
    "contactinfo": " XCMI Editors E-Mail: xcmieditors@cp10.es.xerox.com -- -- ",
    "description": " Version: 2.42.pub Xerox General Textual Conventions Copyright (C) 1997 Xerox Corporation. All Rights Reserved."
  },
  "Cardinal16": {
    "name": "Cardinal16",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 32767
          }
        ]
      }
    },
    "status": "current",
    "description": " The representation for non-negative integers. Used for indices in small tables where 0 means not specified. It avoids use of the sign bit."
  },
  "Cardinal32": {
    "name": "Cardinal32",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": " The representation for non-negative integers. Used for indices in large tables where 0 means not specified. Same size as ISO 10175 (avoids use of sign bit)."
  },
  "Cardinal64High": {
    "name": "Cardinal64High",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": " The high-order 31 bits of a 62-bit non-negative integer (0..2**62-1). A manager must get or set the high and low parts in the same operation."
  },
  "Cardinal64Low": {
    "name": "Cardinal64Low",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": " The low-order 31 bits of a 62-bit non-negative integer (0..2**62-1). A manager must get or set the high and low parts in the same operation."
  },
  "CodedCountry": {
    "name": "CodedCountry",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 2
          }
        ]
      }
    },
    "status": "current",
    "description": " A two character country or territory abbreviation from ISO/IEC 3166:1993 - Codes for the Representation of Names of Countries. Examples: US, FR, DE A null string shall indicate that the country or territory is not defined."
  },
  "CodedLanguage": {
    "name": "CodedLanguage",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 2
          }
        ]
      }
    },
    "status": "current",
    "description": " A two character language abbreviation as defined in ISO/IEC 639:1988 - Codes For the Representation of Names of Languages. Examples EN, GB, CA, FR, DE. An empty string shall indicate that the language is not defined."
  },
  "CodeIndexedStringIndex": {
    "name": "CodeIndexedStringIndex",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": " The representation of string data which the agent can provide in one or more character sets (but not further localized). Typically this representation is used because the string data is relatively dynamic, changing too rapidly for full localization; or because the data exists inherently in only one or a limited number of character sets and cannot meaningfully be further localized. The value is an index into a single global string table, xcmGenCodeIndexedStringTable. A subsidiary index into the xcmGenCodeIndexedStringTable is the IANA registered enum (see the CodedCharSet textual-convention in RFC 1759) for the coded character set desired by the management station (from among the coded character sets supported by the SNMP agent). A 0 index value shall indicate that there is no associated entry in the string table. 32 bits are needed because Jobs can use up 10-12 code-indexed strings per job."
  },
  "Counter64High": {
    "name": "Counter64High",
    "class": "textualconvention",
    "type": {
      "type": "Counter32",
      "class": "type"
    },
    "status": "current",
    "description": " The high-order 32 bits of a 63-bit counter (0..2**63-1). A manager must get or set the high and low parts in the same operation."
  },
  "Counter64Low": {
    "name": "Counter64Low",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": " The low-order 31 bits of a 63-bit counter (0..2**63-1). A manager must get or set the high and low parts in the same operation."
  },
  "Gauge64High": {
    "name": "Gauge64High",
    "class": "textualconvention",
    "type": {
      "type": "Gauge32",
      "class": "type"
    },
    "status": "current",
    "description": " The high-order 32 bits of a 63-bit gauge (0..2**63-1). A manager must get or set the high and low parts in the same operation."
  },
  "Gauge64Low": {
    "name": "Gauge64Low",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": " The low-order 31 bits of a 63-bit gauge (0..2**63-1). A manager must get or set the high and low parts in the same operation."
  },
  "Integer64High": {
    "name": "Integer64High",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type"
    },
    "status": "current",
    "description": " The high-order 32 bits of a 63-bit signed integer (-2**62..2**62-1). A manager must get or set the high and low parts in the same operation."
  },
  "Integer64Low": {
    "name": "Integer64Low",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": " The low-order 31 bits of a 63-bit signed integer (-2**62..2**62-1). A manager must get or set the high and low parts in the same operation."
  },
  "Ordinal16": {
    "name": "Ordinal16",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 32767
          }
        ]
      }
    },
    "status": "current",
    "description": " The representation for positive integers. Used for indices in small tables where 0 is illegal. It avoids use of the sign bit.."
  },
  "Ordinal32": {
    "name": "Ordinal32",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": " The representation for positive integers. Same size as ISO 10175 (avoids use of sign bit)."
  },
  "Ordinal64High": {
    "name": "Ordinal64High",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": " The high-order 31 bits of a 62-bit positive integer (1..2**62-1). A manager must get or set the high and low parts in the same operation."
  },
  "Ordinal64Low": {
    "name": "Ordinal64Low",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": " The low-order 31 bits of a 62-bit positive integer (1..2**62-1). A manager must get or set the high and low parts in the same operation."
  },
  "xcmGenZeroDotZero": {
    "name": "xcmGenZeroDotZero",
    "oid": "0.0.0",
    "class": "objectidentity",
    "status": "current",
    "description": " A value used for null object identifiers. Not defined in original IETF SMIv2 (RFC 1442), but defined in RFC 1902 as 'zeroDotZero' - defined here for convenience."
  },
  "XcmFixedLocaleDisplayString": {
    "name": "XcmFixedLocaleDisplayString",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "status": "current",
    "description": " This data type is used to model textual information in some localization (language, country, and character set), which is fixed (ie, NOT capable of being altered by management station request). This textual information shall be represented in the localization which is indicated by the current value of 'xcmGenFixedLocalizationIndex'.",
    "reference": " See: 'InternationalDisplayString' in IETF Host Resources MIB (RFC 1514), 'DisplayString' in IETF SNMPv2 TC (RFC 1443/1903), 'CodeIndexedStringIndex' in this module, and 'OCTET STRING' in OSI ASN.1 (CCITT X.208/X.209 | ISO 8824/8825)."
  },
  "XcmGenGroupSupport": {
    "name": "XcmGenGroupSupport",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 2147483647
          }
        ]
      }
    },
    "status": "current",
    "description": "The terse conformance statement of ALL mandatory, conditionally mandatory, and optional XCMI General MIB object groups which are supported by this management agent implementation (ie, version) on this host system, specified in a bit-mask. The current set of values (which may be extended in the future) is given below: 1 : xcmGenCurrentLocalizationGroup 2 : xcmGenLocalizationGroup 4 : xcmGenCodeIndexedStringGroup 8 : xcmGenCodedCharSetGroup 16 : xcmGenFixedLocalizationGroup 32 : xcmGenLockGroup 64 : xcmGenReconfGroup 128 : xcmGenOptionGroup 256 : xcmGenClientDataGroup 512 : xcmGenTrapClientGroup 1024 : xcmGenTrapViewGroup 2048 : xcmGenBaseGroup Usage: Conforming management agents shall ALWAYS accurately report their support for XCMI General MIB object groups."
  },
  "XcmGenLogFullPolicy": {
    "name": "XcmGenLogFullPolicy",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "disableService": 3,
          "disableAndPauseService": 4,
          "enableServiceAndFlushLog": 5,
          "enableServiceAndFlushOldest": 6
        }
      }
    },
    "status": "current",
    "description": "The current policy for handling job/request/event log 'full' (in MIBs, in shared RAM, on disk, etc), on this host system."
  },
  "XcmGenOptionValueSyntax": {
    "name": "XcmGenOptionValueSyntax",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "integerNumber": 3,
          "integerCounter": 4,
          "integerEnum": 5,
          "integerGauge": 6,
          "integerIndex": 7,
          "integerTruthValue": 8,
          "oidObject": 9,
          "oidAutonomous": 10,
          "stringBinary": 11,
          "stringDisplay": 12,
          "stringLocalization": 13,
          "stringCodedCharSet": 14,
          "stringDynamicLocalization": 15
        }
      }
    },
    "status": "current",
    "description": " A reconfiguration option, device detail, storage detail, service detail, or security profile detail value syntax, used by system administrators and end users to specify the correct value syntax for this option or detail. Usage: This option or detail value syntax is used to select which of the three value objects shall be used to contain the value of this option or detail. * An option or detail value syntax of 'oidObject' indicates that 'xcm...ValueOID' shall be used to specify an actual object type, defined with 'OBJECT-TYPE'. * An option or detail value syntax of 'oidAutonomous' indicates that 'xcm...ValueOID' shall be used to specify an autonomous object type, defined with 'OBJECT-IDENTITY' or simply 'OBJECT IDENTIFIER'. * An option or detail value syntax of 'stringBinary' indicates that 'xcm...ValueString' shall be used to specify a (possibly) 'binary' (or 'non-printing') value string. * An option or detail value syntax of 'stringDisplay' indicates that 'xcm...ValueString' shall be used to specify a 'displayable' (or 'printing') value string. * An option or detail value syntax of 'stringLocalization' indicates that 'xcm...ValueLocalization' (for options) or 'xcmGenFixedLocalizationIndex' (for details) shall be used to control the localization of the value string (with an underlying type of 'XcmGenFixedLocaleDisplayString'). * An option or detail value syntax of 'stringCodedCharSet' indicates that 'xcm...ValueCodedCharSet' (for options) or 'xcmGenFixedLocalizationIndex' (for details) shall be used to control the character set ONLY of the value string (with an underlying type of 'CodeIndexedStringIndex'). * An option or detail value syntax of 'stringDynamicLocalization' indicates that 'xcmGenCurrentLocalization' shall be used to control the localization of the value string (with an underlying type of 'InternationalDisplayString').",
    "reference": "See: 'xcmGenOptionTable' in XCMI General MIB See: 'xcmCommsOptionTable' in XCMI Comms Config MIB See: 'xcmHrDevDetailTable' in XCMI Host Resources Ext MIB See: 'xcmHrStorageDetailTable' in XCMI Host Resources Ext MIB See: 'xcmSvcMonServiceDetailTable' in XCMI Service Mon MIB See: 'xcmSecProfileDetailTable' in XCMI Security MIB"
  },
  "XcmGenReconfOptionState": {
    "name": "XcmGenReconfOptionState",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "idle": 1,
          "validateForImmediateChange": 2,
          "validateForRebootChange": 3,
          "validateForImmediateReboot": 4,
          "validateInProgress": 5,
          "activateForImmediateChange": 6,
          "activateForRebootChange": 7,
          "activateForImmediateReboot": 8,
          "activateInProgress": 9
        }
      }
    },
    "status": "current",
    "description": " The processing state of ALL pending reconfiguration options of this host system. A write to this object by an (authorized) management station invokes a request for validation (or activation) of ALL pending reconfiguration options of this host system. A read of this object returns 'idle', 'validateInProgress', or 'activateInProgress' to report the processing state of the last 'validate...' or 'activate...' request. It is mandatory that a conforming management agent ensure that, at system initialization, this object shall ALWAYS be set to a value of 'idle'. * 'idle' - NO processing is 'in progress' for either 'validate...' or 'activate...' of any pending reconfiguration options. * 'validateForImmediateChange' - this management agent (and host system) shall perform ALL possible and appropriate validation of ALL pending reconfiguration options (reporting the FIRST error encountered during validation), so that reconfiguration could be performed successfully via 'activateForImmediateChange'. * 'validateForRebootChange' - this management agent (and host system) shall perform ALL possible and appropriate validation of ALL pending reconfiguration options (reporting the FIRST error encountered during validation), so that reconfiguration could be performed successfully via 'activateForRebootChange'. * 'validateForImmediateReboot' - this management agent (and host system) shall perform ALL possible and appropriate validation of ALL pending reconfiguration options (reporting the FIRST error encountered during validation), so that reconfiguration could be performed successfully via 'activateForImmediateReboot'. * 'validateInProgress' - indicates that this management agent (and host system) are currently performing validation of ALL pending reconfiguration options. Note: Conforming implementations NEED NOT support more than ONE of the above three 'validation...' operations. * 'activateForImmediateChange' - this management agent (and host system) shall perform immediate reconfiguration, NOT reboot, for ALL pending reconfiguration options (reporting the FIRST error encountered during validation). For all conforming implementations, this reconfiguration shall ALWAYS take effect immediately, WITHOUT host system reboot! Note: Conforming implementations are STRONGLY encouraged to consider supporting 'benign' reconfiguration in this manner. * 'activateForRebootChange' - this management agent (and host system) shall perform delayed reconfiguration, NOT reboot, for ALL pending reconfiguration options (reporting the FIRST error encountered during validation). For all conforming implementations, this reconfiguration shall ALWAYS take effect delayed, AFTER subsequent host system reboot! Note: Conforming implementations NEED NOT support 'caching' of multiple outstanding 'sets of reconfiguration' in this manner. * 'activateForImmediateReboot' - this management agent (and host system) shall perform immediate reconfiguration, AND reboot, for ALL pending reconfiguration options (reporting the FIRST error encountered during validation). For all conforming implementations, this reconfiguration shall ALWAYS take effect immediately, WITH host system reboot! Note: Conforming implementations are STRONGLY encouraged to consider secure alternatives (eg, Device Mgmt) for system reset. * 'activateInProgress' - indicates that this management agent (and host system) are currently performing activation of ALL pending reconfiguration options. Note: Conforming implementations NEED NOT support more than ONE of the above three 'activation...' operations.",
    "reference": " See: 'xcmGenReconfError[Index|Status]'"
  },
  "XcmGenRowPersistence": {
    "name": "XcmGenRowPersistence",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "other": 1,
          "unknown": 2,
          "volatile": 3,
          "nonvolatile": 4,
          "permanent": 5,
          "readonly": 6
        }
      }
    },
    "status": "current",
    "description": "This type is used to specify the persistence of this conceptual row in a table. Usage: Conforming management agents shall ALWAYS interpret persistence as follows: 1) 'volatile' rows NEED NOT be saved across power cycles, may contain one or more 'read-[create|write|only]' objects, and their underlying storage may be removable, and conforming management agents NEED NOT delete such rows (eg, a block in RAM, PCMCIA card, etc); 2) 'nonvolatile' rows shall be saved across power cycles, may contain one or more 'read-[write|only]' objects, and their underlying storage may be removable, and conforming management agents may delete such rows (eg, a sector on CD-ROM, font cartridge, hard disk, etc); 3) 'permanent' rows shall be saved across power cycles, may contain one or more 'read-[write|only]' objects, and their underlying storage shall NOT be removable, and conforming management agents shall NOT delete such rows (eg, a sector on EEPROM, battery-backed RAM, bubble, etc); 4) 'readonly' rows shall be saved across power cycles, shall contain exclusively 'read-only' objects, and their underlying storage shall NOT be removable, and conforming management agents shall NOT delete such rows (eg, a sector on ROM, ASIC, etc). Note: Equivalent to SNMPv2 'StorageType' textual convention, which has an unfortunately ambiguous name.",
    "reference": "See: 'hrStorageType' in the Storage group of the IETF Host Resources MIB (RFC 1514). See: 'StorageType' textual convention in the Historic SNMPv2 Party MIB (RFC 1447). See: 'StorageType' textual convention in the IETF SNMPv2 Textual Conventions (RFC 1903)."
  },
  "XcmGenSNMPDomain": {
    "name": "XcmGenSNMPDomain",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "snmpUDPDomain": 1,
          "snmpCLNSDomain": 2,
          "snmpCONSDomain": 3,
          "snmpDDPDomain": 4,
          "snmpIPXDomain": 5,
          "snmpNetBIOSDomain": 10,
          "snmpNetBEUIDomain": 11
        }
      }
    },
    "status": "current",
    "description": "This type is used to specify the transport domain (below SNMP) which shall be used by this management agent to deliver SNMP traps to the trap client (management station or proxy).",
    "reference": "See: Cited IETF SNMP specifications."
  },
  "XcmGenSNMPVersion": {
    "name": "XcmGenSNMPVersion",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "unknown": 1,
          "other": 2,
          "snmpV1Community": 3,
          "snmpV1Party": 4,
          "snmpV2Party": 5,
          "snmpV2Community": 6,
          "snmpV2Usec": 7,
          "snmpV2Star": 8,
          "snmpV2Secure": 9
        }
      }
    },
    "status": "current",
    "description": "This type is used to specify the exact SNMP version which was chosen by the trap client registered in this conceptual row and which shall be used by this management agent to deliver traps to the trap client (management station or proxy).",
    "reference": "See: Cited IETF SNMP specifications."
  },
  "XcmGenSNMPv2ErrorStatus": {
    "name": "XcmGenSNMPv2ErrorStatus",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noError": 0,
          "tooBig": 1,
          "noSuchName": 2,
          "badValue": 3,
          "readOnly": 4,
          "genErr": 5,
          "noAccess": 6,
          "wrongType": 7,
          "wrongLength": 8,
          "wrongEncoding": 9,
          "wrongValue": 10,
          "noCreation": 11,
          "inconsistentValue": 12,
          "resourceUnavailable": 13,
          "commitFailed": 14,
          "undoFailed": 15,
          "authorizationError": 16,
          "notWritable": 17,
          "inconsistentName": 18
        }
      }
    },
    "status": "current",
    "description": " Usage: This type specifies the SMIv2 equivalent of the SMIv1 'ErrorStatus' textual convention as an enumerated type.",
    "reference": " See: 'error-status' in SNMPv2 Protocol (RFC 1448/1905)"
  },
  "XcmGlobalUniqueID": {
    "name": "XcmGlobalUniqueID",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "status": "current",
    "description": " A management station or management agent specifies an object of type 'GlobalUniqueID' to uniquely label a client job request, a system administration request, or ANY other managed object (or set of managed objects) which are required to be unambiguously identified in a distributed network environment. An object of type 'GlobalUniqueID' shall be a textual string representation in standard 'dotted decimal' form of an OID. An object of type 'GlobalUniqueID' shall be composed of three mandatory sections, as follows: nodeID.userID.seqID Each of the sections shall be separated by a dot ('.'). The three mandatory sections (in left to right order) shall be: 1) A globally unambiguous (within at least the network domain of the Requestor and Responder host systems) dotted decimal 'nodeID' of the Requestor host system which explicitly or implicitly labelled this managed object, either: a) A domain specific network layer address (eg, IETF IP address for 'nodeIDTypeIP'); OR b) A domain specific datalink MAC sublayer address (eg, ISO 8802-5 MAC address for 'nodeIDType88025'). 2) A locally unambiguous (within at least the Requestor and/or Responder host systems) dotted decimal 'userID' (ie, user identifier) of the user who explicitly or implicitly labelled this managed object. 3) A locally unambiguous (within at least the Requestor and/or Responder host systems) dotted decimal 'seqID' (ie, sequence identifier) assigned by the host system or user who explicitly or implicitly labelled this managed object. Usage: Conforming implementations shall NOT specify BOTH the first ('nodeID') and second ('userID') sections as 'empty', but one OR the other section MAY take on an 'empty' value (see below). The third ('seqID') section shall NOT be 'empty'. Each of the three mandatory sections shall be composed of one mandatory and two optional subsections, as follows: sectionLength.sectionType.sectionValue Each of the subsections shall be separated by a dot ('.'). The three subsections (in left to right order) shall be: 1) A mandatory 'sectionLength', which specifies the decimal number of dotted decimal 'components' of the associated 'sectionValue' - this 'sectionLength' shall NOT be self-inclusive and shall NOT include the single 'component' of the 'sectionType' - a 'sectionLength' of decimal zero ('0') shall indicate an 'empty' section, and the associated two subsections ('sectionType' and 'sectionValue') shall be omitted. 2) An optional 'sectionType', selected from the standard 'sectionType' choices applicable to this section. 3) An optional 'sectionValue', specified as a dotted decimal string of 'components', each 'component' separated by a dot ('.'). The standard 'sectionType' choices applicable to each section, shall be as follows: 1) 'nodeIDType' 1 : nodeIDTypeOther -- Other 2 : nodeIDTypeUnknown -- Unknown 11 : nodeIDTypeIP -- Internet IP 12 : nodeIDTypeCLNS -- OSI CLNS 13 : nodeIDTypeCONS -- OSI CONS 14 : nodeIDTypeDDP -- AppleTalk DDP 15 : nodeIDTypeIPX -- NetWare IPX 16 : nodeIDTypeNetBIOS -- IBM NetBIOS 31 : nodeIDType88023 -- ISO 8802-3 (Ethernet LAN) 32 : nodeIDType88024 -- ISO 8802-4 (TokenBus LAN) 33 : nodeIDType88025 -- ISO 8802-5 (TokenRing LAN) 34 : nodeIDType88026 -- ISO 8802-6 (SlottedRing MAN) 2) 'userIDType' 1 : userIDTypeOther -- Other 2 : userIDTypeUnknown -- Unknown 11 : userIDTypeSystem -- System scope 12 : userIDTypeSubnet -- Subnet scope 13 : userIDTypeNetwork -- Network scope 14 : userIDTypeGlobal -- Global scope 3) 'seqIDType' 1 : seqIDTypeOther -- Other 2 : seqIDTypeUnknown -- Unknown 11 : seqIDTypeSystem -- System generated 12 : seqIDTypeProcess -- Process generated 13 : seqIDTypeThread -- Thread generated Usage: A 'seqID' of any type shall be system-unique. Usage: A 'seqID' of type 'seqIDTypeProcess' shall be prefixed (if necessary) by a system-unique dotted decimal 'processID'. Usage: A 'seqID' of type 'seqIDTypeThread' shall be prefixed (if necessary) by a system-unique dotted decimal 'threadID' (possibly itself prefixed by a system-unique 'processID'). Example: A request submitted from a client end system running the IETF Internet Protocol Suite (IPS), with an IP address of '13.240.128.21', without a specified dotted decimal 'userID', might use a request ID ('GlobalUniqueID') of the following form: '4.11.13.240.128.21.0.1.11.3045' [GlobalUniqueID] |---------1--------|2|----3----| [Sections] 1) The first section ('nodeID') consists of: a) 'sectionLength' of '4'; b) 'sectionType' of '11' ('nodeIDTypeIP'); and c) 'sectionValue' of '13.240.128.21' (4 components). 2) The second section ('userID') consists of: a) 'sectionLength' of '0' (ie, 'empty' section). 3) The third section ('seqID') consists of: a) 'sectionLength' of '1'; b) 'sectionType' of '11' ('seqIDTypeSystem'); and c) 'sectionValue' of '3045' (one component)."
  },
  "xCmGeneralDummy": {
    "name": "xCmGeneralDummy",
    "oid": "1.3.6.1.4.1.253.8.50.999",
    "class": "objectidentity"
  },
  "xCmGenCardinal16": {
    "name": "xCmGenCardinal16",
    "oid": "1.3.6.1.4.1.253.8.50.999.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Cardinal16",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenCardinal32": {
    "name": "xCmGenCardinal32",
    "oid": "1.3.6.1.4.1.253.8.50.999.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Cardinal32",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenCardinal64High": {
    "name": "xCmGenCardinal64High",
    "oid": "1.3.6.1.4.1.253.8.50.999.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Cardinal64High",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenCardinal64Low": {
    "name": "xCmGenCardinal64Low",
    "oid": "1.3.6.1.4.1.253.8.50.999.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Cardinal64Low",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenCodedCountry": {
    "name": "xCmGenCodedCountry",
    "oid": "1.3.6.1.4.1.253.8.50.999.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "CodedCountry",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenCodedLanguage": {
    "name": "xCmGenCodedLanguage",
    "oid": "1.3.6.1.4.1.253.8.50.999.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "CodedLanguage",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenCodeIndexedStringIndex": {
    "name": "xCmGenCodeIndexedStringIndex",
    "oid": "1.3.6.1.4.1.253.8.50.999.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "CodeIndexedStringIndex",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenCounter64High": {
    "name": "xCmGenCounter64High",
    "oid": "1.3.6.1.4.1.253.8.50.999.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter64High",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenCounter64Low": {
    "name": "xCmGenCounter64Low",
    "oid": "1.3.6.1.4.1.253.8.50.999.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Counter64Low",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenGauge64High": {
    "name": "xCmGenGauge64High",
    "oid": "1.3.6.1.4.1.253.8.50.999.10",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge64High",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenGauge64Low": {
    "name": "xCmGenGauge64Low",
    "oid": "1.3.6.1.4.1.253.8.50.999.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Gauge64Low",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenInteger64High": {
    "name": "xCmGenInteger64High",
    "oid": "1.3.6.1.4.1.253.8.50.999.12",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer64High",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenInteger64Low": {
    "name": "xCmGenInteger64Low",
    "oid": "1.3.6.1.4.1.253.8.50.999.13",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer64Low",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenOrdinal16": {
    "name": "xCmGenOrdinal16",
    "oid": "1.3.6.1.4.1.253.8.50.999.14",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Ordinal16",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenOrdinal32": {
    "name": "xCmGenOrdinal32",
    "oid": "1.3.6.1.4.1.253.8.50.999.15",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Ordinal32",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenOrdinal64High": {
    "name": "xCmGenOrdinal64High",
    "oid": "1.3.6.1.4.1.253.8.50.999.16",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Ordinal64High",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenOrdinal64Low": {
    "name": "xCmGenOrdinal64Low",
    "oid": "1.3.6.1.4.1.253.8.50.999.17",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Ordinal64Low",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenFixedLocaleDisplayString": {
    "name": "xCmGenFixedLocaleDisplayString",
    "oid": "1.3.6.1.4.1.253.8.50.999.18",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmFixedLocaleDisplayString",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenGroupSupport": {
    "name": "xCmGenGroupSupport",
    "oid": "1.3.6.1.4.1.253.8.50.999.19",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmGenGroupSupport",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenLogFullPolicy": {
    "name": "xCmGenLogFullPolicy",
    "oid": "1.3.6.1.4.1.253.8.50.999.20",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmGenLogFullPolicy",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenOptionValueSyntax": {
    "name": "xCmGenOptionValueSyntax",
    "oid": "1.3.6.1.4.1.253.8.50.999.21",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmGenOptionValueSyntax",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenReconfOptionState": {
    "name": "xCmGenReconfOptionState",
    "oid": "1.3.6.1.4.1.253.8.50.999.22",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmGenReconfOptionState",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenRowPersistence": {
    "name": "xCmGenRowPersistence",
    "oid": "1.3.6.1.4.1.253.8.50.999.23",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmGenRowPersistence",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenSNMPDomain": {
    "name": "xCmGenSNMPDomain",
    "oid": "1.3.6.1.4.1.253.8.50.999.24",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmGenSNMPDomain",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenSNMPVersion": {
    "name": "xCmGenSNMPVersion",
    "oid": "1.3.6.1.4.1.253.8.50.999.25",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmGenSNMPVersion",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenSNMPv2ErrorStatus": {
    "name": "xCmGenSNMPv2ErrorStatus",
    "oid": "1.3.6.1.4.1.253.8.50.999.26",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmGenSNMPv2ErrorStatus",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "xCmGenGlobalUniqueID": {
    "name": "xCmGenGlobalUniqueID",
    "oid": "1.3.6.1.4.1.253.8.50.999.27",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "XcmGlobalUniqueID",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Dummy - DO NOT USE"
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/XEROX-GENERAL-TC.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 15:50:11 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "XEROX-GENERAL-TC"
  }
}