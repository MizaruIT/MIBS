{
  "imports": {
    "class": "imports",
    "DOCS-IF-EXT-MIB": [
      "docsIfCmtsCmStatusDocsisMode"
    ],
    "DOCS-IF-MIB": [
      "docsIfCmtsCmStatusMacAddress",
      "docsIfDownChannelId",
      "docsIfCmtsCmStatusEntry",
      "docsIfCmtsCmStatusIndex",
      "docsIfUpChannelId"
    ],
    "IF-MIB": [
      "ifOperStatus",
      "ifAdminStatus",
      "ifIndex"
    ],
    "RDN-CABLE-SPECTRUM-GROUP-MIB": [
      "rdnSpectrumGroupName"
    ],
    "RDN-MIB": [
      "riverdelta"
    ],
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "Bits",
      "IpAddress",
      "Counter64",
      "iso",
      "Integer32",
      "OBJECT-IDENTITY",
      "Unsigned32",
      "MibIdentifier",
      "Gauge32",
      "NOTIFICATION-TYPE",
      "Counter32",
      "TimeTicks",
      "OBJECT-TYPE",
      "MODULE-IDENTITY"
    ],
    "SNMPv2-TC": [
      "MacAddress",
      "TEXTUAL-CONVENTION",
      "DisplayString",
      "TruthValue"
    ]
  },
  "rdnCmts": {
    "name": "rdnCmts",
    "oid": "1.3.6.1.4.1.4981.2",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "1900-04-03 00:00",
        "description": "Initial Version. 1/30/01 add rdnCmtsCpeToCmTable . XQ Updated by JP Brahma May-28-2002 add rdmIfCmtsCmStatusTable"
      }
    ],
    "lastupdated": "200206250000Z",
    "organization": "Motorola",
    "contactinfo": "Peng Luo Three HighWood Drive East Tewksbury, MA U.S.A. Phone: +1 978 858 2451 E-mail: pluo@riverdelta.com",
    "description": "This is the enterprise MIB Module for Motorola's Cable Modem Termination Systems (CMTS)."
  },
  "rdnCmtsIfObjects": {
    "name": "rdnCmtsIfObjects",
    "oid": "1.3.6.1.4.1.4981.2.1",
    "class": "objectidentity"
  },
  "rdnCmtsMiscObjects": {
    "name": "rdnCmtsMiscObjects",
    "oid": "1.3.6.1.4.1.4981.2.2",
    "class": "objectidentity"
  },
  "rdnCmtsRedunObjects": {
    "name": "rdnCmtsRedunObjects",
    "oid": "1.3.6.1.4.1.4981.2.3",
    "class": "objectidentity"
  },
  "rdnCmtsStpObjects": {
    "name": "rdnCmtsStpObjects",
    "oid": "1.3.6.1.4.1.4981.2.1.3",
    "class": "objectidentity"
  },
  "rdnCmtsDownstreamChannelTable": {
    "name": "rdnCmtsDownstreamChannelTable",
    "oid": "1.3.6.1.4.1.4981.2.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": "Proprietary MIB.",
    "status": "current",
    "description": "This table describes the attributes of downstream channel in addition to those specified by the docsIfMib."
  },
  "rdnCmtsDownstreamChannelEntry": {
    "name": "rdnCmtsDownstreamChannelEntry",
    "oid": "1.3.6.1.4.1.4981.2.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry provides a list of attributes for a single Downstream channel. An entry in this table exists for each ifEntry with an ifType of docsCableDownstream(128)."
  },
  "cmtsDSModulation": {
    "name": "cmtsDSModulation",
    "oid": "1.3.6.1.4.1.4981.2.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The attribute to control the down stream modulation. When this object is set to FALSE(2), the downstream transmitter will output a CW, or tonal signal at the tuned RF frequency."
  },
  "rdnCmtsUpstreamChannelTable": {
    "name": "rdnCmtsUpstreamChannelTable",
    "oid": "1.3.6.1.4.1.4981.2.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table describes the attributes of upstream channel in addition to those specified by the docsIfMib."
  },
  "rdnCmtsUpstreamChannelEntry": {
    "name": "rdnCmtsUpstreamChannelEntry",
    "oid": "1.3.6.1.4.1.4981.2.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "List of attributes for a single upstream channel. An entry in this table exists for each ifEntry with an ifType of docsCableUpstream(129)."
  },
  "cmtsUSNominalRxPower": {
    "name": "cmtsUSNominalRxPower",
    "oid": "1.3.6.1.4.1.4981.2.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": -160,
            "max": 260
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The attribute to program the target, or nominal, receive power of each upstream RF port. The range is channel width dependent: Power Level Channel Width -160,+140 200 kHz -130,+170 400 kHz -100,+200 800 kHz -70,+230 1600 kHz -40,+260 3200 kHz"
  },
  "rdnCmtsUSNominalRxPowerMode": {
    "name": "rdnCmtsUSNominalRxPowerMode",
    "oid": "1.3.6.1.4.1.4981.2.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "default": 0,
          "absolute": 1
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object describes the setting mode for rdnCmtsUSNomialRxPower. The default setting is the absolute mode."
  },
  "cmtsUSInvitedRangingInterval": {
    "name": "cmtsUSInvitedRangingInterval",
    "oid": "1.3.6.1.4.1.4981.2.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 30000
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "To fix Invited(Periodic) Ranging Intervals as in input to the Bandwidth Allocator algorithm."
  },
  "cmtsUSRangingResponseControl": {
    "name": "cmtsUSRangingResponseControl",
    "oid": "1.3.6.1.4.1.4981.2.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 0,
          "override": 1
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The attribute to force all RNG-Resp messages to issue a 'Continue' Ranging Status indefinitely regardless of timing, power, etc. accuracy of previous incoming Ranging Request. Value 0 means Normal Ranging Mode, value 1 means Status Override"
  },
  "cmtsUSRangingPowerOverride": {
    "name": "cmtsUSRangingPowerOverride",
    "oid": "1.3.6.1.4.1.4981.2.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The attribute overrides upstream power adjustments performed by the CMTS to CM's. When this object is set to TRUE(1), the override is activated, all Ranging Response message will be transmitted with ZERO power adjustment, regardless of received upstream power levels."
  },
  "rdnCmtsStpEnable": {
    "name": "rdnCmtsStpEnable",
    "oid": "1.3.6.1.4.1.4981.2.1.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object controls the activation of DOCSIS Spanning Tree Protocol Bridging functionality. The Spanning Tree Bridging is disabled/enabled by setting this object to FALSE/TRUE."
  },
  "rdnCmtsStpTCNEnable": {
    "name": "rdnCmtsStpTCNEnable",
    "oid": "1.3.6.1.4.1.4981.2.1.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object controls the generation of Topology Change Notification messages for DOCSIS Spanning Tree Protocol Bridge. "
  },
  "rdnCmtsLinkUpdownTrapEnableTable": {
    "name": "rdnCmtsLinkUpdownTrapEnableTable",
    "oid": "1.3.6.1.4.1.4981.2.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table has the object to enable or disable the generation of LinkUp and Link Down traps."
  },
  "rdnCmtsLinkUpdownTrapEnableEntry": {
    "name": "rdnCmtsLinkUpdownTrapEnableEntry",
    "oid": "1.3.6.1.4.1.4981.2.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry in this table exists for each ifEntry with an ifType of docsCableUpstream(129)."
  },
  "rdnLinkUpDownTrapEnable": {
    "name": "rdnLinkUpDownTrapEnable",
    "oid": "1.3.6.1.4.1.4981.2.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "enabled": 1,
          "disabled": 2
        }
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Indicates whether linkUp and LinkDown traps should be generated for this interface. By default, this object should have the value disabled(2) for interfaces which do not operate on 'top' of any other interface (as defined in the ifStackTable), and enabled(1) otherwise. These traps are convenient for knowing the Spectrum Group Name whenever the link state changes. So the trap is only limited to the ifIndex values related to upstream."
  },
  "rdnCmtsSaveConfig": {
    "name": "rdnCmtsSaveConfig",
    "oid": "1.3.6.1.4.1.4981.2.2.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object when set to TRUE will save the current configuration of the CMTS. When this object is read it will return FALSE"
  },
  "rdnCmtsCmResetByMacAddr": {
    "name": "rdnCmtsCmResetByMacAddr",
    "oid": "1.3.6.1.4.1.4981.2.2.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The CM MAC address that the operator wants to reset. When this object is set, it will cause the CMTS to reset that CM. When this object is read it will return zero"
  },
  "rdnCmtsCmResetByIpAddr": {
    "name": "rdnCmtsCmResetByIpAddr",
    "oid": "1.3.6.1.4.1.4981.2.2.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The CM IP address that the operator wants to reset. When this object is set, it will cause the CMTS to reset that CM. When this object is read it will return zero"
  },
  "rdnCmtsCmResetAll": {
    "name": "rdnCmtsCmResetAll",
    "oid": "1.3.6.1.4.1.4981.2.2.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object when set to TRUE will cause the CMTS to reset all the CM that are registered with this CMTS. When this object is read it will return FALSE"
  },
  "rdnCmtsHostAuthControl": {
    "name": "rdnCmtsHostAuthControl",
    "oid": "1.3.6.1.4.1.4981.2.2.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 17,
            "max": 17
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object is used to add or delete entry in CMTS host authorization table. The first octet is for action, add (1) or delete (2), the rest are composed with CM MAC address (6 octets), CPE MAC address (6 octets), and the CPE IP address (4 octets). Zero is returned for read on this object"
  },
  "rdnCmtsModemAgingTimer": {
    "name": "rdnCmtsModemAgingTimer",
    "oid": "1.3.6.1.4.1.4981.2.2.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 10,
            "max": 30240
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The Time in minutes of modem inactivity after which the modem is deleted from the registration table. The minimum is 10 minutes and the maximum is 21 days. A value of '0' will disable the aging timer"
  },
  "rdnCmtsCpeToCmObject": {
    "name": "rdnCmtsCpeToCmObject",
    "oid": "1.3.6.1.4.1.4981.2.2.7",
    "class": "objectidentity"
  },
  "rdnCmtsCpeToCmTable": {
    "name": "rdnCmtsCpeToCmTable",
    "oid": "1.3.6.1.4.1.4981.2.2.7.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "reference": " ",
    "status": "current",
    "description": "This table describes the mapping between CPE's MAC address and MAC address of the cable modem these CPEs are attached to. This table does not support the walk/getNext. It is not intended to use this mib to walk the list of cpe's in the system."
  },
  "rdnCmtsCpeToCmEntry": {
    "name": "rdnCmtsCpeToCmEntry",
    "oid": "1.3.6.1.4.1.4981.2.2.7.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "RDN-CMTS-MIB",
        "object": "rdnCmtsCpeMac",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry describes the mapping between one CPE's MAC address and MAC address of the cable modem this CPE is attached to."
  },
  "rdnCmtsCpeMac": {
    "name": "rdnCmtsCpeMac",
    "oid": "1.3.6.1.4.1.4981.2.2.7.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This object is the MAC address of the CPE (host) that a cable modem is attached to."
  },
  "rdnCmtsCmMac": {
    "name": "rdnCmtsCmMac",
    "oid": "1.3.6.1.4.1.4981.2.2.7.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This object returns the MAC address of the cable modem that a CPE (host) is attached to. If the CPE is not found being attached to any cable modem registered on this CMTS, the read of this object will return zero."
  },
  "rdnIfCmtsCmStatusTable": {
    "name": "rdnIfCmtsCmStatusTable",
    "oid": "1.3.6.1.4.1.4981.2.2.8",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table is an extension of the docsIfCmtsCmStatusTable. It provides additional information about the CM."
  },
  "rdnIfCmtsCmStatusEntry": {
    "name": "rdnIfCmtsCmStatusEntry",
    "oid": "1.3.6.1.4.1.4981.2.2.8.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "augmention": {
      "name": "rdnIfCmtsCmStatusEntry",
      "module": "RDN-CMTS-MIB",
      "object": "docsIfCmtsCmStatusEntry"
    },
    "status": "current",
    "description": "Each entry of the table rdnIfCmtsCmStatusTable. Each entry provides some additonal information about the CM."
  },
  "rdnIfCmtsCmStatusRegistrationTime": {
    "name": "rdnIfCmtsCmStatusRegistrationTime",
    "oid": "1.3.6.1.4.1.4981.2.2.8.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "When read, this object will return the time in seconds since the modem registered. If the modem is unregistered, it will return ZERO"
  },
  "rdnIfCmtsCmStatusTxUnicastBytes": {
    "name": "rdnIfCmtsCmStatusTxUnicastBytes",
    "oid": "1.3.6.1.4.1.4981.2.2.8.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter64",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "When read, this object will return the number of unicast bytes the modem has transmitted. For offline modems this value is the the total number of unicast bytes when it was online. This object is never reset as long as the CMTS is up. It does not need to be restored across reboots . However, when the CM reregisters into a new spectrum group, this data must be restored."
  },
  "rdnIfCmtsCmStatusRxUnicastBytes": {
    "name": "rdnIfCmtsCmStatusRxUnicastBytes",
    "oid": "1.3.6.1.4.1.4981.2.2.8.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter64",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "When read, this object will return the number of unicast bytes the modem has Received. For offline modems this value is the the total number of unicast bytes when it was online. This Object is never reset as long as the CMTS is up. It does not need to be restored across reboots. However, when the CM reregisters into a new spectrum group, this data must be restored."
  },
  "rdnIfCmtsCmStatusSpectrumGroupName": {
    "name": "rdnIfCmtsCmStatusSpectrumGroupName",
    "oid": "1.3.6.1.4.1.4981.2.2.8.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "When read, this object will return the spectrum group name. If data not available, return NULL string"
  },
  "rdnIfCmtsCmStatusUpstreamPort": {
    "name": "rdnIfCmtsCmStatusUpstreamPort",
    "oid": "1.3.6.1.4.1.4981.2.2.8.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 7
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The Upstream Port Number the modem is using. For offline modems this value is meaningless."
  },
  "rdnIfCmtsCmStatusDownStreamPort": {
    "name": "rdnIfCmtsCmStatusDownStreamPort",
    "oid": "1.3.6.1.4.1.4981.2.2.8.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 7
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The downstream port number the modem is using, For offline modems this value is meaningless."
  },
  "rdnCmToCpeTable": {
    "name": "rdnCmToCpeTable",
    "oid": "1.3.6.1.4.1.4981.2.2.12",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This table provides the information about the CPEs attached to the CM."
  },
  "rdnCmToCpeEntry": {
    "name": "rdnCmToCpeEntry",
    "oid": "1.3.6.1.4.1.4981.2.2.12.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "DOCS-IF-MIB",
        "object": "docsIfCmtsCmStatusIndex",
        "implied": 0
      },
      {
        "module": "RDN-CMTS-MIB",
        "object": "rdnCmToCpeIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "An entry of the table rdnCmToCpeTable. Each entry provides the CPE Mac and IP addresses."
  },
  "rdnCmToCpeIndex": {
    "name": "rdnCmToCpeIndex",
    "oid": "1.3.6.1.4.1.4981.2.2.12.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Index Value for an individual CPE, This index value is not guarenteed to remain same during CMTS uptime. "
  },
  "rdnCmToCpeMacAddress": {
    "name": "rdnCmToCpeMacAddress",
    "oid": "1.3.6.1.4.1.4981.2.2.12.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "MacAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The Mac Address of the CPE attached to the CM"
  },
  "rdnCmToCpeIpAddress": {
    "name": "rdnCmToCpeIpAddress",
    "oid": "1.3.6.1.4.1.4981.2.2.12.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The IP Address of the CPE attached to the CM"
  },
  "rdnModemDeregReason": {
    "name": "rdnModemDeregReason",
    "oid": "1.3.6.1.4.1.4981.2.2.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "normal": 1,
          "operatorReset": 2,
          "operatorDisabled": 3,
          "operatorDeleted": 4,
          "transmissionFailed": 5,
          "transmissionDisabled": 6,
          "transmissionDeleted": 7,
          "servingGroupChanged": 8,
          "receiverFailed": 9,
          "receiverDisabled": 10,
          "receiverDeleted": 11,
          "channelDeleted": 12,
          "channelErrors": 13,
          "incompleteReg": 14,
          "profileUpdateComplete": 15,
          "skeyFailure": 16,
          "dnChanChangeFailure": 17,
          "noDeregReason": 18,
          "powerTolerance": 19,
          "freqTolerance": 20,
          "timingTolerance": 21,
          "rangingTolerance": 22,
          "noResponseUCC": 23
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Modem Deregistration Reason normal - the CMTS has lost contact witht the modem. operatorReset - reset by the operator operatorDisabled - operator has disabled the modem operatorDeleted - was removed from the system transmissionFailed - the transmitter communicating to the modem has failed transmissionDisabled - the transmitter communicating to the modem has been disabled transmissionDeleted - the transmitter communicating to the modem has been deleted servingGroupChanged - the assignment of the serving groups for the modem has changed receiverFailed - the receiver communicating with the modem has failed receiverDisabled - the receiver communicating with the modem has been disabled receiverDeleted - the receiver communicating with the modem has beeb deleted channelDeleted - a channel has changed on the reciver that has caused the modem to deregister channelErrors - deregistered due to unacceptable amount of channel errors incompleteReg - deregistered due to incomplete registration profileUpdateComplete - deregistered after profile update skeyFailure - deregistered due to session key failure dnChanChangeFailure - due to downstream transmission channel change failure noDeregReason - no deregistration reason available powerTolerance - power ranging corrections were out of tolerance freqTolerance - frequency ranging corrections were out of tolerance timingTolerance - timing ranging correction were out of tolerance rangingTolerance - multiple ranging corrections were out of tolerance noResponseUCC - modem did not respond to the UCC request This is a place holder for the modem deregistration reason. This should return ZERO when read. This just allows us to include a deregistration reason in the modem deregistration trap varbind. "
  },
  "rdnDevCmtsTraps": {
    "name": "rdnDevCmtsTraps",
    "oid": "1.3.6.1.4.1.4981.2.2.10",
    "class": "objectidentity"
  },
  "rdnModemRegIndex": {
    "name": "rdnModemRegIndex",
    "oid": "1.3.6.1.4.1.4981.2.2.11",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "This is place holder for CMId which is the index to the CM table. This table WILL contain the CM information. Right now the table is not implemented yet. When read it returns ZERO. But in future this should be part of the CM information table and this should be removed from here. This is required now to support the varbind in Registration and Deregistration Traps. "
  },
  "rdnDevCmtsCmRegisteredTrap": {
    "name": "rdnDevCmtsCmRegisteredTrap",
    "oid": "1.3.6.1.4.1.4981.2.2.10.1",
    "class": "notificationtype",
    "objects": [
      {
        "module": "DOCS-IF-EXT-MIB",
        "object": "docsIfCmtsCmStatusDocsisMode"
      },
      {
        "module": "DOCS-IF-MIB",
        "object": "docsIfCmtsCmStatusMacAddress"
      },
      {
        "module": "DOCS-IF-MIB",
        "object": "docsIfUpChannelId"
      },
      {
        "module": "DOCS-IF-MIB",
        "object": "docsIfDownChannelId"
      },
      {
        "module": "RDN-CMTS-MIB",
        "object": "rdnModemRegIndex"
      },
      {
        "module": "RDN-CABLE-SPECTRUM-GROUP-MIB",
        "object": "rdnSpectrumGroupName"
      }
    ],
    "status": "current",
    "description": "An event to report the registration of a modem. The values of docsDevEvLevel, docsDevId, and DocsDevEvText are from the entry which logs this event in the docsDevEventTable, DocsIfCmtsCmStatusDocsisMode and docsIfCmtsCmStatusMacAddress indicate the docsis version and the MAC address of the registered CM. docsIfDocsisCapability indicate the docsis version of the CMTS , docsIfUpChannelId, docsIfDownChannelId gives the upstream and downstream channel id respectively for the CM. rdnSpectrumGroupName gives the spectrum group name."
  },
  "rdnDevCmtsCmDeregisteredTrap": {
    "name": "rdnDevCmtsCmDeregisteredTrap",
    "oid": "1.3.6.1.4.1.4981.2.2.10.2",
    "class": "notificationtype",
    "objects": [
      {
        "module": "DOCS-IF-EXT-MIB",
        "object": "docsIfCmtsCmStatusDocsisMode"
      },
      {
        "module": "DOCS-IF-MIB",
        "object": "docsIfCmtsCmStatusMacAddress"
      },
      {
        "module": "DOCS-IF-MIB",
        "object": "docsIfUpChannelId"
      },
      {
        "module": "DOCS-IF-MIB",
        "object": "docsIfDownChannelId"
      },
      {
        "module": "RDN-CMTS-MIB",
        "object": "rdnModemRegIndex"
      },
      {
        "module": "RDN-CMTS-MIB",
        "object": "rdnModemDeregReason"
      },
      {
        "module": "RDN-CABLE-SPECTRUM-GROUP-MIB",
        "object": "rdnSpectrumGroupName"
      }
    ],
    "status": "current",
    "description": "An event to report the registration of a modem. The values of docsDevEvLevel, docsDevId, and DocsDevEvText are from the entry which logs this event in the docsDevEventTable, DocsIfCntsCmStatusDocsisMode and docsIfCmtsCmStatusMacAddress indicate the docsis version and the MAC address of the registered CM. docsIfDocsisCapability indicate the docsis version of the CMTS , docsIfUpChannelId, docsIfDownChannelId gives the upstream and downstream channel id respectively for the CM. rdnSpectrumGroupId gives the spectrum group name."
  },
  "rdnLinkUpTrap": {
    "name": "rdnLinkUpTrap",
    "oid": "1.3.6.1.4.1.4981.2.2.10.3",
    "class": "notificationtype",
    "objects": [
      {
        "module": "IF-MIB",
        "object": "ifIndex"
      },
      {
        "module": "IF-MIB",
        "object": "ifAdminStatus"
      },
      {
        "module": "IF-MIB",
        "object": "ifOperStatus"
      },
      {
        "module": "RDN-CABLE-SPECTRUM-GROUP-MIB",
        "object": "rdnSpectrumGroupName"
      }
    ],
    "status": "current",
    "description": "The standard linkUp traps don't give out the spectrum group name. So this is the trap that will extend the varbind to include the spectrum group name. "
  },
  "rdnLinkDownTrap": {
    "name": "rdnLinkDownTrap",
    "oid": "1.3.6.1.4.1.4981.2.2.10.4",
    "class": "notificationtype",
    "objects": [
      {
        "module": "IF-MIB",
        "object": "ifIndex"
      },
      {
        "module": "IF-MIB",
        "object": "ifAdminStatus"
      },
      {
        "module": "IF-MIB",
        "object": "ifOperStatus"
      },
      {
        "module": "RDN-CABLE-SPECTRUM-GROUP-MIB",
        "object": "rdnSpectrumGroupName"
      }
    ],
    "status": "current",
    "description": "The standard linkDown traps don't give out the spectrum group name. So this is the trap that will extend the varbind to include the spectrum group name. "
  },
  "rdnCmtsRedundancyEnable": {
    "name": "rdnCmtsRedundancyEnable",
    "oid": "1.3.6.1.4.1.4981.2.3.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object enables or disables the redundant CM card support. "
  },
  "rdnCmtsRedundancySlot": {
    "name": "rdnCmtsRedundancySlot",
    "oid": "1.3.6.1.4.1.4981.2.3.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "This object selects which CMTS card to use as the redundant hot-standby. "
  },
  "rdnCmtsRedundancyRevertTimeout": {
    "name": "rdnCmtsRedundancyRevertTimeout",
    "oid": "1.3.6.1.4.1.4981.2.3.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 86400
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The number of seconds to wait before reverting from the redundant standby back to the CMTS card. If 0 is specified then reverting is disabled."
  },
  "rdnCmtsRedundancySwitchover": {
    "name": "rdnCmtsRedundancySwitchover",
    "oid": "1.3.6.1.4.1.4981.2.3.4",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 15
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Writing to this object forces the specified CMTS card to switchover to the redundant standby. Reading this object does nothing and provides no information."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/RDN-CMTS-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 15:03:18 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "RDN-CMTS-MIB"
  }
}