{
  "imports": {
    "class": "imports",
    "IF-MIB": [
      "ifIndex"
    ],
    "RMON2-MIB": [
      "TimeFilter"
    ],
    "SNMPv2-CONF": [
      "OBJECT-GROUP",
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "Unsigned32",
      "Counter32",
      "Counter64",
      "MibIdentifier",
      "NOTIFICATION-TYPE",
      "Bits",
      "Gauge32",
      "OBJECT-TYPE",
      "TimeTicks",
      "Integer32",
      "iso",
      "OBJECT-IDENTITY",
      "IpAddress",
      "mib-2",
      "MODULE-IDENTITY"
    ],
    "SNMPv2-TC": [
      "RowStatus",
      "TimeStamp",
      "TEXTUAL-CONVENTION",
      "DisplayString",
      "TruthValue"
    ]
  },
  "flowMIB": {
    "name": "flowMIB",
    "oid": "1.3.6.1.2.1.40",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "1999-10-25 00:00",
        "description": "Initial Version, published as RFC 2720."
      },
      {
        "revision": "1999-08-30 12:50",
        "description": "UTF8OwnerString Textual Convention added, and used to replace OwnerString. Conceptually the same as OwnerString, but facilitating internationalisation by using UTF-8 encoding for its characters rather than US-ASCII."
      },
      {
        "revision": "1999-08-19 10:10",
        "description": "Changes to SIZE specification for two variables: - flowRuleInfoName SIZE specified as (0..127) - flowRuleIndex SIZE increased to (1..2147483647)"
      },
      {
        "revision": "1997-12-23 09:37",
        "description": "Two further variables deprecated: - flowRuleInfoRulesReady (use flowRuleInfoStatus intead) - flowDataStatus (contains no useful information)"
      },
      {
        "revision": "1997-07-07 17:15",
        "description": "Significant changes since RFC 2064 include: - flowDataPackageTable added - flowColumnActivityTable deprecated - flowManagerCounterWrap deprecated"
      },
      {
        "revision": "1996-03-08 02:08",
        "description": "Initial version of this MIB (RFC 2064)"
      }
    ],
    "lastupdated": "9910250000Z",
    "organization": "IETF Realtime Traffic Flow Measurement Working Group",
    "contactinfo": "Nevil Brownlee, The University of Auckland Postal: Information Technology Sytems & Services The University of Auckland Private Bag 92-019 Auckland, New Zealand Phone: +64 9 373 7599 x8941 E-mail: n.brownlee@auckland.ac.nz",
    "description": "MIB for the RTFM Traffic Flow Meter."
  },
  "flowControl": {
    "name": "flowControl",
    "oid": "1.3.6.1.2.1.40.1",
    "class": "objectidentity"
  },
  "flowData": {
    "name": "flowData",
    "oid": "1.3.6.1.2.1.40.2",
    "class": "objectidentity"
  },
  "flowRules": {
    "name": "flowRules",
    "oid": "1.3.6.1.2.1.40.3",
    "class": "objectidentity"
  },
  "flowMIBConformance": {
    "name": "flowMIBConformance",
    "oid": "1.3.6.1.2.1.40.4",
    "class": "objectidentity"
  },
  "UTF8OwnerString": {
    "name": "UTF8OwnerString",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    },
    "displayhint": "127t",
    "status": "current",
    "description": "An administratively assigned name for the owner of a resource, conceptually the same as OwnerString in the RMON MIB [RMON-MIB]. To facilitate internationalisation, this name information is represented using the ISO/IEC IS 10646-1 character set, encoded as an octet string using the UTF-8 transformation format described in the UTF-8 standard [UTF-8]."
  },
  "PeerType": {
    "name": "PeerType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ipv4": 1,
          "ipv6": 2,
          "nsap": 3,
          "ipx": 11,
          "appletalk": 12,
          "decnet": 13
        }
      }
    },
    "status": "current",
    "description": "Indicates the type of a PeerAddress (see below). The values used are from the 'Address Family Numbers' section of the Assigned Numbers RFC [ASG-NBR]. Peer types from other address families may also be used, provided only that they are identified by their assigned Address Family numbers."
  },
  "PeerAddress": {
    "name": "PeerAddress",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 3,
            "max": 20
          }
        ]
      }
    },
    "status": "current",
    "description": "Specifies the value of a peer address for various network protocols. Address format depends on the actual protocol, as indicated below: IPv4: ipv4(1) 4-octet IpAddress (defined in the SNMPv2 SMI [RFC2578]) IPv6: ipv6(2) 16-octet IpAddress (defined in the IPv6 Addressing RFC [V6-ADDR]) CLNS: nsap(3) NsapAddress (defined in the SNMPv2 SMI [RFC2578]) Novell: ipx(11) 4-octet Network number, 6-octet Host number (MAC address) AppleTalk: appletalk(12) 2-octet Network number (sixteen bits), 1-octet Host number (eight bits) DECnet: decnet(13) 1-octet Area number (in low-order six bits), 2-octet Host number (in low-order ten bits) "
  },
  "AdjacentType": {
    "name": "AdjacentType",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ip": 1,
          "nsap": 3,
          "ethernet": 7,
          "tokenring": 9,
          "ipx": 11,
          "appletalk": 12,
          "decnet": 13,
          "fddi": 15
        }
      }
    },
    "status": "current",
    "description": "Indicates the type of an adjacent address. May be a medium type or (if metering is taking place inside a tunnel) a PeerType (see above). The values used for IEEE 802 medium types are from the 'Network Management Parameters (ifType definitions)' section of the Assigned Numbers RFC [ASG-NBR]. Other medium types may also be used, provided only that they are identified by their assigned ifType numbers."
  },
  "AdjacentAddress": {
    "name": "AdjacentAddress",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 3,
            "max": 20
          }
        ]
      }
    },
    "status": "current",
    "description": "Specifies the value of an adjacent address. May be a Medium Access Control (MAC) address or (if metering is taking place inside a tunnel) a PeerAddress (see above). MAC Address format depends on the actual medium, as follows: Ethernet: ethernet(7) 6-octet 802.3 MAC address in 'canonical' order Token Ring: tokenring(9) 6-octet 802.5 MAC address in 'canonical' order FDDI: fddi(15) FddiMACLongAddress, i.e. a 6-octet MAC address in 'canonical' order (defined in [FDDI-MIB]) "
  },
  "TransportType": {
    "name": "TransportType",
    "class": "textualconvention",
    "type": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "status": "current",
    "description": "Indicates the type of a TransportAddress (see below). Values will depend on the actual protocol; for IP they will be those given in the 'Protocol Numbers' section of the Assigned Numbers RFC [ASG-NBR], including icmp(1), tcp(6) and udp(17)."
  },
  "TransportAddress": {
    "name": "TransportAddress",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 2,
            "max": 2
          }
        ]
      }
    },
    "status": "current",
    "description": "Specifies the value of a transport address for various network protocols. Format as follows: IP: 2-octet UDP or TCP port number Other protocols: 2-octet port number "
  },
  "RuleAddress": {
    "name": "RuleAddress",
    "class": "textualconvention",
    "type": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 2,
            "max": 20
          }
        ]
      }
    },
    "status": "current",
    "description": "Specifies the value of an address. Is a superset of MediumAddress, PeerAddress and TransportAddress."
  },
  "FlowAttributeNumber": {
    "name": "FlowAttributeNumber",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "flowIndex": 1,
          "flowStatus": 2,
          "flowTimeMark": 3,
          "sourceInterface": 4,
          "sourceAdjacentType": 5,
          "sourceAdjacentAddress": 6,
          "sourceAdjacentMask": 7,
          "sourcePeerType": 8,
          "sourcePeerAddress": 9,
          "sourcePeerMask": 10,
          "sourceTransType": 11,
          "sourceTransAddress": 12,
          "sourceTransMask": 13,
          "destInterface": 14,
          "destAdjacentType": 15,
          "destAdjacentAddress": 16,
          "destAdjacentMask": 17,
          "destPeerType": 18,
          "destPeerAddress": 19,
          "destPeerMask": 20,
          "destTransType": 21,
          "destTransAddress": 22,
          "destTransMask": 23,
          "pduScale": 24,
          "octetScale": 25,
          "ruleSet": 26,
          "toOctets": 27,
          "toPDUs": 28,
          "fromOctets": 29,
          "fromPDUs": 30,
          "firstTime": 31,
          "lastActiveTime": 32,
          "sourceSubscriberID": 33,
          "destSubscriberID": 34,
          "sessionID": 35,
          "sourceClass": 36,
          "destClass": 37,
          "flowClass": 38,
          "sourceKind": 39,
          "destKind": 40,
          "flowKind": 41
        }
      }
    },
    "status": "current",
    "description": "Uniquely identifies an attribute within a flow data record."
  },
  "RuleAttributeNumber": {
    "name": "RuleAttributeNumber",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "null": 0,
          "sourceInterface": 4,
          "sourceAdjacentType": 5,
          "sourceAdjacentAddress": 6,
          "sourcePeerType": 8,
          "sourcePeerAddress": 9,
          "sourceTransType": 11,
          "sourceTransAddress": 12,
          "destInterface": 14,
          "destAdjacentType": 15,
          "destAdjacentAddress": 16,
          "destPeerType": 18,
          "destPeerAddress": 19,
          "destTransType": 21,
          "destTransAddress": 22,
          "sourceSubscriberID": 33,
          "destSubscriberID": 34,
          "sessionID": 35,
          "sourceClass": 36,
          "destClass": 37,
          "flowClass": 38,
          "sourceKind": 39,
          "destKind": 40,
          "flowKind": 41,
          "matchingStoD": 50,
          "v1": 51,
          "v2": 52,
          "v3": 53,
          "v4": 54,
          "v5": 55
        }
      }
    },
    "status": "current",
    "description": "Uniquely identifies an attribute which may be tested in a rule. These include attributes whose values come directly from (or are computed from) the flow's packets, and the five 'meter' variables used to hold an Attribute Number."
  },
  "ActionNumber": {
    "name": "ActionNumber",
    "class": "textualconvention",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ignore": 1,
          "noMatch": 2,
          "count": 3,
          "countPkt": 4,
          "return": 5,
          "gosub": 6,
          "gosubAct": 7,
          "assign": 8,
          "assignAct": 9,
          "goto": 10,
          "gotoAct": 11,
          "pushRuleTo": 12,
          "pushRuleToAct": 13,
          "pushPktTo": 14,
          "pushPktToAct": 15,
          "popTo": 16,
          "popToAct": 17
        }
      }
    },
    "status": "current",
    "description": "Uniquely identifies the action of a rule, i.e. the Pattern Matching Engine's opcode number. Details of the opcodes are given in the 'Traffic Flow Measurement: Architecture' document [RTFM-ARC]."
  },
  "flowRuleSetInfoTable": {
    "name": "flowRuleSetInfoTable",
    "oid": "1.3.6.1.2.1.40.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "An array of information about the RuleSets held in the meter. Any manager may configure a new RuleSet for the meter by creating a row in this table with status active(1), and setting values for all the objects in its rules. At this stage the new RuleSet is available but not 'running', i.e. it is not being used by the meter to produce entries in the flow table. To actually 'run' a RuleSet a manager must create a row in the flowManagerInfoTable, set it's flowManagerStatus to active(1), and set either its CurrentRuleSet or StandbyRuleSet to point to the RuleSet to be run. Once a RuleSet is running a manager may not change any of the objects within the RuleSet itself. Any attempt to do so should result in a notWritable(17) SNMP error-status for such objects. A manager may stop a RuleSet running by removing all references to it in the flowManagerInfoTable (i.e. by setting CurrentRuleSet and StandbyRuleSet values to 0). This provides a way to stop RuleSets left running if a manager fails. For example, when a manager is started, it could search the meter's flowManager table and stop all RuleSets having a specified value of flowRuleInfoOwner. To prevent a manager from interfering with variables belonging to another manager, the meter should use MIB views [RFC2575] so as to limit each manager's access to the meter's variables, effectively dividing the single meter into several virtual meters, one for each independent manager."
  },
  "flowRuleSetInfoEntry": {
    "name": "flowRuleSetInfoEntry",
    "oid": "1.3.6.1.2.1.40.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleInfoIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Information about a particular RuleSet."
  },
  "flowRuleInfoIndex": {
    "name": "flowRuleInfoIndex",
    "oid": "1.3.6.1.2.1.40.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "An index which selects an entry in the flowRuleSetInfoTable. Each such entry contains control information for a particular RuleSet which the meter may run."
  },
  "flowRuleInfoSize": {
    "name": "flowRuleInfoSize",
    "oid": "1.3.6.1.2.1.40.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Number of rules in this RuleSet. Setting this variable will cause the meter to allocate space for these rules."
  },
  "flowRuleInfoOwner": {
    "name": "flowRuleInfoOwner",
    "oid": "1.3.6.1.2.1.40.1.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UTF8OwnerString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Identifies the manager which 'owns' this RuleSet. A manager must set this variable when creating a row in this table."
  },
  "flowRuleInfoTimeStamp": {
    "name": "flowRuleInfoTimeStamp",
    "oid": "1.3.6.1.2.1.40.1.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Time this row's associated RuleSet was last changed."
  },
  "flowRuleInfoStatus": {
    "name": "flowRuleInfoStatus",
    "oid": "1.3.6.1.2.1.40.1.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status of this flowRuleSetInfoEntry. If this value is not active(1) the meter must not attempt to use the row's associated RuleSet. Once its value has been set to active(1) a manager may not change any of the other variables in the row, nor the contents of the associated RuleSet. Any attempt to do so should result in a notWritable(17) SNMP error-status for such variables or objects. To download a RuleSet, a manger could: - Locate an open slot in the RuleSetInfoTable. - Create a RuleSetInfoEntry by setting the status for this open slot to createAndWait(5). - Set flowRuleInfoSize and flowRuleInfoName as required. - Download the rules into the row's rule table. - Set flowRuleInfoStatus to active(1). The RuleSet would then be ready to run. The manager is not allowed to change the value of flowRuleInfoStatus from active(1) if the associated RuleSet is being referenced by any of the entries in the flowManagerInfoTable. Setting RuleInfoStatus to destroy(6) destroys the associated RuleSet together with any flow data collected by it."
  },
  "flowRuleInfoName": {
    "name": "flowRuleInfoName",
    "oid": "1.3.6.1.2.1.40.1.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 127
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "An alphanumeric identifier used by managers and readers to identify a RuleSet. For example, a manager wishing to run a RuleSet named WWW-FLOWS could search the flowRuleSetInfoTable to see whether the WWW-FLOWS RuleSet is already available on the meter. Note that references to RuleSets in the flowManagerInfoTable use indexes for their flowRuleSetInfoTable entries. These may be different each time the RuleSet is loaded into a meter."
  },
  "flowRuleInfoRulesReady": {
    "name": "flowRuleInfoRulesReady",
    "oid": "1.3.6.1.2.1.40.1.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "deprecated",
    "description": "Indicates whether the rules for this row's associated RuleSet are ready for use. The meter will refuse to 'run' the RuleSet unless this variable has been set to true(1). While RulesReady is false(2), the manager may modify the RuleSet, for example by downloading rules into it."
  },
  "flowRuleInfoFlowRecords": {
    "name": "flowRuleInfoFlowRecords",
    "oid": "1.3.6.1.2.1.40.1.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of entries in the flow table for this RuleSet. These may be current (waiting for collection by one or more meter readers) or idle (waiting for the meter to recover their memory)."
  },
  "flowInterfaceTable": {
    "name": "flowInterfaceTable",
    "oid": "1.3.6.1.2.1.40.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "An array of information specific to each meter interface."
  },
  "flowInterfaceEntry": {
    "name": "flowInterfaceEntry",
    "oid": "1.3.6.1.2.1.40.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IF-MIB",
        "object": "ifIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Information about a particular interface."
  },
  "flowInterfaceSampleRate": {
    "name": "flowInterfaceSampleRate",
    "oid": "1.3.6.1.2.1.40.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The parameter N for statistical counting on this interface. Set to N to count 1/Nth of the packets appearing at this interface. A sampling rate of 1 counts all packets. A sampling rate of 0 results in the interface being ignored by the meter. A meter should choose its own algorithm to introduce variance into the sampling so that exactly every Nth packet is counted. The IPPM Working Group's RFC 'Framework for IP Performance Metrics' [IPPM-FRM] explains why this should be done, and sets out an algorithm for doing it."
  },
  "flowInterfaceLostPackets": {
    "name": "flowInterfaceLostPackets",
    "oid": "1.3.6.1.2.1.40.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of packets the meter has lost for this interface. Such losses may occur because the meter has been unable to keep up with the traffic volume."
  },
  "flowReaderInfoTable": {
    "name": "flowReaderInfoTable",
    "oid": "1.3.6.1.2.1.40.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "An array of information about meter readers which have registered their intent to collect flow data from this meter."
  },
  "flowReaderInfoEntry": {
    "name": "flowReaderInfoEntry",
    "oid": "1.3.6.1.2.1.40.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowReaderIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Information about a particular meter reader."
  },
  "flowReaderIndex": {
    "name": "flowReaderIndex",
    "oid": "1.3.6.1.2.1.40.1.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "An index which selects an entry in the flowReaderInfoTable."
  },
  "flowReaderTimeout": {
    "name": "flowReaderTimeout",
    "oid": "1.3.6.1.2.1.40.1.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Specifies the maximum time (in seconds) between flow data collections for this meter reader. If this time elapses without a collection, the meter should assume that this meter reader has stopped collecting, and delete this row from the table. A value of zero indicates that this row should not be timed out."
  },
  "flowReaderOwner": {
    "name": "flowReaderOwner",
    "oid": "1.3.6.1.2.1.40.1.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UTF8OwnerString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Identifies the meter reader which created this row."
  },
  "flowReaderLastTime": {
    "name": "flowReaderLastTime",
    "oid": "1.3.6.1.2.1.40.1.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Time this meter reader began its most recent data collection. This variable should be written by a meter reader as its first step in reading flow data. The meter will set this LastTime value to its current Uptime, and set its PreviousTime value (below) to the old LastTime. This allows the meter to recover flows which have been inactive since PreviousTime, for these have been collected at least once. If the meter reader fails to write flowLastReadTime, collection may still proceed but the meter may not be able to recover inactive flows until the flowReaderTimeout has been reached for this entry."
  },
  "flowReaderPreviousTime": {
    "name": "flowReaderPreviousTime",
    "oid": "1.3.6.1.2.1.40.1.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Time this meter reader began the collection before last."
  },
  "flowReaderStatus": {
    "name": "flowReaderStatus",
    "oid": "1.3.6.1.2.1.40.1.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status of this FlowReaderInfoEntry. A value of active(1) implies that the associated reader should be collecting data from the meter. Once this variable has been set to active(1) a manager may only change this row's flowReaderLastTime and flowReaderTimeout variables."
  },
  "flowReaderRuleSet": {
    "name": "flowReaderRuleSet",
    "oid": "1.3.6.1.2.1.40.1.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "An index to the array of RuleSets. Specifies a set of rules of interest to this meter reader. The reader will attempt to collect any data generated by the meter for this RuleSet, and the meter will not recover the memory of any of the RuleSet's flows until this collection has taken place. Note that a reader may have entries in this table for several RuleSets."
  },
  "flowManagerInfoTable": {
    "name": "flowManagerInfoTable",
    "oid": "1.3.6.1.2.1.40.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "An array of information about managers which have registered their intent to run RuleSets on this meter."
  },
  "flowManagerInfoEntry": {
    "name": "flowManagerInfoEntry",
    "oid": "1.3.6.1.2.1.40.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Information about a particular meter 'task.' By creating an entry in this table and activating it, a manager requests that the meter 'run' the indicated RuleSet. The entry also specifies a HighWaterMark and a StandbyRuleSet. If the meter's flow table usage exceeds this task's HighWaterMark the meter will stop running the task's CurrentRuleSet and switch to its StandbyRuleSet. If the value of the task's StandbyRuleSet is 0 when its HighWaterMark is exceeded, the meter simply stops running the task's CurrentRuleSet. By careful selection of HighWaterMarks for the various tasks a manager can ensure that the most critical RuleSets are the last to stop running as the number of flows increases. When a manager has determined that the demand for flow table space has abated, it may cause the task to switch back to its CurrentRuleSet by setting its flowManagerRunningStandby variable to false(2)."
  },
  "flowManagerIndex": {
    "name": "flowManagerIndex",
    "oid": "1.3.6.1.2.1.40.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "An index which selects an entry in the flowManagerInfoTable."
  },
  "flowManagerCurrentRuleSet": {
    "name": "flowManagerCurrentRuleSet",
    "oid": "1.3.6.1.2.1.40.1.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Index to the array of RuleSets. Specifies which set of rules is the 'current' one for this task. The meter will be 'running' the current RuleSet if this row's flowManagerRunningStandby value is false(2). When the manager sets this variable the meter will stop using the task's old current RuleSet and start using the new one. Specifying RuleSet 0 (the empty set) stops flow measurement for this task."
  },
  "flowManagerStandbyRuleSet": {
    "name": "flowManagerStandbyRuleSet",
    "oid": "1.3.6.1.2.1.40.1.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Index to the array of RuleSets. After reaching HighWaterMark (see below) the manager will switch to using the task's StandbyRuleSet in place of its CurrentRuleSet. For this to be effective the designated StandbyRuleSet should have a coarser reporting granularity then the CurrentRuleSet. The manager may also need to decrease the meter reading interval so that the meter can recover flows measured by this task's CurrentRuleSet."
  },
  "flowManagerHighWaterMark": {
    "name": "flowManagerHighWaterMark",
    "oid": "1.3.6.1.2.1.40.1.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "A value expressed as a percentage, interpreted by the meter as an indication of how full the flow table should be before it should switch to the standby RuleSet (if one has been specified) for this task. Values of 0% or 100% disable the checking represented by this variable."
  },
  "flowManagerCounterWrap": {
    "name": "flowManagerCounterWrap",
    "oid": "1.3.6.1.2.1.40.1.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "wrap": 1,
          "scale": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "wrap",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "deprecated",
    "description": "Specifies whether PDU and octet counters should wrap when they reach the top of their range (normal behaviour for Counter64 objects), or whether their scale factors should be used instead. The combination of counter and scale factor allows counts to be returned as non-negative binary floating point numbers, with 64-bit mantissas and 8-bit exponents."
  },
  "flowManagerOwner": {
    "name": "flowManagerOwner",
    "oid": "1.3.6.1.2.1.40.1.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "UTF8OwnerString",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Identifies the manager which created this row."
  },
  "flowManagerTimeStamp": {
    "name": "flowManagerTimeStamp",
    "oid": "1.3.6.1.2.1.40.1.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Time this row was last changed by its manager."
  },
  "flowManagerStatus": {
    "name": "flowManagerStatus",
    "oid": "1.3.6.1.2.1.40.1.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "The status of this row in the flowManagerInfoTable. A value of active(1) implies that this task may be activated, by setting its CurrentRuleSet and StandbyRuleSet variables. Its HighWaterMark and RunningStandby variables may also be changed."
  },
  "flowManagerRunningStandby": {
    "name": "flowManagerRunningStandby",
    "oid": "1.3.6.1.2.1.40.1.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "default": {
      "default": {
        "value": "false",
        "format": "enum"
      }
    },
    "maxaccess": "read-create",
    "status": "current",
    "description": "Set to true(1) by the meter to indicate that it has switched to runnning this task's StandbyRuleSet in place of its CurrentRuleSet. To switch back to the CurrentRuleSet, the manager may simply set this variable to false(2)."
  },
  "flowFloodMark": {
    "name": "flowFloodMark",
    "oid": "1.3.6.1.2.1.40.1.5",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 95,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A value expressed as a percentage, interpreted by the meter as an indication of how full the flow table should be before it should take some action to avoid running out of resources to handle new flows, as discussed in section 4.6 (Handling Increasing Traffic Levels) of the RTFM Architecture RFC [RTFM-ARC]. Values of 0% or 100% disable the checking represented by this variable."
  },
  "flowInactivityTimeout": {
    "name": "flowInactivityTimeout",
    "oid": "1.3.6.1.2.1.40.1.6",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "default": {
      "default": {
        "value": 600,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The time in seconds since the last packet seen, after which a flow becomes 'idle.' Note that although a flow may be idle, it will not be discarded (and its memory recovered) until after its data has been collected by all the meter readers registered for its RuleSet."
  },
  "flowActiveFlows": {
    "name": "flowActiveFlows",
    "oid": "1.3.6.1.2.1.40.1.7",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of flows which are currently in use."
  },
  "flowMaxFlows": {
    "name": "flowMaxFlows",
    "oid": "1.3.6.1.2.1.40.1.8",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The maximum number of flows allowed in the meter's flow table. At present this is determined when the meter is first started up."
  },
  "flowFloodMode": {
    "name": "flowFloodMode",
    "oid": "1.3.6.1.2.1.40.1.9",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Indicates that the meter has passed its FloodMark and is not running in its normal mode. When the manager notices this it should take action to remedy the problem which caused the flooding. It should then monitor flowActiveFlows so as to determine when the flood has receded. At that point the manager may set flowFloodMode to false(2) to resume normal operation."
  },
  "flowDataTable": {
    "name": "flowDataTable",
    "oid": "1.3.6.1.2.1.40.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The list of all flows being measured."
  },
  "flowDataEntry": {
    "name": "flowDataEntry",
    "oid": "1.3.6.1.2.1.40.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataRuleSet",
        "implied": 0
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataTimeMark",
        "implied": 0
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "The flow data record for a particular flow."
  },
  "flowDataIndex": {
    "name": "flowDataIndex",
    "oid": "1.3.6.1.2.1.40.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Value of this flow data record's index within the meter's flow table."
  },
  "flowDataTimeMark": {
    "name": "flowDataTimeMark",
    "oid": "1.3.6.1.2.1.40.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeFilter",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A TimeFilter for this entry. Allows GetNext and GetBulk to find flow table rows which have changed since a specified value of the meter's Uptime."
  },
  "flowDataStatus": {
    "name": "flowDataStatus",
    "oid": "1.3.6.1.2.1.40.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "inactive": 1,
          "current": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "Status of this flow data record."
  },
  "flowDataSourceInterface": {
    "name": "flowDataSourceInterface",
    "oid": "1.3.6.1.2.1.40.2.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Index of the interface associated with the source address for this flow. It's value is one of those contained in the ifIndex field of the meter's interfaces table."
  },
  "flowDataSourceAdjacentType": {
    "name": "flowDataSourceAdjacentType",
    "oid": "1.3.6.1.2.1.40.2.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AdjacentType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Adjacent address type of the source for this flow. If metering is being performed at the network level, AdjacentType will indicate the medium for the interface on which the flow was observed and AdjacentAddress will be the MAC address for that interface. This is the usual case. If traffic is being metered inside a tunnel, AdjacentType will be the peer type of the host at the end of the tunnel and AdjacentAddress will be the peer address for that host."
  },
  "flowDataSourceAdjacentAddress": {
    "name": "flowDataSourceAdjacentAddress",
    "oid": "1.3.6.1.2.1.40.2.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AdjacentAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Address of the adjacent device on the path for the source for this flow."
  },
  "flowDataSourceAdjacentMask": {
    "name": "flowDataSourceAdjacentMask",
    "oid": "1.3.6.1.2.1.40.2.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AdjacentAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "1-bits in this mask indicate which bits must match when comparing the adjacent source address for this flow."
  },
  "flowDataSourcePeerType": {
    "name": "flowDataSourcePeerType",
    "oid": "1.3.6.1.2.1.40.2.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PeerType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Peer address type of the source for this flow."
  },
  "flowDataSourcePeerAddress": {
    "name": "flowDataSourcePeerAddress",
    "oid": "1.3.6.1.2.1.40.2.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PeerAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Address of the peer device for the source of this flow."
  },
  "flowDataSourcePeerMask": {
    "name": "flowDataSourcePeerMask",
    "oid": "1.3.6.1.2.1.40.2.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PeerAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "1-bits in this mask indicate which bits must match when comparing the source peer address for this flow."
  },
  "flowDataSourceTransType": {
    "name": "flowDataSourceTransType",
    "oid": "1.3.6.1.2.1.40.2.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TransportType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Transport address type of the source for this flow. The value of this attribute will depend on the peer address type."
  },
  "flowDataSourceTransAddress": {
    "name": "flowDataSourceTransAddress",
    "oid": "1.3.6.1.2.1.40.2.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TransportAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Transport address for the source of this flow."
  },
  "flowDataSourceTransMask": {
    "name": "flowDataSourceTransMask",
    "oid": "1.3.6.1.2.1.40.2.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TransportAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "1-bits in this mask indicate which bits must match when comparing the transport source address for this flow."
  },
  "flowDataDestInterface": {
    "name": "flowDataDestInterface",
    "oid": "1.3.6.1.2.1.40.2.1.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Index of the interface associated with the dest address for this flow. This value is one of the values contained in the ifIndex field of the interfaces table."
  },
  "flowDataDestAdjacentType": {
    "name": "flowDataDestAdjacentType",
    "oid": "1.3.6.1.2.1.40.2.1.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AdjacentType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Adjacent address type of the destination for this flow."
  },
  "flowDataDestAdjacentAddress": {
    "name": "flowDataDestAdjacentAddress",
    "oid": "1.3.6.1.2.1.40.2.1.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AdjacentAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Address of the adjacent device on the path for the destination for this flow."
  },
  "flowDataDestAdjacentMask": {
    "name": "flowDataDestAdjacentMask",
    "oid": "1.3.6.1.2.1.40.2.1.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "AdjacentAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "1-bits in this mask indicate which bits must match when comparing the adjacent destination address for this flow."
  },
  "flowDataDestPeerType": {
    "name": "flowDataDestPeerType",
    "oid": "1.3.6.1.2.1.40.2.1.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PeerType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Peer address type of the destination for this flow."
  },
  "flowDataDestPeerAddress": {
    "name": "flowDataDestPeerAddress",
    "oid": "1.3.6.1.2.1.40.2.1.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PeerAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Address of the peer device for the destination of this flow."
  },
  "flowDataDestPeerMask": {
    "name": "flowDataDestPeerMask",
    "oid": "1.3.6.1.2.1.40.2.1.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "PeerAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "1-bits in this mask indicate which bits must match when comparing the destination peer type for this flow."
  },
  "flowDataDestTransType": {
    "name": "flowDataDestTransType",
    "oid": "1.3.6.1.2.1.40.2.1.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TransportType",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Transport address type of the destination for this flow. The value of this attribute will depend on the peer address type."
  },
  "flowDataDestTransAddress": {
    "name": "flowDataDestTransAddress",
    "oid": "1.3.6.1.2.1.40.2.1.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TransportAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Transport address for the destination of this flow."
  },
  "flowDataDestTransMask": {
    "name": "flowDataDestTransMask",
    "oid": "1.3.6.1.2.1.40.2.1.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TransportAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "1-bits in this mask indicate which bits must match when comparing the transport destination address for this flow."
  },
  "flowDataPDUScale": {
    "name": "flowDataPDUScale",
    "oid": "1.3.6.1.2.1.40.2.1.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The scale factor applied to this particular flow. Indicates the number of bits the PDU counter values should be moved left to obtain the actual values."
  },
  "flowDataOctetScale": {
    "name": "flowDataOctetScale",
    "oid": "1.3.6.1.2.1.40.2.1.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The scale factor applied to this particular flow. Indicates the number of bits the octet counter values should be moved left to obtain the actual values."
  },
  "flowDataRuleSet": {
    "name": "flowDataRuleSet",
    "oid": "1.3.6.1.2.1.40.2.1.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The RuleSet number of the RuleSet which created this flow. Allows a manager to use GetNext or GetBulk requests to find flows belonging to a particular RuleSet."
  },
  "flowDataToOctets": {
    "name": "flowDataToOctets",
    "oid": "1.3.6.1.2.1.40.2.1.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter64",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The count of octets flowing from source to destination for this flow."
  },
  "flowDataToPDUs": {
    "name": "flowDataToPDUs",
    "oid": "1.3.6.1.2.1.40.2.1.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter64",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The count of packets flowing from source to destination for this flow."
  },
  "flowDataFromOctets": {
    "name": "flowDataFromOctets",
    "oid": "1.3.6.1.2.1.40.2.1.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter64",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The count of octets flowing from destination to source for this flow."
  },
  "flowDataFromPDUs": {
    "name": "flowDataFromPDUs",
    "oid": "1.3.6.1.2.1.40.2.1.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter64",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The count of packets flowing from destination to source for this flow."
  },
  "flowDataFirstTime": {
    "name": "flowDataFirstTime",
    "oid": "1.3.6.1.2.1.40.2.1.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The time at which this flow was first entered in the table"
  },
  "flowDataLastActiveTime": {
    "name": "flowDataLastActiveTime",
    "oid": "1.3.6.1.2.1.40.2.1.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeStamp",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The last time this flow had activity, i.e. the time of arrival of the most recent PDU belonging to this flow."
  },
  "flowDataSourceSubscriberID": {
    "name": "flowDataSourceSubscriberID",
    "oid": "1.3.6.1.2.1.40.2.1.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Subscriber ID associated with the source address for this flow. A Subscriber ID is an unspecified text string, used to ascribe traffic flows to individual users. At this time the means by which a Subscriber ID may be associated with a flow is unspecified."
  },
  "flowDataDestSubscriberID": {
    "name": "flowDataDestSubscriberID",
    "oid": "1.3.6.1.2.1.40.2.1.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 20
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Subscriber ID associated with the destination address for this flow. A Subscriber ID is an unspecified text string, used to ascribe traffic flows to individual users. At this time the means by which a Subscriber ID may be associated with a flow is unspecified."
  },
  "flowDataSessionID": {
    "name": "flowDataSessionID",
    "oid": "1.3.6.1.2.1.40.2.1.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 10
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Session ID for this flow. Such an ID might be allocated by a network access server to distinguish a series of sessions between the same pair of addresses, which would otherwise appear to be parts of the same accounting flow."
  },
  "flowDataSourceClass": {
    "name": "flowDataSourceClass",
    "oid": "1.3.6.1.2.1.40.2.1.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Source class for this flow. Determined by the rules, set by a PushRule action when this flow was entered in the table."
  },
  "flowDataDestClass": {
    "name": "flowDataDestClass",
    "oid": "1.3.6.1.2.1.40.2.1.1.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Destination class for this flow. Determined by the rules, set by a PushRule action when this flow was entered in the table."
  },
  "flowDataClass": {
    "name": "flowDataClass",
    "oid": "1.3.6.1.2.1.40.2.1.1.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Class for this flow. Determined by the rules, set by a PushRule action when this flow was entered in the table."
  },
  "flowDataSourceKind": {
    "name": "flowDataSourceKind",
    "oid": "1.3.6.1.2.1.40.2.1.1.39",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Source kind for this flow. Determined by the rules, set by a PushRule action when this flow was entered in the table."
  },
  "flowDataDestKind": {
    "name": "flowDataDestKind",
    "oid": "1.3.6.1.2.1.40.2.1.1.40",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Destination kind for this flow. Determined by the rules, set by a PushRule action when this flow was entered in the table."
  },
  "flowDataKind": {
    "name": "flowDataKind",
    "oid": "1.3.6.1.2.1.40.2.1.1.41",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Class for this flow. Determined by the rules, set by a PushRule action when this flow was entered in the table."
  },
  "flowColumnActivityTable": {
    "name": "flowColumnActivityTable",
    "oid": "1.3.6.1.2.1.40.2.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "deprecated",
    "description": "Index into the Flow Table. Allows a meter reader to retrieve a list containing the flow table indexes of flows which were last active at or after a given time, together with the values of a specified attribute for each such flow."
  },
  "flowColumnActivityEntry": {
    "name": "flowColumnActivityEntry",
    "oid": "1.3.6.1.2.1.40.2.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowColumnActivityAttribute",
        "implied": 0
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowColumnActivityTime",
        "implied": 0
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowColumnActivityIndex",
        "implied": 0
      }
    ],
    "status": "deprecated",
    "description": "The Column Activity Entry for a particular attribute, activity time and flow."
  },
  "flowColumnActivityAttribute": {
    "name": "flowColumnActivityAttribute",
    "oid": "1.3.6.1.2.1.40.2.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "FlowAttributeNumber",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "Specifies the attribute for which values are required from active flows."
  },
  "flowColumnActivityTime": {
    "name": "flowColumnActivityTime",
    "oid": "1.3.6.1.2.1.40.2.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeFilter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "This variable is a copy of flowDataLastActiveTime in the flow data record identified by the flowColumnActivityIndex value of this flowColumnActivityTable entry."
  },
  "flowColumnActivityIndex": {
    "name": "flowColumnActivityIndex",
    "oid": "1.3.6.1.2.1.40.2.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "Index of a flow table entry which was active at or after a specified flowColumnActivityTime."
  },
  "flowColumnActivityData": {
    "name": "flowColumnActivityData",
    "oid": "1.3.6.1.2.1.40.2.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 3,
            "max": 1000
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "deprecated",
    "description": "Collection of attribute data for flows active after flowColumnActivityTime. Within the OCTET STRING is a sequence of { flow index, attribute value } pairs, one for each active flow. The end of the sequence is marked by a flow index value of 0, indicating that there are no more rows in this column. The format of objects inside flowColumnFlowData is as follows. All numbers are unsigned. Numbers and strings appear with their high-order bytes leading. Numbers are fixed size, as specified by their SYNTAX in the flow table (above), i.e. one octet for flowAddressType and small constants, and four octets for Counter and TimeStamp. Strings are variable-length, with the length given in a single leading octet. The following is an attempt at an ASN.1 definition of flowColumnActivityData: flowColumnActivityData ::= SEQUENCE flowRowItemEntry flowRowItemEntry ::= SEQUENCE { flowRowNumber Integer32 (1..65535), -- 0 indicates the end of this column flowDataValue flowDataType -- Choice depends on attribute } flowDataType ::= CHOICE { flowByteValue Integer32 (1..255), flowShortValue Integer32 (1..65535), flowLongValue Integer32, flowStringValue OCTET STRING -- Length (n) in first byte, -- n+1 bytes total length, trailing zeroes truncated }"
  },
  "flowDataPackageTable": {
    "name": "flowDataPackageTable",
    "oid": "1.3.6.1.2.1.40.2.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Index into the Flow Table. Allows a meter reader to retrieve a sequence containing the values of a specified set of attributes for a flow which came from a specified RuleSet and which was last active at or after a given time."
  },
  "flowDataPackageEntry": {
    "name": "flowDataPackageEntry",
    "oid": "1.3.6.1.2.1.40.2.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowPackageSelector",
        "implied": 0
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowPackageRuleSet",
        "implied": 0
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowPackageTime",
        "implied": 0
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowPackageIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "The data package containing selected variables from active rows in the flow table."
  },
  "flowPackageSelector": {
    "name": "flowPackageSelector",
    "oid": "1.3.6.1.2.1.40.2.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Specifies the attributes for which values are required from an active flow. These are encoded as a sequence of octets each containing a FlowAttribute number, preceded by an octet giving the length of the sequence (not including the length octet). For a flowPackageSelector to be valid, it must contain at least one attribute."
  },
  "flowPackageRuleSet": {
    "name": "flowPackageRuleSet",
    "oid": "1.3.6.1.2.1.40.2.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Specifies the index (in the flowRuleSetInfoTable) of the rule set which produced the required flow."
  },
  "flowPackageTime": {
    "name": "flowPackageTime",
    "oid": "1.3.6.1.2.1.40.2.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeFilter",
      "class": "type"
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "This variable is a copy of flowDataLastActiveTime in the flow data record identified by the flowPackageIndex value of this flowPackageTable entry."
  },
  "flowPackageIndex": {
    "name": "flowPackageIndex",
    "oid": "1.3.6.1.2.1.40.2.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Index of a flow table entry which was active at or after a specified flowPackageTime."
  },
  "flowPackageData": {
    "name": "flowPackageData",
    "oid": "1.3.6.1.2.1.40.2.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A collection of attribute values for a single flow, as specified by this row's indexes. The attribute values are contained within a BER-encoded sequence [ASN-1, ASN-BER], in the order they appear in their flowPackageSelector. For example, to retrieve a flowPackage containing values for attributes 11, 18 and 29, for a flow in RuleSet 7, with flow index 3447, one would GET the package whose Object Identifier (OID) is flowPackageData . 3.11.18.29 . 7. 0 . 3447 To get a package for the next such flow which had been active since time 12345 one would GETNEXT the package whose Object Identifier (OID) is flowPackageData . 3.11.18.29 . 7. 12345 . 3447"
  },
  "flowRuleTable": {
    "name": "flowRuleTable",
    "oid": "1.3.6.1.2.1.40.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Contains all the RuleSets which may be used by the meter."
  },
  "flowRuleEntry": {
    "name": "flowRuleEntry",
    "oid": "1.3.6.1.2.1.40.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleSet",
        "implied": 0
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleIndex",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "The rule record itself."
  },
  "flowRuleSet": {
    "name": "flowRuleSet",
    "oid": "1.3.6.1.2.1.40.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "Selects a RuleSet from the array of RuleSets."
  },
  "flowRuleIndex": {
    "name": "flowRuleIndex",
    "oid": "1.3.6.1.2.1.40.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 2147483647
          }
        ]
      }
    },
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "The index into the Rule table. N.B: These values will normally be consecutive, given the fall-through semantics of processing the table."
  },
  "flowRuleSelector": {
    "name": "flowRuleSelector",
    "oid": "1.3.6.1.2.1.40.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RuleAttributeNumber",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Indicates the attribute to be matched. null(0) is a special case; null rules always succeed. matchingStoD(50) is set by the meter's Packet Matching Engine. Its value is true(1) if the PME is attempting to match the packet with its addresses in Source-to-Destination order (i.e. as they appear in the packet), and false(2) otherwise. Details of how packets are matched are given in the 'Traffic Flow Measurement: Architecture' document [RTFM-ARC]. v1(51), v2(52), v3(53), v4(54) and v5(55) select meter variables, each of which can hold the name (i.e. selector value) of an address attribute. When one of these is used as a selector, its value specifies the attribute to be tested. Variable values are set by an Assign action."
  },
  "flowRuleMask": {
    "name": "flowRuleMask",
    "oid": "1.3.6.1.2.1.40.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RuleAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The initial mask used to compute the desired value. If the mask is zero the rule's test will always succeed."
  },
  "flowRuleMatchedValue": {
    "name": "flowRuleMatchedValue",
    "oid": "1.3.6.1.2.1.40.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RuleAddress",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The resulting value to be matched for equality. Specifically, if the attribute chosen by the flowRuleSelector logically ANDed with the mask specified by the flowRuleMask equals the value specified in the flowRuleMatchedValue, then continue processing the table entry based on the action specified by the flowRuleAction entry. Otherwise, proceed to the next entry in the rule table."
  },
  "flowRuleAction": {
    "name": "flowRuleAction",
    "oid": "1.3.6.1.2.1.40.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "ActionNumber",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The action to be taken if this rule's test succeeds, or if the meter's 'test' flag is off. Actions are opcodes for the meter's Packet Matching Engine; details are given in the 'Traffic Flow Measurement: Architecture' document [RTFM-ARC]."
  },
  "flowRuleParameter": {
    "name": "flowRuleParameter",
    "oid": "1.3.6.1.2.1.40.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "A parameter value providing extra information for this rule's action. Most of the actions use the parameter value to specify which rule to execute after this rule's test has failed; details are given in the 'Traffic Flow Measurement: Architecture' document [RTFM-ARC]."
  },
  "flowMIBCompliances": {
    "name": "flowMIBCompliances",
    "oid": "1.3.6.1.2.1.40.4.1",
    "class": "objectidentity"
  },
  "flowMIBGroups": {
    "name": "flowMIBGroups",
    "oid": "1.3.6.1.2.1.40.4.2",
    "class": "objectidentity"
  },
  "flowControlGroup": {
    "name": "flowControlGroup",
    "oid": "1.3.6.1.2.1.40.4.2.1",
    "class": "objectgroup",
    "objects": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleInfoSize"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleInfoOwner"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleInfoTimeStamp"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleInfoStatus"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleInfoName"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleInfoRulesReady"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleInfoFlowRecords"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowInterfaceSampleRate"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowInterfaceLostPackets"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowReaderTimeout"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowReaderOwner"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowReaderLastTime"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowReaderPreviousTime"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowReaderStatus"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowReaderRuleSet"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerCurrentRuleSet"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerStandbyRuleSet"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerHighWaterMark"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerCounterWrap"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerOwner"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerTimeStamp"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerStatus"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerRunningStandby"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowFloodMark"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowInactivityTimeout"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowActiveFlows"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowMaxFlows"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowFloodMode"
      }
    ],
    "status": "deprecated",
    "description": "The control group defines objects which are used to control an accounting meter."
  },
  "flowDataTableGroup": {
    "name": "flowDataTableGroup",
    "oid": "1.3.6.1.2.1.40.4.2.2",
    "class": "objectgroup",
    "objects": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataStatus"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataSourceInterface"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataSourceAdjacentType"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataSourceAdjacentAddress"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataSourceAdjacentMask"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataSourcePeerType"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataSourcePeerAddress"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataSourcePeerMask"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataSourceTransType"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataSourceTransAddress"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataSourceTransMask"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataDestInterface"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataDestAdjacentType"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataDestAdjacentAddress"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataDestAdjacentMask"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataDestPeerType"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataDestPeerAddress"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataDestPeerMask"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataDestTransType"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataDestTransAddress"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataDestTransMask"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataToOctets"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataToPDUs"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataFromOctets"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataFromPDUs"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataFirstTime"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataLastActiveTime"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataSourceClass"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataDestClass"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataClass"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataSourceKind"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataDestKind"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataKind"
      }
    ],
    "status": "deprecated",
    "description": "The flow table group defines objects which provide the structure for the flow table, including the creation time and activity time indexes into it. In addition it defines objects which provide a base set of flow attributes for the adjacent, peer and transport layers, together with a flow's counters and times. Finally it defines a flow's class and kind attributes, which are set by rule actions."
  },
  "flowDataScaleGroup": {
    "name": "flowDataScaleGroup",
    "oid": "1.3.6.1.2.1.40.4.2.3",
    "class": "objectgroup",
    "objects": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerCounterWrap"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataPDUScale"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataOctetScale"
      }
    ],
    "status": "deprecated",
    "description": "The flow scale group defines objects which specify scale factors for counters."
  },
  "flowDataSubscriberGroup": {
    "name": "flowDataSubscriberGroup",
    "oid": "1.3.6.1.2.1.40.4.2.4",
    "class": "objectgroup",
    "objects": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataSourceSubscriberID"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataDestSubscriberID"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataSessionID"
      }
    ],
    "status": "current",
    "description": "The flow subscriber group defines objects which may be used to identify the end point(s) of a flow."
  },
  "flowDataColumnTableGroup": {
    "name": "flowDataColumnTableGroup",
    "oid": "1.3.6.1.2.1.40.4.2.5",
    "class": "objectgroup",
    "objects": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowColumnActivityAttribute"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowColumnActivityIndex"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowColumnActivityTime"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowColumnActivityData"
      }
    ],
    "status": "deprecated",
    "description": "The flow column table group defines objects which can be used to collect part of a column of attribute values from the flow table."
  },
  "flowDataPackageGroup": {
    "name": "flowDataPackageGroup",
    "oid": "1.3.6.1.2.1.40.4.2.6",
    "class": "objectgroup",
    "objects": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowPackageData"
      }
    ],
    "status": "current",
    "description": "The data package group defines objects which can be used to collect a specified set of attribute values from a row of the flow table."
  },
  "flowRuleTableGroup": {
    "name": "flowRuleTableGroup",
    "oid": "1.3.6.1.2.1.40.4.2.7",
    "class": "objectgroup",
    "objects": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleSelector"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleMask"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleMatchedValue"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleAction"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleParameter"
      }
    ],
    "status": "current",
    "description": "The rule table group defines objects which hold the set(s) of rules specifying which traffic flows are to be accounted for."
  },
  "flowDataScaleGroup2": {
    "name": "flowDataScaleGroup2",
    "oid": "1.3.6.1.2.1.40.4.2.8",
    "class": "objectgroup",
    "objects": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataPDUScale"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowDataOctetScale"
      }
    ],
    "status": "current",
    "description": "The flow scale group defines objects which specify scale factors for counters. This group replaces the earlier version of flowDataScaleGroup above (now deprecated)."
  },
  "flowControlGroup2": {
    "name": "flowControlGroup2",
    "oid": "1.3.6.1.2.1.40.4.2.9",
    "class": "objectgroup",
    "objects": [
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleInfoSize"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleInfoOwner"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleInfoTimeStamp"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleInfoStatus"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleInfoName"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowRuleInfoFlowRecords"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowInterfaceSampleRate"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowInterfaceLostPackets"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowReaderTimeout"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowReaderOwner"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowReaderLastTime"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowReaderPreviousTime"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowReaderStatus"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowReaderRuleSet"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerCurrentRuleSet"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerStandbyRuleSet"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerHighWaterMark"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerOwner"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerTimeStamp"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerStatus"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowManagerRunningStandby"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowFloodMark"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowInactivityTimeout"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowActiveFlows"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowMaxFlows"
      },
      {
        "module": "FLOW-METER-MIB",
        "object": "flowFloodMode"
      }
    ],
    "status": "current",
    "description": "The control group defines objects which are used to control an accounting meter. It replaces the earlier version of flowControlGroup above (now deprecated)."
  },
  "flowMIBCompliance": {
    "name": "flowMIBCompliance",
    "oid": "1.3.6.1.2.1.40.4.1.1",
    "class": "modulecompliance",
    "modulecompliance": [
      {
        "object": "flowControlGroup2",
        "module": "FLOW-METER-MIB"
      },
      {
        "object": "flowDataTableGroup",
        "module": "FLOW-METER-MIB"
      },
      {
        "object": "flowDataPackageGroup",
        "module": "FLOW-METER-MIB"
      },
      {
        "object": "flowRuleTableGroup",
        "module": "FLOW-METER-MIB"
      }
    ],
    "status": "current",
    "description": "The compliance statement for a Traffic Flow Meter."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/FLOW-METER-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 15:48:33 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "FLOW-METER-MIB"
  }
}