{
  "imports": {
    "class": "imports",
    "INTEL-GEN-MIB": [
      "mib2ext"
    ],
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "TimeTicks",
      "Counter32",
      "iso",
      "Unsigned32",
      "MibIdentifier",
      "OBJECT-TYPE",
      "OBJECT-IDENTITY",
      "Integer32",
      "IpAddress",
      "Bits",
      "NOTIFICATION-TYPE",
      "MODULE-IDENTITY",
      "Counter64",
      "Gauge32"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TEXTUAL-CONVENTION"
    ]
  },
  "diag": {
    "name": "diag",
    "oid": "1.3.6.1.4.1.343.6.4",
    "class": "objectidentity"
  },
  "diagList": {
    "name": "diagList",
    "oid": "1.3.6.1.4.1.343.6.4.1",
    "class": "objectidentity"
  },
  "diagTest": {
    "name": "diagTest",
    "oid": "1.3.6.1.4.1.343.6.4.2",
    "class": "objectidentity"
  },
  "diagAutodetect": {
    "name": "diagAutodetect",
    "oid": "1.3.6.1.4.1.343.6.4.3",
    "class": "objectidentity"
  },
  "diagListNumberOfEntries": {
    "name": "diagListNumberOfEntries",
    "oid": "1.3.6.1.4.1.343.6.4.1.1",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Number of entries in Diagnostics Table (Set value to 0 to delete all entries)"
  },
  "diagListNumberOfErrorEntries": {
    "name": "diagListNumberOfErrorEntries",
    "oid": "1.3.6.1.4.1.343.6.4.1.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number of errors in Diagnostics Table"
  },
  "diagListLastUpdateTime": {
    "name": "diagListLastUpdateTime",
    "oid": "1.3.6.1.4.1.343.6.4.1.3",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Time of last insertion in Diagnostics Table in timeticks since boot (reinserting an existing entry is not considered an update)."
  },
  "diagListTable": {
    "name": "diagListTable",
    "oid": "1.3.6.1.4.1.343.6.4.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Diagnostics Table"
  },
  "diagListEntry": {
    "name": "diagListEntry",
    "oid": "1.3.6.1.4.1.343.6.4.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "INTEL-DIAG-MIB",
        "object": "diagListIndex",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "diagListIndex": {
    "name": "diagListIndex",
    "oid": "1.3.6.1.4.1.343.6.4.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Position in table."
  },
  "diagListLevel": {
    "name": "diagListLevel",
    "oid": "1.3.6.1.4.1.343.6.4.1.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "warning": 32,
          "error": 64,
          "fatalError": 96
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Error level."
  },
  "diagListCode": {
    "name": "diagListCode",
    "oid": "1.3.6.1.4.1.343.6.4.1.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Number that uniquely identifies a specific situation. Set code to zero to delete the entry."
  },
  "diagListIfindex": {
    "name": "diagListIfindex",
    "oid": "1.3.6.1.4.1.343.6.4.1.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Interface index."
  },
  "diagListTimeStamp": {
    "name": "diagListTimeStamp",
    "oid": "1.3.6.1.4.1.343.6.4.1.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TimeTicks",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Time of (re)insertion in timeticks since boot."
  },
  "diagListDescription": {
    "name": "diagListDescription",
    "oid": "1.3.6.1.4.1.343.6.4.1.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 240,
            "max": 240
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Description of the problem."
  },
  "diagListAdvice": {
    "name": "diagListAdvice",
    "oid": "1.3.6.1.4.1.343.6.4.1.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 240,
            "max": 240
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Advice"
  },
  "diagListAutoFixAvailable": {
    "name": "diagListAutoFixAvailable",
    "oid": "1.3.6.1.4.1.343.6.4.1.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "no": 1,
          "yes": 2
        }
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "no: This entry cannot be automatically fixed. yes: This entry can be automatically fixed."
  },
  "diagListAutoFixState": {
    "name": "diagListAutoFixState",
    "oid": "1.3.6.1.4.1.343.6.4.1.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 16,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "When reading 0: State = idle(1), autoFixInProgress(3) When writing 0: State = startAutoFix(2) 1: Action 2-5: diagListCode (bigendian) 6-9: diagListIfindex (bigendian) diagListCode and diagListIfindex are used to verify that the correct entry is being fixed."
  },
  "diagTestTable": {
    "name": "diagTestTable",
    "oid": "1.3.6.1.4.1.343.6.4.2.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory"
  },
  "diagTestEntry": {
    "name": "diagTestEntry",
    "oid": "1.3.6.1.4.1.343.6.4.2.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "INTEL-DIAG-MIB",
        "object": "diagTestType",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "diagTestType": {
    "name": "diagTestType",
    "oid": "1.3.6.1.4.1.343.6.4.2.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Test type"
  },
  "diagTestDescription": {
    "name": "diagTestDescription",
    "oid": "1.3.6.1.4.1.343.6.4.2.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 40,
            "max": 40
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Test description"
  },
  "diagTestStatus": {
    "name": "diagTestStatus",
    "oid": "1.3.6.1.4.1.343.6.4.2.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ready": 1,
          "test": 2,
          "testing": 3
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Test status. Begin a test by setting the value to test(2) and then wait for it to go from testing(3) to ready(1)."
  },
  "diagAutodetectTable": {
    "name": "diagAutodetectTable",
    "oid": "1.3.6.1.4.1.343.6.4.3.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "Autodetection table"
  },
  "diagAutodetectEntry": {
    "name": "diagAutodetectEntry",
    "oid": "1.3.6.1.4.1.343.6.4.3.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "INTEL-DIAG-MIB",
        "object": "diagAutodetectType",
        "implied": 0
      },
      {
        "module": "INTEL-DIAG-MIB",
        "object": "diagAutodetectIndex1",
        "implied": 0
      },
      {
        "module": "INTEL-DIAG-MIB",
        "object": "diagAutodetectIndex2",
        "implied": 0
      },
      {
        "module": "INTEL-DIAG-MIB",
        "object": "diagAutodetectIndex3",
        "implied": 0
      }
    ],
    "status": "mandatory"
  },
  "diagAutodetectType": {
    "name": "diagAutodetectType",
    "oid": "1.3.6.1.4.1.343.6.4.3.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "A number that identifies the group of parameters being autodetected. Res2 is the concatenation of Res2a and Res2b. Possible value are 1: IPX net numbers and frame types on LAN. index = 1.plugno.0.0 result is in res2 with 5 bytes for each frame type in the form 0: protocol (1=TYPE, 2=802.2, 4=SNAP and 5=8023) 1-4: network number So the length of res2 is 5, 10, 15 or 20 depending on the number of frame types on the LAN. The best candidate is the first. 2: ISDN Switch connection. index = 2.plugno.0.0 result is in res1 res1 is 1: connection to switch res1 is 0: no connection to switch plugno=plug number 3: ISDN Local Number Test 4: ISDN Remote Number Test 5: ISDN Switch Type Test 6: ISDN SPID Detect 7: ISDN SPID Test 8: Frame Relay DLCMI and DLCI detection"
  },
  "diagAutodetectIndex1": {
    "name": "diagAutodetectIndex1",
    "oid": "1.3.6.1.4.1.343.6.4.3.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "First index for autodetect situation (typically interface index)."
  },
  "diagAutodetectIndex2": {
    "name": "diagAutodetectIndex2",
    "oid": "1.3.6.1.4.1.343.6.4.3.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Second index for autodetect situation."
  },
  "diagAutodetectIndex3": {
    "name": "diagAutodetectIndex3",
    "oid": "1.3.6.1.4.1.343.6.4.3.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Third index for autodetect situation."
  },
  "diagAutodetectState": {
    "name": "diagAutodetectState",
    "oid": "1.3.6.1.4.1.343.6.4.3.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ready": 1,
          "startTest": 2,
          "stopTest": 3,
          "testSucceeded": 4,
          "testFailed": 5,
          "testInProgress": 6
        }
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Autodetect state ready(1): Test has not been perfomed. startTest(2): Start test stopTest(3): Stop test (only supported for some types) testSucceeded(4): Test succeeded and the result can be found in Res1 and Res2. testFailed(5): Test failed testInProgress(6):Test is in progress. diagAutodetectDuration contains the approximate duration in seconds Typical state sequences after setting state to startTest(1) ->testInProgress(5)->testFailed(4) ->testInProgress(5)->testSucceeded(3)"
  },
  "diagAutodetectDuration": {
    "name": "diagAutodetectDuration",
    "oid": "1.3.6.1.4.1.343.6.4.3.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Average duration for autodetection (s). 0 means unknown."
  },
  "diagAutodetectRes1": {
    "name": "diagAutodetectRes1",
    "oid": "1.3.6.1.4.1.343.6.4.3.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Result of autodetection. Res1 contains valid information if the value of diagAutodetectState is testSucceeded(3)."
  },
  "diagAutodetectRes2a": {
    "name": "diagAutodetectRes2a",
    "oid": "1.3.6.1.4.1.343.6.4.3.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 255,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Result of autodetection. Res2 contains valid information if the value of diagAutodetectState is testSucceeded(3)."
  },
  "diagAutodetectRes2b": {
    "name": "diagAutodetectRes2b",
    "oid": "1.3.6.1.4.1.343.6.4.3.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 255,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "If the result takes up more than 255 bytes of information the rest is put in this Res2b."
  },
  "diagAutodetectPreInput": {
    "name": "diagAutodetectPreInput",
    "oid": "1.3.6.1.4.1.343.6.4.3.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 255,
            "max": 255
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "Input for test which is set immediately before settting diagAutodetectState to startTest(1)."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/INTEL-DIAG-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 16:30:13 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "INTEL-DIAG-MIB"
  }
}