{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "NOTIFICATION-GROUP",
      "MODULE-COMPLIANCE"
    ],
    "SNMPv2-SMI": [
      "OBJECT-TYPE",
      "Bits",
      "OBJECT-IDENTITY",
      "IpAddress",
      "MibIdentifier",
      "iso",
      "Counter64",
      "Gauge32",
      "TimeTicks",
      "experimental",
      "Unsigned32",
      "NOTIFICATION-TYPE",
      "Integer32",
      "Counter32",
      "MODULE-IDENTITY"
    ],
    "SNMPv2-TC": [
      "DisplayString",
      "TruthValue",
      "TEXTUAL-CONVENTION"
    ]
  },
  "pm": {
    "name": "pm",
    "oid": "1.3.6.1.3.117",
    "class": "moduleidentity",
    "revisions": [
      {
        "revision": "2001-11-01 00:00",
        "description": "Initial version of this MIB."
      }
    ],
    "lastupdated": "200111010000Z",
    "organization": "IETF IP over IB Working Group Email: ipoverib@ietf.org",
    "contactinfo": "Carl Yang/Edwin Tsang Postal: TopSpin Communications, Inc. 2460 Embarcadero Way Palo Alto, CA 94303 United States Tel: +1 650 251 1036 Email: carl@topspin.com",
    "description": "The managed objects for an InfiniBand Performance Management."
  },
  "pmMIBObjects": {
    "name": "pmMIBObjects",
    "oid": "1.3.6.1.3.117.1",
    "class": "objectidentity"
  },
  "pmClassPortInfoTable": {
    "name": "pmClassPortInfoTable",
    "oid": "1.3.6.1.3.117.1.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table used to list all ClassPortInfoEntry."
  },
  "pmClassPortInfoEntry": {
    "name": "pmClassPortInfoEntry",
    "oid": "1.3.6.1.3.117.1.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IB-PM-MIB",
        "object": "pmClassPortInfoGUID",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Table entry for pmClassPortInfoTable."
  },
  "pmClassPortInfoGUID": {
    "name": "pmClassPortInfoGUID",
    "oid": "1.3.6.1.3.117.1.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The GUID of this node."
  },
  "pmClassPortInfoAllPortSelect": {
    "name": "pmClassPortInfoAllPortSelect",
    "oid": "1.3.6.1.3.117.1.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "TruthValue",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "If reported as TRUE, indicates that all attributes containing the PortSelect component support setting it to 0xFF to gather data from all ports at once. If reported as FALSE, using 0xFF in PortSelect results in undefined behavior."
  },
  "pmPortSampleCntrlTable": {
    "name": "pmPortSampleCntrlTable",
    "oid": "1.3.6.1.3.117.1.2",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table used to list all PortSampleCntrlEntry."
  },
  "pmPortSampleCntrlEntry": {
    "name": "pmPortSampleCntrlEntry",
    "oid": "1.3.6.1.3.117.1.2.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IB-PM-MIB",
        "object": "pmPortSampleCntrlGUID",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Table entry for pmPortSampleCntrlTable ."
  },
  "pmPortSampleCntrlGUID": {
    "name": "pmPortSampleCntrlGUID",
    "oid": "1.3.6.1.3.117.1.2.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The GUID of this node."
  },
  "pmPortSampleCntrlOpCode": {
    "name": "pmPortSampleCntrlOpCode",
    "oid": "1.3.6.1.3.117.1.2.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Used to select a specific packet OpCode (as found in BTH) when sampling optional quantities that are op code specific. If OpCode is 0xFF, all OpCodes are sampled as one otherwise only one OpCode can be sampled at a time, although multiple quantities can be sampled for the same OpCode. The possible OpCode are defined as follows: 0x0 : RC SEND First, 0x1 : RC SEND Middle, 0x2 : RC SEND Last, 0x3 : RC SEND Last with Immediate, 0x4 : RC SEND Only, 0x5 : RC SEND Only with Immediate, 0x6 : RC RDMA Write First, 0x7 : RC RDMA Write Middle, 0x8 : RC RDMA Write Last, 0x9 : RC RDMA Write Last with Immediate, 0xA : RC RDMA Write Only, 0xB : RC RDMA Write Only with Immediate, 0xC : RC RDMA Read Request, 0xD : RC RDMA Read Response First, 0xE : RC RDMA Read Response Middle, 0xF : RC RDMA Read Response Last, 0x10 : RC RDMA Read Response Only, 0x11 : RC RDMA Acknowledge, 0x12 : RC RDMA Atomic Acknowledge, 0x13 : RC RDMA CmpSwap, 0x14 : RC RDMA FetchAdd, 0x15 - 0x1F : RC Reserved, 0x20 : UC Send First, 0x21 : UC Send Middle, 0x22 : UC Send Last, 0x23 : UC Send Last with Immediate, 0x24 : UC Send Only, 0x25 : UC Send Only with Immediate, 0x26 : UC RDMA Write First, 0x27 : UC RDMA Write Middle, 0x28 : UC RDMA Write Last, 0x29 : UC RDMA Write Last with Immediate, 0x2A : UC RDMA Write Only, 0x2B : UC RDMA Write Only with Immediate, 0x2C - 0x3F : UC Reserved 0x40 : RD Send First, 0x41 : RD Send Middle, 0x42 : RD Send Last, 0x43 : RD Send Last with Immediate, 0x44 : RD Send Only, 0x45 : RD Send Only with Immediate, 0x46 : RD RDMA Write First, 0x47 : RD RDMA Write Middle, 0x48 : RD RDMA Write Last, 0x49 : RD RDMA Write Last with Immediate, 0x4A : RD RDMA Write Only, 0x4B : RD RDMA Write Only with Immediate, 0x4C : RD RDMA Read Request, 0x4D : RD RDMA Read Response First, 0x4E : RD RDMA Read Response Middle, 0x4F : RD RDMA Read Response Last, 0x50 : RD RDMA Read Only, 0x51 : RD Acknowledge, 0x52 : RD Atomic Acknowledge, 0x53 : RD CmpSwap, 0x54 : RD FetchAdd, 0x55 - 0x5F : RD Reserved, 0x64 : UD Send Only, 0x65 : UD Send Only with Immediate, 0x66 - 0x7F : UD Reserved, 0x80 - 0xBF : Reserved, 0xC0 - 0xEF : Manufacture Specific Opcodes."
  },
  "pmPortSampleCntrlPortSelect": {
    "name": "pmPortSampleCntrlPortSelect",
    "oid": "1.3.6.1.3.117.1.2.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects which port will be sampled. For an HCA or TCA, PortSelect refers to an end port. For a switch, PortSelect refers to a switch port. If the value does not correspond to an actual port, the sample timers run normally but the resulting sample counter values are zero. If gathering data from all ports at once is supported (see pmAllPortSelect), setting PortSelect to 0xFF will cause samples from all ports to be accumulated."
  },
  "pmPortSampleCntrlTick": {
    "name": "pmPortSampleCntrlTick",
    "oid": "1.3.6.1.3.117.1.2.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Indicates the nodes sampling clock interval as a multiple of 10x the link transfer period. For a 2.5G transfer link, the transfer period is 400 picoseconds. The encoding is: 0x00 = 10 x link transfer period (4 nanoseconds for 2.5G link) 0x01 = 20 x link transfer period 0x02 = 30 x link transfer period ... 0xFF = 2,560 x link transfer period To maximize utility of the performance attributes, implementers are encouraged to choose the smallest practical tick size."
  },
  "pmPortSampleCntrlCounterWidth": {
    "name": "pmPortSampleCntrlCounterWidth",
    "oid": "1.3.6.1.3.117.1.2.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "width16Bits": 0,
          "width20Bits": 1,
          "width24Bits": 2,
          "width28Bits": 3,
          "width32Bits": 4
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Indicates the actual width in bits of the following components: - SampleStart - SampleInterval - PortSamplesResult:Counter0 to 14 Counters smaller than 32 bits shall be implemented as the least significant bits of the corresponding 32-bit attribute component, with the unimplemented upper bits of the component returning zeros for Get and ignored for Set."
  },
  "pmPortSampleCntrlCounter0Mask": {
    "name": "pmPortSampleCntrlCounter0Mask",
    "oid": "1.3.6.1.3.117.1.2.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter0. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlCounter1Mask": {
    "name": "pmPortSampleCntrlCounter1Mask",
    "oid": "1.3.6.1.3.117.1.2.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter1. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlCounter2Mask": {
    "name": "pmPortSampleCntrlCounter2Mask",
    "oid": "1.3.6.1.3.117.1.2.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter2. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlCounter3Mask": {
    "name": "pmPortSampleCntrlCounter3Mask",
    "oid": "1.3.6.1.3.117.1.2.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter3. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlCounter4Mask": {
    "name": "pmPortSampleCntrlCounter4Mask",
    "oid": "1.3.6.1.3.117.1.2.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter4. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlCounter5Mask": {
    "name": "pmPortSampleCntrlCounter5Mask",
    "oid": "1.3.6.1.3.117.1.2.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter5. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlCounter6Mask": {
    "name": "pmPortSampleCntrlCounter6Mask",
    "oid": "1.3.6.1.3.117.1.2.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter6. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlCounter7Mask": {
    "name": "pmPortSampleCntrlCounter7Mask",
    "oid": "1.3.6.1.3.117.1.2.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter7. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlCounter8Mask": {
    "name": "pmPortSampleCntrlCounter8Mask",
    "oid": "1.3.6.1.3.117.1.2.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter8. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlCounter9Mask": {
    "name": "pmPortSampleCntrlCounter9Mask",
    "oid": "1.3.6.1.3.117.1.2.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter9. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlCounter10Mask": {
    "name": "pmPortSampleCntrlCounter10Mask",
    "oid": "1.3.6.1.3.117.1.2.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter10. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlCounter11Mask": {
    "name": "pmPortSampleCntrlCounter11Mask",
    "oid": "1.3.6.1.3.117.1.2.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter11. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlCounter12Mask": {
    "name": "pmPortSampleCntrlCounter12Mask",
    "oid": "1.3.6.1.3.117.1.2.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter12. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlCounter13Mask": {
    "name": "pmPortSampleCntrlCounter13Mask",
    "oid": "1.3.6.1.3.117.1.2.1.19",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter13. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlCounter14Mask": {
    "name": "pmPortSampleCntrlCounter14Mask",
    "oid": "1.3.6.1.3.117.1.2.1.20",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask that determines the capabilities of PortSamplesResult:Counter14. - Bit 0 = supports all mandatory quantities; shall be 1 - Bit 1 = supports all optional quantities - Bit 2 = supports vendor-defined quantities"
  },
  "pmPortSampleCntrlSampleMechanisms": {
    "name": "pmPortSampleCntrlSampleMechanisms",
    "oid": "1.3.6.1.3.117.1.2.1.21",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The number of independent sample mechanisms implemented, i.e., sets of PortSamplesControl and PortSamplesResult, minus one: 0 = one sample mechanism is available 1 = two sample mechanism is available ... 255 = 256 sample mechanisms are available. Providing multiple sampling mechanisms is optional. N sample mechanisms would permit N independent samples to be run simultaneously. A special value of Attribute Modifier (0xFFFFFFFF) allows all sample mechanisms to be started with a single Set, sampling the same quantities during the same interval on N ports."
  },
  "pmPortSampleCntrlSampleStatus": {
    "name": "pmPortSampleCntrlSampleStatus",
    "oid": "1.3.6.1.3.117.1.2.1.22",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "samplingComplete": 0,
          "sampleStartTimerRunning": 1,
          "samplingUnderway": 2,
          "reserved": 3
        }
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Indicates the status of sampling."
  },
  "pmPortSampleCntrlOptionMask": {
    "name": "pmPortSampleCntrlOptionMask",
    "oid": "1.3.6.1.3.117.1.2.1.23",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bit mask indicating which optional InfiniBand performance quantities are implemented. Its value is described as follows: Bit 0 (LSB) = reserved ahall be zero Bit 1 = PortXmitQueue[n] Bit 2 = PortXmitDataVL[n] Bit 3 = PortRcvDataVL[n] Bit 4 = PortXmitPktVL[n] Bit 5 = PortRcvPktVL[n] Bit 6 = PortRcvErrorDetails:PortLocalPhysicalErrors Bit 7 = PortRcvErrorDetails:PortMalformedPacketErrors Bit 8 = PortRcvErrorDetails:PortBufferOverrunErrors Bit 9 = PortRcvErrorDetails:PortDLIDMappingErrors Bit 10 = PortRcvErrorDetails:PortVLMappingErrors Bit 11 = PortRcvErrorDetails:PortLoopingErrors Bit 12 = PortXmitDiscardDetails:PortInactiveDiscards Bit 13 = PortXmitDiscardDetails:PortNeighborMTUDiscards Bit 14 = PortXmitDiscardDetails:PortSwwLifetimeLimitDiscards Bit 15 = PortXmitDiscardDetails:PortSwHOQLifetimeLimitDiscards Bit 16 = PortOpRcvCounters:PortOpRcvPkts Bit 17 = PortOpRcvCounters:PortOpRcvData Bit 18 = PortFlowCtlCounters:PortXmitFlowPkts Bit 19 = PortFlowCtlCounters:PortRcvFlowPkts Bit 20 = PortVLOpPackets:PortVLOpPackets[n] Bit 21 = PortVLOpData:PortVLOpData[n] Bit 22 = PortVLXmitFlowCtlUpdateErrors:PortVLXmitFlowCtlUpdateErrors[n ] Bit 23 = PortVLXmitWaitCounters:PortVLXmitWait[n] Bit 24-47 = Reserved shall be zero Bit 48 = SwPortVLUnkDests:PortVLUnkDests[n] Bit 49-63 = Reserved shall be zero"
  },
  "pmPortSampleCntrlVendorMask": {
    "name": "pmPortSampleCntrlVendorMask",
    "oid": "1.3.6.1.3.117.1.2.1.24",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "A bitmask indicating which vendor-specific counters are implemented. Must be zero if the node does not support any vendor-specific counters. Otherwise use is vendor defined."
  },
  "pmPortSampleCntrlSampleStart": {
    "name": "pmPortSampleCntrlSampleStart",
    "oid": "1.3.6.1.3.117.1.2.1.25",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Determines when the sampling interval starts. When Set, this value is loaded into a timer and the following events occur: - Sample Status is set to 1 - Counters in PortSamplesResult are set to zero - The timer begins decrementing once per tick. When the timer reaches zero, timing stops and the following evetns occur: i. The PortXmitQueue quantities if selected are latched ii. PortSamplesResult counters are started iii. SampleStatus is set to 2 iv. The SampleInterval timer is started The SampleStart timer allows a performance application to randomize the sample start time and insure decoupling from node or network events. Values used will typically be 10s of milliseconds. It is the fine granularity of this interval with respect to the link rate that makes decoupling possible."
  },
  "pmPortSampleCntrlSampleInterval": {
    "name": "pmPortSampleCntrlSampleInterval",
    "oid": "1.3.6.1.3.117.1.2.1.26",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Detemine the length of the sampling interval. When Set, this value is loaded into a timer. When the SampleStart counter reaches zero, this timer begins decrementing once per tick. When it reaches zero, timing stops and the following event occur: - PortSample2 counters are stopped and the resulting values made available. - SampleStatus is set to zero."
  },
  "pmPortSampleCntrlTag": {
    "name": "pmPortSampleCntrlTag",
    "oid": "1.3.6.1.3.117.1.2.1.27",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Used by a performance application when it does a PerformanceSet(PortSamplesControl) to uniquely identify its sample run in case of a collision with another performance application. When an application wishes to start a sample run, it should pick a random Tag value and do a PerformanceSet(PortSamplesControl). If the returned value of Tag does not match the selected value, another application is using the sampling mechanism. In this case the first application must wait for a suitable time and retry its sample."
  },
  "pmPortSampleCntrlCounterSelect0": {
    "name": "pmPortSampleCntrlCounterSelect0",
    "oid": "1.3.6.1.3.117.1.2.1.28",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter0. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter0 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleCntrlCounterSelect1": {
    "name": "pmPortSampleCntrlCounterSelect1",
    "oid": "1.3.6.1.3.117.1.2.1.29",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter1. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter1 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleCntrlCounterSelect2": {
    "name": "pmPortSampleCntrlCounterSelect2",
    "oid": "1.3.6.1.3.117.1.2.1.30",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter2. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter2 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleCntrlCounterSelect3": {
    "name": "pmPortSampleCntrlCounterSelect3",
    "oid": "1.3.6.1.3.117.1.2.1.31",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter3. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter3 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleCntrlCounterSelect4": {
    "name": "pmPortSampleCntrlCounterSelect4",
    "oid": "1.3.6.1.3.117.1.2.1.32",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter4. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter4 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleCntrlCounterSelect5": {
    "name": "pmPortSampleCntrlCounterSelect5",
    "oid": "1.3.6.1.3.117.1.2.1.33",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter5. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter5 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleCntrlCounterSelect6": {
    "name": "pmPortSampleCntrlCounterSelect6",
    "oid": "1.3.6.1.3.117.1.2.1.34",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter6. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter6 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleCntrlCounterSelect7": {
    "name": "pmPortSampleCntrlCounterSelect7",
    "oid": "1.3.6.1.3.117.1.2.1.35",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter7. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter7 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleCntrlCounterSelect8": {
    "name": "pmPortSampleCntrlCounterSelect8",
    "oid": "1.3.6.1.3.117.1.2.1.36",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter8. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter8 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleCntrlCounterSelect9": {
    "name": "pmPortSampleCntrlCounterSelect9",
    "oid": "1.3.6.1.3.117.1.2.1.37",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter9. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter9 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleCntrlCounterSelect10": {
    "name": "pmPortSampleCntrlCounterSelect10",
    "oid": "1.3.6.1.3.117.1.2.1.38",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter10. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter10 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleCntrlCounterSelect11": {
    "name": "pmPortSampleCntrlCounterSelect11",
    "oid": "1.3.6.1.3.117.1.2.1.39",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter11. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter11 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleCntrlCounterSelect12": {
    "name": "pmPortSampleCntrlCounterSelect12",
    "oid": "1.3.6.1.3.117.1.2.1.40",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter12. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter12 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleCntrlCounterSelect13": {
    "name": "pmPortSampleCntrlCounterSelect13",
    "oid": "1.3.6.1.3.117.1.2.1.41",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter13. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter13 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleCntrlCounterSelect14": {
    "name": "pmPortSampleCntrlCounterSelect14",
    "oid": "1.3.6.1.3.117.1.2.1.42",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects quantity to be sampled by PortSamplesResult:Counter14. IF an unimplemented quantity is selected, a Get to PortSamplesResult:Counter14 returns zeroes. The possible values are specified in Table 187 of IBTA v1.0.a specifications."
  },
  "pmPortSampleResultTable": {
    "name": "pmPortSampleResultTable",
    "oid": "1.3.6.1.3.117.1.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table used to list all pmPortSampleResultEntry."
  },
  "pmPortSampleResultEntry": {
    "name": "pmPortSampleResultEntry",
    "oid": "1.3.6.1.3.117.1.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IB-PM-MIB",
        "object": "pmPortSampleResultGUID",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Table entry for pmPortSampleResultTable ."
  },
  "pmPortSampleResultGUID": {
    "name": "pmPortSampleResultGUID",
    "oid": "1.3.6.1.3.117.1.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The GUID of this node."
  },
  "pmPortSampleResultTag": {
    "name": "pmPortSampleResultTag",
    "oid": "1.3.6.1.3.117.1.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 4,
            "max": 4
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Read-only copy of PortSamplesControl:Tag. The Tag mechanism provides a means for performance applications to detect collisions when using the sampling mechanism."
  },
  "pmResultSampleStatus": {
    "name": "pmResultSampleStatus",
    "oid": "1.3.6.1.3.117.1.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Read-only copy of PortSamplesControl:SampleStatus. Provided here to minimize traffic whil application is polling for sample completion."
  },
  "pmPortSampleResultCounter0": {
    "name": "pmPortSampleResultCounter0",
    "oid": "1.3.6.1.3.117.1.3.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect0. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortSampleResultCounter1": {
    "name": "pmPortSampleResultCounter1",
    "oid": "1.3.6.1.3.117.1.3.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect1. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortSampleResultCounter2": {
    "name": "pmPortSampleResultCounter2",
    "oid": "1.3.6.1.3.117.1.3.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect2. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortSampleResultCounter3": {
    "name": "pmPortSampleResultCounter3",
    "oid": "1.3.6.1.3.117.1.3.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect3. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortSampleResultCounter4": {
    "name": "pmPortSampleResultCounter4",
    "oid": "1.3.6.1.3.117.1.3.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect4. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortSampleResultCounter5": {
    "name": "pmPortSampleResultCounter5",
    "oid": "1.3.6.1.3.117.1.3.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect5. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortSampleResultCounter6": {
    "name": "pmPortSampleResultCounter6",
    "oid": "1.3.6.1.3.117.1.3.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect6. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortSampleResultCounter7": {
    "name": "pmPortSampleResultCounter7",
    "oid": "1.3.6.1.3.117.1.3.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect7. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortSampleResultCounter8": {
    "name": "pmPortSampleResultCounter8",
    "oid": "1.3.6.1.3.117.1.3.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect8. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortSampleResultCounter9": {
    "name": "pmPortSampleResultCounter9",
    "oid": "1.3.6.1.3.117.1.3.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect9. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortSampleResultCounter10": {
    "name": "pmPortSampleResultCounter10",
    "oid": "1.3.6.1.3.117.1.3.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect10. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortSampleResultCounter11": {
    "name": "pmPortSampleResultCounter11",
    "oid": "1.3.6.1.3.117.1.3.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect11. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortSampleResultCounter12": {
    "name": "pmPortSampleResultCounter12",
    "oid": "1.3.6.1.3.117.1.3.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect12. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortSampleResultCounter13": {
    "name": "pmPortSampleResultCounter13",
    "oid": "1.3.6.1.3.117.1.3.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect13. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortSampleResultCounter14": {
    "name": "pmPortSampleResultCounter14",
    "oid": "1.3.6.1.3.117.1.3.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Counter32",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "Mandatory counter. When PortSamplesControl:SampleStatus is zero, contains the result of sampling the quantity selected by PortSamplesControl:CounterSelect14. Undefined when PortSamplesControl:SampleStatus is non-zero. The actual number of valid (least significant) bits in the counter is defined by PortSamplesControl:CounterWidth."
  },
  "pmPortCountersTable": {
    "name": "pmPortCountersTable",
    "oid": "1.3.6.1.3.117.1.4",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "current",
    "description": "A table used to list all pmPortCountersEntry."
  },
  "pmPortCountersoEntry": {
    "name": "pmPortCountersoEntry",
    "oid": "1.3.6.1.3.117.1.4.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "IB-PM-MIB",
        "object": "pmPortCountersGUID",
        "implied": 0
      }
    ],
    "status": "current",
    "description": "Table entry for pmPortCountersTable."
  },
  "pmPortCountersGUID": {
    "name": "pmPortCountersGUID",
    "oid": "1.3.6.1.3.117.1.4.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "OCTET STRING",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 8,
            "max": 8
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "current",
    "description": "The GUID of this node."
  },
  "pmPortCountersPortSelect": {
    "name": "pmPortCountersPortSelect",
    "oid": "1.3.6.1.3.117.1.4.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Selects the port for which the data is reported. Selecting a non-existent port results in all zeros. If gathering data from all ports at once is supported, setting pmPortCountersPortSelect to 0xFF will cause data from all ports to be accumulated."
  },
  "pmPortCountersSymbolErrors": {
    "name": "pmPortCountersSymbolErrors",
    "oid": "1.3.6.1.3.117.1.4.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Total number of symbol errors detected on one or more lanes."
  },
  "pmPortCountersLinkErrorRecovery": {
    "name": "pmPortCountersLinkErrorRecovery",
    "oid": "1.3.6.1.3.117.1.4.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Total number of times the port training state machine has successfully completed the link error recovery process."
  },
  "pmPortCountersLinkDown": {
    "name": "pmPortCountersLinkDown",
    "oid": "1.3.6.1.3.117.1.4.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Total number of times the port training state machine has failed the link error recovery process and downed the link."
  },
  "pmPortCountersRcvErrors": {
    "name": "pmPortCountersRcvErrors",
    "oid": "1.3.6.1.3.117.1.4.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Total number of packets containing an error that were received on the port. These errors include: - Local physical errors (ICRC, VCRC, FCCRC, and all physical errors that cause entry into bad) - Malformed data packet errors (Lver, length, VL) - Malformed link packet errors (operand, length, VL) - Packets discarded due to buffer overrun"
  },
  "pmPortCountersRcvRemoteErrors": {
    "name": "pmPortCountersRcvRemoteErrors",
    "oid": "1.3.6.1.3.117.1.4.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Total number of packets marked with the EBP delimiter received on the port."
  },
  "pmPortCountersRcvSwRelayErrors": {
    "name": "pmPortCountersRcvSwRelayErrors",
    "oid": "1.3.6.1.3.117.1.4.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Total number of packets received on the port that were discarded because they could be forwarded by the switch relay. Reasons for this include: - DLID mapping - VL mapping - Looping (output port = input port)."
  },
  "pmPortCountersXmitDiscards": {
    "name": "pmPortCountersXmitDiscards",
    "oid": "1.3.6.1.3.117.1.4.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Total number of outbound packets discarded by the port because the port is down or congested. Reasons for this include: - Output port is in the inactive state - Packet length exceeded neighbor MTU - Switch lifetime limit exceeds - Switch HOQ limit exceeds."
  },
  "pmPortCountersXmitConstraintErrors": {
    "name": "pmPortCountersXmitConstraintErrors",
    "oid": "1.3.6.1.3.117.1.4.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Total number of packets not transmitted from the port for the following reasons: - FilterRawOutbound is true and packet is raw - PatitionEnforcementOutbound is true and packet fails partition key check, IP version check, or transport header version check."
  },
  "pmPortCountersRcvConstraintErrors": {
    "name": "pmPortCountersRcvConstraintErrors",
    "oid": "1.3.6.1.3.117.1.4.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Total number of packets received on the port that are discarded for the following reasons: - FilterRawInbound is true and packet is raw - PartitionEnforcementInbound is true and packet fails partition key check, IP version check, or transport header version check."
  },
  "pmPortCountersLocalLinkIntegrityErrors": {
    "name": "pmPortCountersLocalLinkIntegrityErrors",
    "oid": "1.3.6.1.3.117.1.4.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The number of times that the frequency of packets containing local physical errors exceeded local_phy_errors."
  },
  "pmPortCountersExcessiveBufferOverrun": {
    "name": "pmPortCountersExcessiveBufferOverrun",
    "oid": "1.3.6.1.3.117.1.4.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "The number of times that overrun errors consecutive flow control update periods occurred with at least one overrun error in each period."
  },
  "pmPortCountersVL15Dropped": {
    "name": "pmPortCountersVL15Dropped",
    "oid": "1.3.6.1.3.117.1.4.1.14",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Number of incoming VL15 packets dropped due to resource limitations on port selected by PortSelect."
  },
  "pmPortCountersXmitData": {
    "name": "pmPortCountersXmitData",
    "oid": "1.3.6.1.3.117.1.4.1.15",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Optional; shall be zero if not implemented. Total number of data octets, divided by 4, transmitted on all VLs from the port selected by PortSelect. This includes all octets between (and not including) the start of packet delimiter and VCRC. It excludes all link packets. Implementers may choose to count data octets in groups larger than four but are encouraged to choose the smallest group possible. Results are still reported as a multiple of four octets."
  },
  "pmPortCountersRcvData": {
    "name": "pmPortCountersRcvData",
    "oid": "1.3.6.1.3.117.1.4.1.16",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Optional; shall be zero if not implemented. Total number of data octets, divided by 4, received on all VLs from the port selected by PortSelect. This includes all octets between (and not including) the start of packet delimiter and VCRC. It excludes all link packets. Implementers may choose to count data octets in groups larger than four but are encouraged to choose the smallest group possible. Results are still reported as a multiple of four octets."
  },
  "pmPortCountersXmitPkts": {
    "name": "pmPortCountersXmitPkts",
    "oid": "1.3.6.1.3.117.1.4.1.17",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Optional; shall be zero if not implemented. Total number of data packets, excluding link packets, transmitted on all VLs from the port selected by PortSelect."
  },
  "pmPortCountersRcvPkts": {
    "name": "pmPortCountersRcvPkts",
    "oid": "1.3.6.1.3.117.1.4.1.18",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "Integer32",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "current",
    "description": "Optional; shall be zero if not implemented. Total number of data packets, excluding link packets, received on all VLs from the port selected by PortSelect."
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/IB-PM-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 20:06:32 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "IB-PM-MIB"
  }
}