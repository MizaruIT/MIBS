{
  "imports": {
    "class": "imports",
    "SNMPv2-CONF": [
      "MODULE-COMPLIANCE",
      "NOTIFICATION-GROUP"
    ],
    "SNMPv2-SMI": [
      "MibIdentifier",
      "Unsigned32",
      "OBJECT-IDENTITY",
      "OBJECT-TYPE",
      "Counter32",
      "IpAddress",
      "NOTIFICATION-TYPE",
      "Integer32",
      "Bits",
      "iso",
      "enterprises",
      "TimeTicks",
      "Gauge32",
      "Counter64",
      "MODULE-IDENTITY"
    ],
    "SNMPv2-TC": [
      "TEXTUAL-CONVENTION",
      "DisplayString"
    ]
  },
  "RowStatus": {
    "name": "RowStatus",
    "class": "type",
    "type": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "active": 1,
          "notInService": 2,
          "notReady": 3,
          "createAndGo": 4,
          "createAndWait": 5,
          "destroy": 6
        }
      }
    }
  },
  "a3Com": {
    "name": "a3Com",
    "oid": "1.3.6.1.4.1.43",
    "class": "objectidentity"
  },
  "switchingSystemsMibs": {
    "name": "switchingSystemsMibs",
    "oid": "1.3.6.1.4.1.43.29",
    "class": "objectidentity"
  },
  "a3ComSwitchingSystemsMib": {
    "name": "a3ComSwitchingSystemsMib",
    "oid": "1.3.6.1.4.1.43.29.4",
    "class": "objectidentity"
  },
  "a3ComRoutePolicy": {
    "name": "a3ComRoutePolicy",
    "oid": "1.3.6.1.4.1.43.29.4.23",
    "class": "objectidentity"
  },
  "a3ComRoutePolicyTable": {
    "name": "a3ComRoutePolicyTable",
    "oid": "1.3.6.1.4.1.43.29.4.23.1",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table is used to provide routing policy facilities. The implementation allows a list of policies to be set up and matched before a given route is learned or advertised by the router, which is the device being managed."
  },
  "a3ComRoutePolicyEntry": {
    "name": "a3ComRoutePolicyEntry",
    "oid": "1.3.6.1.4.1.43.29.4.23.1.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "A3COM-SWITCHING-SYSTEMS-ROUTEPOLICY-MIB",
        "object": "a3ComRoutePolicyIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry used to define a routing policy. A row in this table is created by setting a3ComRoutePolicyRowStatus to createAndGo(4) or createAndWait(5), indexed by the next available index (a3ComRoutePolicyNextFreeIndex). The only mandatory object in this table is the a3ComRoutePolicyProtocolType. An entry in this table is deleted by setting a3ComRoutePolicyRowStatus to destroy(6), indexed by the id of the entry about to be removed. An example of the indexing of this table is a3ComRoutePolicyType.3"
  },
  "a3ComRoutePolicyIndex": {
    "name": "a3ComRoutePolicyIndex",
    "oid": "1.3.6.1.4.1.43.29.4.23.1.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "Unique identifier of a row in the policy table. The actual number of rows that can be created on any particular device depends on the memory and processing resources available at the time."
  },
  "a3ComRoutePolicyProtocolType": {
    "name": "a3ComRoutePolicyProtocolType",
    "oid": "1.3.6.1.4.1.43.29.4.23.1.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "undefined": 1,
          "ip-rip": 2,
          "ip-ospf": 3,
          "ip-bgp4": 4,
          "ipx-rip": 5,
          "ipx-sap": 6,
          "at-rtmp": 7,
          "at-kip": 8,
          "at-aurp": 9
        }
      }
    },
    "default": {
      "default": {
        "value": "undefined",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This mandatory object defines the protocol in which a policy will be used. Once such protocol family is defined, the agent will use this information to parse the source, route, as well as all other objects that apply. Once a policy entry is successfully made active(1), this object may not be modified. If the protocol chosen is not supported by the agent or is set to undefined(1), an error is returned."
  },
  "a3ComRoutePolicyType": {
    "name": "a3ComRoutePolicyType",
    "oid": "1.3.6.1.4.1.43.29.4.23.1.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "import": 1,
          "export": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "import",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies what type of policy this is. The type import regards to ingress -- where a route advertised externally is learned by the device managed. And the type export regards to egress -- where a route is advertised by the device managed. Note that the type of policy also mandates which fields are to be parsed upon entry activation. This object can be no longer modified once the entry is activated."
  },
  "a3ComRoutePolicyOriginProtocol": {
    "name": "a3ComRoutePolicyOriginProtocol",
    "oid": "1.3.6.1.4.1.43.29.4.23.1.1.4",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 63
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object is only used when a3ComRoutePolicyType is set to export(2). It makes up a mask of protocols, within the protocol suite, that matches the policy entry. If set to zero, the mask will be interpreted as a match, independent of how the route was learned. A value of 1 stands for matches on routes directly attached. A value of 2 stands for matches on routes that were statically defined in the routing table. All other values in the mask carry different meaning, depending on the current value of a3ComRoutePolicyProtocolType. The following tables summarizes such values: ------------------------------------- Any Protocol Family ------------------------------------- 00 | all (route learned by any way) 01 | directly attached route 02 | statically defined route ------------------------------------- ------------------------------------- IP | IPX | APPLETALK ------------------------------------- 04 | rip | rip | rtmp 08 | ospf | sap | kip 16 | bgp4 | unused | aurp 32 | unused | unused | unused ------------------------------------- Table 1: Route policy origin protocol mask The value of this object can be modified at any time. Examples: 1) When exporting from any protocol suite, any route learned in that suite will be advertised if a3ComRoutePolicyOriginProtocol is set to zero and the other preconditions apply. 2) When exporting from any protocol suite, only routes that were learned from static definition or that are directly attached would be advertised if a3ComRoutePolicyOriginProtocol is set to 3 (mask of 1 + 2) and the other preconditions apply. 3) When exporting from ip_rip(2), only routes that were learned from rip or bgp4 advertisements would be given out if a3ComRoutePolicyOriginProtocol is set to 20 (mask of 4 + 16) and the other preconditions apply. 4) If at example 3 we had a3ComRoutePolicyProtocolType set to at_rtmp(7) instead of ip_rip(2), the same value (i.e. 20) would indicate that advertisements under appleTalk rtmp would only include routes learned from rtmp(4) or aurp(16)."
  },
  "a3ComRoutePolicySourceAddress": {
    "name": "a3ComRoutePolicySourceAddress",
    "oid": "1.3.6.1.4.1.43.29.4.23.1.1.5",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 50
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This DisplayString is the network address of the gateway to the route address. Note that when the policy is of the type import(1), this object will correspond to a neighboring router address, and for export(2) policies, this object will most likely correspond to the address of the managed device. The following formats can be used for this object: IP cccc - ipAddress MIB IP nnn.nnn.nnn.nnn - decimal dotted format IPX AABBCCDD:AABBCCDDEEFF - network : node AppleTalk n[...].n[...] - dotted notation Also note that each format described above must be followed according to the protocol family set in the a3ComRoutePolicyProtocolType object. When using the ip family, the agent will be smart enough to understand either one of the two formats listed. Note then that the object a3ComRoutePolicyProtocolType must have been set before this object gets set in order to allow the agent to properly parse its contents. If a3ComRoutePolicySourceAddress is set to empty, which is the default value, the matching process will be independent from the address of the router that is advertising. The value of this object can be modified at any time."
  },
  "a3ComRoutePolicyRouteAddress": {
    "name": "a3ComRoutePolicyRouteAddress",
    "oid": "1.3.6.1.4.1.43.29.4.23.1.1.6",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 50
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This DisplayString is the network address of the route to which this policy applies. Such address will be known when a route advertisement is received by the device being managed. The following formats can be used for this object: IP cccc - ipAddress MIB IP nnn.nnn.nnn.nnn - decimal dotted format IPX AABBCCDD:AABBCCDDEEFF - network : node AppleTalk n[...].n[...] - dotted notation Note that each format described above must be followed according to the protocol family set in the a3ComRoutePolicyProtocolType object. When using the ip family, the agent will be smart enough to understand either one of the two formats listed. When performing an snmp get, the agent will unconditionally return this value using the decimal dotted format if such is an ip address. Note then that the object a3ComRoutePolicyProtocolType must have been set before this object gets set in order to allow the agent to properly parse its contents. If a3ComRoutePolicyRouteAddress is set to empty, which is the default value, the matching process will be independent from the route. The value of this object can be modified at any time."
  },
  "a3ComRoutePolicyRouteMask": {
    "name": "a3ComRoutePolicyRouteMask",
    "oid": "1.3.6.1.4.1.43.29.4.23.1.1.7",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "DisplayString",
      "class": "type",
      "constraints": {
        "size": [
          {
            "min": 0,
            "max": 16
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This DisplayString is the network mask of the route to which this policy applies. The following formats can be used: IP cccc - ipAddress MIB IP nnn.nnn.nnn.nnn - decimal dotted format The agent will be smart enough to understand either one of the two formats listed, based on the size of the argument given. When performing an snmp get, the agent will unconditionally return this value using the decimal dotted format. a3ComRoutePolicyRouteMask will be ignored if the protocol family is not ip or if a3ComRoutePolicyRouteAddress is empty. On the other hand, an error will be returned if an invalid mask is existent upon entry activation. The value of this object can be modified at any time."
  },
  "a3ComRoutePolicyAction": {
    "name": "a3ComRoutePolicyAction",
    "oid": "1.3.6.1.4.1.43.29.4.23.1.1.8",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "accept": 1,
          "reject": 2
        }
      }
    },
    "default": {
      "default": {
        "value": "accept",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object specifies whether the protocol rejects a route that matches the policy or accepts it. a3ComRoutePolicyAction can be modified at any time."
  },
  "a3ComRoutePolicyAdjustMetric": {
    "name": "a3ComRoutePolicyAdjustMetric",
    "oid": "1.3.6.1.4.1.43.29.4.23.1.1.9",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "noop": 1,
          "add": 2,
          "subtract": 3,
          "multiply": 4,
          "divide": 5,
          "module": 6
        }
      }
    },
    "default": {
      "default": {
        "value": "noop",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object defines what type of operation that can be additionally performed at a route metric. Note that this object will be always ignored if a3ComRoutePolicyAction is of the type reject(2). Furthermore, a3ComRoutePolicyAdjustMetric will also be ignored in occasions where a3ComRoutePolicyAction is of the type accept(1) and the object a3ComRoutePolicyMetric is set to zero. a3ComRoutePolicyAdjustMetric can be modified at any time."
  },
  "a3ComRoutePolicyMetric": {
    "name": "a3ComRoutePolicyMetric",
    "oid": "1.3.6.1.4.1.43.29.4.23.1.1.10",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 0,
            "max": 65535
          }
        ]
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object is the value by which an additional adjustment can be performed on a matched route metric. The actual operation performed is defined by a3ComRoutePolicyAdjustMetric. If a3ComRoutePolicyMetric is zero, no metric adjustments are made. If a3ComRoutePolicyAdjustMetric is set to noop(1) and a3ComRoutePolicyMetric is a non-zero value, such value will be unconditionally used as the route metric. Note that the a3ComRoutePolicyMetric is only used when a3ComRoutePolicyAction is set to accept(1). If this object is set with a value outside its scope, which varies depending on a3ComRoutePolicyProtocolType, the lowest or highest value will be used instead and no error will be returned. This object can be modified at any time."
  },
  "a3ComRoutePolicyWeight": {
    "name": "a3ComRoutePolicyWeight",
    "oid": "1.3.6.1.4.1.43.29.4.23.1.1.11",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 16
          }
        ]
      }
    },
    "default": {
      "default": {
        "value": 1,
        "format": "decimal"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object assigns an administrative weight to the policy entry. A policy with a higher value takes precedence over a policy with a lower value. Usage of a3ComRoutePolicyWeight applies when an order of precedence is desired within multiple policies that match a common route. This object can be modified at any time."
  },
  "a3ComRoutePolicyExportType": {
    "name": "a3ComRoutePolicyExportType",
    "oid": "1.3.6.1.4.1.43.29.4.23.1.1.12",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "enumeration": {
          "ip-ospf-type1": 1,
          "ip-ospf-type2": 2,
          "default": 3
        }
      }
    },
    "default": {
      "default": {
        "value": "default",
        "format": "enum"
      }
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "This object describes which type of route advertisement the router will use when a given protocol can export routes in multiple ways. In situations when there is only one way routes can be exported, a3ComRoutePolicyExportType will be ignored. If a3ComRoutePolicyExportType is set to a value not supported by the router or just doesn't match the protocol family being used, the device being managed will automatically use the default advertisement type and no error will be returned."
  },
  "a3ComRoutePolicyRowStatus": {
    "name": "a3ComRoutePolicyRowStatus",
    "oid": "1.3.6.1.4.1.43.29.4.23.1.1.13",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status column for a routing policy. This object can be set to: active(1), createAndGo(4), createAndWait(5), destroy(6) The following values may be read: inactive(2) active(1) A new policy entry in this table is created by setting this object to createAndGo(4) or createAndWait(5), indexed by the next available index (a3ComRoutePolicyNextFreeIndex). An error will be returned when an existing policy entry is set to createAndGo(4) or createAndWait(5), and that is a mechanism to detect racing conditions. Setting this object to active(1) causes the agent to attempt to commit to row based on the contents of the object in the row. If all necessary information is present in the row and the values are acceptable to the agent, the agent will change the status to active(1). If any of the necessary objects are not available or result in error, the agent will reject the request. Once a policy entry is made active(1), most fields can still be modified. Setting this object to destroy(6) will remove the entry."
  },
  "a3ComRoutePolicyNextFreeIndex": {
    "name": "a3ComRoutePolicyNextFreeIndex",
    "oid": "1.3.6.1.4.1.43.29.4.23.2",
    "nodetype": "scalar",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The value of the next available policy entry. This object is automatically increased once a new policy is successfully made active(1). A new policy entry in a3ComRoutePolicyTable is created by setting a3ComRoutePolicyRowStatus to createAndGo(4) or createAndWait(5), indexed by the value of this object."
  },
  "a3ComRoutePolicyIpIfTable": {
    "name": "a3ComRoutePolicyIpIfTable",
    "oid": "1.3.6.1.4.1.43.29.4.23.3",
    "nodetype": "table",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "status": "mandatory",
    "description": "This table is used to provide a list of ip interfaces under a given policy. Thus, the list generated under this table only applies to policies under the ip suite. Furthermore, the current mib specification resorts only two conditions: 1) a3ComRoutePolicyProtocolType set to ip_rip(2) 2) a3ComRoutePolicyProtocolType set to ip_ospf(3), a3ComRoutePolicyType is set to export(2) and the route about to be advertised is from ospf's direct policy. In any condition other than these two, this table will simply be ignored and no errors are returned, even if there are entries defined. In situations where either one of the conditions listed above is true and there are no entries in this table for the policy it is indexed by, any interface will satisfy. In other words, an empty list stands for an unconditional match on the interface, given all other preconditions apply. If one or more entries in this table are present and the policy is of one of the two types listed above, a route will be advertised/learned (or not, depending on a3ComRoutePolicyAction) only through the interfaces listed."
  },
  "a3ComRoutePolicyIpIfEntry": {
    "name": "a3ComRoutePolicyIpIfEntry",
    "oid": "1.3.6.1.4.1.43.29.4.23.3.1",
    "nodetype": "row",
    "class": "objecttype",
    "maxaccess": "not-accessible",
    "indices": [
      {
        "module": "A3COM-SWITCHING-SYSTEMS-ROUTEPOLICY-MIB",
        "object": "a3ComRoutePolicyIpIfIndex",
        "implied": 0
      },
      {
        "module": "A3COM-SWITCHING-SYSTEMS-ROUTEPOLICY-MIB",
        "object": "a3ComRoutePolicyIpIfAddressIndex",
        "implied": 0
      }
    ],
    "status": "mandatory",
    "description": "An entry used to define an ip interface under a policy. A row in this table is created by setting a3ComRoutePolicyIpIfRowStatus with createAndGo(4), indexed by the id of an existing a3ComRoutePolicyEntry and the address of an existing ip interface at the device being managed. An entry in this table is deleted in similar way, except that the value set is destroy(6) instead of createAndGo(4). Entries in this table can be added or removed at any time. If an invalid address or policy index is given, an error is returned. An example of the indexing of this table is a3ComRoutePolicyIpIfRowStatus.3.158.101.112.205 which would stand for a3ComRoutePolicyEntry of index 3 with the ip address 158.101.112.205"
  },
  "a3ComRoutePolicyIpIfIndex": {
    "name": "a3ComRoutePolicyIpIfIndex",
    "oid": "1.3.6.1.4.1.43.29.4.23.3.1.1",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "INTEGER",
      "class": "type",
      "constraints": {
        "range": [
          {
            "min": 1,
            "max": 4294967295
          }
        ]
      }
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The identifier of a policy entry under a3ComRoutePolicyTable that this entry belongs to. Note that it is possible to have multiple entries in this table (a3ComRoutePolicyIpIfTable) with the same a3ComRoutePolicyIpIfIndex, and that is why this table is indexed by both a3ComRoutePolicyIpIfIndex and a3ComRoutePolicyIpIfAddressIndex."
  },
  "a3ComRoutePolicyIpIfAddressIndex": {
    "name": "a3ComRoutePolicyIpIfAddressIndex",
    "oid": "1.3.6.1.4.1.43.29.4.23.3.1.2",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "IpAddress",
      "class": "type"
    },
    "maxaccess": "read-only",
    "status": "mandatory",
    "description": "The address of an existing ip interface at the device being managed."
  },
  "a3ComRoutePolicyIpIfRowStatus": {
    "name": "a3ComRoutePolicyIpIfRowStatus",
    "oid": "1.3.6.1.4.1.43.29.4.23.3.1.3",
    "nodetype": "column",
    "class": "objecttype",
    "syntax": {
      "type": "RowStatus",
      "class": "type"
    },
    "maxaccess": "read-write",
    "status": "mandatory",
    "description": "The status column for an ip interface of a routing policy. This object can be set to: createAndGo(4), destroy(6) The following values may be read: active(1) A new ip interface entry in this table is created by setting this object to createAndGo(4), indexed by the id of an existing a3ComRoutePolicyEntry and the address of an existing ip interface at the device being managed. An error will be returned if any of the fields listed above contain invalid value. Once created successfully, this entry will automatically be made active(1). An entry in this table is deleted in similar way, except that the value set is destroy(6) instead of createAndGo(4). If a new entry, for instance, was to be created in this table for the policy 2 with ip interface address of 158.101.112.205, this object would be set to createAndGo(4) with the oid a3ComRoutePolicyIpIfRowStatus.3.158.101.112.205"
  },
  "meta": {
    "comments": [
      "ASN.1 source file://MIBS/asn1/A3COM-SWITCHING-SYSTEMS-ROUTEPOLICY-MIB.mib",
      "Produced by pysmi-0.3.4 at Tue Apr 20 14:59:39 2021",
      "On host samy-ThinkPad-T495s platform Linux version 5.8.0-50-generic by user root",
      "Using Python version 3.8.5 (default, Jan 27 2021, 15:41:15) "
    ],
    "module": "A3COM-SWITCHING-SYSTEMS-ROUTEPOLICY-MIB"
  }
}