BASIS-MIB DEFINITIONS ::= BEGIN
IMPORTS 
    enterprises,Counter, TimeTicks      FROM RFC1155-SMI
    IpAddress                           FROM RFC1155-SMI
    Gauge                               FROM RFC1155-SMI
    TRAP-TYPE                           FROM RFC-1215
    OBJECT-TYPE                         FROM RFC-1212
    DisplayString,transmission          FROM RFC1213-MIB;
-- ------------------------------------------------------------------
--
-- BASIS project  SYSTEM MIB
-- 
--
-- ------------------------------------------------------------------




stratacom               OBJECT IDENTIFIER ::= { enterprises 351 }

basis                   OBJECT IDENTIFIER ::= { stratacom 110 }

basisSystem             OBJECT IDENTIFIER ::= { basis 1 }
cardGeneric             OBJECT IDENTIFIER ::= { basis 2 }
-- Note cardGeneric group instances are present for every card.
-- 

cardSpecific            OBJECT IDENTIFIER ::= { basis 3 }
basisLines              OBJECT IDENTIFIER ::= { basis 4 }
basisServices           OBJECT IDENTIFIER ::= { basis 5 }
axisDiagnostics         OBJECT IDENTIFIER ::= { basis 6 }



basisShelf              OBJECT IDENTIFIER ::= { basisSystem 1 }
basisAsm                OBJECT IDENTIFIER ::= { basisSystem 2 }
axisRedundancy		OBJECT IDENTIFIER ::= { basisSystem 3 }

atmLmiSignaling         OBJECT IDENTIFIER ::= { cardSpecific 4 }

-- serialInterface      OBJECT IDENTIFIER ::= { basisLines 1 }
-- ethernetInterface    OBJECT IDENTIFIER ::= { basisLines 2 }
dsx1                    OBJECT IDENTIFIER ::= { basisLines 3 }
dsx3                    OBJECT IDENTIFIER ::= { basisLines 4 }
x21                     OBJECT IDENTIFIER ::= { basisLines 5 }

dsx1Line                OBJECT IDENTIFIER ::= { dsx1 1 }
dsx1Framing             OBJECT IDENTIFIER ::= { dsx1 2 }
dsx3Line                OBJECT IDENTIFIER ::= { dsx3 1 }
dsx3Framing             OBJECT IDENTIFIER ::= { dsx3 2 }
frameRelay              OBJECT IDENTIFIER ::= { basisServices 1 }
frPort                  OBJECT IDENTIFIER ::= { frameRelay 1 }
frChan                  OBJECT IDENTIFIER ::= { frameRelay 2 }
frPortCnf               OBJECT IDENTIFIER ::= { frPort 1 }
frPortCnfSig            OBJECT IDENTIFIER ::= { frPortCnf 2 }
frPortCnt               OBJECT IDENTIFIER ::= { frPort 2 }
frPortCntSig            OBJECT IDENTIFIER ::= { frPortCnt 2 }


atm                     OBJECT IDENTIFIER ::= { basisServices 2 }
plcp                    OBJECT IDENTIFIER ::= { dsx3 3 }
dsx1Plcp                OBJECT IDENTIFIER ::= { dsx1 3 }
ausmPort                OBJECT IDENTIFIER ::= { atm 1 }
ausmPortCnf             OBJECT IDENTIFIER ::= { ausmPort 1 }
ausmPortCnt             OBJECT IDENTIFIER ::= { ausmPort 3 }
ausmChan                OBJECT IDENTIFIER ::= { atm 2 }

circuitEmulation        OBJECT IDENTIFIER ::= { basisServices 3 }
cesmChan                OBJECT IDENTIFIER ::= { circuitEmulation 2 }



 
-- ------------------------------------------------------------------
--
-- BASIS project  SHELF  MIB
--
-- matches MIB dated 10/18/94.  rev 1.1
-- updated MG 10/24/94
-- ------------------------------------------------------------------
 
 
 
 
 
 
-- ----------------------------------------------------------------
--
-- Group "basisShelf"
-- This group contains information of the shelf
-- This group gives the module - type, and state
-- There could be 4 shelves and 16 cards in each shelf
-- Hence there could be 64 entries in the table
-- It is index by shelf number and slot number
-- There is serial number for each  backplane. (max 4 backplanes)
-- All objects are read only. except for date/time and node name
--
-- ----------------------------------------------------------------



-- shelfTable              OBJECT IDENTIFIER ::= {basisShelf 1}
-- shelfNumOfValidEntries  OBJECT IDENTIFIER ::= {basisShelf 2}
-- shelfNodeName           OBJECT IDENTIFIER ::= {basisShelf 3}
-- shelfDate               OBJECT IDENTIFIER ::= {basisShelf 4}
-- shelfTime               OBJECT IDENTIFIER ::= {basisShelf 5}
-- shelfTmZn               OBJECT IDENTIFIER ::= {basisShelf 6}
-- shelfTmZnGMTOff         OBJECT IDENTIFIER ::= {basisShelf 7}
-- shelfBkPlnType          OBJECT IDENTIFIER ::= {basisShelf 8}
-- shelfBkplnSerialNum     OBJECT IDENTIFIER ::= {basisShelf 9}
-- statsMasterIpAddress    OBJECT IDENTIFIER ::= {basisShelf 10}
-- statsCollectionInterval OBJECT IDENTIFIER ::= {basisShelf 11}
-- statsBucketInterval     OBJECT IDENTIFIER ::= {basisShelf 12}

-- ----------------------------------------------------------------
--
--
-- shelf table                                      
--
--
-- ----------------------------------------------------------------
shelfTable   OBJECT-TYPE
    SYNTAX  SEQUENCE OF ShelfEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
        "The table has the Physical slot number and state of the cards
        "
    ::= { basisShelf 1 }

shelfEntry   OBJECT-TYPE
    SYNTAX  ShelfEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
        "An entry for the slot
        "
    INDEX   { shelfNum, shelfSlotNum }
    ::= { shelfTable 1}
 
ShelfEntry ::=
    SEQUENCE {
        shelfNum
            INTEGER,
        shelfSlotNum 
            INTEGER,
        shelfFunctionModuleState  
            INTEGER,
        shelfFunctionModuleType
            INTEGER,
        shelfFunctionModuleHoldReset
            INTEGER
    }


shelfNum OBJECT-TYPE
    SYNTAX  INTEGER (1..4)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "A unique value for each shelf. Its value
         ranges between 1 and the maxvalue of shelfNumber.
        "
    ::= { shelfEntry 1 }


shelfSlotNum OBJECT-TYPE
    SYNTAX  INTEGER (1..16)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "Slot number of a card.
         BASIS can have maximum 16 slots in one shelf.
        "
    ::= { shelfEntry 2 }

--shelfBkplnSerialNum OBJECT-TYPE
--    SYNTAX  DisplayString (SIZE (0..6))
--    ACCESS  read-only
--    STATUS  mandatory
--    DESCRIPTION
--        "A unique value for each shelf, entered in nvram
--         by manf. The serial No. is on the non-volatile RAM on the
--         backplane.
--        "
--    ::= { shelfEntry 3 }

shelfFunctionModuleState OBJECT-TYPE
    SYNTAX  INTEGER{ 
        nocard (1),
        standby (2),
        active (3),
        failed (4),
        selfTest (5),
        heldInReset (6),
        boot (7),
        mismatch (8),
        unknown (9),
	coreCardMismatch (10)
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This object holds the status of a card in 
         a particular shelf-slot.
        "
    ::= { shelfEntry 4 }

shelfFunctionModuleType OBJECT-TYPE
    SYNTAX  INTEGER {
        other     (1),
        asc       (2),
        bnm-T3    (10),
	bnm-E3	  (11),
        srm-4T1E1 (20),
        frsm-4T1  (30),
        frsm-4E1  (31),
	frsm-4T1-C(32),
	frsm-4E1-C(33),
        ausm-4T1  (40),
        ausm-4E1  (41),
	ausm-8T1  (50),
	ausm-8E1  (51),
        cesm-4T1  (60),
        cesm-4E1  (61),
	aimnm-T3T1 (70),
	aimnm-E3E1 (71)
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This object holds the type of a card in 
         a particular shelf-slot.
        "
    DEFVAL { other }
    ::= { shelfEntry 5 }

shelfFunctionModuleHoldReset OBJECT-TYPE
    SYNTAX  INTEGER {
        doNotHold  (1),
        holdInReset(2) 
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        "This object holds the card in 
         a particular shelf-slot, in reset,
         If the object is set to holdInReset
        "
    ::= { shelfEntry 6 }
-- --------------------------------------------------------------

shelfNumOfValidEntries   OBJECT-TYPE
    SYNTAX INTEGER (0..64)
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Number of rows in shelfTable.
         Which is equal to number of shelves in this BASIS
        "
    ::= { basisShelf 2 }
 
shelfNodeName   OBJECT-TYPE
    SYNTAX  DisplayString (SIZE (1..10))
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        "Has the node name of BASIS
        "
    ::= { basisShelf 3 }

shelfDate  OBJECT-TYPE
    SYNTAX DisplayString (SIZE (8))
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "This object sets/gets the DATE. The syntax is yy/mm/dd
        "
    DEFVAL { "01/01/94" }
    ::= { basisShelf 4 }
 
shelfTime  OBJECT-TYPE
    SYNTAX DisplayString (SIZE (8))
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "This object sets/gets the TIME. The syntax is hh:mm:ss
        "
    DEFVAL { "12:00:00" }
    ::= { basisShelf 5 }
 
shelfTmZn  OBJECT-TYPE
    SYNTAX INTEGER{
        gmt (1),
        est (2),
        cst (3),
        mst (4),
        pst (5)
    }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "Object defines standard time.  GMT for greenwich mean time,
         est for Eastern std time (USA EST).
         cst for Central std time (USA CST).
         mst for Mountain std time (USA MST).
         pst for Pacific std time (USA PST).
         To define a std time that are not defined in here use the
         GMT and set the offset from the GMT in the shelfTmZnGMTOff object.
        "
    DEFVAL { pst }
    ::= { basisShelf 6 }
 
shelfTmZnGMTOff  OBJECT-TYPE
    SYNTAX INTEGER (-12..12)
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "This object contains the offset from greenwich mean time in
         hours, if configuring for std time in shelfTmZn object, set this
         object to 0.  If configuring for non standard times use this
         object as an offset from the GMT.
        "
    DEFVAL { 0 }
    ::= { basisShelf 7 }


shelfBkPlnType  OBJECT-TYPE
    SYNTAX INTEGER (1..10)
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "This object contains the back plane type.
         1 stands for 336 Mbps
        "
    ::= { basisShelf 8 }

shelfBkplnSerialNum OBJECT-TYPE
    SYNTAX  DisplayString (SIZE (0..6))
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "A unique value for each shelf, entered in nvram
         by manf. The serial No. is on the non-volatile RAM on the
         backplane.
        "
    ::= { basisShelf 9 }

statsMasterIpAddress OBJECT-TYPE
    SYNTAX  IpAddress
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "IP address of the Stats Master.
        "
    ::= { basisShelf 10 }

statsCollectionInterval OBJECT-TYPE
    SYNTAX INTEGER (0..65535)
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Statistics collection interval (in minutes).
        "
    DEFVAL { 0 }
    ::= { basisShelf 11 }


statsBucketInterval OBJECT-TYPE
    SYNTAX INTEGER (0..65535)
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Statistics bucket interval (in minutes).
        "
    DEFVAL { 0 }
    ::= { basisShelf 12 }

userName OBJECT-TYPE
    SYNTAX  DisplayString (SIZE (1..20))
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "username of the person loggin or logout. used only in traps
         currently only limit to 12 chars
        "
    ::= { basisShelf 13 }

-- Added by Jenny W. on 3/1/96
 
shelfIntegratedAlarm OBJECT-TYPE
   SYNTAX  INTEGER {
        clear (1),
        minor (2),
        major (3)
        }
   ACCESS  read-only
   STATUS  mandatory
   DESCRIPTION
        "Alarm status of the whole AXIS shelf
        "
   DEFVAL { clear }
   ::= { basisShelf 14 }
 
 

 
-- ------------------------------------------------------------------
--
-- BASIS project  SHELF  MIB
--
-- matches MIB dated 10/18/94.  rev 1.1
-- updated MG 10/24/94
-- ------------------------------------------------------------------
 
 
 
 
-- ----------------------------------------------------------------
--
-- Group "axisRedundancy"
-- This group contains information of the redundancy mapping
--
-- ----------------------------------------------------------------


smRedMapTable   OBJECT-TYPE
    SYNTAX  SEQUENCE OF SmRedMapEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
        "The table has the redundancy map for a service module
        "
    ::= { axisRedundancy 1 }

smRedMapEntry   OBJECT-TYPE
    SYNTAX  SmRedMapEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
        "An entry for SmRedMapEntry
        "
    INDEX   { redPrimarySlotNum }
    ::= { smRedMapTable 1}
 
SmRedMapEntry ::=
    SEQUENCE {
        redPrimarySlotNum
            INTEGER,
        redRowStatus 
            INTEGER,
        redPrimaryType  
            INTEGER,
        redPrimaryState
            INTEGER,
        redSecondarySlotNum
            INTEGER,
        redSecondaryType
            INTEGER,
        redSecondaryState
            INTEGER,
	redType
	    INTEGER,
	redCoveringSlot
	    INTEGER,
	redFeature
	    INTEGER,
	redLineModuleType
	    INTEGER
    }


redPrimarySlotNum OBJECT-TYPE
    SYNTAX  INTEGER (5..16)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
	" The index to the table, also the primary card
        "
    ::= { smRedMapEntry 1 }


redRowStatus OBJECT-TYPE
    SYNTAX  INTEGER {
            add(1),
            del(2),
            mod(3)
            }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
      "This will add, delete or modify the redundancy
       1 ==> ADD
       2 ==> DELETE
       3 ==> MODIFY
      "
    DEFVAL { del }
    ::= { smRedMapEntry 2 }

redPrimaryType OBJECT-TYPE
    SYNTAX  INTEGER {
        other     (1),
        bsc       (2),
        aum-T3    (10),
        tim       (20),
        frsm-4T1   (30),
        frsm-4E1   (31),
        ausm-4T1   (40),
        ausm-4E1   (41),
        cesm-4T1   (60),
        cesm-4E1   (61)
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This object holds the type of the primary card
        "
    ::= { smRedMapEntry 3 }
 
redPrimaryState OBJECT-TYPE
    SYNTAX  INTEGER{ 
        nocard (1),
        standby (2),
        active (3),
        failed (4),
        selfTest (5),
        heldInReset (6),
        boot (7),
        mismatch (8),
        unknown (9)
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This object holds the state of the primary card
        "
    ::= { smRedMapEntry 4 }

redSecondarySlotNum OBJECT-TYPE
    SYNTAX  INTEGER (5..16)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        " This is the slot number of the redundant card for the
	  primary card
        "
    ::= { smRedMapEntry 5 }
 
 
redSecondaryType OBJECT-TYPE
    SYNTAX  INTEGER {
        other     (1),
        bsc       (2),
        aum-T3    (10),
        tim       (20),
        frsm-4T1   (30),
        frsm-4E1   (31),
        ausm-4T1   (40),
        ausm-4E1   (41),
        cesm-4T1   (60),
        cesm-4E1   (61)
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This object holds the type of the redundant card
        "
    ::= { smRedMapEntry 6 }
 
redSecondaryState OBJECT-TYPE
    SYNTAX  INTEGER{
        nocard (1),
        standby (2),
        active (3),
        failed (4),
        selfTest (5),
        heldInReset (6),
        boot (7),
        mismatch (8),
        unknown (9)
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This object holds the state of the secondary card
        "
    ::= { smRedMapEntry 7 }

redType OBJECT-TYPE
    SYNTAX  INTEGER {
	yCable (1),
	oneToN (2)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
	"This object describes the type of redundancy
	"
    ::= { smRedMapEntry 8 }

redCoveringSlot OBJECT-TYPE
    SYNTAX  INTEGER (5..16)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        " This is the slot number of the primary card for which
          the secondary card is covering 
        "
    ::= { smRedMapEntry 9 }

redFeature OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
	"This is the feature of the primary and redundant cards
	 (they are supposed to be the same)
	"
    ::= { smRedMapEntry 10 }

redLineModuleType OBJECT-TYPE
    SYNTAX  INTEGER
	{
        lm-DB15-4T1  (16),
        lm-DB15-4E1  (17),
        lm-BNC-4E1   (18),
        lm-DB15-4T1-R(19),
        lm-DB15-4E1-R(20),
        lm-BNC-4E1-R (21),
        lm-RJ48-8T1  (22),
        lm-RJ48-8E1  (23),
        lm-SMB-8E1   (24),
        lm-RJ48-T3T1 (25),
        lm-RJ48-E3E1 (26),
        lm-RJ48-T3E1 (27),
        lm-SMB-E3E1  (28),
        lm-T3E3-D    (32),
        lm-T3E3-B    (33),
        lm-RJ48-8T1-R(48),
        lm-RJ48-8E1-R(49),
        lm-SMB-8E1-R (50)
	}
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
    	"This is the line module type for both primary and redundant
	 cards since they must be the same if the redundancy link 
	 established.
	"
    ::= { smRedMapEntry 11 }
 


-- ------------------------------------------------------------------
--
-- BASIS project  CARD SPECIFIC ASC MIB
-- 
-- 
-- Created by Jenny W. 3/22/96 
--
-- ------------------------------------------------------------------



ascFeatures              OBJECT IDENTIFIER ::= {cardSpecific 5}

-- ------------------------------------------------------------------
--
--  Group "ascFeatures"
--  ASC Module Features enabled for this card.
--  This contains all the features specific to ASC card such as
--  Redundancy.
--
-- ------------------------------------------------------------------

redundancyAllowed OBJECT-TYPE
    SYNTAX  INTEGER {
	  redNotAllowed(1),
          redAllowed(2)
	}
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "BRAM parameter indicating whether redundancy is allowed in
	this shelf.
        "
    ::= { ascFeatures 1 }


-- ------------------------------------------------------------------
--
-- BASIS project  CARD GENERIC MIB
-- 
-- matches MIB dated 10/18/94.  rev 1.1
-- updated MG 10/24/94
--
-- ------------------------------------------------------------------



cardInformation             OBJECT IDENTIFIER ::= { cardGeneric 1 }
cardInterface               OBJECT IDENTIFIER ::= { cardGeneric 2 }
cardSelfTest                OBJECT IDENTIFIER ::= { cardGeneric 3 }
 


-- ------------------------------------------------------------------
--
-- Group "cardInformation"
-- This group contains information which is generic to all cards in BASIS.
-- HW/SW type and revisions are available in this group.
-- Whenever any card is replaced by new one this group will 
-- be updated with new information.
-- All objects are read only.
--
-- ------------------------------------------------------------------

moduleSlotNumber OBJECT-TYPE
    SYNTAX INTEGER (1..16)
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Slot number this card is present
        "
    ::= { cardInformation 1 }

-- functional Module is also referred to as front card in some instances
--
functionModuleType OBJECT-TYPE
    SYNTAX INTEGER {
        other     (1),
        asc       (2),
        bnm-T3    (10),
        bnm-E3    (11),
        srm-4T1E1 (20),
        frsm-4T1  (30),
        frsm-4E1  (31),
        frsm-4T1-C(32),
        frsm-4E1-C(33),
        ausm-4T1  (40),
        ausm-4E1  (41),
        ausm-8T1  (50),
        ausm-8E1   (51),
        cesm-4T1  (60),
        cesm-4E1  (61),
        aimnm-T3T1 (70),
        aimnm-E3E1 (71)
    }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "This object holds the type of the card
         These are normally in front of the backplane
        "
    DEFVAL { other }
    ::= { cardInformation 2 }

functionModuleDescription OBJECT-TYPE
    SYNTAX DisplayString (SIZE (0..20))
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Describes the card
        "
    ::= { cardInformation 3 }

functionModuleSerialNum OBJECT-TYPE
    SYNTAX DisplayString (SIZE (0..6))
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Serial number of the function Module.
        "
    ::= { cardInformation 4 }

functionModuleHWRev OBJECT-TYPE
    SYNTAX DisplayString (SIZE (0..2))  
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Hardware revision number for functional Module
        "
    ::= { cardInformation 5 }

functionModuleFWRev OBJECT-TYPE
    SYNTAX DisplayString (SIZE (0..8)) 
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Firmware revision number of the functional Module
        "
    ::= { cardInformation 6 }

functionModuleState OBJECT-TYPE
    SYNTAX  INTEGER{
        nocard (1),
        standby (2),
        active (3),
        failed (4),
        selfTest (5),
        heldInReset (6),
        boot (7),
        mismatch (8),
	unknown (9),
	coreCardMisMatch (10)
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This object holds the status of the functional Module
        "
    ::= { cardInformation 7 }
 
functionModuleResetReason OBJECT-TYPE
    SYNTAX INTEGER{
        powerUp (1),
        parityError (2),
        watchDog (3),
        resourceOverflow (4),
        clrAllCnf (5),
        missingTask (6) 
    }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Last reason for card to reset.
         This values is stored in the non volatile RAM, and can
         be retrieved when the card is functioning
        "
    ::= { cardInformation 8 }

lineModuleType OBJECT-TYPE
    SYNTAX INTEGER {
       other        (1),
       	lm-ASC       (2),
       	lm-DB15-4T1  (16),
       	lm-DB15-4E1  (17),
       	lm-BNC-4E1   (18),
	lm-DB15-4T1-R(19),
	lm-DB15-4E1-R(20),
	lm-BNC-4E1-R (21),
	lm-RJ48-8T1  (22),
	lm-RJ48-8E1  (23),
	lm-SMB-8E1   (24),
	lm-RJ48-T3T1 (25),
	lm-RJ48-E3E1 (26),
	lm-RJ48-T3E1 (27),
	lm-SMB-E3E1  (28),
        lm-T3E3-D    (32),
        lm-T3E3-B    (33),
	lm-RJ48-8T1-R(48),
	lm-RJ48-8E1-R(49),
	lm-SMB-8E1-R (50)
    }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "line module number.
         Physcially it is behind the backplane.  normally with
         connectors for physical devices.
         They are normally specific to the front or functional modules.
        "
    DEFVAL { other }
    ::= { cardInformation 9 }

lineModuleDescription OBJECT-TYPE
    SYNTAX DisplayString (SIZE (0..20))
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Description of the line module
        "
    ::= { cardInformation 10 }

lineModuleSerialNum OBJECT-TYPE
    SYNTAX DisplayString (SIZE (6))
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Serial number of the line module.
        "
    ::= { cardInformation 11 }

lineModuleHWRev OBJECT-TYPE
    SYNTAX DisplayString (SIZE (0..2)) 
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Hardware revision for line module 
        "
    ::= { cardInformation 12 }

lineModuleFWRev OBJECT-TYPE
    SYNTAX DisplayString (SIZE (0..8))
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Firmware revision for line module
         The current version (BASIS rel 1) does not have any
         firmware, hence will always be zero.
        "
    ::= { cardInformation 13 }

lineModuleState OBJECT-TYPE
    SYNTAX INTEGER {
       notPresent (1),
       present    (2),
       invalid    (3)
    }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "line module status         
        "
    ::= { cardInformation 14 }

moduleTrapAlarmSeverity OBJECT-TYPE
    SYNTAX INTEGER {
       minor    (1),
       major    (2),
       dontCare (3)
    }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "This varbind is sent to managers as part of all Trap PDUs, to
         determine the module alarm severity
        "
    ::= { cardInformation 15 }

mibVersionNumber OBJECT-TYPE
    SYNTAX  INTEGER (1..'ffffffff'h)
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "MIB version number. Updated when any part of
         the MIB changes.
        "
    DEFVAL { 2 }
    ::= { cardInformation 16 }

configChangeTypeBitMap OBJECT-TYPE
    SYNTAX  INTEGER (1..'ffffffff'h)
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Configuration change Type BitMap
	 bit 0 set = Card Configuration Change
	 bit 1 set = Line Configuration Change
	 bit 2 set = Port Configuration Change
	 bit 3 set = Chan Configuration Change
        "
    DEFVAL { 0 }
    ::= { cardInformation 17 }



-- ------------------------------------------------------------------
--
-- Group "Interface"
-- This group contains list of physical interfaces and service types
-- available on a card. 
-- Different line types are e.g. DS1,DS3,OC3 etc.
-- Different services are e.g. ATM,FrameRelay etc.
-- Any combination of line type and service type are possible for a card.
--
-- ------------------------------------------------------------------

interfaceNumOfValidEntries        OBJECT-TYPE
    SYNTAX INTEGER
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Number of rows in interface Table
         The number represents the physcial interfaces the module has.
        "
    ::= { cardInterface 2 }

interfaceLineTable   OBJECT-TYPE
    SYNTAX SEQUENCE OF InterfaceLineEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
        "This table has list of the physical interfaces 
         and the services available on this module.
        "
    ::= { cardInterface 1 }

interfaceLineEntry OBJECT-TYPE
    SYNTAX InterfaceLineEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
        "An entry for physical interface
        "
    INDEX { interfaceLineNum }
    ::= { interfaceLineTable 1 }

InterfaceLineEntry ::= 
    SEQUENCE {
        interfaceLineNum
            INTEGER,
        interfaceLineType
            INTEGER,
        interfaceNumOfPortsPerLine
            INTEGER,
        interfaceServiceType
            INTEGER,
        interfaceNumOfPVC
            INTEGER,
        interfaceNumOfEgressQueue
            INTEGER
    }

interfaceLineNum OBJECT-TYPE
    SYNTAX INTEGER (1..10)
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "An index to uniquely indentify the physical interface and service."
    ::= { interfaceLineEntry 1 }

interfaceLineType OBJECT-TYPE
    SYNTAX INTEGER {
        other(1),
        ds1(18),
        e1(19),
        ethernet-3Mbit (26),
        ds3(30),
        rs232(33)
    }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "This object indicates the type interfaces provided by this Module
         These numbers are from RFC's
        "
    ::= { interfaceLineEntry 2 }

interfaceNumOfPortsPerLine OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "The number of physical ports of the line type
        "
    ::= { interfaceLineEntry 3 }

interfaceServiceType OBJECT-TYPE
    SYNTAX INTEGER {
        other(1),
        ethernet-3Mbit (26),
        slip (28),
        frameRelay(32),
        atm(37)
    }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "The services available on the interfaceLineType object
        "
    ::= { interfaceLineEntry 4 }

interfaceNumOfPVC OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "The Max number of Permanent Virtual Channels available per physical
         line (line as defined in interfaceLineType)
        "
    ::= { interfaceLineEntry 5 }

interfaceNumOfEgressQueue OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "The Max number of Queues available per connection for the ports
        "
    ::= { interfaceLineEntry 6 }

-- ----------------------------------------------------------------
--
-- Group "cardTest"
-- The cardTest group contains self test results.
-- All cards in BASIS have this group defined.
--
-- ----------------------------------------------------------------

selfTestEnable OBJECT-TYPE
    SYNTAX INTEGER {
        disable  (1),
        enable   (2)
    }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "This object indicates the self test state
         1 ==> self test enabled
         2 ==> self test disabled
        "
    DEFVAL { disable }
    ::= { cardSelfTest 1 }

selfTestPeriod OBJECT-TYPE
    SYNTAX INTEGER (1..60)
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "Interval (in minutes) for self test.
        "
    DEFVAL { 1 }
    ::= { cardSelfTest 2 }

selfTestState OBJECT-TYPE
    SYNTAX INTEGER {
        passed (1),
        failed (2)
    }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Self test results for the module.
        "
    ::= { cardSelfTest 3 }

selfTestResultDescription OBJECT-TYPE
    SYNTAX DisplayString (SIZE(0..40))
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Self test Result description
        "
    ::= { cardSelfTest 4 }

selfTestClrResultButton OBJECT-TYPE
    SYNTAX INTEGER {
        other (1),
        clear (2)
        }
    ACCESS write-only
    STATUS mandatory
    DESCRIPTION
        "Self test results clear
        "
    ::= { cardSelfTest 5 }


-- ------------------------------------------------------------------
--
-- BASIS project  CARD GENERIC II MIB
-- 
-- matches MIB dated 10/18/94.  rev 1.1
-- updated MG 10/24/94
--
-- ------------------------------------------------------------------




controlMsgCounter  OBJECT IDENTIFIER ::= { cardGeneric 4 }
sarChannelCounter  OBJECT IDENTIFIER ::= { cardGeneric 5 }

 
--    sarChannelCounterTable	OBJECT IDENTIFIER  sarChannelCounter 1 
--    chanNumOfValidEntries OBJECT   IDENTIFIER  sarChannelCounter 2 
-- ----------------------------------------------------------------
--
-- Group "sarCounters"
-- This group contains list of SAR counters and RISC counters
-- This group is common to all cards. All cards in BASIS have
-- SAR and RISC counters.
--
-- ----------------------------------------------------------------

riscXmtCtrlMsg OBJECT-TYPE
    SYNTAX  Counter
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
    "The number of control Frames transmitted to SAR (from RISC)
     maintained by RISC
    "
    ::= { controlMsgCounter 1 }

riscRcvCtrlMsg OBJECT-TYPE
    SYNTAX  Counter
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
    "The number of control Frames received from SAR (to RISC)
     maintained by RISC
    "
    ::= { controlMsgCounter 2 }

sarXmtCtrlMsg  OBJECT-TYPE
    SYNTAX  Counter
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
    "The number of control Frames transmitted to RISC from SAR 
     maintained by SAR (should be equal to (riscRcvCtrlMsg)
    "
    ::= { controlMsgCounter 3 }

sarRcvCtrlMsg OBJECT-TYPE
    SYNTAX  Counter
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
    "The number of control Frames received to SAR from RISC
     maintained by SAR (should be equal to (riscXmtCtrlMsg)
    "
    ::= { controlMsgCounter 4 }

sarCtrlMsgDiscLenErr  OBJECT-TYPE
    SYNTAX Counter
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
    "Total control (management) cells discarded due to illegal length error
    "
    ::= { controlMsgCounter 5 }
 
sarCtrlMsgDiscCRCErr  OBJECT-TYPE
    SYNTAX Counter
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
    "Total control (management) cells discard due to illegal CRC error
    "
    ::= { controlMsgCounter 6 }

sarCtrlMsgDiscUnknownChan    OBJECT-TYPE
    SYNTAX  Counter 
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
    "Count of discarded control message due to unknown channel error.
    "
    ::= { controlMsgCounter 7 }

sarCtrlMsgLastUnkownChan    OBJECT-TYPE
    SYNTAX  INTEGER (0..'ffffffff'h)
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
    "The control cell header Rcvd of the last unknown channel
    "
    ::= { controlMsgCounter 8 }


ctrlMsgClrButton    OBJECT-TYPE
    SYNTAX  INTEGER {
       other (1),
       clear (2)
       }
    ACCESS write-only
    STATUS  mandatory
    DESCRIPTION
    "The control cell header Rcvd of the last unknown channel
    "
    ::= { controlMsgCounter 9 }


-- ---------------------------------------------------------------------
-- 
--         SAR channel counters group
--
--         These are counter maintained by the SAR and supplied to the
--         manager by RISC, the counters are per VC and counters are
--         for ATM cells
--
-- cell counters
-- ---------------------------------------------------------------------

chanNumOfValidEntries OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Number of entries in the sar channel table
		"
	::= { sarChannelCounter	2 }

sarChannelCounterTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF SarChannelCounterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The table is for logical channels
       This table contains the counters for cells transmitted on each
       channel
		"
	::= { sarChannelCounter 1 }

sarChannelCounterEntry	OBJECT-TYPE
	SYNTAX	SarChannelCounterEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical channel
		"
	INDEX	{ sarShelfNum, sarSlotNum, sarChanNum }
	::= { sarChannelCounterTable 1 }

SarChannelCounterEntry ::=
	SEQUENCE {
		sarShelfNum 	
			INTEGER,
		sarSlotNum 	
			INTEGER,
		sarChanNum 	
			INTEGER,
-- Xmt Cell stats
		xmtCells		
			INTEGER,
		xmtCellsCLP		
			INTEGER,
		xmtCellsAIS		
			INTEGER,
		xmtCellsFERF	
			INTEGER,
		xmtCellsBCM		
			INTEGER,
		xmtCellsEnd2EndLpBk
			INTEGER,
		xmtCellsSegmentLpBk	
			INTEGER,
		xmtCellsDiscShelfAlarm	
			INTEGER,
-- Rcv Cell stats
		rcvCells		
			INTEGER,
		rcvCellsCLP		
			INTEGER,
		rcvCellsAIS		
			INTEGER,
		rcvCellsFERF	
			INTEGER,
		rcvCellsBCM		
			INTEGER,
		rcvCellsEnd2EndLpBk	
			INTEGER,
		rcvCellsSegmentLpBk	
			INTEGER,
		rcvCellsDiscOAM	
			INTEGER,
      sarClrButton 
			INTEGER 
}

sarShelfNum OBJECT-TYPE
 	SYNTAX	INTEGER (1..4)
 	ACCESS	read-only
 	STATUS	mandatory
 	DESCRIPTION		  
 		"Shelf number
 		"
 	::= { sarChannelCounterEntry	1 }
 
sarSlotNum OBJECT-TYPE
 	SYNTAX	INTEGER (1..16)
 	ACCESS	read-only
 	STATUS	mandatory
 	DESCRIPTION		  
 		"Slot number, the slot and shelf info is required here
      because BSC sends the OAM cells for the FRSM cards that have failed
      BSC could have upto 1000 connections in this table
		"
	::= { sarChannelCounterEntry	2 }

sarChanNum OBJECT-TYPE
	SYNTAX	INTEGER (0..271)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		" BSC could have upto 1000 connections in this table
		"
	::= { sarChannelCounterEntry	3 }

xmtCells OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of cells transmitted on this channel.
		"
	::= { sarChannelCounterEntry	4 }


xmtCellsCLP OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of CLP cells that were transmitted on this channel.
		"
	::= { sarChannelCounterEntry	5 }

xmtCellsAIS OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of AIS cells that were transmitted on this channel.
		"
	::= { sarChannelCounterEntry	6 }

xmtCellsFERF OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of FERF cells that were transmitted on this channel.
		"
	::= { sarChannelCounterEntry	7 }

xmtCellsBCM OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of BCM cells that were transmitted on this channel.
		"
	::= { sarChannelCounterEntry	8 }

xmtCellsEnd2EndLpBk OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of End2End loop cells that were transmitted on this channel.
		"
	::= { sarChannelCounterEntry	9 }

xmtCellsSegmentLpBk OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of segment loop cells that were transmitted on this channel.
		"
	::= { sarChannelCounterEntry	10 }

xmtCellsDiscShelfAlarm OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of cells discard due to Shelfalarm on this channel.
		"
	::= { sarChannelCounterEntry	11 }

-- receiver cell counters

rcvCells OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of cells that were received on this channel.
		"
	::= { sarChannelCounterEntry	12 }

rcvCellsCLP OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of CLP cells that were received on this channel.
		"
	::= { sarChannelCounterEntry	13 }

rcvCellsAIS OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of AIS cells that were received on this channel.
		"
	::= { sarChannelCounterEntry	14 }

rcvCellsFERF OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of FERF cells that were received on this channel.
		"
	::= { sarChannelCounterEntry	15 }

rcvCellsBCM OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of BCM cells that were received on this channel.
		"
	::= { sarChannelCounterEntry	16 }

rcvCellsEnd2EndLpBk OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of End2End loop cells that were received on this channel.
		"
	::= { sarChannelCounterEntry	17 }

rcvCellsSegmentLpBk OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of segment loop cells that were received on this channel.
		"
	::= { sarChannelCounterEntry	18 }

rcvCellsDiscOAM OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of cells that had CRC error on
		 OAM cells
		"
	::= { sarChannelCounterEntry	19 }

sarClrButton OBJECT-TYPE
    SYNTAX  INTEGER {
       other (1),
       clear (2)
       }
	ACCESS write-only
	STATUS mandatory
	DESCRIPTION
		"clear the counters in the table
		"
	::= { sarChannelCounterEntry	20 }


-- ------------------------------------------------------------------
--
-- BASIS project  DIAGNOSTICS MIB
--
--         MIB dated 8/18/95.  rev 1.
--  for BERT
--
-- ------------------------------------------------------------------
 
 
 
bert                       OBJECT IDENTIFIER ::= { axisDiagnostics 1 }
 
 
 
-- ------------------------------------------------------------------
--
-- Group "axisDiagnostics"
-- This group contains information which is generic to all cards in AXIS.
-- currently only bert is defined in this group         
-- and BERT is supported only for SM at this point
--
-- ------------------------------------------------------------------

bertEnable OBJECT-TYPE
	SYNTAX	INTEGER {
			disable(1),
			enable(2)
			}
	ACCESS  read-write
           STATUS  mandatory
           DESCRIPTION
		"This variable enables BERT functionality on an FRSM card.
		 This variable and a hardware bits (in PIO_3C) together decide
		 whether a line is going to be put on the BERT bus.
		" 
	::= { bert 1 }

bertStatus OBJECT-TYPE
	SYNTAX	INTEGER {
			inActive(1),
			sendingLoopUp(2),
			loopEstablished(3),
			sendingBERT(4),
			sendingLoopDown(5),
			inSync(6),
			outOfSync(7)
			}
	ACCESS  read-only
           STATUS  mandatory
           DESCRIPTION
		"This variable provides the status of BERT on a card.
		" 
	::= { bert 2 }

bertPort OBJECT-TYPE
	SYNTAX	INTEGER (1..128)
	ACCESS  read-write
           STATUS  mandatory
           DESCRIPTION
		"specifies the port number for BERT, if BERT is
       to be performed on full T1/E1 line, a port for all the 
       channels has to be configured and used.
		" 
	::= { bert 3 }


bertPortDs0Speed OBJECT-TYPE
	SYNTAX	INTEGER {
               speed56k (1),
               speed64k (2)
            }
	ACCESS  read-write
           STATUS  mandatory
           DESCRIPTION
		"represents the ds0 speed for testing
		" 
	::= { bert 4 }


bertPattern OBJECT-TYPE
	SYNTAX  INTEGER {
          		      allZeros (1),
                    	allOnes (2),
                    	alternateONeZero (3),
                    	doubleOneZero (4),
                    	nineBit (5),
                    	elevenBit (6),
                    	fifteenBit (7),
                    	twentyBit (8),
                    	twentyBitQRSS (9),
                    	twentythreeBit (10),
                    	dds1-1 (11),
                    	dds1-2 (12),
                    	dds1-3 (13),
                    	dds1-4 (14),
                    	dds1-5 (15),
                    	oneInEight (16),
                    	threeIntwentyfour (17),
						foxPattern(18)
                	}
        	ACCESS  read-write
        	STATUS  mandatory
        	DESCRIPTION
           	"This variable determines BERT pattern to be transmitted.
			"
	::= { bert 5 }

bertFarEndDevice OBJECT-TYPE
		SYNTAX	INTEGER  {
			noLatchOCUwith1 	(1),
			noLatchOCUwitout1	(2),
			noLatchCSU			(3),
			noLatchDSU			(4),
			latchDS0Drop		(5),
			latchDS0Line		(6),
			latchOCU			(7),
			latchCSU			(8),
			latchHL96			(9),
			latchDSU			(10),
			v54Polynomial		(11)
		}
		ACCESS  read-write
		STATUS  mandatory
		DESCRIPTION
		"This shows the type of the end device and the type of the 
		 loopback used (latching/nonlatching/polynomial).
		" 
	::= { bert 6 }

bertBitCounter OBJECT-TYPE
	SYNTAX	INTEGER 
	ACCESS  read-only
           STATUS  mandatory
           DESCRIPTION
		"This shows the number of bits transmitted after synchronisation.
		" 
	::= { bert 7 }

bertErrBitCounter OBJECT-TYPE
	SYNTAX	INTEGER 
	ACCESS  read-only
           STATUS  mandatory
           DESCRIPTION
		"This shows the number of bits received in error.
		" 
	::= { bert 8 }

bertSyncHitCounter OBJECT-TYPE
	SYNTAX	INTEGER 
	ACCESS  read-only
           STATUS  mandatory
           DESCRIPTION
		"This shows the number sync hits (supported????)
		" 
	::= { bert 9 }

bertTestTime OBJECT-TYPE
	SYNTAX	INTEGER 
	ACCESS  read-only
           STATUS  mandatory
           DESCRIPTION
		"This shows the time in seconds the test shd. be rxed.
		" 
	::= { bert 10 }


bertControl OBJECT-TYPE
	SYNTAX	INTEGER {
		startTest 	(1),
		stopTest	(2)
	}
	ACCESS  read-write
           STATUS  mandatory
           DESCRIPTION
		"This will start/stop the BERT test.

		 For 'start_test', loopback will be established for the 
		 device defined in 'bertFarEndDevice'. Loopback pattern will 
		 be started as defined in 'bertPattern'.

		 The test will run for 'berttestTime' if the 'stop_test' 
		 command is not received before.

		 For 'stop_test', loopback pattern will be stopped.
		 loopback will be deestablished for the device defined in 
		 'bertFarEndDevice'. 
		" 
	::= { bert 11 }

bertLatchLoopControl OBJECT-TYPE
	SYNTAX	INTEGER {
		establishLoop 		(1),
		deestablishLoop	(2)
	}
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
	"This will establish/deestablish the latching loop process 
	 (Sends LOOP-UP/LOOP-DOWN patterns towards CPE ).
	 Stops immediately after the loop is established/deestablished.
	" 
	::= { bert 12 }


bertResultClrButton OBJECT-TYPE
	SYNTAX	INTEGER {
			clear(1),
			noaction(2)
			}
	ACCESS  read-write
           STATUS  mandatory
           DESCRIPTION
		"This clears the result of the BERT
		" 
	::= { bert 13 }


 
 
-- ------------------------------------------------------------------
--
-- BASIS project  LINEs  MIB .. specifically ethernet and serial
--
--
-- ------------------------------------------------------------------
 
 
 
 
 
 
-- ----------------------------------------------------------------
--
-- Group "basisLines""
-- This group contains information on lines
-- Not all lines are in this file, this pertaines only to the ethernet
-- and serial line, other lines like ds1 etc are in different files
-- ----------------------------------------------------------------


serialInterface         OBJECT IDENTIFIER ::= {basisLines 1}
ethernetInterface       OBJECT IDENTIFIER ::= {basisLines 2}

-- ----------------------------------------------------------------
--
--
-- serial interface table                                      
--
--
-- ----------------------------------------------------------------

serialPortNumOfValidEntries   OBJECT-TYPE
    SYNTAX INTEGER
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
    "Number of rows in serialPortTable.
     This number is equal to the number of serial ports on the module.
    "
    ::= { serialInterface 2 }

-- --------------------------------------------------------------

serialInterfaceTable   OBJECT-TYPE
    SYNTAX  SEQUENCE OF SerialInterfaceEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
        "This table represents Physical serial interfaces on the module
        "
    ::= { serialInterface 1 }

serialInterfaceEntry   OBJECT-TYPE
    SYNTAX  SerialInterfaceEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
        "An entry for the serial interface
        "
    INDEX   { serialPortNum }
    ::= { serialInterfaceTable 1}
 
SerialInterfaceEntry ::=
    SEQUENCE {
        serialPortNum
            INTEGER,
        serialPortType
            INTEGER,
        serialPortEnable
            INTEGER,
         serialPortbps 
             INTEGER
--         serialPortParity  
--             INTEGER,
--         serialPortDataBits  
--             INTEGER
    }


serialPortNum OBJECT-TYPE
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
         "serial interface number 
         port 1. is always defined as debug port
         port 2. on BSC can perform SLIP.
         "
    ::= { serialInterfaceEntry 1 }

serialPortType OBJECT-TYPE
    SYNTAX  INTEGER {
       main (1),
       debug (2)
    }
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "On the BSC board IP stack is mounted on the manager port,
         on the debug port dumb terminal can be connected
         function of the ports cannot be changed, except for enabling
         and disabling
        "
    ::= { serialInterfaceEntry 2 }


serialPortEnable OBJECT-TYPE
    SYNTAX  INTEGER {
       disable (1),
       enable  (2)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        "ports can be enabled or diabled
        "
    ::= { serialInterfaceEntry 3 }

serialPortbps OBJECT-TYPE
    SYNTAX  INTEGER {
        bps9600     (1),
        bps2400     (2),
        bps19200    (3)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        "baud rate of the ports, each port can be config
         different
        "
    DEFVAL { bps9600 }
    ::= { serialInterfaceEntry 4 }

-- serialPortParity  OBJECT-TYPE
--     SYNTAX  INTEGER {
--         none   (1),
--         odd    (2),
--         even   (3)
--     }
--     ACCESS  read-write
--     STATUS  mandatory
--     DESCRIPTION
--         "parity
--         "
--     DEFVAL { none }
--     ::= { serialInterfaceEntry 5 }

-- serialPortDataBits  OBJECT-TYPE
--     SYNTAX  INTEGER {
--         bits8  (1),
--         bits7  (2)
--     }
--     ACCESS  read-write
--     STATUS  mandatory
--     DESCRIPTION
--         "parity
--         "
--     DEFVAL { bits8 }
--     ::= { serialInterfaceEntry 6 }
            
-- --------------------------------------------------------------
 
ethernetPhysicaAddress   OBJECT-TYPE
    SYNTAX  DisplayString (SIZE (0..8))
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
            "ethernet address stored in the BSC BRAM, entered by
             manfacturing.
            "
    ::= { ethernetInterface 1 }

 

-- --------------------------------------------------------------
--
-- Group "ASM"
--
-- --------------------------------------------------------------


-- --------------------------------------------------------------
-- 
-- ASM group
-- This group contains ASM Alarm table
-- 
-- --------------------------------------------------------------
asmAlarmTable OBJECT-TYPE
		SYNTAX	SEQUENCE OF ASMAlarmEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"The ASM Alarm table. The table size is
			 given by the value of ASMNumOfValidEntries."
		::= { basisAsm 1 }

	asmAlarmEntry OBJECT-TYPE
		SYNTAX	ASMAlarmEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"An entry in the Basis ASM Alarm Table."
		INDEX	{ asmAlarmNum }
		::= { asmAlarmTable 1 }

	ASMAlarmEntry ::=
		SEQUENCE {
			asmAlarmNum INTEGER,
			asmAlarmType INTEGER,
			asmAlarmUnitNum INTEGER,
			asmAlarmThreshold INTEGER,
			asmAlarmSeverity INTEGER,
                        asmUnitMeasurable INTEGER,
                        asmUnitMeasuredValue INTEGER,
			asmPhysicalAlarmState INTEGER,
			asmClrButton INTEGER
         		}
	asmAlarmNum OBJECT-TYPE
		SYNTAX	INTEGER (1..6)
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
              "This object is the identifier of a ASM alarm
               entry. The Alarm is further identified by the 
               objects ASMAlarmType & ASMAlarmUnitNum."
		::= { asmAlarmEntry 1 }

	asmAlarmType OBJECT-TYPE
		SYNTAX	INTEGER {
                       alarmOther (1),
                       alarmTemperature (2),
                       alarmPSU (3),
                       alarmDCLevel (4),
                       alarmFanUnit (5)
                       }
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"The value for this object indicates the type
          of Alarm represented in the entry of ASMAlarmTable
			 indexed by ASMAlarmNum."
		::= { asmAlarmEntry 2 }

	asmAlarmUnitNum OBJECT-TYPE
		SYNTAX  INTEGER (1..6)
		ACCESS  read-only
		STATUS  mandatory
		DESCRIPTION
			"This object identifies one unit among a number of
          identical units represented in ASMAlarmTable having the
          same ASMAlarmType."
		::= { asmAlarmEntry 3 }

	asmAlarmThreshold OBJECT-TYPE
		SYNTAX  INTEGER (1..'ffffffff'h)
		ACCESS  read-only
		STATUS  mandatory
		DESCRIPTION
			"This object specifies the threshold beyond which
			 the alarmable unit is said to be in an abnormal state."
		::= { asmAlarmEntry 4 }

	asmAlarmSeverity OBJECT-TYPE
		SYNTAX  INTEGER 
		              {
				        alarmMinor (1),
				        alarmMajor (2)
			           }
		ACCESS  read-only
		STATUS  mandatory
		DESCRIPTION
			"This variable specifies the severity of the alarm
          to be declared when the ASMAlarmThreshold specified is
          exceeded for the entry of ASMAlarmTable indexed by
			 ASMAlarmNum."
		::= { asmAlarmEntry 5 }

        asmUnitMeasurable OBJECT-TYPE
                SYNTAX  INTEGER
                                  {
                                  no (1),
                                  yes (2)
                                  }
                ACCESS  read-only
                STATUS  mandatory
                DESCRIPTION
                        "This object indicates if the alarm unit is measurable
                         by the AXIS shelf."  
                ::= { asmAlarmEntry 6 }

        asmUnitMeasuredValue OBJECT-TYPE
                SYNTAX  INTEGER
                ACCESS  read-only
                STATUS  mandatory
                DESCRIPTION
                        "This object gives the mesaured value of the entity
                         addressed by asmAlarmNum if it is measurable." 
                ::= { asmAlarmEntry 7 }
 
	asmPhysicalAlarmState OBJECT-TYPE
		SYNTAX  INTEGER 
		ACCESS	read-only
		STATUS  mandatory
		DESCRIPTION
                        "This object indicates the status of the ASM alarm
                         represented in this entry. It is a bitmap where a
                         set bit indicates an abnormal condition. A reset bit
                         signifies normal operation."
		::= { asmAlarmEntry 8 }

	asmClrButton OBJECT-TYPE
		SYNTAX  INTEGER {
                                asmAlarmNoAction(1),
                                asmAlarmClear(2)
                                }
      ACCESS  write-only
		STATUS  mandatory
		DESCRIPTION
			"This object when set to ASMAlarmClear causes the entry
                         in the ASMAlarmTable represented by ASMAlarmNum to be
			 cleared."
		::= { asmAlarmEntry 9 }

	asmNumOfValidEntries OBJECT-TYPE
		SYNTAX	INTEGER
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"The number of valid ASMAlarmTable entries (regardless
			 of how many are actually configured) in the table."
		::= { basisAsm 2 }

	asmShelfAlarmState OBJECT-TYPE
		SYNTAX	INTEGER
                        {
                        alarmOff(1),
                        alarmOn(2)
                        }
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This object indicates whether any Shelf Alarm has been 
          declared in the BASIS system."
		::= { basisAsm 3 }

-- ------------------------------------------------------------------
--
-- BASIS project 
-- 
--
-- ------------------------------------------------------------------


aumClockConfig          OBJECT IDENTIFIER ::= {cardSpecific 1}
aumAddressTranslation   OBJECT IDENTIFIER ::= {cardSpecific 2}
bnmCounters             OBJECT IDENTIFIER ::= {cardSpecific 3}

-- ------------------------------------------------------------------
-- 
-- Group aumClockConfig
-- This group contains clock source for AUM card. 
-- This group is card specific for AUM card.
-- 
-- ------------------------------------------------------------------
primaryMuxClockSource   OBJECT-TYPE
    SYNTAX INTEGER {
        internalOscillator (1),
        aumInbandClock (2),
        externalClock (3)
--      clockFromTIM (4)
--      clockFromSM (5)
        }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
    "Primary Mux Clock source for AUM card."
    ::= { aumClockConfig 1 }
    
secondaryMuxClockSource OBJECT-TYPE
    SYNTAX INTEGER {
        internalOscillator (1),
        aumInbandClock (2),
        externalClock (3)
--      clockFromTIM (4)
--      clockFromSM (5)
        }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
    "Secondary clock source for AUM card."
    ::= { aumClockConfig 2 }

currentClock    OBJECT-TYPE
    SYNTAX INTEGER {
        primary (1),
        secondary (2),
        intOscillator(3)
        }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
    "clock source currently selected for AUM card."
    ::= { aumClockConfig 3 }

clockSwitchState    OBJECT-TYPE
    SYNTAX INTEGER {
        noChange (1),
        clockSrcChanged (2)
        }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
    "clock source switched."
    ::= { aumClockConfig 4 }

extClockPresent    OBJECT-TYPE
    SYNTAX INTEGER {
        clkNotPresent (1),
        clkPresent (2)
        }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
    "Status of External T1/E1 Clock on AUM card."
    ::= { aumClockConfig 5 }

extClkSrcImpedance    OBJECT-TYPE
    SYNTAX INTEGER {
                      ohms75(1),
                      ohms100(2),
                      ohms120(3)
                   }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
    "Impedance on external clock input for AUM card."
    ::= { aumClockConfig 6 }

extClkConnectorType   OBJECT-TYPE
    SYNTAX INTEGER {
                        db15Type(1),
                        bncType(2)
                   }
    ACCESS read-only
	 STATUS mandatory
	 DESCRIPTION
	 "This object describes the type of connector available for connecting
	  the external clock source to the AUM-LM."
    ::= { aumClockConfig 7 }

-- ------------------------------------------------------------------
--
-- Group "aumAddressTranslation"
-- Has slot.LCN mapping
-- This group is card specific to AUM card.
--
-- ------------------------------------------------------------------
aumAddressTranslationTable  OBJECT-TYPE
    SYNTAX SEQUENCE OF AddrEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
    "This table contains address translation parameters for AXIS connections."
    ::= { aumAddressTranslation 1 }

addrEntry  OBJECT-TYPE
    SYNTAX AddrEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
    "This entry exists when the connection specified by connShelfNum,
	  connSlotNum and connChanNum exists."
    INDEX  { connShelfNum,connSlotNum,connChanNum }
    ::= { aumAddressTranslationTable 1 }

AddrEntry ::=
    SEQUENCE {
        connShelfNum   INTEGER,
        connSlotNum    INTEGER,
        connChanNum    INTEGER,
	connType       INTEGER,
	connVPINum     INTEGER
        }

connShelfNum  OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION 
    "Index to shelf list on BASIS."
    ::= { addrEntry 1 }
    
connSlotNum  OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION 
    "Index to slot list on BASIS."
    ::= { addrEntry 2 }
 
connChanNum  OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION 
    "Index to channel list on BASIS."
    ::= { addrEntry 3 }

connType  OBJECT-TYPE
    SYNTAX INTEGER {
                    vpConnection(1),
                    vcConnection(2)
                   }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION 
    "Virtual channel connection or Virtual Path Connection"
    ::= { addrEntry 4 }

connVPINum  OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION 
    "Virtual channel connection or Virtual Path Connection"
    ::= { addrEntry 5 }

aumAddressTranslationDeleteTable  OBJECT-TYPE
    SYNTAX SEQUENCE OF DeleteEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
    "This table contains address translation parameters for AXIS connections."
    ::= { aumAddressTranslation 2 }

deleteEntry  OBJECT-TYPE
    SYNTAX DeleteEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
    "This entry controls bulk deletion of connections on a given AXIS slot."
    INDEX  { delShelfNum,delSlotNum }
    ::= { aumAddressTranslationDeleteTable 1 }

DeleteEntry ::=
    SEQUENCE {
        delShelfNum   INTEGER,
        delSlotNum    INTEGER
        }

delShelfNum  OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS write-only
    STATUS mandatory
    DESCRIPTION 
    "Index to shelf list on AXIS."
    ::= { deleteEntry 1 }
    
delSlotNum  OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS write-only
    STATUS mandatory
    DESCRIPTION 
    "Index to slot list on BASIS."
    ::= { deleteEntry 2 }

connNumOfValidEntries  OBJECT-TYPE
    SYNTAX INTEGER (0..1024)
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
    "Number of rows in aumAddressTranslationTable."
    ::= { aumAddressTranslation 3 }

-- ------------------------------------------------------------------
--
--  Group "bnmCounters"
--  ATM layer Ete, Ite & CellBus Master counters on BNM card.
--
-- ------------------------------------------------------------------

bnmPortCounterTable OBJECT-TYPE
    SYNTAX  SEQUENCE OF BnmPortCounterEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
        "The counter table is for the ATM interface, initially there 
         is only one interface, but by making it a table multiple ATM interfaces
         can be accommodated later."
    ::= { bnmCounters 1 }

bnmPortCounterEntry OBJECT-TYPE
    SYNTAX  BnmPortCounterEntry
    ACCESS  not-accessible
    STATUS  mandatory
    DESCRIPTION
        " An entry for DS3 ATM counters "
    INDEX   { bnmPortCounterIndex }
    ::= { bnmPortCounterTable 1}

BnmPortCounterEntry ::=
    SEQUENCE {
          bnmPortCounterIndex       INTEGER,
          bnmPortRcvCells           INTEGER,
          bnmPortXmtCells           INTEGER,
          bnmPortCounterClrButton   INTEGER
             }

bnmPortCounterIndex   OBJECT-TYPE 
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION       
        "This specifies the BNM port being referenced."
    ::= { bnmPortCounterEntry 1 }

bnmPortRcvCells   OBJECT-TYPE 
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION       
        "The count of Received cells at the BNM port."
    ::= { bnmPortCounterEntry 2 }

bnmPortXmtCells   OBJECT-TYPE 
    SYNTAX  INTEGER
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION       
        "The count of cells transmitted by the BNM port."
    ::= { bnmPortCounterEntry 3 }

bnmPortCounterClrButton   OBJECT-TYPE 
    SYNTAX  INTEGER {
	             bnmPortCounterNoAction(1),
                     bnmPortCounterClear(2)
                    }
    ACCESS  write-only
    STATUS  mandatory
    DESCRIPTION       
        "This object when set to bnmPortCounterClear causes all counters in the row
         referenced by bnmPortCounterIndex to be cleared."
    ::= { bnmPortCounterEntry 4 }

bnmPortCounterNumOfValidEntries   OBJECT-TYPE 
    SYNTAX  INTEGER 
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION       
        "This object specifies the number of rows in bnmPortCounterTable."
    ::= { bnmCounters 2 }

bnmCellbusXmtCellCount      OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION 
         "This objects is a count of cells transmitted by the BNM Cell Bus Master
          to the cell bus."
    ::= { bnmCounters 3 }

bnmCellbusNoAckCellCount        OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION 
         "This object is a count of cells transmitted by the BNM Cell Bus Master
          to the cell bus for which no acknowledgement was received i.e the slave
          card was missing or inactive."
    ::= { bnmCounters 4 }

bnmCellbusGrantCount        OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION 
         "This object is a count of receiver grants given by the BNM Cell Bus Master"
    ::= { bnmCounters 5 }

bnmEgressXmtCellCountDuringAlarm        OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION 
         "This object is a count of cells transmitted by the Egress Engine to the port
i         while a T3 Alarm condition was in effect."
    ::= { bnmCounters 6 }

bnmEgressInvalidCellCount      OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION 
         "This object is a count of cells with disabled channel headers, received by
          the Egress Engine on the BNM and dropped." 
    ::= { bnmCounters 7 }

bnmEgressInvalidCellHdr        OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION 
         "This object gives the header of the first invalid cell that
          was dropped by the Egress Engine on the BNM since this object was
          last read and/or cleared." 
    ::= { bnmCounters 8 }

bnmIngressInvalidCellCount        OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION 
         "This object is a count of cells from disabled channels received by the
          Ingress Engine on the BNM. This is not available in Release 1." 
    ::= { bnmCounters 9 }

bnmIngressInvalidCellHdr        OBJECT-TYPE
    SYNTAX INTEGER 
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION 
         "This object gives the header of the first invalid cell that
          was dropped by the Ingress Engine on the BNM since this object was
          last read and/or cleared. This is not available in Release 1." 
    ::= { bnmCounters 10 }

bnmCountersClrButton        OBJECT-TYPE
    SYNTAX INTEGER {
                    bnmCountersNoAction(1),
                    bnmCountersClear   (2)
                   }
    ACCESS  write-only
    STATUS  mandatory
    DESCRIPTION 
         "This object is a count of cells from disabled channels received by the
          Ingress Translation Engine on the BNM. Note that this does NOT clear the
          first errored cell header registers on the ETE, ITE & CBM." 
    ::= { bnmCounters 11 }
-- --------------------------------------------------------------
--
-- Group "DSX3"
-- This group standard within the scope of the BASIS system
--
-- --------------------------------------------------------------


-- DSX3 Line definition
-- dsx3 object is imported from BASIS-MIB its
-- OBJECT IDENTIFIER is { basisLines 4 }

-- groups in DSX3 lines
-- This group consists of 4 tables:
-- 	dsx3Config
-- 	dsx3AlarmConfig
-- 	dsx3Alarm
-- 	dsx3Counters 

-- dsx3                 OBJECT IDENTIFIER ::= { basisLines 4 }
dsx3Config           OBJECT IDENTIFIER ::= { dsx3Line 1 }
dsx3AlarmConfig      OBJECT IDENTIFIER ::= { dsx3Line 2 }
dsx3Alarm            OBJECT IDENTIFIER ::= { dsx3Line 3 }
dsx3Counter          OBJECT IDENTIFIER ::= { dsx3Line 4 }
-- --------------------------------------------------------------
-- 
-- dsx3Config group
-- This group contains dsx3 line configuration table
-- 
-- --------------------------------------------------------------
	dsx3ConfigTable OBJECT-TYPE
		SYNTAX	SEQUENCE OF DSX3ConfigEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"The DS3/E3 Configuration table. There is one row for each
			 DSX3 port in the BASIS system. The table size (number of 
			 rows) is given by the value of dsx3LineNumOfValidEntries."
		::= { dsx3Config 1 }

	dsx3ConfigEntry OBJECT-TYPE
		SYNTAX	DSX3ConfigEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"An entry in the DSX3 Configuration table."
		INDEX	{ dsx3LineNum }
		::= { dsx3ConfigTable 1 }

	DSX3ConfigEntry ::=
		SEQUENCE {
			dsx3LineNum               INTEGER,
			dsx3LineType              INTEGER,
			dsx3LineCoding            INTEGER,
			dsx3LineLength            INTEGER,
			dsx3LineOOFCriteria       INTEGER,
			dsx3LineAIScBitsCheck     INTEGER,
			dsx3LineLoopbackCommand   INTEGER,
			dsx3LineRcvFEACValidation INTEGER,
			dsx3LineXmtFEACCode       INTEGER,
			dsx3LineBERTEnable        INTEGER,
			dsx3LineBERTPattern       INTEGER,
			dsx3LineBERTResult        INTEGER,
			dsx3BERTResultClrButton   INTEGER,
			dsx3TrailTraceOption	  INTEGER,
			dsx3TxTrailTrace          DisplayString,
			dsx3RxTrailTrace   	  DisplayString,
			dsx3TxTimingMarker   	  INTEGER,
			dsx3RxTimingMarker	  INTEGER,
			dsx3TxPayloadType         INTEGER,
			dsx3RxPayloadType         INTEGER,
			dsx3TxTumf                INTEGER,
			dsx3RxTumf	          INTEGER
         		}

	dsx3LineNum OBJECT-TYPE
		SYNTAX	INTEGER (1..3)
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This object is the identifier of a DS3/E3
			 Interface on a managed device."
		::= { dsx3ConfigEntry 1 }

	dsx3LineType OBJECT-TYPE
		SYNTAX  INTEGER {
				dsx3CbitParity(1),
				g832-g804(2)
				}
		ACCESS  read-only
		STATUS  mandatory
		DESCRIPTION
			"This variable indicates the variety of DS3 C-bit
          		 or E3 application implementing this interface.
			 The type of interface affects the interpretation
			 of the usage and error statistics. The rate of DS3
			 is 44.736 Mbps and E3 is 34.368 Mbps.
			 The dsx3ClearChannel value means that the C-bits
          		 are not used except for sending/receiving AIS.

			 The values, in sequence, describe:
			 TITLE:            			SPECIFICATION:
			 dsx3CbitParity     			ANSI T1.107a-1989.
			 Transport of SDH elements 
			 on PDH networks		    	ITU-T  G.832
			 ATM cell mapping into PDH		ITU-T  G.804"
		::= { dsx3ConfigEntry 2 }

	dsx3LineCoding OBJECT-TYPE
		SYNTAX  INTEGER {
				dsx3B3ZS(1),
				e3HDB3(2)
			}
		ACCESS  read-write
		STATUS  mandatory
		DESCRIPTION
			"This variable describes the variety of Zero Code
			 Suppression used on this interface, which in turn
			 affects a number of its characteristics.

			 dsx3B3ZS and e3HDB3 refer to the use of specified
			 patterns of normal bits and bipolar violations
			 which are used to replace sequences of zero bits
			 of a specified length."
		::= { dsx3ConfigEntry 3 }

	dsx3LineLength OBJECT-TYPE
		SYNTAX  INTEGER {
				lessThan450(1),
				moreThan450(2)
			}
		ACCESS read-write
		STATUS mandatory
		DESCRIPTION
			"This is not a standard RFC 1407 DS3 variable, it is
			 specific to BASIS implementation. This object specifies
			 the length of the Line Interface Unit (LIU) buildout."
		::= { dsx3ConfigEntry 4 }

	dsx3LineOOFCriteria OBJECT-TYPE
		SYNTAX	INTEGER {
				fBits3Of8 (1),
				fBits3Of16 (2)
			}
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"This entry specifies the out of frame decision criteria.
			 If fBits3Of8 is specified then an OOF condition is declared if
			 at least 3 of 8 framing bits are in error. When fBits3Of16 is 
			 specified then OOF is declared if 3 of 16 farming bits are found
			 to be in error.
			 This object does not apply to G.832 framing. 
			 OOF is declared when errors are detected in  the framing
			 octets for four consequitive frames,SUNI-PDH declares OOF defect.
			"

		::= { dsx3ConfigEntry 5 }

	dsx3LineAIScBitsCheck OBJECT-TYPE
		SYNTAX	INTEGER {
				checkCbits(1),
				ignorebits(2)
			}
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"If check C-Bits options is chosen then AIS is declared
			 when 1010 pattern is found and C-Bits are all zero. 
			 In the other case an AIS condition is declared when the
			 AIS pattern 1010... is detecetd irrespective of the state
			 of the C Bits.
			 Does not apply to the E3 interface"
		::= { dsx3ConfigEntry 6 }

	dsx3LineLoopbackCommand OBJECT-TYPE
		SYNTAX  INTEGER {
				dsx3NoLoop(1),
				dsx3RemoteLineLoop(2),
				dsx3LocalLineLoop(3)
			}
                 ACCESS  read-write
                 STATUS  mandatory
                 DESCRIPTION
			"This variable represents the loopback configuration
			 of the DS3/E3 interface.

			 The values mean:

			 dsx3NoLoop
				Not in the loopback state.  A device that is
				not capable of performing a loopback on
				the interface shall always return this as
				it's value.

			 dsx3RemoteLineLoop
            Near End loops back Remote data

			 dsx3LocalLineLoop
            Near End loops back Local data."

		::= { dsx3ConfigEntry 7 }

	dsx3LineRcvFEACValidation OBJECT-TYPE
		SYNTAX INTEGER
		      {
				fFEACCodes4Of5 (1),
				fFEACCodes8Of10 (2)
                      }
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"This entry specifies the FEAC code validation criteria.
			 If fFEACCodes4Of5 is specified then a valid FEAC code is declared if
			 4 of 5 codes match. When fFEACCodes8Of10 is specified then a valid
			 FEAC code is declared when 8 of 10 codes match.
			 Does not apply to the E3 interface"
		::= { dsx3ConfigEntry 8 }

	dsx3LineXmtFEACCode OBJECT-TYPE
		SYNTAX  INTEGER {
				dsx3SendNoCode(1),
				dsx3SendLineCode(2),
				dsx3SendPayloadCode(3),
				dsx3SendResetCode(4),
                                dsx3SendDS1LoopCode(5),
                                dsx3SendTestPattern(6)
			}
		ACCESS  read-write
		STATUS  mandatory
		DESCRIPTION
			"This variable indicates what bit-oriented code to transmitted
			 over the far-end alarm and control (FEAC) channel.
			 The values mean:

			 dsx3SendNoCode
				sending looped or normal data

			 dsx3SendLineCode
				sending a request for a line loopback

			 dsx3SendPayloadCode
				sending a request for a payload loopback
				(i.e., all DS1/E1s in a DS3/E3 frame)

                         dsx3SendResetCode
				sending a loopback deactivation request.

                         dsx3SendDS1LoopCode
				sending a request to put part of DS1/E1 within
                                T3/E3 respectively into loopback.

                         dsx3SendTestPattern
				sending a test pattern."

		::= { dsx3ConfigEntry 9 }

	dsx3LineBERTEnable OBJECT-TYPE
		SYNTAX  INTEGER {
				disabled(1),
				enabled(2)
                                }
		ACCESS  read-write
		STATUS  mandatory
		DESCRIPTION
			"This variable turns the port BERT function ON/OFF. When turned
			 ON, a test bit pattern as specified by dsx3LineBERTPattern
			 (see below) is transmitted over the interface. The far end may be
			 looped back and the test pattern verified. The result is available
			 in dsx3LineBERTResult (see below)."
		::= { dsx3ConfigEntry 10 }

	dsx3LineBERTPattern OBJECT-TYPE
		SYNTAX  INTEGER {
                                allZero(1),
                                allOnes(2),
                                alternateOneZero(3),
                                doubleOneZero(4),
                                userOneWord(5),
                                userTwoWords(6),
                                userThreeWords(7),
                                userFourWords(8),
                                pattern2p15minus1(9),
                                pattern2p20minus1(10),
                                pattern2p23minus1(11)
                                }
		ACCESS  read-write
		STATUS  mandatory
		DESCRIPTION
			"This variable defines the test bit pattern to be used for BERT."
		::= { dsx3ConfigEntry 11 }

	dsx3LineBERTResult OBJECT-TYPE
		SYNTAX	INTEGER {
				bertFailed(1),
				bertPassed(2)
				}
		ACCESS  read-only
      		STATUS  mandatory
       		DESCRIPTION 	"Result of BERT Test."
		::= { dsx3ConfigEntry 12 }

  dsx3BERTResultClrButton OBJECT-TYPE
      SYNTAX INTEGER {
                      noAction(1),
                      clear(2)
                     }
      ACCESS	write-only
      STATUS	mandatory
      DESCRIPTION
                     "Setting this object to bertResultClear causes the BERT
                      result field to get cleared."
                ::= { dsx3ConfigEntry 13 }
-- 
--	The following are the E3 specific configuration parameters
--

  dsx3TrailTraceOption  OBJECT-TYPE
      SYNTAX INTEGER {
                      disable(1),
                      enable(2)
                     }
      ACCESS	read-write
      STATUS	mandatory
      DESCRIPTION
		 "G.832 Trail Trace Option. This is used to repetitively transmit
		  a trail access point identifier so that a trail receiving terminal
		  can verify its continued connection to the intended transimitter.
		 It uses a 16-byte numbering format (see Rec E.164). The first byte
		 of the string ia a frame start marker and includes the result of a
		 CRC-7 calculation over the previous frame. Note that SUNI-PDH does
   		 not compute or check the CRC-7 over the previos frame"
                ::= { dsx3ConfigEntry 14 } 	   
--
--      
  dsx3TxTrailTrace OBJECT-TYPE
      SYNTAX  DisplayString (SIZE (1..15))
      ACCESS	read-write
      STATUS	mandatory
      DESCRIPTION
                 "Transmitted G.832 Trail Trace string. CRC-7 must be calculated
		  by BNM FW.
		 "
                ::= { dsx3ConfigEntry 15 }

  dsx3RxTrailTrace OBJECT-TYPE
      SYNTAX  DisplayString (SIZE (1..15))
      ACCESS	read-only
      STATUS	mandatory
      DESCRIPTION
                 "Received G.832 Trail Trace string. First byte indicates CRC-7.
		  16 nulls indicates bad CRC-7.
		 "
                ::= { dsx3ConfigEntry 16 }

 dsx3TxTimingMarker OBJECT-TYPE
      SYNTAX INTEGER {
                      traceable(1),
                      untraceable(2)
                     }
      ACCESS	read-write
      STATUS	mandatory
      DESCRIPTION
                "
  		Transmitted MA marker bit in G.832 MA byte. This is set to 0
		to indicate that the timing source is tracable to a primary
		reference clock and is otherwise set to 1
		"
                ::= { dsx3ConfigEntry 17 }

 dsx3RxTimingMarker OBJECT-TYPE
      SYNTAX INTEGER {
                      traceable(1),
                      untraceable(2)
                     }
      ACCESS	read-write
      STATUS	mandatory
      DESCRIPTION
                "
  		Received MA marker bit in G.832 MA byte. This is set to 0
		to indicate that the timing source is tracable to a primary
		reference clock and is otherwise set to 1
		"		
                ::= { dsx3ConfigEntry 18 }

 dsx3TxPayloadType OBJECT-TYPE
      SYNTAX INTEGER {
		unequipped(1),
		equipped(2),
		atm(3),
		sdhtu12s(4)
		}
      ACCESS	read-write
      STATUS	mandatory
      DESCRIPTION
                "
		Transmitted payload type field in G.832 byte
		"
                ::= { dsx3ConfigEntry 19 }

 dsx3RxPayloadType OBJECT-TYPE
      SYNTAX INTEGER {
		unequipped(1),
		equipped(2),
		atm(3),
		sdhtu12s(4)
		}
      ACCESS	read-only
      STATUS	mandatory
      DESCRIPTION
                "
		Received payload type field in G.832 byte
		"
                ::= { dsx3ConfigEntry 20 }

 dsx3TxTumf OBJECT-TYPE
	SYNTAX	INTEGER (0..3)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		  " Tx G.832 Tributary Multiframe Indicator
		 "
                ::= { dsx3ConfigEntry 21 }

 dsx3RxTumf OBJECT-TYPE
	SYNTAX	INTEGER (0..3)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		  " Rx G.832 Tributary Multiframe Indicator
		 "
                ::= { dsx3ConfigEntry 22 }


	dsx3LineNumOfValidEntries OBJECT-TYPE
		SYNTAX	INTEGER
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"The number of DSX3 configuration entries (regardless
			 of their current configuration) in the dsx3ConfigTable."
		::= { dsx3Config 2 }

-- --------------------------------------------------------------
--
-- dsx3AlarmConfig group
--
-- --------------------------------------------------------------
	dsx3AlarmConfigTable OBJECT-TYPE
		SYNTAX	SEQUENCE OF DSX3AlarmConfigEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"The DSX3 interface alarm configuration table. This table contains
			 the parameters associated with detecting and declaring alarms for
			 the interface. The parameters include severity of alarm, alarm
			 integration parameters and 15 minute and 24 hour thresholds. 
			 The number of rows is given by dsx3LineNumOfValidEntries."
		::= { dsx3AlarmConfig 1 }

	dsx3AlarmConfigEntry OBJECT-TYPE
		SYNTAX			DSX3AlarmConfigEntry
		ACCESS  			not-accessible
		STATUS  			mandatory
		DESCRIPTION 	"An entry in the DS3 Alarm Configuration table"
		INDEX	{ dsx3LineNum }
		::= { dsx3AlarmConfigTable 1 }

	DSX3AlarmConfigEntry ::=
		SEQUENCE {
			dsx3RedSeverity     	               INTEGER,
			dsx3RAISeverity	                       INTEGER,
       	                dsx3NEAlarmUpCount   	            INTEGER,
			dsx3NEAlarmDownCount                INTEGER,
			dsx3NEAlarmThreshold                INTEGER,
			dsx3FEAlarmUpCount                  INTEGER,
			dsx3FEAlarmDownCount                INTEGER,
			dsx3FEAlarmThreshold                INTEGER,
         		dsx3StatisticalAlarmSeverity        INTEGER,
			dsx3LCV15MinThreshold               INTEGER,
         		dsx3LCV24HrThreshold                INTEGER,
			dsx3LES15MinThreshold               INTEGER,
         		dsx3LES24HrThreshold                INTEGER,
			dsx3LSES15MinThreshold              INTEGER,
         		dsx3LSES24HrThreshold               INTEGER,
			dsx3PCV15MinThreshold               INTEGER,
         		dsx3PCV24HrThreshold                INTEGER,
			dsx3PES15MinThreshold               INTEGER,
         		dsx3PES24HrThreshold                INTEGER,
			dsx3PSES15MinThreshold              INTEGER,
         		dsx3PSES24HrThreshold               INTEGER,
			dsx3SEFS15MinThreshold              INTEGER,
         		dsx3SEFS24HrThreshold               INTEGER,
			dsx3AISS15MinThreshold              INTEGER,
         		dsx3AISS24HrThreshold               INTEGER,
			dsx3UAS15MinThreshold               INTEGER,
         		dsx3UAS24HrThreshold                INTEGER,
         		dsx3E3BIP8CV15MinThreshold               INTEGER,
         		dsx3E3BIP8CV24HrThreshold            INTEGER,
         		dsx3E3BIP8ES15MinThreshold               INTEGER,
         		dsx3E3BIP8ES24HrThreshold            INTEGER,
         		dsx3E3BIP8SES15MinThreshold               INTEGER,
         		dsx3E3BIP8SES24HrThreshold            INTEGER
         }

	dsx3RedSeverity OBJECT-TYPE
		SYNTAX	INTEGER {
				minor(1),
				major(2)
			}
		ACCESS	read-write
		STATUS  mandatory
		DESCRIPTION
			"This variable is used to setup the severity of RED
			 alarm. So when LOS/LOF alarm is detected the BNM will
			 send the alarm with appropriate severity status.
			 A major alarm will cause audible notification
			 and the MAJOR ALARM LED will be turned ON.
			 A minor alarm will just turn on the MINOR ALARM LED.
			"
		::= { dsx3AlarmConfigEntry 1 }

	dsx3RAISeverity OBJECT-TYPE
		SYNTAX	INTEGER {
				minor(1),
				major(2)
			}
		ACCESS	read-write
		STATUS  mandatory
		DESCRIPTION
			"This variable is used to setup the severity of RAI
			 alarm. So when RAI alarm is detected the BNM will
			 send the alarm with appropriate severity status.
			 A major alarm will cause the audible notification
			 and the MAJOR ALARM LED will be turned ON.
			 A minor alarm will just turn on the MINOR ALARM LED.
			"
		::= { dsx3AlarmConfigEntry 2 }

	dsx3NEAlarmUpCount OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"This parameter specifies the increment to the Near End alarm
			 integration counters. The local alarms are LOS and LOF. The
			 Default value is 6 and the integration counter is incremented by
			 this value every 10 ms while the alarm persists. The
			 counter is decremented by the value of dsx3NEAlarmDnCount
			 while there is no alarm (the counter does not decrement below
			 zero). When the integration counter exceeds dsx3NEAlarmThreshold
			 an Alarm of the severity specified for the particular NE alarm is
			 declared."
		::= { dsx3AlarmConfigEntry 3 }

	dsx3NEAlarmDownCount OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"This parameter specifies the decrement to the Near End alarm
			 integration counters. The local alarms are LOS and LOF. The
			 Default value is 1 and the integration counter is decremented by
			 this value every 10 ms while no alarm persists. The
			 counter is incremented by the value of dsx3NEAlarmUpCount
			 while there is no alarm (the counter does not decrement below
			 zero). When the integration counter reaches zero any Alarm
			 previously declared	is removed."
		::= { dsx3AlarmConfigEntry 4 }

	dsx3NEAlarmThreshold OBJECT-TYPE
		SYNTAX  		INTEGER (0..'FFFFFFFF'h)
      ACCESS  		read-write
      STATUS  		mandatory
      DESCRIPTION	
			"The value set in this object determines the value that
			 the alarm integration counter must reach for an near end
			 Alarm to be declared. If the up count is 6, the down count
			 is 1 and the threshold 1500, an Alarm is integrated in 
			 2.5 sec and removed in 15 seconds."
		::= { dsx3AlarmConfigEntry 5 }

	dsx3FEAlarmUpCount OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"This parameter specifies the increment to the Far End alarm
			 integration counters. The local alarms are RAI and AIS. The
			 Default value is 6 and the integration counter is incremented by
			 this value every 10 ms while the alarm persists. The
			 counter is decremented by the value of dsx3FEAlarmDnCount
			 while there is no alarm (the counter does not decrement below
			 zero). When the integration counter exceeds dsx3FEAlarmThreshold
			 an Alarm of the severity specified for the particular far end
			 alarm is declared."
		::= { dsx3AlarmConfigEntry 6 }

	dsx3FEAlarmDownCount OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"This parameter specifies the decrement to the Far End alarm
			 integration counters. The local alarms are AIS and RAI. The
			 Default value is 1. The integration counter is decremented by
			 this value every 10 ms (till zero), while no alarm persists. The
			 counter is incremented by the value of dsx3FEAlarmUpCount
			 while there is no alarm.
			 When the integration counter decrements to zero any previously
			 declared Alarm is removed."
		::= { dsx3AlarmConfigEntry 7 }

	dsx3FEAlarmThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value that
			 the alarm integration counter must reach for an far end
			 Alarm to be declared. If the up count is 6, the down count
			 is 1 and the threshold 1500, an Alarm is integrated in 
			 2.5 sec and removed in 15 seconds."
		::= { dsx3AlarmConfigEntry 8 }

	dsx3StatisticalAlarmSeverity OBJECT-TYPE
		SYNTAX	INTEGER {
				minor(1),
				major(2)
			}
		ACCESS	read-write
		STATUS  mandatory
		DESCRIPTION
			"This variable is used to setup the severity of any of the
			 Statistical alarms. So when a Statistical Counter exceeds its
			 specified threshold the AUM will send the alarm with appropriate
			 severity. A major alarm will cause the audible notification
			 and the MAJOR ALARM LED will be turned ON.
			 A minor alarm will just turn on the MINOR ALARM LED.
			"
		::= { dsx3AlarmConfigEntry 9 }

	dsx3LCV15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
          a statistical alarm to be declared."
		::= { dsx3AlarmConfigEntry 10 }

	dsx3LCV24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
          a statistical alarm to be declared. The threshold is
          checked every 15 minutes for the preceding 24 hour interval"
		::= { dsx3AlarmConfigEntry 11 }

	dsx3LES15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
          a statistical alarm to be declared."
		::= { dsx3AlarmConfigEntry 12 }

	dsx3LES24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
          a statistical alarm to be declared. The threshold is
          checked every 15 minutes for the preceding 24 hour interval"

		::= { dsx3AlarmConfigEntry 13 }

	dsx3LSES15MinThreshold OBJECT-TYPE
	SYNTAX  INTEGER (0..'FFFFFFFF'h)
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
          a statistical alarm to be declared."
		::= { dsx3AlarmConfigEntry 14 }

	dsx3LSES24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
          a statistical alarm to be declared. The threshold is
          checked every 15 minutes for the preceding 24 hour interval"

		::= { dsx3AlarmConfigEntry 15 }

	dsx3PCV15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
          		a statistical alarm to be declared.
			Not for E3."
		::= { dsx3AlarmConfigEntry 16 }

	dsx3PCV24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
         		 a statistical alarm to be declared. The threshold is
          		checked every 15 minutes for the preceding 24 hour interval
			Not for E3."
		::= { dsx3AlarmConfigEntry 17 }

	dsx3PES15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
          		a statistical alarm to be declared.
			Not for E3."
		::= { dsx3AlarmConfigEntry 18 }

	dsx3PES24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
          		a statistical alarm to be declared. The threshold is
          		checked every 15 minutes for the preceding 24 hour interval.
			Not for E3."
		::= { dsx3AlarmConfigEntry 19 }

	dsx3PSES15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
          		a statistical alarm to be declared.
			Not for E3."
		::= { dsx3AlarmConfigEntry 20 }

	dsx3PSES24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
          		a statistical alarm to be declared. The threshold is
          		checked every 15 minutes for the preceding 24 hour interval.
			Not for E3."

		::= { dsx3AlarmConfigEntry 21 }

	dsx3SEFS15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
          a statistical alarm to be declared."
		::= { dsx3AlarmConfigEntry 22 }

	dsx3SEFS24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
          a statistical alarm to be declared. The threshold is
          checked every 15 minutes for the preceding 24 hour interval"
		::= { dsx3AlarmConfigEntry 23 }

	dsx3AISS15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
          a statistical alarm to be declared."
		::= { dsx3AlarmConfigEntry 24 }

	dsx3AISS24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
          a statistical alarm to be declared. The threshold is
          checked every 15 minutes for the preceding 24 hour interval"
		::= { dsx3AlarmConfigEntry 25 }

	dsx3UAS15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
          a statistical alarm to be declared."
		::= { dsx3AlarmConfigEntry 26 }

	dsx3UAS24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
          a statistical alarm to be declared. The threshold is
          checked every 15 minutes for the preceding 24 hour interval"
		::= { dsx3AlarmConfigEntry 27 }

	dsx3E3BIP8CV15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"G.832 BIP-8 error monitoring byte. 15 minute
			threshold value."
		::= { dsx3AlarmConfigEntry 28 }

	dsx3E3BIP8CV24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"G.832 BIP-8 error monitoring byte. 24 hour
			threshold value."
		::= { dsx3AlarmConfigEntry 29 }	

	dsx3E3BIP8ES15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"G.832 BIP-8 error monitoring byte. 15 minute
			threshold value."
		::= { dsx3AlarmConfigEntry 30 }

	dsx3E3BIP8ES24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"G.832 BIP-8 error monitoring byte. 24 hour
			threshold value."
		::= { dsx3AlarmConfigEntry 31 }	

	dsx3E3BIP8SES15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"G.832 BIP-8 error monitoring byte. 15 minute
			threshold value."
		::= { dsx3AlarmConfigEntry 32 }

	dsx3E3BIP8SES24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"G.832 BIP-8 error monitoring byte. 24 hour
			threshold value."
		::= { dsx3AlarmConfigEntry 33 }	
-- --------------------------------------------------------------
-- 
-- dsx3Alarm group
-- This group contains dsx3 Alarm table
-- 
-- --------------------------------------------------------------
	dsx3AlarmTable OBJECT-TYPE
		SYNTAX	SEQUENCE OF DS3AlarmEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"The DSX3 interface alarm table.
			 The size of this table is given by the value of dsx3LineNum"
		::= { dsx3Alarm 1 }

	dsx3AlarmEntry OBJECT-TYPE
		SYNTAX	DS3AlarmEntry
		ACCESS  not-accessible
		STATUS  mandatory
		DESCRIPTION
			"An entry in the DSX3 Alarm table uses dsx3LineNum
			 and table size is given by dsx3LineNumOfValidEntries."
		INDEX	{ dsx3LineNum }
		::= { dsx3AlarmTable 1 }

	DS3AlarmEntry ::=
		SEQUENCE {
			dsx3LineAlarmState     	        INTEGER,
			dsx3LineStatisticalAlarmState   INTEGER,
			dsx3LCVCurrent                  Counter,
			dsx3LCV15MinBucket              Counter,
         		dsx3LCV24HrBucket               Counter,
			dsx3LESCurrent                  Counter,
			dsx3LES15MinBucket              Counter,
         		dsx3LES24HrBucket               Counter,
			dsx3LSESCurrent                 Counter,
			dsx3LSES15MinBucket             Counter,
         		dsx3LSES24HrBucket              Counter,
			dsx3PCVCurrent                  Counter,
			dsx3PCV15MinBucket              Counter,
         		dsx3PCV24HrBucket               Counter,
			dsx3PESCurrent                  Counter,
			dsx3PES15MinBucket              Counter,
         		dsx3PES24HrBucket               Counter,
			dsx3PSESCurrent                 Counter,
			dsx3PSES15MinBucket             Counter,
         		dsx3PSES24HrBucket              Counter,
			dsx3SEFSCurrent                 Counter,
			dsx3SEFS15MinBucket             Counter,
         		dsx3SEFS24HrBucket              Counter,
			dsx3AISSCurrent                 Counter,
			dsx3AISS15MinBucket             Counter,
         		dsx3AISS24HrBucket              Counter,
			dsx3UASCurrent                  Counter,
			dsx3UAS15MinBucket              Counter,
         		dsx3UAS24HrBucket               Counter,
			dsx3PercentLcvEFS               INTEGER,
			dsx3E3BIP8CVCurrent		Counter,
			dsx3E3BIP8CV15MinBucket		Counter,
			dsx3E3BIP8CV24HrBucket		Counter,
			dsx3E3BIP8ESCurrent		Counter,
			dsx3E3BIP8ES15MinBucket		Counter,
			dsx3E3BIP8ES24HrBucket		Counter,
			dsx3E3BIP8SESCurrent		Counter,
			dsx3E3BIP8SES15MinBucket	Counter,
			dsx3E3BIP8SES24HrBucket		Counter,
         		dsx3LineAlarmClrButton          INTEGER
                	}

	   dsx3LineAlarmState OBJECT-TYPE
		SYNTAX	INTEGER (0..511)
		ACCESS	read-only
		STATUS  mandatory
		DESCRIPTION
			"This variable is a bitmap of the DSX3 Line ALarms
          on the AUM. A value of zero indicates no alarms.
          Itemized below are the individual bits:
          BitPosition    Alarm
          -----------    -----
          0              Receiving RAI
          1              Transmitting RAI
          2              Receiving AIS
          3              Transmitting AIS
          4              Receiving OOF
          5              Receiving LOS
          6              Near End Local Loopback in effect
          7              Near End Remote Loopback in effect
          8              Receiving test pattern
			"
		::= { dsx3AlarmEntry 1 }

	dsx3LineStatisticalAlarmState OBJECT-TYPE
		SYNTAX	INTEGER
		ACCESS	read-only
		STATUS  mandatory
		DESCRIPTION
			"This is a bitmap of the DSX3 Line Statistical
          Alarms on the AUM. Zero indicates no alarms.
          Itemized below are the individual alarm bits:
          BitPosition    Alarm
          -----------    -----
          0              LCV 15 minute threshold exceeded
          1              LCV 24 hour threshold exceeded
          2              LES 15 minute threshold exceeded
          3              LES 24 hour threshold exceeded
          4              LSES 15 minute threshold exceeded
          5              LSES 24 hour threshold exceeded
          6              PCV 15 minute threshold exceeded
          7              PCV 24 hour threshold exceeded
          8              PES 15 minute threshold exceeded
          9              PES 24 hour threshold exceeded
          10             PSES 15 minute threshold exceeded
          11             PSES 24 hour threshold exceeded
          12             SEFS 15 minute threshold exceeded
          13             SEFS 24 hour threshold exceeded
          14             AISS 15 minute threshold exceeded
          15             AISS 24 hour threshold exceeded
          16             UAS 15 minute threshold exceeded
          17             UAS 24 hour threshold exceeded
          18             BIP8CV/G.832 15 minute threshold exceeded
          19             BIP8CV/G.832 24 hour threshold exceeded
          20             BIP8ES/G.832 15 minute threshold exceeded
          21             BIP8ES/G.832 24 hour threshold exceeded
          22             BIP8SES/G.832 15 minute threshold exceeded
          23             BIP8SES/G.832 24 hour threshold exceeded
		"
		::= { dsx3AlarmEntry 2 }

      dsx3LCVCurrent      OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Line code violations encountered by the interface."
		::= { dsx3AlarmEntry 3 }

      dsx3LCV15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"The counter associated with the number of 
          Line code violations in the last 15 minute period 
			 encountered by the interface."
		::= { dsx3AlarmEntry 4 }

      dsx3LCV24HrBucket   OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"The counter associated with the number of 
          Line code violations in the last 24 hour period 
			 encountered by the interface."
		::= { dsx3AlarmEntry 5 }

      dsx3LESCurrent      OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Line code violations Errored Seconds
          encountered by the interface."
		::= { dsx3AlarmEntry 6 }

      dsx3LES15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Line code violations Errored Seconds in the last 15 minutes
          encountered by the interface."
		::= { dsx3AlarmEntry 7}

      dsx3LES24HrBucket   OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Line code violations Errored Seconds in the last 24 hours
          encountered by the interface."
		::= { dsx3AlarmEntry 8 }

      dsx3LSESCurrent     OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Line code violations Severely Errored Seconds
          encountered by the interface."
		::= { dsx3AlarmEntry 9 }

      dsx3LSES15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          LCV Severely Errored Seconds in the last 15 minutes
          encountered by the interface."
		::= { dsx3AlarmEntry 10 }

      dsx3LSES24HrBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          LCV Severely Errored Seconds in the last 24 hours
          encountered by the interface."
		::= { dsx3AlarmEntry 11 }

      dsx3PCVCurrent    OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          P Bit code violations 
          encountered by the interface."
		::= { dsx3AlarmEntry 12 }

      dsx3PCV15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          P Bit code violations in the last 15 minutes
          encountered by the interface."
		::= { dsx3AlarmEntry 13 }

      dsx3PCV24HrBucket   OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          P Bit code violations in the last 24 hours
          encountered by the interface."
		::= { dsx3AlarmEntry 14 }

      dsx3PESCurrent      OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          PCV Errored Seconds 
          encountered by the interface."
		::= { dsx3AlarmEntry 15 }

      dsx3PES15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          PCV Errored Seconds in the last 15 minutes
          encountered by the interface."
		::= { dsx3AlarmEntry 16 }

      dsx3PES24HrBucket   OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          PCV Errored Seconds in the last 24 hours
          encountered by the interface."
		::= { dsx3AlarmEntry 17 }

      dsx3PSESCurrent     OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          P Bit code violations Severely Errored Seconds
          encountered by the interface."
		::= { dsx3AlarmEntry 18 }

      dsx3PSES15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          PCV Severely Errored Seconds in the last 15 minutes
          encountered by the interface."
		::= { dsx3AlarmEntry 19 }

      dsx3PSES24HrBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          PCV Severely Errored Seconds in the last 24 hours
          encountered by the interface."
		::= { dsx3AlarmEntry 20 }

      dsx3SEFSCurrent     OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Severely Errored Framing Seconds
          encountered by the interface."
		::= { dsx3AlarmEntry 21 }

      dsx3SEFS15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Severely Errored Framing Seconds in the last 15 minutes
          encountered by the interface."
		::= { dsx3AlarmEntry 22 }

      dsx3SEFS24HrBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Severely Errored Framing Seconds in the last 24 hours
          encountered by the interface."
		::= { dsx3AlarmEntry 23 }

      dsx3AISSCurrent     OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          AIS Severely Errored Seconds
          encountered by the interface."
		::= { dsx3AlarmEntry 24 }

      dsx3AISS15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          AIS Severely Errored Seconds in the last 15 minutes
          encountered by the interface."
		::= { dsx3AlarmEntry 25 }

      dsx3AISS24HrBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          AIS Severely Errored Seconds in the last 24 hours
          encountered by the interface."
		::= { dsx3AlarmEntry 26 }

      dsx3UASCurrent      OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Unavailable Seconds
          encountered by the interface."
		::= { dsx3AlarmEntry 27 }

      dsx3UAS15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Unavailable Seconds in the last 15 minutes
          encountered by the interface."
		::= { dsx3AlarmEntry 28 }

      dsx3UAS24HrBucket   OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Unavailable Seconds in the last 24 hours
          encountered by the interface."
		::= { dsx3AlarmEntry 29 }

      dsx3PercentLcvEFS   OBJECT-TYPE
		SYNTAX	INTEGER
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This object gives the percentage of 
          seconds without any LCV Errors in the
			 total elapsed seconds."
		::= { dsx3AlarmEntry 30 }

	dsx3E3BIP8CVCurrent  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"G.832 BIP-8 error monitoring byte, current reading"
		::= { dsx3AlarmEntry 31 }

	dsx3E3BIP8CV15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"G.832 BIP-8 error monitoring byte, 15 minute reading"
		::= { dsx3AlarmEntry 32 }

	dsx3E3BIP8CV24HrBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"G.832 BIP-8 error monitoring byte, 24 hr reading"
		::= { dsx3AlarmEntry 33 }

	dsx3E3BIP8ESCurrent  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"G.832 BIP-8 error monitoring byte, current reading"
		::= { dsx3AlarmEntry 34 }

	dsx3E3BIP8ES15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"G.832 BIP-8 error monitoring byte, 15 minute reading"
		::= { dsx3AlarmEntry 35 }

	dsx3E3BIP8ES24HrBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"G.832 BIP-8 error monitoring byte, 24 hr reading"
		::= { dsx3AlarmEntry 36 }

	dsx3E3BIP8SESCurrent  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"G.832 BIP-8 error monitoring byte, current reading"
		::= { dsx3AlarmEntry 37 }

	dsx3E3BIP8SES15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"G.832 BIP-8 error monitoring byte, 15 minute reading"
		::= { dsx3AlarmEntry 38 }

	dsx3E3BIP8SES24HrBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"G.832 BIP-8 error monitoring byte, 24 hr reading"
		::= { dsx3AlarmEntry 39 }

      dsx3LineAlarmClrButton OBJECT-TYPE
      SYNTAX  INTEGER {
                      noAction(1),
                      clear(2)
                      }
      ACCESS  write-only
      STATUS  mandatory
      DESCRIPTION
         "Setting this object to dsx3LineAlarmClear will
          cause all the alarms statuses and counters to reset."
      ::= {dsx3AlarmEntry 40 }

-- --------------------------------------------------------------
--
-- Group "dsx3Counters"
--
-- --------------------------------------------------------------

   dsx3CounterTable OBJECT-TYPE
		SYNTAX	SEQUENCE OF DSX3CounterEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"DS3 Counter table. The table size is given by
			 the value of dsx3LineNumOfValidEntries and uses dsx3LineNum
			 as index."
		::= { dsx3Counter 1 }

	dsx3CounterEntry OBJECT-TYPE
		SYNTAX  DSX3CounterEntry
		ACCESS  not-accessible
		STATUS  mandatory
		DESCRIPTION "an entry in the dsx3 counters table."
		INDEX	{ dsx3LineNum }
		::= { dsx3CounterTable 1 }

	DSX3CounterEntry ::=
		SEQUENCE {
		dsx3RcvLOSCount Counter,
		dsx3RcvOOFCount Counter,
		dsx3RAICount Counter,
		dsx3CCVCount Counter,
		dsx3FECount Counter,
		dsx3AtmHECCount Counter,
		dsx3AtmHECSecCount Counter,
		dsx3AtmSEHECSecCount Counter,
                dsx3CounterClrButton INTEGER
     		}

	dsx3RcvLOSCount OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"The number of times the Loss of Signal was detected
			 with or without integrating to LOS alarm."
		::= { dsx3CounterEntry 1 }

	dsx3RcvOOFCount OBJECT-TYPE
      SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of times the Out of Frame was detected
			 with or without integrating to OOF alarm."
		::= { dsx3CounterEntry 2 }

	dsx3RAICount OBJECT-TYPE
      SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of times Yellow Alarms was detected with
			 or without integrating to RAI alarm."
		::= { dsx3CounterEntry 3 }

	dsx3CCVCount OBJECT-TYPE
		SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The counter associated with the number of C Bit
			 Coding Violations encountered by a DS3/E3 interface."
		::= { dsx3CounterEntry 4 }

	dsx3FECount OBJECT-TYPE
      SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of Framing Pattern Errors encountered by
			 a DS3/E3 interface."
		::= { dsx3CounterEntry 5 }

	dsx3AtmHECCount OBJECT-TYPE
      SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of HCS Errors."
		::= { dsx3CounterEntry 6 }

	dsx3AtmHECSecCount OBJECT-TYPE
		SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of HEC errored seconds."
		::= { dsx3CounterEntry 7 }

	dsx3AtmSEHECSecCount OBJECT-TYPE
      SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of Severely HEC error seconds."
		::= { dsx3CounterEntry 8 }

	dsx3CounterClrButton OBJECT-TYPE
      SYNTAX  INTEGER {
                      noAction(1),
                      clear (2)
                      }
      ACCESS  write-only
      STATUS  mandatory
      DESCRIPTION
			"This variable is used to clear all the counters."
		::= { dsx3CounterEntry 9 }

-- --------------------------------------------------------------
--
-- Group "PLCP"
-- This group standard within the scope of the BASIS system
--
-- --------------------------------------------------------------


	-- ATM Service definition
	-- basisServices object is imported from BASIS-MIB its

--	atm      		          OBJECT IDENTIFIER ::= { basisServices 2 }

-- dsx3Plcp                 OBJECT IDENTIFIER ::= { atm 2 }

	dsx3PlcpConfig 		    OBJECT IDENTIFIER ::= { dsx3Framing 1 }

	dsx3PlcpAlarmConfig      OBJECT IDENTIFIER ::= { dsx3Framing 2 }

	dsx3PlcpAlarm		       OBJECT IDENTIFIER ::= { dsx3Framing 3 }

	dsx3PlcpCounter		    OBJECT IDENTIFIER ::= { dsx3Framing 4 }
-- --------------------------------------------------------------
-- 
-- dsx3PlcpConfig group
-- This group contains dsx3Plcp configuration table
-- 
-- --------------------------------------------------------------
	dsx3PlcpConfigTable OBJECT-TYPE
		SYNTAX	SEQUENCE OF DSX3PlcpConfigEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"The DSX3 Plcp Configuration table. The table size is
			 given by the value of dsx3PlcpConfigTableNum."
		::= { dsx3PlcpConfig 1 }

	dsx3PlcpConfigEntry OBJECT-TYPE
		SYNTAX	DSX3PlcpConfigEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"An entry in the DSX3 Configuration table."
		INDEX	{ dsx3PlcpNum }
		::= { dsx3PlcpConfigTable 1 }

	DSX3PlcpConfigEntry ::=
		SEQUENCE {
			dsx3PlcpNum INTEGER,
			dsx3PlcpCellFraming INTEGER,
			dsx3PlcpPayloadScramble INTEGER,
			dsx3PlcpLoopCommand INTEGER
         		}

	dsx3PlcpNum OBJECT-TYPE
		SYNTAX	INTEGER (1..65535)
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This object is the identifier of a Interface on
          a managed device."
		::= { dsx3PlcpConfigEntry 1 }

	dsx3PlcpCellFraming OBJECT-TYPE
		SYNTAX	INTEGER {
                                framingByPlcp (1),
                                framingbyAtmHec (2)
				}
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"The value for this object sets the cell delineation
          method used by the interface."
		::= { dsx3PlcpConfigEntry 2 }

	dsx3PlcpPayloadScramble OBJECT-TYPE
		SYNTAX	INTEGER {
                        disableScrambling (2),
                        enableScrambling (1)
                       }
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"The value for this object sets the cell delineation
          method used by the interface."
		::= { dsx3PlcpConfigEntry 3 }

	dsx3PlcpLoopCommand OBJECT-TYPE
		SYNTAX	INTEGER {
                        noLoop (1),
                        remoteLineLoop (2),
                        localLineLoop (3)
                       }
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"specifies the type of loopback on the line
                        "
		::= { dsx3PlcpConfigEntry 4 }

	dsx3PlcpNumOfValidEntries OBJECT-TYPE
		SYNTAX  INTEGER (1..3)
		ACCESS  read-only
		STATUS  mandatory
		DESCRIPTION
			"This variable indicates the maximum number of entries
			 in this table."
		::= { dsx3PlcpConfig 2 }

-- --------------------------------------------------------------
--
-- dsx3PlcpAlarmConfig group
--
-- --------------------------------------------------------------
	dsx3PlcpAlarmConfigTable OBJECT-TYPE
		SYNTAX	SEQUENCE OF DSX3PlcpAlarmConfigEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"The ATM interface PLCP alarm configuration table. The 
			 size of table is given by the value of 
			 dsx3PlcpConfigTableNum."
		::= { dsx3PlcpAlarmConfig 1 }

	dsx3PlcpAlarmConfigEntry OBJECT-TYPE
		SYNTAX	DSX3PlcpAlarmConfigEntry
		ACCESS  not-accessible
		STATUS  mandatory
		DESCRIPTION
			"An entry in the DSX3 PLCP Alarm Configuration table"
		INDEX	{ dsx3PlcpNum }
		::= { dsx3PlcpAlarmConfigTable 1 }

	DSX3PlcpAlarmConfigEntry ::=
		SEQUENCE {
			dsx3PlcpRedSeverity              INTEGER,
			dsx3PlcpRAISeverity              INTEGER,
			dsx3PlcpLssSeverity              INTEGER,
       	dsx3PlcpLssEnable                INTEGER,
       	dsx3PlcpLssCodeConnected         INTEGER,
       	dsx3PlcpLssCodeRxLinkDn          INTEGER,
       	dsx3PlcpLssCodeRxLinkUp          INTEGER,
         dsx3PlcpStatisticalAlarmSeverity INTEGER,
			dsx3PlcpBip8CV15MinThreshold     INTEGER,
         dsx3PlcpBip8CV24HrThreshold      INTEGER,
			dsx3PlcpBip8ES15MinThreshold     INTEGER,
         dsx3PlcpBip8ES24HrThreshold      INTEGER,
			dsx3PlcpBip8SES15MinThreshold    INTEGER,
         dsx3PlcpBip8SES24HrThreshold     INTEGER,
			dsx3PlcpSEFS15MinThreshold       INTEGER,
         dsx3PlcpSEFS24HrThreshold        INTEGER,
			dsx3PlcpUAS15MinThreshold        INTEGER,
         dsx3PlcpUAS24HrThreshold         INTEGER
                	}

	dsx3PlcpRedSeverity OBJECT-TYPE
		SYNTAX	INTEGER {
				minor(1),
				major(2)
			}
		ACCESS	read-write
		STATUS  mandatory
		DESCRIPTION
			"This variable is used to setup the severity of PLCP RED
			 alarm. So when PLCP_OOF alarm is detected the AUM will
			 declare the alarm with appropriate severity status.
			 A major alarm will cause the audible notification
			 and the MAJOR ALARM LED will be turned ON.
			 A minor alarm will just turn on the MINOR ALARM LED."
		::= { dsx3PlcpAlarmConfigEntry 1 }

	dsx3PlcpRAISeverity OBJECT-TYPE
		SYNTAX	INTEGER {
				minor(1),
				major(2)
			}
		ACCESS	read-write
		STATUS  mandatory
		DESCRIPTION
			"This variable is used to setup the severity of PLCP RAI
			 alarm. So when PLCP RAI alarm is detected the AUM will
			 send the alarm with appropriate severity status.
			 A major alarm will cause the audible notification
			 and the MAJOR ALARM LED will be turned ON.
			 A minor alarm will just turn on the MINOR ALARM LED.
			"
		::= { dsx3PlcpAlarmConfigEntry 2 }

	dsx3PlcpLssSeverity OBJECT-TYPE
		SYNTAX	INTEGER {
				minor(1),
				major(2)
			}
		ACCESS	read-write
		STATUS  mandatory
		DESCRIPTION
			"This variable is used to setup the severity of PLCP RAI
			 alarm. So when PLCP LSS alarm is detected the AUM will
			 send the alarm with appropriate severity status.
			 A major alarm will cause the audible notification
			 and the MAJOR ALARM LED will be turned ON.
			 A minor alarm will just turn on the MINOR ALARM LED.
			"
		::= { dsx3PlcpAlarmConfigEntry 3 }

	dsx3PlcpLssEnable OBJECT-TYPE
		SYNTAX  INTEGER {
                      lssEnable (1),
                      lssDisable (2)
                      }
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"This objects specifies whether the LSS feature is turned ON/OFF."
		::= { dsx3PlcpAlarmConfigEntry 4 }

	dsx3PlcpLssCodeConnected OBJECT-TYPE
		SYNTAX  INTEGER 
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
      "This object derfines the value of the LSS code that is to be interpreted as Link Connected."
		::= { dsx3PlcpAlarmConfigEntry 5 }

	dsx3PlcpLssCodeRxLinkDn OBJECT-TYPE
		SYNTAX  INTEGER 
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"This object defines the value of the LSS code that is to be identified as Receive Link Down."
		::= { dsx3PlcpAlarmConfigEntry 6 }

	dsx3PlcpLssCodeRxLinkUp OBJECT-TYPE
		SYNTAX  INTEGER 
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"This object defines the value of the LSS code that is to be interpreted as Receive Link Up."
		::= { dsx3PlcpAlarmConfigEntry 7 }

	dsx3PlcpStatisticalAlarmSeverity OBJECT-TYPE
		SYNTAX	INTEGER {
				minor(1),
				major(2)
			}
		ACCESS	read-write
		STATUS  mandatory
		DESCRIPTION
			"This variable sets up the severity of PLCP Statistical
			 alarm. So when PLCP Statistical alarm is detected the 
			 AUM will send the alarm with appropriate severity.
			 A major alarm will cause the audible notification
			 and the MAJOR ALARM LED will be turned ON.
			 A minor alarm will just turn on the MINOR ALARM LED.
			"
		::= { dsx3PlcpAlarmConfigEntry 8 }

	dsx3PlcpBip8CV15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
          a statistical alarm to be declared."
		::= { dsx3PlcpAlarmConfigEntry 9 }

	dsx3PlcpBip8CV24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
          a statistical alarm to be declared. The threshold is
          checked every 15 minutes for the preceding 24 hour interval"
		::= { dsx3PlcpAlarmConfigEntry 10 }

	dsx3PlcpBip8ES15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
          a statistical alarm to be declared."
		::= { dsx3PlcpAlarmConfigEntry 11 }

	dsx3PlcpBip8ES24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
          a statistical alarm to be declared. The threshold is
          checked every 15 minutes for the preceding 24 hour interval"
		::= { dsx3PlcpAlarmConfigEntry 12 }

	dsx3PlcpBip8SES15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
          a statistical alarm to be declared."
		::= { dsx3PlcpAlarmConfigEntry 13 }

	dsx3PlcpBip8SES24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
          a statistical alarm to be declared. The threshold is
          checked every 15 minutes for the preceding 24 hour interval"
		::= { dsx3PlcpAlarmConfigEntry 14 }

	dsx3PlcpSEFS15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
          a statistical alarm to be declared."
		::= { dsx3PlcpAlarmConfigEntry 15 }

	dsx3PlcpSEFS24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
          a statistical alarm to be declared. The threshold is
          checked every 15 minutes for the preceding 24 hour interval"
 		::= { dsx3PlcpAlarmConfigEntry 16 }

	dsx3PlcpUAS15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
                         a statistical alarm to be declared."
		::= { dsx3PlcpAlarmConfigEntry 17 }

	dsx3PlcpUAS24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
      ACCESS  read-write
      STATUS  mandatory
      DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
          a statistical alarm to be declared. The threshold is
          checked every 15 minutes for the preceding 24 hour interval"
		::= { dsx3PlcpAlarmConfigEntry 18 }

-- --------------------------------------------------------------
-- 
-- dsx3PlcpAlarm group
-- This group contains dsx3 Alarm table
-- 
-- --------------------------------------------------------------
	dsx3PlcpAlarmTable OBJECT-TYPE
		SYNTAX	SEQUENCE OF DSX3PlcpAlarmEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"The ATM interface alarm configuration table. The 
			 size of table is given by the value of dsx3PlcpLineNum"
		::= { dsx3PlcpAlarm 1 }

	dsx3PlcpAlarmEntry OBJECT-TYPE
		SYNTAX	DSX3PlcpAlarmEntry
		ACCESS  not-accessible
		STATUS  mandatory
		DESCRIPTION
			"An entry in the DSX3 Alarm table"
		INDEX	{ dsx3PlcpNum }
		::= { dsx3PlcpAlarmTable 1 }

	DSX3PlcpAlarmEntry ::=
		SEQUENCE {
			dsx3PlcpLineAlarmState     	      INTEGER,
			dsx3PlcpLineStatisticalAlarmState   INTEGER,
			dsx3PlcpBip8CVCurrent               Counter,
			dsx3PlcpBip8CV15MinBucket           Counter,
         dsx3PlcpBip8CV24HrBucket            Counter,
			dsx3PlcpBip8ESCurrent               Counter,
			dsx3PlcpBip8ES15MinBucket           Counter,
         dsx3PlcpBip8ES24HrBucket            Counter,
			dsx3PlcpBip8SESCurrent              Counter,
			dsx3PlcpBip8SES15MinBucket          Counter,
         dsx3PlcpBip8SES24HrBucket           Counter,
			dsx3PlcpSEFSCurrent                 Counter,
			dsx3PlcpSEFS15MinBucket             Counter,
         dsx3PlcpSEFS24HrBucket              Counter,
			dsx3PlcpUASCurrent                  Counter,
			dsx3PlcpUAS15MinBucket              Counter,
         dsx3PlcpUAS24HrBucket               Counter,
         dsx3PlcpAlarmClrButton              INTEGER
                	}

	dsx3PlcpLineAlarmState OBJECT-TYPE
		SYNTAX	INTEGER (0..511)
		ACCESS	read-only
		STATUS  mandatory
		DESCRIPTION
			"This variable is a bitmap of the DSX3 Line ALarms
          on the AUM. A value of zero indicates no alarms.
          Itemized below are the individual bits:
               BitPosition    Alarm
               -----------    -----
               0              Receiving RAI
               1              Transmitting RAI
               2              Receiving OOF
               3              Receiving LSS Link Up
               4              Transmitting LSS Link Up
               5              Receiving LSS Link Down
               6              Transmitting LSS Link Down
               7              Near End Local Loopback in effect
               8              Near End Remote Loopback in effect
			"
		::= { dsx3PlcpAlarmEntry 1 }

	dsx3PlcpLineStatisticalAlarmState OBJECT-TYPE
		SYNTAX	INTEGER
		ACCESS	read-only
		STATUS  mandatory
		DESCRIPTION
			"This variable is a bitmap of the DSX3 Line Statictical
          Alarms on the AUM. A value of zero indicates no alarms.
          Itemized below are the individual alarm bits:
          BitPosition    Alarm
          -----------    -----
          0              Bip8CV 15 minute threshold exceeded
          1              Bip8CV 24 hour threshold exceeded
          2              Bip8ES 15 minute threshold exceeded
          3              Bip8ES 24 hour threshold exceeded
          4              Bip8SES 15 minute threshold exceeded
          5              Bip8SES 24 hour threshold exceeded
          6              Plcp SEFS 15 minute threshold exceeded
          7              Plcp SEFS 24 hour threshold exceeded
          8              Plcp UAS 15 minute threshold exceeded
          9              Plcp UAS 24 hour threshold exceeded
			"
		::= { dsx3PlcpAlarmEntry 2 }

      dsx3PlcpBip8CVCurrent      OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          BIP-8 code violations encountered by the interface."
		::= { dsx3PlcpAlarmEntry 3 }

      dsx3PlcpBip8CV15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"The counter associated with the number of 
          BIP-8 code violations in the last 15 minute period 
			 encountered by the interface."
		::= { dsx3PlcpAlarmEntry 4 }

      dsx3PlcpBip8CV24HrBucket   OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"The counter associated with the number of 
          BIP-8 code violations in the last 24 hour period 
			 encountered by the interface."
		::= { dsx3PlcpAlarmEntry 5 }

      dsx3PlcpBip8ESCurrent      OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          BIP-8 code violations Errored Seconds
          encountered by the interface."
		::= { dsx3PlcpAlarmEntry 6 }

      dsx3PlcpBip8ES15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          BIP-8 code violations Errored Seconds in the last 15 minutes
          encountered by the interface."
		::= { dsx3PlcpAlarmEntry 7 }

      dsx3PlcpBip8ES24HrBucket   OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Bip8 code violations Errored Seconds in the last 24 hours
          encountered by the interface."
		::= { dsx3PlcpAlarmEntry 8 }

      dsx3PlcpBip8SESCurrent     OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Bip8 code violations Severely Errored Seconds
          encountered by the interface."
		::= { dsx3PlcpAlarmEntry 9 }

      dsx3PlcpBip8SES15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Bip8 Severely Errored Seconds in the last 15 minutes
          encountered by the interface."
		::= { dsx3PlcpAlarmEntry 10 }

      dsx3PlcpBip8SES24HrBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Bip8 Severely Errored Seconds in the last 24 hours
          encountered by the interface."
		::= { dsx3PlcpAlarmEntry 11 }

      dsx3PlcpSEFSCurrent     OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Severely Errored Framing Seconds
          encountered by the interface."
		::= { dsx3PlcpAlarmEntry 12 }

      dsx3PlcpSEFS15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Severely Errored Framing Seconds in the last 15 minutes
          encountered by the interface."
		::= { dsx3PlcpAlarmEntry 13 }

      dsx3PlcpSEFS24HrBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Severely Errored Framing Seconds in the last 24 hours
          encountered by the interface."
		::= { dsx3PlcpAlarmEntry 14 }

      dsx3PlcpUASCurrent      OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Unavailable Seconds
          encountered by the interface."
		::= { dsx3PlcpAlarmEntry 15 }

      dsx3PlcpUAS15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Unavailable Seconds in the last 15 minutes
          encountered by the interface."
		::= { dsx3PlcpAlarmEntry 16 }

      dsx3PlcpUAS24HrBucket   OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
          Unavailable Seconds in the last 24 hours
          encountered by the interface."
		::= { dsx3PlcpAlarmEntry 17 }

	   dsx3PlcpAlarmClrButton OBJECT-TYPE
      SYNTAX  INTEGER {
                 dsx3PlcpAlarmNoAction (1),
                 dsx3PlcpAlarmClear (2)
                      }
      ACCESS  write-only
      STATUS  mandatory
      DESCRIPTION
			"This variable is used to clear all the alarms."
		::= { dsx3PlcpAlarmEntry 18 }


-- --------------------------------------------------------------
--
-- Group "dsx3PlcpCounters"
--
-- --------------------------------------------------------------

      dsx3PlcpCounterTable OBJECT-TYPE
		SYNTAX	SEQUENCE OF DSX3PlcpCounterEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"DSX3 Counter table. The table size is given by
			 the value of dsx3PlcpLineNum and use dsx3PlcpNum
			 for indices."
		::= { dsx3PlcpCounter 1 }

	dsx3PlcpCounterEntry OBJECT-TYPE
		SYNTAX	DSX3PlcpCounterEntry
		ACCESS  not-accessible
		STATUS  mandatory
		DESCRIPTION
			"An entry in the DSX3 counter table."
		INDEX	{ dsx3PlcpNum }
		::= { dsx3PlcpCounterTable 1 }

	DSX3PlcpCounterEntry ::=
		SEQUENCE {
			dsx3PlcpRcvBip8Count Counter,
			dsx3PlcpRcvOOFCount Counter,
			dsx3PlcpRcvRAICount Counter,
			dsx3PlcpFECount Counter,
			dsx3PlcpFESecCount Counter,
			dsx3PlcpSEFESecCount Counter,
			dsx3PlcpFEBECount Counter,
			dsx3PlcpFEBESecCount Counter,
			dsx3PlcpSEFEBESecCount Counter,
			dsx3PlcpHECCount Counter,
			dsx3PlcpHECSecCount Counter,
			dsx3PlcpSEHECSecCount Counter,
	      dsx3PlcpCounterClrButton INTEGER
      }

	dsx3PlcpRcvBip8Count OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"The count of BIP-8 errors."
		::= { dsx3PlcpCounterEntry 1 }

	dsx3PlcpRcvOOFCount OBJECT-TYPE
      SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of times the Out of Frame was detected
			 with or without integrating to OOF alarm."
		::= { dsx3PlcpCounterEntry 2 }

	dsx3PlcpRcvRAICount OBJECT-TYPE
      SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of times the Out of Frame was detected
			 with or without integrating to OOF alarm."
		::= { dsx3PlcpCounterEntry 3 }

	dsx3PlcpFECount OBJECT-TYPE
      SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of Framing Errorss detected."
		::= { dsx3PlcpCounterEntry 4 }

	dsx3PlcpFESecCount OBJECT-TYPE
		SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of Framing Error errored seconds."
		::= { dsx3PlcpCounterEntry 5 }

	dsx3PlcpSEFESecCount OBJECT-TYPE
      SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of Severely errored Framing error seconds."
		::= { dsx3PlcpCounterEntry 6 }

	dsx3PlcpFEBECount OBJECT-TYPE
      SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The count of FEBE detected."
		::= { dsx3PlcpCounterEntry 7 }

	dsx3PlcpFEBESecCount OBJECT-TYPE
		SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of FEBE errored seconds."
		::= { dsx3PlcpCounterEntry 8 }

	dsx3PlcpSEFEBESecCount OBJECT-TYPE
      SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of Severely errored FEBE seconds."
		::= { dsx3PlcpCounterEntry 9 }

	dsx3PlcpHECCount OBJECT-TYPE
      SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of HCS Errors."
		::= { dsx3PlcpCounterEntry 10 }

	dsx3PlcpHECSecCount OBJECT-TYPE
		SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of HEC errored seconds."
		::= { dsx3PlcpCounterEntry 11 }

	dsx3PlcpSEHECSecCount OBJECT-TYPE
      SYNTAX  Counter
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The number of Severely HEC error seconds."
		::= { dsx3PlcpCounterEntry 12 }

	dsx3PlcpCounterClrButton OBJECT-TYPE
      SYNTAX  INTEGER {
                 dsx3PlcpCounterNoAction (1),
                 dsx3PlcpCounterClear (2)
                 }
      ACCESS  write-only
      STATUS  mandatory
      DESCRIPTION
			"This variable is used to clear all the counters."
		::= { dsx3PlcpCounterEntry 13 }

	dsx3PlcpCounterValidEntries OBJECT-TYPE
      SYNTAX  INTEGER (0..3)
      ACCESS  read-only
      STATUS  mandatory
      DESCRIPTION
			"The max. number of entries in the dsx3PlcpCounterTable."
		::= { dsx3PlcpCounter 2 }

--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--





ascChanStateSigLmiGrp   OBJECT IDENTIFIER ::= { atmLmiSignaling 3 }


-- ------------------------------------------------------------------------
--
-- ascChanStateSigLmi group
-- Line ATM LMI signalling Channel Status
--
-- ------------------------------------------------------------------------


ascChanStateSigLmiGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AscChanStateSigLmiGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The ATM LMI Channel State table
		"
	::= { ascChanStateSigLmiGrp 1 }

ascChanStateSigLmiGrpEntry	OBJECT-TYPE
	SYNTAX	AscChanStateSigLmiGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for a Channel
		"
	INDEX	{ ascLmiVccLineNum, ascLmiVccVpi, ascLmiVccVci }
	::= { ascChanStateSigLmiGrpTable 1 }

AscChanStateSigLmiGrpEntry ::=
	SEQUENCE {
	   	ascLmiVccLineNum              INTEGER,
	   	ascLmiVccVpi	              INTEGER,
		ascLmiVccVci                  INTEGER, 
		ascLmiXmtAbitState            INTEGER, 
		ascLmiRcvAbitState            INTEGER
		}


ascLmiVccLineNum OBJECT-TYPE
	SYNTAX	INTEGER{
             lineNum (1)
            }
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the line number
		"
	::= { ascChanStateSigLmiGrpEntry 1}

ascLmiVccVpi OBJECT-TYPE
	SYNTAX	INTEGER (5..14)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the Virtual Path Indicator
		"
	::= { ascChanStateSigLmiGrpEntry 2}

ascLmiVccVci OBJECT-TYPE
	SYNTAX	INTEGER (16..271)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the Virtual Channel Indicator
		"
	::= { ascChanStateSigLmiGrpEntry 3}
		      	   
ascLmiXmtAbitState OBJECT-TYPE
	SYNTAX	INTEGER (0..1)
    	ACCESS read-only
    	STATUS  mandatory
    	DESCRIPTION
      		"This is the transmit A bit state
		0 - A bit clear = not active
		1 - A bit set = active
		"
	::= { ascChanStateSigLmiGrpEntry 4}

ascLmiRcvAbitState OBJECT-TYPE
	SYNTAX	INTEGER (0..1)
    	ACCESS read-only
    	STATUS  mandatory
    	DESCRIPTION
      		"This is the receive A bit state
		0 - A bit clear = not active
		1 - A bit set = active
		"
	::= { ascChanStateSigLmiGrpEntry 5}



-- ------------------------------------------------------------------------
-- End of ascChanStateSigLmiGrp group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--





ascCntSigLmiGrp   	OBJECT IDENTIFIER ::= { atmLmiSignaling 2 }


-- ------------------------------------------------------------------------
--
-- ascCntSigLmi group
-- Line ATM LMI signalling counters
--
-- ------------------------------------------------------------------------


ascCntSigLmiGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AscCntSigLmiGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The counter table is for DS3 line interface
		"
	::= { ascCntSigLmiGrp 1 }

ascCntSigLmiGrpEntry	OBJECT-TYPE
	SYNTAX	AscCntSigLmiGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical line
		"
	INDEX	{ ascLmiCntLineNum }
	::= { ascCntSigLmiGrpTable 1 }

AscCntSigLmiGrpEntry ::=
	SEQUENCE {
	   	ascLmiCntLineNum              INTEGER,
		ascLmiStatusTx                Counter, 
		ascLmiStatusEnqTx             Counter, 
		ascLmiStatusAckTx             Counter,
		ascLmiUpdateStatusTx          Counter,
		ascLmiStatusRx                Counter, 
		ascLmiStatusEnqRx             Counter, 
		ascLmiStatusAckRx             Counter,
		ascLmiUpdateStatusRx          Counter,
		ascLmiInvalidPduRx            Counter,
		ascLmiInvalidPduLenRx         Counter,
		ascLmiUnknownPduRx            Counter,
		ascLmiInvalidIeRx  	      Counter,
		ascLmiInvalidTransaction      Counter, 
		ascLmiTimeoutFailure          Counter, 
		ascLmiNodeStatusTx            Counter, 
		ascLmiNodeStatusAckTx         Counter,
		ascLmiNodeStatusRx            Counter, 
		ascLmiNodeStatusAckRx         Counter
		}


ascLmiCntLineNum OBJECT-TYPE
	SYNTAX	INTEGER{
              lmiCntLineNum (1)
            }
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the logical line index
		"
	::= { ascCntSigLmiGrpEntry 1}

ascLmiStatusTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Status PDUs transmitted
		"
	::= { ascCntSigLmiGrpEntry 2}

ascLmiStatusEnqTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Status Enquiry PDUs transmitted
		"
	::= { ascCntSigLmiGrpEntry 3}

ascLmiStatusAckTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Status Ack PDUs transmitted
		"
	::= { ascCntSigLmiGrpEntry 4}

ascLmiUpdateStatusTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Update Status PDUs transmitted
		"
	::= { ascCntSigLmiGrpEntry 5}

ascLmiStatusRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Status PDUs received
		"
	::= { ascCntSigLmiGrpEntry 6}

ascLmiStatusEnqRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Status Enquiry PDUs received
		"
	::= { ascCntSigLmiGrpEntry 7}

ascLmiStatusAckRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Status Ack PDUs received
		"
	::= { ascCntSigLmiGrpEntry 8}

ascLmiUpdateStatusRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Update Status PDUs received
		"
	::= { ascCntSigLmiGrpEntry 9}

ascLmiInvalidPduRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Invalid PDUs received.
		These are PDUs with invalid SSCOP or Q.2931 header,
		or invalid Protocol Discriminator 
		"
	::= { ascCntSigLmiGrpEntry 10}

ascLmiInvalidPduLenRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of PDUs received with invalid length.
        	ATM LMI PDU Length field plus Q.2931 Header length
        	does not equal actual message length
		"
	::= { ascCntSigLmiGrpEntry 11}

ascLmiUnknownPduRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of PDUs with unknown Message Type received
		"
	::= { ascCntSigLmiGrpEntry 12}

ascLmiInvalidIeRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of PDUs received with invalid Information Elements.
		This includes IEs with invalid length and missing mandatory IEs
		"
	::= { ascCntSigLmiGrpEntry 13}

ascLmiInvalidTransaction OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of invalid transactions.
		The transaction number of a transmitted Update Status PDU does
		not match the transaction number of the corresponding received
		Status Ack PDU, or, 
        	the transaction number of a transmitted Status Enq PDU does
        	not match the transaction number of the corresponding received
        Status PDU.
		"
	::= { ascCntSigLmiGrpEntry 14}

ascLmiTimeoutFailure OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of timeout failures
		"
	::= { ascCntSigLmiGrpEntry 15}

ascLmiNodeStatusTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Node Status PDUs transmitted
		"
	::= { ascCntSigLmiGrpEntry 16}

ascLmiNodeStatusAckTx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Node Status Ack PDUs transmitted
		"
	::= { ascCntSigLmiGrpEntry 17}

ascLmiNodeStatusRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Node Status PDUs received
		"
	::= { ascCntSigLmiGrpEntry 18}

ascLmiNodeStatusAckRx OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Node Status Ack PDUs received
		"
	::= { ascCntSigLmiGrpEntry 19}




-- ------------------------------------------------------------------------
-- End of ascCnfSigLmiGrp group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--





ascLineCnfSigLmiGrp   	OBJECT IDENTIFIER ::= { atmLmiSignaling 1 }


-- ------------------------------------------------------------------------
--
-- ascCnfSigLMI group
-- Line configurable ATM LMI signalling parameters  
--
-- ------------------------------------------------------------------------


ascCnfSigLmiGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AscCnfSigLmiGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for DS3 line interface
		"
	::= { ascLineCnfSigLmiGrp 1 }

ascCnfSigLmiGrpEntry	OBJECT-TYPE
	SYNTAX	AscCnfSigLmiGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical line
		"
	INDEX	{ ascLmiCnfLineNum }
	::= { ascCnfSigLmiGrpTable 1 }

AscCnfSigLmiGrpEntry ::=
	SEQUENCE {
	   	ascLmiCnfLineNum              INTEGER,
		ascLmiVpi                     INTEGER, 
		ascLmiVci                     INTEGER, 
		ascLmiEnabled                 INTEGER,
		ascLmiPollingEnabled          INTEGER,
		ascLmiPollingInterval         INTEGER,
		ascLmiTimerT393               INTEGER,
		ascLmiTimerT394               INTEGER,
		ascLmiMaxRetryN394 	      INTEGER,
		ascLmiMaxRetryN395	      INTEGER, 
		ascLmiOperStatus      	      INTEGER 
		}


ascLmiCnfLineNum OBJECT-TYPE
	SYNTAX	INTEGER{
               lmiCnflineNum (1)
            }
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the logical line index
		"
	::= { ascCnfSigLmiGrpEntry 1}

ascLmiVpi OBJECT-TYPE
	SYNTAX	INTEGER{
               lmiVpi (3)
            }
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"VPI used for ATM LMI signalling 
		"
	::= { ascCnfSigLmiGrpEntry 2}
		      	   
ascLmiVci OBJECT-TYPE
	SYNTAX	INTEGER{
               lmiVci (31)
            }
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"VCI used for ATM LMI signalling 
		"
	::= { ascCnfSigLmiGrpEntry 3}
		      	   
ascLmiEnabled  OBJECT-TYPE
	SYNTAX	INTEGER {
		disable(1),
		atmLmiEnable(2),
		atmLmiwithExtEnable(3)
		}
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
      		"This will enable ATM LMI signalling, 
      		or ATM LMI with the Node Status Extensions
		"
	::= { ascCnfSigLmiGrpEntry 4}

ascLmiPollingEnabled  OBJECT-TYPE
	SYNTAX	INTEGER {
		disable(1),
		enable(2)
		}
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
     		"This will enable ATM LMI polling
		"
	::= { ascCnfSigLmiGrpEntry 5}

ascLmiPollingInterval OBJECT-TYPE
	SYNTAX	INTEGER (5..30)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Status Enq Polling Interval in seconds
		Default is 10 seconds
		"
	::= { ascCnfSigLmiGrpEntry 6}

ascLmiTimerT393 OBJECT-TYPE
	SYNTAX	INTEGER (5..30)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Status Enq timeout interval in seconds
		Default is 10 seconds
		"
	::= { ascCnfSigLmiGrpEntry 7}
		      	   
ascLmiTimerT394 OBJECT-TYPE
	SYNTAX	INTEGER (5..30)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Update Status timeout interval in seconds
		Default is 10 seconds
		"
	::= { ascCnfSigLmiGrpEntry 8}
		      	   
ascLmiMaxRetryN394	OBJECT-TYPE
	SYNTAX	INTEGER (1..10)
	ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
		"Status Enq maximum retry count
		Default is 3
		"
	::= { ascCnfSigLmiGrpEntry 9}

ascLmiMaxRetryN395	OBJECT-TYPE
	SYNTAX	INTEGER (1..10)
	ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
		"Update Status maximum retry count
		Default is 3
		"
	::= { ascCnfSigLmiGrpEntry 10}

ascLmiOperStatus	OBJECT-TYPE
	SYNTAX	INTEGER {
		atmLmiFailed(1),
		atmLmiActive(2)
		}
	ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
		"Operational status
		"
	::= { ascCnfSigLmiGrpEntry 11}


-- ------------------------------------------------------------------------
-- End of ascCnfSigLmiGrp group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






-- frChan     		OBJECT IDENTIFIER ::= { frameRelay 2 }
frChanCnfGrp		OBJECT IDENTIFIER ::= { frChan 1 }


-- ------------------------------------------------------------------------
--
-- frChannelConfig group
-- Channel configurable parameters  (VC)
--
-- ------------------------------------------------------------------------


frChanCnfGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF FrChanCnfGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for logical channel interface
		 there are 256 entries for 4 DS1s
		"
	::= { frChanCnfGrp 1 }

frChanCnfGrpEntry	OBJECT-TYPE
	SYNTAX	FrChanCnfGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical channel
		"
	INDEX	{ chanNum }
	::= { frChanCnfGrpTable 1 }

FrChanCnfGrpEntry ::=
	SEQUENCE {
	   	chanNum			INTEGER,
		chanRowStatus          	INTEGER, 
		chanPortNum             INTEGER, 
		dLCI		        INTEGER,
		egressQSelect	      	INTEGER,
		ingressQDepth	      	INTEGER,
		ingressQDEThresh   	INTEGER,
		ingressQECNThresh	INTEGER,
		egressQDepth	      	INTEGER,
		egressQDEThresh	   	INTEGER,
		egressQECNThresh	INTEGER,
        	deTaggingEnable     	INTEGER,
        	cir                 	INTEGER,
        	bc                  	INTEGER,
        	be                  	INTEGER,
        	ibs                 	INTEGER,
        	foreSightEnable     	INTEGER,
        	qir                 	INTEGER,
        	mir                 	INTEGER,
        	pir                 	INTEGER,
        	chanLocRmtLpbkState	INTEGER,
        	chanTestType            INTEGER,
        	chanTestState           INTEGER,
        	chanRTDResult           INTEGER,
		chanType	INTEGER,
		chanFECNconfig	INTEGER,
		chanDEtoCLPmap	INTEGER,
		chanCLPtoDEmap	INTEGER

}


chanNum OBJECT-TYPE
	SYNTAX	INTEGER (16..271)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the virtual connection index
		"
	::= { frChanCnfGrpEntry 1}

chanRowStatus  OBJECT-TYPE
	SYNTAX	INTEGER {
		add(1),
		del(2),
		mod(3)
		}
	ACCESS read-write
   STATUS  mandatory
   DESCRIPTION
      "This will add, delete or modify the channel
       1 ==> ADD
       2 ==> DELETE
       3 ==> MODIFY
		"
   	::= { frChanCnfGrpEntry 2 }

chanPortNum OBJECT-TYPE
	SYNTAX	INTEGER (1..128)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the logical ports that are possible
		 on this card, the user must set this variable
		"
	::= { frChanCnfGrpEntry	3}

dLCI OBJECT-TYPE
	SYNTAX	INTEGER (0..1023)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"This variable is the DLCI number of the channel. 
		 The user has to set this variable. 
		 All the connections on the same line should have 
		 a unique DLCI number. 
		 Note that if we are adding a channel to a port that
		 has LMI signalling enabled, then we can not use DLCI
		 number 0(ANNEX A & D) and 1023(STRATA LMI). 
		"
	::= { frChanCnfGrpEntry	4}

egressQSelect OBJECT-TYPE
	SYNTAX	INTEGER {
		highPriority(1),
		lowPriority(2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Selects one out of two possible port queues.
		 The default port queue number is 1 which is the high 
		 pririty queue.
		1 = High priority queue 
		2 = Low priority queue 
		"
	::= { frChanCnfGrpEntry	5}

ingressQDepth	OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffff'h)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
        "This variable sets the max depth for queue, before
		 it  starts dropping the cells
		"
        ::= { frChanCnfGrpEntry 6}

ingressQECNThresh	OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffff'h)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "This variable sets the max depth for queue, before
		 it  starts flow control
		"
        ::= { frChanCnfGrpEntry 7}

ingressQDEThresh	OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffff'h)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "This variable sets the max depth for queue, before
		 they become discard eligible
		"
        ::= { frChanCnfGrpEntry 8}

egressQDepth	OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffff'h)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
        "This variable sets the max depth for queue, before
		 it  starts dropping the cells
		"
        ::= { frChanCnfGrpEntry 9}

egressQDEThresh	OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffff'h)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "This variable sets the max depth for queue, before
		 they become discard eligible
		"
        ::= { frChanCnfGrpEntry 10}

egressQECNThresh        OBJECT-TYPE
        SYNTAX  INTEGER (0..'ffff'h)
        ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "This variable sets the max depth for queue, before
                 it  starts flow control
                "
        ::= { frChanCnfGrpEntry 11}

-- Shawn K. 5/17/95 added
deTaggingEnable OBJECT-TYPE
    SYNTAX  INTEGER {
	enable(1),
	disable(2)
	} 
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
         "The default value is 2
	  This variable enables DE tagging in the ingress
          direction only
	  enable = 1
	  disable = 2
        "
        ::= { frChanCnfGrpEntry 12}
 
cir OBJECT-TYPE
    SYNTAX  INTEGER (2400..2048000)
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
         "The default value is 2400
	  cir defines committed information rate
	  cir is in bits per second
	  Maximum value for cir for E1 is 2048000 and for T1 is 1536000
	  cir has to be less than or equal to the port speed.
        "
        ::= { frChanCnfGrpEntry 13}
         
bc OBJECT-TYPE
    SYNTAX  INTEGER (0..65535)
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
        "The default value is 5100
	 bc defines burst committed.
	 bc can not be 0 when cir is not 0.
	 bc has to be 0 if cir is 0.
        "
        ::= { frChanCnfGrpEntry 14}
         
be OBJECT-TYPE
    SYNTAX  INTEGER (0..65535)
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
        "The default value is 5100
	 be defines the burst excess.


	 be can not be 0 when cir is 0.
        "
        ::= { frChanCnfGrpEntry 15}
         
ibs OBJECT-TYPE
    SYNTAX  INTEGER (0..65535)
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
        "The default value is 100
	 ibs should be less or equal to bc when cir is greater
	 than 0. ibs has to be 0 when cir is 0.
        "
        ::= { frChanCnfGrpEntry 16}
         
foreSightEnable OBJECT-TYPE
    SYNTAX  INTEGER {
	enable(1),
	disable(2)
	}
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
        "The default value is 2
	  This variable sets foreSight option
	  Note that when you enable forsight option then you can
	  modify qir, mir and pir, otherwise you CAN NOT change
	  these values if you are disabling foresight or if foresight
	  option is already disabled.
	  The RATE CONTROL FEATURE has to be ON in order to enable 
	  foresight and also modify its parameter. 
	  enable = 1
	  disable = 2
        "
        ::= { frChanCnfGrpEntry 17}
 
qir OBJECT-TYPE
    SYNTAX  INTEGER (10..8000)
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
        "The dafault is 10
	 qir is defined in cells/sec and it defines
	 quiescent information rate for Foresight 
        "
        ::= { frChanCnfGrpEntry 18}
 
mir OBJECT-TYPE
    SYNTAX  INTEGER (10..8000)
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
        "The dafault is 10
	 mir is defined in cells/sec and it defines
	 minimum information rate for Foresight 
        "
        ::= { frChanCnfGrpEntry 19}
         
pir OBJECT-TYPE
    SYNTAX  INTEGER (10..8000)
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
        "The dafault is 10
	 pir is defined in cells/sec and it defines
	 peak information rate for Foresight 
        "
        ::= { frChanCnfGrpEntry 20}


chanLocRmtLpbkState OBJECT-TYPE 
    SYNTAX  INTEGER {
	enable(1), 
	disable(2) 
	}
    ACCESS read-write 
    STATUS  mandatory 
    DESCRIPTION 
        "The default is disable.
	 This variable enables or disables the remote loopback for each
	 channel.
	 When you enable this option on a connection (channel) then all the
	 cells that are coming from the network side would be looped back
	 toward the network and all the frames coming from the user side
	 would be dropped.
	 This channel remote loopback has nothing to do with the chanTestType
	 option, each one does a different function. 
	 For example, the channel remote loopback is used for looping the data
	 toward the network and if this connection is terminated on an IPX
	 then they can put a test equipment and measure some of the 
	 characteristics of the network.
	1 = enable
	2 = disable
        " 
        ::= { frChanCnfGrpEntry 21} 

chanTestType OBJECT-TYPE  
    SYNTAX  INTEGER {
    	testcon(1),
	testdelay(2),
	notest(3)
	}
    ACCESS read-write 
    STATUS  mandatory  
    DESCRIPTION    
        "The default is notest.
	 The chanTestType starts testing the continuity or delay of a connection.
	 It sends specific cell patterns toward the network and the terminating
	 end of this connection has to be an AXIS or ASI of a BPX in order for 
	 this test to be working. 
	 The receiving node would loop back when it receives these
	 cells. The test should be done in about couple of seconds. The testcon
	 tests the continuity of the connection and testdelay uses the same
	 test except that it measures for delay through the network. 
	 To test the delay follow this procedure:
		a- set chanTestType to testdelay
		b- read chanTestState till it is Pass or Fail 
		c- Read chanRTDResult for the delay if it is Pass
		*Note that the chanTestType would go back to notest when the
		 test is completed 
	 To test the continuity follow this procedure:
		a- set chanTestType to testcon
		b- read chanTestState till it is Pass or Fail 
		*Note that the chanTestType would go back to notest when the
		 test is completed 
	 You CAN NOT select 2 tests back to back, you have selcelt one and wait 
	 the result and then start the other one.
    SYNTAX  
	 When you select testdelay 
	 
	 This is the type of the test
	 1 = Test Continuity
	 2 = Test Delay
	 3 = No Test
        " 
        ::= { frChanCnfGrpEntry 22}  
 
chanTestState OBJECT-TYPE  
    SYNTAX  INTEGER {
	passed(1),
	failed(2),
	inprogress(3),
	notinprogress(4)
	} 
    ACCESS read-only 
    STATUS  mandatory  
    DESCRIPTION    
        "This shows the state of the test
	 When you add a connection then the chanTestState becomes notinprogress
	 and when you select any test, it would go to inprogress state and after
	 it completes the test, it will go to failed or passed state.
	 1 = Passed
	 2 = Failed
	 3 = In Progress 
	 4 = Not In Progress
        " 
        ::= { frChanCnfGrpEntry 23}  
 
chanRTDResult OBJECT-TYPE  
    SYNTAX  INTEGER (1..65535)  
    ACCESS read-only 
    STATUS  mandatory  
    DESCRIPTION    
        "This is round trip delay in milliseconds.
	 When you select testdelay option for the chanTestType, the result of
	 the test that is measured in milliseconds can be read in chanRTDResult.
        " 
        ::= { frChanCnfGrpEntry 24}  
 
chanType	OBJECT-TYPE
	SYNTAX	INTEGER {
		frNIW(1),
		frSIW-transparent(2),
		frSIW-translate(3),
		frFUNI(4),
		frForward(5)
		}
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "sets channel type
                 Type 1 is frame-relay network interworking
                 type 2 is service interworking with out any SDU translation
                 type 3 is service interworking with SDU translation
                 type 4 is frame-relay UNI, currently mode-1a which is ALL5
		 type 5 is frame forwarding
		"
        ::= { frChanCnfGrpEntry 25 }

chanFECNconfig	OBJECT-TYPE
	SYNTAX	INTEGER {
		mapEFCI(1),
		setEFCIzero(2)
		}
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "sets FECN config mapEFCI valid only for SIW 
                 The FECN bits in frame-relay are mapped to EFCI bit in the ATM
                 cells.
		"
        ::= { frChanCnfGrpEntry 26 }

chanDEtoCLPmap	OBJECT-TYPE
	SYNTAX	INTEGER {
		mapCLP(1),
		setCLPzero(2),
		setCLPone(3) 
		}
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "sets mapping of CLP bit 
                 The DE bit is mapped to CLP bit in ATM cell
                 in Case 2 and 3, the DE bit is ignored and CLP bit
                 is set to a constant value
		"
        ::= { frChanCnfGrpEntry 27 }

chanCLPtoDEmap	OBJECT-TYPE
	SYNTAX	INTEGER {
		mapDE(1),
		setDEzero(2),
		setDEone(3),
		ignoreCLP(4) 
		}
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "sets mapping of DE bit 1,2,3 valid for SIW
                 1,4 valid for NIW
                 The CLP bit is mapped to DE bit in frame-relay
                 in the Case of 2 and 3, the CLP bit is ignored and DE bit
                 is set to a constant value
                 ignoreCLP ignores CLP bit and DE bit remains as received.
		"
        ::= { frChanCnfGrpEntry 28 }

--
--	Next available channel
--

chanNumNextAvailable 	OBJECT-TYPE
	SYNTAX	INTEGER (16..271) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This variable contains the next UNUSED channel number
		 of the possible 256.  
		 This number can be used in channel config table, the 
		 ChanNumNextAvailable gets updated if the number gets
		 used to create a logical channel.  
		 A '0' indicates that no more channels are available.
		"
	::= { frChanCnfGrp 2 }




-- ------------------------------------------------------------------------
-- End of frChanCnf group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






-- frPort        		OBJECT IDENTIFIER ::= { frameRelay 1 }
-- frPortCnf		OBJECT IDENTIFIER ::= { frPort 1 }
-- frPortCnfSig  		OBJECT IDENTIFIER ::= { frPortCnf 2 }
frPortCnfSigLMIGrp   	OBJECT IDENTIFIER ::= { frPortCnfSig 1 }


-- ------------------------------------------------------------------------
--
-- frPortCnfSigLMI group
-- Port configurable signalling parameters  
--
-- ------------------------------------------------------------------------


frPortCnfSigLMIGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF FrPortCnfSigLMIGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for logical port interface
		 there are 128 entries for 4 E1s and 96 entries for 4 T1s
		"
	::= { frPortCnfSigLMIGrp 1 }

frPortCnfSigLMIGrpEntry	OBJECT-TYPE
	SYNTAX	FrPortCnfSigLMIGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical port
		"
	INDEX	{ lmiCnfPortNum }
	::= { frPortCnfSigLMIGrpTable 1 }

FrPortCnfSigLMIGrpEntry ::=
	SEQUENCE {
	   	lmiCnfPortNum 	              INTEGER,
		signallingProtocolType        INTEGER, 
		asynchronousUpdates           INTEGER, 
		t391LinkIntegrityTimer        INTEGER,
		t392PollingVerificationTimer  INTEGER,
		n391FullStatusPollingCounter  INTEGER,
		n392ErrorThreshold            INTEGER,
		n393MonitoredEventCount       INTEGER
		}


lmiCnfPortNum OBJECT-TYPE
	SYNTAX	INTEGER (1..128)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the logical port index
		"
	::= { frPortCnfSigLMIGrpEntry 1}

signallingProtocolType  OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		noSignalling(2),
		strataLMI(3),
		annexAUNI(4),
		annexDUNI(5),
		annexANNI(6),
		annexDNNI(7)
		}
	ACCESS read-write
   STATUS  mandatory
   DESCRIPTION
      "This will set the signalling protocol
	1 - other
	2 - noSignalling
	3 - strataLMI
	4 - annexAUNI
	5 - annexDUNI
	6 - annexANNI
	7 - annexDNNI
	"
	::= { frPortCnfSigLMIGrpEntry 2}

asynchronousUpdates OBJECT-TYPE
	SYNTAX	INTEGER {
            disable(1),
            enable(2)
            }
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Enables Asynchronous Status Updates.
		"
	::= { frPortCnfSigLMIGrpEntry 3}

t391LinkIntegrityTimer OBJECT-TYPE
	SYNTAX	INTEGER (5..30)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Interval in seconds for NNI to do status polling 
		"
	::= { frPortCnfSigLMIGrpEntry 4}
		      	   
t392PollingVerificationTimer OBJECT-TYPE
	SYNTAX	INTEGER (5..30)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Interval in seconds for UNI to expect status polling 
		"
	::= { frPortCnfSigLMIGrpEntry 5}

n391FullStatusPollingCounter	OBJECT-TYPE
	SYNTAX	INTEGER (1..255)
	ACCESS read-write
   STATUS  mandatory
   DESCRIPTION
      "Number of UNI/NNI Polling cycles
		"
	::= { frPortCnfSigLMIGrpEntry 6}

n392ErrorThreshold	OBJECT-TYPE
	SYNTAX	INTEGER (1..10)
	ACCESS read-write
   STATUS  mandatory
   DESCRIPTION
      "UNI/NNI Error Threshold
		"
	::= { frPortCnfSigLMIGrpEntry 7}

n393MonitoredEventCount	OBJECT-TYPE
	SYNTAX	INTEGER (1..10)
	ACCESS read-write
   STATUS  mandatory
   DESCRIPTION
      "UNI/NNI Events, always greater than n392
		"
	::= { frPortCnfSigLMIGrpEntry 8}


-- ------------------------------------------------------------------------
-- End of frPortCnfSigLMIGrp group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






dsx1AlmCnfGrp		OBJECT IDENTIFIER ::= { dsx1Line 2 }

-- ------------------------------------------------------------------------
-- ds1AlmConfig group
--
-- This group contains ds1 line alarm configuration table
-- ------------------------------------------------------------------------

	dsx1AlmCnfGrpTable OBJECT-TYPE
		SYNTAX	SEQUENCE OF Dsx1AlmCnfGrpEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"The FRSM interface alarm configuration table.
			"
		::= { dsx1AlmCnfGrp 1 }

	dsx1AlmCnfGrpEntry OBJECT-TYPE
		SYNTAX	Dsx1AlmCnfGrpEntry
		ACCESS  not-accessible
		STATUS  mandatory
		DESCRIPTION
			"An entry in the DS3 Alarm Configuration table
			"
		INDEX	{ almCnfLineNum }
		::= { dsx1AlmCnfGrpTable 1 }

	Dsx1AlmCnfGrpEntry ::=
		SEQUENCE {
			almCnfLineNum  	        	INTEGER,
			redSeverity     	        INTEGER,
			rAISeverity	                INTEGER,
       			nEAlarmUpCount	            	INTEGER,
			nEAlarmDownCount                INTEGER,
			nEAlarmThreshold                INTEGER,
			fEAlarmUpCount                  INTEGER,
			fEAlarmDownCount                INTEGER,
			fEAlarmThreshold                INTEGER,
                        statisticalAlarmSeverity        INTEGER,
			lCV15MinThreshold               INTEGER,
                        lCV24HrThreshold                INTEGER,
			lES15MinThreshold               INTEGER,
                        lES24HrThreshold                INTEGER,
			lSES15MinThreshold              INTEGER,
                        lSES24HrThreshold               INTEGER,
			cRC15MinThreshold               INTEGER,
                        cRC24HrThreshold                INTEGER,
			cRCES15MinThreshold             INTEGER,
                        cRCES24HrThreshold              INTEGER,
			cRCSES15MinThreshold            INTEGER,
                        cRCSES24HrThreshold             INTEGER,
			sEFS15MinThreshold              INTEGER,
                        sEFS24HrThreshold               INTEGER,
			aISS15MinThreshold              INTEGER,
                        aISS24HrThreshold               INTEGER,
			uAS15MinThreshold               INTEGER,
                        uAS24HrThreshold                INTEGER
                	}

	almCnfLineNum OBJECT-TYPE
		SYNTAX	INTEGER (1..4)
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This object is the identifier of a DS1/E1
		 	Interface on a managed device.  If there is an
		 	ifEntry that is directly associated with this
		 	and only this DS1/E1 interface, it should have
		 	the same value as ifIndex.  Otherwise, number
		 	the ds1LineIndices with an unique identifier
		 	following the rules of choosing a number that
		 	is greater than ifNumber and numbering the
		 	inside interfaces (e.g., equipment side) with
		 	even numbers and outside interfaces (e.g,
		 	network side) with odd numbers."
		::= { dsx1AlmCnfGrpEntry 1 }

	redSeverity OBJECT-TYPE
		SYNTAX	INTEGER {
				minor(1),
				major(2)
			}
		ACCESS	read-write
		STATUS  mandatory
		DESCRIPTION
			"This variable is used to setup the severity of RED
			 alarm. So when LOS alarm is detected the FRSM will
			 send the alarm with appropriate severity status.
			"
		::= { dsx1AlmCnfGrpEntry 2 }

	rAISeverity OBJECT-TYPE
		SYNTAX	INTEGER {
				minor(1),
				major(2)
			}
		ACCESS	read-write
		STATUS  mandatory
		DESCRIPTION
			"This variable is used to setup the severity of RAI
			 alarm. So when LOS alarm is detected the FRSM will
			 send the alarm with appropriate severity status.
			"
		::= { dsx1AlmCnfGrpEntry 3 }

	nEAlarmUpCount OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"This parameter specifies the integration counter,
			 the local alarms are LOS and LOF. Default value
			 is 6 and update counter every 10 ms to reach the
			 threshold set in threshold object.
			 This is the up counter."
		::= { dsx1AlmCnfGrpEntry 4 }

	nEAlarmDownCount OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"This parameter specifies the integration counter,
			 the Near-End alarms are LOS and LOF. Default value
			 is 1 and update counter every 10 ms to reach 0.
			 This is the down counter."
		::= { dsx1AlmCnfGrpEntry 5 }

	nEAlarmThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"The value set in this object determines the value
			 to declare Near-End alarm. A count of 1500 gives
			 2.5 sec to declare LOS with an up count value of
			 6."
		::= { dsx1AlmCnfGrpEntry 6 }

	fEAlarmUpCount OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"This parameter specifies the integration counter,
			 the Far-End alarms are AIS and YEL. Default value
			 is 6 and update counter 10 ms to reach the			 th
			 threshold set in threshold object.
			 This is the up counter."
		::= { dsx1AlmCnfGrpEntry 7 }

	fEAlarmDownCount OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"This parameter specifies the integration counter,
			 the Far-End alarms are AIS and YEL. Default value
			 is 1 and update counter every 10 ms to reach 0.
			 This is the down counter."
		::= { dsx1AlmCnfGrpEntry 8 }

	fEAlarmThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"The value set in this object determines the value
			 to declare Far-End alarm. A count of 1500 gives 2.5
			 secs to declare LOS with an up count value of 6."
		::= { dsx1AlmCnfGrpEntry 9 }

	statisticalAlarmSeverity OBJECT-TYPE
		SYNTAX	INTEGER {
				minor(1),
				major(2),
				inhibit(3)
			}
		ACCESS	read-write
		STATUS  mandatory
		DESCRIPTION
			"This variable is used to setup the severity of Statistical
			 alarm. So when any statistical alarm is detected the FRSM will
			 send the alarm with appropriate severity status.
			"
		::= { dsx1AlmCnfGrpEntry 10 }

	lCV15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"Code Violation - is the occurence of a received CRC-6
			 code that is not identical to the corresponding locally.
			 calculated code. The value set in this object determines 
			 the value which when exceeded in a 15 minute window causes
                         a statistical alarm to be declared."
		::= { dsx1AlmCnfGrpEntry 11 }

	lCV24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"Code Violation - is the occurence of a received CRC-6
			 code that is not identical to the corresponding locally.
			 The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
                         a statistical alarm to be declared. The threshold is
                         checked every 15 minutes for the preceding 24 hour interval"

		::= { dsx1AlmCnfGrpEntry 12 }

	lES15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"Errored Second - is any second with at least one 
			 code violation. The value set in this object determines 
			 the value which when exceeded in a 15 minute window causes
                         a statistical alarm to be declared."
		::= { dsx1AlmCnfGrpEntry 13 }

	lES24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"Errored Second - is any second with at least one 
			 code violation. The value set in this object determines 
			 the value which when exceeded in asliding 24 hour window causes 
                         a statistical alarm to be declared. The threshold is
                         checked every 15 minutes for the preceding 24 hour interval"

		::= { dsx1AlmCnfGrpEntry 14 }

	lSES15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"Severely Errored Second - is any second with 15 or more
			 code violations. The value set in this object determines 
			 the value which when exceeded in a 15 minute window causes
                         a statistical alarm to be declared."
		::= { dsx1AlmCnfGrpEntry 15 }

	lSES24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"Severely Errored Second - is any second with 15 or more
			 code violations. The value set in this object determines 
			 the value which when exceeded in a sliding 24 hour window causes
                         a statistical alarm to be declared. The threshold is
                         checked every 15 minutes for the preceding 24 hour interval"

		::= { dsx1AlmCnfGrpEntry 16 }

	cRC15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
                         a statistical alarm to be declared."
		::= { dsx1AlmCnfGrpEntry 17 }

	cRC24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
                         a statistical alarm to be declared. The threshold is
                         checked every 15 minutes for the preceding 24 hour interval"

		::= { dsx1AlmCnfGrpEntry 18 }

	cRCES15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
                         a statistical alarm to be declared."
		::= { dsx1AlmCnfGrpEntry 19 }

	cRCES24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
                         a statistical alarm to be declared. The threshold is
                         checked every 15 minutes for the preceding 24 hour interval"

		::= { dsx1AlmCnfGrpEntry 20 }

	cRCSES15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
                         a statistical alarm to be declared."
		::= { dsx1AlmCnfGrpEntry 21 }

	cRCSES24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
                         a statistical alarm to be declared. The threshold is
                         checked every 15 minutes for the preceding 24 hour interval"

		::= { dsx1AlmCnfGrpEntry 22 }

	sEFS15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"Severely Errored Framing Second - is a count of one-second
			 intervals containing one or more SEF events.
			 The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
                         a statistical alarm to be declared."
		::= { dsx1AlmCnfGrpEntry 23 }

	sEFS24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"Severely Errored Framing Second - is a count of one-second
			 intervals containing one or more SEF events.
			 The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
                         a statistical alarm to be declared. The threshold is
                         checked every 15 minutes for the preceding 24 hour interval"

		::= { dsx1AlmCnfGrpEntry 24 }

	aISS15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"Alarm Indication Signal Second - is a count of one-second 
			 intervals containing one or more incoming AIS.
			 The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
                         a statistical alarm to be declared."
		::= { dsx1AlmCnfGrpEntry 25 }

	aISS24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
          ACCESS  read-write      
                STATUS  mandatory
                DESCRIPTION
			"Alarm Indication Signal Second - is a count of one-second 
			 intervals containing one or more incoming AIS.
			 The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
                         a statistical alarm to be declared. The threshold is
                         checked every 15 minutes for the preceding 24 hour interval"

		::= { dsx1AlmCnfGrpEntry 26 }

	uAS15MinThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"Unavailable Second - is a count of seconds during
			 which the DS1 Layer service is unavailable.
			 The value set in this object determines the value
			 which when exceeded in a 15 minute window causes
                         a statistical alarm to be declared."
		::= { dsx1AlmCnfGrpEntry 27 }

	uAS24HrThreshold OBJECT-TYPE
		SYNTAX  INTEGER (0..'FFFFFFFF'h)
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
			"Unavailable Second - is a count of seconds during
			 which the DS1 Layer service is unavailable.
			 The value set in this object determines the value
			 which when exceeded in a sliding 24 hour window causes
                         a statistical alarm to be declared. The threshold is
                         checked every 15 minutes for the preceding 24 hour interval"

		::= { dsx1AlmCnfGrpEntry 28 }




--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--





-- frChan     	OBJECT IDENTIFIER ::= { frameRelay 2 }
frChanCntGrp	OBJECT IDENTIFIER ::= { frChan 3 }


-- ------------------------------------------------------------------------
--
-- Group frChannelStatus
-- Contains status information for channels
--
-- ------------------------------------------------------------------------


-- ------------------------------------------------------------------------
--
-- frChannelCounters group
-- Channel OR VC COUNTERS 
--
-- ------------------------------------------------------------------------


frChanCntGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF FrChanCntGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for logical channel interface
		 there are 256 entries for 4 DS1s
		"
	::= { frChanCntGrp 1 }


frChanCntGrpEntry	OBJECT-TYPE
	SYNTAX	FrChanCntGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical channel
		"
	INDEX	{ cntChanNum }
	::= { frChanCntGrpTable 1}

FrChanCntGrpEntry ::=
	SEQUENCE {
		cntChanNum 	
			INTEGER,
-- Rcv Counters
		rcvFrames		
			Counter,
		rcvBytes	
			Counter,
		rcvFramesDE		
			Counter,
		rcvBytesDE		
			Counter,
		rcvFramesDiscard	
			Counter,
		rcvBytesDiscard	
			Counter,
-- Discarded due to 
		rcvFramesDiscShelfAlarm	
			Counter,
		rcvFramesDiscXceedQDepth
			Counter,
		rcvBytesDiscXceedQDepth
			Counter,
		rcvFramesDiscXceedDEThresh
			Counter,
-- Rcv Congestion
		rcvFramesFECN
			Counter,
		rcvFramesBECN
			Counter,
		rcvFramesTaggedFECN
			Counter,
		rcvFramesTaggedBECN
			Counter,
		rcvFramesTaggedDE
			Counter,
		rcvBytesTaggedDE
			Counter,
		rcvKbpsAIR
			INTEGER,
-- Xmt Counters
		xmtFrames		
			Counter,
		xmtBytes	
			Counter,
		xmtFramesFECN
			Counter,
		xmtFramesBECN
			Counter,
		xmtFramesDE		
			Counter,
		xmtBytesDE		
			Counter,
		xmtFramesDiscard	
			Counter,
		xmtBytesDiscard	
			Counter,
		xmtFramesDiscXceedQDepth
			Counter,
		xmtBytesDiscXceedQDepth
			Counter,
		xmtFramesDiscXceedDEThresh
			Counter,
		xmtFramesDiscPhyLayerFail
			Counter,
		xmtFramesDiscCRCError
			Counter,
		xmtFramesDiscReassmFail
			Counter,
		xmtFramesDiscSrcAbort
			Counter,
		xmtFramesDuringLMIAlarm
			Counter,
		xmtBytesDuringLMIAlarm
			Counter,
		xmtFramesTaggedFECN
			Counter,
		xmtFramesTaggedBECN
			Counter,
		xmtKbpsAIR
			INTEGER,
		chanClrButton
         INTEGER,
      chanSecUpTime
         Counter,
      rcvFramesDiscUPC
         Counter,
      xmtBytesTaggedDE
         Counter,
      xmtFramesTaggedDE
         Counter,
      xmtFramesInvalidCPIs
         Counter,
      xmtFramesLengthViolations
         Counter,
      xmtFramesOversizedSDUs
         Counter,
      xmtFramesUnknownProtocols
         Counter,
      rcvFramesUnknownProtocols
			Counter
}

cntChanNum OBJECT-TYPE
	SYNTAX	INTEGER (16..271)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the virtual connection index
		"
	::= { frChanCntGrpEntry 1}

rcvFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames Received on the ingress
		"
	::= { frChanCntGrpEntry	2 }

rcvBytes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of bytes Received on the ingress
		"
	::= { frChanCntGrpEntry	3 }

rcvFramesDE OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of DE frames Received on the ingress
		"
	::= { frChanCntGrpEntry	4 }

rcvBytesDE OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of DE bytes Received on the ingress
		"
	::= { frChanCntGrpEntry	5 }

rcvFramesDiscard OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the ingress
		"
	::= { frChanCntGrpEntry	6 }

rcvBytesDiscard OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of bytes discarded on the ingress
		"
	::= { frChanCntGrpEntry	7 }

rcvFramesDiscShelfAlarm OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the ingress
		 due to shelf alarm
		"
	::= { frChanCntGrpEntry	8 }

rcvFramesDiscXceedQDepth OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the ingress
		 due to exceeded queue depth
		"
	::= { frChanCntGrpEntry	9 }

rcvBytesDiscXceedQDepth OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of bytes discarded on the ingress
		 due to exceeded queue depth
		"
	::= { frChanCntGrpEntry	10 }

rcvFramesDiscXceedDEThresh OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the ingress
		 due to exceeded DE Threshold
		"
	::= { frChanCntGrpEntry	11 }

rcvFramesFECN OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames received with
		 FECN bit already set
		"
	::= { frChanCntGrpEntry	12 }

rcvFramesBECN OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames received with
		 BECN bit already set
		"
	::= { frChanCntGrpEntry	13 }

rcvFramesTaggedFECN OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames received that were
		 tagged with FECN bit
		"
	::= { frChanCntGrpEntry	14 }

rcvFramesTaggedBECN OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames received that were
		 tagged with BECN bit
		"
	::= { frChanCntGrpEntry	15 }

rcvFramesTaggedDE OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames received that were
		 tagged with DE bit
		"
	::= { frChanCntGrpEntry	16 }

rcvBytesTaggedDE OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of bytes received that were
		 tagged with DE bit
		"
	::= { frChanCntGrpEntry	17 }


rcvKbpsAIR OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Received Average Information Rate in KBPS
		"
	::= { frChanCntGrpEntry	18 }

xmtFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames transmitted
		"
	::= { frChanCntGrpEntry	19 }

xmtBytes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of bytes transmitted
		"
	::= { frChanCntGrpEntry	20 }

xmtFramesFECN OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames transmittedc with
		 FECN bit already set
		"
	::= { frChanCntGrpEntry	21 }

xmtFramesBECN OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames transmitted with
		 BECN bit already set
		"
	::= { frChanCntGrpEntry	22 }

xmtFramesDE OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of DE frames transmitted
		"
	::= { frChanCntGrpEntry	23 }

xmtBytesDE OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of DE bytes transmitted
		"
	::= { frChanCntGrpEntry	24 }

xmtFramesDiscard OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the eggress
		"
	::= { frChanCntGrpEntry	25 }

xmtBytesDiscard OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of bytes discarded on the egress
		"
	::= { frChanCntGrpEntry	26 }

xmtFramesDiscXceedQDepth OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the egress
		 due to exceeded queue depth
		"
	::= { frChanCntGrpEntry	27 }

xmtBytesDiscXceedQDepth OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of bytes discarded on the egress
		 due to exceeded queue depth
		"
	::= { frChanCntGrpEntry	28 }

xmtFramesDiscXceedDEThresh OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the egress
		 due to exceeded DE Threshold
		"
	::= { frChanCntGrpEntry	29 }

xmtFramesDiscPhyLayerFail OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the egress
		 due to physical layer failure
		"
	::= { frChanCntGrpEntry	30 }

xmtFramesDiscCRCError OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the egress
		 due to CRC Error
		"
	::= { frChanCntGrpEntry	31 }

xmtFramesDiscReassmFail OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the egress
		 due to reassembly failure
		"
	::= { frChanCntGrpEntry	32 }

xmtFramesDiscSrcAbort OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the egress
		 due to source abort
		"
	::= { frChanCntGrpEntry	33 }

xmtFramesDuringLMIAlarm OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames transmitted during
		 LMI logical port alarm
		"
	::= { frChanCntGrpEntry	34 }

xmtBytesDuringLMIAlarm OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of bytes transmitted during
		 LMI logical port alarm
		"
	::= { frChanCntGrpEntry	35 }

xmtFramesTaggedFECN OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames transmitted that were
		 tagged with FECN bit
		"
	::= { frChanCntGrpEntry	36 }

xmtFramesTaggedBECN OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames transmitted that were
		 tagged with BECN bit
		"
	::= { frChanCntGrpEntry	37 }

xmtKbpsAIR OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Transmitted Average Information Rate in KBPS
		"
	::= { frChanCntGrpEntry	38 }

chanClrButton OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	write-only
	STATUS	mandatory
	DESCRIPTION		  
		"Channel clear button
		"
	::= { frChanCntGrpEntry 39 }

 
xmtFramesTaggedDE OBJECT-TYPE
   SYNTAX   Counter
   ACCESS   read-only
   STATUS   mandatory
   DESCRIPTION
      "The number of frames transmitted which have been DE tagged
       at the far end ingress in excess of CIR
      "
   ::= { frChanCntGrpEntry 40 }
 
xmtBytesTaggedDE OBJECT-TYPE
   SYNTAX   Counter
   ACCESS   read-only
   STATUS   mandatory
   DESCRIPTION
      "The number of bytes transmitted which have been DE tagged
       at the far end ingress in excess of CIR
      "
   ::= { frChanCntGrpEntry 41 }
 
rcvFramesDiscUPC OBJECT-TYPE
   SYNTAX   Counter
   ACCESS   read-only
   STATUS   mandatory
   DESCRIPTION
      "The number of frames discarded at ingress
       due to the UPC measurement in excess of CIR+EIR
      "
   ::= { frChanCntGrpEntry 42 }
 
chanSecUpTime OBJECT-TYPE
   SYNTAX   Counter
   ACCESS   read-only
   STATUS   mandatory
   DESCRIPTION
      "The time in seconds the PVC stay in service
      "
   ::= { frChanCntGrpEntry 43 }
 

xmtFramesInvalidCPIs OBJECT-TYPE
   SYNTAX   Counter
   ACCESS   read-only
   STATUS   mandatory
   DESCRIPTION   
      "invalid CPI header, currently valid is 0
      "
   ::= { frChanCntGrpEntry 44 }
 
xmtFramesLengthViolations OBJECT-TYPE
   SYNTAX   Counter
   ACCESS   read-only
   STATUS   mandatory
   DESCRIPTION
      "the length is violated
      "
   ::= { frChanCntGrpEntry 45 }
 
xmtFramesOversizedSDUs OBJECT-TYPE
   SYNTAX   Counter
   ACCESS   read-only
   STATUS   mandatory
   DESCRIPTION
      "the size is beyond the max
      "
   ::= { frChanCntGrpEntry 46 }
 
xmtFramesUnknownProtocols OBJECT-TYPE
   SYNTAX   Counter
   ACCESS   read-only
   STATUS   mandatory
   DESCRIPTION
      "used only in SIW for PDUs that are dropped
      "
   ::= { frChanCntGrpEntry 47 }
 
rcvFramesUnknownProtocols OBJECT-TYPE
   SYNTAX   Counter
   ACCESS   read-only
   STATUS   mandatory
   DESCRIPTION
      "used only in SIW for PDUs that are dropped
      "
   ::= { frChanCntGrpEntry 48 }


-- ------------------------------------------------------------------------
-- End of frChanCnt group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






-- frPort        		OBJECT IDENTIFIER ::= { frameRelay 1 }
-- frPortCnt		OBJECT IDENTIFIER ::= { frPort 2 }
frPortCntPortGrp        OBJECT IDENTIFIER ::= { frPortCnt 1 }


-- ------------------------------------------------------------------------
--
-- frPortCounters group
-- Channel OR VC COUNTERS 
--
-- ------------------------------------------------------------------------


frPortCntPortGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF FrPortCntPortGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for logical port interface
		 there are 128 entries for 4 E1s or 96 for 4 T1s
		"
	::= { frPortCntPortGrp 1 }


frPortCntPortGrpEntry	OBJECT-TYPE
	SYNTAX	FrPortCntPortGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical channel
		"
	INDEX	{ cntPortNum }
	::= { frPortCntPortGrpTable 1}

FrPortCntPortGrpEntry ::=
	SEQUENCE {
		cntPortNum 	
			INTEGER,
-- Rcv Counters
		rcvPortFrames		
			Counter,
		rcvPortBytes		
			Counter,
		rcvPortFramesDE		
			Counter,
		rcvPortFramesFECN
			Counter,
		rcvPortFramesBECN
			Counter,
-- Discarded due to 
		rcvFramesDiscCRCError	
			Counter,
		rcvFramesDiscAlignmentError
			Counter,
		rcvFramesDiscIllegalLen
			Counter,
		rcvFramesDiscIllegalHeader
			Counter,
		rcvFramesAbort
			Counter,
		rcvFramesUnknownDLCI
			Counter,
		rcvLastUnknownDLCI
			INTEGER,
-- Rcv Congestion
		rcvPortFramesTaggedFECN
			Counter,
		rcvPortFramesTaggedBECN
			Counter,
		rcvPortFramesTaggedDE
			Counter,
		rcvPortFramesDiscXceedDEThresh
			Counter,
		rcvPortKbpsAIR
			INTEGER,
		rcvBufNotAvailable
			Counter,
-- Xmt Counters
		xmtPortFrames		
			Counter,
		xmtPortBytes		
			Counter,
		xmtPortFramesFECN
			Counter,
		xmtPortFramesBECN
			Counter,
		xmtPortFramesDiscXceedQDepth
			Counter,
		xmtPortBytesDiscXceedQDepth
			Counter,
		xmtPortFramesDuringLMIAlarm
			Counter,
		xmtPortBytesDuringLMIAlarm
			Counter,
		xmtFramesAbort		
			Counter,
		xmtFramesUnderrun		
			Counter,
		xmtPortKbpsAIR
			INTEGER,
		xmtBufNotAvailable
			Counter,
		portClrButton
			INTEGER,
                rcvFramesDiscNoChan
                        Counter
}

cntPortNum OBJECT-TYPE
	SYNTAX	INTEGER (1..128)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the logical port index
		"
	::= { frPortCntPortGrpEntry 1}

rcvPortFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames Received on the ingress
		"
	::= { frPortCntPortGrpEntry	2 }

rcvPortBytes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of bytes Received on the ingress
		"
	::= { frPortCntPortGrpEntry	3 }

rcvPortFramesDE OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames with DE bit set Received on the ingress
		"
	::= { frPortCntPortGrpEntry	4 }

rcvPortFramesFECN OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames with FECN bit set Received on the ingress
		"
	::= { frPortCntPortGrpEntry	5 }

rcvPortFramesBECN OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames with BECN bit set Received on the ingress
		"
	::= { frPortCntPortGrpEntry	6 }

rcvFramesDiscCRCError OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the ingress
		 due to CRC error
		"
	::= { frPortCntPortGrpEntry	7 }

rcvFramesDiscAlignmentError OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the ingress
		 due to Alignment error
		"
	::= { frPortCntPortGrpEntry	8 }

rcvFramesDiscIllegalLen OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the ingress
		 due to illegal length
		"
	::= { frPortCntPortGrpEntry	9 }

rcvFramesDiscIllegalHeader OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the ingress
		 due to illegal header
		"
	::= { frPortCntPortGrpEntry	10 }

rcvFramesAbort OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of received frames aborted
		"
	::= { frPortCntPortGrpEntry	11 }

rcvFramesUnknownDLCI OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames received with an unknown DLCI
		"
	::= { frPortCntPortGrpEntry	12 }

rcvLastUnknownDLCI OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The last unknown DLCI received
		"
	::= { frPortCntPortGrpEntry	13 }

rcvPortFramesTaggedFECN OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames received that were
		 tagged with FECN bit
		"
	::= { frPortCntPortGrpEntry	14 }

rcvPortFramesTaggedBECN OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames received that were
		 tagged with BECN bit
		"
	::= { frPortCntPortGrpEntry	15 }

rcvPortFramesTaggedDE OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames received that were
		 tagged with DE bit
		"
	::= { frPortCntPortGrpEntry	16 }

rcvPortFramesDiscXceedDEThresh OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the ingress
		 due to exceeded DE Threshold
		"
	::= { frPortCntPortGrpEntry	17 }

rcvPortKbpsAIR OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Received Average Information Rate in KBPS
		"
	::= { frPortCntPortGrpEntry	18 }

rcvBufNotAvailable OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of times the receiver is turned off
		"
	::= { frPortCntPortGrpEntry	19 }

xmtPortFrames OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames transmitted
		"
	::= { frPortCntPortGrpEntry	20 }

xmtPortBytes OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of bytes transmitted
		"
	::= { frPortCntPortGrpEntry	21 }

xmtPortFramesFECN OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames transmittedc with
		 FECN bit already set
		"
	::= { frPortCntPortGrpEntry	22 }

xmtPortFramesBECN OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames transmitted with
		 BECN bit already set
		"
	::= { frPortCntPortGrpEntry	23 }

xmtPortFramesDiscXceedQDepth OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded on the egress
		 due to exceeded queue depth
		"
	::= { frPortCntPortGrpEntry	24 }

xmtPortBytesDiscXceedQDepth OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of bytes discarded on the egress
		 due to exceeded queue depth
		"
	::= { frPortCntPortGrpEntry	25 }

xmtPortFramesDuringLMIAlarm OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames transmitted during
		 LMI logical port alarm
		"
	::= { frPortCntPortGrpEntry	26 }

xmtPortBytesDuringLMIAlarm OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of bytes transmitted during
		 LMI logical port alarm
		"
	::= { frPortCntPortGrpEntry	27 }

xmtFramesAbort OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of transmit frames aborted
		"
	::= { frPortCntPortGrpEntry	28 }

xmtFramesUnderrun OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of frames discarded due to underrun
		"
	::= { frPortCntPortGrpEntry	29 }

xmtPortKbpsAIR OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Transmit Average Information Rate in KBPS
		"
	::= { frPortCntPortGrpEntry	30 }

xmtBufNotAvailable OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of times the transmitter is turned off
		"
	::= { frPortCntPortGrpEntry	31 }

portClrButton OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	write-only
	STATUS	mandatory
	DESCRIPTION		  
		"Port clear button
		"
	::= { frPortCntPortGrpEntry	32 }

rcvFramesDiscNoChan OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The number of frames received when no channel is setup
                "
        ::= { frPortCntPortGrpEntry     33 }


-- ------------------------------------------------------------------------
-- End of frPortCntPortGrp group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






dsx1AlmGrp		OBJECT IDENTIFIER ::= { dsx1Line 3 }

-- ------------------------------------------------------------------------
-- ds1Alm group
--
-- This group contains ds1 line alarm table
-- ------------------------------------------------------------------------

	dsx1AlmGrpTable OBJECT-TYPE
		SYNTAX	SEQUENCE OF Dsx1AlmGrpEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"The ATM interface alarm configuration table. The 
			 size of table is given by the value of dsx3LineNum"
		::= { dsx1AlmGrp 1 }

	dsx1AlmGrpEntry OBJECT-TYPE
		SYNTAX	Dsx1AlmGrpEntry
		ACCESS  not-accessible
		STATUS  mandatory
		DESCRIPTION
			"An entry in the DS3 Alarm table"
		INDEX	{ almLineNum }
		::= { dsx1AlmGrpTable 1 }

	Dsx1AlmGrpEntry ::=
		SEQUENCE {
			almLineNum     	            INTEGER,
			lineAlarmState     	    INTEGER,
			lineStatisticalAlarmState   INTEGER,
			lCVCurrent                  Counter,
			lCV15MinBucket              Counter,
                        lCV24HrBucket               Counter,
			lESCurrent                  Counter,
			lES15MinBucket              Counter,
                        lES24HrBucket               Counter,
			lSESCurrent                 Counter,
			lSES15MinBucket             Counter,
                        lSES24HrBucket              Counter,
			cRCCurrent                  Counter,
			cRC15MinBucket              Counter,
                        cRC24HrBucket               Counter,
			cRCESCurrent                Counter,
			cRCES15MinBucket            Counter,
                        cRCES24HrBucket             Counter,
			cRCSESCurrent               Counter,
			cRCSES15MinBucket           Counter,
                        cRCSES24HrBucket            Counter,
			sEFSCurrent                 Counter,
			sEFS15MinBucket             Counter,
                        sEFS24HrBucket              Counter,
			aISSCurrent                 Counter,
			aISS15MinBucket             Counter,
                        aISS24HrBucket              Counter,
			uASCurrent                  Counter,
			uAS15MinBucket              Counter,
                        uAS24HrBucket               Counter,
                        percentEFS                  INTEGER,
			alarmClrButton		    INTEGER
                	}

	almLineNum OBJECT-TYPE
		SYNTAX	INTEGER (1..4)
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This object is the identifier of a DS1/E1
		 	Interface on a managed device.  If there is an
		 	ifEntry that is directly associated with this
		 	and only this DS1/E1 interface, it should have
		 	the same value as ifIndex.  Otherwise, number
		 	the ds1LineIndices with an unique identifier
		 	following the rules of choosing a number that
		 	is greater than ifNumber and numbering the
		 	inside interfaces (e.g., equipment side) with
		 	even numbers and outside interfaces (e.g,
		 	network side) with odd numbers."
		::= { dsx1AlmGrpEntry 1 }

	lineAlarmState OBJECT-TYPE
		SYNTAX	INTEGER (0..511)
		ACCESS	read-only
		STATUS  mandatory
		DESCRIPTION
			"This variable is a bitmap of the DSX1 Line ALarms
                         on the AUM. A value of zero indicates no alarms.
                         Itemized below are the individual bits:
                         BitPosition    Alarm
                         -----------    -----
                         0              Receiving RAI
                         1              Transmitting RAI
                         2              Receiving AIS
                         3              Transmitting AIS
                         4              Receiving OOF
                         5              Receiving LOS
                         6              Near End Local Loopback in effect
                         7              Near End Remote Loopback in effect
                         8              Receiving test pattern
			"
		::= { dsx1AlmGrpEntry 2 }

	lineStatisticalAlarmState OBJECT-TYPE
		SYNTAX	INTEGER
		ACCESS	read-only
		STATUS  mandatory
		DESCRIPTION
			"This variable is a bitmap of the DSX1 Line Statictical
                         Alarms on the AUM. A value of zero indicates no alarms.
                         Itemized below are the individual alarm bits:
                         BitPosition    Alarm
                         -----------    -----
                         0              LCV 15 minute threshold exceeded
                         1              LCV 24 hour threshold exceeded
                         2              LES 15 minute threshold exceeded
                         3              LES 24 hour threshold exceeded
                         4              LSES 15 minute threshold exceeded
                         5              LSES 24 hour threshold exceeded
                         6              CRC 15 minute threshold exceeded
                         7              CRC 24 hour threshold exceeded
                         8              CRCES 15 minute threshold exceeded
                         9              CRCES 24 hour threshold exceeded
                         10             CRCSES 15 minute threshold exceeded
                         11             CRCSES 24 hour threshold exceeded
                         12             SEFS 15 minute threshold exceeded
                         13             SEFS 24 hour threshold exceeded
                         14             AISS 15 minute threshold exceeded
                         15             AISS 24 hour threshold exceeded
                         16             UAS 15 minute threshold exceeded
                         17             UAS 24 hour threshold exceeded
			"
		::= { dsx1AlmGrpEntry 3 }

        lCVCurrent      OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         Line code violations encountered by the interface."
		::= { dsx1AlmGrpEntry 4 }

        lCV15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"The counter associated with the number of 
                         Line code violations in the last 15 minute period 
			 encountered by the interface."
		::= { dsx1AlmGrpEntry 5 }

        lCV24HrBucket   OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"The counter associated with the number of 
                         Line code violations in the last 24 hour period 
			 encountered by the interface."
		::= { dsx1AlmGrpEntry 6 }

        lESCurrent      OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         Line code violations Errored Seconds
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 7 }

        lES15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         Line code violations Errored Seconds in the last 15 minutes
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 8 }

        lES24HrBucket   OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         Line code violations Errored Seconds in the last 24 hours
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 9 }

        lSESCurrent     OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         Line code violations Severely Errored Seconds
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 10 }

        lSES15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         LCV Severely Errored Seconds in the last 15 minutes
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 11 }

        lSES24HrBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         LCV Severely Errored Seconds in the last 24 hours
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 12 }

        cRCCurrent    OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         P Bit code violations 
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 13 }

        cRC15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         P Bit code violations in the last 15 minutes
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 14 }

        cRC24HrBucket   OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         P Bit code violations in the last 24 hours
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 15 }

        cRCESCurrent      OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         PCV Errored Seconds 
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 16 }

        cRCES15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         PCV Errored Seconds in the last 15 minutes
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 17 }

        cRCES24HrBucket   OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         PCV Errored Seconds in the last 24 hours
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 18 }

        cRCSESCurrent     OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         P Bit code violations Severely Errored Seconds
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 19 }

        cRCSES15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         PCV Severely Errored Seconds in the last 15 minutes
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 20 }

        cRCSES24HrBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         PCV Severely Errored Seconds in the last 24 hours
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 21 }

        sEFSCurrent     OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         Severely Errored Framing Seconds
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 22 }

        sEFS15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         Severely Errored Framing Seconds in the last 15 minutes
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 23 }

        sEFS24HrBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         Severely Errored Framing Seconds in the last 24 hours
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 24 }

        aISSCurrent     OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         AIS Severely Errored Seconds
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 25 }

        aISS15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         AIS Severely Errored Seconds in the last 15 minutes
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 26 }

        aISS24HrBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         AIS Severely Errored Seconds in the last 24 hours
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 27 }

        uASCurrent      OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         Unavailable Seconds
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 28 }

        uAS15MinBucket  OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         Unavailable Seconds in the last 15 minutes
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 29 }

        uAS24HrBucket   OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the number of 
                         Unavailable Seconds in the last 24 hours
                         encountered by the interface."
		::= { dsx1AlmGrpEntry 30 }

        percentEFS      OBJECT-TYPE
		SYNTAX	INTEGER
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"This counter counts the %LCV
                         Error Free Secondse."
		::= { dsx1AlmGrpEntry 31 }

	alarmClrButton OBJECT-TYPE
                SYNTAX  INTEGER {
			   noaction (1),
                           clear (2)
                           }
                ACCESS  write-only
                STATUS  mandatory
                DESCRIPTION
			"This variable is used to clear all the alarms
			 for the line.
			1 = No action
			2 = Clear alarm
			"
		::= { dsx1AlmGrpEntry 32 }


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--





-- frChan     	OBJECT IDENTIFIER ::= { frameRelay 2 }
frChanStateGrp 	OBJECT IDENTIFIER ::= { frChan 2 }

-- ------------------------------------------------------------------------
--
-- Group frChannelState
-- Contains status information for channels
--
-- ------------------------------------------------------------------------


frChanStateGrpTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF FrChanStateGrpEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Table of transmit/receive states of channels.
		"
	::= { frChanStateGrp 1 }

frChanStateGrpEntry OBJECT-TYPE
	SYNTAX FrChanStateGrpEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"An entry for FrChannelStateGrpEntry.
		"
	INDEX	{ stateChanNum }
	::= { frChanStateGrpTable 1 }

FrChanStateGrpEntry ::=
	SEQUENCE {
		stateChanNum
         		INTEGER,
		chanState
         		INTEGER,
		xmtAbitState
			INTEGER,
		rcvAbitState
			INTEGER,
		xmtATMState
			INTEGER,
		rcvATMState
			INTEGER
		}

stateChanNum OBJECT-TYPE
	SYNTAX	INTEGER (16..271)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the virtual connection index
		"
	::= { frChanStateGrpEntry 1}

chanState OBJECT-TYPE
	SYNTAX  INTEGER {
		notConfigured(1),
		okay(2),
		alarm(3)
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable indicates the LMI state of the
		 VC (channel)
		"
	::= { frChanStateGrpEntry 2}
 
xmtAbitState OBJECT-TYPE
	SYNTAX INTEGER { 
		off(1),
		sendingAequal1(2),
		sendingAequal0(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The A bit transmit state
		 1 - LMI off 
		 2 - LMI on and connection is O.K. 
		 3 - LMI on and connection has failed 
		"
	::= { frChanStateGrpEntry 3}

rcvAbitState OBJECT-TYPE
	SYNTAX INTEGER {
		off(1),
		rcvingAequal1(2),
		rcvingAequal0(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The A bit receive state
		 1 - LMI off 
		 2 - LMI on and connection is O.K. 
		 3 - LMI on and connection has failed 
		"
	::= { frChanStateGrpEntry 4}

xmtATMState OBJECT-TYPE
	SYNTAX  INTEGER {
		notSending(1),
		sendingAIS(2),
		sendingFERF(3)
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable indicates the transmit state of the
		 VC (channel) on the ATM side
		 1 - Not sending any state 
		 2 - Sending AIS OAM state 
		 3 - Sending FERF OAM state 
		"
	::= { frChanStateGrpEntry 5}
 
rcvATMState OBJECT-TYPE
	SYNTAX  INTEGER {
		notRcving(1),
		rcvingAIS(2),
		rcvingFERF(3)
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable indicates the receiving state of the
		 VC (channel) on the ATM side
		 1 - Not receiving any state 
		 2 - Receiving AIS OAM
		 3 - Receiving FERF OAM 
		"
	::= { frChanStateGrpEntry 6}



-- ------------------------------------------------------------------------
-- End of frChanState group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






-- frPort        		OBJECT IDENTIFIER ::= { frameRelay 1 }
-- frPortCnt		OBJECT IDENTIFIER ::= { frPort 2 }
-- frPortCntSig  		OBJECT IDENTIFIER ::= { frPortCnt 2 }
frPortCntSigLMIGrp   	OBJECT IDENTIFIER ::= { frPortCntSig 1 }


-- ------------------------------------------------------------------------
--
-- frPortCntSigLMI group
-- Port counter signalling values
--
-- ------------------------------------------------------------------------


frPortCntSigLMIGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF FrPortCntSigLMIGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The counter table is for logical port interface
		 there are 128 entries for 4 E1s and 96 entries for 4 T1s
		"
	::= { frPortCntSigLMIGrp 1 }

frPortCntSigLMIGrpEntry	OBJECT-TYPE
	SYNTAX	FrPortCntSigLMIGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical port
		"
	INDEX	{ lmiSigPortNum }
	::= { frPortCntSigLMIGrpTable 1 }

FrPortCntSigLMIGrpEntry ::=
	SEQUENCE {
	   	lmiSigPortNum 	              	INTEGER,
		rcvStatusInquiry              	Counter, 
		rcvInvalidRequest             	Counter, 
		rcvUNISeqMismatch             	Counter, 
		xmtStatus			Counter, 
		xmtAsynchUpdate			Counter, 
		uniSignalingTimeout		Counter, 
		xmtStatusInquiry		Counter, 
		rcvStatus			Counter, 
		rcvAsynchUpdate			Counter, 
		rcvNNISeqMismatch             	Counter, 
		nniSignalingTimeout		Counter
		}


lmiSigPortNum OBJECT-TYPE
	SYNTAX	INTEGER (1..128)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the logical port index
		"
	::= { frPortCntSigLMIGrpEntry 1}

rcvStatusInquiry OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Status Inquiry messages received
		"
	::= { frPortCntSigLMIGrpEntry 2}

rcvInvalidRequest OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Invalid Request messages received
		"
	::= { frPortCntSigLMIGrpEntry 3}

rcvUNISeqMismatch OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of times UNI messages 
		 with sequence number mismatches were received
		"
	::= { frPortCntSigLMIGrpEntry 4}

xmtStatus OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of times Status response messages transmitted
		"
	::= { frPortCntSigLMIGrpEntry 5}

xmtAsynchUpdate OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of times Asynch Status messages transmitted
		"
	::= { frPortCntSigLMIGrpEntry 6}

uniSignalingTimeout OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of times UNI Status requests were not received
		"
	::= { frPortCntSigLMIGrpEntry 7}

xmtStatusInquiry OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of Status Inquiry messages transmitted
		"
	::= { frPortCntSigLMIGrpEntry 8}

rcvStatus OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of times Status response messages received
		"
	::= { frPortCntSigLMIGrpEntry 9}

rcvAsynchUpdate OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of times Asynch Status messages received
		"
	::= { frPortCntSigLMIGrpEntry 10}

rcvNNISeqMismatch OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of times NNI messages 
		 with sequence number mismatches were received
		"
	::= { frPortCntSigLMIGrpEntry 11}

nniSignalingTimeout OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of times NNI Status requests were not received
		"
	::= { frPortCntSigLMIGrpEntry 12}


-- ------------------------------------------------------------------------
-- End of frPortCntSigLMIGrp group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






dsx1CnfGrp		OBJECT IDENTIFIER ::= { dsx1Line 1 }

-- ------------------------------------------------------------------------
-- ds1Config group
--
-- This group contains ds1 line configuration table
-- ------------------------------------------------------------------------

dsx1CnfGrpTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF Dsx1CnfGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The DS1/E1 Configuration table. The table size is
		 given by the value of lineNumofValidEntries
		"
	::= { dsx1CnfGrp 1 }

dsx1CnfGrpEntry OBJECT-TYPE
	SYNTAX	Dsx1CnfGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"An entry in the DS1 Configuration table.
		"
        INDEX	{ lineNum }

	::= { dsx1CnfGrpTable 1 }

Dsx1CnfGrpEntry ::=
	SEQUENCE {
		lineNum
			INTEGER,
		lineConnectorType
			INTEGER,
		lineEnable
			INTEGER,
		lineType
			INTEGER,
		lineCoding
			INTEGER,
       		lineLength
			INTEGER,
		lineXmtClockSource
			INTEGER,
		lineLoopbackCommand
			INTEGER,
		lineSendCode
			INTEGER,
		lineLoopbackCodeDetection
			INTEGER,
-- Shawn K. 5/17/95 Added
		lineUsedTimeslotsBitMap
			INTEGER,
		lineBERTEnable
			INTEGER,
		lineBERTPattern
			INTEGER,
		lineBERTResult
			INTEGER,
		bERTResultClrButton
			INTEGER
    		}

lineNum OBJECT-TYPE
	SYNTAX	INTEGER (1..4)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This object is the identifier of a DS1/E1
		 Interface on a managed device.  If there is an
		 ifEntry that is directly associated with this
		 and only this DS1/E1 interface, it should have
		 the same value as ifIndex.  Otherwise, number
		 the ds1LineIndices with an unique identifier
		 following the rules of choosing a number that
		 is greater than ifNumber and numbering the
		 inside interfaces (e.g., equipment side) with
		 even numbers and outside interfaces (e.g,
		 network side) with odd numbers."
	::= { dsx1CnfGrpEntry 1 }

lineConnectorType OBJECT-TYPE
	SYNTAX  INTEGER {
			db15(1),
			bnc(2),
                        rj48(3)
   			}
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"This variable indicates  the  connector as well 
		 as the backcard type. 1 = T1; 2 = E1
		"
	::= { dsx1CnfGrpEntry 2 }

lineEnable  OBJECT-TYPE
	SYNTAX	INTEGER {
-- Shawn K. 9/5/95 change add/del/mod to disable/enable/mod
		disable(1),
		enable(2),
		modify(3)
		}
	ACCESS read-write
   STATUS  mandatory
   DESCRIPTION
      "This variable disables, enables or modifies a line 
      	1 - disable
	2 - enable
	3 - modify
	"
	::= { dsx1CnfGrpEntry 3 }

lineType OBJECT-TYPE
	SYNTAX  INTEGER {
			dsx1ESF(1),
			dsx1D4(2),
			dsx1E1(3),
			dsx1E1CRC(4),
			dsx1E1MF(5),
			dsx1E1CRC-MF(6),
			dsx1E1clearchannel(7)
   			}
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"This variable indicates  the  variety  of  DS1
		 Line  implementing  this  circuit.  The type of
		 circuit affects the number of bits  per  second
       	 	 that  the circuit can reasonably carry, as well
		 as the interpretation of the  usage  and  error statistics.  
		 The values, in sequence, describe:
		 TITLE:        SPECIFICATION:
		 dsx1ESF       Extended SuperFrame DS1
		 dsx1D4        AT&T D4 format DS1
		 dsx1E1        CCITT Recommendation G.704
			       (Table 4a)
		 dsx1E1-CRC    CCITT Recommendation G.704
                	       (Table 4b)
		 dsxE1-MF      G.704 (Table 4a) with TS16
                	       multiframing enabled
		 dsx1E1-CRC-MF G.704 (Table 4b) with TS16
                	       multiframing enabled
		 dsx1E1clearchannel E1 clear channel, all DS0s can be used 

		NOTE: All E1, E1-CRC, E1-MF or E1-CRC-MF are using DS0 on slot 1
			for signalling and E1-MF or E1-CRC-MF use DS0 on slot 17
			for synchronization.
			(Slot 1 and 16 is based on index 1 to 32 DS0) 
			All DS0s can be used for any port when lineType is
			dsx1E1clearchannel. 
			On a CESM card, only 'dsx1E1clearchannel' option is supported.
		"

	::= { dsx1CnfGrpEntry 4 }

lineCoding OBJECT-TYPE
	SYNTAX  INTEGER {
                 dsx1JBZS (1),
                 dsx1B8ZS (2),
                 dsx1HDB3 (3),
                 dsx1AMI (4)
   			}
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"This variable describes the  variety  of  Zero
		Code  Suppression  used  on  the link, which in
		turn affects a number of its characteristics.

		dsx1JBZS refers the Jammed  Bit  Zero  Suppres-
		sion,  in  which  the  AT&T specification of at
		least one pulse every 8 bit periods is literal-
		ly  implemented  by forcing a pulse in bit 8 of
		each channel.  Thus, only seven bits per  chan-
		nel, or 1.344 Mbps, is available for data.

		dsx1B8ZS refers to the use of a specified  pat-
		tern  of  normal  bits  and  bipolar violations
		which are used to replace a sequence  of  eight
		zero bits.

		E1 links, with or without CRC, use dsx1HDB3  or
        	dsx1AMI.

        	dsx1AMI refers to a mode wherein no  zero  code
        	suppression  is  present  and the line encoding
        	does not solve the problem directly.   In  this
        	application, the higher layer must provide data
        	which meets or exceeds the  pulse  density  re-
        	quirements, such as inverting HDLC data."

	::= { dsx1CnfGrpEntry 5 }

-- Shawn K. 7/25 Fix the line length, it was from 1 to 2
lineLength OBJECT-TYPE
	SYNTAX  INTEGER {
		lineLength0To110Feet(1),
		lineLength110To220Feet(2),
		lineLength220To330Feet(3),
		lineLength330To440Feet(4),
		lineLength440To550Feet(5),
		lineLength550To660Feet(6),
		lineLength660FeetPlus(7),
		lineLength-75-Ohm(8),
		lineLength-120-Ohm(9),
		lineLength0To131Feet(10),
		lineLength131To262Feet(11),
		lineLength262To393Feet(12),
		lineLength393To524Feet(13),
		lineLength524To655Feet(14),
		lineLength655FeetPlus(15)
			}
  	ACCESS	read-write
	STATUS  mandatory
	DESCRIPTION
		"This is not a standard RFC 1407 DS1 variable, it is
		 specific to BASIS implementation. It specifies the line length:
		 1 - 0 to 110 ft (T1 line only) 
		 2 - 110 to 220 ft (T1 line only) 
		 3 - 220 to 330 ft (T1 line only) 
		 4 - 330 to 440 ft (T1 line only) 
		 5 - 440 to 550 ft (T1 line only) 
		 6 - 550 to 660 ft (T1 line only) 
		 7 - greater than 660 ft (T1 line only)
		 8 - 75 ohms (E1 line only (BNC))
		 9 - 120 ohms (E1 line only (DB-15))
		"

	::= { dsx1CnfGrpEntry 6 }

lineXmtClockSource OBJECT-TYPE
  		SYNTAX  INTEGER {
          		loopTiming (1),
                    	localTiming (2)
--                    	throughTiming (3)
                	}
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
           	"The source of Transmit Clock.
            	 'loopTiming' indicates that the recovered  re-
           	 ceive clock is used as the transmit clock.
            	 'localTiming' indicates  that  a  local  clock
           	 source is used.
			     On a CESM card, only 'localTiming' option is supported.
--            	 'throughTiming' indicates that  recovered  re-
--           	 ceive  clock  from another interface is used as
--          	 the transmit clock.
		"
	::= { dsx1CnfGrpEntry 7 }

lineLoopbackCommand OBJECT-TYPE
	SYNTAX  INTEGER {
                 	dsx1NoLoop(1),
                 	dsx1RemoteLoop(2),
                 	dsx1LocalLoop(3)
   			}
         ACCESS  read-write
         STATUS  mandatory
         DESCRIPTION
		"This variable represents the  loopback  confi-
        	 guration of the DS1 interface.  Agents support-
        	 ing read/write access should return badValue in
        	 response to a requested loopback state that the
        	 interface does not support.  The values mean:

        	 dsx1NoLoop
             	 	Not in the loopback state.  A device  that
             	 	is not capable of performing a loopback on
             		the interface shall always return this  as
             		it's value.

        	 dsx1RemoteLoop
             		The received signal at this  interface  is
             		looped  through  the device. Typically the
             		received signal is  looped  back  for  re-
             		transmission  after  it has passed through
             		the device's framing function.

        	 dsx1LocalLoop
             		The local data is looped back
		"
	::= { dsx1CnfGrpEntry 8 }

lineSendCode OBJECT-TYPE
	SYNTAX  INTEGER {
                 	dsx1SendNoCode(1),
                 	dsx1SendLineCode(2),
                 	dsx1SendPayloadCode(3),
                 	dsx1SendResetCode(4)
-- Shawn K. 7/25 remove 5 to 8, it is not needed
--                        dsx1SendQRS(5),
--                        dsx1Send511Pattern(6),
--                        dsx1Send3in24Pattern(7),
--                   	  dsx1SendOtherTestPattern(8)
   			}
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
        	"This variable indicates what type of  code  is
        	 being sent across the DS1 interface by the dev-
        	 ice.  The values mean:

        	 dsx1SendNoCode
             		sending looped or normal data

        	 dsx1SendLineCode
             		sending a request for a line loopback

        	 dsx1SendPayloadCode
             		sending a request for a payload loopback

        	 dsx1SendResetCode
             		sending a loopback termination request

--        	 dsx1SendQRS
--             		sending a Quasi-Random Signal  (QRS)  test
--             		pattern
--
--        	 dsx1Send511Pattern
--             		sending a 511 bit fixed test pattern
--
--        	 dsx1Send3in24Pattern
--             		sending a fixed test pattern of 3 bits set
--             		in 24
--
--        	 dsx1SendOtherTestPattern
--             		sending a test pattern  other  than  those
--             		described by this object
		"
	::= { dsx1CnfGrpEntry 9 }

-- Shawn K. 5/17/95 Added

lineUsedTimeslotsBitMap OBJECT-TYPE
	SYNTAX  INTEGER
  	ACCESS	read-only
	STATUS  mandatory
	DESCRIPTION
		"Bit map of used DS0 for this line
		"

	::= { dsx1CnfGrpEntry 10 }

lineLoopbackCodeDetection OBJECT-TYPE
        SYNTAX  INTEGER {
                        codeDetectDisabled(1),
                        codeDetectEnabled(2)
                        }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "Enable detection of line Loopback Codes
                "

        ::= { dsx1CnfGrpEntry 11 }

lineBERTEnable OBJECT-TYPE
	SYNTAX	INTEGER {
			disable(1),
			enable(2)
			}
	ACCESS  read-write
           STATUS  mandatory
           DESCRIPTION
		"This variable enables BERT
		" 
	::= { dsx1CnfGrpEntry 12 }


lineBERTPattern OBJECT-TYPE
	SYNTAX  INTEGER {
          		allZeros (1),
                    	allOnes (2),
                    	alternateONeZero (3),
                    	doubleOneZero (4),
                    	userOneWords (5),
                    	userTwoWords (6),
                    	userThreeWords (7),
                    	userFourWords (8),
                    	fifteenBit (9),
                    	twentyBit (10),
                    	twentyBitQRSS (11),
                    	twentythreeBit (12)
                	}
        	ACCESS  read-write
        	STATUS  mandatory
        	DESCRIPTION
           	"This variable determines BERT pattern to transmit
		"
	::= { dsx1CnfGrpEntry 13 }

lineBERTResult OBJECT-TYPE
	SYNTAX	INTEGER {
			failed(1),
			passed(2)
			}
	ACCESS  read-write
           STATUS  mandatory
           DESCRIPTION
		"This shows the result of the BERT
		" 
	::= { dsx1CnfGrpEntry 14 }

bERTResultClrButton OBJECT-TYPE
	SYNTAX	INTEGER {
			noaction(1),
			clear(2)
			}
	ACCESS  read-write
           STATUS  mandatory
           DESCRIPTION
		"This clears the result of the BERT
		" 
	::= { dsx1CnfGrpEntry 15 }

-- Scalars

lineNumofValidEntries OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The number of ds1 configuration entries (regardless
		 of their current configuration) in the ds1ConfigTable
		 table."
	::= { dsx1CnfGrp 2 }




--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--





frEndPtMapGrp  	OBJECT IDENTIFIER ::= { frameRelay 3 }

-- ------------------------------------------------------------------------
--
-- Group frChannelState
-- Contains status information for channels
--
-- ------------------------------------------------------------------------


frEndPtMapGrpTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF FrEndPtMapGrpEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Table of transmit/receive states of channels.
		"
	::= { frEndPtMapGrp 1 }

frEndPtMapGrpEntry OBJECT-TYPE
	SYNTAX FrEndPtMapGrpEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"An entry for FrEndPtMapGrpEntry.
		"
	INDEX	{ endPortNum, endDLCI }
	::= { frEndPtMapGrpTable 1 }

FrEndPtMapGrpEntry ::=
	SEQUENCE {
		endPortNum
         		INTEGER,
		endDLCI
         		INTEGER,
		endChanNum
			INTEGER,
		endLineNum
			INTEGER
		}

endPortNum OBJECT-TYPE
	SYNTAX	INTEGER (1..128)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the logical port index
		"
	::= { frEndPtMapGrpEntry 1}

endDLCI OBJECT-TYPE
	SYNTAX  INTEGER (0..1023)
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Refers to the DLCI index
		"
	::= { frEndPtMapGrpEntry 2}
 
endChanNum OBJECT-TYPE
	SYNTAX INTEGER (16..271)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Logical connection number
		"
	::= { frEndPtMapGrpEntry 3}

endLineNum OBJECT-TYPE
	SYNTAX INTEGER (1..4)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Refers to the physical line index
		"
	::= { frEndPtMapGrpEntry 4}



-- ------------------------------------------------------------------------
-- End of frEndPtMap group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






-- frPort        		OBJECT IDENTIFIER ::= { frameRelay 1 }
-- frPortCnf		OBJECT IDENTIFIER ::= { frPort 1 }
-- frPortCnfSig  		OBJECT IDENTIFIER ::= { frPortCnf 2 }
frPortCnfSigCLLMGrp   	OBJECT IDENTIFIER ::= { frPortCnfSig 2 }


-- ------------------------------------------------------------------------
--
-- frPortCnfSigCLLM group
-- Port configurable signalling parameters  
--
-- ------------------------------------------------------------------------


frPortCnfSigCLLMGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF FrPortCnfSigCLLMGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for logical port interface
		 there are 128 entries for 4 E1s and 96 entries for 4 T1s
		"
	::= { frPortCnfSigCLLMGrp 1 }

frPortCnfSigCLLMGrpEntry	OBJECT-TYPE
	SYNTAX	FrPortCnfSigCLLMGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical port
		"
	INDEX	{ cllmCnfPortNum }
	::= { frPortCnfSigCLLMGrpTable 1 }

FrPortCnfSigCLLMGrpEntry ::=
	SEQUENCE {
	   	cllmCnfPortNum 	              INTEGER,
		cllmEnable                    INTEGER, 
		xmtCLLMStatusTimer            INTEGER, 
		rcvCLLMStatusTimer            INTEGER
		}


cllmCnfPortNum OBJECT-TYPE
	SYNTAX	INTEGER (1..128)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the logical port index
		"
	::= { frPortCnfSigCLLMGrpEntry 1}

cllmEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		disable(1),
		enable(2)
		}
	ACCESS read-write
   	STATUS  mandatory
   	DESCRIPTION
      		"This will enable CLLM
		1 - disabled
		2 - enabled
		"
	::= { frPortCnfSigCLLMGrpEntry 2}

xmtCLLMStatusTimer OBJECT-TYPE
	SYNTAX	INTEGER (40..350)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Interval in milliseconds for CLLM to send CLLM updates 
		"
	::= { frPortCnfSigCLLMGrpEntry 3}
		      	   
rcvCLLMStatusTimer OBJECT-TYPE
	SYNTAX	INTEGER {
              rcvCLLMTimerValue (1000)
            }
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Timeout value for receiving CLLM updates 
		"
	::= { frPortCnfSigCLLMGrpEntry 4}



-- ------------------------------------------------------------------------
-- End of frPortCnfSigCLLMGrp group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






-- frPort        		OBJECT IDENTIFIER ::= { frameRelay 1 }
-- frPortCnt		OBJECT IDENTIFIER ::= { frPort 2 }
-- frPortCntSig  		OBJECT IDENTIFIER ::= { frPortCnt 2 }
frPortCntSigCLLMGrp   	OBJECT IDENTIFIER ::= { frPortCntSig 2 }


-- ------------------------------------------------------------------------
--
-- frPortCntSigCLLM group
-- Port counter signalling values
--
-- ------------------------------------------------------------------------


frPortCntSigCLLMGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF FrPortCntSigCLLMGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The counter table is for logical port interface
		 there are 128 entries for 4 E1s and 96 entries for 4 T1s
		"
	::= { frPortCntSigCLLMGrp 1 }

frPortCntSigCLLMGrpEntry	OBJECT-TYPE
	SYNTAX	FrPortCntSigCLLMGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical port
		"
	INDEX	{ cllmSigPortNum }
	::= { frPortCntSigCLLMGrpTable 1 }

FrPortCntSigCLLMGrpEntry ::=
	SEQUENCE {
	   	cllmSigPortNum 	              	INTEGER,
		rcvFramesCLLM             	Counter, 
		rcvBytesCLLM             	Counter, 
		xmtFramesCLLM             	Counter, 
		xmtBytesCLLM             	Counter, 
		cllmFailures             	Counter
		}


cllmSigPortNum OBJECT-TYPE
	SYNTAX	INTEGER (1..128)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the logical port index
		"
	::= { frPortCntSigCLLMGrpEntry 1}

rcvFramesCLLM OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of CLLM frames received
		"
	::= { frPortCntSigCLLMGrpEntry 2}

rcvBytesCLLM OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of CLLM bytes received
		"
	::= { frPortCntSigCLLMGrpEntry 3}

xmtFramesCLLM OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of CLLM frames transmitted
		"
	::= { frPortCntSigCLLMGrpEntry 4}

xmtBytesCLLM OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of CLLM bytes transmitted
		"
	::= { frPortCntSigCLLMGrpEntry 5}

cllmFailures OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of times an expected CLLM message was not received
		"
	::= { frPortCntSigCLLMGrpEntry 6}




-- ------------------------------------------------------------------------
-- End of frPortCntSigCLLMGrp group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--





-- frPort 		OBJECT IDENTIFIER ::= { frameRelay 1 }
frPortStateGrp 	OBJECT IDENTIFIER ::= { frPort 3 }

-- ------------------------------------------------------------------------
--
-- Group frChannelState
-- Contains status information for channels
--
-- ------------------------------------------------------------------------


frPortStateGrpTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF FrPortStateGrpEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Table of transmit/receive states of ports.
		"
	::= { frPortStateGrp 1 }

frPortStateGrpEntry OBJECT-TYPE
	SYNTAX FrPortStateGrpEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"An entry for FrChannelStateGrpEntry.
		"
	INDEX	{ statePortNum }
	::= { frPortStateGrpTable 1 }

FrPortStateGrpEntry ::=
	SEQUENCE {
		statePortNum
         		INTEGER,
		portState
         		INTEGER,
		portSignallingState
			INTEGER
		}

statePortNum OBJECT-TYPE
	SYNTAX	INTEGER (1..128)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the logical port index
		"
	::= { frPortStateGrpEntry 1}

portState OBJECT-TYPE
	SYNTAX  INTEGER {
		notConfigured(1),
		active(2),
		remoteLoopback(3),
		failedDueToLine(4),
		failedDueToSignalling(5),
		inactive(6)
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable indicates the state of the
		 logical port
		"
	::= { frPortStateGrpEntry 2}
 
portSignallingState OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffffff'h) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Bit 0 = 0 -> LMI O.K. or not enabled
		 Bit 0 = 1 -> LMI failed
		 Bit 1 = 0 -> CLLM O.K. or not enabled
		 Bit 1 = 1 -> CLLM failed
		"

	::= { frPortStateGrpEntry 3}


-- ------------------------------------------------------------------------
-- End of frPortState group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






dsx1CntGrp		OBJECT IDENTIFIER ::= { dsx1Line 4 }

-- ------------------------------------------------------------------------
-- ds1Alm group
--
-- This group contains ds1 line alarm table
-- ------------------------------------------------------------------------

         dsx1CntGrpTable OBJECT-TYPE
		SYNTAX	SEQUENCE OF Dsx1CntGrpEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"DS3 Counter table. The table size is given by
			 the value of dsx3LineNum and use dsx3LineIndex
			 for indices."
		::= { dsx1CntGrp 1 }

	dsx1CntGrpEntry OBJECT-TYPE
		SYNTAX	Dsx1CntGrpEntry
		ACCESS  not-accessible
		STATUS  mandatory
		DESCRIPTION
			"An entry in the DSX3 counter table."
		INDEX	{ cntLineNum }
		::= { dsx1CntGrpTable 1 }

	Dsx1CntGrpEntry ::=
		SEQUENCE {
			cntLineNum
				INTEGER,
			rcvLOSCount
				Counter,
			rcvOOFCount
				Counter,
			rcvRAICount
				Counter,
			rcvFECount
				Counter,
			counterClearButton
				INTEGER
        		}

	cntLineNum OBJECT-TYPE
	SYNTAX	INTEGER (1..4)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This object is the identifier of a DS1/E1
		 Interface on a managed device.  If there is an
		 ifEntry that is directly associated with this
		 and only this DS1/E1 interface, it should have
		 the same value as ifIndex.  Otherwise, number
		 the ds1LineIndices with an unique identifier
		 following the rules of choosing a number that
		 is greater than ifNumber and numbering the
		 inside interfaces (e.g., equipment side) with
		 even numbers and outside interfaces (e.g,
		 network side) with odd numbers."
	::= { dsx1CntGrpEntry 1 }

	rcvLOSCount OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"The number of times the Loss of Signal was detected
			 with or without integrating to LOS alarm."
		::= { dsx1CntGrpEntry 2 }

	rcvOOFCount OBJECT-TYPE
                SYNTAX  Counter
                ACCESS  read-only
                STATUS  mandatory
                DESCRIPTION
			"The number of times the Out of Frame was detected
			 with or without integrating to OOF alarm."
		::= { dsx1CntGrpEntry 3 }

	rcvRAICount OBJECT-TYPE
                SYNTAX  Counter
                ACCESS  read-only
                STATUS  mandatory
                DESCRIPTION
			"The number of times Yellow Alarms was detected with
			 or without integrating to RAI alarm."
		::= { dsx1CntGrpEntry 4 }

	rcvFECount OBJECT-TYPE
                SYNTAX  Counter
                ACCESS  read-only
                STATUS  mandatory
                DESCRIPTION
			"The number of Framing Pattern Errors encountered by
			 a DS3/E3 interface."
		::= { dsx1CntGrpEntry 5 }

	counterClearButton OBJECT-TYPE
                SYNTAX  INTEGER {
			   noaction(1),
                           clear (2)
                           }
                ACCESS  write-only
                STATUS  mandatory
                DESCRIPTION
			"This variable is used to clear all the counters."
		::= { dsx1CntGrpEntry 6 }



-- frPort        		OBJECT IDENTIFIER ::= { frameRelay 1 }
-- frPortCnf		OBJECT IDENTIFIER ::= { frPort 1 }
frPortCnfPortGrp  	OBJECT IDENTIFIER ::= { frPortCnf 1 }

-- --------------------------------------------------------------------
--
--
--		LOGICAL PORT CONFIG Group
--
--
-- --------------------------------------------------------------------


frPortCnfPortGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF FrPortCnfPortGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for logical port interface
		 there are 96 entries for 4 DS1s or 128 entries for 4 E1s
		"
	::= { frPortCnfPortGrp 1 }


frPortCnfPortGrpEntry	OBJECT-TYPE
	SYNTAX	FrPortCnfPortGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical port
		"
	INDEX	{ portNum }
    ::= { frPortCnfPortGrpTable 1 }

FrPortCnfPortGrpEntry ::=
	SEQUENCE {
		portNum 	
			INTEGER,
		portLineNum 	
			INTEGER,
      		portRowStatus
         		INTEGER,
		portDs0ConfigBitMap	 	
			INTEGER,
      		portDs0Speed
         		INTEGER,
      		portFlagsBetweenFrames
         		INTEGER,
      		portEqueueServiceRatio
         		INTEGER,
            portSpeed
               INTEGER,
            portAdmin
               INTEGER,
            portType
               INTEGER
		}

portNum	OBJECT-TYPE
	SYNTAX	INTEGER (1..128) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This is logical port number.
		 If we have T1 card then the maximum port number is 96
		 and if we have E1 card the maximum port number can be 128
		"
	::= { frPortCnfPortGrpEntry 1}

portLineNum	OBJECT-TYPE
	SYNTAX	INTEGER (1..4) 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This represents the line number
		"
	::= { frPortCnfPortGrpEntry 2}

portRowStatus  OBJECT-TYPE		
	SYNTAX	INTEGER {
		add(1),
		del(2),
		mod(3)
		}
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
        "This variable enables or modifies the port
		1- add
		2 - del
		3 - mod
        "
        ::= { frPortCnfPortGrpEntry 3 }

portDs0ConfigBitMap	OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffffff'h) 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This respesents bit map of DS0s for a line which
		 are used to form this logical port. Bit 0
		 represents DS0-1.
		"
	::= { frPortCnfPortGrpEntry 4 }

portDs0Speed	OBJECT-TYPE
	SYNTAX	INTEGER {
            speed56k(1),
            speed64k(2) 
            }
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This represents port speed of 64 or 56
            	 1 - speed56k
            	 2 - speed64k
		"
	::= { frPortCnfPortGrpEntry 5 }

portFlagsBetweenFrames	OBJECT-TYPE
	SYNTAX	INTEGER (1..10) 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Number of flags transmitted between FR frames
		"
	::= { frPortCnfPortGrpEntry 6 }

portEqueueServiceRatio	OBJECT-TYPE
	SYNTAX	INTEGER (1..15) 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Number of times queue 1 is serviced 
		 for every time queue 2 is serviced
		"
	::= { frPortCnfPortGrpEntry 7 }

portSpeed       OBJECT-TYPE
        SYNTAX  INTEGER
    ACCESS      read-only
        STATUS  mandatory
        DESCRIPTION
                "Configured speed of port in kbps
                "
        ::= { frPortCnfPortGrpEntry 8 }

portAdmin       OBJECT-TYPE
        SYNTAX  INTEGER {
                 up(1),
                 down(2),
                 write-Only(3)
                }
        ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                " used to up and down the port 
                "
        ::= { frPortCnfPortGrpEntry 9 }

portType	OBJECT-TYPE
	SYNTAX	INTEGER {
            frame-relay(1),
            frFUNI(2),
	    frame-forward(3)
            }
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This represents port type
		"
	::= { frPortCnfPortGrpEntry 10 }

--	PORT usage scalars

portsUsedLine1 	OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffffff'h) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Each bits set represents a DS0 that is used by all the
		 logical ports defined so far for that DS1, the most significant
		 byte is invalid for DS1
		 This is for line 1
		"
	::= { frPortCnfPortGrp 2 }

portsUsedLine2 	OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffffff'h) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Each bits set represents a DS0 that is used by all the
		 logical ports defined so far for that DS1, the most significant
		 byte is invalid for DS1
		 This is for line 2
		"
	::= { frPortCnfPortGrp 3 }

portsUsedLine3 	OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffffff'h) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Each bits set represents a DS0 that is used by all the
		 logical ports defined so far for that DS1, the most significant
		 byte is invalid for DS1
		 This is for line 3
		"
	::= { frPortCnfPortGrp 4 }

portsUsedLine4 	OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffffff'h) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Each bits set represents a DS0 that is used by all the
		 logical ports defined so far for that DS1, the most significant
		 byte is invalid for DS1
		 This is for line 4
		"
	::= { frPortCnfPortGrp 5 }

--
--	Next available port
--

portNextAvailable 	OBJECT-TYPE
	SYNTAX	INTEGER (0..128) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This variable contains the next UNUSED logical port number
		 of the possible 32 DS0s * 4 ports.  
		 This number can be used in channel config table, the 
		 portNextAvailable gets updated if the number gets
		 used to create a logical port.  
		 A '0' indicates that no more ports are available.
		"
	::= { frPortCnfPortGrp 6 }



-- ------------------------------------------------------------------
--
-- BASIS project  CARD SPECIFIC SM MIB
-- 
-- 
-- Created by Shawn K. 5/17/95 
--
-- ------------------------------------------------------------------




smFeatures              OBJECT IDENTIFIER ::= {cardSpecific 6}
smRateControlConfig     OBJECT IDENTIFIER ::= {cardSpecific 7}

-- ------------------------------------------------------------------
--
--  Group "smFeatures"
--  Service Module Features enabled for this card.
--  This contains all the features specific to SM card such as
--  Rate Control, Channelized and forsight feature.
--
-- ------------------------------------------------------------------

channelizedAllowed OBJECT-TYPE
    SYNTAX  INTEGER (1..2)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "BRAM parameter indicating whether this card will support
         DS0 channels.
        "
    ::= { smFeatures 1 }

rateControlAllowed OBJECT-TYPE
    SYNTAX  INTEGER (1..2)
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "BRAM parameter indicating whether this card will support
         foresight.
        "
    ::= { smFeatures 2 }

-- ------------------------------------------------------------------
--
--  Group "smRateControlConfig"
--  Service Module Rate Control Configuration Parameters for this card.
--
-- ------------------------------------------------------------------
 
rateUp OBJECT-TYPE
    SYNTAX  INTEGER (1..100)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        "Rate Up value for this card.
        "
    ::= { smRateControlConfig 1 }
 
 
rateDown OBJECT-TYPE
    SYNTAX  INTEGER (1..100)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        "Rate Down value for this card.
        "
    ::= { smRateControlConfig 2 }
 
rateFastDown OBJECT-TYPE
    SYNTAX  INTEGER (1..100)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        "Rate Fast Down value for this card.
        "
    ::= { smRateControlConfig 3 }
 
 
rtdMeasurementTime OBJECT-TYPE
    SYNTAX  INTEGER (1..255)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        "Round Trip delay measurement time in secs for this card.
        "
    ::= { smRateControlConfig 4 }
 
qirTimeout OBJECT-TYPE
    SYNTAX  INTEGER (1..255)
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        "QIR timeout in secs for this card.
        "
    ::= { smRateControlConfig 5 }




--dsx1Plcp			OBJECT IDENTIFIER ::= { dsx1 3 }
plcpCnfGrp		OBJECT IDENTIFIER ::= { dsx1Plcp 1}

-- --------------------------------------------------------------------
--
--
--		AUSM PLCP CONFIG Group
--
--
-- --------------------------------------------------------------------


ausmLineCnfPlcpGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AusmLineCnfPlcpGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for physical port interface
		 there are 4 entries for either T1 or E1
		"
	::= { plcpCnfGrp 1 }


ausmLineCnfPlcpGrpEntry	OBJECT-TYPE
	SYNTAX	AusmLineCnfPlcpGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for physical port
		"
	INDEX	{ plcpCnfPortNum }
    ::= { ausmLineCnfPlcpGrpTable 1 }

AusmLineCnfPlcpGrpEntry ::=
	SEQUENCE {
		plcpCnfPortNum 	
			INTEGER,
      		cellFraming
         		INTEGER,
      		cellScramble
         		INTEGER,
      		plppLoopBack
         		INTEGER
		}

plcpCnfPortNum	OBJECT-TYPE
	SYNTAX	INTEGER (1..4) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This is physical port number.
		"
	::= { ausmLineCnfPlcpGrpEntry 1}

cellFraming	OBJECT-TYPE
	SYNTAX	INTEGER {
		other (1),
		atm (2),
		plcp (3)
		} 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Currently only ATM is supported
		"
	::= { ausmLineCnfPlcpGrpEntry 2}


cellScramble	OBJECT-TYPE
	SYNTAX	INTEGER {
		noScramble (1),
		scramble (2)
		} 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"selects cell scrambling is required or not
		"
	::= { ausmLineCnfPlcpGrpEntry 3}

plppLoopBack	OBJECT-TYPE
	SYNTAX	INTEGER {
		noLoopBack (1),
		remoteLoopBack (2),
		localLoopBack (3)
		} 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"selects cell scrambling is required or not
		"
	::= { ausmLineCnfPlcpGrpEntry 4}



-- ----------------------------------------------------------
-- End of ausmLineCnfPlcpGrp


--dsx1Plcp		OBJECT IDENTIFIER ::= { dsx1 3 }
plcpAlmCnfGrp	OBJECT IDENTIFIER ::= { dsx1Plcp 2}

-- --------------------------------------------------------------------
--
--
--		AUSM PLCP ALARM CONFIG Group
--
--
-- --------------------------------------------------------------------


ausmLinePlcpAlmCnfGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AusmLinePlcpAlmCnfGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for physical port interface
		 there are 4 entries for either T1 or E1
		"
	::= { plcpAlmCnfGrp 1 }


ausmLinePlcpAlmCnfGrpEntry	OBJECT-TYPE
	SYNTAX	AusmLinePlcpAlmCnfGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for physical port
		"
	INDEX	{ plcpAlmCnfPortNum }
    ::= { ausmLinePlcpAlmCnfGrpTable 1 }

AusmLinePlcpAlmCnfGrpEntry ::=
	SEQUENCE {
		plcpAlmCnfPortNum 	
			INTEGER,
      		cellDelineationSeverity
         		INTEGER,
      		tCStatisticalAlarmSeverity	
         		INTEGER,
      		hECErr15minThreshold
         		INTEGER,
      		hECErr24hrThreshold
         		INTEGER,
      		hECErrES15minThreshold
         		INTEGER,
      		hECErrES24hrThreshold
         		INTEGER,
      		hECErrSES15minThreshold
         		INTEGER,
      		hECErrSES24hrThreshold
         		INTEGER
		}

plcpAlmCnfPortNum	OBJECT-TYPE
	SYNTAX	INTEGER (1..4) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This is physical port number.
		"
	::= { ausmLinePlcpAlmCnfGrpEntry 1}

cellDelineationSeverity 	OBJECT-TYPE
	SYNTAX	INTEGER {
		minor (1),
		major (2),
		inhibit(3)
		} 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"determines the severity of cell delineation alarm
		"
	::= { ausmLinePlcpAlmCnfGrpEntry 2}

tCStatisticalAlarmSeverity	OBJECT-TYPE
	SYNTAX	INTEGER {
		minor (1),
		major (2),
		inhibit(3)
		} 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"determines the severity of statistical alarm
		"
	::= { ausmLinePlcpAlmCnfGrpEntry 3}

hECErr15minThreshold 	OBJECT-TYPE
	SYNTAX  INTEGER (0..'FFFFFFFF'h)
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The value set in this object determines the value
		 which when exceeded in a 15 minute window causes
		 a statistical alarm to be declared.This filed is 
		 for HEC errors
		"
	::= { ausmLinePlcpAlmCnfGrpEntry 4}

hECErr24hrThreshold 	OBJECT-TYPE
	SYNTAX  INTEGER (0..'FFFFFFFF'h)
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The value set in this object determines the value
		 which when exceeded in a 24 hour window causes
		 a statistical alarm to be declared.This filed is 
		 for HEC errors
		"
	::= { ausmLinePlcpAlmCnfGrpEntry 5}

hECErrES15minThreshold 	OBJECT-TYPE
	SYNTAX  INTEGER (0..'FFFFFFFF'h)
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The value set in this object determines the value
		 which when exceeded in a 15 minute window causes
		 a statistical alarm to be declared.This filed is 
		 for HEC Severely Errored seconds
		"
	::= { ausmLinePlcpAlmCnfGrpEntry 6}

hECErrES24hrThreshold 	OBJECT-TYPE
	SYNTAX  INTEGER (0..'FFFFFFFF'h)
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The value set in this object determines the value
		 which when exceeded in a 24 hour window causes
		 a statistical alarm to be declared.This filed is 
		 for HEC Severely Errored seconds
		"
	::= { ausmLinePlcpAlmCnfGrpEntry 7}

hECErrSES15minThreshold	OBJECT-TYPE
	SYNTAX  INTEGER (0..'FFFFFFFF'h)
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The value set in this object determines the value
		 which when exceeded in a 15 minute window causes
		 a statistical alarm to be declared.This filed is 
		 for HEC Severely Errored Seconds
		"
	::= { ausmLinePlcpAlmCnfGrpEntry 8}

hECErrSES24hrThreshold 	OBJECT-TYPE
	SYNTAX  INTEGER (0..'FFFFFFFF'h)
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The value set in this object determines the value
		 which when exceeded in a 24 hour window causes
		 a statistical alarm to be declared.This filed is 
		 for HEC Severely Errored Seconds
		"
	::= { ausmLinePlcpAlmCnfGrpEntry 9}



-- ----------------------------------------------------------
-- End of ausmLinePlcpAlmCnfGrp


--dsx1Plcp		OBJECT IDENTIFIER ::= { dsx1 3 }
plcpAlmGrp	OBJECT IDENTIFIER ::= { dsx1Plcp 3}

-- --------------------------------------------------------------------
--
--
--		AUSM PLCP ALARM Group
--
--
-- --------------------------------------------------------------------


ausmLinePlcpAlmGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AusmLinePlcpAlmGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for physical port interface
		 there are 4 entries for either T1 or E1
		"
	::= { plcpAlmGrp 1 }


ausmLinePlcpAlmGrpEntry	OBJECT-TYPE
	SYNTAX	AusmLinePlcpAlmGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for physical port
		"
	INDEX	{ plcpAlmPortNum }
    ::= { ausmLinePlcpAlmGrpTable 1 }

AusmLinePlcpAlmGrpEntry ::=
	SEQUENCE {
		plcpAlmPortNum 	
			INTEGER,
      		tCAlarmState
         		INTEGER,
      		tCStatisticalAlarmState	
         		INTEGER,
      		hECErrCurrent
         		Counter,
      		hECErr15minBucket
         		Counter,
      		hECErr24hrBucket
         		Counter,
      		hECESErrCurrent
         		Counter,
      		hECESErr15minBucket
         		Counter,
      		hECESErr24hrBucket
         		Counter,
      		hECSESErrCurrent
         		Counter,
      		hECSESErr15minBucket
         		Counter,
      		hECSESErr24hrBucket
         		Counter
		}

plcpAlmPortNum	OBJECT-TYPE
	SYNTAX	INTEGER (1..4) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This is physical port number.
		"
	::= { ausmLinePlcpAlmGrpEntry 1}

tCAlarmState		OBJECT-TYPE
	SYNTAX	INTEGER (0..511)
	ACCESS	read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable is a bitmap of the TC alarms
       		 on the AUSM. A value of zero indicates no alarms.
       		 Itemized below are the individual bits:
       		 BitPosition    Alarm
       		 -----------    -----
       		 0              Out of Cell Delineation
       		 7              Near End Local Loopback in effect
       		 8              Near End Remote Loopback in effect
		"
	::= { ausmLinePlcpAlmGrpEntry 2}

tCStatisticalAlarmState	OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable is a bitmap of the TC Statictical
		 Alarms on the AUM. A value of zero indicates no alarms.
          	 Itemized below are the individual alarm bits:
		 BitPosition    Alarm
		 -----------    -----
	         0              HECErr 15 minute threshold exceeded
		 1              HECErr 24 hour threshold exceeded
		 2              HECErrES 15 minute threshold exceeded
		 3              HECErrES 24 hour threshold exceeded
		 4              HECErrSES 15 minute threshold exceeded
		 5              HECErrSES 24 hour threshold exceeded
		"
	::= { ausmLinePlcpAlmGrpEntry 3}

hECErrCurrent		OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This counter counts the number of 
		 HEC errors encountered by the interface.
		"
	::= { ausmLinePlcpAlmGrpEntry 4}

hECErr15minBucket	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The counter associated with the number of 
		 HEC errors in the last 15 minute period 
		 encountered by the interface.
		"
	::= { ausmLinePlcpAlmGrpEntry 5}

hECErr24hrBucket	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The counter associated with the number of 
		 HEC Errors in the last 24 hour period 
		 encountered by the interface.
		"
	::= { ausmLinePlcpAlmGrpEntry 6}

hECESErrCurrent		OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This counter counts the number of 
		 HEC errored seconds encountered by the interface.
		"
	::= { ausmLinePlcpAlmGrpEntry 7}

hECESErr15minBucket	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The counter associated with the number of 
		 HEC errored seconds in the last 15 minute period 
		 encountered by the interface.
		"
	::= { ausmLinePlcpAlmGrpEntry 8}

hECESErr24hrBucket	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The counter associated with the number of 
		 HEC Errored seconds in the last 24 hour period 
		 encountered by the interface.
		"
	::= { ausmLinePlcpAlmGrpEntry 9}

hECSESErrCurrent	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This counter counts the number of 
		 HEC Severerly Errored seconds encountered by 
		 the interface.
		"
	::= { ausmLinePlcpAlmGrpEntry 10}

hECSESErr15minBucket	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The counter associated with the number of 
		 HEC Severerly Errored seconds in the last 
		 15 minute period encountered by the interface.
		"
	::= { ausmLinePlcpAlmGrpEntry 11}

hECSESErr24hrBucket	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The counter associated with the number of 
		 HEC Severerly Errored seconds in the last 
		 24 hour period encountered by the interface.
		"
	::= { ausmLinePlcpAlmGrpEntry 12}




-- ----------------------------------------------------------
-- End of ausmLinePlcpAlmGrp


--dsx1Plcp			OBJECT IDENTIFIER ::= { dsx1 3 }
plcpCntGrp		OBJECT IDENTIFIER ::= { dsx1Plcp 4}

-- --------------------------------------------------------------------
--
--
--		AUSM PLCP COUNTER Group
--
--
-- --------------------------------------------------------------------


ausmLineCntPlcpGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AusmLineCntPlcpGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for physical port interface
		 there are 4 entries for either T1 or E1
		"
	::= { plcpCntGrp 1 }


ausmLineCntPlcpGrpEntry	OBJECT-TYPE
	SYNTAX	AusmLineCntPlcpGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for physical port
		"
	INDEX	{ plcpCntPortNum }
    ::= { ausmLineCntPlcpGrpTable 1 }

AusmLineCntPlcpGrpEntry ::=
	SEQUENCE {
		plcpCntPortNum 	
			INTEGER,
      		rcvHecErrCount
         		Counter,
      		rcvHecErrSecCount
         		Counter,
      		rcvHecErrSESecCount
         		Counter,
-- Reset counters
		plcpCntClrButton
			INTEGER
		}

plcpCntPortNum	OBJECT-TYPE
	SYNTAX	INTEGER (1..4) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This is physical port number.
		"
	::= { ausmLineCntPlcpGrpEntry 1}

rcvHecErrCount	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Number of cells with HEC error
		"
	::= { ausmLineCntPlcpGrpEntry 2}

rcvHecErrSecCount	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Number of seconds in which HEC error was there
		"
	::= { ausmLineCntPlcpGrpEntry 3}

rcvHecErrSESecCount	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Number of Severely errored seconds 
		"
	::= { ausmLineCntPlcpGrpEntry 4}

plcpCntClrButton OBJECT-TYPE
               SYNTAX  INTEGER {
                        noAction (1),
                        resetCounters (2)
                        }
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
                        "writing a value of 2 resets all the counters
                        "
	::= { ausmLineCntPlcpGrpEntry 5 }
 

-- --------------------------------------------------------------
-- End of ausmLineCntPlcpGrp

-- atm                  OBJECT IDENTIFIER ::= { basisServices 2 }
--ausmPort       		OBJECT IDENTIFIER ::= { atm 1 }
--ausmPortCnf		OBJECT IDENTIFIER ::= { ausmPort 1 }
ausmPortCnfPortGrp	OBJECT IDENTIFIER ::= { ausmPortCnf 1}

-- --------------------------------------------------------------------
--
--
--		AUSM PORT CONFIG Group
--
--
-- --------------------------------------------------------------------


ausmPortCnfPortGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AusmPortCnfPortGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for physical port interface
		 there are 4 entries for either T1 or E1
		"
	::= { ausmPortCnfPortGrp 1 }


ausmPortCnfPortGrpEntry	OBJECT-TYPE
	SYNTAX	AusmPortCnfPortGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for physical port
		"
	INDEX	{ ausmPortNum }
    ::= { ausmPortCnfPortGrpTable 1 }

AusmPortCnfPortGrpEntry ::=
	SEQUENCE {
		ausmPortNum 	
			INTEGER,
   		portEnable
         		INTEGER,
		ausmPortType
			INTEGER,	
		ausmPortIfType
			INTEGER,	
		ausmPortSpeed
			INTEGER,
		atmPortSvcInUse
			INTEGER,
		atmPortSvcShareLcnVpid
			INTEGER,
		atmPortSvcLcnLow
			INTEGER,
		atmPortSvcLcnHigh
			INTEGER,
		atmPortSvcVpidLow
			INTEGER,
		atmPortSvcVpidHigh
			INTEGER,
		atmPortSvcVciLow
			INTEGER,
		atmPortSvcVciHigh
			INTEGER,
		atmPortSvcVpiLow
			INTEGER,
		atmPortSvcVpiHigh
			INTEGER
		}

ausmPortNum	OBJECT-TYPE
	SYNTAX	INTEGER (1..4) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This is physical port number.
		"
	::= { ausmPortCnfPortGrpEntry 1}

portEnable  OBJECT-TYPE		
	SYNTAX	INTEGER {
		disable(1),
		enable(2)
		}
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
        "This variable enables or disables the port
		1 - disable
		2 - enable
        "
        ::= { ausmPortCnfPortGrpEntry 2 }

ausmPortType  OBJECT-TYPE		
	SYNTAX	INTEGER {
		uni(1),
		nni(2)
		}
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
        "This variable is read_only at present 
		indicates whether UNI or NNI interface
		Only uni is supported at present
        "
        ::= { ausmPortCnfPortGrpEntry 3 }

ausmPortIfType  OBJECT-TYPE		
	SYNTAX	INTEGER {
		unknown(1),
		t1(2),
		e1(3)
		}
	ACCESS read-only
        STATUS  mandatory
        DESCRIPTION
        "This variable indicates the type of interface
        "
        ::= { ausmPortCnfPortGrpEntry 4 }

ausmPortSpeed  OBJECT-TYPE		
	SYNTAX	INTEGER 
	ACCESS read-only
        STATUS  mandatory
        DESCRIPTION
        "The speed of the port in cells per second 
        "
        ::= { ausmPortCnfPortGrpEntry 5 }

atmPortSvcInUse OBJECT-TYPE		
	SYNTAX	INTEGER {
		notInUse(1),
		inUse(2)
		}
	ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Setting this object to 2 indicates that the resources
	 (LCN/Local VPID/VCI/VPI) have been partitioned and INS
	 and SV+ are currently using this information. The resource
	 partition information can be changed after setting this
	 variable to 1.
	 The default value is 1 (NotInUse).
        "
        ::= { ausmPortCnfPortGrpEntry 6 }

atmPortSvcShareLcnVpid OBJECT-TYPE		
	SYNTAX	INTEGER {
		portBased (1),
		cardBased (2)
		} 
	ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
        "Indicates whether or not the LCN and VPid address spaces
	 are shared across all the ports.
	 Default value is 2 (cardBased).
        "
        ::= { ausmPortCnfPortGrpEntry 7 }

atmPortSvcLcnLow OBJECT-TYPE		
	SYNTAX	INTEGER (16..271)
	ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
        "The beginning of the LCN range reserved for SVCs.
	 Both the LCN low and high values apply to all ports
	 when the 'atmPortSvcShareLcnVpid' object is set to
	 2 (CardBased). When they are changed for one port the
	 change is applicable/propagated to all ports.
        "
        ::= { ausmPortCnfPortGrpEntry 8 }

atmPortSvcLcnHigh OBJECT-TYPE		
	SYNTAX	INTEGER (16..271)
	ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
        "The end of the LCN range reserved for SVCs.
        "
        ::= { ausmPortCnfPortGrpEntry 9 }

atmPortSvcVpidLow OBJECT-TYPE		
	SYNTAX	INTEGER (1..100)
	ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
        "The beginning of the VPID range reserved for SVCs.
	 Both the VPID low and high values apply to all ports
	 when the 'atmPortSvcShareLcnVpid' object is set to
	 2 (CardBased). When they are changed for one port the
	 change is applicable/propagated to all ports.
        "
        ::= { ausmPortCnfPortGrpEntry 10 }

atmPortSvcVpidHigh OBJECT-TYPE		
	SYNTAX	INTEGER (1..100)
	ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
        "The end of the VPID range reserved for SVCs.
        "
        ::= { ausmPortCnfPortGrpEntry 11 }

atmPortSvcVciLow OBJECT-TYPE		
	SYNTAX	INTEGER (0..'ffff'h)
	ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
        "The beginning of the VCI range reserved for SVCs.
	 For VPI connections the valid VCI values are 0 - 4095
        "
        ::= { ausmPortCnfPortGrpEntry 12 }

atmPortSvcVciHigh OBJECT-TYPE		
	SYNTAX	INTEGER (0..'ffff'h)
	ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
        "The end of the VCI range reserved for SVCs.
	 For VPI connections the valid VCI values are 0 -4095
        "
        ::= { ausmPortCnfPortGrpEntry 13 }

atmPortSvcVpiLow OBJECT-TYPE		
	SYNTAX	INTEGER (0..'ff'h)
	ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
        "The beginning of the VCI range reserved for SVCs.
        "
        ::= { ausmPortCnfPortGrpEntry 14 }

atmPortSvcVpiHigh OBJECT-TYPE		
	SYNTAX	INTEGER (0..'ff'h)
	ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
        "The end of the VPI range reserved for SVCs.
        "
        ::= { ausmPortCnfPortGrpEntry 15 }


-- --------------------------------------------------------------
-- End of ausmPortCnfPortGrp

-- atm                  OBJECT IDENTIFIER ::= { basisServices 2 }
-- ausmPort       		OBJECT IDENTIFIER ::= { atm 1 }
-- ausmPortCnf		OBJECT IDENTIFIER ::= { ausmPort 1 }
ausmPortCnfServiceQueGrp	OBJECT IDENTIFIER ::= { ausmPortCnf 2}

-- --------------------------------------------------------------------
--
--
--		AUSM PORT CONFIG Egress Queue Group
--
--
-- --------------------------------------------------------------------


ausmPortCnfServiceQueGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AusmPortCnfServiceQueGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The Service queue table has 64 entries, 16 each for
		 every port, in addition there are 4 queues for 
		 OAM/ILMI traffic
		"
	::= { ausmPortCnfServiceQueGrp 1 }


ausmPortCnfServiceQueGrpEntry	OBJECT-TYPE
	SYNTAX	AusmPortCnfServiceQueGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for a single queue
		"
	INDEX	{ servicePortNum,egrQIndex }
    ::= { ausmPortCnfServiceQueGrpTable 1 }

AusmPortCnfServiceQueGrpEntry ::=
	SEQUENCE {
		egrQIndex 
			INTEGER,
      		servicePortNum
         		INTEGER,
		egrQBinState
			INTEGER,
		egrQServiceSequence
			INTEGER,
		egrQDepthMax
			INTEGER,
		egrQCLPThreshHigh
			INTEGER,
		egrQCLPThreshLow
			INTEGER,
		egrQEfciThresh
			INTEGER,
		egrQAlgorithm
			INTEGER,
		egrMaxBwInc
			INTEGER,
		egrMinBwInc
			INTEGER,
		egrQCLPState
			INTEGER,
-- Egress counters 
		egrQfullDiscardCells
			Counter,
		egrQClpSetDiscardCells
			Counter
		}

egrQIndex	OBJECT-TYPE
		SYNTAX	INTEGER (1..12) 
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
		"Egress queue number 
		"
		::= { ausmPortCnfServiceQueGrpEntry 1}

servicePortNum	OBJECT-TYPE
		SYNTAX	INTEGER (1..4) 
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
		"physical port number to which egress queue is associated.
		 discard the following comment
		 This is read only and queue mapping is as follows
		1-16	port no 1
		17-32	port no 2
		33-48	port no 3
		49-64	port no 4
		"
		::= { ausmPortCnfServiceQueGrpEntry 2}

egrQBinState	OBJECT-TYPE
		SYNTAX	INTEGER
		{
 			disable (1),
 			enable (2) 
 		}
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
		"Egress queue state 
		"
		::= { ausmPortCnfServiceQueGrpEntry 3}

egrQServiceSequence	OBJECT-TYPE
		SYNTAX	INTEGER (1..12) 
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
		"Egress queue number sequence in the priority list 
		"
		::= { ausmPortCnfServiceQueGrpEntry 4}

egrQDepthMax	OBJECT-TYPE		
		SYNTAX	INTEGER (1..8000) 
		ACCESS read-write
      	 	STATUS  mandatory
        	DESCRIPTION
		"The maximum depth of the egress queue
		"
        	::= { ausmPortCnfServiceQueGrpEntry 5 }

egrQCLPThreshHigh	OBJECT-TYPE		
		SYNTAX	INTEGER (1..8000) 
		ACCESS read-write
      	 	STATUS  mandatory
        	DESCRIPTION
		"High CLP threshold of the egress queue
		"
        	::= { ausmPortCnfServiceQueGrpEntry 6 }

egrQCLPThreshLow	OBJECT-TYPE		
		SYNTAX	INTEGER (1..8000) 
		ACCESS read-write
      	 	STATUS  mandatory
        	DESCRIPTION
		"Low CLP threshold of the egress queue
		"
        	::= { ausmPortCnfServiceQueGrpEntry 7 }

egrQEfciThresh	OBJECT-TYPE		
		SYNTAX	INTEGER (1..8000) 
		ACCESS read-write
      	 	STATUS  mandatory
        	DESCRIPTION
		"Threshold of the egress queue for EFCI
		"
        	::= { ausmPortCnfServiceQueGrpEntry 8 }

egrQAlgorithm	OBJECT-TYPE		
		SYNTAX	INTEGER (1..'ff'h) 
		ACCESS read-write
      	 	STATUS  mandatory
        	DESCRIPTION
		"The algorithm number for the Egress queue
		 1-5 are valid values
		 'ff'h is disable	
		"
        	::= { ausmPortCnfServiceQueGrpEntry 9 }

egrMaxBwInc	OBJECT-TYPE		
		SYNTAX	INTEGER (1..255) 
		ACCESS read-write
      	 	STATUS  mandatory
        	DESCRIPTION
		"The increment for the Maximum carry for the queue 
		"
        	::= { ausmPortCnfServiceQueGrpEntry 10 }

egrMinBwInc	OBJECT-TYPE		
		SYNTAX	INTEGER (1..255) 
		ACCESS read-write
      	 	STATUS  mandatory
        	DESCRIPTION
		"The increment for the minimum carry for the queue 
		"
        	::= { ausmPortCnfServiceQueGrpEntry 11 }
egrQCLPState	OBJECT-TYPE		
 		SYNTAX	INTEGER 
		{
 			clplow (1),
 			clphigh (2) 
 		}
		ACCESS read-only
      	 	STATUS  mandatory
        	DESCRIPTION
 		"this variable indicates the CLP state for the queue
 		"
        	::= { ausmPortCnfServiceQueGrpEntry 12 }

-- Egress counters

egrQfullDiscardCells	OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION		  
			"The number of cells discarded due to Egress Q full
			"
        	::= { ausmPortCnfServiceQueGrpEntry 13 }

egrQClpSetDiscardCells	OBJECT-TYPE
		SYNTAX	Counter
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION		  
			"The number of CLP set cells discarded in Egress direction 
			"
        	::= { ausmPortCnfServiceQueGrpEntry 14 }


-- ------------------------------------------------------------
-- End of ausmPortCnfServiceQueGrp
--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--





NetPrefix::= OCTET STRING (SIZE (8 | 13))


-- atm                  OBJECT IDENTIFIER ::= { basisServices 2 }
--ausmPort       		OBJECT IDENTIFIER ::= { atm 1 }
--ausmPortCnf		OBJECT IDENTIFIER ::= { ausmPort 1 }
ausmPortCnfSig		OBJECT IDENTIFIER ::= { ausmPortCnf 3}
ausmPortCnfSigILMIGrp	OBJECT IDENTIFIER ::= { ausmPortCnfSig 1}


-- ------------------------------------------------------------------------
--
-- ausmPortCnfSig group
-- Port configurable signalling parameters  
--
-- ------------------------------------------------------------------------


ausmPortCnfSigILMIGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AusmPortCnfSigILMIGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for 4 physical port interfaces 
		"
	::= { ausmPortCnfSigILMIGrp 1 }

ausmPortCnfSigILMIGrpEntry	OBJECT-TYPE
	SYNTAX	AusmPortCnfSigILMIGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for port
		"
	INDEX	{ sigPortNum }
	::= { ausmPortCnfSigILMIGrpTable 1 }

AusmPortCnfSigILMIGrpEntry ::=
	SEQUENCE {
	   	sigPortNum 	              INTEGER,
		ausmSignallingProtocolType    INTEGER, 
		signallingVpi                 INTEGER, 
		signallingVci                 INTEGER, 
		addrPrefix                    NetPrefix,
		customerId                    INTEGER,
		protocolRevNo                 INTEGER,
		iLMITrapEnable                INTEGER,
		minTrapInterval               INTEGER,
		keepAlivePollingEnable        INTEGER,
		errorThresholdN491            INTEGER,
		eventThresholdN492            INTEGER,
		pollingIntervalT491           INTEGER,
		minEnquiryIntervalT493	      INTEGER
		}


sigPortNum OBJECT-TYPE
	SYNTAX	INTEGER (1..4)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the physical port index
		"
	::= { ausmPortCnfSigILMIGrpEntry 1}

ausmSignallingProtocolType  OBJECT-TYPE
	SYNTAX	INTEGER {
		other(1),
		noSignalling(2),
		iLMI(3)
		}
	ACCESS read-write
	STATUS  mandatory
        DESCRIPTION
            "This will set the signalling protocol
	     1 - other
	     2 - noSignalling
	     3 - ILMI
	    "
	::= { ausmPortCnfSigILMIGrpEntry 2}

signallingVpi   OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffffff'h )
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"indicates the VPI on which signalling cells 
		 arrive
		"
	::= { ausmPortCnfSigILMIGrpEntry 3}

signallingVci   OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffffff'h )
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"indicates the VCI on which signalling cells 
		 arrive
		"
	::= { ausmPortCnfSigILMIGrpEntry 4}

addrPrefix      OBJECT-TYPE
	SYNTAX	NetPrefix   -- from ILMI MIB
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Network Prefix for the ATM address
		"
	::= { ausmPortCnfSigILMIGrpEntry 5}

customerId	OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION 
		"for the INS as a read/write variable
		"
	::= { ausmPortCnfSigILMIGrpEntry 6}
		      	   
protocolRevNo	OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION 
		"for the INS as a read/write variable
		"
	::= { ausmPortCnfSigILMIGrpEntry 7}
		      	   

iLMITrapEnable OBJECT-TYPE
	SYNTAX	INTEGER {
		disable (1),
		enable (2)
		} 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Enable/disable ILMI Trap sending
		"
	::= { ausmPortCnfSigILMIGrpEntry 8}
		      	   
minTrapInterval	OBJECT-TYPE
	SYNTAX	INTEGER (1..10)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION 
		"number of seconds between traps
		"
	::= { ausmPortCnfSigILMIGrpEntry 9}
		      	   
keepAlivePollingEnable	OBJECT-TYPE
	SYNTAX	INTEGER {
		disable (1),
		enable (2)
		} 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Enable/disable Keep Alive Polling
		"
	::= { ausmPortCnfSigILMIGrpEntry 10}
		      	   
errorThresholdN491	OBJECT-TYPE
	SYNTAX	INTEGER (1..10)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION 
		"Error Threshold (N491) value
		"
	::= { ausmPortCnfSigILMIGrpEntry 11}
		      	   
eventThresholdN492	OBJECT-TYPE
	SYNTAX	INTEGER (1..10)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION 
		"Event Threshold (N492) value
		"
	::= { ausmPortCnfSigILMIGrpEntry 12}
		      	   
pollingIntervalT491	OBJECT-TYPE
	SYNTAX	INTEGER {
		v1(5),
		v2(10),
		v3(15),
		v4(20),
		v5(25),
		v6(30),
		v7(35),
		v8(40),
		v9(45),
		v10(50),
		v11(55),
		v12(60)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION 
		"Polling Interval (T491) value
		"
	::= { ausmPortCnfSigILMIGrpEntry 13}
		      	   
minEnquiryIntervalT493	OBJECT-TYPE
	SYNTAX	INTEGER (1..20)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION 
		"Minimum Enquiry Interval (T493)
		"
	::= { ausmPortCnfSigILMIGrpEntry 14}
		      	   

-- ------------------------------------------------------------------------
-- End of ausmPortCnfSigILMIGrp group definitions



-- atm                  OBJECT IDENTIFIER ::= { basisServices 2 }
--ausmPort       		OBJECT IDENTIFIER ::= { atm 1 }
ausmPortStateGrp	OBJECT IDENTIFIER ::= { ausmPort 2 }

-- --------------------------------------------------------------------
--
--
--		AUSM PORT STATE Group
--
--
-- --------------------------------------------------------------------


ausmPortStateGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AusmPortStateGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The state table for the port interface
		 there are 4 entries for either T1 or E1
		"
	::= { ausmPortStateGrp 1 }


ausmPortStateGrpEntry	OBJECT-TYPE
	SYNTAX	AusmPortStateGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for physical port
		"
	INDEX	{ ausmStatePortNum }
    ::= { ausmPortStateGrpTable 1 }

AusmPortStateGrpEntry ::=
	SEQUENCE {
		ausmStatePortNum 	
				INTEGER,
      	ausmPortState
         		INTEGER,
      	ausmPortOversubscribed
         		INTEGER,
		ausmPortIngrPercentUtil
				INTEGER,
		ausmPortEgrPercentUtil
				INTEGER
		}

ausmStatePortNum 	OBJECT-TYPE
	SYNTAX	INTEGER (1..4) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This is physical port number.
		"
	::= { ausmPortStateGrpEntry 1}

ausmPortState  OBJECT-TYPE		
	SYNTAX	INTEGER {
		notConfigured (1),
		active (2),
		remoteloopback (3),
		linefailure (4),
		signallingfailure (5),
		outofcelldelineation (6)
		}
	ACCESS read-only
        STATUS  mandatory
        DESCRIPTION
        "This variable indicates the status of the port
        "
        ::= { ausmPortStateGrpEntry 2 }

ausmPortOversubscribed  OBJECT-TYPE		
	SYNTAX	INTEGER {
		false (1),
		true (2)
		}
	ACCESS read-only
        STATUS  mandatory
        DESCRIPTION
        "This variable indicates the whether the port is 
		over subscribed or not
        "
        ::= { ausmPortStateGrpEntry 3 }

ausmPortIngrPercentUtil		OBJECT-TYPE
	SYNTAX  INTEGER (0..1000)  
	ACCESS read-only 
	STATUS  mandatory  
	DESCRIPTION    
		"Percentage Utilization of the Port in the Ingress
		 direction.
		" 
        ::= { ausmPortStateGrpEntry  4 }


ausmPortEgrPercentUtil		OBJECT-TYPE
	SYNTAX  INTEGER (0..1000)  
	ACCESS read-only 
	STATUS  mandatory  
	DESCRIPTION    
		"Percentage Utilization of the Port in the Egress
		 direction.
		" 
        ::= { ausmPortStateGrpEntry  5 }


-- ------------------------------------------------------------------
-- End of ausmPortStateGrp

-- atm                  OBJECT IDENTIFIER ::= { basisServices 2 }
--ausmPort       		OBJECT IDENTIFIER ::= { atm 1 }
--ausmPortCnt		OBJECT IDENTIFIER ::= { ausmPort 3 }
ausmPortCntPortGrp	OBJECT IDENTIFIER ::= { ausmPortCnt 1}

-- --------------------------------------------------------------------
--
--
--		AUSM PORT COUNTER Group
--
--
-- --------------------------------------------------------------------


ausmPortCntPortGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AusmPortCntPortGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for physical port interface
		 there are 4 entries for either T1 or E1
		"
	::= { ausmPortCntPortGrp 1 }


ausmPortCntPortGrpEntry	OBJECT-TYPE
	SYNTAX	AusmPortCntPortGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for physical port
		"
	INDEX	{ ausmCntPortNum }
    ::= { ausmPortCntPortGrpTable 1 }

AusmPortCntPortGrpEntry ::=
	SEQUENCE {
		ausmCntPortNum 	
			INTEGER,
-- Ingress direction
		ingrRcvCells
			Counter,
		ingrGfcErrCells
			Counter,
		ingrVpiVciErrCells
			Counter,
		ingrLastUnknVpiVci
			INTEGER,
-- Egress direction
		egrXmtCells
			Counter,
		egrPortAlarmDiscardCells
			Counter,
		egrXmtClpSetCells
			Counter,
		egrXmtEfciSetCells
			Counter,
-- OAM 
		portXmtAisCells
			Counter,
		portXmtSgmtLpbkCells
			Counter,
		portRcvAisCells
			Counter,
		portRcvFerfCells
			Counter,
		portRcvSgmtLpbkCells
			Counter,
		portRcvCrcErrOAMCells
			Counter,
-- Clear Button
		ausmPortClrButton
			INTEGER
		}

ausmCntPortNum	OBJECT-TYPE
	SYNTAX	INTEGER (1..4) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This is physical port number.
		"
	::= { ausmPortCntPortGrpEntry 1}


-- Ingress direction
ingrRcvCells	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of cells received in Ingress direction
                "
        ::= { ausmPortCntPortGrpEntry 2 }
 

ingrGfcErrCells	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of cells received in Ingress direction
		 with non zero-GFC
                "
        ::= { ausmPortCntPortGrpEntry 3 }
 
ingrVpiVciErrCells	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of cells received in Ingress direction
		 with unknown VpiVci 
                "
        ::= { ausmPortCntPortGrpEntry 4 }
 
ingrLastUnknVpiVci	OBJECT-TYPE
        SYNTAX  INTEGER (0..'ffffff'h)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The last unknown Vpi Vci value
                "
        ::= { ausmPortCntPortGrpEntry 5 }
 
-- Egress direction

egrXmtCells	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of cells transmitted in the egress direction
                "
        ::= { ausmPortCntPortGrpEntry 6 }
 
egrPortAlarmDiscardCells	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of cells discarded due to port alarm
                "
        ::= { ausmPortCntPortGrpEntry 7 }
 
egrXmtClpSetCells	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of cells transmitted in Egress direction
		 with CLP bit set
                "
        ::= { ausmPortCntPortGrpEntry 8 }
 
egrXmtEfciSetCells	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of cells transmitted in Egress direction
		 with EFCI bit set
                "
        ::= { ausmPortCntPortGrpEntry 9 }
 
-- OAM

portXmtAisCells	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of AIS cells transmitted towards port
                "
        ::= { ausmPortCntPortGrpEntry 10 }
 
portXmtSgmtLpbkCells	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of Segment Loopback  cells transmitted 
		 towards port
                "
        ::= { ausmPortCntPortGrpEntry 11 }
 
portRcvAisCells	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of AIS cells received in Ingress direction
                "
        ::= { ausmPortCntPortGrpEntry 12 }
 
portRcvFerfCells	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of FERF cells received in Ingress direction
                "
        ::= { ausmPortCntPortGrpEntry 13 }
 
portRcvSgmtLpbkCells	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of Segment Loopback cells received in 
		 Ingress direction
                "
        ::= { ausmPortCntPortGrpEntry 14 }
 
portRcvCrcErrOAMCells	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of OAM cells received in Ingress direction
		 with CRC error
                "
        ::= { ausmPortCntPortGrpEntry 15 }
 
-- Clear Button
ausmPortClrButton	OBJECT-TYPE
	SYNTAX  INTEGER {
	noAction (1),
	resetCounters (2)
	}
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"writing a value of 2 resets all the counters
		"
	::= { ausmPortCntPortGrpEntry 16 }
 


-- --------------------------------------------------------------------
-- End of ausmPortCntPortGrp

-- atm                  OBJECT IDENTIFIER ::= { basisServices 2 }
-- ausmPort    		OBJECT IDENTIFIER ::= { atm 1 }
-- ausmPortCnt		OBJECT IDENTIFIER ::= { ausmPort 3 }
ausmPortCntSig          OBJECT IDENTIFIER ::= { ausmPortCnt 2}
ausmPortCntSigILMIGrp   OBJECT IDENTIFIER ::= { ausmPortCntSig 1}

-- --------------------------------------------------------------------
--
--
--		AUSM PORT SIGNALLING COUNTER Group
--
--
-- --------------------------------------------------------------------


ausmPortCntSigILMIGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AusmPortCntSigILMIGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for physical port interface
		 there are 4 entries for either T1 or E1
		"
	::= { ausmPortCntSigILMIGrp 1 }


ausmPortCntSigILMIGrpEntry	OBJECT-TYPE
	SYNTAX	AusmPortCntSigILMIGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for physical port
		"
	INDEX	{ sigCntPortNum }
    ::= { ausmPortCntSigILMIGrpTable 1 }

AusmPortCntSigILMIGrpEntry ::=
	SEQUENCE {
		sigCntPortNum 	
			INTEGER,
		snmpPduReceived
			Counter,
		getRequestReceived
			Counter,
		getNextRequestReceived
			Counter,
		setRequestReceived
			Counter,
		trapReceived
			Counter,
		getResponseReceived
			Counter,
		getResponseTransmitted
			Counter,
		getRequestTransmitted
			Counter,
		trapTransmitted
			Counter,
		invalidPDUReceived
			Counter,
		asn1ParseError
			Counter,
		noSuchNameError
			Counter,
		tooBigError
			Counter,
-- Clear Button
		portSigClrButton
			INTEGER
		}

sigCntPortNum	OBJECT-TYPE
	SYNTAX	INTEGER (1..4) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This is physical port number.
		"
	::= { ausmPortCntSigILMIGrpEntry 1}


snmpPduReceived		OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of snmp packets received
                "
        ::= { ausmPortCntSigILMIGrpEntry 2 }
 
getRequestReceived	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of get request messages received
                "
        ::= { ausmPortCntSigILMIGrpEntry 3 }
 
getNextRequestReceived	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of get-next messages received
                "
        ::= { ausmPortCntSigILMIGrpEntry 4 }
 
setRequestReceived	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of set messages received
                "
        ::= { ausmPortCntSigILMIGrpEntry 5 }
 
trapReceived		OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of traps received
                "
        ::= { ausmPortCntSigILMIGrpEntry 6 }
 
getResponseReceived	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of Keep Alive response messages received
                "
        ::= { ausmPortCntSigILMIGrpEntry 7 }
 
getResponseTransmitted	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of response messages transmitted 
                "
        ::= { ausmPortCntSigILMIGrpEntry 8 }
 
getRequestTransmitted	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of Keep Alive get request messages transmitted
                "
        ::= { ausmPortCntSigILMIGrpEntry 9 }
 
trapTransmitted		OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of trap messages transmitted
                "
        ::= { ausmPortCntSigILMIGrpEntry 10 }
 
invalidPDUReceived	OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of invalid PDUs received
                "
        ::= { ausmPortCntSigILMIGrpEntry 11 }
 
asn1ParseError		OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of parse errors on ASN.1
                "
        ::= { ausmPortCntSigILMIGrpEntry 12 }
 
noSuchNameError		OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of errors for name not present
                "
        ::= { ausmPortCntSigILMIGrpEntry 13 }
 
tooBigError		OBJECT-TYPE
        SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION              
                "The number of messages received with len > 484
                "
        ::= { ausmPortCntSigILMIGrpEntry 14 }
 

-- Clear Button
portSigClrButton	OBJECT-TYPE
	SYNTAX  INTEGER {
	noAction (1),
	resetCounters (2)
	}
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"writing a value of 2 resets all the counters
		"
	::= { ausmPortCntSigILMIGrpEntry 15 }
 


-- --------------------------------------------------------------------
-- End of ausmPortCntSigILMIGrp
--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
-- Initial revision 
-- 2/22/95, updated Ravi Bhat
--





-- atm                  OBJECT IDENTIFIER ::= { basisServices 2 }
--ausmChan                OBJECT IDENTIFIER ::= { atm 2 }
ausmChanCnfGrp          OBJECT IDENTIFIER ::= { ausmChan 1 }


-- ------------------------------------------------------------------------
--
-- ausmChannelConfig group
-- Channel configurable parameters  (VC)
--
-- ------------------------------------------------------------------------


ausmChanCnfGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AusmChanCnfGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for logical channel interface
		 there are 256 entries for 4 DS1s
		"
	::= { ausmChanCnfGrp 1 }

ausmChanCnfGrpEntry	OBJECT-TYPE
	SYNTAX	AusmChanCnfGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical channel
		"
	INDEX	{ ausmChanNum }
	::= { ausmChanCnfGrpTable 1 }

AusmChanCnfGrpEntry ::=
	SEQUENCE {
	   	ausmChanNum		INTEGER,
		ausmChanRowStatus      	INTEGER, 
		chanConnType		INTEGER, -- VP or VC connection
		chanServiceType		INTEGER, -- CBR or VBR 
		chanConnDesc		DisplayString,
		chanSvcFlag		INTEGER, -- 1-SVC,2-non-SVC
		chanSvcConnId		INTEGER, -- Future Use
		ausmChanPortNum         INTEGER, 
		chanVpi		        INTEGER,
		chanVci		        INTEGER,
		chanEgrQSelect	      	INTEGER,
		ingrQDepth	      	INTEGER,
		ingrQCLPThreshHigh	INTEGER,
		ingrQCLPThreshLow	INTEGER,
		ingrQCLPState		INTEGER,
		ingrQEfciThresh		INTEGER,
-- UPC parameters
		ingrUpcEnable		INTEGER, -- 1-Disable, 2-Enable
		ingrUpcPCR01		INTEGER, -- Used only by UPC
		ingrUpcCIR		INTEGER, -- AKA SCR
		ingrUpcCCDV		INTEGER, -- for CBR traffic
		ingrUpcCBS		INTEGER,
		ingrUpcIBS		INTEGER,
		ingrUpcMFS		INTEGER,
		ingrUpcSCRPolicing	INTEGER, -- 1-CLP0, 2-CLP0+1
		ingrUpcPCR0		INTEGER,
		ingrUpcCDVT0		INTEGER,
		ingrUpcCLPTagEnable	INTEGER,
		ingrUpcFGCRAEnable	INTEGER,
-- Foresight parameters
		foresightEnable		INTEGER,
		foresightMIR		INTEGER,
		foresightPIR		INTEGER,
		foresightQIR		INTEGER,
-- Release 2 additions (directly from FRSM)
		ausmChanLocRmtLpbkState	INTEGER,
		ausmChanTestType	INTEGER,
		ausmChanTestState	INTEGER,
		ausmChanRTDResult	INTEGER,
-- Variable to support OAM Segment Loopback towards CPE
		ausmChanTestTypeCPESide	    INTEGER,
		ausmChanTestStateCPESide	INTEGER,
-- CAC parameters (IngrPcr will be derived from foresightPIR )
		ausmChanIngrPercentUtil	INTEGER,
		ausmChanEgrPercentUtil  INTEGER,
		ausmChanEgrSrvRate      INTEGER,
		ausmChanOvrSubOvrRide   INTEGER,
-- VP connection parameter
		ausmChanLocalVpId	INTEGER,
-- New addition will not be supported in 8.2
		ausmChanRMEnable	INTEGER
}


ausmChanNum OBJECT-TYPE
	SYNTAX	INTEGER (16..271)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the virtual connection index
		"
	::= { ausmChanCnfGrpEntry 1}

ausmChanRowStatus  OBJECT-TYPE
	SYNTAX	INTEGER {
		add(1),
		del(2),
		mod(3)
		}
	ACCESS read-write
	STATUS  mandatory
	DESCRIPTION
	  "This will add, delete or modify the channel
     	  1 ==> ADD
      	  2 ==> DELETE
      	  3 ==> MODIFY
		"
   	::= { ausmChanCnfGrpEntry 2 }

chanConnType	OBJECT-TYPE	
	SYNTAX	INTEGER {
		vpc(1),
		vcc(2)
		}
	ACCESS read-write
	STATUS  mandatory
	DESCRIPTION
	  "This specifies the connection type 
     	  1 ==> Virtual Path Connection
      	  2 ==> Virtual Channel Connection
	  "
   	::= { ausmChanCnfGrpEntry 3 }

chanServiceType	OBJECT-TYPE
	SYNTAX	INTEGER {
		cbr(1),
		vbr(2),
		abr (3)
		}
	ACCESS read-write
	STATUS  mandatory
	DESCRIPTION
	  "This specifies the service type 
     	  1 ==> Constant Bit Rate
      	  2 ==> Variable Bit Rate
	  "
   	::= { ausmChanCnfGrpEntry 4 }

chanConnDesc	OBJECT-TYPE
	SYNTAX	DisplayString (SIZE (0..20))
	ACCESS read-write
	STATUS  mandatory
	DESCRIPTION
	  "A string that has been defined to give a 
	   descriptive name to the connection
	  "
   	::= { ausmChanCnfGrpEntry 5 }


chanSvcFlag	OBJECT-TYPE
	SYNTAX	INTEGER {
		svc(1),
		pvc(2)
		}
	ACCESS read-write
	STATUS  mandatory
	DESCRIPTION
	  "This specifies the connection type 
     	  1 ==> SVC connection
      	  2 ==> PVC connection
	  "
   	::= { ausmChanCnfGrpEntry 6 }

chanSvcConnId	OBJECT-TYPE
	SYNTAX	INTEGER 
	ACCESS read-write
	STATUS  mandatory
	DESCRIPTION
	  "This connection ID is for future use
     	   Currently not supported
	  "
   	::= { ausmChanCnfGrpEntry 7 }

ausmChanPortNum OBJECT-TYPE
	SYNTAX	INTEGER (1..4)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the T1/E1 ports on the board to which
		 logical channel is associated
		"
	::= { ausmChanCnfGrpEntry	8}

chanVpi 	OBJECT-TYPE
	SYNTAX	INTEGER (0..'ff'h)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"The VPI value for this channel 
		"
	::= { ausmChanCnfGrpEntry	9}

chanVci 	OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffff'h)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"The VCI value for this channel 
		"
	::= { ausmChanCnfGrpEntry	10}

chanEgrQSelect OBJECT-TYPE
	SYNTAX	INTEGER (1..16)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Selects one out of the 16 possible queues
		Each queue may have a different service algorithm
		"
	::= { ausmChanCnfGrpEntry	11}

ingrQDepth	OBJECT-TYPE
	SYNTAX	INTEGER (1..8000)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
        "This variable sets the max depth for queue, before
		 it  starts dropping the cells
		"
        ::= { ausmChanCnfGrpEntry 12}

ingrQCLPThreshHigh	OBJECT-TYPE
	SYNTAX	INTEGER (1..8000)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "This variable sets the higher threshold for
		dropping CLP set cells in the ingress direction
		"
        ::= { ausmChanCnfGrpEntry 13}

ingrQCLPThreshLow	OBJECT-TYPE
	SYNTAX	INTEGER (1..8000)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "This variable sets the lower threshold for
		dropping CLP set cells in the ingress direction
		"
        ::= { ausmChanCnfGrpEntry 14}

ingrQCLPState	OBJECT-TYPE
	SYNTAX	INTEGER {
		low (1),
		high (2)
		} 
	ACCESS read-only
        STATUS  mandatory
        DESCRIPTION
                "This variable indicates the CLP state for
		the channel
		"
        ::= { ausmChanCnfGrpEntry 15}

ingrQEfciThresh	OBJECT-TYPE
	SYNTAX	INTEGER (1..8000)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "This variable sets the efci threshold value for
		 setting efci bit in the ingress direction
		"
        ::= { ausmChanCnfGrpEntry 16}

-- UPC parameters
-- The values for CBS,IBS,MFS,AR are to be decided (TBD)

ingrUpcEnable		OBJECT-TYPE
	SYNTAX	INTEGER {
		disable (1),
		enable (2)
		} 
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "enables/disables UPC for Ingress cells
		"
        ::= { ausmChanCnfGrpEntry 17}


ingrUpcPCR01              OBJECT-TYPE
	SYNTAX	INTEGER (1..4830)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
               	"Peak Cell Rate for CLP [0+1] cells
		"
        ::= { ausmChanCnfGrpEntry 18}

ingrUpcCIR              OBJECT-TYPE
	SYNTAX	INTEGER (1..4830)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
               	"Complaint Information Rate 
		"
        ::= { ausmChanCnfGrpEntry 19}

ingrUpcCCDV              OBJECT-TYPE
	SYNTAX	INTEGER (1..250000)	-- in microseconds
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
               	"Complaint Cell Delay Variation for all cells
		"
        ::= { ausmChanCnfGrpEntry 20}

ingrUpcCBS              OBJECT-TYPE
	SYNTAX	INTEGER (1..5000)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
               	"Complaint Burst Size
		"
        ::= { ausmChanCnfGrpEntry 21}

ingrUpcIBS              OBJECT-TYPE
	SYNTAX	INTEGER (1..4830)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
               	"Initial Burst Size
		"
        ::= { ausmChanCnfGrpEntry 22}

ingrUpcMFS              OBJECT-TYPE
	SYNTAX	INTEGER (0..200)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
               	"Maximum Frame Size
		"
        ::= { ausmChanCnfGrpEntry 23}

ingrUpcSCRPolicing	OBJECT-TYPE
	SYNTAX	INTEGER {
		clp0 (1),
		clp0and1 (2),
		off (3)
		} 
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "selects SCR policing for CLP = 0 or all cells
		"
        ::= { ausmChanCnfGrpEntry 24}

ingrUpcPCR0		OBJECT-TYPE
	SYNTAX	INTEGER (1..4830)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
               	"Peak Cell Rate for CLP=0 cells
		"
        ::= { ausmChanCnfGrpEntry 25}

ingrUpcCDVT0		OBJECT-TYPE
	SYNTAX	INTEGER (1..250000)	-- in microseconds
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
               	"Complaint Cell Delay Variation for CLP=0 cells
		"
        ::= { ausmChanCnfGrpEntry 26}


ingrUpcCLPTagEnable     OBJECT-TYPE
	SYNTAX	INTEGER {
		disable (1),
		enable (2)
		} 
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "enables/disables CLP tagging for Ingress cells
		"
        ::= { ausmChanCnfGrpEntry 27}

ingrUpcFGCRAEnable     OBJECT-TYPE
	SYNTAX	INTEGER {
		disable (1),
		enable (2)
		} 
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "enables/disables Frame based GCRA
		"
        ::= { ausmChanCnfGrpEntry 28}


-- Foresight parameters
-- The different values for Foresight parameters are TBD

foresightEnable         OBJECT-TYPE
	SYNTAX	INTEGER {
		disable (1),
		enable (2)
		} 
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
                "enables/disables Foresight
		"
        ::= { ausmChanCnfGrpEntry 29}

foresightMIR            OBJECT-TYPE
	SYNTAX	INTEGER (1..4830)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
               	"Minimum Information Rate
		"
        ::= { ausmChanCnfGrpEntry 30}

foresightPIR            OBJECT-TYPE
	SYNTAX	INTEGER (1..4830)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
               	"Peak Information Rate
		"
        ::= { ausmChanCnfGrpEntry 31}

foresightQIR            OBJECT-TYPE
	SYNTAX	INTEGER (1..4830)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
               	"Quiescent Information Rate
		"
        ::= { ausmChanCnfGrpEntry 32}

ausmChanLocRmtLpbkState	OBJECT-TYPE  
	SYNTAX  INTEGER {
		enable(1), 
		disable(2) 
	}
	ACCESS read-write 
	STATUS  mandatory  
	DESCRIPTION    
        "The default is disable.
	 This variable enables or disables the remote loopback for each
	 channel.
	 When you enable this option on a connection (channel) then all the
	 cells that are coming from the network side would be looped back
	 toward the network and all the frames coming from the user side
	 would be dropped.
	 This channel remote loopback has nothing to do with the chanTestType
	 option, each one does a different function. 
	 For example, the channel remote loopback is used for looping the data
	 toward the network and if this connection is terminated on an IPX
	 then they can put a test equipment and measure some of the 
	 characteristics of the network.
	1 = enable
	2 = disable
        " 
        ::= { ausmChanCnfGrpEntry 33}

 
ausmChanTestType 		OBJECT-TYPE  
	SYNTAX  INTEGER {
		testcon(1),
		testdelay(2),
		notest(3)
	}
	ACCESS read-write 
	STATUS  mandatory  
	DESCRIPTION    
        "The default is notest.
	 The chanTestType starts testing the continuity or delay of a connection.
	 It sends specific cell patterns toward the network and the terminating
	 end of this connection has to be an AXIS or ASI of a BPX in order for 
	 this test to be working. 
	 The receiving node would loop back when it receives these
	 cells. The test should be done in about couple of seconds. The testcon
	 tests the continuity of the connection and testdelay uses the same
	 test except that it measures for delay through the network. 
	 To test the delay follow this procedure:
		a- set chanTestType to testdelay
		b- read chanTestState till it is Pass or Fail 
		c- Read chanRTDResult for the delay if it is Pass
		*Note that the chanTestType would go back to notest when the
		 test is completed 
	 To test the continuity follow this procedure:
		a- set chanTestType to testcon
		b- read chanTestState till it is Pass or Fail 
		*Note that the chanTestType would go back to notest when the
		 test is completed 
	 You CAN NOT select 2 tests back to back, you have selcelt one and wait 
	 the result and then start the other one.
    SYNTAX  
	 When you select testdelay 
	 
	 This is the type of the test
	 1 = Test Continuity
	 2 = Test Delay
	 3 = No Test
        " 
        ::= { ausmChanCnfGrpEntry 34}
 
ausmChanTestState 		OBJECT-TYPE  
	SYNTAX  INTEGER {
		passed(1),
		failed(2),
		inprogress(3),
		notinprogress(4)
	} 
	ACCESS read-only 
	STATUS  mandatory  
	DESCRIPTION    
        "This shows the state of the test
	 When you add a connection then the chanTestState becomes notinprogress
	 and when you select any test, it would go to inprogress state and after
	 it completes the test, it will go to failed or passed state.
	 1 = Passed
	 2 = Failed
	 3 = In Progress 
	 4 = Not In Progress
        " 
        ::= { ausmChanCnfGrpEntry 35}

ausmChanRTDResult 		OBJECT-TYPE  
	SYNTAX  INTEGER (1..65535)  
	ACCESS read-only 
	STATUS  mandatory  
	DESCRIPTION    
        "This is round trip delay in milliseconds.
	 When you select testdelay option for the chanTestType, the result of
	 the test that is measured in milliseconds can be read in chanRTDResult.
        " 
        ::= { ausmChanCnfGrpEntry 36}

-- CPE side OAM segment loopback
 
ausmChanTestTypeCPESide		OBJECT-TYPE  
	SYNTAX  INTEGER {
		testconseg(1),
		notest(2)
	}
	ACCESS read-write 
	STATUS  mandatory  
	DESCRIPTION    
        "The default is notest.
	 The chanTestType starts testing the segment continuity of a connection.
	 It sends OAM Segment loopback cell towards port side (CPE)
	 The CPE would loop back the cell
	 To test the continuity follow this procedure:
		a- set chanTestTypeCPEside to testconseg
		b- read chanTestState till it is Pass or Fail 
		*Note that the chanTestType would go back to notest when the
		 test is completed 
    SYNTAX  
	 When you select testdelay 
	 
	 This is the type of the test
	 1 = Test Continuity
	 2 = No Test
        " 
        ::= { ausmChanCnfGrpEntry 37}
 
ausmChanTestStateCPESide 	OBJECT-TYPE  
	SYNTAX  INTEGER {
		passed(1),
		failed(2),
		inprogress(3),
		notinprogress(4)
	} 
	ACCESS read-only 
	STATUS  mandatory  
	DESCRIPTION    
        "This shows the state of the test
	 When you add a connection then the chanTestState becomes notinprogress
	 and when you select any test, it would go to inprogress state and after
	 it completes the test, it will go to failed or passed state.
	 1 = Passed
	 2 = Failed
	 3 = In Progress 
	 4 = Not In Progress
        " 
        ::= { ausmChanCnfGrpEntry 38}


ausmChanIngrPercentUtil		OBJECT-TYPE
	SYNTAX  INTEGER (1..100)  
	ACCESS read-write 
	STATUS  mandatory  
	DESCRIPTION    
		"Percentage Utilization of the IngrService Rate. This is used
		 for connection admission control.
		" 
        ::= { ausmChanCnfGrpEntry 39}


ausmChanEgrPercentUtil		OBJECT-TYPE
	SYNTAX  INTEGER (1..100)  
	ACCESS read-write 
	STATUS  mandatory  
	DESCRIPTION    
		"Percentage Utilization of the EgrService Rate. This is used for
		 egress bandwidth calculation and connection admission control.
		" 
        ::= { ausmChanCnfGrpEntry 40}


ausmChanEgrSrvRate	OBJECT-TYPE
	SYNTAX  INTEGER (1..4830)  
	ACCESS read-write 
	STATUS  mandatory  
	DESCRIPTION    
		" Egress service rate - This is used for egress bandwidth calculation
		  and for connection admission control.
		" 
        ::= { ausmChanCnfGrpEntry 41}


ausmChanOvrSubOvrRide	OBJECT-TYPE
 	SYNTAX  INTEGER {
	        disable (1),
    	    	enable (2)
       		 }
	ACCESS read-write 
	STATUS  mandatory  
	DESCRIPTION    
		"This MIB variable allows one to add a new connection on a port
		 even if it is over subscribed.
		" 
        ::= { ausmChanCnfGrpEntry 42}
 
ausmChanLocalVpId	OBJECT-TYPE
	SYNTAX  INTEGER (1..100)  
	ACCESS read-write 
	STATUS  mandatory  
	DESCRIPTION    
		" Every VP connection will have a unique local VpId  between
		  1 to 100. This is sent to ASC at the time of vp connection
		  setup. This number along with the slot number will form a
		  number which is unique across the shelf. This will be set
		  only at the time adding the connection.	
		" 
        ::= { ausmChanCnfGrpEntry 43}

ausmChanRMEnable		OBJECT-TYPE
	SYNTAX	INTEGER {
		disable (1),
		enable (2)
		} 
	ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
        "enables/disables sending Resource Mangement Cells
		"
        ::= { ausmChanCnfGrpEntry 44}


--	Next available channel
--

ausmChanNumNextAvailable 	OBJECT-TYPE
	SYNTAX	INTEGER (16..271) 
	ACCESS	read-only 
	STATUS	mandatory
	DESCRIPTION
		"This variable contains the next unused channel number of the possible
		 256. This number can be used in channel config table.
		 ChanNumNextAvailable gets updated whenever this number is used to
		 create a new logical channel. Value 0 for this variable indicates that
		 no more channels are available.
		"
	::= { ausmChanCnfGrp 2 }


ausmChanVpIdNextAvailable 	OBJECT-TYPE
	SYNTAX	INTEGER (1..63) 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"This variable contains the next unused local VPId of the possible
		 1 to 100. This number can be used in channel config table. It gets
		 updated if the number is used to create a new vp connection. There
		 can max 100 vp connections per slot. Value of 0 for this variable
		 indicates that no more vp connections are available. 
		"
	::= { ausmChanCnfGrp 3 }



-- ------------------------------------------------------------------------
-- End of ausmChanCnf group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--





-- atm                  OBJECT IDENTIFIER ::= { basisServices 2 }
--ausmChan                OBJECT IDENTIFIER ::= { atm 2 }
ausmChanStateGrp        OBJECT IDENTIFIER ::= { ausmChan 2 }


-- ------------------------------------------------------------------------
--
-- Group ausmChannelState
-- Contains status information for channels
--
-- ------------------------------------------------------------------------


ausmChanStateGrpTable OBJECT-TYPE
	SYNTAX  SEQUENCE OF AusmChanStateGrpEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"Table of transmit/receive states of channels.
		"
	::= { ausmChanStateGrp 1 }

ausmChanStateGrpEntry OBJECT-TYPE
	SYNTAX AusmChanStateGrpEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"An entry for AusmChannelStateGrpEntry.
		"
	INDEX	{ ausmStateChanNum }
	::= { ausmChanStateGrpTable 1 }

AusmChanStateGrpEntry ::=
	SEQUENCE {
		ausmStateChanNum
         		INTEGER,
		ausmChanState
         		INTEGER,
		chanEgrXmtState
			INTEGER,
		chanIngrRcvState
			INTEGER,
		chanIngrXmtState
			INTEGER,
		chanEgrRcvState
			INTEGER
		}

ausmStateChanNum OBJECT-TYPE
	SYNTAX	INTEGER (16..271)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the virtual connection index
		"
	::= { ausmChanStateGrpEntry 1}

ausmChanState OBJECT-TYPE
	SYNTAX  INTEGER {
		notconfigured (1),
		normal(2),
		alarm(3)
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable indicates the state of the
		 VC (channel)
		"
	::= { ausmChanStateGrpEntry 2}
 
chanEgrXmtState	OBJECT-TYPE
	SYNTAX INTEGER {
		other(1),
		normal(2),
		sendingAis (3),
		sendingFerf (4)
		}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"indicates the status of port transmit(Egress)
		"
	::= { ausmChanStateGrpEntry 3}

chanIngrRcvState 	OBJECT-TYPE
	SYNTAX INTEGER {
		other(1),
		normal(2),
		receivingAis (3),
		receivingFerf (4),
		alarm(5)
		}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"indicates the status of port receive(Ingress)
		"
	::= { ausmChanStateGrpEntry 4}

chanIngrXmtState	 OBJECT-TYPE
	SYNTAX  INTEGER {
		other (1),
		normal(2),
		sendingAis(3),
		sendingFerf (4)
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable indicates the transmit state of the
		 VC (channel) on the Cellbus side (Ingress)
		 1 - other
		 2- normal
		 3 - sendingAIS
		 4 - sendingFerf
		"
	::= { ausmChanStateGrpEntry 5}
 
chanEgrRcvState		OBJECT-TYPE
	SYNTAX  INTEGER {
		other (1),
		normal(2),
		receivingAis(3),
		receivingFerf(4),
		alarm (5)
	}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"This variable indicates the receiving state of the
		 VC (channel) on the Cellbus side (Egress)
		 1 - other
		 2- normal
		 3 - receivingAIS
		 4 - receivingFERF
		"
	::= { ausmChanStateGrpEntry 6}



-- ------------------------------------------------------------------------
-- End of ausmChanState group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






-- atm                  OBJECT IDENTIFIER ::= { basisServices 2 }
--ausmChan                OBJECT IDENTIFIER ::= { atm 2 }
ausmChanCntGrp          OBJECT IDENTIFIER ::= { ausmChan 3 }


-- ------------------------------------------------------------------------
--
-- Group ausmChannelStatus
-- Contains status information for channels
--
-- ------------------------------------------------------------------------


-- ------------------------------------------------------------------------
--
-- ausmChannelCounters group
-- Channel OR VC COUNTERS 
--
-- ------------------------------------------------------------------------


ausmChanCntGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AusmChanCntGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for logical channel interface
		 there are 256 entries for 4 DS1s
		"
	::= { ausmChanCntGrp 1 }


ausmChanCntGrpEntry	OBJECT-TYPE
	SYNTAX	AusmChanCntGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical channel
		"
	INDEX	{ ausmCntChanNum }
	::= { ausmChanCntGrpTable 1}

AusmChanCntGrpEntry ::=
	SEQUENCE {
		ausmCntChanNum 	
			INTEGER,
		chanSecInService
			Counter,
		chanCongestMinutes
			Counter,
		chanIngrPeakQDepth
			INTEGER,
-- Ingress Receive  
		chanIngrRcvCells	
			Counter,
		chanIngrClpSetRcvCells
			Counter,
		chanIngrEfciSetRcvCells
			Counter,
		chanIngrQfullDiscardCells
			Counter,
		chanIngrClpSetDiscardCells
			Counter,
		chanIngrUpcClpSetCells
			Counter,
-- Ingress Transmit
		chanIngrXmtCells
			Counter,
		chanShelfAlarmDiscardCells
			Counter,
-- Reset counters
		ausmChanClrButton
			INTEGER
}

ausmCntChanNum OBJECT-TYPE
	SYNTAX	INTEGER (16..261)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the virtual connection index
		"
	::= { ausmChanCntGrpEntry 1}

chanSecInService	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of seconds channel is in service
		"
	::= { ausmChanCntGrpEntry	2 }

chanCongestMinutes	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of minutes for which congestion was
		 experienced
		"
	::= { ausmChanCntGrpEntry	3 }

chanIngrPeakQDepth		OBJECT-TYPE
	SYNTAX	INTEGER (0..'ffff'h)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Peak queue depth on the ingress direction
		"
	::= { ausmChanCntGrpEntry	4 }

-- Ingress Receive  

chanIngrRcvCells	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of cells received in the Ingress direction
		"
	::= { ausmChanCntGrpEntry	5 }

chanIngrClpSetRcvCells	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of CLP set cells received in Ingress direction
		"
	::= { ausmChanCntGrpEntry	6 }

chanIngrEfciSetRcvCells	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of EFCI set cells received in Ingress direction
		"
	::= { ausmChanCntGrpEntry	7 }

chanIngrQfullDiscardCells	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of cells discarded due to ingress Q full
		"
	::= { ausmChanCntGrpEntry	8 }

chanIngrClpSetDiscardCells	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of CLP set cells discarded in Ingress direction
		"
	::= { ausmChanCntGrpEntry	9 }

chanIngrUpcClpSetCells	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of cells for which CLP was set by UPC
		"
	::= { ausmChanCntGrpEntry	10 }


-- Ingress Transmit

chanIngrXmtCells	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of cells transmitted to the cellbus
		"
	::= { ausmChanCntGrpEntry	11 }

chanShelfAlarmDiscardCells	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of cells discarded due to Shelf Alarm
		"
	::= { ausmChanCntGrpEntry	12 }


ausmChanClrButton OBJECT-TYPE
               SYNTAX  INTEGER {
                        noAction (1),
                        resetCounters (2)
                        }
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
                        "writing a value of 2 resets all the counters
                        "
	::= { ausmChanCntGrpEntry	13 }
 

-- ------------------------------------------------------------------------
-- End of ausmChanCnt group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--





-- atm                  OBJECT IDENTIFIER ::= { basisServices 2 }
ausmEndPointMapGrp	OBJECT IDENTIFIER ::= { atm 3 }


-- ------------------------------------------------------------------------
--
-- ausmEndPointMap group
--
-- ------------------------------------------------------------------------


ausmEndPointMapGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF AusmEndPointMapGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"there are 256 entries and port num and vpivci will
		 uniquely identify a row 
		"
	::= { ausmEndPointMapGrp 1 }

ausmEndPointMapGrpEntry	OBJECT-TYPE
	SYNTAX	AusmEndPointMapGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry in the table
		"
	INDEX	{ ausmEndPortNum, endVpi, endVci }
	::= { ausmEndPointMapGrpTable 1 }

AusmEndPointMapGrpEntry ::=
	SEQUENCE {
	   	ausmEndPortNum		INTEGER,
	   	endVpi			INTEGER,
	   	endVci			INTEGER,
		ausmEndChanNum         	INTEGER,
		endChanType		INTEGER
}

ausmEndPortNum 	OBJECT-TYPE
        SYNTAX  INTEGER (1..4)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Refers to the T1/E1 ports on the board 
                "
	::= { ausmEndPointMapGrpEntry 1 }
 
endVpi 		OBJECT-TYPE
        SYNTAX  INTEGER (0..'ff'h)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The VPI value for the connection
                "
	::= { ausmEndPointMapGrpEntry 2 }
 
endVci 		OBJECT-TYPE
        SYNTAX  INTEGER (0..'ffff'h)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The VCI value for the connection
                "
	::= { ausmEndPointMapGrpEntry 3 }
 
ausmEndChanNum 	OBJECT-TYPE
	SYNTAX	INTEGER (16..271)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the virtual connection for this port and VpiVci 
		"
	::= { ausmEndPointMapGrpEntry 4}

endChanType	OBJECT-TYPE
	SYNTAX	INTEGER {
		vpc (1),
		vcc (2)
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the type of the connection for this port and VpiVci 
		"
	::= { ausmEndPointMapGrpEntry 5}


-- ------------------------------------------------------------------------
-- End of ausmEndPointMap group definitions




atmForum	    OBJECT IDENTIFIER ::= { enterprises 353 }

	-- a subtree for defining administrative
	-- object identifiers
atmForumAdmin   OBJECT IDENTIFIER ::= { atmForum 1 }

	-- a subtree for defining UNI MIB object types 
atmForumUni     OBJECT IDENTIFIER ::= { atmForum 2 }


-- Textual Conventions

NsapAddress ::= OCTET STRING (SIZE (1 | 4..21))

-- All representations of ATM addresses in this MIB Module use 
-- the data type:

AtmAddress ::= OCTET STRING (SIZE (0 .. 32))
-- Note this data type is used only by the deprecated object 
-- atmfPortAddress. Another definition (a refined one) is
-- specified in the separate MIB for Address Registration.



-- Object Identifier definitions

-- The following values are defined for use as possible values 
-- of the atmfPortTransmissionType object.

atmfTransmissionTypes OBJECT IDENTIFIER ::= { atmForumAdmin 2 }

-- unknown transmission type
atmfUnknownType  
		OBJECT IDENTIFIER ::= { atmfTransmissionTypes 1}
-- Sonet STS-3c physical layer at 155.52 Mbps 
atmfSonetSTS3c	
		OBJECT IDENTIFIER ::= { atmfTransmissionTypes 2 }
-- DS3 physical layer at 44.736 Mbps
atmfDs3		OBJECT IDENTIFIER ::= { atmfTransmissionTypes 3 }

-- 4B/5B encoding physical layer at 100 Mbps
atmf4B5B	OBJECT IDENTIFIER ::= { atmfTransmissionTypes 4 }

-- 8B/10B encoding physical layer at 155.52 Mbps 
atmf8B10B	OBJECT IDENTIFIER ::= { atmfTransmissionTypes 5 }


-- The following values are defined for use as possible values 
-- of the atmfPortMediaType object.

atmfMediaTypes OBJECT IDENTIFIER ::= { atmForumAdmin 3 }

-- unknown media type
atmfMediaUnknownType  
		OBJECT IDENTIFIER ::= { atmfMediaTypes 1 }
-- Coaxial cable
atmfMediaCoaxCable	
		OBJECT IDENTIFIER ::= { atmfMediaTypes 2 }
-- Single Mode fiber
atmfMediaSingleMode	
		OBJECT IDENTIFIER ::= { atmfMediaTypes 3 }
-- Multi Mode fiber
atmfMediaMultiMode	
		OBJECT IDENTIFIER ::= { atmfMediaTypes 4 }
-- Shielded Twisted Pair
atmfMediaStp	OBJECT IDENTIFIER ::= { atmfMediaTypes 5 }

-- Unshielded Twisted Pair
atmfMediaUtp	OBJECT IDENTIFIER ::= { atmfMediaTypes 6 }


-- The following values are defined for use as possible values 
-- of the atmfVpcTransmitTrafficDescriptorType, 
-- atmfVpcReceiveTrafficDescriptorType,
-- atmfVccTransmitTrafficDescriptorType and
-- atmfVccReceiveTrafficDescriptorType objects.

atmfTrafficDescrTypes OBJECT IDENTIFIER ::= { atmForumAdmin 4 }

-- The "None" Traffic Descriptor Type
atmfNoDescriptor 
		OBJECT IDENTIFIER ::= { atmfTrafficDescrTypes 1 }

--
-- This type is no longer used
atmfPeakRate	OBJECT IDENTIFIER ::= { atmfTrafficDescrTypes 2 }

--
-- The No CLP/No SCR Type
atmfNoClpNoScr OBJECT IDENTIFIER ::= { atmfTrafficDescrTypes 3 }
-- The use of the parameter vector for this type:
-- Parameter #1 - peak cell rate in cells/second for CLP=0+1 traffic
-- Parameters #2, #3, #4 and #5 are unused

--
-- The CLP without Tagging/No SCR Type
atmfClpNoTaggingNoScr  
		OBJECT IDENTIFIER ::= { atmfTrafficDescrTypes 4 }
-- The use of the parameter vector for this type:
-- Parameter #1 - peak cell rate in cells/second for CLP=0+1 traffic
-- Parameter #2 - peak cell rate in cells/second for CLP=0 traffic
-- Parameters #3, #4 and #5 are unused

--
-- The CLP with Tagging/No SCR Type
atmfClpTaggingNoScr
		OBJECT IDENTIFIER ::= { atmfTrafficDescrTypes 5 }
-- The use of the parameter vector for this type:
-- Parameter #1 - peak cell rate in cells/second for CLP=0+1 traffic
-- Parameter #2 - peak cell rate in cells/second for 
-- 		  CLP=0 traffic, excess tagged as CLP=1
-- Parameters #3, #4 and #5 are unused

--
-- The SCR/No CLP Type
atmfNoClpScr 
		OBJECT IDENTIFIER ::= { atmfTrafficDescrTypes 6 }
-- The use of the parameter vector for this type:
-- Parameter #1 - peak cell rate in cells/second for CLP=0+1 traffic
-- Parameter #2 - sustainable cell rate in cells/second for CLP=0+1 traffic
-- Parameter #3 - maximum burst size in cells
-- Parameters #4 and #5 are unused

--
-- The CLP without Tagging/SCR Type
atmfClpNoTaggingScr
		OBJECT IDENTIFIER ::= { atmfTrafficDescrTypes 7 }
-- The use of the parameter vector for this type:
-- Parameter #1 - peak cell rate in cells/second for CLP=0+1 traffic
-- Parameter #2 - sustainable cell rate in cells/second for CLP=0 traffic
-- Parameter #3 - maximum burst size in cells
-- Parameters #4 and #5 are unused

--
-- The CLP with Tagging/SCR Type
atmfClpTaggingScr
		OBJECT IDENTIFIER ::= { atmfTrafficDescrTypes 8 }
-- The use of the parameter vector for this type:
-- Parameter #1 - peak cell rate in cells/second for CLP=0+1 traffic
-- Parameter #2 - sustainable cell rate in cells/second for CLP=0
--                traffic, excess tagged as CLP=1
-- Parameter #3 - maximum burst size in cells
-- Parameters #4 and #5 are unused



--	The MIB groups

atmfPhysicalGroup	OBJECT IDENTIFIER ::= { atmForumUni 1 }
atmfAtmLayerGroup	OBJECT IDENTIFIER ::= { atmForumUni 2 }
atmfAtmStatsGroup	OBJECT IDENTIFIER ::= { atmForumUni 3 }
atmfVpcGroup		OBJECT IDENTIFIER ::= { atmForumUni 4 }
atmfVccGroup		OBJECT IDENTIFIER ::= { atmForumUni 5 }


--	The Physical Port Group
--
-- This group is mandatory for all UNI devices.
--
-- The Physical Port Table

atmfPortTable OBJECT-TYPE
	SYNTAX		SEQUENCE OF AtmfPortEntry
	ACCESS		not-accessible
	STATUS		mandatory
	DESCRIPTION
              "A table of physical layer status and parameter information
              for the UNI's physical interface."
	::= { atmfPhysicalGroup 1 }

atmfPortEntry OBJECT-TYPE
	SYNTAX		AtmfPortEntry
	ACCESS		not-accessible
	STATUS		mandatory
	DESCRIPTION
              "An entry in the table, containing information about the
              physical layer of a UNI interface."
	INDEX	 { atmfPortIndex }
	::= { atmfPortTable 1 }

AtmfPortEntry ::= SEQUENCE {
	atmfPortIndex              INTEGER,
	atmfPortAddress            AtmAddress,
	atmfPortTransmissionType   OBJECT IDENTIFIER,
	atmfPortMediaType          OBJECT IDENTIFIER,
	atmfPortOperStatus         INTEGER,
	atmfPortSpecific           OBJECT IDENTIFIER,
	atmfPortMyIfName           DisplayString
}

atmfPortIndex OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "A unique value which identifies this port. The value of
              0 has the special meaning of identifying the local UNI."
	::= { atmfPortEntry 1 }

atmfPortAddress OBJECT-TYPE
	SYNTAX		AtmAddress
	ACCESS		read-only
	STATUS		deprecated
	DESCRIPTION
              "This object should not be implemented except as required
              for backward compatibility with version 2.0 of the UNI
              specification. The Address Group, defined as part of the
              separate Address Registration MIB should be used instead."
	::= { atmfPortEntry 2 }

atmfPortTransmissionType OBJECT-TYPE
	SYNTAX		OBJECT IDENTIFIER
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The transmission type of this port. For example, for a
              port using the Sonet STS-3c physical layer at 155.52 Mbs,
              this object would have the Object Identifier value: 
              atmfSonetSTS3c."
	::= { atmfPortEntry 3 }

atmfPortMediaType OBJECT-TYPE
	SYNTAX		OBJECT IDENTIFIER
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The type of media being used on this port. For example,
              for a port using coaxial cable, this object would have
              the Object Identifier value: atmfMediaCoaxCable."
	::= { atmfPortEntry 4 }

atmfPortOperStatus OBJECT-TYPE
	SYNTAX		INTEGER {
					other(1),
					inService(2),
					outOfService(3),
					loopBack(4)
				}
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The operational (i.e., actual) state of this port.

              The ILMI should not alarm on a physical interface for
              when the value of this object is outOfService(3). This
              capability is useful if equipment is to be disconnected,
              or for troubleshooting purposes.

              A value of loopBack(4) indicates that a local loopback
              is in place."
	::= { atmfPortEntry 5 }

atmfPortSpecific OBJECT-TYPE
	SYNTAX    OBJECT IDENTIFIER
	ACCESS    read-only
	STATUS    mandatory
	DESCRIPTION
              "This object 'points' to additional transmission and/or
              media specific information relating to this port. In
              particular, this object's value is the name of a specific
              instance of the first columnar object of a MIB table with
              such additional information, where the specific instance
              is the one which corresponds to this port.

              For example, for a DS3 interface, this object would contain
              the value, as defined in RFC 1407:
	           dsx3LineIndex.i
              where i would be the integer value uniquely identifying
              the DS3 interface corresponding to this port. If no
              additional transmission and/or media specific information
              is available, this object has the value { 0 0 }."
	::= { atmfPortEntry 6 }

atmfPortMyIfName  OBJECT-TYPE
	SYNTAX	DisplayString
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
              "A textual name of this interface. If this system is
              manageable through SNMP, and supports the object ifName,
              the value of this object must be identical with that of
              ifName for the ifEntry of the lowest level physical
              interface for this port. This interface must be uniquely
              named on this system to distinguish parallel links with
              a neighboring system. If this interface does not have a
              textual name, the value of this object is a zero length
              string."
	::= { atmfPortEntry 7 }

 --  Note: Typical UME will support only one of the following two objects
atmfMyIpNmAddress  OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
              "An IP Address to which a Network Management Station can
              send Network Management protocol, e.g. SNMP messages to
              UDP port 161, in order to access network management 
              information concerning the operation of the ATM device
              local to this UME."
	::= { atmfPhysicalGroup 2 }

atmfMyOsiNmNsapAddress  OBJECT-TYPE
	SYNTAX	NsapAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
              "An NSAP Address to which a Network Management Station 
              can send Network Management protocol messages in order
              to access network management information concerning the
              operation of the ATM device local to this UME."
	::= { atmfPhysicalGroup 3 }


--	The ATM Layer Group

-- This group is mandatory for all UNI devices.
--
-- ATM-layer specific information for the UNI interface

atmfAtmLayerTable OBJECT-TYPE
	SYNTAX		SEQUENCE OF AtmfAtmLayerEntry
	ACCESS		not-accessible
	STATUS		mandatory
	DESCRIPTION
              "A table of ATM layer status and parameter information
              for the UNI's physical interface."
	::= { atmfAtmLayerGroup 1 }

atmfAtmLayerEntry OBJECT-TYPE
	SYNTAX		AtmfAtmLayerEntry
	ACCESS		not-accessible
	STATUS		mandatory
	DESCRIPTION
              "An entry in the table, containing information about
              the ATM layer of a UNI interface."
	INDEX	 { atmfAtmLayerIndex }
	::= { atmfAtmLayerTable 1 }

AtmfAtmLayerEntry ::= SEQUENCE {
	atmfAtmLayerIndex            INTEGER,
	atmfAtmLayerMaxVPCs          INTEGER,
	atmfAtmLayerMaxVCCs          INTEGER,
	atmfAtmLayerConfiguredVPCs   INTEGER,
	atmfAtmLayerConfiguredVCCs   INTEGER,
	atmfAtmLayerMaxVpiBits       INTEGER,
	atmfAtmLayerMaxVciBits       INTEGER,
	atmfAtmLayerUniType          INTEGER,
	atmfAtmLayerUniVersion       INTEGER
}

atmfAtmLayerIndex OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The unique value which identifies the UNI port.
              The value of 0 has the special meaning of identifying
              the local UNI."
	::= { atmfAtmLayerEntry 1 }

atmfAtmLayerMaxVPCs OBJECT-TYPE
	SYNTAX		INTEGER (0..255)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The maximum number of switched and permanent VPCs
              supported on this UNI."
	::= { atmfAtmLayerEntry 2 }

atmfAtmLayerMaxVCCs OBJECT-TYPE
	SYNTAX		INTEGER (0..16777215)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The maximum number of switched and permanent VCCs
              supported on this UNI."
	::= { atmfAtmLayerEntry 3 }

atmfAtmLayerConfiguredVPCs OBJECT-TYPE
	SYNTAX		INTEGER (0..255)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The number of permanent VPCs configured for use on 
              this UNI."
	::= { atmfAtmLayerEntry 4 }

atmfAtmLayerConfiguredVCCs OBJECT-TYPE
	SYNTAX		INTEGER (0..16777215)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The number of permanent VCCs configured for use on 
              this UNI."
	::= { atmfAtmLayerEntry 5 }

atmfAtmLayerMaxVpiBits OBJECT-TYPE
	SYNTAX		INTEGER (0..8)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The number of active VPI bits on this interface."
	::= {atmfAtmLayerEntry 6 }

atmfAtmLayerMaxVciBits OBJECT-TYPE
	SYNTAX		INTEGER (0..16)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The number of active VCI bits on this interface."
	::= {atmfAtmLayerEntry 7 }

atmfAtmLayerUniType OBJECT-TYPE
	SYNTAX		INTEGER {public(1), private(2)}
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The type of the ATM UNI, either public or private."
	::= { atmfAtmLayerEntry 8 }

atmfAtmLayerUniVersion  OBJECT-TYPE
	SYNTAX		INTEGER  {
                                   version2point0(1), 
                                   version3point0(2), 
                                   version3point1(3)
                        }
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "An indication of the latest version of the ATM Forum
              UNI Specification that is supported on this UNI.  If
              this value is not present, a version of the UNI earlier
              than 3.1 is supported.  If a value greater than
              version3point1(3) is present, then UNI 3.1 communication 
              should be attempted.

              If the peer UME's value of this object is the same as,
              or later than the local UME's value, then the version
              corresponding to the local UME's value should be attempted.
              Otherwise, if the peer UME's value of this object is 
              earlier, and supported locally, then the local UME should
              attempt the version corresponding to the peer UME's value.
              Otherwise, compatibility of the two UMEs cannot be assumed."
	::= { atmfAtmLayerEntry 9 }


--	The ATM Statistics Group

-- This group is optional. However, if any objects in this group 
-- are supported, then all objects in the group must be supported. 
--
-- ATM-layer statistics for the UNI interface

atmfAtmStatsTable OBJECT-TYPE
	SYNTAX		SEQUENCE OF AtmfAtmStatsEntry
	ACCESS		not-accessible
	STATUS		mandatory
	DESCRIPTION
              "A table of ATM layer statistics information for the
              UNI's physical interface."
	::= { atmfAtmStatsGroup 1 }

atmfAtmStatsEntry OBJECT-TYPE
	SYNTAX		AtmfAtmStatsEntry
	ACCESS		not-accessible
	STATUS		mandatory
	DESCRIPTION
              "An entry in the table, containing statistics for the
              ATM layer of a UNI interface."
	INDEX	 { atmfAtmStatsIndex }
	::= { atmfAtmStatsTable 1 }

AtmfAtmStatsEntry ::= SEQUENCE {
	atmfAtmStatsIndex                INTEGER,
	atmfAtmStatsReceivedCells        Counter,
	atmfAtmStatsDroppedReceivedCells Counter,
	atmfAtmStatsTransmittedCells     Counter
}
atmfAtmStatsIndex OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The unique value which identifies the UNI port. The
              value of 0 has the special meaning of identifying the
              local UNI."
	::= { atmfAtmStatsEntry 1 }

atmfAtmStatsReceivedCells OBJECT-TYPE
	SYNTAX		Counter
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The accumulated number of ATM cells received on this 
              UNI which were assigned and not dropped."
	::= { atmfAtmStatsEntry 2 }

atmfAtmStatsDroppedReceivedCells OBJECT-TYPE
	SYNTAX		Counter
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The accumulated number of ATM cells which were dropped
              for the reasons defined in section 4.4.4.2."
	::= { atmfAtmStatsEntry 3 }

atmfAtmStatsTransmittedCells OBJECT-TYPE
	SYNTAX		Counter
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The accumulated number of assigned ATM cells which were
              transmitted across this interface."
	::= { atmfAtmStatsEntry 4 }



--	The Virtual Path Group

-- This group is mandatory for all UNI devices.
--
-- Information concerning Virtual Path Connections

atmfVpcTable OBJECT-TYPE
	SYNTAX		SEQUENCE OF AtmfVpcEntry
	ACCESS		not-accessible
	STATUS		mandatory
	DESCRIPTION
              "A table of status and parameter information on the
              virtual path connections which cross this UNI.  There
              is one entry in this table for each permanent virtual
              path connection."
	::= { atmfVpcGroup 1 }

atmfVpcEntry OBJECT-TYPE
	SYNTAX		AtmfVpcEntry
	ACCESS		not-accessible
	STATUS		mandatory
	DESCRIPTION
              "An entry in the table, containing information about a
              particular virtual path connection."
	INDEX	 { atmfVpcPortIndex, atmfVpcVpi }
	::= { atmfVpcTable 1 }

AtmfVpcEntry ::= SEQUENCE {
	atmfVpcPortIndex                       INTEGER,
	atmfVpcVpi                             INTEGER,
	atmfVpcOperStatus                      INTEGER,
	atmfVpcTransmitTrafficDescriptorType   OBJECT IDENTIFIER, 
	atmfVpcTransmitTrafficDescriptorParam1 INTEGER,
	atmfVpcTransmitTrafficDescriptorParam2 INTEGER,
	atmfVpcTransmitTrafficDescriptorParam3 INTEGER,
	atmfVpcTransmitTrafficDescriptorParam4 INTEGER,
	atmfVpcTransmitTrafficDescriptorParam5 INTEGER,
	atmfVpcReceiveTrafficDescriptorType    OBJECT IDENTIFIER, 
	atmfVpcReceiveTrafficDescriptorParam1  INTEGER,
	atmfVpcReceiveTrafficDescriptorParam2  INTEGER,
	atmfVpcReceiveTrafficDescriptorParam3  INTEGER,
	atmfVpcReceiveTrafficDescriptorParam4  INTEGER,
	atmfVpcReceiveTrafficDescriptorParam5  INTEGER,
	atmfVpcQoSCategory                     INTEGER,
	atmfVpcTransmitQoSClass                INTEGER,
	atmfVpcReceiveQoSClass                 INTEGER
}

atmfVpcPortIndex OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The unique value which identifies the UNI port. The
              value of 0 has the special meaning of identifying the
              local UNI."
	::= { atmfVpcEntry 1 }

atmfVpcVpi OBJECT-TYPE
	SYNTAX		INTEGER (0..255)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The VPI value of this Virtual Path Connection at the
              local UNI."
	::= { atmfVpcEntry 2 }

atmfVpcOperStatus OBJECT-TYPE
	SYNTAX INTEGER {
				unknown(1),
				end2endUp(2),
				end2endDown(3),
				localUpEnd2endUnknown(4),
				localDown(5)
			}
	ACCESS 		read-only
	STATUS 		mandatory
	DESCRIPTION
              "The present actual operational status of the VPC.

              A value of end2endUp(2) or end2endDown(3) would be used
              if the end-to-end status is known. If only local status
              information is available, a value of 
              localUpEnd2endUnknown(4) or localDown(5) would be used."
	::= { atmfVpcEntry 3 }

atmfVpcTransmitTrafficDescriptorType OBJECT-TYPE
	SYNTAX		OBJECT IDENTIFIER
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The type of traffic management, applicable to the
              transmit direction of this VPC. The type may indicate
              none, or a type with one or more parameters. These 
              parameters are specified as a parameter vector, in the
              corresponding instances of the objects: 
		  atmfVpcTransmitTrafficDescriptorParam1, 
		  atmfVpcTransmitTrafficDescriptorParam2, 
		  atmfVpcTransmitTrafficDescriptorParam3, 
		  atmfVpcTransmitTrafficDescriptorParam4, and 
		  atmfVpcTransmitTrafficDescriptorParam5."
	::= { atmfVpcEntry 4 }

atmfVpcTransmitTrafficDescriptorParam1 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The first parameter of the transmit parameter vector
              for this VPC, used according to the value of
              atmfVpcTransmitTrafficDescriptorType."
	::= { atmfVpcEntry 5 }

atmfVpcTransmitTrafficDescriptorParam2 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The second parameter of the transmit parameter vector
               for this VPC, used according to the value of
               atmfVpcTransmitTrafficDescriptorType."
	::= { atmfVpcEntry 6 }

atmfVpcTransmitTrafficDescriptorParam3 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The third parameter of the transmit parameter vector
              for this VPC, used according to the value of
              atmfVpcTransmitTrafficDescriptorType."
	::= { atmfVpcEntry 7 }

atmfVpcTransmitTrafficDescriptorParam4 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The fourth parameter of the transmit parameter vector
              for this VPC, used according to the value of
              atmfVpcTransmitTrafficDescriptorType."
	::= { atmfVpcEntry 8 }

atmfVpcTransmitTrafficDescriptorParam5 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The fifth parameter of the transmit parameter vector
              for this VPC, used according to the value of
              atmfVpcTransmitTrafficDescriptorType."
	::= { atmfVpcEntry 9 }

atmfVpcReceiveTrafficDescriptorType OBJECT-TYPE
	SYNTAX		OBJECT IDENTIFIER
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The type of traffic management, applicable to the
              traffic in the receive direction of this VPC. The
              type may indicate none, or a type with one or more
              parameters. These parameters are specified as a
              parameter vector, in the corresponding instances of
              the objects: 
		  atmfVpcReceiveTrafficDescriptorParam1, 
		  atmfVpcReceiveTrafficDescriptorParam2, 
		  atmfVpcReceiveTrafficDescriptorParam3, 
		  atmfVpcReceiveTrafficDescriptorParam4, and 
		  atmfVpcReceiveTrafficDescriptorParam5."
	::= { atmfVpcEntry 10 }

atmfVpcReceiveTrafficDescriptorParam1 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The first parameter of the receive parameter vector
              for this VPC, used according to the value of
              atmfVpcReceiveTrafficDescriptorType."
	::= { atmfVpcEntry 11 }

atmfVpcReceiveTrafficDescriptorParam2 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The second parameter of the receive parameter vector
              for this VPC, used according to the value of
              atmfVpcReceiveTrafficDescriptorType."
	::= { atmfVpcEntry 12 }

atmfVpcReceiveTrafficDescriptorParam3 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The third parameter of the receive parameter vector
              for this VPC, used according to the value of
              atmfVpcReceiveTrafficDescriptorType."
	::= { atmfVpcEntry 13 }

atmfVpcReceiveTrafficDescriptorParam4 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The fourth parameter of the receive parameter vector
              for this VPC, used according to the value of
              atmfVpcReceiveTrafficDescriptorType."
	::= { atmfVpcEntry 14 }

atmfVpcReceiveTrafficDescriptorParam5 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The fifth parameter of the receive parameter vector
              for this VPC, used according to the value of
              atmfVpcReceiveTrafficDescriptorType."
	::= { atmfVpcEntry 15 }

atmfVpcQoSCategory OBJECT-TYPE
	SYNTAX		INTEGER { 
					other(1),
					deterministic (2),
					statistical (3),
					unspecified (4)
				}
	ACCESS		read-only
	STATUS		deprecated
	DESCRIPTION
              "This object should not be implemented except as 
              required for backward compatibility with version 2.0
              of the UNI specification."
	::= { atmfVpcEntry 16 }

atmfVpcTransmitQoSClass OBJECT-TYPE
	SYNTAX		INTEGER (0..255)
	ACCESS		read-only
	STATUS 		mandatory
	DESCRIPTION
              "The QoS Class, as defined in section 4 of Appendix A,
              for the transmit direction of this VPC connection at the
              local UNI."
	::= { atmfVpcEntry 17 }

atmfVpcReceiveQoSClass OBJECT-TYPE
	SYNTAX		INTEGER (0..255)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The QoS Class, as defined in section 4 of Appendix A,
              for the receive direction of this VPC connection at the
              local UNI."
	::= { atmfVpcEntry 18 }



--	The Virtual Channel Group

-- This group is mandatory for all UNI devices.
--
-- Information concerning Virtual Channel Connections

atmfVccTable OBJECT-TYPE
	SYNTAX		SEQUENCE OF AtmfVccEntry
	ACCESS		not-accessible
	STATUS		mandatory
	DESCRIPTION
              "A table of status and parameter information on the
              virtual channel connections which are visible at this
              UNI.  There is one entry in this table for each permanent
              virtual channel connection, including reserved VCCs that
              are supported; e.g., signalling, OAM flows, and ILMI,
              but not unassigned cells."
	::= { atmfVccGroup 1 }

atmfVccEntry OBJECT-TYPE
	SYNTAX		AtmfVccEntry
	ACCESS		not-accessible
	STATUS		mandatory
	DESCRIPTION
              "An entry in the table, containing information about a
              particular virtual channel connection."
	INDEX	 { atmfVccPortIndex, atmfVccVpi, atmfVccVci }
	::= { atmfVccTable 1 }

AtmfVccEntry ::= SEQUENCE {
	atmfVccPortIndex                        INTEGER,
	atmfVccVpi                              INTEGER,
	atmfVccVci                              INTEGER,
	atmfVccOperStatus                       INTEGER,
	atmfVccTransmitTrafficDescriptorType    OBJECT IDENTIFIER, 
	atmfVccTransmitTrafficDescriptorParam1  INTEGER,
	atmfVccTransmitTrafficDescriptorParam2  INTEGER,
	atmfVccTransmitTrafficDescriptorParam3  INTEGER,
	atmfVccTransmitTrafficDescriptorParam4  INTEGER,
	atmfVccTransmitTrafficDescriptorParam5  INTEGER,
	atmfVccReceiveTrafficDescriptorType     OBJECT IDENTIFIER, 
	atmfVccReceiveTrafficDescriptorParam1   INTEGER,
	atmfVccReceiveTrafficDescriptorParam2   INTEGER,
	atmfVccReceiveTrafficDescriptorParam3   INTEGER,
	atmfVccReceiveTrafficDescriptorParam4   INTEGER,
	atmfVccReceiveTrafficDescriptorParam5   INTEGER,
	atmfVccQoSCategory                      INTEGER,
	atmfVccTransmitQoSClass                 INTEGER,
	atmfVccReceiveQoSClass                  INTEGER
}

atmfVccPortIndex OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The unique value which identifies the UNI port. The
              value of 0 has the special meaning of identifying the
              local UNI."
	::= { atmfVccEntry 1 }

atmfVccVpi OBJECT-TYPE
	SYNTAX		INTEGER (0..255)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The VPI value of this Virtual Channel Connection at
              the local UNI."
	::= { atmfVccEntry 2 }

atmfVccVci OBJECT-TYPE
	SYNTAX		INTEGER (0..65535)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The VCI value of this Virtual Channel Connection at
              the local UNI."
	::= { atmfVccEntry 3 }

atmfVccOperStatus OBJECT-TYPE
	SYNTAX INTEGER {
			unknown(1), 
			end2endUp(2), 
			end2endDown(3), 
			localUpEnd2endUnknown(4),
			localDown(5)
			}
	ACCESS 	read-only
	STATUS 	mandatory
	DESCRIPTION
              "The present actual operational status of the VCC. 
              A value of end2endUp(2) or end2endUp(3) is used if
              the end to end status is known.

              If only local status is known a value of 
              localUpEnd2endUnknown(4) or localDown(5) is used."
	::= { atmfVccEntry 4 }

atmfVccTransmitTrafficDescriptorType OBJECT-TYPE
	SYNTAX		OBJECT IDENTIFIER
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The type of traffic management, applicable to the
              transmit direction of this VCC. The type may indicate
              none, or a type with one or more parameters. These
              parameters are specified as a parameter vector, in the
              corresponding instances of the objects: 
		  atmfVccTransmitTrafficDescriptorParam1, 
		  atmfVccTransmitTrafficDescriptorParam2, 
		  atmfVccTransmitTrafficDescriptorParam3, 
		  atmfVccTransmitTrafficDescriptorParam4, and 
		  atmfVccTransmitTrafficDescriptorParam5."
	::= { atmfVccEntry 5 }

atmfVccTransmitTrafficDescriptorParam1 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The first parameter of the transmit parameter vector
              for this VCC, used according to the value of
              atmfVccTransmitTrafficDescriptorType."
	::= { atmfVccEntry 6 }

atmfVccTransmitTrafficDescriptorParam2 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The second parameter of the transmit parameter vector
              for this VCC, used according to the value of
              atmfVccTransmitTrafficDescriptorType."
	::= { atmfVccEntry 7 }

atmfVccTransmitTrafficDescriptorParam3 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The third parameter of the transmit parameter vector
              for this VCC, used according to the value of 
              atmfVccTransmitTrafficDescriptorType."
	::= { atmfVccEntry 8 }

atmfVccTransmitTrafficDescriptorParam4 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The fourth parameter of the transmit parameter vector
              for this VCC, used according to the value of 
              atmfVccTransmitTrafficDescriptorType."
	::= { atmfVccEntry 9 }

atmfVccTransmitTrafficDescriptorParam5 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The fifth parameter of the transmit parameter vector
              for this VCC, used according to the value of 
              atmfVccTransmitTrafficDescriptorType."
	::= { atmfVccEntry 10 }

atmfVccReceiveTrafficDescriptorType OBJECT-TYPE
	SYNTAX		OBJECT IDENTIFIER
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The type of traffic management, applicable to the
              traffic in the receive direction of this VCC. The type
              may indicate none, or a type with one or more parameters.
              These parameters are specified as a parameter vector,
              in the corresponding instances of the objects: 
		  atmfVccReceiveTrafficDescriptorParam1, 
		  atmfVccReceiveTrafficDescriptorParam2, 
		  atmfVccReceiveTrafficDescriptorParam3, 
		  atmfVccReceiveTrafficDescriptorParam4, and 
		  atmfVccReceiveTrafficDescriptorParam5."
	::= { atmfVccEntry 11 }

atmfVccReceiveTrafficDescriptorParam1 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The first parameter of the receive parameter vector
              for this VCC, used according to the value of 
              atmfVccReceiveTrafficDescriptorType."
	::= { atmfVccEntry 12 }

atmfVccReceiveTrafficDescriptorParam2 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The second parameter of the receive parameter vector
              for this VCC, used according to the value of 
              atmfVccReceiveTrafficDescriptorType."
	::= { atmfVccEntry 13 }

atmfVccReceiveTrafficDescriptorParam3 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The third parameter of the receive parameter vector
              for this VCC, used according to the value of 
              atmfVccReceiveTrafficDescriptorType."
	::= { atmfVccEntry 14 }

atmfVccReceiveTrafficDescriptorParam4 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The fourth parameter of the receive parameter vector
              for this VCC, used according to the value of 
              atmfVccReceiveTrafficDescriptorType."
	::= { atmfVccEntry 15 }

atmfVccReceiveTrafficDescriptorParam5 OBJECT-TYPE
	SYNTAX		INTEGER (0..2147483647)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The fifth parameter of the receive parameter vector
              for this VCC, used according to the value of 
              atmfVccReceiveTrafficDescriptorType."
	::= { atmfVccEntry 16 }

atmfVccQoSCategory OBJECT-TYPE
	SYNTAX		INTEGER { 
					other(1),
					deterministic (2),
					statistical (3),
					unspecified (4)
				}
	ACCESS		read-only
	STATUS		deprecated
	DESCRIPTION
              "This object should not be implemented except as
              required for backward compatibility with version 2.0
              of the UNI specification."
	::= { atmfVccEntry 17 }

 atmfVccTransmitQoSClass OBJECT-TYPE
	SYNTAX		INTEGER (0..255)
	ACCESS		read-only
	STATUS 		mandatory
	DESCRIPTION
              "The QoS Class, as defined in section 4 of Appendix A,
              for the transmit direction of this VCC connection at
              the local UNI."
	::= { atmfVccEntry 18 }

atmfVccReceiveQoSClass OBJECT-TYPE
	SYNTAX		INTEGER (0..255)
	ACCESS		read-only
	STATUS		mandatory
	DESCRIPTION
              "The QoS Class, as defined in section 4 of Appendix A,
              for the receive direction of this VCC connection at the
              local UNI."
	::= { atmfVccEntry 19 }

-- atmfVpcChange TRAP-TYPE
-- 	ENTERPRISE	atmForum
-- 	VARIABLES	{ atmfVpcPortIndex, atmfVpcVpi, 
--                           atmfVpcOperStatus }
-- 	DESCRIPTION
--               "An atmfVpcChange trap indicates that a VPC is added
--               or deleted at this UNI.  The variables included in the
--               trap identify the VPI value of the new or deleted
--               configured VPC at this UNI."
-- 	::= 1
-- 
-- atmfVccChange TRAP-TYPE
-- 	ENTERPRISE	atmForum
-- 	VARIABLES	{ atmfVccPortIndex, atmfVccVci,
--                           atmfVccVpi, atmfVccOperStatus }
-- 	DESCRIPTION
--               "An atmfVccChange trap indicates that a VCC is added
--               or deleted at this UNI.  The variables included in the
--               trap identify the VCI and VPI values of the new or
--               deleted configured VCC at this UNI."
-- 	::= 2


     
-- Textual Convention
-- Representations in this MIB Module of an ATM address
-- use the data type:

AtmAddress ::= OCTET STRING (SIZE (8 | 20))

-- Representations in this MIB Module of a network-prefix
-- for an ATM address use the data type:

NetPrefix ::= OCTET STRING (SIZE (8 | 13))

-- in both the AtmAddress and NetPrefix conventions, non-NSAP-encoded E.164
-- addresses are represented as 8 octets using the format specified in section 5.1.3.1.4.
-- In contrast, an NSAP-encoded address is 20 octets, and an NSAP-encoded network
-- prefix is 13 octets long.

-- New MIB Groups

atmfAddressGroup OBJECT IDENTIFIER ::= { atmForumUni 6 }
atmfNetPrefixGroup OBJECT IDENTIFIER ::= { atmForumUni 7 }


--                  The Network Prefix Table
--
-- The Network Prefix Table is implemented by the UNI Management
-- Entity on the user-side of the UNI

atmfNetPrefixTable OBJECT-TYPE
       SYNTAX SEQUENCE OF AtmfNetPrefixEntry
       ACCESS not-accessible
       STATUS mandatory
       DESCRIPTION
	   "A table implemented by the UNI Management Entity on the user-side
	   of an ATM UNI port, containing the network-prefix(es) for ATM-layer
	   addresses in effect on the user-side of the UNI."
       ::= { atmfNetPrefixGroup 1 }


atmfNetPrefixEntry OBJECT-TYPE
       SYNTAX AtmfNetPrefixEntry
       ACCESS not-accessible
       STATUS mandatory
       DESCRIPTION
	   "Information about a single network-prefix for ATM-layer
	   addresses in effect on the user-side of a UNI port. Note
	   that the index variable atmfNetPrefixPrefix is a
	   variable-length string, and as such the rule for
	   variable-length strings in section 4.1.6 of RFC 1212 applies."
       INDEX   { atmfNetPrefixPort, atmfNetPrefixPrefix }
       ::= { atmfNetPrefixTable 1 }

AtmfNetPrefixEntry ::=
       SEQUENCE {
	    atmfNetPrefixPort INTEGER,
	    atmfNetPrefixPrefix NetPrefix,
	    atmfNetPrefixStatus INTEGER
       }
       
atmfNetPrefixPort OBJECT-TYPE
       SYNTAX INTEGER (0..2147483647)
       ACCESS not-accessible
       STATUS mandatory
       DESCRIPTION
	   "A unique value which identifies the UNI port for which
	   the network prefix for ATM addresses is in effect. The value
	   of 0 has the special meaning of identifying the local UNI."
       ::= { atmfNetPrefixEntry 1 }

atmfNetPrefixPrefix  OBJECT-TYPE
       SYNTAX NetPrefix
       ACCESS not-accessible
       STATUS mandatory
       DESCRIPTION
	   "The network prefix for ATM addresses which is in effect
	   on the user-side of the ATM UNI port."
       ::= { atmfNetPrefixEntry 2 }
	   
atmfNetPrefixStatus  OBJECT-TYPE
       SYNTAX INTEGER { valid(1), invalid(2) }
       ACCESS read-write
       STATUS mandatory
       DESCRIPTION 
	   "An indication of the validity of the network prefix for
	   ATM addresses on the user-side of the UNI port. To configure
	   a new network prefix in this table, the network-side must
	   set the appropriate instance of this object to the value
	   valid(1). To delete an existing network prefix in this
	   table, the network-side must set the appropriate instance
	   of this object to the value invalid(2). If circumstances occur
	   on the user-side which cause a prefix to become invalid, the
	   user-side modifies the value of the appropriate instance of this
	   object to invalid(2).

           If circumstances occur on the user-side which cause a prefix to
	   become invalid, the user-side modifies the value of the appropriate
	   instance of this object to invalid(2). Whenever the value of this
	   object for a particular prefix becomes invalid(2), the conceptual
	   row for that prefix may be removed from the table at any time,
	   either immediately or subsequently." 
       ::= { atmfNetPrefixEntry 3 }
       

--                     The Address Table
--
-- The Address Table is implemented by the UNI Management Entity
-- on the network-side of the UNI
       
atmfAddressTable OBJECT-TYPE
       SYNTAX SEQUENCE OF AtmfAddressEntry
       ACCESS not-accessible
       STATUS mandatory
       DESCRIPTION
           "A table implemented by the network-side of an ATM
           UNI port, containing the ATM-layer addresses in
           effect on the user-side of the UNI."
       ::= { atmfAddressGroup 1 }
		  
atmfAddressEntry OBJECT-TYPE
       SYNTAX AtmfAddressEntry
       ACCESS not-accessible
       STATUS mandatory
       DESCRIPTION
	   "Information about a single ATM-layer address in effect on the
	   user-side of a UNI port. Note that the index variable
	   atmfAddressAtmAddress is a variable-length string, and as such
	   the rule for variable-length strings in section 4.1.6 of RFC 1212
	   applies."
       INDEX   { atmfAddressPort, atmfAddressAtmAddress }
       ::= { atmfAddressTable 1 }


AtmfAddressEntry ::=
       SEQUENCE {
	     atmfAddressPort INTEGER,
	     atmfAddressAtmAddress AtmAddress,
	     atmfAddressStatus INTEGER
       }
       
atmfAddressPort OBJECT-TYPE
       SYNTAX INTEGER (0..2147483647)
       ACCESS not-accessible
       STATUS mandatory
       DESCRIPTION
	   "A unique value which identifies the UNI port for which the ATM
	   address is in effect. The value of 0 has the special meaning of
	   identifying the local UNI."
       ::= { atmfAddressEntry 1 }

atmfAddressAtmAddress  OBJECT-TYPE
       SYNTAX AtmAddress
       ACCESS not-accessible
       STATUS mandatory
       DESCRIPTION
	   "The ATM address which is in effect on the user-side of the
	   ATM UNI port."
       ::= { atmfAddressEntry 2 }
       
atmfAddressStatus  OBJECT-TYPE
       SYNTAX INTEGER { valid(1), invalid(2) }
       ACCESS read-write
       STATUS mandatory
       DESCRIPTION
	   "An indication of the validity of the ATM address at the user-side
	   of the UNI port. To configure a new address in this table, the
	   user-side must set the appropriate instance of this object to the
	   value valid(1). To delete an existing address in this able, the
	   user-side must set the appropriate instance of this object to the
	   value invalid(2).

           If circumstances occur on the network-side which cause an address
	   to become invalid, the network-side modifies the value of the
	   appropriate instance of this object to invalid(2). Whenever the
	   value of this object for a particular address becomes invalid(2),
	   the conceptual row for that address may be removed from the table
	   at any time, either immediately or subsequently."
       ::= { atmfAddressEntry 3 }
       
       


--  This MIB module uses the extended OBJECT-TYPE macro as
--  defined in RFC 1212.

--  this is the MIB module for the DS1 objects

ds1 OBJECT IDENTIFIER ::= { transmission 18 }

-- note that this subsumes cept (19); there is no separate CEPT MIB


-- The DS1 Near End Group

-- Implementation of this group is mandatory for all systems
-- that attach to a DS1 Interface.

-- The DS1 Near End Group consists of four tables:
--    DS1 Configuration
--    DS1 Current
--    DS1 Interval
--    DS1 Total

-- the DS1 Configuration Table

    dsx1ConfigTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF Dsx1ConfigEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
           "The DS1 Configuration table."
       ::= { ds1 6 }


    dsx1ConfigEntry OBJECT-TYPE
        SYNTAX  Dsx1ConfigEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION





           "An entry in the DS1 Configuration table."
       INDEX   { dsx1LineIndex }
       ::= { dsx1ConfigTable 1 }

Dsx1ConfigEntry ::=
    SEQUENCE {
        dsx1LineIndex
            INTEGER,
        dsx1IfIndex
            INTEGER,
        dsx1TimeElapsed
            INTEGER,
        dsx1ValidIntervals
            INTEGER,
        dsx1LineType
            INTEGER,
        dsx1LineCoding
            INTEGER,
        dsx1SendCode
            INTEGER,
        dsx1CircuitIdentifier
            DisplayString,
        dsx1LoopbackConfig
            INTEGER,
        dsx1LineStatus
            INTEGER,
        dsx1SignalMode
            INTEGER,
        dsx1TransmitClockSource
            INTEGER,
        dsx1Fdl
            INTEGER
    }

    dsx1LineIndex OBJECT-TYPE
        SYNTAX  INTEGER (1..'7fffffff'h)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "This object is the identifier of a DS1  Inter-
           face on a managed device.  If there is an ifEn-
           try that is directly associated with  this  and
           only  this  DS1  interface,  it should have the
           same value as ifIndex.   Otherwise,  the  value
           exceeds  ifNumber,  and  is a unique identifier
           following this rule: inside  interfaces  (e.g.,
           equipment  side)  with even numbers and outside
           interfaces  (e.g.,  network   side)   with   odd





           numbers."
       ::= { dsx1ConfigEntry 1 }


    dsx1IfIndex OBJECT-TYPE
        SYNTAX  INTEGER (1..'7fffffff'h)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "This value for this object  is  equal  to  the
           value  of  ifIndex from the Interfaces table of
           MIB II (RFC 1213)."
       ::= { dsx1ConfigEntry 2 }


    dsx1TimeElapsed OBJECT-TYPE
        SYNTAX  INTEGER (0..899)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of seconds that have elapsed  since
           the  beginning of the current error-measurement
           period."
       ::= { dsx1ConfigEntry 3 }


    dsx1ValidIntervals OBJECT-TYPE
        SYNTAX  INTEGER (0..96)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of  previous  intervals  for  which
           valid data was collected.  The value will be 96
           unless the interface was brought on-line within
           the last 24 hours, in which case the value will
           be the number of complete 15  minute  intervals
           the since interface has been online."
       ::= { dsx1ConfigEntry 4 }


    dsx1LineType OBJECT-TYPE
        SYNTAX  INTEGER {
                    other(1),
                    dsx1ESF(2),
                    dsx1D4(3),
                    dsx1E1(4),
                    dsx1E1-CRC(5),
                    dsx1E1-MF(6),





                    dsx1E1-CRC-MF(7)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
           "This variable indicates  the  variety  of  DS1
           Line  implementing  this  circuit.  The type of
           circuit affects the number of bits  per  second
           that  the circuit can reasonably carry, as well
           as the interpretation of the  usage  and  error
           statistics.  The values, in sequence, describe:

           TITLE:        SPECIFICATION:
           dsx1ESF       Extended SuperFrame DS1
           dsx1D4        AT&T D4 format DS1
           dsx1E1        CCITT Recommendation G.704
                           (Table 4a)
           dsx1E1-CRC    CCITT Recommendation G.704
                           (Table 4b)
           dsxE1-MF      G.704 (Table 4a) with TS16
                           multiframing enabled
           dsx1E1-CRC-MF G.704 (Table 4b) with TS16
                           multiframing enabled"

               ::= { dsx1ConfigEntry 5 }


    dsx1LineCoding OBJECT-TYPE
        SYNTAX  INTEGER {
                    dsx1JBZS (1),
                    dsx1B8ZS (2),
                    dsx1HDB3 (3),
                    dsx1ZBTSI (4),
                    dsx1AMI (5),
                    other(6)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
           "This variable describes the  variety  of  Zero
           Code  Suppression  used  on  the link, which in
           turn affects a number of its characteristics.

           dsx1JBZS refers the Jammed  Bit  Zero  Suppres-
           sion,  in  which  the  AT&T specification of at
           least one pulse every 8 bit periods is literal-
           ly  implemented  by forcing a pulse in bit 8 of
           each channel.  Thus, only seven bits per  chan-





           nel, or 1.344 Mbps, is available for data.

           dsx1B8ZS refers to the use of a specified  pat-
           tern  of  normal  bits  and  bipolar violations
           which are used to replace a sequence  of  eight
           zero bits.

           ANSI Clear Channels may use dsx1ZBTSI, or  Zero
           Byte Time Slot Interchange.

           E1 links, with or without CRC, use dsx1HDB3  or
           dsx1AMI.

           dsx1AMI refers to a mode wherein no  zero  code
           suppression  is  present  and the line encoding
           does not solve the problem directly.   In  this
           application, the higher layer must provide data
           which meets or exceeds the  pulse  density  re-
           quirements, such as inverting HDLC data."
       ::= { dsx1ConfigEntry 6 }


    dsx1SendCode OBJECT-TYPE
        SYNTAX  INTEGER {
                    dsx1SendNoCode(1),
                    dsx1SendLineCode(2),
                    dsx1SendPayloadCode(3),
                    dsx1SendResetCode(4),
                    dsx1SendQRS(5),
                    dsx1Send511Pattern(6),
                    dsx1Send3in24Pattern(7),
                    dsx1SendOtherTestPattern(8)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
           "This variable indicates what type of  code  is
           being sent across the DS1 interface by the dev-
           ice.  The values mean:

           dsx1SendNoCode
                sending looped or normal data

           dsx1SendLineCode
                sending a request for a line loopback

           dsx1SendPayloadCode
                sending a request for a payload loopback





           dsx1SendResetCode
                sending a loopback termination request

           dsx1SendQRS
                sending a Quasi-Random Signal  (QRS)  test
                pattern

           dsx1Send511Pattern
                sending a 511 bit fixed test pattern

           dsx1Send3in24Pattern
                sending a fixed test pattern of 3 bits set
                in 24

           dsx1SendOtherTestPattern
                sending a test pattern  other  than  those
                described by this object"
       ::= { dsx1ConfigEntry 7 }


    dsx1CircuitIdentifier OBJECT-TYPE
        SYNTAX  DisplayString (SIZE (0..255))
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
           "This  variable   contains   the   transmission
           vendor's circuit identifier, for the purpose of
           facilitating troubleshooting."
       ::= { dsx1ConfigEntry 8 }


    dsx1LoopbackConfig OBJECT-TYPE
        SYNTAX  INTEGER {
                    dsx1NoLoop(1),
                    dsx1PayloadLoop(2),
                    dsx1LineLoop(3),
                    dsx1OtherLoop(4)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
           "This variable represents the  loopback  confi-
           guration of the DS1 interface.  Agents support-
           ing read/write access should return badValue in
           response to a requested loopback state that the
           interface does not support.  The values mean:







           dsx1NoLoop
                Not in the loopback state.  A device  that
                is not capable of performing a loopback on
                the interface shall always return this  as
                it's value.

           dsx1PayloadLoop
                The received signal at this  interface  is
                looped  through  the device. Typically the
                received signal is  looped  back  for  re-
                transmission  after  it has passed through
                the device's framing function.

           dsx1LineLoop
                The received signal at this interface does
                not  go  through the device (minimum pene-
                tration) but is looped back out.

           dsx1OtherLoop
                Loopbacks that are not defined here."
       ::= { dsx1ConfigEntry 9 }


    dsx1LineStatus OBJECT-TYPE
        SYNTAX  INTEGER (1..8191)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "This variable indicates the Line Status of the
           interface.   It contains loopback, failure, re-
           ceived 'alarm'  and transmitted 'alarm'  infor-
           mation.

The dsx1LineStatus is a bit  map  represented  as  a  sum,
therefore, it can represent multiple failures (alarms) and
a LoopbackState simultaneously.

dsx1NoAlarm should be set if and only if no other flag  is
set.

If the dsx1LoopbackState bit is set, the loopback  in  ef-
fect can be determined from the dsx1LoopbackConfig object.

The various bit positions are:
     1     dsx1NoAlarm           No Alarm Present
     2     dsx1RcvFarEndLOF      Far end LOF (a.k.a., Yellow Alarm)
     4     dsx1XmtFarEndLOF      Near end sending LOF Indication
     8     dsx1RcvAIS            Far end sending AIS





    16     dsx1XmtAIS            Near end sending AIS
    32     dsx1LossOfFrame       Near end LOF (a.k.a., Red Alarm)
    64     dsx1LossOfSignal      Near end Loss Of Signal
   128     dsx1LoopbackState     Near end is looped
   256     dsx1T16AIS            E1 TS16 AIS
   512     dsx1RcvFarEndLOMF     Far End Sending TS16 LOMF
  1024     dsx1XmtFarEndLOMF     Near End Sending TS16 LOMF
  2048     dsx1RcvTestCode       Near End detects a test code
  4096     dsx1OtherFailure      any line status not defined here"
    ::= { dsx1ConfigEntry 10 }


    dsx1SignalMode OBJECT-TYPE
        SYNTAX  INTEGER {
                    none (1),
                    robbedBit (2),
                    bitOriented (3),
                    messageOriented (4)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
           "'none' indicates that no bits are reserved for
           signaling on this channel.

            'robbedBit' indicates that T1 Robbed Bit  Sig-
           naling is in use.

            'bitOriented' indicates that E1 Channel  Asso-
           ciated Signaling is in use.

            'messageOriented' indicates that Common  Chan-
           nel Signaling is in use either on channel 16 of
           an E1 link or channel 24 of a T1."
       ::= { dsx1ConfigEntry 11 }


    dsx1TransmitClockSource OBJECT-TYPE
        SYNTAX  INTEGER {
                    loopTiming (1),
                    localTiming (2),
                    throughTiming (3)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
           "The source of Tranmit Clock.






            'loopTiming' indicates that the recovered  re-
           ceive clock is used as the transmit clock.

            'localTiming' indicates  that  a  local  clock
           source is used.

            'throughTiming' indicates that  recovered  re-
           ceive  clock  from another interface is used as
           the transmit clock."
       ::= { dsx1ConfigEntry 12 }


    dsx1Fdl OBJECT-TYPE
        SYNTAX  INTEGER {
                      other(1),
                      dsx1Ansi-T1-403(2),
                      dsx1Att-54016(4),
                      dsx1Fdl-none(8)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
           "This bitmap describes the use of  the  facili-
           ties data link, and is the sum of the capabili-
           ties:

            'other' indicates that a protocol  other  than
           one following is used.

            'dsx1Ansi-T1-403' refers to the  FDL  exchange
           recommended by ANSI.

            'dsx1Att-54016' refers to ESF FDL exchanges.

            'dsx1Fdl-none' indicates that the device  does
           not use the FDL."
       ::= { dsx1ConfigEntry 13 }


-- the DS1 Current Table

-- The DS1 current table contains various statistics being
-- collected for the current 15 minute interval.

    dsx1CurrentTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF Dsx1CurrentEntry
        ACCESS  not-accessible
        STATUS  mandatory





        DESCRIPTION
           "The DS1 Current table."
       ::= { ds1 7 }


    dsx1CurrentEntry OBJECT-TYPE
        SYNTAX  Dsx1CurrentEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
           "An entry in the DS1 Current table."
       INDEX   { dsx1CurrentIndex }
       ::= { dsx1CurrentTable 1 }

Dsx1CurrentEntry ::=
    SEQUENCE {
        dsx1CurrentIndex
            INTEGER,
        dsx1CurrentESs
            Gauge,
        dsx1CurrentSESs
            Gauge,
        dsx1CurrentSEFSs
            Gauge,
        dsx1CurrentUASs
            Gauge,
        dsx1CurrentCSSs
            Gauge,
        dsx1CurrentPCVs
            Gauge,
        dsx1CurrentLESs
            Gauge,
        dsx1CurrentBESs
            Gauge,
        dsx1CurrentDMs
            Gauge,
        dsx1CurrentLCVs
            Gauge
    }

    dsx1CurrentIndex OBJECT-TYPE
        SYNTAX  INTEGER (1..'7fffffff'h)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The index value which uniquely identifies  the
           DS1  interface  to which this entry is applica-
           ble.  The interface identified by a  particular





           value  of  this  index is the same interface as
           identified by the same value as a dsx1LineIndex
           object instance."
       ::= { dsx1CurrentEntry 1 }


    dsx1CurrentESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Errored Seconds, encountered  by
           a DS1 interface in the current 15 minute inter-
           val."
       ::= { dsx1CurrentEntry 2 }


    dsx1CurrentSESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Severely Errored Seconds encoun-
           tered  by  a  DS1  interface  in the current 15
           minute interval."
       ::= { dsx1CurrentEntry 3 }


    dsx1CurrentSEFSs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Severely Errored Framing Seconds
           encountered  by  a DS1 interface in the current
           15 minute interval."
       ::= { dsx1CurrentEntry 4 }


    dsx1CurrentUASs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Unavailable Seconds  encountered
           by a DS1 interface in the current 15 minute in-
           terval."
       ::= { dsx1CurrentEntry 5 }





    dsx1CurrentCSSs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Controlled Slip Seconds  encoun-
           tered  by  a  DS1  interface  in the current 15
           minute interval."
       ::= { dsx1CurrentEntry 6 }


    dsx1CurrentPCVs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Path Coding  Violations  encoun-
           tered  by  a  DS1  interface  in the current 15
           minute interval."
       ::= { dsx1CurrentEntry 7 }


    dsx1CurrentLESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Line Errored Seconds encountered
           by a DS1 interface in the current 15 minute in-
           terval."
       ::= { dsx1CurrentEntry 8 }


    dsx1CurrentBESs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
           "The number of Bursty  Errored  Seconds  (BESs)
           encountered  by  a DS1 interface in the current
           15 minute interval."
       ::= {dsx1CurrentEntry 9 }


    dsx1CurrentDMs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory





        DESCRIPTION
           "The number of Degraded Minutes  (DMs)  encoun-
           tered  by  a  DS1  interface  in the current 15
           minute interval."
       ::= { dsx1CurrentEntry 10 }


    dsx1CurrentLCVs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
           "The number of Line Code Violations (LCVs)  en-
           countered  by a DS1 interface in the current 15
           minute interval."
    ::= {dsx1CurrentEntry 11 }


-- the DS1 Interval

-- The DS1 Interval Table contains various statistics
-- collected by each DS1 Interface over the previous 24 hours of
-- operation.  The past 24 hours are broken into 96 completed
-- 15 minute intervals.

    dsx1IntervalTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF Dsx1IntervalEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
           "The DS1 Interval table."
       ::= { ds1 8 }


    dsx1IntervalEntry OBJECT-TYPE
        SYNTAX  Dsx1IntervalEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
           "An entry in the DS1 Interval table."
       INDEX   { dsx1IntervalIndex, dsx1IntervalNumber }
       ::= { dsx1IntervalTable 1 }

Dsx1IntervalEntry ::=
    SEQUENCE {
        dsx1IntervalIndex
            INTEGER,
        dsx1IntervalNumber





            INTEGER,
        dsx1IntervalESs
            Gauge,
        dsx1IntervalSESs
            Gauge,
        dsx1IntervalSEFSs
            Gauge,
        dsx1IntervalUASs
            Gauge,
        dsx1IntervalCSSs
            Gauge,
        dsx1IntervalPCVs
            Gauge,
        dsx1IntervalLESs
            Gauge,
        dsx1IntervalBESs
            Gauge,
        dsx1IntervalDMs
            Gauge,
        dsx1IntervalLCVs
            Gauge
    }

    dsx1IntervalIndex OBJECT-TYPE
        SYNTAX  INTEGER (1..'7fffffff'h)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The index value which uniquely identifies  the
           DS1  interface  to which this entry is applica-
           ble.  The interface identified by a  particular
           value  of  this  index is the same interface as
           identified by the same value as a dsx1LineIndex
           object instance."
       ::= { dsx1IntervalEntry 1 }


    dsx1IntervalNumber OBJECT-TYPE
        SYNTAX  INTEGER (1..96)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "A number between 1 and 96, where 1 is the most
           recently completed 15 minute interval and 96 is
           the least recently completed 15 minutes  inter-
           val   (assuming   that  all  96  intervals  are
           valid)."
       ::= { dsx1IntervalEntry 2 }





    dsx1IntervalESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Errored Seconds encountered by a
           DS1  interface in one of the previous 96, indi-
           vidual 15 minute, intervals."
       ::= { dsx1IntervalEntry 3 }


    dsx1IntervalSESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Severely Errored Seconds encoun-
           tered by a DS1 interface in one of the previous
           96, individual 15 minute, intervals."
       ::= { dsx1IntervalEntry 4 }


    dsx1IntervalSEFSs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Severely Errored Framing Seconds
           encountered  by  a  DS1 interface in one of the
           previous 96, individual 15 minute, intervals."
       ::= { dsx1IntervalEntry 5 }


    dsx1IntervalUASs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Unavailable Seconds  encountered
           by  a  DS1 interface in one of the previous 96,
           individual 15 minute, intervals."
       ::= { dsx1IntervalEntry 6 }


    dsx1IntervalCSSs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory





        DESCRIPTION
           "The number of Controlled Slip Seconds  encoun-
           tered by a DS1 interface in one of the previous
           96, individual 15 minute, intervals."
       ::= { dsx1IntervalEntry 7 }


    dsx1IntervalPCVs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Path Coding  Violations  encoun-
           tered by a DS1 interface in one of the previous
           96, individual 15 minute, intervals."
       ::= { dsx1IntervalEntry 8 }


    dsx1IntervalLESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Line Errored Seconds encountered
           by  a  DS1 interface in one of the previous 96,
           individual 15 minute, intervals."
       ::= { dsx1IntervalEntry 9 }


    dsx1IntervalBESs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
           "The number of Bursty  Errored  Seconds  (BESs)
           encountered  by  a  DS1 interface in one of the
           previous 96, individual 15 minute, intervals."
       ::= {dsx1IntervalEntry 10 }


    dsx1IntervalDMs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
           "The number of Degraded Minutes  (DMs)  encoun-
           tered by a DS1 interface in one of the previous
           96, individual 15 minute, intervals."





       ::= { dsx1IntervalEntry 11 }


    dsx1IntervalLCVs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
           "The number of Line Code Violations (LCVs)  en-
           countered  by a DS1 interface in the current 15
           minute interval."
    ::= {dsx1IntervalEntry 12 }


-- the DS1 Total

-- The DS1 Total Table contains the cumulative sum of the
-- various statistics for the 24 hour period preceding the
-- current interval.

    dsx1TotalTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF Dsx1TotalEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
           "The DS1 Total table.  24 hour interval."
       ::= { ds1 9 }


    dsx1TotalEntry OBJECT-TYPE
        SYNTAX  Dsx1TotalEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
           "An entry in the DS1 Total table."
       INDEX   { dsx1TotalIndex }
       ::= { dsx1TotalTable 1 }

Dsx1TotalEntry ::=
    SEQUENCE {
        dsx1TotalIndex
            INTEGER,
        dsx1TotalESs
            Gauge,
        dsx1TotalSESs
            Gauge,
        dsx1TotalSEFSs
            Gauge,





        dsx1TotalUASs
            Gauge,
        dsx1TotalCSSs
            Gauge,
        dsx1TotalPCVs
            Gauge,
        dsx1TotalLESs
            Gauge,
        dsx1TotalBESs
            Gauge,
        dsx1TotalDMs
            Gauge,
        dsx1TotalLCVs
            Gauge
    }

    dsx1TotalIndex OBJECT-TYPE
        SYNTAX  INTEGER (1..'7fffffff'h)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The index value which uniquely identifies  the
           DS1  interface  to which this entry is applica-
           ble.  The interface identified by a  particular
           value  of  this  index is the same interface as
           identified by the same value as a dsx1LineIndex
           object instance."
       ::= { dsx1TotalEntry 1 }


    dsx1TotalESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Errored Seconds encountered by a
           DS1 interface in the previous 24 hour interval"
       ::= { dsx1TotalEntry 2 }


    dsx1TotalSESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Severely Errored Seconds encoun-
           tered  by  a  DS1  interface in the previous 24
           hour interval."





       ::= { dsx1TotalEntry 3 }


    dsx1TotalSEFSs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Severely Errored Framing Seconds
           encountered  by a DS1 interface in the previous
           24 hour interval."
       ::= { dsx1TotalEntry 4 }


    dsx1TotalUASs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Unavailable Seconds  encountered
           by  a DS1 interface in the previous 24 hour in-
           terval."
       ::= { dsx1TotalEntry 5 }


    dsx1TotalCSSs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Controlled Slip Seconds  encoun-
           tered  by  a  DS1  interface in the previous 24
           hour interval."
       ::= { dsx1TotalEntry 6 }


    dsx1TotalPCVs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Path Coding  Violations  encoun-
           tered  by  a  DS1  interface in the previous 24
           hour interval."
       ::= { dsx1TotalEntry 7 }








    dsx1TotalLESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Line Errored Seconds encountered
           by  a DS1 interface in the previous 24 hour in-
           terval."
       ::= { dsx1TotalEntry 8 }


    dsx1TotalBESs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
           "The number of Bursty  Errored  Seconds  (BESs)
           encountered  by a DS1 interface in the previous
           24 hour interval."
       ::= { dsx1TotalEntry 9 }


    dsx1TotalDMs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
           "The number of Degraded Minutes  (DMs)  encoun-
           tered  by  a  DS1  interface in the previous 24
           hour interval."
       ::= { dsx1TotalEntry 10 }


    dsx1TotalLCVs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
           "The number of Line Code Violations (LCVs)  en-
           countered  by a DS1 interface in the current 15
           minute interval."
    ::= {dsx1TotalEntry 11 }


-- The DS1 Far End Group

-- Implementation of this group is optional for all systems
-- that attach to a DS1 Interface.





-- The DS1 Far End Group consists of three tables:
--   DS1 Far End Current
--   DS1 Far End Interval
--   DS1 Far End Total

-- The DS1 Far End Current Table

-- The DS1 Far End Current table contains various statistics
-- being collected for the current 15 minute interval.
-- The statistics are collected from the far end messages on the
-- Facilities Data Link.  The definitions are the same as
-- described for the near-end information.

    dsx1FarEndCurrentTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF Dsx1FarEndCurrentEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
           "The DS1 Far End Current table."
       ::= { ds1 10 }


    dsx1FarEndCurrentEntry OBJECT-TYPE
        SYNTAX  Dsx1FarEndCurrentEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
           "An entry in the DS1 Far End Current table."
       INDEX   { dsx1FarEndCurrentIndex }
       ::= { dsx1FarEndCurrentTable 1 }

 Dsx1FarEndCurrentEntry ::=
    SEQUENCE {
        dsx1FarEndCurrentIndex
            INTEGER,
        dsx1FarEndTimeElapsed
            INTEGER,
        dsx1FarEndValidIntervals
            INTEGER,
        dsx1FarEndCurrentESs
            Gauge,
        dsx1FarEndCurrentSESs
            Gauge,
        dsx1FarEndCurrentSEFSs
            Gauge,
        dsx1FarEndCurrentUASs
            Gauge,
        dsx1FarEndCurrentCSSs





            Gauge,
        dsx1FarEndCurrentLESs
            Gauge,
        dsx1FarEndCurrentPCVs
            Gauge,
        dsx1FarEndCurrentBESs
            Gauge,
        dsx1FarEndCurrentDMs
            Gauge
    }

    dsx1FarEndCurrentIndex OBJECT-TYPE
        SYNTAX  INTEGER (1..'7fffffff'h)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The index value which uniquely identifies  the
           DS1  interface  to which this entry is applica-
           ble.  The interface identified by a  particular
           value  of  this  index is the same interface as
           identified by the same value  an  dsx1LineIndex
           object instance."
       ::= { dsx1FarEndCurrentEntry 1 }


    dsx1FarEndTimeElapsed OBJECT-TYPE
        SYNTAX  INTEGER (0..899)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The number of seconds that  have  elapsed
                since the beginning of the far end current
                error-measurement period."
       ::= { dsx1FarEndCurrentEntry 2 }


    dsx1FarEndValidIntervals OBJECT-TYPE
        SYNTAX  INTEGER (0..96)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The number of previous far end  intervals
                for  which  valid data was collected.  The
                value will be 96 unless the interface  was
                brought  online  within the last 24 hours,
                in which case the value will be the number
                of  complete  15  minute far end intervals
                since the interface has been online."





       ::= { dsx1FarEndCurrentEntry 3 }


    dsx1FarEndCurrentESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far Far End Errored Seconds  en-
           countered  by a DS1 interface in the current 15
           minute interval."
       ::= { dsx1FarEndCurrentEntry 4 }


    dsx1FarEndCurrentSESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Severely Errored Seconds
           encountered  by  a DS1 interface in the current
           15 minute interval."
       ::= { dsx1FarEndCurrentEntry 5 }


    dsx1FarEndCurrentSEFSs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Severely Errored Framing
           Seconds  encountered  by a DS1 interface in the
           current 15 minute interval."
       ::= { dsx1FarEndCurrentEntry 6 }


    dsx1FarEndCurrentUASs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Unavailable Seconds  encountered
           by a DS1 interface in the current 15 minute in-
           terval."
       ::= { dsx1FarEndCurrentEntry 7 }








    dsx1FarEndCurrentCSSs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Controlled Slip  Seconds
           encountered  by  a DS1 interface in the current
           15 minute interval."
       ::= { dsx1FarEndCurrentEntry 8 }


    dsx1FarEndCurrentLESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Line Errored Seconds en-
           countered  by a DS1 interface in the current 15
           minute interval."
       ::= { dsx1FarEndCurrentEntry 9 }


    dsx1FarEndCurrentPCVs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Path  Coding  Violations
           reported  via the far end block error count en-
           countered by a DS1 interface in the current  15
           minute interval."
       ::= { dsx1FarEndCurrentEntry 10 }


    dsx1FarEndCurrentBESs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
           "The number of Bursty  Errored  Seconds  (BESs)
           encountered  by  a DS1 interface in the current
           15 minute interval."
       ::= {dsx1FarEndCurrentEntry 11 }


    dsx1FarEndCurrentDMs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only





        STATUS mandatory
        DESCRIPTION
           "The number of Degraded Minutes  (DMs)  encoun-
           tered  by  a  DS1  interface  in the current 15
           minute interval."
       ::= { dsx1FarEndCurrentEntry 12 }


-- The DS1 Far End Interval Table

-- The DS1 Far End Interval Table contains various statistics
-- collected by each DS1 interface over the previous 24 hours of
-- operation.  The past 24 hours are broken into 96
-- completed 15 minute intervals.

    dsx1FarEndIntervalTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF Dsx1FarEndIntervalEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
           "The DS1 Far End Interval table."
       ::= { ds1 11 }


    dsx1FarEndIntervalEntry OBJECT-TYPE
        SYNTAX  Dsx1FarEndIntervalEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
           "An entry in the DS1 Far End Interval table."
       INDEX   { dsx1FarEndIntervalIndex,
                 dsx1FarEndIntervalNumber }
       ::= { dsx1FarEndIntervalTable 1 }

Dsx1FarEndIntervalEntry ::=
    SEQUENCE {
        dsx1FarEndIntervalIndex
            INTEGER,
        dsx1FarEndIntervalNumber
            INTEGER,
        dsx1FarEndIntervalESs
            Gauge,
        dsx1FarEndIntervalSESs
            Gauge,
        dsx1FarEndIntervalSEFSs
            Gauge,
        dsx1FarEndIntervalUASs
            Gauge,





        dsx1FarEndIntervalCSSs
            Gauge,
        dsx1FarEndIntervalLESs
            Gauge,
        dsx1FarEndIntervalPCVs
            Gauge,
        dsx1FarEndIntervalBESs
            Gauge,
        dsx1FarEndIntervalDMs
            Gauge
    }

    dsx1FarEndIntervalIndex OBJECT-TYPE
        SYNTAX  INTEGER (1..'7fffffff'h)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The index value which uniquely identifies  the
           DS1  interface  to which this entry is applica-
           ble.  The interface identified by a  particular
           value  of  this  index is the same interface as
           identified by the same value as a dsx1LineIndex
           object instance."
       ::= { dsx1FarEndIntervalEntry 1 }


    dsx1FarEndIntervalNumber OBJECT-TYPE
        SYNTAX  INTEGER (1..96)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "A number between 1 and 96, where 1 is the most
           recently completed 15 minute interval and 96 is
           the least recently completed 15 minutes  inter-
           val   (assuming   that  all  96  intervals  are
           valid)."
       ::= { dsx1FarEndIntervalEntry 2 }


    dsx1FarEndIntervalESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Errored Seconds  encoun-
           tered by a DS1 interface in one of the previous
           96, individual 15 minute, intervals."
       ::= { dsx1FarEndIntervalEntry 3 }





    dsx1FarEndIntervalSESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Severely Errored Seconds
           encountered  by  a  DS1 interface in one of the
           previous 96, individual 15 minute, intervals."
       ::= { dsx1FarEndIntervalEntry 4 }


    dsx1FarEndIntervalSEFSs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Severely Errored Framing
           Seconds  encountered  by a DS1 interface in one
           of the previous 96, individual 15  minute,  in-
           tervals."
       ::= { dsx1FarEndIntervalEntry 5 }


    dsx1FarEndIntervalUASs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Unavailable Seconds  encountered
           by  a  DS1 interface in one of the previous 96,
           individual 15 minute, intervals."
       ::= { dsx1FarEndIntervalEntry 6 }


    dsx1FarEndIntervalCSSs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Controlled Slip  Seconds
           encountered  by  a  DS1 interface in one of the
           previous 96, individual 15 minute, intervals."
       ::= { dsx1FarEndIntervalEntry 7 }


    dsx1FarEndIntervalLESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only





        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Line Errored Seconds en-
           countered by a DS1 interface in one of the pre-
           vious 96, individual 15 minute, intervals."
       ::= { dsx1FarEndIntervalEntry 8 }


    dsx1FarEndIntervalPCVs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Path  Coding  Violations
           reported  via the far end block error count en-
           countered by a DS1 interface in one of the pre-
           vious 96, individual 15 minute, intervals."
       ::= { dsx1FarEndIntervalEntry 9 }


    dsx1FarEndIntervalBESs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
           "The number of Bursty  Errored  Seconds  (BESs)
           encountered  by  a  DS1 interface in one of the
           previous 96, individual 15 minute, intervals."
       ::= {dsx1FarEndIntervalEntry 10 }


    dsx1FarEndIntervalDMs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
           "The number of Degraded Minutes  (DMs)  encoun-
           tered by a DS1 interface in one of the previous
           96, individual 15 minute, intervals."
       ::= { dsx1FarEndIntervalEntry 11 }


-- The DS1 Far End Total Table

-- The DS1 Far End Total Table contains the cumulative sum of the
-- various statistics for the 24 hour period preceding the
-- current interval.






    dsx1FarEndTotalTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF Dsx1FarEndTotalEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
           "The DS1 Far End Total table."
       ::= { ds1 12 }


    dsx1FarEndTotalEntry OBJECT-TYPE
        SYNTAX  Dsx1FarEndTotalEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
           "An entry in the DS1 Far End Total table."
       INDEX   { dsx1FarEndTotalIndex }
       ::= { dsx1FarEndTotalTable 1 }

Dsx1FarEndTotalEntry ::=
    SEQUENCE {
        dsx1FarEndTotalIndex
            INTEGER,
        dsx1FarEndTotalESs
            Gauge,
        dsx1FarEndTotalSESs
            Gauge,
        dsx1FarEndTotalSEFSs
            Gauge,
        dsx1FarEndTotalUASs
            Gauge,
        dsx1FarEndTotalCSSs
            Gauge,
        dsx1FarEndTotalLESs
            Gauge,
        dsx1FarEndTotalPCVs
            Gauge,
        dsx1FarEndTotalBESs
            Gauge,
        dsx1FarEndTotalDMs
            Gauge
    }

    dsx1FarEndTotalIndex OBJECT-TYPE
        SYNTAX  INTEGER (1..'7fffffff'h)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The index value which uniquely identifies  the





           DS1  interface  to which this entry is applica-
           ble.  The interface identified by a  particular
           value  of  this  index is the same interface as
           identified by the same value  an  dsx1LineIndex
           object instance."
       ::= { dsx1FarEndTotalEntry 1 }


    dsx1FarEndTotalESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Errored Seconds  encoun-
           tered  by  a  DS1  interface in the previous 24
           hour interval."
       ::= { dsx1FarEndTotalEntry 2 }


    dsx1FarEndTotalSESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Severely Errored Seconds
           encountered  by a DS1 interface in the previous
           24 hour interval."
       ::= { dsx1FarEndTotalEntry 3 }


    dsx1FarEndTotalSEFSs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Severely Errored Framing
           Seconds  encountered  by a DS1 interface in the
           previous 24 hour interval."
       ::= { dsx1FarEndTotalEntry 4 }


    dsx1FarEndTotalUASs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Unavailable Seconds  encountered
           by  a DS1 interface in the previous 24 hour in-





           terval."
       ::= { dsx1FarEndTotalEntry 5 }


    dsx1FarEndTotalCSSs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Controlled Slip  Seconds
           encountered  by a DS1 interface in the previous
           24 hour interval."
       ::= { dsx1FarEndTotalEntry 6 }


    dsx1FarEndTotalLESs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Line Errored Seconds en-
           countered by a DS1 interface in the previous 24
           hour interval."
       ::= { dsx1FarEndTotalEntry 7 }


    dsx1FarEndTotalPCVs OBJECT-TYPE
        SYNTAX  Gauge
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The number of Far End Path  Coding  Violations
           reported  via the far end block error count en-
           countered by a DS1 interface in the previous 24
           hour interval."
       ::= { dsx1FarEndTotalEntry 8 }


    dsx1FarEndTotalBESs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
           "The number of Bursty  Errored  Seconds  (BESs)
           encountered  by a DS1 interface in the previous
           24 hour interval."
       ::= { dsx1FarEndTotalEntry 9 }






    dsx1FarEndTotalDMs OBJECT-TYPE
        SYNTAX Gauge
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
           "The number of Degraded Minutes  (DMs)  encoun-
           tered  by  a  DS1  interface in the previous 24
           hour interval."
       ::= { dsx1FarEndTotalEntry 10 }


-- the DS1 Fractional Group

-- Implementation of this group is mandatory for those
-- systems dividing a DS1 into channels containing different
-- data streams that are of local interest.  Systems which
-- are indifferent to data content, such as CSUs, need not
-- implement it.

-- The DS1 fractional table identifies which DS1 channels
-- associated with a CSU are being used to support a
-- logical interface, i.e., an entry in the interfaces table
-- from the Internet-standard MIB.

-- For example, consider an application managing a North
-- American ISDN Primary Rate link whose division is a 384 kbit/s
-- H1 "B" Channel for Video, a second H1 for data to a primary
-- routing peer, and 12 64 kbit/s H0 "B" Channels. Consider that
-- some subset of the H0 channels are used for voice and the
-- remainder are available for dynamic data calls.

-- we count a total of 14 interfaces multiplexed onto the DS1
-- interface. Six DS1 channels (for the sake of the example,
-- channels 1..6) are used for Video, six more (7..11 and 13)
-- are used for data, and the remaining 12 are are in channels
-- 12 and 14..24.

-- Let us further imagine that ifIndex 2 is of type DS1 and
-- refers to the DS1 interface, and that the interfaces layered
-- onto it are numbered 3..16.

-- We might describe the allocation of channels, in the
-- dsx1FracTable, as follows:

-- dsx1FracIfIndex.2. 1 = 3    dsx1FracIfIndex.2.13 = 4
-- dsx1FracIfIndex.2. 2 = 3    dsx1FracIfIndex.2.14 = 6
-- dsx1FracIfIndex.2. 3 = 3    dsx1FracIfIndex.2.15 = 7
-- dsx1FracIfIndex.2. 4 = 3    dsx1FracIfIndex.2.16 = 8





-- dsx1FracIfIndex.2. 5 = 3    dsx1FracIfIndex.2.17 = 9
-- dsx1FracIfIndex.2. 6 = 3    dsx1FracIfIndex.2.18 = 10
-- dsx1FracIfIndex.2. 7 = 4    dsx1FracIfIndex.2.19 = 11
-- dsx1FracIfIndex.2. 8 = 4    dsx1FracIfIndex.2.20 = 12
-- dsx1FracIfIndex.2. 9 = 4    dsx1FracIfIndex.2.21 = 13
-- dsx1FracIfIndex.2.10 = 4    dsx1FracIfIndex.2.22 = 14
-- dsx1FracIfIndex.2.11 = 4    dsx1FracIfIndex.2.23 = 15
-- dsx1FracIfIndex.2.12 = 5    dsx1FracIfIndex.2.24 = 16


--      For North American (DS1) interfaces, there are 24 legal
--      channels, numbered 1 through 24.

--      For G.704 interfaces, there are 31 legal channels,
--      numbered 1 through 31.  The channels (1..31) correspond
--      directly to the equivalently numbered time-slots.

    dsx1FracTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF Dsx1FracEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
           "The DS1 Fractional table."
       ::= { ds1 13 }


    dsx1FracEntry OBJECT-TYPE
        SYNTAX  Dsx1FracEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
           "An entry in the DS1 Fractional table."
       INDEX   { dsx1FracIndex, dsx1FracNumber }
       ::= { dsx1FracTable 1 }

Dsx1FracEntry ::=
    SEQUENCE {
        dsx1FracIndex
            INTEGER,
        dsx1FracNumber
            INTEGER,
        dsx1FracIfIndex
            INTEGER
    }


    dsx1FracIndex OBJECT-TYPE
        SYNTAX  INTEGER (1..'7fffffff'h)





        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The index value which uniquely identifies  the
           DS1  interface  to which this entry is applica-
           ble.  The interface identified by a  particular
           value  of  this  index is the same interface as
           identified by the same value  an  dsx1LineIndex
           object instance."
       ::= { dsx1FracEntry 1 }


    dsx1FracNumber OBJECT-TYPE
        SYNTAX  INTEGER (1..31)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
           "The channel number for this entry."
       ::= { dsx1FracEntry 2 }


    dsx1FracIfIndex OBJECT-TYPE
        SYNTAX  INTEGER (1..'7fffffff'h)
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
           "An index value that uniquely identifies an in-
           terface.  The interface identified by a partic-
           ular value of this index is the same  interface
           as  identified by the same value an ifIndex ob-
           ject instance. If no interface is currently us-
           ing  a channel, the value should be zero.  If a
           single interface occupies more  than  one  time
           slot,  that ifIndex value will be found in mul-
           tiple time slots."
       ::= { dsx1FracEntry 3 }



commonPort    OBJECT IDENTIFIER ::= { cardGeneric 6}

-- --------------------------------------------------------------------
--
--
--        AIMNM COMMON PORT Group
--
--
-- --------------------------------------------------------------------


commonPortTable    OBJECT-TYPE
    SYNTAX    SEQUENCE OF CommonPortTableEntry
    ACCESS    not-accessible
    STATUS    mandatory
    DESCRIPTION
        "The common port table is for the common ports."
    ::= { commonPort 1 }


commonPortTableEntry    OBJECT-TYPE
    SYNTAX    CommonPortTableEntry
    ACCESS    not-accessible
    STATUS    mandatory
    DESCRIPTION
        " An entry for every common port group.
        "
    INDEX    { commonPortNum }
    ::= { commonPortTable 1 }

CommonPortTableEntry ::=
    SEQUENCE {
        commonPortNum     
           INTEGER,
		commonPortType
			INTEGER,
   		     	commonPortStatus
   	        	 INTEGER,
				commonPortSpeed
					INTEGER,
				commonPortAlarmState
					INTEGER,
				commonPortSignallingProtocolType
					INTEGER,
				commonPortSignallingState
					INTEGER,
				commonPortAssocLines
					DisplayString,
				commonPortAssocChannels
					DisplayString
    }

commonPortNum    OBJECT-TYPE
    SYNTAX    INTEGER (1..8) 
    ACCESS    read-only
    STATUS    mandatory
    DESCRIPTION
        "This is the index to the port number.
        "
    ::= { commonPortTableEntry 1}

commonPortType    OBJECT-TYPE
    SYNTAX    INTEGER {
			framerelayport(1),
			atmport(2),
			aimuxport(3)
			}
    ACCESS    read-only
    STATUS    mandatory
    DESCRIPTION
        "This is the type of the port.
		  1 - Frame Relay Port.
		  2 - ATM Port.
		  3 - AIMUX Port.
        "
    ::= { commonPortTableEntry 2}

commonPortStatus  OBJECT-TYPE        
    SYNTAX    INTEGER {
        disable(1),
        enable(2)
        }
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
        "This variable enables or disables the port
        1 - disable
        2 - enable
        "
    ::= { commonPortTableEntry 3 }

commonPortSpeed    OBJECT-TYPE
    SYNTAX    INTEGER (0..37360)
    ACCESS    read-only
    STATUS    mandatory
    DESCRIPTION
        "This is the speed of the port in cells per second.
        "
    ::= { commonPortTableEntry 4}

commonPortAlarmState  OBJECT-TYPE        
    SYNTAX    INTEGER {
        inalarm(1),
        outofalarm(2)
        }
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
        "This variable states the alarm status of the port
        1 - port in alarm
        2 - port out of alarm
        "
    ::= { commonPortTableEntry 5 }

commonPortSignallingProtocolType  OBJECT-TYPE
    SYNTAX  INTEGER {
        tbd(1)
        }
    ACCESS read-only
        STATUS  mandatory
        DESCRIPTION
		"This variable indicates the signalling protocol type of the port. 
		 This field is TBD. It is unused in AIMxM.
         "
        ::= { commonPortTableEntry 6 }

commonPortSignallingState  OBJECT-TYPE
    SYNTAX  INTEGER {
        tbd(1)
        }
    ACCESS read-only
        STATUS  mandatory
        DESCRIPTION
		"This variable indicates the signalling state of the port. 
         "
        ::= { commonPortTableEntry 7 }
 
commonPortAssocLines  OBJECT-TYPE
    SYNTAX  DisplayString
    ACCESS read-only
        STATUS  mandatory
        DESCRIPTION
        "This variable indicates the list of physical lines in the port
		delimited by dots.
        "
        ::= { commonPortTableEntry  8 }
 
commonPortAssocChannels  OBJECT-TYPE
    SYNTAX  DisplayString
    ACCESS read-only
        STATUS  mandatory
        DESCRIPTION
        "The variable indicates the list of channels that are used in the 
		ds1 frame.
        "
        ::= { commonPortTableEntry 9 }


-- --------------------------------------------------------------
-- End of commonPortTableEntry



commonChannel    OBJECT IDENTIFIER ::= { cardGeneric 7}

-- --------------------------------------------------------------------
--
--
--        AIMNM COMMON PORT Group
--
--
-- --------------------------------------------------------------------


commonChanTable    OBJECT-TYPE
    SYNTAX    SEQUENCE OF CommonChanTableEntry
    ACCESS    not-accessible
    STATUS    mandatory
    DESCRIPTION
        "The common port table is for the common ports."
    ::= { commonChannel 1 }


commonChanTableEntry    OBJECT-TYPE
    SYNTAX    CommonChanTableEntry
    ACCESS    not-accessible
    STATUS    mandatory
    DESCRIPTION
        " An entry for every common port group.
        "
    INDEX    { commonChanNum }
    ::= { commonChanTable 1 }

CommonChanTableEntry ::=
    SEQUENCE {
        commonChanNum     
           INTEGER,
		commonConnType
			INTEGER,
   		commonChanStatus
   	        INTEGER,
		commonAlarmState
			INTEGER,
		commonChanPortNum
			INTEGER,
		commonChanServiceType
			INTEGER,
		commonChanIngrXmtState
			INTEGER,
		commonChanIngrRcvState
			INTEGER,
		commonChanEgrXmtState
			INTEGER,
		commonChanEgrRcvState
			INTEGER,
		commonConnParm1
			DisplayString,
		commonConnParm2
			DisplayString
    }

commonChanNum    OBJECT-TYPE
    SYNTAX    INTEGER (1..8) 
    ACCESS    read-only
    STATUS    mandatory
    DESCRIPTION
        "This is the index to the channel number.
        "
    ::= { commonChanTableEntry 1}

commonConnType    OBJECT-TYPE
    SYNTAX    INTEGER {
			vpc(1),
			vcc(2)
			}
    ACCESS    read-only
    STATUS    mandatory
    DESCRIPTION
      "This specifies the connection type
          1 ==> Virtual Path Connection
          2 ==> Virtual Channel Connection
      "
    ::= { commonChanTableEntry 2}

commonChanStatus  OBJECT-TYPE        
    SYNTAX    INTEGER {
        notconfigured (1),
        normal(2),
        alarm(3)
    }
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
        "This variable indicates the state of the VC (channel)(
        "
    ::= { commonChanTableEntry 3 }

commonAlarmState OBJECT-TYPE
    SYNTAX    INTEGER
    ACCESS    read-only
    STATUS    mandatory
    DESCRIPTION
        "This is the alarm state of the port.
        "
    ::= { commonChanTableEntry 4}

commonChanPortNum OBJECT-TYPE
    SYNTAX    INTEGER(1..8)
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
        "This variable indicates the port number associated with the
         channel
        "
    ::= { commonChanTableEntry 5 }

commonChanServiceType OBJECT-TYPE
    SYNTAX  INTEGER {
		cbr(1),
		vbr(2),
		abr(3)
    }
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
      "This specifies the service type
          1 ==> Constant Bit Rate
          2 ==> Variable Bit Rate
          3 ==> Associated Bit Rate
      "
    ::= { commonChanTableEntry 6 }

commonChanIngrXmtState  OBJECT-TYPE
    SYNTAX INTEGER {
        other(1),
        normal(2),
        receivingAis (3),
        receivingFerf (4)
    }
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
		"This variable indicates the transmit state of the VC (channel)
		 on the CellBus side (Ingress)
        "
        ::= { commonChanTableEntry 7 }
 
commonChanIngrRcvState  OBJECT-TYPE
    SYNTAX INTEGER {
        other(1),
        normal(2),
        receivingAis (3),
        receivingFerf (4),
		alarm(5)
    }
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
		"This variable indicates the status of port receive (Ingress)
        "
        ::= { commonChanTableEntry 8 }
 
commonChanEgrXmtState OBJECT-TYPE
    SYNTAX INTEGER {
        other(1),
        normal(2),
        sendingAis (3),
        sendingFerf (4)
        }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "indicates the status of port transmit(Egress)
        "
        ::= { commonChanTableEntry  9 }
 
commonChanEgrRcvState OBJECT-TYPE
    SYNTAX INTEGER {
        other(1),
        normal(2),
        sendingAis (3),
        sendingFerf (4),
		alarm(5)
        }
    ACCESS read-only
    STATUS mandatory
    DESCRIPTION
        "Indicates the receiving state of the VC (channel) on the Cellbus
         side (Egress)
        "
        ::= { commonChanTableEntry  10 }
 
commonConnParm1 OBJECT-TYPE
    SYNTAX  DisplayString
    ACCESS read-only
        STATUS  mandatory
        DESCRIPTION
        "Connection paramter 1
        "
        ::= { commonChanTableEntry 11 }

commonConnParm2 OBJECT-TYPE
    SYNTAX  DisplayString
    ACCESS read-only
        STATUS  mandatory
        DESCRIPTION
        "Connection paramter 2
        "
        ::= { commonChanTableEntry 12 }

-- --------------------------------------------------------------
-- End of commonChanTableEntry


-- ------------------------------------------------------------------
--
-- BASIS project  CARD SPECIFIC MIB
-- 
-- author: anandar 01.31.1996
--
-- ------------------------------------------------------------------



aimnmDsx3CntrsGrp             OBJECT IDENTIFIER ::= { cardSpecific 9 }
 


-- ------------------------------------------------------------------
--
-- Group "aimnmDsx3CntrsGrp"
-- This group contains information related to dsx3 counters
--
-- ------------------------------------------------------------------

aimnmDsx3PortCntrsGrpTable OBJECT-TYPE
    SYNTAX SEQUENCE OF AimnmDsx3PortCntrsEntry
    ACCESS not-accessible
    STATUS mandatory
    DESCRIPTION
        "The dsx3 port counters table is for the DS3 port in AIMNM.
		 At present there is only one entry (corresponding to the
		 single DS3 port available). This structure has been made a
		 table for flexibility (although there is only one entry in
		 the table at present)
		"
    ::= { aimnmDsx3CntrsGrp 1 }

aimnmDsx3PortCntrsEntry	OBJECT-TYPE
	SYNTAX	AimnmDsx3PortCntrsEntry
	ACCESS	not-accessible
	STATUS  mandatory
	DESCRIPTION
		"An entry for each T3 port (total of only one entry at present)
		"
	INDEX {aimnmDsx3PortIndex}
	::= { aimnmDsx3PortCntrsGrpTable 1 }

AimnmDsx3PortCntrsEntry ::=
	SEQUENCE {
		aimnmDsx3PortIndex
			INTEGER,
		aimnmDsx3PortRcvCells
			Counter,
		aimnmDsx3PortXmtCells
			Counter,
		aimnmPortRcvInvCells
			Counter,
		aimnmPortCntrClrButton
			INTEGER
		}

aimnmDsx3PortIndex OBJECT-TYPE
	SYNTAX	INTEGER (1..1)
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Index to the dsx3 port number
		"
	::= { aimnmDsx3PortCntrsEntry 1}

aimnmDsx3PortRcvCells OBJECT-TYPE
	SYNTAX	Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of cells received on the DS3 port
		"
	::= { aimnmDsx3PortCntrsEntry 2}

aimnmDsx3PortXmtCells OBJECT-TYPE
	SYNTAX	Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of cells transmitted on the DS3 port
		"
	::= { aimnmDsx3PortCntrsEntry 3}

aimnmPortRcvInvCells OBJECT-TYPE
	SYNTAX	Counter
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"Number of invalid cells received on the DS3 port
		"
	::= { aimnmDsx3PortCntrsEntry 4}

aimnmPortCntrClrButton OBJECT-TYPE
	SYNTAX	INTEGER {
		noaction (1),
		clear (2)
	}
	ACCESS	write-only
	STATUS	mandatory
	DESCRIPTION
		"This variable is used to clear all the counters
		 maintained by the card for this DS3 port
		"
	::= { aimnmDsx3PortCntrsEntry 5}


-- ------------------------------------------------------------------
--
-- BASIS project  CARD SPECIFIC MIB
-- 
-- author: anandar 01.31.1996
--
-- ------------------------------------------------------------------



aimnmClkCfgGrp             OBJECT IDENTIFIER ::= { cardSpecific 8 }
 


-- ------------------------------------------------------------------
--
-- Group "aimnmClkCfgGrp"
-- This group contains information which is specific to the AIMNM clock
-- configuration.
--
-- ------------------------------------------------------------------

primaryClockSource OBJECT-TYPE
    SYNTAX INTEGER {
		liu-rclk0	(1),
		liu-rclk1	(2),
		liu-rclk2	(3),
		liu-rclk3	(4),
		liu-rclk4	(5),
		liu-rclk5	(6),
		liu-rclk6	(7),
		liu-rclk7	(8),
		dsx3	    (9),
		bp8clk		(10)
	}
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "Primary reference for the clock source. Each of these codes are
		 to be interpreted as follows:
			liu-rclk0: Recovered clock from physical line 0
			liu-rclk1: Recovered clock from physical line 1
			liu-rclk2: Recovered clock from physical line 2
			liu-rclk3: Recovered clock from physical line 3
			liu-rclk4: Recovered clock from physical line 4
			liu-rclk5: Recovered clock from physical line 5
			liu-rclk6: Recovered clock from physical line 6
			liu-rclk7: Recovered clock from physical line 7
			dsx3: Recovered clock from the T3/E3 line
			bp8clk: Back-plane 8 KHz clock
        "
    ::= { aimnmClkCfgGrp 1 }

secondaryClockSource OBJECT-TYPE
    SYNTAX INTEGER {
		liu-rclk0	(1),
		liu-rclk1	(2),
		liu-rclk2	(3),
		liu-rclk3	(4),
		liu-rclk4	(5),
		liu-rclk5	(6),
		liu-rclk6	(7),
		liu-rclk7	(8),
		dsx3	    (9),
		bp8clk		(10),
		none		(11)
	}
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "Secondary reference for the clock source. Each of these codes are
		 to be interpreted as follows:
			liu-rclk0: Recovered clock from physical line 0
			liu-rclk1: Recovered clock from physical line 1
			liu-rclk2: Recovered clock from physical line 2
			liu-rclk3: Recovered clock from physical line 3
			liu-rclk4: Recovered clock from physical line 4
			liu-rclk5: Recovered clock from physical line 5
			liu-rclk6: Recovered clock from physical line 6
			liu-rclk7: Recovered clock from physical line 7
			dsx3: Recovered clock from the T3/E3 line
			bp8clk: Back-plane 8 KHz clock
			none  : No Clock is present
        "
    ::= { aimnmClkCfgGrp 2 }

currentClockSource OBJECT-TYPE
    SYNTAX INTEGER {
       primary     (1),
       secondary   (2),
	   internal    (3)
    }
    ACCESS read-write
    STATUS mandatory
    DESCRIPTION
        "This object holds the current source for the clock
        "
    DEFVAL { primary }
    ::= { aimnmClkCfgGrp 3 }

--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






-- dsx1Aimux			OBJECT IDENTIFIER ::= { dsx1 4 }
dsx1AimuxCntGrp	OBJECT IDENTIFIER ::= { dsx1Aimux 3 }

-- ------------------------------------------------------------------------
-- ds1AimuxCntGrp group
--
-- This group contains ds1 line configuration table
-- ------------------------------------------------------------------------

dsx1AimuxCntGrpTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF Dsx1AimuxCntGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The DS1 AIMUX counters table.
		"
	::= { dsx1AimuxCntGrp 1 }

dsx1AimuxCntGrpEntry OBJECT-TYPE
	SYNTAX	Dsx1AimuxCntGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"An entry in the dsx1 AIMUX counters table.
		"
        INDEX	{ aimuxGrpNum, dsx1CntLineNum }

	::= { dsx1AimuxCntGrpTable 1 }

Dsx1AimuxCntGrpEntry ::=
	SEQUENCE {
		aimuxGrpNum
			INTEGER,
		dsx1CntLineNum
			INTEGER,
		acpCellsReceived
			Counter,
		acpErrCellsReceived
			Counter,
		portChgFromLDS
			Counter,
		physPortCntClrButton
			INTEGER
    }

aimuxGrpNum OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS	mandatory
	DESCRIPTION
		"Index to the AIMUX group number
		"
	::= { dsx1AimuxCntGrpEntry 1 }

dsx1CntLineNum		OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Physical line number
		"
	::= { dsx1AimuxCntGrpEntry 2 }

acpCellsReceived OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Number of ACP cells received on the physical line
		"
	::= { dsx1AimuxCntGrpEntry 4 }
	
acpErrCellsReceived OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Number of ACP errored cells (i.e. cells with an ACP cell header but
		 CRC-10 errors) received on the physical line.
		"
	::= { dsx1AimuxCntGrpEntry 6 }
	
portChgFromLDS	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Number of times a physical link went out of Link Delay Sync wrt
		 the other links in the AIMUX group
		"
	::= { dsx1AimuxCntGrpEntry 7 }
	
physPortCntClrButton	OBJECT-TYPE
	SYNTAX	INTEGER {
		noAction (1),
		resetCounters (2)
	}
	ACCESS	write-only
	STATUS	mandatory
	DESCRIPTION
		"Writing a value of 2 resets all the counters for the particular
		 link
		"
	::= { dsx1AimuxCntGrpEntry 8 }
	
--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






-- dsx1Aimux			OBJECT IDENTIFIER ::= { dsx1 4 }
dsx1AimuxAlmGrp		OBJECT IDENTIFIER ::= { dsx1Aimux 2 }

-- ------------------------------------------------------------------------
-- ds1AimuxAlmGrp group
--
-- This group contains ds1 line configuration table
-- ------------------------------------------------------------------------

dsx1AimuxAlmGrpTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF Dsx1AimuxAlmGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The AIMUX Alarm table.
		"
	::= { dsx1AimuxAlmGrp 1 }

dsx1AimuxAlmGrpEntry OBJECT-TYPE
	SYNTAX	Dsx1AimuxAlmGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"An entry in the AIMUX alarms table.
		"
        INDEX	{ almAimuxGrpNum, almlineNum }

	::= { dsx1AimuxAlmGrpTable 1 }

Dsx1AimuxAlmGrpEntry ::=
	SEQUENCE {
		almAimuxGrpNum
			INTEGER,
		almlineNum
			INTEGER,
		lineAimuxAlarmState
			INTEGER,
		ldsErr15minBucket
			INTEGER,
		ldsErr24hrBucket
			INTEGER,
		configChanges15minBucket
			INTEGER,
		configChanges24hrBucket
			INTEGER,
		aimuxLineAlmClrButton
			INTEGER
    }

almAimuxGrpNum OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS	mandatory
	DESCRIPTION
		"Index to the AIMUX group number
		"
	::= { dsx1AimuxAlmGrpEntry 1 }

almlineNum OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS	mandatory
	DESCRIPTION
		"The physical line number (optional secondary index)
		"
	::= { dsx1AimuxAlmGrpEntry 2 }

lineAimuxAlarmState OBJECT-TYPE
	SYNTAX	INTEGER (1..65535)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The current alarm state of a physical link.
		 Bit 0 set indicates an LCP cell error
		 Bit 1 set indicates that the physical link is not in Link Delay Sync
		"
	::= { dsx1AimuxAlmGrpEntry 3 }

ldsErr15minBucket OBJECT-TYPE
	SYNTAX  INTEGER(0..'FFFFFFFF'h)
	ACCESS  read-only
	STATUS	mandatory
	DESCRIPTION
		"The counter associated with the number of times a
		 specific physical link went out of Link Delay Sync in a
		 15-minute interval
		"
	::= { dsx1AimuxAlmGrpEntry 4 }

ldsErr24hrBucket OBJECT-TYPE
	SYNTAX  INTEGER(0..'FFFFFFFF'h)
	ACCESS  read-only
	STATUS	mandatory
	DESCRIPTION
		"The counter associated with the number of times a
		 specific physical link went out of Link Delay Sync in a
		 24-hour interval
		"
	::= { dsx1AimuxAlmGrpEntry 5 }

configChanges15minBucket OBJECT-TYPE
	SYNTAX  INTEGER(0..'FFFFFFFF'h)
	ACCESS  read-only
	STATUS	mandatory
	DESCRIPTION
		"The counter associated with the number of times the
		 bandwidth of an AIMUX group changed in a 15-minute interval
		"
	::= { dsx1AimuxAlmGrpEntry 6 }

configChanges24hrBucket OBJECT-TYPE
	SYNTAX  INTEGER(0..'FFFFFFFF'h)
	ACCESS  read-only
	STATUS	mandatory
	DESCRIPTION
		"The counter associated with the number of times the
		 bandwidth of an AIMUX group changed in a 24-hour interval
		"
	::= { dsx1AimuxAlmGrpEntry 7 }

aimuxLineAlmClrButton OBJECT-TYPE
	SYNTAX  INTEGER {
	   noaction (1),
	   clear (2)
	}
	ACCESS  write-only
	STATUS	mandatory
	DESCRIPTION
		"This variable is used to clear all the alarms
		 for the line.
		1 = No action
		2 = Clear alarm
		"
	::= { dsx1AimuxAlmGrpEntry 8 }

--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






dsx1Aimux			OBJECT IDENTIFIER ::= { dsx1 4 }
dsx1AimuxAlmCnfGrp	OBJECT IDENTIFIER ::= { dsx1Aimux 1 }

-- ------------------------------------------------------------------------
-- ds1AimuxAlmCnfGrp group
--
-- This group contains ds1 line configuration table
-- ------------------------------------------------------------------------

dsx1AimuxAlmCnfGrpTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF Dsx1AimuxAlmCnfGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The AIMUX Alarm Configuration table. The table size is
		 given by the value of AimAlmNumofValidEntries
		"
	::= { dsx1AimuxAlmCnfGrp 1 }

dsx1AimuxAlmCnfGrpEntry OBJECT-TYPE
	SYNTAX	Dsx1AimuxAlmCnfGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"An entry in the AIMUX alarms Configuration table.
		"
        INDEX	{ almCnfAimuxGrpNum }

	::= { dsx1AimuxAlmCnfGrpTable 1 }

Dsx1AimuxAlmCnfGrpEntry ::=
	SEQUENCE {
		almCnfAimuxGrpNum
			INTEGER,
		ldsErr15minThreshold
			INTEGER,
		ldsErr24hrThreshold
			INTEGER,
		configChanges15minThreshold
			INTEGER,
		configChanges24hrThreshold
			INTEGER
    }

almCnfAimuxGrpNum OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-only
	STATUS	mandatory
	DESCRIPTION
		"Index to the AIMUX group number
		"
	::= { dsx1AimuxAlmCnfGrpEntry 1 }

ldsErr15minThreshold OBJECT-TYPE
	SYNTAX  INTEGER(0..'FFFFFFFF'h)
	ACCESS  read-write
	STATUS	mandatory
	DESCRIPTION
		"The value set in this object determines the value which when
		 exceeded in a 15-minute window causes a statistical alarm to
		 be declared. This field is the bound on the number of times a
		 specific physical link can go out of Link Delay Sync in a
		 15-minute interval
		"
	::= { dsx1AimuxAlmCnfGrpEntry 2 }

ldsErr24hrThreshold OBJECT-TYPE
	SYNTAX  INTEGER(0..'FFFFFFFF'h)
	ACCESS  read-write
	STATUS	mandatory
	DESCRIPTION
		"The value set in this object determines the value which when
		 exceeded in a 24-hour window causes a statistical alarm to
		 be declared. This field is the bound on the number of times a
		 specific physical link can go out of Link Delay Sync in a 24-
		 minute interval
		"
	::= { dsx1AimuxAlmCnfGrpEntry 3 }

configChanges15minThreshold OBJECT-TYPE
	SYNTAX  INTEGER(0..'FFFFFFFF'h)
	ACCESS  read-write
	STATUS	mandatory
	DESCRIPTION
		"The value set in this object determines the value which when
		 exceeded in a 15-minute window causes a statistical alarm to
		 be declared. This field is the bound on the number of times
		 the configuration of an AIMUX group can change in a 15-minute
		 interval
		"
	::= { dsx1AimuxAlmCnfGrpEntry 4 }

configChanges24hrThreshold OBJECT-TYPE
	SYNTAX  INTEGER(0..'FFFFFFFF'h)
	ACCESS  read-write
	STATUS	mandatory
	DESCRIPTION
		"The value set in this object determines the value which when
		 exceeded in a 24-hour window causes a statistical alarm to
		 be declared. This field is the bound on the number of times
		 the configuration of an AIMUX group can change in a 24-hour
		 interval
		"
	::= { dsx1AimuxAlmCnfGrpEntry 5 }



-- atm                  OBJECT IDENTIFIER ::= { basisServices 2 }
-- ausmPort             OBJECT IDENTIFIER ::= { atm 1 }
-- ausmPortCnf           OBJECT IDENTIFIER ::= { ausmPort 1 }
ausmPortCnfPortAimuxGrp OBJECT IDENTIFIER ::= { ausmPortCnf 4 }

-- --------------------------------------------------------------------
--
--
--        AIMSM PORT CONFIG Group
--
--
-- --------------------------------------------------------------------


ausmPortCnfPortAimuxGrpTable    OBJECT-TYPE
    SYNTAX    SEQUENCE OF AusmPortCnfPortAimuxGrpEntry
    ACCESS    not-accessible
    STATUS    mandatory
    DESCRIPTION
        "The config table is for the AIM port (AIM group).
         There are 8 entries in all.
        "
    ::= { ausmPortCnfPortAimuxGrp 1 }


ausmPortCnfPortAimuxGrpEntry    OBJECT-TYPE
    SYNTAX    AusmPortCnfPortAimuxGrpEntry
    ACCESS    not-accessible
    STATUS    mandatory
    DESCRIPTION
        " An entry for every AIMUX port (total of 8 entries)
        "
    INDEX    { aimuxPortNum }
    ::= { ausmPortCnfPortAimuxGrpTable 1 }

AusmPortCnfPortAimuxGrpEntry ::=
    SEQUENCE {
        aimuxPortNum     
            INTEGER,
        aimuxPortEnable
            INTEGER,
		aimuxPortSpeed
			INTEGER,
		numLinksInAimuxGrp
			INTEGER,
		listOfLinksInAimuxGrp
			DisplayString,
		lcpCellsPeriodicity
			INTEGER,
		lcpDelayTolerance
			INTEGER,
		readPtrWrPtrDiff
			INTEGER,
		numRedundantLinks
			INTEGER,
		maxTolerableDiffDelay
			INTEGER
    }

aimuxPortNum    OBJECT-TYPE
    SYNTAX    INTEGER (1..8) 
    ACCESS    read-write
    STATUS    mandatory
    DESCRIPTION
        "This is the AIMUX port number.
        "
    ::= { ausmPortCnfPortAimuxGrpEntry 1}

aimuxPortEnable  OBJECT-TYPE        
    SYNTAX    INTEGER {
        disable(1),
        enable(2),
		addlinks(3),
		dellinks(4),
		modify(5)
        }
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
        "This variable enables, disables or modifies the configuration of
		 the port
        1 - disable  (Disables the entire AIMUX group)
        2 - enable   (Enables the AIMUX group)
		3 - addlinks (Adds links to an existing AIMUX group)
		4 - dellinks (Deletes links from an existing AIMUX group)
		5 - modify   (Modifies parameters in an existing AIMUX group)
        "
    ::= { ausmPortCnfPortAimuxGrpEntry 2 }

aimuxPortSpeed  OBJECT-TYPE
    SYNTAX  INTEGER (0..37360)
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
    "The speed of the port in cells per second. This depends
	 on the nuber of links in the AIMUX group
    "
    ::= { ausmPortCnfPortAimuxGrpEntry 3 }

numLinksInAimuxGrp OBJECT-TYPE
    SYNTAX  INTEGER (1..8)
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
    "The number of links configured in the AIMUX group
    "
    ::= { ausmPortCnfPortAimuxGrpEntry 4 }

listOfLinksInAimuxGrp OBJECT-TYPE
    SYNTAX  DisplayString (SIZE (1..15))
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
    "The list of links in the AIMUX group delimited by dots
    "
    ::= { ausmPortCnfPortAimuxGrpEntry 5 }

lcpCellsPeriodicity	OBJECT-TYPE
    SYNTAX  INTEGER (32..128)
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
    "Period at wich LCP cells of the AIMUX protocol can be transmitted.
	 A value of 32 indicates that after 32 cells, one LCP cell is
	 transmitted on that link of the AIMUX group.
    "
    ::= { ausmPortCnfPortAimuxGrpEntry 6 }

lcpDelayTolerance	OBJECT-TYPE
    SYNTAX  INTEGER (1..1)
    ACCESS read-only
    STATUS  mandatory
    DESCRIPTION
    "The number of AIMUX frames for which an LCP cell on any link can
	 be missed before the AIMUX state machine should remove the link
	 from the AIMUX group. At present, this is hard-coded to 1 and is
	 not programmable.
    "
    ::= { ausmPortCnfPortAimuxGrpEntry 7 }

readPtrWrPtrDiff	OBJECT-TYPE
    SYNTAX  INTEGER (4..12)
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
    "The difference between the read and write pointer of a link in
	 the common cell buffer. A lower value reduces the latency in the
	 common cell buffer but also increases the probability of an AIMUX
	 group being stalled for a cell-time due to a slower link in the
	 AIMUX group
    "
    ::= { ausmPortCnfPortAimuxGrpEntry 8 }

numRedundantLinks	OBJECT-TYPE
    SYNTAX  INTEGER (0..8)
    ACCESS read-write
    STATUS  mandatory
    DESCRIPTION
    "The number of redundant (spare) links in the AIMUX group. This
	 indicates the number of links the system can lose from this AIMUX group
	 without bringing it down. The linkLossSeverity feature overrides this
	 feature. By default, the system can tolerate all link(s) to go down.
    "
    ::= { ausmPortCnfPortAimuxGrpEntry 9 }

maxTolerableDiffDelay	OBJECT-TYPE
	SYNTAX	INTEGER (1..28)
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
	"This indicates the maximum tolerable differential delay in milliseconds
	 between the various links in the AIMUX group. The default value is
	 28 milliseconds
	"
	::= { ausmPortCnfPortAimuxGrpEntry 10 }


-- Scalars in the ausmPortCnfPortAimuxGrp

nextPortNumAvailable	OBJECT-TYPE
	SYNTAX	INTEGER(1..8)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
	"Indicates the next logical port number available
	"
	::= { ausmPortCnfPortAimuxGrp 2 }


-- --------------------------------------------------------------
-- End of ausmPortCnfPortAimuxGrp


-- atm             OBJECT IDENTIFIER ::= { basisServices 2 }
-- ausmPort         OBJECT IDENTIFIER ::= { atm 1 }
ausmPortStateAimuxGrp OBJECT IDENTIFIER ::= { ausmPort 4 }

-- --------------------------------------------------------------------
--
--
--        AIM Group STATE Group
--
--
-- --------------------------------------------------------------------


ausmPortStateAimuxGrpTable    OBJECT-TYPE
    SYNTAX    SEQUENCE OF AusmPortStateAimuxGrpEntry
    ACCESS    not-accessible
    STATUS    mandatory
    DESCRIPTION
        "The state table for the AIM port interface:
         there are 8 entries for the 8 (maximum possible) AIM groups
        "
    ::= { ausmPortStateAimuxGrp 1 }


ausmPortStateAimuxGrpEntry    OBJECT-TYPE
    SYNTAX    AusmPortStateAimuxGrpEntry
    ACCESS    not-accessible
    STATUS    mandatory
    DESCRIPTION
        " An entry for every AIM group
        "
    INDEX    { aimuxStatePortNum }
    ::= { ausmPortStateAimuxGrpTable 1 }

AusmPortStateAimuxGrpEntry ::=
    SEQUENCE {
        aimuxStatePortNum     
            INTEGER,
		aimuxPortState
			INTEGER,
		numLinksPresentInAimuxGroup
			INTEGER,
		listLinksPresentInAimuxGroup
			DisplayString,
		remoteAimuxId
			INTEGER,
		locAimuxId
			INTEGER,
		aimuxArbitrationWinner
			INTEGER,
		aimuxObsDiffDelay
            INTEGER
    }

aimuxStatePortNum     OBJECT-TYPE
    SYNTAX    INTEGER (1..8) 
    ACCESS    read-only
    STATUS    mandatory
    DESCRIPTION
        "This is the AIMUX group number
        "
    ::= { ausmPortStateAimuxGrpEntry 1}

aimuxPortState	OBJECT-TYPE
	SYNTAX	INTEGER {
		unconfigured (1),
		active (2),
		bandwidthChanged (3),
		failedDueToAcpTimeout (4),
		failedDueToMajorAlmonAimuxGrp (5),
		failedDueToAimuxSigFailure (6),
		failedDueToBadDiffDelay (7),
		failedDueToArbConflict (8),
		receivingLoamAis(9),
		receivingLoamRdi(10)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Indicates the state of the AIMUX port. The following error
		 conditions are currently reported:
		 1 - Unconfigured state
		 2 - Active state
		 3 - Bandwidth changed due to addition/deletion of links. The
		     addition/deletion can be triggered by either end
		 4 - FailedDueToACPTimeout (indicates that a timeout occurred due
			 to non-arrival of an ACP cell)
		 5 - FailuedDueToMajorAlarmOnAIMUXGroup (issued when the bandwidth
			 of an AIMUX group falls below a certain threshold due to loss
			 of links from an AIMUX group)
		 6 - FailedDueToAimuxSigFailure (this indicates configuration
			 mismatch or non-arrival of LCP cells during set up of
			 an AIMUX group)
		 7 - FailedDueToBadDiffDelay (indicates that the differential
			 delay exceeded the maximum threshold)
		 8 - FailedDueToArbConflict (indicates that the AIMUX-ID could
			 not be resolved between the 2 ends of the AIMUX pipe)
		"
    ::= { ausmPortStateAimuxGrpEntry 2}

numLinksPresentInAimuxGroup	OBJECT-TYPE
	SYNTAX	INTEGER(0..8)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Indicates the number of links that are currently present in
		 the AIMUX group.
		"
    ::= { ausmPortStateAimuxGrpEntry 3}

listLinksPresentInAimuxGroup	OBJECT-TYPE
	SYNTAX	DisplayString (SIZE (1..15))
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Indicates the list of links currently present in the AIMUX
		 group. Different links in the AIMUX group are delimited by
		 dots. The position of each link in the displayed string indicates
		 the relative order of the links in the round-robin (multiplexing
		 order)
		"
    ::= { ausmPortStateAimuxGrpEntry 4}
	

remoteAimuxId	OBJECT-TYPE
	SYNTAX	INTEGER(1..255)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Indicates the AIMUX-ID in use at the remote end when sending
		 LCP/ACP cells.
		"
    ::= { ausmPortStateAimuxGrpEntry 5}

locAimuxId	OBJECT-TYPE
	SYNTAX	INTEGER(1..255)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Indicates the AIMUX-ID in use at the local end when sending
		 LCP/ACP cells.
		"
    ::= { ausmPortStateAimuxGrpEntry 6}

aimuxArbitrationWinner	OBJECT-TYPE
	SYNTAX	INTEGER	{
		isUnknown (1),
		isWinner (2),
		isLoser (3)
	}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Result of arbitration between the two ends of the AIMUX pipe.
		"
    ::= { ausmPortStateAimuxGrpEntry 7}

aimuxObsDiffDelay	OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The observed differential delay in milliseconds between the
		 different physical links in the AIMUX group
		"
    ::= { ausmPortStateAimuxGrpEntry 8}


-- ------------------------------------------------------------------
-- End of ausmPortStateGrp

-- atm               OBJECT IDENTIFIER ::= { basisServices 2 }
-- ausmPort           OBJECT IDENTIFIER ::= { atm 1 }
-- ausmPortCnt        OBJECT IDENTIFIER ::= { ausmPort 3 }
ausmPortCntPortAimuxGrp OBJECT IDENTIFIER ::= { ausmPortCnt 3}

-- --------------------------------------------------------------------
--
--
--        AIMSM PER AIM GROUP, AIMUX PORT COUNTER Group
--
--
-- --------------------------------------------------------------------


ausmPortCntPortAimuxGrpTable    OBJECT-TYPE
    SYNTAX    SEQUENCE OF AusmGroupCntPortAimuxGrpEntry
    ACCESS    not-accessible
    STATUS    mandatory
    DESCRIPTION
        "The counter table is for the AIM groups (8 possible entries)
        "
    ::= { ausmPortCntPortAimuxGrp 1 }


ausmPortCntPortAimuxGrpEntry    OBJECT-TYPE
    SYNTAX    AusmGroupCntPortAimuxGrpEntry
    ACCESS    not-accessible
    STATUS    mandatory
    DESCRIPTION
        " An entry for the AIMUX group
        "
    INDEX    { aimuxCntPortNum }
    ::= { ausmPortCntPortAimuxGrpTable 1 }

AusmGroupCntPortAimuxGrpEntry ::=
    SEQUENCE {
        aimuxCntPortNum
            INTEGER,
		rcvAcpCells
			Counter,
		rcvAcpErrCells
			Counter,
		xmtAcpCells
			Counter,
		xmtAcpCellsMissed
			Counter,
		aimGrpRcvHecErrCount
			Counter,
		aimGrpRcvHecErrSecCount
			Counter,
		aimGrpRcvHecErrSESecCount
			Counter,
        aimuxCntClrButton
            INTEGER
    }

aimuxCntPortNum    OBJECT-TYPE
    SYNTAX  INTEGER (1..8) 
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This is the AIMUX port number.
        "
    ::= { ausmPortCntPortAimuxGrpEntry 1}

rcvAcpCells	OBJECT-TYPE
	SYNTAX	Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This is the number of ACP cells received.
        "
    ::= { ausmPortCntPortAimuxGrpEntry 2}

rcvAcpErrCells	OBJECT-TYPE
	SYNTAX	Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This is the number of ACP cells received in error on this AIMUX
		 group.
        "
    ::= { ausmPortCntPortAimuxGrpEntry 3}

xmtAcpCells	OBJECT-TYPE
	SYNTAX	Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This is the number of ACP cells transmitted on this AIMUX group.
        "
    ::= { ausmPortCntPortAimuxGrpEntry 4}

xmtAcpCellsMissed	OBJECT-TYPE
	SYNTAX	Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This is the number of ACP cells that could not be transmitted on
		 this AIMUX group due to lack of resources (buffers).
        "
    ::= { ausmPortCntPortAimuxGrpEntry 5}

aimGrpRcvHecErrCount	OBJECT-TYPE
	SYNTAX	Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This is the number of HEC errored cells received on all the links
		 currently in the AIMUX group
        "
    ::= { ausmPortCntPortAimuxGrpEntry 6}

aimGrpRcvHecErrSecCount	OBJECT-TYPE
	SYNTAX	Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This is the number of HEC errored seconds for the AIMUX group--
		 that is the number of seconds in which at least one link in the
		 AIMUX group experienced a HEC error
        "
    ::= { ausmPortCntPortAimuxGrpEntry 7}

aimGrpRcvHecErrSESecCount	OBJECT-TYPE
	SYNTAX	Counter
    ACCESS  read-only
    STATUS  mandatory
    DESCRIPTION
        "This is the number of severely errored seconds received on all the
		 links currently in the AIMUX group
        "
    ::= { ausmPortCntPortAimuxGrpEntry 8}

-- Clear Button
aimuxCntClrButton    OBJECT-TYPE
    SYNTAX  INTEGER {
    noAction (1),
    resetCounters (2)
    }
    ACCESS  read-write
    STATUS  mandatory
    DESCRIPTION
        "writing a value of 2 resets all the counters
        "
    ::= { ausmPortCntPortAimuxGrpEntry 9 }
 


-- --------------------------------------------------------------------
-- End of ausmPortCntPortAimuxGrp
--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
-- Initial revision 
-- 9/12/95, updated Ravi Bhat
--





--circuitEmulation        OBJECT IDENTIFIER ::= { basisServices 3 }
--cesmChan                OBJECT IDENTIFIER ::= { circuitEmulation 2 }  
cesmChanCnfGrp          OBJECT IDENTIFIER ::= { cesmChan 1 }


-- ------------------------------------------------------------------------
--
-- cesmChannelConfig group
-- Channel configurable parameters  
--
-- ------------------------------------------------------------------------


cesmChanCnfGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF CesmChanCnfGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for logical channel interface
		 there are 4 entries for 4 DS1s
		"
	::= { cesmChanCnfGrp 1 }

cesmChanCnfGrpEntry	OBJECT-TYPE
	SYNTAX	CesmChanCnfGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical channel
		"
	INDEX	{ cesCnfChanNum }
	::= { cesmChanCnfGrpTable 1 }

CesmChanCnfGrpEntry ::=
	SEQUENCE {
	   	cesCnfChanNum				INTEGER,
		cesChanRowStatus       		INTEGER, 
		cesMapPortNum				INTEGER,
		cesMapVpi      				INTEGER,
		cesMapVci               	INTEGER, 
		cesCBRService				INTEGER,
		cesCBRClockMode				INTEGER,
		cesCas        	      		INTEGER,
		cesPartialFill	      		INTEGER,
		cesBufMaxSize     			INTEGER,
		cesCDVRxT        			INTEGER,
		cesCellLossIntegrationPeriod	INTEGER,
		cesChanLocRmtLpbkState		INTEGER,
		cesChanTestType				INTEGER,
		cesChanTestState			INTEGER,
		cesChanRTDResult			INTEGER
}


cesCnfChanNum OBJECT-TYPE
	SYNTAX	INTEGER (16..19)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the virtual connection 
		"
	::= { cesmChanCnfGrpEntry 1}

cesChanRowStatus  OBJECT-TYPE
	SYNTAX	INTEGER {
		add(1),
		del(2),
		mod(3)
		}
	ACCESS read-write
	STATUS  mandatory
	DESCRIPTION
	  "This indicates the channel status
     	  1 ==> ADD
      	  2 ==> DELETE
      	  3 ==> MODIFY
		"
   	::= { cesmChanCnfGrpEntry 2 }

cesMapPortNum	OBJECT-TYPE	
	SYNTAX	INTEGER (1..4)
	ACCESS read-only
	STATUS  mandatory
	DESCRIPTION
	  "This specifies the port number to which this channel is
	   associated.  Mappings are as -
	   Port 1 - channel 16, 2-17, 3-18, 4-19
	  "
   	::= { cesmChanCnfGrpEntry 3 }

cesMapVpi	OBJECT-TYPE
	SYNTAX	INTEGER (5..15)
	ACCESS read-only
	STATUS  mandatory
	DESCRIPTION
	  "This specifies Vpi for this port on CellBus, which is the
           slot number of the card 
	  "
   	::= { cesmChanCnfGrpEntry 4 }

cesMapVci OBJECT-TYPE
	SYNTAX	INTEGER (16..19)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"This specifies Vci for this port on CellBus which is
		 LCN for the port
		"
	::= { cesmChanCnfGrpEntry	5}

cesCBRService 	OBJECT-TYPE
	SYNTAX	INTEGER {
		unstructured (1),
		structured (2)
		} 
	
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"This specifies data type supported by the CBR service
		 Only Unstructured mode is supported in CESM-0
		"
	::= { cesmChanCnfGrpEntry	6}

cesCBRClockMode	OBJECT-TYPE
	SYNTAX	INTEGER {
		synchronous (1),
		srts (2),
		adaptive (3)
		} 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"This specifies clocking mode of the CBR service
		 Only synchronous mode is supported in CESM-0
		"
	::= { cesmChanCnfGrpEntry	7}

cesCas OBJECT-TYPE
	SYNTAX	INTEGER {
		basic (1),
		e1Cas (2),
		ds1SfCas (3),
		ds1EsfCas (4)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION		  
		"Specifies if CAS  bits are carried by the service
		 Applies to Structured service only 
		 Only basic mode is supported in CESM-0
		"
	::= { cesmChanCnfGrpEntry	8}

cesPartialFill	OBJECT-TYPE
	SYNTAX	INTEGER (0..47)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
       	"Specifies the number of user octets per cell, if partial
         cell fill is used. 0 means partial fill disabled.
		 Partial fill is not supported in CESM-0
		"
        ::= { cesmChanCnfGrpEntry 9}

cesBufMaxSize	OBJECT-TYPE
	SYNTAX	INTEGER (0..65535)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
        "Specifies the maximum size in octets of egress buffer
		 Should be at least 0.6*CDVRxT for a T1 line and 
		 0.7 * CDVRxT for a E1 line.  0 can be specified to internally
		 compute the value
		"
        ::= { cesmChanCnfGrpEntry 10}

cesCDVRxT	OBJECT-TYPE
	SYNTAX	INTEGER (1000..65535)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
        "Specifies maximum cell arrival jitter that the reassembly 
		 process will tolerate.
		"
        ::= { cesmChanCnfGrpEntry 11}

cesCellLossIntegrationPeriod	OBJECT-TYPE
	SYNTAX	INTEGER (1000..65535)
	ACCESS read-write
        STATUS  mandatory
        DESCRIPTION
        "Specifies the cell loss integration period in milliseconds
		"
        ::= { cesmChanCnfGrpEntry 12}


cesChanLocRmtLpbkState	OBJECT-TYPE
    SYNTAX  INTEGER {
	enable(1), 
	disable(2) 
	}
	ACCESS read-write 
	STATUS  mandatory  
	DESCRIPTION    
		"Loopback on cellbus in egress direction.
		" 
        ::= { cesmChanCnfGrpEntry 13}
 
cesChanTestType 		OBJECT-TYPE  
	SYNTAX  INTEGER (1..2)  
	ACCESS read-write 
	STATUS  mandatory  
	DESCRIPTION    
		"This is the type of the test
		1 = Test Continuity
		2 = Test Delay
		" 
        ::= { cesmChanCnfGrpEntry 14}
 
cesChanTestState 		OBJECT-TYPE  
	SYNTAX  INTEGER (1..4)  
	ACCESS read-only 
	STATUS  mandatory  
	DESCRIPTION    
		"This shows the state of the test
		1 = Passed
		2 = Failed
		3 = In Progress 
		4 = Not In Progress
		" 
        ::= { cesmChanCnfGrpEntry 15}

cesChanRTDResult 		OBJECT-TYPE  
	SYNTAX  INTEGER (1..65535)  
	ACCESS read-only 
	STATUS  mandatory  
	DESCRIPTION    
		"This is round trip delay in milliseconds
		" 
        ::= { cesmChanCnfGrpEntry 16}


-- ------------------------------------------------------------------------
-- End of cesmChanCnf group definitions


--
-- ----------------------------------------------------------------------
-- BASIS Project MIB
-- 
--






--circuitEmulation        OBJECT IDENTIFIER ::= { basisServices 3 }
--cesmChan                OBJECT IDENTIFIER ::= { circuitEmulation 2 }
cesmChanCntGrp          OBJECT IDENTIFIER ::= { cesmChan 2 }


-- ------------------------------------------------------------------------
--
-- Group cesmChannelStatus
-- Contains status information for channels
--
-- ------------------------------------------------------------------------


-- ------------------------------------------------------------------------
--
-- cesmChannelCounters group
-- Channel OR VC COUNTERS 
--
-- ------------------------------------------------------------------------


cesmChanCntGrpTable	OBJECT-TYPE
	SYNTAX	SEQUENCE OF CesmChanCntGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"The config table is for logical channel interface
		 there are 4 entries for 4 DS1s
		"
	::= { cesmChanCntGrp 1 }


cesmChanCntGrpEntry	OBJECT-TYPE
	SYNTAX	CesmChanCntGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		" An entry for logical channel
		"
	INDEX	{ cesCntChanNum }
	::= { cesmChanCntGrpTable 1}

CesmChanCntGrpEntry ::=
	SEQUENCE {
		cesCntChanNum 	
			INTEGER,
		cesChanState
			INTEGER,
		cesXmtATMState
			INTEGER,
		cesRcvATMState
			INTEGER,
		cesCellLossStatus
			INTEGER,
		cesReassCells
			Counter,
		cesGenCells
			Counter,
		cesHdrErrors	
			Counter,
		cesPointerReframes
			Counter,
		cesLostCells
			Counter,
		cesBufUnderflows
			Counter,
		cesBufOverflows
			Counter,
		cesIngrDiscardedBytes
			Counter,
		cesUflowInsCells
			Counter,
		cesOflowDropBytes
			Counter,
		cesCellSeqMismatchCnt
			Counter,
-- Reset counters
		counterClrButton
			INTEGER
}

cesCntChanNum OBJECT-TYPE
	SYNTAX	INTEGER (16..19)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"Refers to the channel Number
		"
	::= { cesmChanCntGrpEntry 1}

cesChanState OBJECT-TYPE
	SYNTAX  INTEGER {
				notConfigured(1),
				okay(2),
				alarm(3)
				}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"
		"
	::= { cesmChanCntGrpEntry 2}


cesXmtATMState OBJECT-TYPE
	SYNTAX  INTEGER {
				other (1),
				normal (2),
				sendingAIS (3),
				sendingFERF (4)
				}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"
		  This variable indicates the transmit state of channel
		  on the ATM side.
		"
	::= { cesmChanCntGrpEntry 3}

cesRcvATMState OBJECT-TYPE
	SYNTAX  INTEGER {
				other (1),
				normal (2),
				receivingAIS (3),
				receivingFERF (4)
				}
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"
		  This variable indicates the receive state of channel
		  on the ATM side.
		"
	::= { cesmChanCntGrpEntry 4}
			
cesCellLossStatus	OBJECT-TYPE
	SYNTAX	INTEGER (1..2)
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The Cell Loss Status
		"
	::= { cesmChanCntGrpEntry	5 }

cesReassCells	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of cells played out to T1/E1 port
		"
	::= { cesmChanCntGrpEntry	6 }

cesGenCells		OBJECT-TYPE
	SYNTAX	Counter 
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of cells generated from T1/E1 port
		"
	::= { cesmChanCntGrpEntry	7 }


cesHdrErrors	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of AAL-1 header errors detected and possibly 
                 corrected
		"
	::= { cesmChanCntGrpEntry	8 }

cesPointerReframes	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of events of SDT pointers wrong arrival
		"
	::= { cesmChanCntGrpEntry	9 }

cesLostCells	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of cells lost in egress direction due to
		 AAL 1 header errors and missing cells.
		"
	::= { cesmChanCntGrpEntry	10 }

cesBufUnderflows	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of buffer underflows in Egress direction
		"
	::= { cesmChanCntGrpEntry	11 }

cesBufOverflows	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of buffer overflows in Egress direction
		"
	::= { cesmChanCntGrpEntry	12 }


cesIngrDiscardedBytes	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION		  
		"The number of bytes discarded due to shelf alarm in ingress 
                 direction from port data
		"
	::= { cesmChanCntGrpEntry	13 }

cesUflowInsCells	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The Number of All 1's cells inserted in case of Egress Buffer
		  Underflow
		 "
	::= { cesmChanCntGrpEntry	14 }

cesOflowDropBytes	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The Number of bytes discarded in Egress direction because of
		  Egress buffer overflow
		 "
	::= { cesmChanCntGrpEntry	15 }


cesCellSeqMismatchCnt	OBJECT-TYPE
	SYNTAX	Counter
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The Number of times SAR received a valid out of sequence AAL-1
		  cell from CellBus.
		 "
	::= { cesmChanCntGrpEntry	16 }


counterClrButton OBJECT-TYPE
               SYNTAX  INTEGER {
                        noAction (1),
                        resetCounters (2)
                        }
                ACCESS  read-write
                STATUS  mandatory
                DESCRIPTION
                        "writing a value of 2 resets all the counters
                        "
	::= { cesmChanCntGrpEntry	17 }
 

-- ------------------------------------------------------------------------
-- End of cesmChanCnt group definitions



-- -----------------------------------------------------------------
--
--
-- This file contains all the SNMP TRAPS AXIS GENERATES
--
--
--
--
-- -----------------------------------------------------------------


trapCoreCardSwitch      TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         shelfFunctionModuleState,
                         shelfFunctionModuleType
                        }
 
        DESCRIPTION
                "The standby cards have become active, due
                 to the failure of the active cards.  The
                 log in the card, shows the reason
                 the cards are ASC and BNM.
                "
        ::= 50000

-- TO ADD 1) FUNCTION_MODULE_RESET_REASON
--
shelRestartTrap    TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         functionModuleResetReason
                        }
        DESCRIPTION
                "Shelf restart with reset reason
                "
        ::= 50001

-- #define FUNCTION_MODULE_REMOVE_TRAP  BASIS_TRAPS+2
		 
functionModuleRemovedTrap    TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         shelfFunctionModuleState,
                         shelfFunctionModuleType
                        }
        DESCRIPTION
                "Indicates that a function module has been 
  		removed
                "
        ::= 50002

-- #define FUNCTION_MODULE_INSERT_TRAP  BASIS_TRAPS+3

functionModuleInsertedTrap    TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         shelfFunctionModuleState,
                         shelfFunctionModuleType
                        }
        DESCRIPTION
                "Indicates that a function module has been 
  		inserted
                "
        ::= 50003

-- #define FUNCTION_MODULE_SWITCH_TRAP  BASIS_TRAPS+4
		 
functionModuleSwitchoverTrap    TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         shelfFunctionModuleState,
                         shelfFunctionModuleType
                        }
        DESCRIPTION
                "Indicates that a function module has changed  
  		state from standby to active or vice versa
                "
        ::= 50004

-- #define FUNCTION_MODULE_ACTIVE_TRAP  BASIS_TRAPS+5

		 
functionModuleActiveTrap    TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         shelfFunctionModuleState,
                         shelfFunctionModuleType
                        }
        DESCRIPTION
                "Indicates that a function module is 
  		operational
                "
        ::= 50005

-- #define FUNCTION_MODULE_FAILED_TRAP  BASIS_TRAPS+6

functionModuleFailedTrap    TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         shelfFunctionModuleState,
                         shelfFunctionModuleType
                        }
        DESCRIPTION
                "Indicates that a function module is 
  		inoperational
                "
        ::= 50006

functionModuleMismatchTrap    TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         shelfFunctionModuleState,
                         shelfFunctionModuleType
                        }
        DESCRIPTION
                "Informational alarm generated due to
		a) different front card inserted
		b) same front card with a different feature
		list is inserted
                "
        ::= 50007

-- #define SELF_TEST_RESULT             BASIS_TRAPS+8
functionModuleSlefTestFailedTrap    TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         shelfFunctionModuleState,
                         shelfFunctionModuleType
                        }
        DESCRIPTION
                "Indicates that a function module self 
  		test failed. Not generated when self test passes
                "
        ::= 50008

-- #define FUNCTION_MODULE_STANDBY_TRAP BASIS_TRAPS+9 X

functionModuleStandbyTrap    TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         shelfFunctionModuleState,
                         shelfFunctionModuleType
                        }
        DESCRIPTION
                "Indicates that a function module is 
  		in standby state
                "
        ::= 50009
 

-- ------------------------------------------------------------------------------------------------------
--
--
--    BNM TRAPS
--
-- ------------------------------------------------------------------------------------------------------

bnmTemperatureNormalTrapnum	TRAP-TYPE
        	ENTERPRISE      basis
        	VARIABLES       {
 	        	         lastSequenceNumber,
        	                 shelfNodeName,
         	                 shelfNum,
         	                 shelfSlotNum,
          	                 moduleTrapAlarmSeverity,
          	                 asmPhysicalAlarmState
          	                }
        	DESCRIPTION
         	       "Indicates the temperature is within  the normal
			range
          	      "
        	::= 50010

bnmTemperatureAboveNormalTrapnum 	TRAP-TYPE
        	ENTERPRISE      basis
        	VARIABLES       {
         	                 lastSequenceNumber,
        	                 shelfNodeName,
         	                 shelfNum,
         	                 shelfSlotNum,
          	                 moduleTrapAlarmSeverity,
          	                 asmPhysicalAlarmState
          	                }
        	 DESCRIPTION
         	       "Indicates the temperature has exceeded the
			 upper limit of its normal range
          	      "
        	::= 50011

bnmDclevelNormalTrapnum	TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         asmPhysicalAlarmState,
	                 asmAlarmUnitNum
                        }
        DESCRIPTION
                "Indicates that the shelf is 
                 within its normal DC level
                "
        ::= 50012

bnmDclevelBelowNormalTrapnum	TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         asmPhysicalAlarmState,
	                 asmAlarmUnitNum
                        }
        DESCRIPTION
                "Indicates that the shelf is DC level
                 below the normal DC level
                "
        ::= 50013

bnmPowersupplyNormalTrapnum  TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         asmPhysicalAlarmState,
                         asmAlarmUnitNum
                        }
        DESCRIPTION
                "Indicates the shelfs power supply status is normal
                "
        ::= 50014

bnmPowersupplyFailedTrapnum  TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         asmPhysicalAlarmState,
                         asmAlarmUnitNum
                        }
        DESCRIPTION
                "Indicates the shelfs power supply status has Failed
                "
        ::= 50015


bnmFanrpmNormalTrapnum       TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         asmPhysicalAlarmState,
                         asmAlarmUnitNum
                        }
        DESCRIPTION
                "Indicates that a particular fan's RPM Normal
                "
        ::= 50016

bnmFanrpmBelowNormalTrapnum       TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         asmPhysicalAlarmState,
                         asmAlarmUnitNum
                        }
        DESCRIPTION
                "Indicates that a particular fan's RPM below
		Normal
                "
        ::= 50017

shelfIntegratedAlarmTrapnum       TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         shelfIntegratedAlarm
                        }
        DESCRIPTION
                "Indicates that the shelf integrated alarm status is changed
		 and sends the status of the shelf integrated alarm
                "
        ::= 50018

-- # 8.1.1
userLoginTrapnum       TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         userName
                        }
        DESCRIPTION
                "Indicates that a user logged
                "
        ::= 50020

userLogoutTrapnum       TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         asmPhysicalAlarmState,
                         userName
                        }
        DESCRIPTION
                "Indicates that a user logout
                "
        ::= 50021

-- # 8.1.1

bnmLmstatusRemovedTrapnum  TRAP-TYPE
         ENTERPRISE   basis
         VARIABLES    {
                       lastSequenceNumber,
                       shelfNodeName,
                       shelfNum,
                       shelfSlotNum,
                       moduleTrapAlarmSeverity,
                       lineModuleState,
                       lineModuleType
                      }
      DESCRIPTION
              "Indicates whether or not a particular line
	       line module has been removed
              "
         ::= 50030

bnmLmstatusInsertedTrapnum  TRAP-TYPE
         ENTERPRISE   basis
         VARIABLES    {
                       lastSequenceNumber,
                       shelfNodeName,
                       shelfNum,
                       shelfSlotNum,
                       moduleTrapAlarmSeverity,
                       lineModuleState,
                       lineModuleType
                      }
      DESCRIPTION
              "Indicates whether or not a particular line
	       line module has been inserted
              "
         ::= 50031

bnmLmMismatchTrapnum  TRAP-TYPE
         ENTERPRISE   basis
         VARIABLES    {
                       lastSequenceNumber,
                       shelfNodeName,
                       shelfNum,
                       shelfSlotNum,
                       moduleTrapAlarmSeverity,
                       lineModuleType,
                       functionModuleType
                      }
      DESCRIPTION
              "Indicates that the front card 
	       does not support the line module.
              "
         ::= 50032


bnmCurclksourceTrapnum  TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         currentClock
                        }
        DESCRIPTION
                "Indicates that the current clock source has changed
                "
        ::= 50050


bnmNolinealarmTrapnum  TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
 	                 dsx3LineNum,
        	         dsx3LineType,
                         lineAlarmState
                        }
        DESCRIPTION
              "Indicates no line alarm
              "
      ::= 50100

bnmlinealarmTrapnum  TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
 	                 dsx3LineNum,
        	         dsx3LineType,
                         lineAlarmState
                        }
        DESCRIPTION
              "Indicates line alarm exists
               rcvRAIstate
               xmtRAIstate
               rcvAISstate
               xmtAISstate
               rcvOOFstate
               rcvLOSstate
              "
      ::= 50101



bnmLineLpbkEnableTrapnum  TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
 	                 dsx3LineNum,
        	         dsx3LineType,
                         lineAlarmState
                        }
        DESCRIPTION
              "Indicates that line loopback has been enabled
              "
      ::= 50102

bnmLineLpbkDisableTrapnum  TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
 	                 dsx3LineNum,
        	         dsx3LineType,
                         lineAlarmState
                        }
        DESCRIPTION
              "Indicates that line loopback has been disabled.
              "
      ::= 50103

bnmStatlinealmTrapnum  TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         dsx3LineNum,
                         dsx3LineType,
                         lineStatisticalAlarmState
                        }
        DESCRIPTION
                "Indicates the current statistical alarm State
                "
        ::= 50131

bnmPlcpAlmActiveTrapnum  TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         dsx3PlcpLineAlarmState,
                         dsx3LineNum,
                         dsx3LineType
                        }
        DESCRIPTION
                "Indicates that no PLCP alarm exists
                "
        ::= 50300
 
bnmPlcpAlmFailedTrapnum  TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         dsx3PlcpLineAlarmState,
                         dsx3LineNum,
                         dsx3LineType
                        }
        DESCRIPTION
                "Indicates that PLCP alarm exists
                "
        ::= 50301
  
 
bnmPlcpStatalmTrapnum TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         dsx3PlcpLineStatisticalAlarmState,
                         dsx3LineNum,
                         dsx3LineType
                        }
        DESCRIPTION
                "PLCP Statistical alarm state change
                "
        ::= 50303

bnmPlcpLpbkEnableTrapnum TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         dsx3PlcpLineAlarmState,
                         dsx3LineNum,
                         dsx3LineType
                        }
        DESCRIPTION
                "Loopback Enable trap
                "
        ::= 50304
 
bnmPlcpLpbkDisableTrapnum TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         dsx3PlcpLineAlarmState,
                         dsx3LineNum,
                         dsx3LineType
                        }
        DESCRIPTION
                "Loopback Disable trap
                "
        ::= 50305
 

 
 

-- ---------------------------------------------------------------------------------------------
--
--    FRSM traps
--
--
-- ---------------------------------------------------------------------------------------------
trapPortActive  		TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         portNum,
                         lineNum,
                         lineType,
                         portState,
                         portSignallingState,
			 portDs0ConfigBitMap
                        }
 
        DESCRIPTION
                "indicates port active
                "
        ::= 50400

trapPortFailed TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         portNum,
                         lineNum,
                         lineType,
                         portState,
                         portSignallingState,
			 portDs0ConfigBitMap
                        }
 
        DESCRIPTION
                "The port fails
                "
        ::= 50401

trapPortDelete TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         portNum,
                         lineNum,
                         lineType,
                         portState,
                         portSignallingState,
			 portDs0ConfigBitMap
                        }
 
        DESCRIPTION
                "The port is deleted
                "
        ::= 50402

trapPortLoopbackEnabled TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         portNum,
                         lineNum,
                         lineType,
                         portState,
                         portSignallingState
                        }
 
        DESCRIPTION
                "The port loopback is enabled
                "
        ::= 50403

trapPortLoopbackDisabled TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       { 
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         portNum,
                         lineNum,
                         lineType,
                         portState,
                         portSignallingState
                        }
 
        DESCRIPTION
                "The port loopback is disabled
                "
        ::= 50404

trapChanActive  TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         lineNum,
                         portNum,
                         chanNum,
                         dLCI,
                         lineType,
                         portDs0ConfigBitMap
                        }
 
        DESCRIPTION
                "Sent when the chan is active
                "
        ::= 50500

trapChanFailed  TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         lineNum,
                         portNum,
                         chanNum,
                         dLCI,
                         lineType,
                         portDs0ConfigBitMap
                        }
 
        DESCRIPTION
                "Sent when the chan is failed
                "
        ::= 50501
 

trapChanDelete  TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         lineNum,
                         portNum,
                         chanNum,
                         dLCI,
                         lineType,
                         portDs0ConfigBitMap
                        }
 
        DESCRIPTION
                "Sent when the chan is deleted
                "
        ::= 50502

trapConfigChange  TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         configChangeTypeBitMap
                        }
 
        DESCRIPTION
                "Sent when the config has changed.
                 The bit map is
                "
        ::= 50600
 
trapSMclearAllCfg TRAP-TYPE
        ENTERPRISE      basis
        VARIABLES       {
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
                         moduleTrapAlarmSeverity,
                         shelfFunctionModuleType
                        }
 
        DESCRIPTION
                "Sent when the config is cleared.
                "
        ::= 50800
 
redActiveatedTrap TRAP-TYPE
	ENTERPRISE	basis
	VARIABLES	{
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
			 redType,
			 redPrimarySlotNum,
			 redSecondarySlotNum
			}
	DESCRIPTION
		"Sent when the redundant card goes active
		"
	::= 50045


redRevertedTrap TRAP-TYPE
	ENTERPRISE	basis
	VARIABLES	{
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
			 redType,
			 redPrimarySlotNum,
			 redSecondarySlotNum
			}
	DESCRIPTION
		"Sent when the redundant card goes active
		"
	::= 50046

bnmConfigMismatchTrap TRAP-TYPE
	ENTERPRISE	basis
	VARIABLES	{
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
			 moduleSlotNumber,
			 functionModuleType
			}
	::= 50040

bnmPeerMismatchTrap TRAP-TYPE
	ENTERPRISE	basis
	VARIABLES	{
                         lastSequenceNumber,
                         shelfNodeName,
                         shelfNum,
                         shelfSlotNum,
			 moduleSlotNumber,
			 functionModuleType
			}
	::= 50041

-- -----------------------------------------------------------------
--
--
-- This file contains all the SNMP TRAPS specific 
--	to AUSM card.
--
-- -----------------------------------------------------------------


trapAusmPlppActive      TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						lineNum,
						lineType,
						tCAlarmState
                        }
 
        DESCRIPTION
                "Indicates that no PLPP alarm exists
                "
        ::= 50900
 
trapAusmPlppInactive	TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						lineNum,
						lineType,
						tCAlarmState
                        }
 
        DESCRIPTION
                "Indicates that  PLPP alarm exists
                "
        ::= 50901
 
trapAusmPlppLbEnable	TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						lineNum,
						lineType,
						tCAlarmState
                        }
 
        DESCRIPTION
                "Indicates that  PLPP Loopback Enabled
                "
        ::= 50904
 
 
trapAusmPlppLbDisable      TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						lineNum,
						lineType,
						tCAlarmState
                        }
 
        DESCRIPTION
                "Indicates that  PLPP Loopback Disabled
                "
        ::= 50905


trapAusmPortActive		TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						ausmPortNum,
						lineNum,
						lineType,
						ausmPortState
                        }
 
        DESCRIPTION
                "Indicates that Port is Active and out of Alarm
                "
        ::= 50910


trapAusmPortFailed		TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						ausmPortNum,
						lineNum,
						lineType,
						ausmPortState
                        }
 
        DESCRIPTION
                "Indicates that Port Failed (In Alarm)
                "
        ::= 50911

trapAusmPortDelete		TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						ausmPortNum,
						lineNum,
						lineType
                        }
 
        DESCRIPTION
                "Indicates that Port is Deleted
                "
        ::= 50912


trapAusmPortSvcRangeChanged	TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						ausmPortNum,
						lineNum,
						lineType,
						ausmPortState
                        }
 
        DESCRIPTION
                "Indicates that Port SVC resource range has changed
                "
        ::= 50913



trapAusmChanActive		TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						lineNum,
						ausmChanPortNum,
						ausmChanNum,
						chanVpi,
						chanVci,
						lineType,
						chanConnType
                        }
 
        DESCRIPTION
                "Sent when a Channel becomes active
                "
        ::= 50920


trapAusmChanFailed		TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						lineNum,
						ausmChanPortNum,
						ausmChanNum,
						chanVpi,
						chanVci,
						lineType,
						chanConnType
                        }
 
        DESCRIPTION
                "Sent when a Channel fails (In alarm)

                "
        ::= 50921

trapAusmChanDelete		TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						lineNum,
						ausmChanPortNum,
						ausmChanNum,
						chanVpi,
						chanVci,
						lineType,
						chanConnType
                        }
 
        DESCRIPTION
                "Sent when a Channel is deleted
                "
        ::= 50922


-- -----------------------------------------------------------------
--
--
-- This file contains all the SNMP TRAPS specific 
--	to CESM card.
--
-- -----------------------------------------------------------------

trapCesmChanActive		TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						lineNum,
						cesCnfChanNum
                        }
 
        DESCRIPTION
                "Sent when a CESM Channel becomes active
                "
        ::= 50950

trapCesmChanDelete		TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						lineNum,
						cesCnfChanNum
                        }
 
        DESCRIPTION
                "Sent when a CESM Channel is deleted
                "
        ::= 50952


trapCesmChanUnderflow	TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						lineNum,
						cesCnfChanNum
                        }
 
        DESCRIPTION
                "Sent when a CESM Channel egress underflows
                "
        ::= 50960

trapCesmChanOverflow	TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						lineNum,
						cesCnfChanNum
                        }
 
        DESCRIPTION
                "Sent when a CESM Channel egress overflows
                "
        ::= 50961


trapCesmChanCellLoss	TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						lineNum,
						cesCnfChanNum
                        }
 
        DESCRIPTION
                "Sent when a CESM Channel Egress cell  loss occurs
                "
        ::= 50962



-- -----------------------------------------------------------------
--
--
-- This file contains all the SNMP TRAPS specific 
-- to AIMSM and AIMNM cards. It includes the traps generated that
-- are specific to AIMUX functionality as well as the traps specific
-- only to AIMNM.
--
-- -----------------------------------------------------------------


--
-- Traps specific to AIMUX functionality
--

trapAimuxDisabled       TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						aimuxStatePortNum,
						listLinksPresentInAimuxGroup,
						aimuxPortState
                        }
 
        DESCRIPTION
                "Indicates that AIMUX group is disabled
                "
        ::= 50230
 
trapAimuxActive			TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						aimuxStatePortNum,
						listLinksPresentInAimuxGroup,
						aimuxPortState
                        }
 
        DESCRIPTION
                "Indicates that AIMUX group is active
                "
        ::= 50231
 
trapAimuxBandwidthChanged TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       {
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						aimuxStatePortNum,
						listLinksPresentInAimuxGroup,
						aimuxPortState
                        }
 
        DESCRIPTION
                "Indicates that the bandwidth of an AIMUX group changed
				 due to addition/deletion of links to/from the AIMUX group
                "
        ::= 50232
 
 
trapAimuxFailedAcpTimeout TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       { 
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						aimuxStatePortNum,
						listLinksPresentInAimuxGroup,
						aimuxPortState
                        }
 
        DESCRIPTION
                "Indicates that the AIMUX group was brought down
				 due to ACP cells not being received within the
				 expected interval.
                "
        ::= 50233


trapAimuxFailedMajorAlm	TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       {
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						aimuxStatePortNum,
						listLinksPresentInAimuxGroup,
						aimuxPortState
                        }
 
        DESCRIPTION
                "Indicates that the AIMUX group failed due to major
				 alarm on the AIMUX group
                "
        ::= 50234

trapAimuxFailedSigFailure	TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       {
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						aimuxStatePortNum,
						listLinksPresentInAimuxGroup,
						aimuxPortState
                        }
 
        DESCRIPTION
                "Indicates that the AIMUX group failed due to an
				 AIMUX signalling failure (eg: ACP cells are being
				 received but the expected ones are not being received
				 or an unexpected change in AIMUX-ID/LID on a link 
				 occurred etc
                "
        ::= 50235

trapAimuxFailedBadDiffDelay	TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       {
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						aimuxStatePortNum,
						listLinksPresentInAimuxGroup,
						aimuxObsDiffDelay,
						aimuxPortState
                        }
 
        DESCRIPTION
                "Indicates that the AIMUX group failed due to differential
				 delay exceeding the maximum permissible for this
				 AIMUX group. The variable 'aimuxObsDiffDelay' gives the
				 current observed differential delay for this AIMUX group
                "
        ::= 50236

--
-- Traps for Local OAM cells (only in AIMNM)
--
trapAimuxRcvAisLoam     TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       {
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						aimuxStatePortNum,
						listLinksPresentInAimuxGroup,
						aimuxObsDiffDelay,
						aimuxPortState
                        }
 
        DESCRIPTION
                "Indicates that the AIMUX is receiving a local OAM cell
				 AIS from the remote end
                "
        ::= 50237

trapAimuxRcvRdiLoam     TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       {
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						aimuxStatePortNum,
						listLinksPresentInAimuxGroup,
						aimuxObsDiffDelay,
						aimuxPortState
                        }
 
        DESCRIPTION
                "Indicates that the AIMUX is receiving a local OAM cell
				 RDI from the remote end
                "
        ::= 50238

--
-- Traps specific only to AIMNM
--

trapAimnmClockChange   	TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       {
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						currentClockSource,
						primaryClockSource,
						secondaryClockSource
                        }
 
        DESCRIPTION
                "Indicates that the current clock source changed from
				 primary to secondary
                "
        ::= 50240


trapAimnmBadClockSource TRAP-TYPE
		ENTERPRISE      basis
		VARIABLES       {
						lastSequenceNumber,
						shelfNodeName,
						shelfNum,
						shelfSlotNum,
						moduleTrapAlarmSeverity,
						currentClockSource,
						primaryClockSource,
						secondaryClockSource
                        }
 
        DESCRIPTION
                "Indicates that no good clock source is available
                "
        ::= 50241
END
